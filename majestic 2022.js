{
  (() => {
    const a0_0x5d0ded = {
      _0x2b30db: 0x2437
    },
          a0_0xaf9e89 = {
      _0x581e66: 0x3d7,
      _0x50becd: 0x49b,
      _0x4cf792: 0x1d5a
    },
          a0_0x5e4618 = {
      _0x30e6af: 0x16b0
    },
          a0_0xc1e450 = {
      _0x453b47: 0x1d5a
    },
          a0_0x43b5bf = {
      _0x56a937: 0x19d2,
      _0x31e630: 0x19d2
    },
          a0_0x5413bb = {
      _0x4af2c0: 0x269,
      _0x556f41: 0x20c4
    },
          a0_0x2b8e21 = {
      _0x24363b: 0x24bc,
      _0x4f1959: 0x2118
    },
          a0_0x52754d = {
      _0x432643: 0x13ae,
      _0x2a8208: 0xfcd,
      _0xe49b96: 0x14d2,
      _0x51b9d2: 0x2413,
      _0x1388e6: 0x2413,
      _0x4752bc: 0x14d2,
      _0x5aff33: 0x13ae,
      _0x1fd6de: 0x1da5,
      _0x430dac: 0xb2f,
      _0x409057: 0x10e4,
      _0x591efa: 0x82d,
      _0x5754b9: 0x1a5,
      _0x333d0c: 0x14d2,
      _0x58d6e2: 0x211b,
      _0x34d0fc: 0xf79,
      _0x4610e7: 0x1da5,
      _0x53d0e5: 0x1da5,
      _0x3b1e3d: 0xd0a,
      _0x46f0e7: 0xf32,
      _0x24aff7: 0x20db,
      _0x1ae4c7: 0x14d2,
      _0x28e6c1: 0x19d9
    },
          a0_0x11ab83 = {
      _0x2b7941: 0x1d06,
      _0x55ad30: 0x1aef,
      _0x4c5281: 0x1584,
      _0x24142d: 0x9e3,
      _0x5077d9: 0x11dd,
      _0x3375d2: 0x14d2,
      _0x49c0b3: 0x19c5,
      _0x46b05c: 0x121d
    },
          a0_0x17d728 = {
      _0x4e6518: 0x1d06,
      _0x30b152: 0x164a,
      _0x3b18df: 0xffb,
      _0x31ae27: 0x1da5,
      _0x44321b: 0xd04,
      _0x24e6c7: 0x1a5,
      _0x417a57: 0x16af,
      _0x537287: 0xd04,
      _0x1ade4b: 0xffb,
      _0x38771f: 0x14d2,
      _0x2256b7: 0x1da5,
      _0x1826ce: 0x1eb8,
      _0x10f300: 0x1a5,
      _0xb1872f: 0x1290
    },
          a0_0x2b817e = {
      _0x172d2e: 0x19d2,
      _0x405b7d: 0x13f4,
      _0x5a80d7: 0x1e94
    },
          a0_0x4288ef = {
      _0x1c220f: 0x1aef,
      _0xe43de6: 0x9e3
    },
          a0_0x2278ed = {
      _0x321427: 0x1aef,
      _0x1989f5: 0x21e0,
      _0x480f88: 0x20a1
    },
          a0_0x5dde0c = {
      _0x317fdd: 0x1d06,
      _0x271038: 0x1aef,
      _0xb0c1af: 0x2143
    },
          a0_0x47f995 = {
      _0x37aebd: 0x55b,
      _0x1c9922: 0x14d2,
      _0x19e9be: 0xabc,
      _0x5ed2c4: 0x19c5,
      _0x109c04: 0x1313
    },
          a0_0x46b326 = {
      _0x5d1207: 0x14d2,
      _0x549b9d: 0xde2,
      _0x24ba68: 0x19c5,
      _0x483afb: 0x19c5,
      _0x1e4ec0: 0x14d4,
      _0x4ee8af: 0x16ba,
      _0x53b1c6: 0x1dac,
      _0x3fc296: 0x1d59,
      _0x5dd6d2: 0x1331
    },
          a0_0x403f65 = {
      _0x1b0da3: 0x1d66,
      _0x130c30: 0x1331
    },
          a0_0x382e49 = {
      _0x21962e: 0x1d59
    },
          a0_0x4d4abe = {
      _0x429ee0: 0x235b,
      _0x393ed4: 0x54f,
      _0x2bd3de: 0x598,
      _0x86ee55: 0xe6d,
      _0x3a9a9f: 0x14d2,
      _0x5efd8a: 0x19c5,
      _0x151ddb: 0x1d8d
    },
          a0_0x322207 = {
      _0xb3b577: 0x535,
      _0x7bfb: 0x781,
      _0x2e6ee6: 0x1289,
      _0x3e73a6: 0x1f41,
      _0x14368b: 0x668,
      _0x2b8f9c: 0x1d66,
      _0x39fca2: 0x1d66,
      _0x5f2124: 0x1d7c,
      _0xd5b967: 0x1870,
      _0xaefb12: 0x535,
      _0x3791b8: 0x1de9,
      _0x598d7b: 0x1870,
      _0x32afb0: 0x1ac7,
      _0x578523: 0x1d66,
      _0x50db53: 0xb4a,
      _0xa85840: 0x1d66,
      _0x3493cb: 0x1870,
      _0x5bb5fc: 0x2292,
      _0x279d8e: 0x3e9
    },
          a0_0x2f8da5 = {
      _0x34b85e: 0x1d66,
      _0xfb0433: 0x2422,
      _0x1ca2bf: 0x1f30,
      _0x16835b: 0x1e3d,
      _0x169d9: 0x1aab,
      _0xc78151: 0x136c,
      _0x4d243f: 0x103e,
      _0x429eb1: 0x4c2,
      _0x14267e: 0x268
    },
          a0_0x214356 = {
      _0x5880b9: 0x235b,
      _0x4f1612: 0xe6d,
      _0x2c5354: 0x19c5
    },
          a0_0x33e24c = {
      _0xd8cf9a: 0x1aab,
      _0x3c4414: 0x16c5,
      _0x5be186: 0x253d,
      _0x343088: 0x12f7,
      _0x456da8: 0x14d2,
      _0x1bf9d6: 0x1da5
    },
          a0_0x3099a3 = {
      _0x4e71eb: 0x16a9,
      _0x1143c3: 0x19c5,
      _0x25cc82: 0xbab,
      _0x3429e1: 0x14d2,
      _0x496858: 0x19c5,
      _0x20fcd1: 0x19c5,
      _0x332412: 0x19c5
    },
          a0_0x18f251 = {
      _0xcf2e37: 0x21ae
    },
          a0_0x42c919 = {
      _0x3cce94: 0x1fff,
      _0x48b585: 0x1554,
      _0x2db38f: 0x19c5,
      _0x402c6e: 0x127c,
      _0x5dc6a6: 0x14d2,
      _0x3c1672: 0x19c5,
      _0x1115cf: 0x10bc
    },
          a0_0xd9f123 = {
      _0x540731: 0x10aa,
      _0x3a09f7: 0x1d66,
      _0x59920e: 0x13b4,
      _0x4417d8: 0x13b4,
      _0x4e40ff: 0x12e9,
      _0x416b3c: 0x1d89,
      _0x5bbae6: 0x1f30,
      _0x115c71: 0x1f30,
      _0x36324a: 0x123b,
      _0x3fc478: 0x19d2,
      _0x1e12bf: 0x1d2,
      _0x36380f: 0x1d89,
      _0x5bd018: 0xf79,
      _0x4bba7e: 0x17a0,
      _0x22e57d: 0x1f30,
      _0x58d24b: 0x1791,
      _0x663401: 0xffb,
      _0x362650: 0x235b,
      _0x37c38d: 0x19c5,
      _0x5f07ec: 0x1558,
      _0x37e58c: 0x14d2,
      _0x2b1204: 0x14d2,
      _0x4bbe3e: 0x19c5,
      _0x28df2c: 0x19c5,
      _0x4c50d6: 0x1105,
      _0x45fda5: 0x13b9,
      _0x1b4a2a: 0x19c5,
      _0x4a274d: 0x121d
    },
          a0_0x17d106 = {
      _0x4543b2: 0xffb,
      _0x243b4a: 0x13f0,
      _0x41875b: 0x535,
      _0x4caa67: 0x253d,
      _0x4b66af: 0x93c,
      _0x55cd16: 0x13f0,
      _0x15ef3d: 0x23a2,
      _0xc106c7: 0x233f,
      _0x4a279b: 0x235b,
      _0xba1004: 0x12e5,
      _0x558263: 0x123b,
      _0x9bb9f0: 0x535
    },
          a0_0x251699 = {
      _0x2f49cc: 0x11dc,
      _0x347dc6: 0x11dc,
      _0x3a06a2: 0x17f
    },
          a0_0x1e7447 = {
      _0x40eb3d: 0x628,
      _0x14316c: 0x9c8,
      _0x3f5602: 0x1ec5,
      _0x357b9b: 0x213a,
      _0x17016d: 0x235b,
      _0x678108: 0x185e,
      _0x13dca2: 0xc95,
      _0x2bec79: 0x146b,
      _0x42636b: 0x12e5,
      _0x3f8467: 0x2288,
      _0x30a227: 0x235b,
      _0x317f6e: 0x1892,
      _0x2e2f44: 0x235b,
      _0x40da68: 0x185e,
      _0x1cdee1: 0x1538,
      _0x474901: 0x14d2,
      _0x161104: 0x1da5,
      _0x25eede: 0x584,
      _0x1deb73: 0x176c,
      _0x3f53be: 0x123b,
      _0x2e4eda: 0x6da,
      _0x50753c: 0x5e2,
      _0x16633c: 0x1a50,
      _0xbbe4f1: 0x1791,
      _0x530b10: 0x1d2,
      _0x176ce9: 0x19d2,
      _0x58b045: 0xa27,
      _0x5b969d: 0xba6,
      _0x5665a4: 0x1d89,
      _0x517725: 0x23ac,
      _0x37b0be: 0x2323,
      _0x797cc4: 0x21e0,
      _0x454a1f: 0x19d2,
      _0x14f5e3: 0x1bfc
    },
          a0_0x106293 = {
      _0x324a5e: 0xca4,
      _0xcd80d1: 0x21e0,
      _0x13bc70: 0x1a2c,
      _0x530d6e: 0x135a,
      _0x16bf54: 0x1a2c
    },
          a0_0x1a2271 = {
      _0x58951d: 0xca4
    },
          a0_0x239120 = {
      _0x97e693: 0x235b,
      _0x4d0fc1: 0x1d66,
      _0x3512fb: 0x1f30,
      _0x3544ca: 0x1f30
    },
          a0_0x1f8df5 = {
      _0x4e9dd0: 0xba6,
      _0x4102e2: 0x734,
      _0x27cecb: 0xd28,
      _0x4724d2: 0x1d55,
      _0xb83ef9: 0x1c9a,
      _0x8f3370: 0x1277,
      _0x425438: 0x1157,
      _0x2e5b77: 0x6da,
      _0x9dc41e: 0x1277,
      _0x260558: 0x1277,
      _0x1818b2: 0x118f,
      _0x547a12: 0x1f30,
      _0x4c5a2e: 0x1f30,
      _0x2d1b02: 0x11dc,
      _0x3a79ea: 0x2422,
      _0x4915fb: 0x1f30,
      _0x31b3b4: 0x1e3d,
      _0x434d8f: 0x744,
      _0x1d03a1: 0xba6,
      _0x1f10fb: 0x535,
      _0x2aecb8: 0x1c66
    },
          a0_0x2d2749 = {
      _0x4774ae: 0x14d2,
      _0x5e296b: 0x19c5,
      _0x1e4a83: 0x1808,
      _0x2a5263: 0x19c5
    },
          a0_0x4f3b30 = {
      _0x4baa1f: 0x2292,
      _0x32c208: 0x2682,
      _0x20f6bb: 0x1da5
    },
          a0_0x39d7b9 = {
      _0x541728: 0x1a5,
      _0x107f36: 0x10fa,
      _0x443696: 0x1dd2,
      _0x510e07: 0x1c66
    },
          a0_0x1a2070 = {
      _0x585307: 0x1aab,
      _0x224d45: 0x2405
    },
          a0_0x2efff = {
      _0x1acd58: 0x14d2,
      _0x57a0cd: 0x19c5
    },
          a0_0x110367 = {
      _0x1eeac7: 0x235b,
      _0x32c9d6: 0x185e,
      _0x27395b: 0x2379,
      _0x4aadb2: 0x364,
      _0xf6c2a: 0x216e,
      _0x8ab324: 0x1c87,
      _0x2f63ac: 0xc8b,
      _0x1ce777: 0x1d66,
      _0x442b32: 0x15e4,
      _0x41155b: 0x12e9,
      _0x2ce621: 0x24fa,
      _0x115084: 0x20dc,
      _0x2a946a: 0x14d2,
      _0x53b261: 0x19c5,
      _0x2dca77: 0x249d,
      _0x3bbf23: 0x14d2
    },
          a0_0xf84e99 = {
      _0x1a3920: 0x24fa,
      _0x399351: 0x19c5,
      _0xe3f619: 0x1558,
      _0x5de832: 0x20dc,
      _0x3cad8d: 0x13b9,
      _0x50def5: 0x19c5,
      _0x2571be: 0x121d
    },
          a0_0x5aba55 = {
      _0x5a356f: 0x259f,
      _0x1ebfc8: 0x17f
    },
          a0_0x4c6641 = {
      _0x52bd6d: 0x259f,
      _0x3e0407: 0x17f,
      _0x5ac2af: 0x978,
      _0x49f036: 0x1ab,
      _0x32d696: 0x1afd,
      _0x6b18b3: 0x181b,
      _0x413728: 0x15ab,
      _0x2d43db: 0x1c9c
    },
          a0_0x532107 = {
      _0x4f40b1: 0x9b4,
      _0x2d57af: 0x19a3,
      _0x5942c6: 0x19c5,
      _0x9dbbef: 0x14d2,
      _0x46536f: 0x1558,
      _0x596ee2: 0x20dc,
      _0x37fb00: 0x1d66,
      _0x465481: 0x20e3,
      _0x26434c: 0x20fe
    },
          a0_0x4827ee = {
      _0x42308b: 0x4ee,
      _0x45ecb9: 0xb80,
      _0x251920: 0x12dd
    },
          a0_0x613963 = {
      _0xc32882: 0x54d,
      _0x3c0adb: 0x12dd,
      _0x4ae1ba: 0x2121,
      _0x2aa9ba: 0x232b,
      _0x3ae52d: 0x2303,
      _0x1d8694: 0x1019
    },
          a0_0x44270b = {
      _0x2496df: 0xe9f,
      _0x36b45d: 0x1bdb,
      _0x5923ba: 0xf35,
      _0x43666c: 0x8a3,
      _0x2f0470: 0x535,
      _0x15697f: 0x1985,
      _0x5d3f85: 0x2486,
      _0x11866f: 0x1c2f,
      _0x22aeab: 0x21c4,
      _0x5c40ff: 0x2230,
      _0x3892f0: 0xffb
    },
          a0_0x1a6274 = {
      _0x51fe57: 0x1dfd
    },
          a0_0x181d8b = {
      _0x919c17: 0xffb,
      _0x3373d9: 0x8a3,
      _0x32c298: 0x1bdb,
      _0x2eedc3: 0x54d,
      _0xd360c4: 0x9a8,
      _0x19a50d: 0x1d66,
      _0x11b15e: 0x130a
    },
          a0_0xa5e526 = {
      _0x1fa39b: 0x20de
    },
          a0_0x538810 = {
      _0x492322: 0x1d66,
      _0x5e9a1f: 0x14d2
    },
          a0_0x53a74f = {
      _0x2be6a0: 0x1d48
    },
          a0_0x562c5a = {
      _0xb38401: 0x1706,
      _0x26f412: 0x1e35
    },
          a0_0x3aeec2 = {
      _0x45d67f: 0x1d66,
      _0x338c4a: 0x14d2,
      _0x385dfe: 0x1558,
      _0x23aff5: 0x19c5,
      _0x49fea9: 0x2580
    },
          a0_0xe46c9c = {
      _0x328315: 0x535,
      _0x29e076: 0x253d,
      _0x3bb749: 0x19d2,
      _0x4f4f48: 0xe6d,
      _0x5ee3b9: 0xe6d,
      _0x8206d3: 0x11dc,
      _0x429f62: 0xe6d
    },
          a0_0x2add2f = {
      _0x395faf: 0x235b,
      _0x1673d0: 0x14d2,
      _0x272e88: 0x19c5,
      _0x51f4ed: 0x14d2,
      _0x3ad725: 0x19c5,
      _0x5c526f: 0x19c5
    },
          a0_0x201740 = {
      _0x175af9: 0x623,
      _0x44757e: 0x182d,
      _0x7deb33: 0x6da,
      _0x14deaf: 0xfa4,
      _0x553261: 0xfa4
    },
          a0_0x5c51e2 = {
      _0x16bf61: 0x13b4,
      _0x1700cd: 0x535,
      _0x29acf9: 0x623,
      _0x4597a4: 0x6da,
      _0x3c2691: 0x19ca,
      _0x1c8f61: 0x37c,
      _0x5638be: 0x6d1,
      _0x13c501: 0x19ca,
      _0x58e705: 0x19ca,
      _0xaeeb04: 0xa73
    },
          a0_0x33e7e9 = {
      _0x533e1c: 0x185e,
      _0x44f040: 0x1029,
      _0x173d93: 0x14d2,
      _0x547db5: 0x1105,
      _0x2c5309: 0x1088,
      _0x424ff3: 0x1244,
      _0x2436bb: 0x1f3d
    },
          a0_0x27495b = {
      _0xc81700: 0x1da5,
      _0x2b512e: 0xaa7,
      _0x213659: 0xf6b,
      _0xd8d833: 0xd79,
      _0x1a0570: 0xa9d,
      _0x993994: 0x16c5,
      _0x2c2a08: 0x4b9,
      _0x380769: 0x2292,
      _0x5a4c59: 0x220f,
      _0xcb75f1: 0x1a5,
      _0x273e82: 0x92f,
      _0x547db2: 0x3e9
    },
          a0_0x4971d1 = {
      _0x773e1c: 0x14d2,
      _0x4d6878: 0xaa7,
      _0x47b6e0: 0x1820,
      _0x398fe1: 0x1291,
      _0x267ce5: 0x4b9,
      _0x32addd: 0x1f30,
      _0x2d230b: 0x145c,
      _0xd3217d: 0x145c,
      _0x1398e3: 0x1f41,
      _0x316d9d: 0x145c,
      _0xd27b77: 0x7fe,
      _0xa93b6a: 0x248,
      _0x2aab3a: 0x1d55,
      _0x4f1ed3: 0x2521,
      _0x464bdb: 0x1f30,
      _0x1ba060: 0x1d66,
      _0x54a584: 0x2072,
      _0x282c0b: 0xd79,
      _0x515ca4: 0x7a1,
      _0xd8bd6d: 0x1d55,
      _0x317f8c: 0x1f30,
      _0x45d481: 0x10f6,
      _0x3b14d7: 0x535,
      _0x27c2b0: 0xf6b,
      _0x4608ec: 0x609,
      _0xb1e2b2: 0x165d,
      _0x4c38e6: 0xf6b,
      _0x1dc7af: 0x1a5,
      _0x53f11c: 0x92f,
      _0x2db944: 0x3e9,
      _0x4ae8bc: 0x1be3
    },
          a0_0x3e1bb8 = {
      _0x150a8a: 0x4b9,
      _0xd08b20: 0x1da5,
      _0x1a5271: 0x59d
    },
          a0_0x13e95d = {
      _0x12e0c4: 0x235b,
      _0x3a24d2: 0x185e,
      _0x1ecc43: 0x14d2,
      _0x45892f: 0xcd6,
      _0x4e03d5: 0xb5b,
      _0x51a549: 0x19c5,
      _0x14394e: 0x19c5,
      _0x17ca60: 0xb5a,
      _0x1479b5: 0x19c5,
      _0x2b3805: 0xfaf,
      _0x22aa03: 0x19c5
    },
          a0_0x2ecb30 = {
      _0x48cf80: 0x235b,
      _0x3b9c86: 0x185e,
      _0x35a78e: 0x1293,
      _0x5eaaa3: 0x185c,
      _0x321a7c: 0x20b4,
      _0x27b16a: 0x535
    },
          a0_0x507568 = {
      _0x35be85: 0x74c,
      _0x56b825: 0x12a3
    },
          a0_0x2e65a4 = {
      _0x1160d2: 0x19e6,
      _0x573ec0: 0x2530
    },
          a0_0x55f94b = {
      _0x578952: 0xc53,
      _0x5495f8: 0x1e58,
      _0x51df89: 0xc5c,
      _0x26d197: 0xea8,
      _0x553cbd: 0x165b,
      _0x54fb56: 0x185e,
      _0xc3e9a5: 0x10aa,
      _0x11ceb5: 0xc84,
      _0x33d47a: 0x19d2,
      _0x217031: 0x14d2,
      _0x4c3648: 0x1558,
      _0x598eaf: 0x19c5,
      _0x23b865: 0x20dc,
      _0x294b43: 0x14d2
    },
          a0_0x398692 = {
      _0x105374: 0x6ce
    },
          a0_0x2b1c61 = {
      _0x2cda19: 0x11f5,
      _0xb6bcb2: 0x19d2,
      _0x27c2e7: 0x1567,
      _0x279fc3: 0x1567,
      _0x35d305: 0xefc
    },
          a0_0x4aba47 = {
      _0x3b2597: 0x1f5a,
      _0x3fe339: 0x1a1c
    },
          a0_0x3356c7 = {
      _0x83ee55: 0x72f,
      _0x277e56: 0x72f,
      _0xe7c503: 0x72f,
      _0x261d3b: 0x1a54,
      _0x2ae6d8: 0x1a54,
      _0x15e30e: 0x1a54
    },
          a0_0x5acc92 = {
      _0x4ef186: 0x14b4,
      _0x5ed4ae: 0x14d2,
      _0x596e60: 0x19c5,
      _0x2168f9: 0xd17,
      _0x9316b6: 0x19c5,
      _0x4e93f6: 0x175c,
      _0x426926: 0x14d2,
      _0x4da31: 0x2106,
      _0x29f2f3: 0x14d2,
      _0x338746: 0x19c5,
      _0x92028c: 0x11d8,
      _0x476c64: 0x535
    },
          a0_0x1234df = {
      _0x10b168: 0x4b9,
      _0x3c24bb: 0xb3d,
      _0x3a6429: 0x255a,
      _0x36c345: 0x360,
      _0x481a71: 0x535,
      _0x57e435: 0x253d,
      _0x7c1bb5: 0xd3f
    },
          a0_0x32743c = {
      _0x21704f: 0x1291,
      _0x2e3a37: 0xb3d,
      _0xb5b880: 0x10bf,
      _0x4ed338: 0x2379,
      _0x25b9c2: 0x162a,
      _0x31c67d: 0xb3d
    },
          a0_0x182e88 = {
      _0x38a1d8: 0x19e6,
      _0x5a0ded: 0x150e,
      _0x4d1689: 0x1995,
      _0xcf4151: 0x2ab,
      _0x6df8f9: 0x2001
    },
          a0_0x2bd71b = {
      _0x4ce79b: 0x19e6,
      _0x4ef25f: 0x16c5,
      _0x5393e3: 0xb3d,
      _0x2fcbb4: 0x535,
      _0x535b22: 0x250d,
      _0x5b6801: 0x14b3,
      _0x3e106a: 0xeac,
      _0x4c6a84: 0x535,
      _0xb90680: 0x243a,
      _0x5bc170: 0x250d,
      _0x10d5a3: 0x250d,
      _0x6720c9: 0x14b3,
      _0x5c940b: 0x2605,
      _0x20f772: 0x1c43,
      _0x12635d: 0x1c5f,
      _0x2f0f3e: 0x138b,
      _0x458cfc: 0x138b,
      _0x538bb8: 0xa9f,
      _0x3c67f6: 0x258d,
      _0x2ff3cd: 0x14b4,
      _0x461f81: 0x1cc6,
      _0x285db2: 0x2001,
      _0x26ee70: 0x10bf
    },
          a0_0x1ae8c7 = {
      _0x479003: 0x1d66,
      _0x73ac88: 0x11f5,
      _0x21419c: 0x2379,
      _0x8a939a: 0x1d66,
      _0x11fe41: 0x1fa0,
      _0x4d1159: 0xba3,
      _0x43f9d4: 0x1d7c,
      _0x3c3d49: 0x1d66,
      _0x4e0ccb: 0x1063
    },
          a0_0x2fcadf = {
      _0x3d8e4c: 0x1820,
      _0x3b9a1e: 0x16c5,
      _0x31619e: 0x14b4,
      _0x24a672: 0x2400
    },
          a0_0x1fb465 = {
      _0x4dacb1: 0x150e,
      _0x23112a: 0x150e,
      _0x452fea: 0x2530,
      _0x32e8eb: 0x1d66,
      _0x10ee0b: 0x9ab,
      _0x1aa48e: 0x1fe9,
      _0x2e4649: 0x2140,
      _0x593c4d: 0x150e,
      _0x26e940: 0x535,
      _0x21fb5e: 0x1063
    },
          a0_0x46fdb7 = {
      _0x320ba3: 0x1820,
      _0x4d0b70: 0x1d7c,
      _0x292d72: 0x1d7c,
      _0x5b6437: 0x13b4,
      _0x662e5b: 0x1b0b,
      _0x16a1fe: 0x11f5,
      _0x2335bb: 0x1994,
      _0x5b9dda: 0xa62,
      _0x2f3cd7: 0x1994,
      _0x58f947: 0x2530,
      _0x23ad07: 0x1277,
      _0xf04f17: 0x1277,
      _0x13288f: 0x1e3d,
      _0x4ca6f6: 0x18ee,
      _0x2252a8: 0x150e,
      _0x37bd12: 0x1e35,
      _0x23d384: 0x1fa0,
      _0xa72961: 0x82d
    },
          a0_0x4d373c = {
      _0x3fa707: 0x121d,
      _0x15ec3b: 0x19c5,
      _0x589997: 0x2106,
      _0x340981: 0x14d2,
      _0x2fc0d2: 0x254e,
      _0x1f019b: 0x14d2,
      _0x23eb9b: 0x19c5,
      _0x1d3025: 0x19c5
    },
          a0_0xa414fa = {
      _0x594164: 0x1820,
      _0x3173b3: 0x2042,
      _0x4dda7e: 0x21e0,
      _0x166dce: 0x1748,
      _0x262b66: 0xa73,
      _0x418858: 0xa73
    },
          a0_0x59b234 = {
      _0x6d5720: 0x2001
    },
          a0_0x246d9b = {
      _0x2862c6: 0x2001
    },
          a0_0x26d687 = {
      _0x45e00e: 0x185e,
      _0x269553: 0x14d2,
      _0x265a5d: 0x19c5,
      _0x1acebe: 0x14d2,
      _0xea7bc5: 0x1f6d,
      _0x4acd1a: 0x19c5,
      _0x103af6: 0x753
    },
          a0_0x376c72 = {
      _0x259ea9: 0x242c,
      _0x8b02b3: 0x535,
      _0x368e38: 0x1a3e,
      _0x30b67f: 0x13b4,
      _0x2ea4f4: 0x1d66,
      _0xf3177e: 0x4b9,
      _0x23d5a9: 0x1fa3,
      _0x8e65c3: 0x4b9,
      _0x5f460d: 0x14d2,
      _0xde29b0: 0x1090
    },
          a0_0x421150 = {
      _0x19eb77: 0x1657
    },
          a0_0x57b436 = {
      _0x171fa6: 0x235b,
      _0x5b9372: 0x25aa,
      _0x4d5413: 0x583,
      _0x3ada74: 0x2ca,
      _0x4b79f3: 0x765,
      _0x33f630: 0xf3e,
      _0x413ef8: 0x19cc,
      _0x409a5f: 0x54c,
      _0x550afe: 0xb69,
      _0x39dec3: 0x146d,
      _0x1f1480: 0x15a1,
      _0x59c127: 0xaee,
      _0x33483d: 0x1afc,
      _0x29a1b8: 0x1678,
      _0xc89b40: 0x1d66,
      _0x32cf5b: 0x1992,
      _0xa792c1: 0x7a5,
      _0x369dd2: 0x14d2,
      _0x4bddfc: 0x254e,
      _0x4b196f: 0x14d2,
      _0x42c650: 0x19c5,
      _0x5e76f9: 0x2106,
      _0x48f1b8: 0x14d2,
      _0xe255a2: 0x19c5,
      _0x456db6: 0x121d
    },
          a0_0x3520e5 = {
      _0x1bc59e: 0x2530,
      _0x5a6177: 0x1f30
    },
          a0_0x3a40d8 = {
      _0x1896e5: 0x1d66,
      _0x1af279: 0x1992,
      _0x11cf38: 0x24fe,
      _0x520234: 0x13ba,
      _0x2b3123: 0x2cc,
      _0x4873a2: 0x535,
      _0x8d0077: 0x1f0d,
      _0x6ba014: 0x535,
      _0x1627ce: 0x1baa,
      _0x5102bf: 0x1a3e,
      _0x376e0c: 0x1992,
      _0x3d4b8b: 0x1c55,
      _0x5be630: 0x4b9,
      _0x82e2ad: 0x1ec5,
      _0x32c92f: 0xc95,
      _0x8ac596: 0xb5b,
      _0x300053: 0x41d,
      _0x6f0059: 0xbc0,
      _0x279eeb: 0x165,
      _0x166ae7: 0x279,
      _0x1f9aaf: 0x1820,
      _0x442082: 0x535,
      _0x3cdc47: 0x1a50,
      _0x29c363: 0x1f30,
      _0x34cec5: 0x1f30,
      _0x3ee8f9: 0xe3b,
      _0x3978b4: 0x115b,
      _0x511011: 0x115b,
      _0x20ad5d: 0xd23,
      _0x2a6172: 0x2530,
      _0x123356: 0xc8b,
      _0x26dfb4: 0x3e4
    },
          a0_0x647601 = {
      _0x3022e5: 0x235b,
      _0x5883b6: 0x19c5,
      _0x39a9b4: 0x14d2,
      _0x585ce7: 0x14d2,
      _0x17be82: 0x753,
      _0x4b76a3: 0x14d2,
      _0x580ce0: 0x4f5,
      _0x2750f6: 0x121d,
      _0x1d49a0: 0x2106,
      _0x1d1b8e: 0x19c5,
      _0x1ff431: 0x8cf,
      _0x54a044: 0x14d2,
      _0x19a288: 0x14d2
    },
          a0_0x4cfec6 = {
      _0x52566a: 0x4b9
    },
          a0_0x2a7e5 = {
      _0x35fe86: 0x1d66,
      _0x2ba0e2: 0x24fe,
      _0x1ff169: 0x1d66,
      _0xd59e41: 0x24fe
    },
          a0_0x348e00 = {
      _0x420d55: 0x535,
      _0x109de4: 0x1bb5,
      _0x417fce: 0x10b1
    },
          a0_0x2738fa = {
      _0x4d1f78: 0x1820,
      _0x1c92d8: 0x16c5,
      _0x4cba3c: 0x4b9,
      _0x2e9793: 0x2530,
      _0x5333e9: 0x4b9,
      _0x48bf41: 0x1d66,
      _0x1b16dd: 0xf2f,
      _0x407aa9: 0x1667,
      _0x2abe0e: 0x23b9,
      _0x54050b: 0x2530,
      _0x425215: 0x1d66,
      _0x8d4cc1: 0x2596,
      _0x13f1ff: 0x1d57,
      _0x2a4a92: 0x23b9,
      _0x412daa: 0x2530,
      _0xac3e5: 0x1d66,
      _0x110cea: 0x23b9
    },
          a0_0x5480ed = {
      _0x321bb5: 0x25c5,
      _0x3ebad4: 0x4b9
    },
          a0_0x26292e = {
      _0x1f6cde: 0x185e,
      _0x103d48: 0x2065,
      _0x73a5ce: 0x14d2,
      _0x5719fc: 0x121d,
      _0x3a65f2: 0x1105
    },
          a0_0x359650 = {
      _0x1f92ad: 0x1a61
    },
          a0_0x16dfcf = {
      _0x38a5c9: 0x175a,
      _0x30d529: 0x2001,
      _0x149237: 0x2065,
      _0xfb3086: 0x1c66
    },
          a0_0x35ade3 = {
      _0x3d8967: 0x1d66,
      _0x108ddc: 0x2054,
      _0x58f851: 0x13f4,
      _0x59c194: 0x1e94,
      _0x5c8a77: 0x1f30,
      _0x2e4581: 0x1e94,
      _0x5606ab: 0x1e94,
      _0x438a02: 0x13f4
    },
          a0_0xf6e222 = {
      _0x4f23e2: 0x16c5,
      _0x3dfce9: 0x310,
      _0x5577cd: 0x535,
      _0x92847b: 0x25db,
      _0x3045c9: 0x1f30,
      _0x38f5a7: 0x175a,
      _0x324e51: 0x1b23,
      _0x5babdd: 0x1c3c,
      _0x5e313d: 0xfcc,
      _0x184430: 0x2065,
      _0x3d14df: 0x1a61,
      _0x38230d: 0x1b37,
      _0x1d9617: 0x2180,
      _0x5a52ee: 0x13f4,
      _0x2feb67: 0x1c3c,
      _0x4c0ade: 0x535,
      _0x1e4d11: 0x1696,
      _0x47142f: 0x1c66,
      _0x319f23: 0x1a61
    },
          a0_0x98fe79 = {
      _0x3aee52: 0x235b,
      _0x20b227: 0x14d2,
      _0x154d91: 0x19c5,
      _0x31b884: 0x2136,
      _0x461af6: 0x753,
      _0x4e6694: 0x21bf,
      _0x34470f: 0xcda,
      _0x46b9bc: 0x24d7
    },
          a0_0x5e0ecd = {
      _0x7ea5ff: 0x1820,
      _0x33e906: 0x16c5,
      _0x3c077b: 0x4b9,
      _0x3f96fc: 0x2530
    },
          a0_0x91c9c3 = {
      _0x401da9: 0x153c,
      _0x5e321e: 0x16c5,
      _0x31e8aa: 0x4b9,
      _0x431ea1: 0x2001,
      _0x25f21c: 0x14d2,
      _0x155fe0: 0x1da5
    },
          a0_0x1832d9 = {
      _0x4660c7: 0x1b9d
    },
          a0_0xe2b20f = {
      _0x4bbbd3: 0x4b9,
      _0x2541b1: 0x153c
    },
          a0_0x972f78 = {
      _0x47ead1: 0xc6c,
      _0x5d9544: 0xc6c
    },
          a0_0x4b1977 = {
      _0x19c5e2: 0x185e,
      _0x289f36: 0x14d2,
      _0x5475e0: 0x19c5,
      _0x53f527: 0xe97
    },
          a0_0x4de689 = {
      _0x5848ce: 0x2605
    },
          a0_0x877ccd = {
      _0x4babeb: 0x235b,
      _0x2a5dfe: 0x185e,
      _0xf5031e: 0x14d2,
      _0x31f27d: 0x19c5,
      _0x2b4f70: 0x265c,
      _0x2b7795: 0x1001,
      _0x3598a0: 0x24a1
    },
          a0_0xad51a2 = {
      _0x126725: 0x46e,
      _0x412ba7: 0x46e,
      _0x45817b: 0x1820,
      _0x988b39: 0x4b9,
      _0x46fc76: 0x46e,
      _0x58fccb: 0xd94,
      _0x4d0541: 0xb8e,
      _0x3c9267: 0x4b9,
      _0x58d476: 0x895
    },
          a0_0x2a6a60 = {
      _0x1636eb: 0xe37,
      _0x244cc4: 0x4b9,
      _0x11f13d: 0x535,
      _0x531c6d: 0x23c8,
      _0x125939: 0x46e
    },
          a0_0x4d7679 = {
      _0x2531db: 0x533
    },
          a0_0x3552fc = {
      _0x2ff4ef: 0x235b,
      _0x34f1f4: 0x185e,
      _0x44024f: 0x879,
      _0x28fbd8: 0x879,
      _0x4bf6ea: 0x14d2,
      _0x2b3840: 0x14d2,
      _0x114006: 0x1ede,
      _0x2c5aab: 0x879,
      _0x3b1229: 0x19c5,
      _0x1c3d1d: 0x2130,
      _0x3e4998: 0x2379,
      _0x533358: 0x9ec,
      _0x261af5: 0x1d66,
      _0x2af006: 0x8ff,
      _0x212727: 0x14d2,
      _0x1e358e: 0x2106,
      _0xa7493c: 0x14d2,
      _0x35ab6b: 0x19c5,
      _0x52487f: 0x16c2
    },
          a0_0x3972d8 = {
      _0x460c7a: 0x4b9,
      _0xd3aea: 0x535,
      _0x33f638: 0x1985,
      _0x31ae4e: 0x1fc2,
      _0x51f9e6: 0x535,
      _0xb5106: 0x1b9d,
      _0x2cc42e: 0x267a,
      _0x5635c0: 0x1720,
      _0x5e5cba: 0x24eb,
      _0x44dc6d: 0x14ef,
      _0x2c7d17: 0x535,
      _0x117a00: 0x1c92,
      _0x293645: 0x1ae,
      _0x5066cc: 0x18e6,
      _0x39b919: 0x49d
    },
          a0_0x1eaf78 = {
      _0x3f1463: 0xfbd
    },
          a0_0x5e75ac = {
      _0x341db7: 0x4b9,
      _0x214490: 0x1a5,
      _0x155e06: 0xfbd,
      _0xb114c1: 0xe6d
    },
          a0_0x1c2a53 = {
      _0x5c2ad9: 0x1dda,
      _0x1e50d8: 0x1917,
      _0x5a6e4c: 0x1d66
    },
          a0_0x2f2d94 = {
      _0x25a35b: 0x74c,
      _0x5cd9e4: 0x535,
      _0x1048fc: 0x23c9,
      _0x56f85e: 0x385,
      _0x4e8424: 0x213a,
      _0x31de76: 0x19d6,
      _0x1da18c: 0x1b6d,
      _0x19353f: 0xc95,
      _0x458c74: 0xb5b,
      _0x34aafb: 0x12a3,
      _0x581c06: 0x1da5,
      _0x14d8df: 0xa3e,
      _0x118417: 0x1063
    },
          a0_0x470170 = {
      _0x4eb163: 0x1820,
      _0x37ce50: 0x16c5,
      _0x54720e: 0x14d2,
      _0x41a6c1: 0x1da5,
      _0x2ee421: 0x1091,
      _0x4aa875: 0x535,
      _0x57c57a: 0x21b7
    },
          a0_0x1acc0d = {
      _0xe799fb: 0x1da5,
      _0x377bbe: 0x112d,
      _0x545943: 0x25f0,
      _0x122b9d: 0x89b
    },
          a0_0x5d3ed6 = {
      _0x21675a: 0x74c,
      _0x553ade: 0x242c,
      _0x1af0ce: 0x1b6d,
      _0x1c9e24: 0x12a3,
      _0x26004a: 0x185e,
      _0x39792e: 0x163e,
      _0x3826d3: 0x535,
      _0x3978f4: 0x133c,
      _0x581a4a: 0x235b,
      _0x6f8d14: 0x14d2,
      _0x4635aa: 0x1da5,
      _0x4ce552: 0x5f9,
      _0x3f9b14: 0x535,
      _0x354076: 0x1063
    },
          a0_0x5517b0 = {
      _0x56f35c: 0x535,
      _0x66e951: 0x242c,
      _0x1dcaca: 0x2cc,
      _0x9e6fed: 0x12a3,
      _0x37d3f9: 0x23c9,
      _0x4190c1: 0x235b,
      _0x2c506b: 0x185e,
      _0x387ce7: 0x2530,
      _0x1c27f8: 0x2323,
      _0x435692: 0x14d2,
      _0x1f6770: 0x1da5,
      _0x34a208: 0x1f66
    },
          a0_0x1063e6 = {
      _0x135e21: 0x535,
      _0x27f49e: 0x242c,
      _0x2a32ec: 0x12a3,
      _0x22111b: 0x242c,
      _0x1026c7: 0x23c9,
      _0x147d69: 0x185e,
      _0x1dbddf: 0x163e,
      _0x28125b: 0x535,
      _0x382f72: 0x133c,
      _0xd6be4a: 0x235b,
      _0x17233e: 0x1c43,
      _0x527bc2: 0x1da5,
      _0x2ef3e9: 0x535,
      _0x40ea4a: 0x1063
    },
          a0_0x2fa181 = {
      _0x423bf2: 0x185e,
      _0x3213d3: 0x24bc,
      _0x162708: 0x879,
      _0x26dd28: 0x14d2,
      _0x234436: 0x19c5,
      _0x241671: 0x15bd
    },
          a0_0x4178d6 = {
      _0x3fbbc0: 0x1657,
      _0x1e8806: 0x1657
    },
          a0_0x4d33dd = {
      _0x4b31aa: 0x4b9,
      _0x2b90f7: 0x1820,
      _0x4fb8b1: 0x16c5,
      _0x1a2b68: 0x535,
      _0x23ba25: 0x2170,
      _0x28f13a: 0x1a48,
      _0x399bb5: 0x102b,
      _0x47d26e: 0xc74,
      _0x1046d1: 0xc95,
      _0x27ffff: 0x1d66
    },
          a0_0x130143 = {
      _0x46917e: 0x535,
      _0x52c3b8: 0x23c9,
      _0xaab16e: 0x1ec5,
      _0x189991: 0x12a3,
      _0x5584f7: 0x4b9,
      _0x8118f6: 0x163e,
      _0x58d7f2: 0x2530,
      _0x3cbd94: 0x1da5,
      _0x2f7ddc: 0x1121,
      _0x52d809: 0x17d8,
      _0x3b7e64: 0x1a07,
      _0x245342: 0x14d2,
      _0xd142b5: 0x1da5
    },
          a0_0x220f30 = {
      _0x3dd545: 0x213a,
      _0x513140: 0x19d6,
      _0x331e39: 0x14d2
    },
          a0_0x4c5f6f = {
      _0x360679: 0x235b,
      _0x33381e: 0x185e,
      _0x35ab73: 0xe6d,
      _0xf7878f: 0x14d2,
      _0x299248: 0x1029,
      _0x582199: 0x14d2,
      _0x32d7a9: 0x19c5,
      _0x1b7f43: 0x14d2
    },
          a0_0x4e3a4a = {
      _0x885110: 0x14d2
    },
          a0_0x303eac = {
      _0x24e074: 0x1aab,
      _0x527beb: 0xf82,
      _0x5ea4d8: 0x1d2,
      _0x126ea8: 0x240f
    },
          a0_0x1475af = {
      _0x399067: 0x14d2,
      _0x580588: 0x19c5,
      _0x41c93e: 0x14d2,
      _0x39081b: 0x1105,
      _0x52585c: 0xd17,
      _0x280e95: 0x14d2,
      _0xe714f6: 0x121d,
      _0x390291: 0x19c5,
      _0x36a113: 0x261a
    },
          a0_0x3f3058 = {
      _0x4c9b6d: 0x1d66,
      _0x5de9e7: 0x24fe,
      _0x714639: 0x1d66,
      _0x203096: 0x24fe,
      _0x34185a: 0x1992,
      _0x31153e: 0x24fe,
      _0x40d6d2: 0x1992,
      _0x498289: 0x1d66,
      _0x5265ae: 0x1d66,
      _0x1e291f: 0x1992,
      _0x23386e: 0x1d66,
      _0x3b4923: 0x1992,
      _0x3d1504: 0x1d66,
      _0x322218: 0x1992,
      _0x2ac9d0: 0x1992,
      _0x5dbf64: 0x1d66,
      _0x4c6ffc: 0x24fe,
      _0x35f201: 0x1d66,
      _0x44fb17: 0x1992,
      _0x415ae6: 0x24fe,
      _0x2f96a8: 0x1992,
      _0xcfeb01: 0x24fe,
      _0x209748: 0x1992,
      _0x43a762: 0x24fe,
      _0x1e3693: 0x1992,
      _0x3cc89d: 0x24fe,
      _0x5a9a58: 0x1d66,
      _0x238714: 0x1d66,
      _0x202a7b: 0x1992,
      _0x4e2377: 0x24fe,
      _0x111869: 0x24fe,
      _0x2a1844: 0x1d66,
      _0x22e9f0: 0x24fe,
      _0x2b1855: 0x1d66,
      _0x1b06f7: 0x24fe,
      _0x1df0ab: 0x24fe,
      _0x41cb5e: 0x1992
    },
          a0_0xb3c1f7 = {
      _0x46132b: 0x535,
      _0x5b0903: 0x1985,
      _0xcfb8f: 0x17eb
    },
          a0_0x76f893 = {
      _0x3e7369: 0x535,
      _0x1501b4: 0x1c3,
      _0x2ef27c: 0x421,
      _0x415524: 0x185e,
      _0x134ad1: 0x40b,
      _0x5e4de8: 0x235b,
      _0x1c1027: 0x1d66,
      _0x2e7247: 0x1e35,
      _0xa704a0: 0x1a6f,
      _0x1fcc9f: 0x1d66,
      _0xd7f8bf: 0x1d66,
      _0x5dcb31: 0xf2f,
      _0x7d8809: 0x1e0
    },
          a0_0x5649cc = {
      _0x55b2ef: 0x185e,
      _0x29552b: 0x19c5,
      _0x45ec6b: 0xf6d
    },
          a0_0x18ebd4 = {
      _0x3de12a: 0x52d,
      _0xc306dd: 0x1e0c,
      _0x5897fe: 0x1cfc,
      _0x6dc760: 0xd38,
      _0x3de83c: 0x235b,
      _0xb41d64: 0x185e,
      _0x41b1ea: 0x14d2,
      _0xba1633: 0x19c5,
      _0x1c8dd4: 0x879,
      _0x2f2a10: 0x121d
    },
          a0_0x3eac74 = {
      _0x4ddaed: 0x1e82,
      _0x1e6a71: 0x4b9,
      _0x363ebe: 0x159b,
      _0x2064d9: 0x159b,
      _0x8e24ae: 0x9ad,
      _0x1f9c91: 0x159b,
      _0x1634b1: 0xa95,
      _0xb585c: 0x2488,
      _0x45bc3a: 0x1a3,
      _0xd20f60: 0xe61,
      _0x369904: 0x159b,
      _0x382451: 0x12c4,
      _0x5bd84c: 0x535,
      _0xd8ea6a: 0x1a50,
      _0x503496: 0xa95,
      _0x40162a: 0x14c1,
      _0x31c9dd: 0x1e2c,
      _0x423568: 0xe61,
      _0x51e12a: 0x9c3,
      _0x75586a: 0x9c3,
      _0x3a8355: 0x9c3,
      _0x5ddabc: 0x1f13,
      _0x5c4869: 0x9c3,
      _0x17bbb8: 0x36e,
      _0x529c77: 0x9c3,
      _0x4daeba: 0x9c3,
      _0x58656f: 0x1e0c,
      _0x15f06b: 0x9c3,
      _0xf5180a: 0x159b,
      _0x2a4d60: 0x1e82,
      _0x39d38d: 0x19c5,
      _0x34280d: 0xe61
    },
          a0_0x9d646f = {
      _0x2133fe: 0x6da
    },
          a0_0x5e2a46 = {
      _0x3aad79: 0x82d,
      _0x5a94b1: 0x1816
    },
          a0_0x54a4af = {
      _0x39dc14: 0x13b4,
      _0x5c1227: 0x6da,
      _0x2a66d8: 0x14c4
    },
          a0_0x14e64b = {
      _0x32cbd1: 0x2405,
      _0x31889d: 0x14d2,
      _0x3a63c2: 0x19c5,
      _0x800d84: 0x1808
    },
          a0_0x5a0bcc = {
      _0x59882d: 0x14d2,
      _0x3a1185: 0x1d6c,
      _0x231590: 0xcdc
    },
          a0_0x503215 = {
      _0x42ae44: 0x21b8
    },
          a0_0x10407c = {
      _0x35a253: 0x1e35,
      _0x196d73: 0x21b8
    },
          a0_0x1734e6 = {
      _0x388c44: 0x185e,
      _0x2700d2: 0x14d2,
      _0x186ce3: 0x19c5,
      _0x4fd039: 0x14d2,
      _0x455d1a: 0x121d,
      _0x23acba: 0x14d2,
      _0x50ee61: 0x14d2,
      _0x3931a5: 0x201f
    },
          a0_0x3aaa0c = {
      _0x54c027: 0x12dd,
      _0x2de915: 0x1146,
      _0x2e95ff: 0x535,
      _0xa01bf4: 0x253d
    },
          a0_0x1ab9c1 = {
      _0x58b4f9: 0x1820,
      _0x45ac64: 0xd3f,
      _0x2095c2: 0x1366,
      _0x3833be: 0x8a7,
      _0x31e956: 0x151e,
      _0x378a6a: 0xd4e,
      _0x2d3b2d: 0x3d9,
      _0x5e9ad8: 0x502,
      _0x44cb67: 0x24ee,
      _0x1c2a21: 0x1f30,
      _0x2d3695: 0x24ee,
      _0x4a56d0: 0x502,
      _0x306f1d: 0x24ee,
      _0x4c52e5: 0x1b9f,
      _0x2a8356: 0xa9d,
      _0x36cf8f: 0x1d52,
      _0x20c15f: 0x3d9,
      _0x4838f5: 0x24ee,
      _0x161625: 0x186b,
      _0x2e2af8: 0x21e2,
      _0xa0128b: 0x1e35,
      _0x3af6cd: 0x1969,
      _0x13bc90: 0x1d66,
      _0x461052: 0x1969,
      _0xc40413: 0x1e35,
      _0x1e7aa0: 0x1969,
      _0x5b9781: 0x42a
    },
          a0_0x59f4e4 = {
      _0x57c770: 0x1afa,
      _0x37366f: 0x1fb6
    },
          a0_0x2736ce = {
      _0x3ccc54: 0x1d66
    },
          a0_0x498a15 = {
      _0x236bde: 0x1507,
      _0x103a50: 0x8fd,
      _0x386910: 0x1dda
    },
          a0_0x30f491 = {
      _0x31c402: 0x186b
    },
          a0_0x455c62 = {
      _0x135932: 0x19c5,
      _0x49ca3e: 0x14d2
    },
          a0_0x174558 = {
      _0x44b37c: 0x19c5,
      _0x26ce90: 0xdec
    },
          a0_0x54faff = {
      _0x2b087c: 0x235b,
      _0x5ce4ca: 0xf4f,
      _0x3e13d7: 0xffb,
      _0x4990c8: 0x14d2,
      _0x2625cc: 0x1391,
      _0x11fdf5: 0x19c5,
      _0x19ed8c: 0x1ad3,
      _0x2d9d8c: 0xdc5,
      _0x33837a: 0x19c5,
      _0x18353f: 0x121d
    },
          a0_0x4010f0 = {
      _0x3d7ff9: 0x12e5,
      _0x393256: 0x13bc,
      _0x5e7ad4: 0x1edc,
      _0x4f8c9d: 0x19e6,
      _0x4e263b: 0x112d,
      _0x7b41b5: 0x192c,
      _0x58c878: 0x1a3,
      _0x465bef: 0x636
    },
          a0_0x2b505e = {
      _0x25a32f: 0x2491,
      _0x45397f: 0x1dcd,
      _0x135e0f: 0x2359,
      _0x32bcd7: 0x422,
      _0x2dcbe3: 0x19e6,
      _0x14d38b: 0x1d66,
      _0x174f3e: 0x2379,
      _0x1afd94: 0x1d66,
      _0xdbb16a: 0x2488,
      _0x3f27cb: 0x23cd,
      _0x320715: 0x13bc,
      _0xb68f30: 0x1265,
      _0x35a749: 0x2379
    },
          a0_0x3711cf = {
      _0x18de7f: 0x1a5a,
      _0x193e35: 0xbdc,
      _0x566652: 0x11f5,
      _0x33315a: 0x19d2,
      _0x32885f: 0x12e5,
      _0x4cd4aa: 0x12e5,
      _0x1756a7: 0x9f0,
      _0x5e8013: 0x13b4,
      _0xbb3f56: 0x229c,
      _0x165f5c: 0x422,
      _0x41ac7c: 0x192c,
      _0x33bcc4: 0x9f0,
      _0x2bbe8c: 0x12e5,
      _0x2bb1e: 0x535,
      _0x7d7c4c: 0x422,
      _0xb0f5b5: 0x2379,
      _0x4f46c6: 0x422,
      _0x1951d: 0x1d66,
      _0x2f5b67: 0x1c47
    },
          a0_0x28b921 = {
      _0x5a13d7: 0x2379,
      _0x265ae6: 0x229c
    },
          a0_0x19d362 = {
      _0x579081: 0x13b4
    },
          a0_0x38e5fc = {
      _0x275662: 0xe2c
    },
          a0_0x1d3e3b = {
      _0x4e07c8: 0x13f4,
      _0x292be8: 0x24ee,
      _0x4f2868: 0x249e
    },
          a0_0x160780 = {
      _0x2eab7f: 0x17d,
      _0x3c09df: 0x19d2,
      _0x3584a1: 0x2143
    },
          a0_0x230acf = {
      _0x6125ed: 0x1fc8,
      _0x4acb85: 0x19d2,
      _0x2f75fc: 0x2143
    },
          a0_0x32b3b9 = {
      _0x3df492: 0x19d2,
      _0x553c7d: 0x19d2,
      _0xc51537: 0x525,
      _0x47f21e: 0x17d,
      _0x17bb20: 0x19d2
    },
          a0_0x8364d4 = {
      _0x3eee7c: 0xf82,
      _0x52eff1: 0x2052,
      _0x2909fa: 0xffb,
      _0x17f8ab: 0x82d,
      _0x2a5a2e: 0x1750,
      _0x19f002: 0x19c5,
      _0x499f6b: 0x181b,
      _0x1c90cc: 0xb88,
      _0x344068: 0x2236,
      _0x56a182: 0xcf8,
      _0x41ab6a: 0x927,
      _0x2121ec: 0x181b,
      _0x16c553: 0x83c,
      _0xc34aaa: 0x1e1,
      _0x3710a7: 0xcf8,
      _0x22754e: 0xa64,
      _0x3f303c: 0x1b2,
      _0x5a21fd: 0x755,
      _0x382dc7: 0x14d2
    },
          a0_0x410a4a = {
      _0x3ef924: 0x1a3
    },
          a0_0x315cfe = {
      _0x3aaf1d: 0x1087,
      _0x2db7f4: 0xa64
    },
          a0_0x3c65ad = {
      _0x4081f5: 0x235b,
      _0x4da867: 0x185e,
      _0x46f94d: 0x1f30,
      _0x9ff90c: 0x535,
      _0x52ac44: 0x801,
      _0x531c29: 0x535,
      _0x401540: 0x648,
      _0x2fd24c: 0x535,
      _0x1344e4: 0x648,
      _0x3614b9: 0x535,
      _0x4ed4f6: 0x535,
      _0x4c5ec3: 0x648,
      _0x150c6e: 0x1f93,
      _0xdf2f46: 0x535,
      _0x5a43ed: 0x648,
      _0x46a372: 0x1ce8,
      _0x3bf087: 0xf71,
      _0x284c6e: 0x2286,
      _0x53e98e: 0x1fe9,
      _0x41a625: 0x192d,
      _0x1f9398: 0x1fe9,
      _0x246a22: 0x1fe9,
      _0x2cf537: 0x1fe9,
      _0x296aad: 0x83c,
      _0xcdd667: 0xb88,
      _0x3f101b: 0x1087,
      _0x2ffa17: 0x12b2,
      _0x46ced6: 0x1fe9,
      _0x25fef4: 0x192d,
      _0x20e557: 0x83c,
      _0x1891ae: 0x1fe9,
      _0x551d2e: 0x1820,
      _0x4b73af: 0x16c5,
      _0x1a2244: 0x755
    },
          a0_0x4db4e1 = {
      _0x3c845d: 0x1fe9,
      _0xcaccee: 0x235b,
      _0x57eb7d: 0x16c5,
      _0x3a9d10: 0x1a50,
      _0x3bed7d: 0x185e,
      _0x301258: 0x1f30,
      _0x2d20b9: 0x152a
    },
          a0_0x58c598 = {
      _0x276714: 0x1a3,
      _0x13f9e9: 0x17f
    },
          a0_0x25de98 = {
      _0x4eaf66: 0x1fe9,
      _0x4517b0: 0x16c5,
      _0x52523a: 0x1820,
      _0x30888c: 0x1157,
      _0x4e5d7e: 0x1f30,
      _0xe538a2: 0x235b,
      _0x3790a6: 0x185e,
      _0x562846: 0x50a,
      _0x180935: 0x2530,
      _0x2aad4d: 0x12fe,
      _0xba7160: 0x1e1
    },
          a0_0x333e04 = {
      _0x5e641a: 0x235b,
      _0x20be96: 0x16c5,
      _0x16bc3e: 0x2606,
      _0x3bbfdc: 0x535,
      _0x3f43f0: 0x648,
      _0x5981dd: 0x1f30,
      _0x2734f6: 0x1a3,
      _0x29f46a: 0x1f03
    },
          a0_0x58054c = {
      _0xcedd17: 0x2219,
      _0x1f30f5: 0x8d2
    },
          a0_0x50009b = {
      _0x5b67e2: 0x1a3
    },
          a0_0x214de1 = {
      _0x324f0f: 0x192d,
      _0x4eabaf: 0x181b,
      _0x284e98: 0x181b
    },
          a0_0x35e95a = {
      _0x221213: 0x181b,
      _0x20e96f: 0xd74,
      _0x4e29f5: 0x1a3,
      _0x1b1382: 0x181b
    },
          a0_0x5f05bb = {
      _0x117490: 0xacf,
      _0x1953a6: 0x22bf
    },
          a0_0x4f24ed = {
      _0x567a33: 0x1fe9,
      _0x33b5c4: 0x1fe9,
      _0x4181be: 0x14fd,
      _0x586df6: 0x1a3
    },
          a0_0x446623 = {
      _0x3c5065: 0x8d2,
      _0x5ca5d2: 0x2219
    },
          a0_0x40a358 = {
      _0x313450: 0x2219
    },
          a0_0x58297d = {
      _0x104fb4: 0x181b,
      _0x1572a3: 0xd74,
      _0x5c8326: 0x1a3,
      _0x27925b: 0x181b
    },
          a0_0x4c5276 = {
      _0x24e4fd: 0x192d,
      _0x4f8e74: 0x181b,
      _0x6038fa: 0x192d
    },
          a0_0x13b791 = {
      _0x426f64: 0x192d,
      _0x59c245: 0x18d6,
      _0x19b5d4: 0x1a6d,
      _0x49739b: 0x181b,
      _0x3d3b0e: 0x18d6,
      _0x2cba13: 0x1a3
    },
          a0_0x248380 = {
      _0xe87a6d: 0x1b4b,
      _0x5a5412: 0x1b4b,
      _0x428954: 0xc6d,
      _0x5ec3a2: 0xc6d,
      _0x468f70: 0x22bf,
      _0x2ed10d: 0x22bf,
      _0x15fade: 0x15de,
      _0x17af6e: 0x181b,
      _0x1578ee: 0x2219,
      _0x47ea32: 0xd74,
      _0x37dc96: 0x181b,
      _0x3b15fa: 0x14fd,
      _0x525361: 0x192d,
      _0xbfe537: 0x1fe9,
      _0x1a8f4f: 0x927,
      _0x56f88c: 0x181b,
      _0x226011: 0x1b4b
    },
          a0_0x270ed9 = {
      _0x39fad0: 0x2236,
      _0x24a6d5: 0x19c5,
      _0x3fa5ec: 0xec2
    },
          a0_0x3c6571 = {
      _0x4ec42e: 0x16c5,
      _0x3d4051: 0x628,
      _0x1efd61: 0x2530,
      _0x388960: 0x1975
    },
          a0_0x115900 = {
      _0x28b1cb: 0x235b,
      _0x1011c8: 0x16c5,
      _0x10747a: 0x2530,
      _0x100f0f: 0x4bd,
      _0x5765fd: 0x19d2,
      _0x1693e8: 0x4bd
    },
          a0_0x464d7a = {
      _0x20e8e3: 0x2219,
      _0x1bd820: 0x2219
    },
          a0_0x8e2f74 = {
      _0xefed23: 0x2033,
      _0x344bb2: 0xc81,
      _0x1dbbf7: 0x1fe9,
      _0x4a8209: 0x685,
      _0x25c3fd: 0x1d66,
      _0x5c466e: 0x2379,
      _0xb624f7: 0x628,
      _0x27530a: 0x91b,
      _0xcf63c5: 0xb0c,
      _0x177731: 0x535,
      _0x142717: 0xb0c,
      _0x6bb9b6: 0x628
    },
          a0_0x5ceb3b = {
      _0x5e1b1e: 0x303,
      _0x13c1b8: 0x1d45,
      _0x8d380b: 0x1bce,
      _0x5e70af: 0x109a,
      _0x5864a9: 0x177e,
      _0x3dd5fb: 0x189,
      _0x50d94f: 0x1703,
      _0x4efb24: 0x19bf,
      _0x4dde6b: 0x24e3,
      _0x324858: 0x1bce,
      _0x355775: 0x1b96,
      _0x2668cd: 0x228d,
      _0x8e3d8d: 0x187,
      _0x1e580d: 0xaf0,
      _0x129d85: 0x83d,
      _0x60ec97: 0xd41,
      _0x4f0480: 0x188c,
      _0x36bd39: 0x16e1,
      _0x12f009: 0x1f51,
      _0x55ae81: 0x71b,
      _0x3b42d2: 0xad5,
      _0x36aed3: 0x832,
      _0x4387d6: 0x3f3,
      _0x254017: 0xf15,
      _0x191f77: 0xa51,
      _0x282559: 0x1cf3,
      _0x456bad: 0x2010,
      _0xaf7a48: 0xa3c,
      _0x146e02: 0xdc9,
      _0x161a09: 0x2676,
      _0x5a127c: 0x2277,
      _0x40b080: 0x12bf,
      _0x3958df: 0x1e22,
      _0x3429cf: 0x19a6,
      _0x5867f3: 0x17b0,
      _0x4f10f7: 0x165a,
      _0x2a856f: 0x1da,
      _0x47fba1: 0x1dca,
      _0xaee8cf: 0x1895,
      _0x3f5c1c: 0x189,
      _0xd8b043: 0x1703,
      _0x1a5cf4: 0x109a,
      _0x62b886: 0x72e,
      _0x1c37be: 0xd06,
      _0x4c3abd: 0xa4b,
      _0x185ade: 0x1e6f,
      _0x3bffef: 0x3d1,
      _0x1ae18a: 0x1197,
      _0x8689b7: 0xe9a,
      _0x2f3313: 0x12ac,
      _0x205202: 0xa0f,
      _0x11ad84: 0xe11,
      _0x586aaa: 0x2418,
      _0x3dc30b: 0x1a31,
      _0x15a065: 0x998,
      _0x9b12fb: 0x200a,
      _0xa3abf2: 0x1ab4,
      _0x5bb1a8: 0xf75,
      _0x2cde6c: 0x83d,
      _0x18171d: 0x1a7e,
      _0x5e369f: 0x9cf,
      _0x51f2ae: 0x18d3,
      _0x22290b: 0x12fc,
      _0x2df353: 0x25d4,
      _0x1a9c15: 0x2dd,
      _0x26257b: 0xd3a,
      _0x1ac6d8: 0x796,
      _0x134910: 0x806,
      _0x5af87a: 0x177c,
      _0x360945: 0x1c0a,
      _0x127a2d: 0x960,
      _0x302eef: 0x581,
      _0x47ce40: 0x22b,
      _0x5c3c84: 0x147f,
      _0x5cf5d2: 0x863,
      _0x18610d: 0x1b91,
      _0x1185e4: 0x126f,
      _0x6d8950: 0xa1c,
      _0xa3c312: 0x2388,
      _0xeb5d99: 0x1d0d,
      _0x30d5e6: 0x17f6,
      _0x4d6c46: 0x12ad,
      _0x1e09c2: 0x1004,
      _0x2c5e81: 0x2070,
      _0xaf2c7d: 0x992,
      _0x1be20b: 0x14d2,
      _0x418250: 0x19c5,
      _0x1906f9: 0x2236,
      _0x21cb1c: 0x1a5c,
      _0x5ce018: 0xe64,
      _0x379073: 0x24d7,
      _0x196d17: 0x1863,
      _0x35fa4f: 0x1136
    },
          a0_0x4214e3 = {
      _0x116903: 0x1c26
    },
          a0_0x4b4be6 = {
      _0xe85f92: 0x258c,
      _0x2196a9: 0x2028,
      _0x2a31ec: 0xa19
    },
          a0_0xc5738f = {
      _0x175925: 0x14cd,
      _0x200c5e: 0x24d7,
      _0x4f12fa: 0x181b,
      _0x1ee8d6: 0x16e9,
      _0x10527d: 0x1cda,
      _0x56c29a: 0x1cda,
      _0x1014e5: 0x1b4b,
      _0x40af3c: 0x2028,
      _0x1b4f1c: 0x1863
    },
          a0_0x15233c = {
      _0x4cad62: 0x258c,
      _0x3988aa: 0x10b8,
      _0x473564: 0x1ba6
    },
          a0_0x33576c = {
      _0x412531: 0x235b,
      _0x25c46e: 0x185e,
      _0x5182d9: 0x249d,
      _0x10d533: 0x19c5,
      _0xf5c381: 0x1808,
      _0x3cfe6a: 0x14d2,
      _0x19f2c6: 0x19c5
    },
          a0_0x4b4651 = {
      _0x549657: 0x1a6d,
      _0x5d94f1: 0x2625
    },
          a0_0x1d1729 = {
      _0x188d56: 0x2fd,
      _0x5d1240: 0x10c3,
      _0x25fa99: 0x1f30
    },
          a0_0x3aed3d = {
      _0x1d2b96: 0x1d66,
      _0x528ac9: 0x59d,
      _0x420332: 0x1e15
    },
          a0_0x417962 = {
      _0x39cf9b: 0x1c50,
      _0x5dfb4f: 0x12df
    },
          a0_0xbfc392 = {
      _0x6ca143: 0x235b,
      _0x15edce: 0x185e,
      _0x39dd1d: 0x14d2,
      _0x13ed1a: 0x19c5,
      _0x217a62: 0x658,
      _0x18a417: 0x19c5,
      _0x385497: 0x19c5,
      _0x378275: 0x1fd4,
      _0x2b094c: 0x12d7,
      _0x3bf56b: 0x14d2,
      _0x1bb687: 0x6a3,
      _0x170809: 0x1aea,
      _0xf43072: 0x19c5,
      _0x283a8f: 0x14d2,
      _0x7500c5: 0x19c5,
      _0x252d64: 0x662,
      _0x259d24: 0xfbd,
      _0x3c4345: 0x19c5,
      _0x56feb3: 0x253f,
      _0x4413e3: 0x746,
      _0x50115c: 0x19c5,
      _0x132669: 0x19c5,
      _0x12f308: 0x753,
      _0x28b7bd: 0x265c,
      _0x583fe6: 0xffb,
      _0xe0b56c: 0x19c5,
      _0x17ca54: 0x2136,
      _0x11b2d1: 0x1e5f
    },
          a0_0x5a1299 = {
      _0x212745: 0x2605,
      _0x399c1b: 0x131d,
      _0x5dc75b: 0xe14,
      _0x491529: 0x1d66,
      _0x1a6735: 0x2577,
      _0xe67f50: 0x535,
      _0x21dcd6: 0x628,
      _0x3e856e: 0x628,
      _0x2a1177: 0x18ea,
      _0x475331: 0x1d66,
      _0x633315: 0x1992,
      _0x1aa475: 0x1d66,
      _0x12ef6d: 0x24fe,
      _0x4a3ece: 0x1992,
      _0xaa1f2b: 0x2606,
      _0x1f1f6c: 0x1683,
      _0x4f951e: 0x588,
      _0xdb3c4f: 0x1e35,
      _0x2fdb8f: 0x1969,
      _0x587bc8: 0x135c,
      _0x8abc76: 0xc95,
      _0x7c9710: 0x24ee,
      _0x2f7842: 0x24ee,
      _0x4cd350: 0x82d,
      _0x1d7cc8: 0xffb,
      _0x417f05: 0xe6d,
      _0x4460af: 0xe6d,
      _0x3ba127: 0x24fe,
      _0x3bb569: 0x24fe,
      _0x5212d3: 0x1d66,
      _0x44f97f: 0x1992,
      _0x4bce63: 0x14d2,
      _0x347dfb: 0x2c0,
      _0x5947b2: 0x1371,
      _0x22349e: 0xffb,
      _0x587e95: 0x1a5,
      _0xbe3359: 0x2036,
      _0x1e74d7: 0x14d2,
      _0x3dd894: 0x14d2,
      _0x304be8: 0x1a5,
      _0x193a31: 0x206e,
      _0x5e301b: 0x1865,
      _0x4b9d89: 0xffb,
      _0x54dcd5: 0x1a5,
      _0x2f95b8: 0x1559,
      _0x2d7f5a: 0x1796,
      _0x1c09ce: 0x229a,
      _0x5892f7: 0x19df,
      _0x44b51c: 0x14d2,
      _0x3071c2: 0x535,
      _0x275d52: 0x253d,
      _0x409518: 0x14d2,
      _0x3b7dc7: 0xfcd,
      _0x59fc33: 0x1e46,
      _0x31b93c: 0xa26,
      _0x54a4d1: 0xac8,
      _0x1effe9: 0x1d66,
      _0x49fdd9: 0xe1b,
      _0x24cba7: 0x8bf,
      _0x3bd31d: 0x45c
    },
          a0_0x827ca1 = {
      _0x310233: 0x535,
      _0x5845b3: 0x1d66,
      _0xfedf8: 0x235b,
      _0x234a88: 0x2530,
      _0x594b55: 0x235b,
      _0x41b778: 0x4b9,
      _0x4d7ce7: 0x56f,
      _0xfdc94d: 0x2448,
      _0x185c04: 0x56f,
      _0xfb76f8: 0xdf5,
      _0x5a7918: 0x1d66,
      _0x4e2dc4: 0x1d66,
      _0x9ff21c: 0x2072,
      _0x579c48: 0x1d66,
      _0x579fe0: 0x1756,
      _0x574b13: 0xfa1,
      _0x464a69: 0x1b5b,
      _0x2042b3: 0x1d66,
      _0x1e1410: 0x1e35,
      _0x5a93cd: 0x21ff
    },
          a0_0x2e14a6 = {
      _0x3854dc: 0x213a,
      _0x5c7122: 0x19d6,
      _0x312281: 0x19d6,
      _0xa38487: 0x115c,
      _0x476489: 0x1a5,
      _0xe058a6: 0x589,
      _0x4cce51: 0x14d2,
      _0x2974da: 0x1a5,
      _0x232aec: 0x589,
      _0x50f390: 0xfcd
    },
          a0_0x40241c = {
      _0x3ae702: 0x2605
    },
          a0_0x3a40a8 = {
      _0x54d2b2: 0x1bcb
    },
          a0_0x13ec07 = {
      _0x1ec785: 0x186b,
      _0x3d1c76: 0x1f30,
      _0x315938: 0x1d66,
      _0x197b5: 0x1f30
    },
          a0_0x1a610c = {
      _0x2a9f18: 0x1402,
      _0x25244e: 0xf82,
      _0x363ec2: 0x406
    },
          a0_0x1f0724 = {
      _0x15ed4e: 0xffb,
      _0x62a80d: 0x82f,
      _0x884d91: 0x1442,
      _0x4dcbcb: 0xffb,
      _0x3aef9f: 0x1a3
    },
          a0_0x25f014 = {
      _0x321afb: 0x14d2,
      _0x5d0e29: 0x19c5,
      _0x423542: 0x14d2,
      _0x2426a2: 0x19c5
    },
          a0_0x2facd6 = {
      _0x5f1473: 0x2488,
      _0x17a233: 0xa60
    },
          a0_0x3441af = {
      _0x5c2fc: 0x1870,
      _0x175e33: 0x1dda,
      _0x15ce5d: 0x1dda,
      _0xca400d: 0x22b2,
      _0x48f48b: 0xc2b,
      _0x578e85: 0x21e0,
      _0x42d8be: 0x1d2,
      _0x5cf57e: 0xa60,
      _0xbf7018: 0x81a
    },
          a0_0x31c2fc = {
      _0x2f6cb3: 0x952,
      _0x5c5c1e: 0x1d2,
      _0x4c0427: 0x16a2
    },
          a0_0x1854bb = {
      _0x526a32: 0x16a2,
      _0x1e92d9: 0xdc0,
      _0x206e2d: 0x1aab,
      _0x3a735c: 0x2405,
      _0x5893bc: 0xbb9,
      _0x36767d: 0x16a2,
      _0x2e0dcf: 0xdc0,
      _0x17770d: 0xe4c,
      _0x2ac358: 0x85c,
      _0x5511a2: 0xe8f,
      _0x3edbfd: 0x85c,
      _0x42f47a: 0x145f,
      _0x2581ca: 0x1d55,
      _0x4a7e6c: 0x17b9,
      _0x385ac5: 0x1ee9
    },
          a0_0x2d43a2 = {
      _0x28626a: 0x1227,
      _0x405568: 0xe6d
    },
          a0_0x119dac = {
      _0x238d71: 0xdc0,
      _0x1204e1: 0x17b9,
      _0x25fe95: 0xbb9,
      _0x2e4d46: 0x1227,
      _0x16c6b2: 0xdc0,
      _0x28ac21: 0xe4c,
      _0x4795bb: 0xe8f,
      _0x9a6d9b: 0x18a5,
      _0x147150: 0x17b9,
      _0x70ef08: 0x1ee9,
      _0x2e5cdf: 0x1227,
      _0x4208ec: 0xe8f,
      _0x440859: 0xf82
    },
          a0_0x22576c = {
      _0x3f5919: 0x235b,
      _0x537599: 0x185e
    },
          a0_0x22125e = {
      _0x3cef21: 0x241,
      _0x340a50: 0x2348,
      _0x1965f1: 0x1aab,
      _0xf68c0f: 0x136c,
      _0x5294f3: 0x241,
      _0x276919: 0x1d55,
      _0x1c35d6: 0x241,
      _0x49b3d1: 0x17b9,
      _0x5abe0d: 0x1ee9,
      _0xc8734f: 0x241,
      _0x25daba: 0xe4c
    },
          a0_0x45353b = {
      _0x2dc71c: 0x1d2,
      _0x343e09: 0x1512,
      _0x4309b4: 0xe6d
    },
          a0_0x37c81b = {
      _0x31b85b: 0x19c5,
      _0x5ef9f8: 0x14d2,
      _0x58028e: 0x14d2,
      _0x17666f: 0x18ae,
      _0x15be92: 0x14d2,
      _0x6e0a4d: 0x14d2,
      _0x52670e: 0x1808,
      _0x193e39: 0x14d2,
      _0x5b2a4e: 0x1105
    },
          a0_0x43b984 = {
      _0x1a2241: 0x1d66,
      _0x1195a6: 0x1d66,
      _0x1d7d7a: 0x1d66,
      _0x4aec7f: 0x1a5,
      _0x1029fd: 0x59d
    },
          a0_0x51e82f = {
      _0x3ff948: 0x535,
      _0x1df211: 0x253d,
      _0x4c77bc: 0xf86,
      _0x23b41b: 0x535,
      _0x31ae0d: 0xf86,
      _0x24f0a0: 0x475
    },
          a0_0xbbd1c9 = {
      _0x2d7484: 0x1aab,
      _0x3d9ad2: 0x16c5,
      _0xf9b30e: 0xda6,
      _0x439070: 0x17f,
      _0x56a4c7: 0x16c5,
      _0x16b012: 0x16c5,
      _0x3a9608: 0x17f,
      _0x18a47a: 0x17f,
      _0x1c49d7: 0xda6,
      _0x3f7fd2: 0x16c5,
      _0x5edf61: 0x17f,
      _0x53d564: 0x2606,
      _0x581680: 0x17f,
      _0x1ccecc: 0x2405,
      _0x5d8624: 0xda6,
      _0x154f95: 0xf82,
      _0x2a087b: 0x1d55,
      _0x2d5764: 0x11dc,
      _0x1d2c3a: 0x2606,
      _0x170e9a: 0x1d66,
      _0x58674c: 0x2379,
      _0x1b36fa: 0x2405,
      _0x4e7a69: 0xda6,
      _0x588e2e: 0x1a5
    },
          a0_0x592227 = {
      _0x515a25: 0x8c0,
      _0x175ac3: 0x2348,
      _0x60ca64: 0x136c,
      _0x6e311: 0x17b9,
      _0x1ada4f: 0x18ec,
      _0x23b310: 0x1d55,
      _0x2801a2: 0x1ee9,
      _0x115ac2: 0x18ec,
      _0x12ea54: 0x1a60,
      _0x26fe6d: 0xe4c,
      _0x4117dd: 0x535
    },
          a0_0x29aeb8 = {
      _0x2f956a: 0xb16,
      _0xe942d7: 0x952,
      _0x1d77d1: 0x1d2
    },
          a0_0xe0faa3 = {
      _0x5a52c9: 0x1aab,
      _0x2d148a: 0x17b9,
      _0x344743: 0xbb9,
      _0x17ecd0: 0xb16,
      _0x5db49d: 0x2348,
      _0xf61ebf: 0xb16,
      _0x4b4917: 0xb16,
      _0x28951a: 0xe8f,
      _0x34b57f: 0x18a5,
      _0x3e4b53: 0xf82,
      _0x1d5157: 0x85c,
      _0x46941e: 0x1ee9,
      _0x4a61f7: 0x5a0,
      _0x100a33: 0x85c,
      _0x5a9dd6: 0x1d55,
      _0x7615b9: 0x17b9,
      _0x18fa03: 0xbb9,
      _0x40414e: 0x237d,
      _0x5df789: 0x19d2,
      _0x30a885: 0xe6d
    },
          a0_0x3c62f8 = {
      _0x5cb4fe: 0x8c6,
      _0x16e7a4: 0x952,
      _0x5e1714: 0xe6d
    },
          a0_0x64e9ea = {
      _0x43d8e7: 0x8c6,
      _0x3cfc3a: 0x2405,
      _0x11d32b: 0x1ee9,
      _0x313124: 0x8c6,
      _0x1946f5: 0xdc0,
      _0xb9d05f: 0x1a60,
      _0x253f40: 0x8c6,
      _0x444add: 0xdc0,
      _0x3b1b36: 0xe4c,
      _0x1889c3: 0x8c6,
      _0x1bbd33: 0x8c6,
      _0x280254: 0xe8f,
      _0x2c30b8: 0x18a5,
      _0x21bee8: 0xf82,
      _0x2c4a69: 0x1d55,
      _0x49892a: 0xbb9,
      _0x20b086: 0x8c6,
      _0x490369: 0xe8f,
      _0x36671b: 0x17b9
    },
          a0_0x1d227c = {
      _0x1b7aef: 0x1d2
    },
          a0_0x1a310c = {
      _0x3ce371: 0x952,
      _0x9fb97d: 0x12a6
    },
          a0_0x924565 = {
      _0x543b5b: 0x952,
      _0x3dc830: 0x265,
      _0x1e0325: 0xe6d,
      _0x2edbf5: 0x14d2,
      _0x79753c: 0x19c5,
      _0x237630: 0x1029
    },
          a0_0x139249 = {
      _0x4ff2f5: 0x265,
      _0x2d8398: 0x1edc,
      _0x306035: 0x1d66
    },
          a0_0xb1fd2 = {
      _0x30cb90: 0x71f,
      _0x4eeffc: 0x2440,
      _0x4e2730: 0x96b,
      _0x5ed1ec: 0x1bea,
      _0x16e412: 0x25d9,
      _0x58126c: 0x24bc,
      _0x124f9a: 0xe6d,
      _0x169926: 0x14d2,
      _0x8211d9: 0x19c5,
      _0x27fa0d: 0x22df,
      _0x1037f9: 0x19c5,
      _0x1e776c: 0x1808,
      _0x3ace9b: 0x19c5,
      _0x445cca: 0x1105,
      _0x172744: 0x97f,
      _0x1834c4: 0x1f7d,
      _0x552836: 0xbbb,
      _0x535363: 0x264c,
      _0x1c21f5: 0x1317,
      _0x527884: 0x22c9,
      _0x228b96: 0xc88,
      _0x10239a: 0x1c71,
      _0x33c260: 0xefd,
      _0x3d1d42: 0x2099,
      _0x642187: 0x4aa
    },
          a0_0x4d6900 = {
      _0x3d4a0e: 0x535,
      _0x24c86e: 0x1985,
      _0x550d6c: 0x16f3,
      _0x5e6ea7: 0xe6d,
      _0x275d20: 0x1985,
      _0x5c6b07: 0x592
    },
          a0_0x167ba6 = {
      _0xd42b4: 0x1d66,
      _0x86a3d7: 0x140a,
      _0x17a338: 0x1d66,
      _0x3b431c: 0x15e0
    },
          a0_0x50d8da = {
      _0x2aff16: 0x535,
      _0x22b51c: 0x1aab,
      _0x56cea1: 0x1d66,
      _0x42e787: 0x1a5,
      _0x4851b9: 0x59d,
      _0xf6185b: 0x14d2,
      _0x1aa922: 0x1a5,
      _0x236e1a: 0x2123,
      _0x24d2b4: 0xe5e
    },
          a0_0x25922f = {
      _0x1bfd46: 0x253d,
      _0x4c2c2f: 0x1dc6,
      _0x462cc4: 0x1157,
      _0x25036d: 0x1f30,
      _0x4b5f0d: 0x535,
      _0x4773e9: 0xf86,
      _0x4780dc: 0xf86,
      _0x13ee52: 0xf54,
      _0x124b35: 0x535,
      _0x45405d: 0x535
    },
          a0_0x3a2951 = {
      _0x27070d: 0x2606,
      _0x4a4d15: 0x1e3d,
      _0x187c99: 0x1d55,
      _0x47d173: 0x14d2,
      _0xe4269b: 0x1a5,
      _0x301c20: 0x1e3d,
      _0x227dd8: 0x1d55,
      _0x1d425d: 0x14d2,
      _0x58522e: 0x5fe,
      _0x55b0ab: 0x1ab
    },
          a0_0x5b2d74 = {
      _0x109889: 0xe6d,
      _0xf669d0: 0x140a,
      _0x37e3b1: 0x1d66,
      _0x1aecd9: 0x15e0,
      _0x1d9eb5: 0x1151,
      _0x30f9b4: 0x16c5,
      _0xc6c6cc: 0x17f,
      _0x163e27: 0x1aab,
      _0x55ea10: 0xda6,
      _0x330508: 0x16c5,
      _0x53ae80: 0x1aab,
      _0x113f8a: 0x17f,
      _0x53995e: 0x17f,
      _0x511e90: 0x2606,
      _0x3a3d4a: 0x2405,
      _0x87d63b: 0xf82,
      _0x5f64e9: 0x1aab,
      _0x38c3d8: 0x1d55,
      _0x360d8a: 0x11dc,
      _0x5c8126: 0x2422,
      _0x126787: 0xc0d,
      _0x258f99: 0x1d55,
      _0x1b8768: 0xf82,
      _0x254044: 0x2379,
      _0x34b444: 0x1396,
      _0x5c9873: 0x1d55,
      _0x40e788: 0x1d55,
      _0xacaba9: 0x14d2,
      _0x2a3657: 0xfb0
    },
          a0_0x41bc4f = {
      _0x4c7464: 0x1877,
      _0x128de5: 0x136c,
      _0x5bf4f0: 0xf0e,
      _0x22acde: 0x2348,
      _0x3954bd: 0x1dc6,
      _0x59cb5c: 0x1d55,
      _0xd65ae0: 0x1732,
      _0x5c6175: 0x1877,
      _0x3cb2f5: 0x2348,
      _0x3a66e1: 0xe4c,
      _0x5673b8: 0xf82,
      _0x37a231: 0x1d55,
      _0x280732: 0xf0e
    },
          a0_0x105523 = {
      _0x1cedaa: 0x1eaa,
      _0x120bc9: 0x952,
      _0x502182: 0xe6d
    },
          a0_0x1ffbbf = {
      _0x1789ad: 0xae7,
      _0x523df6: 0xe3a,
      _0x4b7e7b: 0x154f,
      _0xe2d7e9: 0x14cc,
      _0x285bad: 0x185e,
      _0x57b2a6: 0xffb,
      _0x361272: 0x24fa,
      _0x27815a: 0x12d8,
      _0x2655f9: 0xf72,
      _0x59f867: 0xb9f,
      _0x5d1f11: 0x1074,
      _0x29ee82: 0x14d2,
      _0x296ccf: 0x19c5,
      _0x38e7e8: 0x1d04,
      _0x50c1e3: 0x20dc,
      _0x1cf6b5: 0x19c5,
      _0x29f0dc: 0x1bc4,
      _0x13acc0: 0x18c1,
      _0x3cee3d: 0x1e3d,
      _0x4e07b4: 0x19c5,
      _0x30e24d: 0x249d
    },
          a0_0x31fab8 = {
      _0x18f98c: 0x2026,
      _0x31426a: 0x19c5,
      _0x17eded: 0x176c,
      _0x1a988c: 0x535,
      _0x1aedad: 0x1a50,
      _0x18b05e: 0x1f30,
      _0x271848: 0x25e9,
      _0x1193ee: 0x2316,
      _0x1f7208: 0x1e3d
    },
          a0_0x304aa9 = {
      _0x34213e: 0xadd,
      _0x2a8ad1: 0x14cc,
      _0x1ad45f: 0x8a0
    },
          a0_0x1e2049 = {
      _0x36c7b1: 0x1858,
      _0x2bb923: 0x19c5,
      _0x5c558f: 0x19d2,
      _0x3ac7cf: 0x2026,
      _0x1d0fc5: 0x25e9,
      _0x58e19b: 0x866
    },
          a0_0x18fcb2 = {
      _0x36c0be: 0x1f30,
      _0x760ef1: 0x22b2,
      _0x52f688: 0x19d2,
      _0x21c941: 0x2026,
      _0x3758ae: 0x8a0,
      _0x425fc1: 0x25e9,
      _0x1b07ad: 0x1d2,
      _0x169c21: 0x2026,
      _0x524cec: 0x25e9
    },
          a0_0x41e06c = {
      _0xbd2d25: 0x76b,
      _0x44c12: 0x1d2
    },
          a0_0x9bdf8c = {
      _0x5d149b: 0xccd,
      _0x408c73: 0x1a18,
      _0x5db443: 0x1322,
      _0x848762: 0x688,
      _0xaec8b: 0x691
    },
          a0_0x4c8e0c = {
      _0x2aa3c6: 0x22b1,
      _0x49da42: 0x1d66,
      _0x172750: 0xebb,
      _0xb4f6dc: 0x1d66,
      _0x2ad631: 0x1e35,
      _0x9c9a5: 0x284,
      _0x2c6779: 0x13b4,
      _0x346864: 0x961,
      _0x5339e9: 0x1fd6,
      _0x554802: 0xf82,
      _0x1d4992: 0x25a6,
      _0x307852: 0x535,
      _0x8e774a: 0xb0d,
      _0x472812: 0x1b61,
      _0x13a187: 0x145f,
      _0x2326b5: 0x1322,
      _0x2756b8: 0x1d66,
      _0x498d30: 0x25a6,
      _0x2d2b7d: 0x1e35,
      _0x14752d: 0x647,
      _0x2fea89: 0x1e35,
      _0x3a9529: 0x1d35,
      _0x580c04: 0x1cfb
    },
          a0_0x30b83e = {
      _0x2e9516: 0x1fd6,
      _0x2722e0: 0x2606,
      _0x5a9032: 0x16c5,
      _0xf859cf: 0x1fd6
    },
          a0_0x4dbfd9 = {
      _0x7dd8f7: 0x922,
      _0x2c6518: 0x22b1
    },
          a0_0x366a07 = {
      _0x1131fb: 0x981,
      _0x116c38: 0x82d,
      _0x582910: 0x1279,
      _0x6cc0d9: 0x10ab,
      _0x382031: 0x1d66,
      _0x3e6fcc: 0x2379,
      _0x5179fb: 0x2342,
      _0x3fb4a4: 0x791,
      _0x48bd46: 0x1fd6,
      _0x1c3894: 0x22b1,
      _0x421991: 0x1322,
      _0x27a0c8: 0x1a18,
      _0x31f31c: 0x23ff,
      _0x235b08: 0x1e55,
      _0x4a2120: 0x922
    },
          a0_0x4d04a7 = {
      _0x101613: 0x185e,
      _0x2ecae2: 0xa9d,
      _0x4bd575: 0xf82,
      _0x12514b: 0x3b1,
      _0x4298a5: 0x1d55,
      _0xd760f8: 0x1298,
      _0x1b4755: 0x14d2,
      _0x508b21: 0x1123,
      _0x242180: 0x19c5,
      _0x23b99a: 0x121d,
      _0x41dd14: 0x879,
      _0x491244: 0x24bc,
      _0xd2cd24: 0x879,
      _0x64870c: 0x2285,
      _0x31b75c: 0x24bc,
      _0x138785: 0x13b9,
      _0x387646: 0x19c5,
      _0x11fe03: 0x14d2,
      _0x22cabd: 0x1391
    },
          a0_0x587ab9 = {
      _0x2ebeeb: 0x11dc,
      _0x1a0471: 0x2606,
      _0x11a070: 0x11dc
    },
          a0_0x37b0f1 = {
      _0x23de95: 0x82d,
      _0x13b8ab: 0x1f30
    },
          a0_0x5222c7 = {
      _0x40e41f: 0x1dda,
      _0x380639: 0x1d55,
      _0xf0cd63: 0x1d2
    },
          a0_0x3e3c78 = {
      _0x1b5595: 0xcb1,
      _0x4023e9: 0x1b28,
      _0x1ecca5: 0x1fe9,
      _0xbaf971: 0x2140,
      _0x3018d9: 0x1b28,
      _0x2a5619: 0x8a0,
      _0x2cac4f: 0x2140,
      _0xd52cf5: 0x1fd6,
      _0x4aef79: 0x2530,
      _0x4f37f0: 0x8a0,
      _0x4aace9: 0x2140,
      _0x4e4c70: 0x8a0,
      _0x5ecd50: 0x2530,
      _0x2e6522: 0x1d66,
      _0x5b443a: 0x11dc
    },
          a0_0x289d31 = {
      _0x20d264: 0x12e5
    },
          a0_0x5e115 = {
      _0x232cdf: 0x12e5
    },
          a0_0x4999f3 = {
      _0x417b3b: 0x47f,
      _0x3f3081: 0x11dc,
      _0x4e0245: 0x13b4,
      _0x4d239f: 0x1816
    },
          a0_0x3e402d = {
      _0x5bbe15: 0x12e5,
      _0x18a015: 0xba2,
      _0x3abfb2: 0xba2,
      _0xad43f1: 0x19d2,
      _0x3c1767: 0x124b
    },
          a0_0x4de89c = {
      _0x50cf5b: 0x14d2,
      _0x473abe: 0x14d2,
      _0x56241a: 0x43e,
      _0x90dc9a: 0x14d2,
      _0x21ceef: 0x19c5,
      _0x4ed901: 0x1808,
      _0x12da4f: 0x1105,
      _0x1678f5: 0x339,
      _0x160a7e: 0x9fd,
      _0x3e53e4: 0xa9c,
      _0x49ec0d: 0x2d1,
      _0x2b0c7b: 0x1343,
      _0x1aa280: 0x12aa,
      _0x4923a5: 0x15b8,
      _0x2a17e7: 0x164d,
      _0x398f2e: 0x129a,
      _0x1597ce: 0x16f4,
      _0xae8e08: 0x2655,
      _0x59b3c4: 0x1781,
      _0x36e564: 0x6e3,
      _0xb0c872: 0x159d,
      _0x48c3da: 0x1fb,
      _0x29aeb9: 0x2a5,
      _0x467e00: 0x1843,
      _0x53bdaf: 0x740,
      _0xe6fa8a: 0x17e3,
      _0x23fb00: 0xeb6,
      _0x1b4727: 0xaef,
      _0x4afca0: 0x17d5,
      _0x243663: 0xb73,
      _0x59d220: 0x4a8,
      _0x237fd4: 0x7be,
      _0x1c1fb6: 0x15c2,
      _0x3a4db8: 0x2478,
      _0x15a9ef: 0x207,
      _0x22f076: 0xae8,
      _0x4d0ccf: 0x15df,
      _0x29dff2: 0x2280,
      _0x4d24c5: 0x24ad,
      _0x3c0a8d: 0x1c9f,
      _0x4314f0: 0x674,
      _0x2a07fe: 0x224c,
      _0x3f9b33: 0x14d2,
      _0x482128: 0x19c5,
      _0x25073d: 0x1029,
      _0x32888d: 0x2243,
      _0x130018: 0x14d2,
      _0xd3744b: 0x1105,
      _0x4474a9: 0x14d2,
      _0x1f0953: 0x19c5,
      _0x1a49ad: 0x2243,
      _0x581eca: 0x19c5,
      _0xaa213f: 0x1105,
      _0x5b84cb: 0x1927,
      _0x48920b: 0x120e,
      _0x41844f: 0x22b7,
      _0x200a11: 0x14d2,
      _0x1d1677: 0x14d2,
      _0x44ca2c: 0x92a,
      _0x1fd083: 0x19c5,
      _0x5ca1bd: 0x8d0,
      _0x1882df: 0x19c5,
      _0x287b03: 0xb5a
    },
          a0_0x529c8d = {
      _0x55543f: 0x6ba,
      _0x3dc89a: 0x949,
      _0x5dbf91: 0x17f,
      _0x1b573d: 0x1d4e,
      _0x40043: 0x949
    },
          a0_0x5c3d50 = {
      _0x6ba9bc: 0x134c
    },
          a0_0xd0873e = {
      _0x450291: 0x1aef,
      _0x3f9dc5: 0x1f0a
    },
          a0_0x510899 = {
      _0x29b7e4: 0x134c,
      _0x45fa56: 0x1fd1
    },
          a0_0x131a93 = {
      _0x18d8ca: 0x927,
      _0x505141: 0x6de,
      _0x279b67: 0x6de,
      _0x5005fd: 0x235b
    },
          a0_0x4a2aac = {
      _0x23265f: 0x4a3,
      _0x5adb0e: 0xdf3,
      _0x3212ea: 0x535,
      _0x113765: 0x535,
      _0x3b6006: 0xb4a,
      _0x3b0521: 0x125f,
      _0x2a41fb: 0x1da5
    },
          a0_0x4ec752 = {
      _0x47119e: 0x1390
    },
          a0_0x3165ce = {
      _0x14e6df: 0xe6d,
      _0x1682a7: 0x535,
      _0x52c1e4: 0x1d7c,
      _0x1a394d: 0xb4a,
      _0x30a0d8: 0x1c66,
      _0x1d61cc: 0x242c,
      _0x5b3706: 0xdf3,
      _0xc3e3e9: 0x4a3,
      _0x44e94b: 0xdf3
    },
          a0_0x3e3270 = {
      _0x4d6b1d: 0x59d
    },
          a0_0x45d911 = {
      _0x5104fd: 0x4a3,
      _0x5b745a: 0xdf3,
      _0x53cb70: 0x1b65,
      _0x240e33: 0x17f,
      _0x340a79: 0x12e4,
      _0x56ab33: 0xae2,
      _0x345f99: 0x220c,
      _0x5b8c54: 0x1d66,
      _0x194655: 0xae2,
      _0x4f7e4b: 0x535,
      _0x566a63: 0x1de9,
      _0x4fa79e: 0x14d2,
      _0x86bfb8: 0x1da5,
      _0x45f227: 0x25f9,
      _0x1490ae: 0x19d2,
      _0x53940a: 0xb4a,
      _0xae5da7: 0x1c66
    },
          a0_0x2400ee = {
      _0x16083b: 0x1fd1,
      _0x35c699: 0x535,
      _0x200f2d: 0x1a07,
      _0x59d185: 0x1510
    },
          a0_0x3c8663 = {
      _0x5db690: 0xe6d,
      _0x517d0c: 0x235b,
      _0x38d929: 0x185e,
      _0x503983: 0x1116,
      _0x313cd4: 0x1172,
      _0x4c006e: 0x1ae5,
      _0x38fc70: 0x535,
      _0x410e0a: 0x1c66,
      _0x34813f: 0x4a3
    },
          a0_0xfaa9d2 = {
      _0x118fa9: 0x59d,
      _0x1f0b87: 0x1f30,
      _0x57cc79: 0x6ba,
      _0x3709fd: 0xa8e,
      _0x513546: 0x17f,
      _0x486c26: 0x1aab,
      _0x353925: 0x25e1,
      _0x55c000: 0x17f,
      _0x5a09cf: 0x535
    },
          a0_0x313925 = {
      _0x4dcbdd: 0x535,
      _0x376948: 0x253d,
      _0x4f7da: 0x235b,
      _0x8dd8cf: 0x4b9,
      _0x2066a7: 0x25e1,
      _0xaebdb9: 0x235b,
      _0xca1268: 0x185e,
      _0x558f3b: 0x535,
      _0xe577a7: 0xf86,
      _0x3f509f: 0xf86
    },
          a0_0x58394 = {
      _0x1771ae: 0x1fc8,
      _0x6d6108: 0xe6d
    },
          a0_0x3bab55 = {
      _0x3395c8: 0x2488,
      _0x34044f: 0x535,
      _0x15c95d: 0x1b65,
      _0x5f344d: 0x1d7c,
      _0x34f908: 0x1da5,
      _0x14d4da: 0x1c66
    },
          a0_0x582bed = {
      _0x1e01f0: 0x535
    },
          a0_0x1d0ca8 = {
      _0x15c593: 0x19d2,
      _0x53f5c5: 0xa8e,
      _0x200849: 0x17f,
      _0x31ad34: 0x25e1,
      _0x3428f4: 0x25e1,
      _0x3618c8: 0x535
    },
          a0_0x5cea8e = {
      _0x40faaf: 0x535,
      _0x7a7568: 0x59d
    },
          a0_0x2aa244 = {
      _0x2660a6: 0x535,
      _0x1ae33a: 0x1b65,
      _0x3a8071: 0x1d7c,
      _0x310441: 0x14d2,
      _0x2c8a92: 0x1da5,
      _0x8dea7b: 0x102e
    },
          a0_0x1aa44b = {
      _0x24075e: 0x2379,
      _0x27cc68: 0x235b,
      _0x55535a: 0x741,
      _0x8ffb03: 0x1f39,
      _0x2adee5: 0x1ad8,
      _0x35bdcc: 0x19c5,
      _0x504f9e: 0x13ae,
      _0x1b60ae: 0x1990,
      _0x436e17: 0x19c5,
      _0x4eb007: 0x14d2,
      _0x5cfd1b: 0x7bd,
      _0x2ae0ba: 0x1a20,
      _0xac56d: 0x14d2,
      _0x3cc22f: 0x17d3,
      _0x22b5d5: 0x19c5,
      _0x5b9ed8: 0x13ae
    },
          a0_0x49eaf4 = {
      _0x707e53: 0x1fc7,
      _0x2ea0e8: 0x2330,
      _0x58a6c9: 0x1366,
      _0x12cdeb: 0x1291,
      _0x16a493: 0x2530,
      _0x4d93a2: 0x310
    },
          a0_0x56880f = {
      _0x49cc35: 0xc95,
      _0xbfd84d: 0x2250,
      _0xce7efc: 0x2330,
      _0x1620f1: 0x1d66
    },
          a0_0x109271 = {
      _0x2a82f0: 0x235b,
      _0x2353c3: 0x131d,
      _0x52ae82: 0xc95,
      _0x5ec4de: 0x1f30,
      _0x1f1f15: 0x1943,
      _0x398cfc: 0xbdc,
      _0x16809f: 0x3b1,
      _0x2df261: 0x12c4,
      _0x286154: 0x4b9,
      _0x15d461: 0x741,
      _0x13cb06: 0x13e4,
      _0x169ab9: 0x535,
      _0x4af7ca: 0x1f93,
      _0xd24c5b: 0x265b,
      _0x5942d1: 0x1db5,
      _0x4d083f: 0x1607,
      _0x419f90: 0x1d66,
      _0xb2ef41: 0xf53
    },
          a0_0x2cbfff = {
      _0xc4bc18: 0x1d66,
      _0x1e89a7: 0x628,
      _0x3c7b8f: 0x628,
      _0x3535d0: 0x25f3
    },
          a0_0x2f5384 = {
      _0x121fa5: 0x431,
      _0x3a7314: 0xb03
    },
          a0_0x3a2615 = {
      _0x372812: 0x235b,
      _0x282d23: 0x185e,
      _0x1d86f3: 0xca1,
      _0x5c31fc: 0x14d2,
      _0x45da8f: 0x19c5,
      _0x2fd9a3: 0x879,
      _0x252377: 0x24bc,
      _0x9d4acd: 0x879,
      _0x9909de: 0x879,
      _0x15f9d8: 0x24bc,
      _0x2f432f: 0x879,
      _0x262972: 0x1db5,
      _0x525f49: 0x14d2,
      _0x40fe8a: 0xe6d,
      _0xaf9f90: 0x13ae,
      _0x40ff1c: 0x19c5,
      _0xc278e5: 0x192a,
      _0x21af5b: 0x14d2,
      _0x445ec8: 0x19c5
    },
          a0_0x192b3c = {
      _0x5781f8: 0x2288,
      _0x4310bc: 0x2315,
      _0x309378: 0x2288,
      _0x2f450d: 0xffb
    },
          a0_0x5795d5 = {
      _0x16b3d2: 0x16c5,
      _0x16a34e: 0x14d2,
      _0x313227: 0xaf1,
      _0x1eb209: 0x535,
      _0x1dbd93: 0x180c,
      _0x25db8c: 0x156e,
      _0x58ed7e: 0xffb,
      _0x2f8405: 0x1edc,
      _0x5dc710: 0x1edc,
      _0xf7eaf5: 0x1da5,
      _0x3491af: 0xb5a,
      _0x4dcb6e: 0xe8c,
      _0x4a2f5f: 0x1db5,
      _0x20170c: 0x1a3
    },
          a0_0x152514 = {
      _0xa71107: 0x535,
      _0x1fa235: 0x253d,
      _0x53f52b: 0x535,
      _0x23bb27: 0x180c,
      _0x5972d3: 0x1992,
      _0x5d5c5b: 0x24fe,
      _0x6d458f: 0x1d66,
      _0x33595b: 0x24fe,
      _0x2868aa: 0x1992,
      _0x3c74c2: 0x24fe,
      _0x3d3da4: 0x1d66,
      _0x3b4d3a: 0x1992,
      _0x1c851e: 0x1992,
      _0x472582: 0x1992,
      _0x25cc30: 0x1d66,
      _0x1f2b8e: 0x24fe,
      _0x3a46e0: 0x1d66,
      _0xd4b2c1: 0x1992,
      _0x29a526: 0x1992,
      _0x1119b0: 0x1d66,
      _0x50da65: 0x1992,
      _0x8b09e5: 0x1992,
      _0x3e3501: 0x1d66,
      _0x312fcf: 0x24fe,
      _0x22ae2a: 0x1d66,
      _0x3c7e06: 0x1edc,
      _0x3cbbaf: 0x163e,
      _0x3e121a: 0x2530,
      _0x401c68: 0x24fe,
      _0x33b3d6: 0x1d66,
      _0xe89565: 0x24fe,
      _0x5cdc69: 0x1d66,
      _0x330a93: 0x628,
      _0x2dcae1: 0x1db5
    },
          a0_0x1f5af5 = {
      _0x44114f: 0x1d66,
      _0x5a8c34: 0x1db5,
      _0x48c191: 0xd4f,
      _0x296def: 0x1db5,
      _0x11ac9d: 0x1d2,
      _0x3ed0d9: 0x12e9
    },
          a0_0x251f6c = {
      _0x53d18d: 0xffb,
      _0x27da71: 0x1a3
    },
          a0_0x571e85 = {
      _0x2f635e: 0xffb,
      _0x17dcd7: 0x2488,
      _0xe445f2: 0x1a3,
      _0x3b657e: 0x7f3
    },
          a0_0xaad765 = {
      _0x439609: 0x1db5,
      _0xa7faff: 0x1ff3,
      _0x3d4245: 0x2488,
      _0x10f62c: 0x7f3,
      _0x9bb232: 0x19d2,
      _0x46e4b8: 0x535,
      _0x1beabc: 0x1985,
      _0x1b407a: 0x1985,
      _0x23715b: 0x535,
      _0x5f0719: 0x3de
    },
          a0_0x16edae = {
      _0x4be5c6: 0xffb,
      _0x529ef2: 0x2288,
      _0x5d73a7: 0x21a7,
      _0x5f3077: 0x2288,
      _0x5d5fa4: 0x74c,
      _0x88990e: 0xc49,
      _0x487e9f: 0x19d6,
      _0x5c0573: 0x11d9,
      _0x188914: 0xfa6,
      _0x74e0a1: 0xc95,
      _0x512c10: 0xc52,
      _0x304c16: 0x2288,
      _0x4b78b5: 0x14d2,
      _0x47183f: 0x1da5,
      _0x193cb3: 0x1fb9
    },
          a0_0x13f044 = {
      _0x584a54: 0x14d2,
      _0x2b3006: 0x14d2,
      _0x56efc8: 0x25be,
      _0x1934c7: 0x19c5,
      _0x2aac30: 0x15f3,
      _0x30f401: 0x175c
    },
          a0_0x23fa30 = {
      _0x166f70: 0x19e6,
      _0x513b49: 0x7e1
    },
          a0_0x19f8c6 = {
      _0x38b953: 0x628,
      _0x30d546: 0x12dd,
      _0x44a2c2: 0x1e8c
    },
          a0_0x4aee00 = {
      _0x5096ba: 0x7e1,
      _0x4c76cc: 0x1985,
      _0xaaaefb: 0x2530
    },
          a0_0x3c7129 = {
      _0x79266a: 0x7e1,
      _0x3bcc6d: 0x2104,
      _0x287b42: 0x1896
    },
          a0_0x3e849d = {
      _0x2a5ccc: 0x7e1,
      _0xae819: 0x7e1,
      _0x45d3cc: 0x7e1
    },
          a0_0x2d6fc5 = {
      _0x2e3ccd: 0x185e,
      _0x29ce16: 0x2379,
      _0xdf3467: 0x39d,
      _0x4e0854: 0x1c5,
      _0x3aee77: 0x11e0,
      _0x3d8eea: 0x1c02,
      _0x3575ad: 0xe03,
      _0x4071af: 0x11e0,
      _0x4b99fb: 0x1674,
      _0x1b5427: 0x14d2,
      _0x5ebdfa: 0x19c5,
      _0x2257d1: 0x1b3e
    },
          a0_0x5f1eb4 = {
      _0x1b79e0: 0x1c9,
      _0x5e84fb: 0xbd1,
      _0x4ee059: 0x1351,
      _0x37f6f9: 0x901,
      _0x3856ac: 0x1467,
      _0xbfa16b: 0xa77,
      _0x6aa593: 0x16a,
      _0x1e9ba4: 0x2d4,
      _0x2bbb5b: 0x31c,
      _0x3065cb: 0xe51,
      _0x2c797b: 0x232a,
      _0x54091d: 0x1113,
      _0x529346: 0x1e7f,
      _0x2ca5db: 0x1e5e,
      _0x1eaf44: 0x15c9,
      _0x46cc96: 0x19c3,
      _0x20ad18: 0x11c5,
      _0x1b5e7d: 0x241c,
      _0x1666b1: 0xcff,
      _0x35351b: 0x204f,
      _0x22d697: 0x14d2,
      _0x177569: 0x19c5
    },
          a0_0x126eb6 = {
      _0x5b9f02: 0x1d66,
      _0x553cc6: 0x1e35,
      _0x67e8d1: 0x1d66
    },
          a0_0x514d1b = {
      _0x46bb60: 0xf2f,
      _0xfa1100: 0x1d66,
      _0x21c51b: 0x2019,
      _0x40c98e: 0x173d,
      _0x16eecc: 0x1a4d,
      _0xe27659: 0x91b
    },
          a0_0x65215f = {
      _0xa4eb55: 0x235b,
      _0x7e84d4: 0x2608,
      _0x107c5e: 0xdaa,
      _0x4e302a: 0x14d2,
      _0x324315: 0x2136,
      _0x5124f2: 0x738,
      _0x55b4c2: 0x14d2,
      _0x58849e: 0x19c5,
      _0xec8c9f: 0x9de,
      _0x3977c0: 0x204f,
      _0x259d59: 0x14d2,
      _0x1f6f8a: 0x14d2,
      _0x2780e4: 0x519,
      _0x4e64df: 0x10d9,
      _0xeb0120: 0x19c5,
      _0x33b907: 0x126d,
      _0x19db23: 0x45f,
      _0x17e09d: 0x19c5,
      _0x58e6cd: 0x24bc,
      _0xee41d0: 0x2212,
      _0x13bb26: 0x2212,
      _0x20057d: 0x11f9,
      _0x5da906: 0x879
    },
          a0_0x3c07ea = {
      _0xa4eee5: 0x8e4,
      _0x51f1f9: 0x535,
      _0xfe6c63: 0xbc0,
      _0xb623d0: 0x2001,
      _0xe99c29: 0x253d,
      _0x3b6288: 0xc95,
      _0xa9da85: 0x1e6b,
      _0x326776: 0x1934,
      _0x43d480: 0x1c92,
      _0x509d3d: 0xdb2,
      _0x3e510d: 0x1f3e,
      _0x487848: 0x983,
      _0x19cb63: 0x192d,
      _0x5a6ed3: 0x15af,
      _0x1fa66c: 0x14d2,
      _0x8061cc: 0x1688,
      _0x554405: 0x2488,
      _0x3de31a: 0x1a3,
      _0x2e1164: 0xf05,
      _0x363975: 0x9b5,
      _0x10f1f0: 0x1293,
      _0x6b895d: 0x1a7a,
      _0x5b8e1f: 0x535,
      _0xb02b16: 0x535,
      _0x8e9fd7: 0x1de9,
      _0x4a7f57: 0x8f8,
      _0x7eaa93: 0x1a7a,
      _0x2b0325: 0x2063,
      _0x159c88: 0x19c5,
      _0x2ed6da: 0xdaa,
      _0x3e2d8c: 0x1d56,
      _0x1786f1: 0x1a4d
    },
          a0_0x317998 = {
      _0x3eece8: 0x8e4,
      _0x1712a9: 0x18e5,
      _0x46b65a: 0x1d66,
      _0x23724e: 0x1870,
      _0x727a75: 0x91b
    },
          a0_0x590519 = {
      _0x122723: 0x253d,
      _0x2537fd: 0x242c,
      _0x18fd61: 0xc95,
      _0x19a807: 0x535,
      _0x226708: 0x1c92,
      _0x4acb28: 0x192d,
      _0x4e7b3d: 0x1934,
      _0x37e337: 0x3e4,
      _0x2218ec: 0x1934,
      _0x30c6c6: 0x535,
      _0x47a712: 0xdb2,
      _0x581dbd: 0x1934,
      _0x2e6ea5: 0x7ef,
      _0x1da928: 0x8e4,
      _0x34ead7: 0x18e5,
      _0x23d446: 0x1a4d,
      _0x52f1a0: 0x1326
    },
          a0_0x1f30d8 = {
      _0x1f20c3: 0x869,
      _0x187e75: 0x24bc,
      _0x3ad65b: 0x2212,
      _0x2f4999: 0x879,
      _0x2d36cc: 0x2212
    },
          a0_0x3d72ba = {
      _0x4b337f: 0x7ef,
      _0x3cacba: 0x1b31,
      _0x518b5e: 0x2108,
      _0x6c174b: 0x1a4d,
      _0x1b5ad0: 0x1d66,
      _0x2446e7: 0x1870,
      _0x11f64a: 0x91b
    },
          a0_0x4db845 = {
      _0x2a8aec: 0x1d77,
      _0x55531d: 0x9ad,
      _0x3dc488: 0x1d18,
      _0x2acb90: 0x226e,
      _0x580144: 0x1d18
    },
          a0_0x2b101f = {
      _0x2527fa: 0x2167,
      _0x6a2bc0: 0x1edc,
      _0x5fee32: 0x2001,
      _0x35c436: 0x1b31,
      _0x229dab: 0x163d,
      _0x1db9ef: 0xacf,
      _0x15d7e3: 0xbd8
    },
          a0_0x458348 = {
      _0xcae66a: 0x805
    },
          a0_0x2d0941 = {
      _0x59c463: 0x535,
      _0x197c9d: 0x253d
    },
          a0_0xa46220 = {
      _0x3d848d: 0xb08,
      _0x5455b0: 0x235b,
      _0x45d640: 0xb08,
      _0x7dbe40: 0x1d77,
      _0x3be7f1: 0xbd8
    },
          a0_0x76f070 = {
      _0x1580c1: 0x2063,
      _0x22dac3: 0x16c5,
      _0x28f345: 0xadd,
      _0x13a57d: 0x535,
      _0x2ca64c: 0x2323,
      _0x502683: 0x535,
      _0x53888c: 0xb0c,
      _0x240661: 0x2001,
      _0x396fe6: 0x1a3,
      _0x72e2d9: 0x1d11,
      _0x149f74: 0x112d
    },
          a0_0x2c60e5 = {
      _0xa94048: 0x535,
      _0x181de9: 0x21f5
    },
          a0_0x23ba7d = {
      _0x1a531e: 0x14d2,
      _0x226017: 0x19c5,
      _0x1a7f0c: 0x1727,
      _0x2ff3ea: 0x879,
      _0x25ef2d: 0x1038,
      _0x13ace2: 0x1e5f,
      _0x58f1dc: 0x14d2,
      _0x552947: 0x14d2,
      _0x395118: 0x1d66,
      _0x5ad120: 0x2379,
      _0x57665d: 0x235b,
      _0x144d48: 0x185e,
      _0x1a6503: 0x2021,
      _0x58debb: 0x2315,
      _0x2bbd96: 0x2352,
      _0x20c64e: 0x50d,
      _0x5b394e: 0x11fd,
      _0x3a2bf0: 0x10af,
      _0x4889a3: 0x1367,
      _0x5b70b6: 0x124c,
      _0x3a204c: 0xa18,
      _0x24b1df: 0xc6b,
      _0x567495: 0x174b,
      _0x29c80f: 0xe46,
      _0x577ba5: 0x18c1,
      _0x301f38: 0xc83,
      _0x35bb20: 0x18c1,
      _0x4cef30: 0x1d7c,
      _0x15b1af: 0x14d2,
      _0x46fb57: 0x19c5,
      _0x29f6b1: 0xd17,
      _0x43c010: 0x19c5,
      _0x2df181: 0x175c,
      _0xd74dc9: 0x19c5,
      _0x5e7d62: 0x1a6e,
      _0x2143e6: 0x19c5,
      _0x35cca0: 0xa44,
      _0x30ecdc: 0xcd6,
      _0x4d3cc5: 0xcd6,
      _0x25cb0b: 0x131d,
      _0x3d805c: 0xcd6,
      _0x4bb19d: 0x14d2,
      _0xde96a5: 0xd9b,
      _0x30bc1b: 0x14d2,
      _0x5cb764: 0x19c5,
      _0x4b3e70: 0x14d2,
      _0x3c924d: 0xcc5,
      _0x267916: 0x19c5,
      _0x472682: 0x1480,
      _0x1c9b4d: 0x19c5,
      _0x1700d4: 0x722,
      _0x348991: 0x14d2,
      _0x1c8db3: 0x14d2,
      _0x1dd2d5: 0x19c5,
      _0x1aa7c0: 0x14d2,
      _0x388e58: 0x14d2,
      _0x2d7e3d: 0x14d2,
      _0x39a2fc: 0x14dd,
      _0x56e587: 0xa83,
      _0x4cf470: 0xb26,
      _0x117c45: 0x19c5,
      _0x2a2872: 0x673,
      _0x2dbd75: 0x19c5,
      _0x375e49: 0x14d2,
      _0x5ed383: 0x14d2,
      _0x3f0016: 0x14d2,
      _0x5d9581: 0x19c5,
      _0x3b04c2: 0x14ea,
      _0x5b9c2f: 0x14d2,
      _0x3687d0: 0x19c5,
      _0x345c0f: 0x1562,
      _0x343190: 0x1f88,
      _0x3b3d27: 0x19c5,
      _0x476f3a: 0x1ea9,
      _0x5c9a15: 0x19c5,
      _0x111309: 0x2525,
      _0x104a94: 0xe69,
      _0xf6654f: 0x14d2,
      _0x202c2f: 0x14d2,
      _0x31bb54: 0x19c5,
      _0x3a1d00: 0x25ae,
      _0x4dc44a: 0x14d2,
      _0x14d910: 0x14d2,
      _0x409301: 0x19c5,
      _0x7bcc26: 0x6bd,
      _0x39c98f: 0x23d4,
      _0x375e94: 0x19b,
      _0x4ade38: 0x14d2,
      _0x1d8e42: 0x15bd,
      _0xccdced: 0x19c5,
      _0x3946de: 0x1df,
      _0x298af4: 0x2a8,
      _0x134b07: 0x1391,
      _0x5151ee: 0x1d7c,
      _0x2183a2: 0xe03,
      _0xd2f8a7: 0x145f,
      _0x11c629: 0x2489,
      _0x1e8934: 0x1fbf
    },
          a0_0x2f4708 = {
      _0x207b18: 0x12dd,
      _0x4057c5: 0x1d6e,
      _0x53d865: 0x15b1,
      _0x188802: 0xbdc,
      _0x51b6cc: 0x535,
      _0x53f539: 0x2379,
      _0x23d8b9: 0x1d66
    },
          a0_0x5c6275 = {
      _0x622aa7: 0xf79,
      _0x1f4c02: 0xc95,
      _0x7bc3b6: 0x6da
    },
          a0_0x57267d = {
      _0x422f96: 0x19c5,
      _0x771a1c: 0x2530,
      _0xb75aee: 0xd00,
      _0x4b8e9d: 0x19c5,
      _0x615b46: 0x11f5,
      _0x4b27cb: 0x1db9,
      _0x5e4aa2: 0x1db9,
      _0x33690b: 0x19d2,
      _0x4b3056: 0x535,
      _0x177dc7: 0x1985,
      _0x5063dc: 0x628,
      _0x7a1d21: 0x2530,
      _0x530946: 0xd00,
      _0x18582b: 0x1d66,
      _0x18f4c7: 0x2379,
      _0x26db52: 0x1db9,
      _0x345379: 0x197a,
      _0x48c271: 0x2530,
      _0x3dcc03: 0x1a2c
    },
          a0_0x2362d5 = {
      _0x3fac42: 0x11cc,
      _0x4b1b66: 0x235b,
      _0x5e2370: 0x2530
    },
          a0_0x53929f = {
      _0x5a6270: 0x62d
    },
          a0_0xb53639 = {
      _0x51e837: 0x1a3,
      _0x53c386: 0x2488,
      _0x2b78d5: 0x90a
    },
          a0_0x81e2a8 = {
      _0x1aa38b: 0x1a3,
      _0x295d6b: 0x1bca
    },
          a0_0x569f1a = {
      _0x1a740e: 0x2488,
      _0x21b480: 0x112d
    },
          a0_0x266fe3 = {
      _0x10d1df: 0x2288,
      _0x7e26a9: 0x1a3
    },
          a0_0x3e3991 = {
      _0x4b0bb8: 0x1a3
    },
          a0_0xc91785 = {
      _0x2b8fae: 0x12c1,
      _0x352604: 0x1a3,
      _0x34be64: 0x1664,
      _0x145e16: 0x112d
    },
          a0_0x5ce8f1 = {
      _0x9d1809: 0x1a3,
      _0x1b70e0: 0x151d
    },
          a0_0x4cb19f = {
      _0x1aab62: 0x14a5,
      _0x5442f3: 0x1f4c,
      _0x4991b2: 0xeb1
    },
          a0_0xbffd18 = {
      _0x9a28dc: 0x11fd
    },
          a0_0x34c681 = {
      _0x119bcd: 0x1ab1
    },
          a0_0xa51e65 = {
      _0x4c59b0: 0x628,
      _0x2edf10: 0x2315,
      _0x5deb25: 0x2315
    },
          a0_0x4df5fd = {
      _0x1c8491: 0x628,
      _0x541a99: 0x2315,
      _0x30985d: 0x1a2c
    },
          a0_0x5c353f = {
      _0x84eee7: 0x2021,
      _0x5e7b1b: 0x1a5,
      _0x38f452: 0x1944
    },
          a0_0x405ba = {
      _0x198adc: 0x1dc,
      _0x5c94b7: 0x1349
    },
          a0_0x21446c = {
      _0x199a8b: 0x25b8
    },
          a0_0x570b49 = {
      _0x40b958: 0x628,
      _0x47e986: 0x19e6
    },
          a0_0x47eaed = {
      _0x249813: 0x628,
      _0x32cc26: 0x19e6,
      _0x134cf9: 0x235b,
      _0x174a19: 0x2530,
      _0x3e3b89: 0x1700,
      _0x219dd6: 0x2292,
      _0x55b137: 0x1d66,
      _0x522b10: 0xe1b,
      _0x2254d2: 0x1d2c,
      _0x410433: 0x2292,
      _0x1bbd3f: 0xe1b,
      _0x30c3a8: 0x2530
    },
          a0_0x3fb537 = {
      _0x3d3557: 0x13b4,
      _0x2b5cc5: 0x1d66,
      _0x50cd98: 0x2379,
      _0x11f020: 0x362,
      _0x2ece7f: 0xb3d,
      _0x1f7fe6: 0x219a
    },
          a0_0xd6d25e = {
      _0x269997: 0x235b,
      _0xbb7bfc: 0x16c5,
      _0x3e1384: 0x2530,
      _0x2f5fd1: 0xb3d,
      _0xdd2fac: 0x535,
      _0x54f17e: 0x2379,
      _0x574344: 0x112d,
      _0x4c5ccb: 0x10bf,
      _0x34c8a0: 0x24bc
    },
          a0_0x1421ad = {
      _0x44222d: 0xadd
    },
          a0_0x1a9aad = {
      _0x1e2626: 0x235b,
      _0x4b5d6d: 0x16c5,
      _0x8e577b: 0xc95,
      _0x53ae42: 0x1d7c,
      _0x249ffe: 0x7ef,
      _0x53d27c: 0xdd6,
      _0x385a36: 0xdd6,
      _0x44431e: 0x24de,
      _0x53a02d: 0x927,
      _0x9b0c3d: 0x82d,
      _0x114d16: 0x4bd,
      _0x52e88b: 0x4bd,
      _0x6ccb6a: 0x1c3b
    },
          a0_0x3bca74 = {
      _0x4378c2: 0x16c5,
      _0x50f227: 0x535,
      _0x530a05: 0x10b9,
      _0x46cb94: 0x535,
      _0x38b93b: 0xf71,
      _0x588165: 0x185e,
      _0x10e2c1: 0x623,
      _0x2bd8d7: 0x1dc8,
      _0x102355: 0x6da,
      _0x366b56: 0x1b8f,
      _0x3449d6: 0x24bc,
      _0x2f9f2d: 0x1edc,
      _0x3b4636: 0x1fbe,
      _0x812de: 0xe6d
    },
          a0_0x2b91b9 = {
      _0x3880a0: 0x16c5,
      _0x58d5d9: 0x2239,
      _0x5440ee: 0x535,
      _0x8b31ad: 0x1dc8,
      _0x34b71c: 0x6da,
      _0x5a694f: 0x21e0,
      _0x39dbf1: 0x1b5,
      _0x320094: 0x987,
      _0x15708a: 0x1d66,
      _0x590828: 0x47a,
      _0x1f9e39: 0x1063
    },
          a0_0x11f6f3 = {
      _0x2a3bb4: 0x1d7c,
      _0x5405ff: 0x535,
      _0x25ad9b: 0x1063
    },
          a0_0x10086a = {
      _0x5914ef: 0x2379,
      _0x4ea506: 0x235b,
      _0x148991: 0x185e,
      _0x384238: 0x258d,
      _0x11ef8a: 0x2323,
      _0x178b71: 0x1da5,
      _0x3ca2a6: 0x82d,
      _0x174538: 0x1063
    },
          a0_0x332ce6 = {
      _0x4fd90c: 0x1d66,
      _0xcbdfea: 0x185e,
      _0xcc4138: 0x258d,
      _0x221975: 0x1da5,
      _0x35f72d: 0x1ee,
      _0x3bf6af: 0x82d,
      _0x5207bd: 0x535
    },
          a0_0x34db1f = {
      _0x1092ad: 0x150e,
      _0x255700: 0x1d7c,
      _0x445227: 0x2400,
      _0x302b5a: 0x535
    },
          a0_0x266171 = {
      _0x328282: 0x235b,
      _0x354e30: 0x16c5,
      _0x253d2b: 0x258d,
      _0x41f18e: 0x16cb,
      _0x308e8d: 0x535,
      _0x4b035e: 0x1063
    },
          a0_0x3f2028 = {
      _0x2dbb71: 0x235b,
      _0x325dfa: 0x16c5,
      _0x1c69cf: 0x150e,
      _0x3fcc0a: 0x2606,
      _0x4c5e72: 0x17f,
      _0x3a2383: 0x2530,
      _0x272e68: 0x1fe9,
      _0x3d1c69: 0x9ab,
      _0x4e4c82: 0x1d66,
      _0x358324: 0x2140,
      _0x209f08: 0x11dc,
      _0x3d1849: 0x14cc,
      _0x1b3ed8: 0x150e,
      _0x324eec: 0x535
    },
          a0_0x29d85b = {
      _0x483648: 0x14d2,
      _0x3902d7: 0x1da5,
      _0x33d424: 0x112d,
      _0x516beb: 0x2ae
    },
          a0_0x49a78a = {
      _0x115a4c: 0x2303,
      _0xf891af: 0x1e2a,
      _0x48a8ef: 0x22e9,
      _0x414e4d: 0x5de
    },
          a0_0x55bad5 = {
      _0x406c35: 0x235b,
      _0x242c46: 0x1d66,
      _0x519f2e: 0xf2f,
      _0x290532: 0x15d1,
      _0x3781a1: 0x1d66
    },
          a0_0x31e27c = {
      _0x322917: 0x185e,
      _0x32461a: 0x14d2,
      _0x57c19b: 0x19c5
    },
          a0_0x1ed263 = {
      _0x23f2a8: 0x535,
      _0x47a4b9: 0x4b9,
      _0x4c267b: 0x1d66,
      _0x4ae7c7: 0x628,
      _0x1a6469: 0x9c8,
      _0x5195da: 0x162f,
      _0x303c24: 0x14d2,
      _0x46b162: 0x91a,
      _0x5b1950: 0x7c6,
      _0x14a495: 0x181d,
      _0x3cdb87: 0x1da5,
      _0x54e3de: 0x181d,
      _0x506b19: 0x24eb,
      _0x5469db: 0x4b9,
      _0x3d100e: 0x163e,
      _0x369611: 0x2530,
      _0x4897b1: 0x1659,
      _0xb7b97a: 0x1659,
      _0x1b128f: 0x14d2,
      _0x40b673: 0x1da5,
      _0x2dfaf7: 0x91a,
      _0x58c131: 0x1659,
      _0x588d6d: 0x4b9,
      _0x142867: 0x24eb,
      _0x554eee: 0x4b9,
      _0x1f2b9b: 0x1b9d,
      _0xc1ac78: 0x2530,
      _0x3dc380: 0x1711,
      _0x116909: 0x1da5,
      _0x4df521: 0x1711
    },
          a0_0x5f94cc = {
      _0x50dbbd: 0x1d66,
      _0x1123f1: 0x1d66,
      _0x2cd034: 0x2379,
      _0xb02a49: 0xcf5,
      _0x137617: 0x198a,
      _0x165307: 0x2379,
      _0x31d54e: 0x1c64,
      _0x17554d: 0x181d,
      _0x74c358: 0x2b9,
      _0x5b35f6: 0x1d66,
      _0x15210e: 0x2379,
      _0x5c9406: 0x198a,
      _0x302573: 0xa25,
      _0x263a69: 0x1d66,
      _0x2c5952: 0x71c
    },
          a0_0x230c62 = {
      _0x41e3bf: 0x2579,
      _0x408841: 0x235b,
      _0x442f24: 0x185e,
      _0x2c6cb5: 0x19c5,
      _0x4eb8a6: 0x1a66,
      _0x3fa79a: 0x14d2,
      _0xd06f7d: 0x2190,
      _0x3f24d4: 0x14d2,
      _0x5ce6c6: 0x19c5,
      _0x4bbca3: 0x126e,
      _0x2158cb: 0x19c5,
      _0x4606ba: 0x1e34,
      _0x455208: 0x9de,
      _0x2347be: 0x19c5,
      _0x348d15: 0x753,
      _0x7d4af7: 0x19c5,
      _0x44edeb: 0xd17,
      _0x27dbc5: 0x14d2,
      _0x8737c2: 0x14d2
    },
          a0_0x2ca643 = {
      _0x3729a1: 0x1d8,
      _0x56b6d1: 0x2579,
      _0x4dc37b: 0x1d8,
      _0xc40196: 0x1820,
      _0x36c969: 0x2653,
      _0x5aa812: 0x6ba,
      _0xf0102f: 0x9ab
    },
          a0_0x279ffc = {
      _0x28cb86: 0x10c9,
      _0x237c04: 0x1d8,
      _0x30c399: 0x17e8,
      _0x21b3f1: 0x235b,
      _0x105b0d: 0x1d8,
      _0x4e5ebe: 0x2488,
      _0x2f99c5: 0x1a3
    },
          a0_0xa31822 = {
      _0x4957e1: 0x1d8,
      _0x906a4b: 0x14d2
    },
          a0_0x1b8d09 = {
      _0x5dd301: 0x17cd
    },
          a0_0x422305 = {
      _0x5f2adf: 0x14d2,
      _0x23eec7: 0x1a5,
      _0x4ebef1: 0x262e,
      _0x3e8cd4: 0x1aff,
      _0x2ed288: 0x17cd
    },
          a0_0x22ccf8 = {
      _0x31f437: 0xdf2,
      _0xa27484: 0x1a07,
      _0x2b65a7: 0x1934,
      _0x308a65: 0x535,
      _0x3e55cd: 0x1a07,
      _0x344f47: 0x1ea0,
      _0x13acb5: 0x4a9,
      _0x2de11c: 0x1a0e,
      _0x2e19f2: 0x535,
      _0x804e36: 0x1a07,
      _0x1026be: 0x1223,
      _0x52c16b: 0x9dd,
      _0x420738: 0x123b
    },
          a0_0x25d564 = {
      _0x5ce8f2: 0x1d8,
      _0x126bba: 0x235b,
      _0xd97eee: 0x1820,
      _0x5deded: 0x1d8,
      _0x3ee502: 0x1a3,
      _0x267119: 0x264,
      _0x59489d: 0x1d8,
      _0x358ec1: 0x235b,
      _0xf05fb4: 0x1d8,
      _0x2b4d13: 0x1a2c,
      _0x2a4d34: 0x1d8,
      _0x277475: 0x2579,
      _0x3bc701: 0x14d2,
      _0x3208b0: 0x1a5,
      _0x50f1e4: 0x1d8,
      _0x1ea903: 0x8a0,
      _0x5a2790: 0x16c5,
      _0x1aad7b: 0x1985,
      _0x169778: 0x1f43,
      _0x1aebe7: 0x2653,
      _0x1f3d49: 0x2488
    },
          a0_0x575bb3 = {
      _0x3b00c1: 0x1820,
      _0x32122c: 0x2653,
      _0x5ccee4: 0x6ba,
      _0xed02d9: 0x1d8,
      _0xc0d7d4: 0x21e0,
      _0x4d2532: 0xf82
    },
          a0_0x51587c = {
      _0x4d3375: 0x235b,
      _0x5945ec: 0x16c5,
      _0x499dc5: 0x535,
      _0x31544f: 0x1f43,
      _0x3f5493: 0x21e0,
      _0x194485: 0x535,
      _0x59da94: 0x2653,
      _0x11489b: 0x197,
      _0x372c37: 0x1985,
      _0x43e712: 0x308
    },
          a0_0x5750e4 = {
      _0x2f9c19: 0x1066,
      _0x3b58c5: 0x17e8,
      _0x17173a: 0x24f8,
      _0x259d9e: 0x13f4,
      _0x72cd95: 0x1e94
    },
          a0_0x41dd4e = {
      _0x394b3a: 0x1d66,
      _0x192249: 0x186b,
      _0x4be672: 0x1d48,
      _0x52f523: 0x330,
      _0x480439: 0x235b,
      _0xdd964b: 0x185e,
      _0xfc5c30: 0x21ee,
      _0x57ab5f: 0x8d7,
      _0x173106: 0x1f1b,
      _0xbe89f7: 0x17d7,
      _0x456975: 0x379,
      _0x5c8ba5: 0x217f,
      _0x5d7999: 0x14d2,
      _0x267b1d: 0x121d,
      _0x29f86a: 0x19c5,
      _0x544ee7: 0x14d2,
      _0x4f80e6: 0xe6d
    },
          a0_0x41ec81 = {
      _0x7b310c: 0x436,
      _0x20bf90: 0x379,
      _0x52f96e: 0x217f,
      _0x31da9b: 0x199c,
      _0x11fd16: 0x217f,
      _0x3fcefe: 0x2530,
      _0x4b6739: 0x7c7,
      _0x5eb7e6: 0x1528,
      _0x4508c7: 0x1528,
      _0x244f45: 0x2530,
      _0x588f76: 0x83c,
      _0x4cb7b4: 0x2167,
      _0x4c6711: 0x157e,
      _0x14347f: 0x2530,
      _0x3a772b: 0x1ec5,
      _0x32d760: 0x1c7c
    },
          a0_0x3b8108 = {
      _0x4ffdbb: 0x253d,
      _0x3e848c: 0x235b,
      _0x1173fd: 0xd3f
    },
          a0_0x33e819 = {
      _0x5ce2b6: 0x1355,
      _0x13ba1b: 0x19d2,
      _0x1a2830: 0x253d,
      _0xa02d05: 0x25b8,
      _0x360931: 0xc74,
      _0x4f0bae: 0x1c34,
      _0x32c514: 0x156e
    },
          a0_0x5a107f = {
      _0x3c37a8: 0x20fb
    },
          a0_0x2b2874 = {
      _0x309ce8: 0x235b,
      _0x42ecaa: 0x185e,
      _0x3f9ca7: 0x1aab,
      _0x3151ea: 0x464,
      _0x4e7abe: 0x1aab,
      _0x34eeb4: 0x2405,
      _0x5b1cde: 0x1fab,
      _0x561116: 0x1fab,
      _0x3cbab9: 0x40b,
      _0x5d0956: 0x19c5,
      _0x2de490: 0x19c5,
      _0x4051b6: 0x1029
    },
          a0_0x3c2d70 = {
      _0x58ebdc: 0x253d,
      _0x58322e: 0x1aab,
      _0x211268: 0x1edc
    },
          a0_0x36bfeb = {
      _0x25a186: 0x99b,
      _0xae7d50: 0x2315,
      _0x33e914: 0x21a7,
      _0x49a46f: 0x2315,
      _0x524e17: 0x1bc7,
      _0x1e90c3: 0xeb8,
      _0x17a74e: 0x2315,
      _0x331fe1: 0x2315,
      _0x825a12: 0x1673,
      _0x3f3856: 0x168c,
      _0x5713db: 0x23b7,
      _0x45449f: 0x2119,
      _0x4164e1: 0x2315,
      _0x3f0f44: 0xf56,
      _0x4187fb: 0x971,
      _0x1ebc2f: 0x1bfe,
      _0x249a49: 0xe63,
      _0xea70cb: 0x2315,
      _0x553990: 0x14ce,
      _0x1dabf0: 0x2315
    },
          a0_0x44bccb = {
      _0x37e92b: 0x535
    },
          a0_0x1dda17 = {
      _0x19a0a6: 0x1f30,
      _0x20fa72: 0x1a6b,
      _0x2a6b30: 0x14d2,
      _0x579971: 0x19c5,
      _0x238096: 0x121d
    },
          a0_0xee77cb = {
      _0x2db0b0: 0x1f30,
      _0x1e0246: 0x300,
      _0x54e362: 0x2a2
    },
          a0_0xcbcf13 = {
      _0x31310c: 0x235b,
      _0x4326bb: 0x185e,
      _0x4bd283: 0x14d2,
      _0x2f9e44: 0x19c5,
      _0x579c90: 0x11d8
    },
          a0_0x1a808f = {
      _0x48d451: 0x154c,
      _0x560bb1: 0x9ac,
      _0x331989: 0x14d2,
      _0x4be7a7: 0x19c5,
      _0xe56227: 0xd17,
      _0x157604: 0x1558,
      _0x15e61c: 0x1d6c,
      _0x30a956: 0x224b
    },
          a0_0x522779 = {
      _0x209d45: 0x235b,
      _0x404011: 0x32e,
      _0x50c72c: 0xc74,
      _0x4b98c3: 0xc95,
      _0x348ad5: 0x24a8,
      _0x4ace93: 0x3e4
    },
          a0_0x5d984f = {
      _0x138a4e: 0x209f,
      _0x51ea05: 0xadd,
      _0x4e7eec: 0x10dd,
      _0x55766c: 0x24a8,
      _0x7c6e21: 0xd3f,
      _0x51d7aa: 0x535,
      _0x57f337: 0x235b,
      _0x591885: 0x1a5,
      _0x16d50f: 0x253f,
      _0x303302: 0x185e,
      _0x3ba7bc: 0x2530,
      _0x2c6c2f: 0x1c92,
      _0x35c29e: 0x6aa,
      _0x56f7ac: 0x1934,
      _0x4fa0fe: 0x14d2,
      _0xf4a288: 0x1da5,
      _0x59b181: 0x89c
    },
          a0_0xce309a = {
      _0x5a2f6b: 0x24a8,
      _0x1c6f9b: 0x24a8,
      _0x2c0d37: 0x209f,
      _0x52ee1b: 0x10dd,
      _0x1cabc8: 0x1bc2,
      _0x359e48: 0x185e,
      _0x421622: 0x1a5,
      _0x29697e: 0x253f,
      _0x11fcd5: 0x2530,
      _0x217a28: 0x1ec3,
      _0x8c4caa: 0x535,
      _0x385778: 0x1c92,
      _0x2d7010: 0x14d2,
      _0x208b44: 0x1da5,
      _0x1f98b6: 0x89c
    },
          a0_0x415834 = {
      _0x4ecbc1: 0x22b2,
      _0x252681: 0x1edc,
      _0x192793: 0x1770,
      _0xc000b: 0xcdc,
      _0xbf44fe: 0x1edc,
      _0x440ef8: 0x1770,
      _0x1a561d: 0x1d6c,
      _0x2ba1d2: 0x1770
    },
          a0_0x1f45ce = {
      _0x40be01: 0x35f,
      _0x269f13: 0x1770,
      _0x4af1d1: 0x1e13,
      _0x184735: 0xcce
    },
          a0_0x2601aa = {
      _0x45cd4e: 0x14d2,
      _0x4fd6d6: 0x24bc
    },
          a0_0x4fd145 = {
      _0x172731: 0x628,
      _0x44411c: 0x9c8,
      _0xf61023: 0xa65,
      _0xc2e947: 0x235b,
      _0x5bf938: 0x185e,
      _0xad82bc: 0x1d66,
      _0x29439c: 0x2072,
      _0x3bff3d: 0x1707,
      _0x260132: 0x2085,
      _0x4a5dce: 0x235b,
      _0x2b9a78: 0x8cd,
      _0x5cde47: 0x535,
      _0x173791: 0x1d55,
      _0x5a81d3: 0x235b,
      _0x1ff282: 0x2530,
      _0x3f721d: 0x1d66,
      _0x5990ae: 0x1e81,
      _0x7e1f: 0x6d9,
      _0x201343: 0x307,
      _0x2704a0: 0x235b,
      _0x5054f5: 0x1b4c,
      _0x50f0f9: 0x3ad,
      _0x1783b3: 0x535,
      _0x1ed5a9: 0x1985,
      _0x1a47f5: 0xfb3,
      _0x2df832: 0x13bf,
      _0x24478d: 0xffb,
      _0x3f7c2f: 0x263e
    },
          a0_0x36b32a = {
      _0x2879b: 0x14d2,
      _0x15707f: 0x19c5,
      _0x2bab01: 0x19c5,
      _0x2d1b79: 0x1092
    },
          a0_0x2193f4 = {
      _0x4ee7b7: 0x535,
      _0x246850: 0x1d66,
      _0x1aeacc: 0x1870,
      _0x215704: 0xf25,
      _0x1b6648: 0xfc6,
      _0x51f3d5: 0x995
    },
          a0_0x1637e3 = {
      _0x1f8156: 0x535,
      _0x1d7b72: 0x253d,
      _0x284979: 0x1ec5,
      _0x51ec12: 0xc52,
      _0x416edc: 0x995,
      _0x33529d: 0x11ac,
      _0x2e0a11: 0x1a5,
      _0x3139b9: 0x1092,
      _0x23dc63: 0x535,
      _0x10b3d8: 0x235b,
      _0x2f348b: 0x342,
      _0x4df22c: 0x235b,
      _0xfd01ce: 0x185e,
      _0x2b6177: 0x1dd7,
      _0x5f2ad7: 0x23ed
    },
          a0_0xdd99c4 = {
      _0x1d3918: 0x235b,
      _0x53f7ba: 0x185e,
      _0x23ddec: 0x19c5,
      _0x2e13f7: 0xfd8,
      _0x428447: 0x14d2,
      _0xf2349: 0x19c5,
      _0x1d2096: 0x121d,
      _0x36a081: 0x14d2,
      _0x499ee7: 0x19c5,
      _0xb7e131: 0x204f
    },
          a0_0x573fd3 = {
      _0x1cc77e: 0x535
    },
          a0_0x389020 = {
      _0x2f5e5e: 0x19d6,
      _0x5cab7a: 0x535
    },
          a0_0xf0709c = {
      _0x1b617a: 0x1d66,
      _0xd9065d: 0x1e35,
      _0x12883f: 0x535,
      _0x36c95f: 0xbb1,
      _0x4654a0: 0x535,
      _0x43af20: 0x623,
      _0x4e970d: 0x3e4,
      _0x4b8cdc: 0x2250
    },
          a0_0x1bce57 = {
      _0x22df88: 0x235b,
      _0x2b4cbe: 0x18d1,
      _0x3b68d7: 0x1d66,
      _0x442103: 0x12b9,
      _0x17d9ee: 0xb22,
      _0x57b751: 0x2379,
      _0x2afc8b: 0x1154,
      _0x263826: 0x76f,
      _0x523ee7: 0x2379,
      _0x3fee39: 0x1394,
      _0x3b4d79: 0x18e,
      _0x44f856: 0x2379,
      _0x123682: 0x24e2,
      _0x4c2d0f: 0x1cbe,
      _0x3b0d4c: 0x1d66,
      _0x44484c: 0x2379,
      _0x53a99a: 0xb57,
      _0xc19efa: 0x1d66,
      _0x427fa6: 0x1f57,
      _0x3ceae0: 0x17b6,
      _0x130b2c: 0x2379,
      _0x50c599: 0xbe4,
      _0x5b5159: 0x1d66,
      _0x3b1b12: 0x51c,
      _0xdcb685: 0x7b4,
      _0x4ac0f5: 0x1d66,
      _0x47ba18: 0x3c1,
      _0x1377aa: 0x1d66,
      _0x553d83: 0xe2d,
      _0x73a9ae: 0x1d66,
      _0x585288: 0x1e64,
      _0xcf2bdc: 0x24b3,
      _0x4aed13: 0x1d66,
      _0x105dcf: 0x1b32,
      _0x4a50fd: 0x1d66,
      _0x127450: 0x5f1,
      _0x2b9452: 0x1733,
      _0x40437e: 0x76f,
      _0x4acfb3: 0x76f,
      _0x1b8399: 0x1905,
      _0x3d3903: 0x2379,
      _0x4dcf1b: 0x2149,
      _0x9fd94e: 0x76f,
      _0x47b726: 0x2379,
      _0x1f4c97: 0xb22,
      _0x163aa5: 0x1f67,
      _0x23fa34: 0x1d66,
      _0x190b0e: 0x2379,
      _0x599977: 0x17b6,
      _0x3a52ef: 0x1d66,
      _0x15fa98: 0x2379,
      _0x345259: 0xe99,
      _0x3de642: 0x17b6,
      _0x32e026: 0x1d66,
      _0x1f5c05: 0x2379,
      _0xa57f4b: 0x1817,
      _0x34a0e6: 0x194,
      _0x59c879: 0x1b80,
      _0x5d7fd8: 0x2379,
      _0x59ef63: 0x1dc2,
      _0x3a2fcf: 0xa45,
      _0x33c81c: 0x1807,
      _0x40a795: 0x18d1,
      _0x4fa161: 0x2057,
      _0x59214b: 0x18d1,
      _0x511664: 0x236e,
      _0x345488: 0x19c5
    },
          a0_0x44ac3e = {
      _0x31ffdc: 0x1d66,
      _0x46b861: 0x1e35,
      _0x55b348: 0x8b8
    },
          a0_0x4f5827 = {
      _0x5d66d9: 0x535,
      _0x33c4e4: 0x1d66,
      _0x5b24e4: 0x628,
      _0x2822f5: 0x9c8,
      _0x49a2f4: 0x13b4,
      _0x7aec31: 0x1c69,
      _0x1e223b: 0x1b1b,
      _0x49ad9b: 0x11e3,
      _0x4f7a4c: 0x19e6,
      _0xd79f1c: 0x3a0,
      _0x2b1d55: 0x1d94,
      _0x4ba133: 0x1870,
      _0x15923a: 0x1e35,
      _0x2de29f: 0x1e35,
      _0x3e26bf: 0xf23,
      _0x2d4222: 0x1e35,
      _0x23691b: 0x8b8
    },
          a0_0x57921b = {
      _0xa4992c: 0x14d2,
      _0x1bac85: 0x21bf
    },
          a0_0xa34c49 = {
      _0x7c24e3: 0x235b,
      _0x2bab51: 0x185e,
      _0x224aa3: 0x15c0,
      _0x3ce703: 0x24ce,
      _0x4e2ba7: 0x1c5b,
      _0x52de0a: 0x20b4,
      _0x7dee43: 0x1d55,
      _0x300b6f: 0x1d55,
      _0x126136: 0x11a0,
      _0x1e06e0: 0x2166,
      _0x598778: 0x1d55,
      _0x4f9092: 0x259b,
      _0x30a521: 0x14d2,
      _0x1e4dbe: 0x19c5,
      _0x1c78e5: 0x53d,
      _0x3b4201: 0x14d2,
      _0x4f6fc1: 0x753,
      _0x3b3723: 0x19c5,
      _0x57ca0e: 0x175c,
      _0xa4eb0f: 0x590,
      _0x184952: 0x1992,
      _0x4d48db: 0x14d2
    },
          a0_0x56c5f3 = {
      _0xcab5f0: 0x535,
      _0x353f3b: 0xffb,
      _0x3dcfe5: 0xf93,
      _0x507efc: 0x24fe,
      _0x2da2f6: 0x24fe,
      _0x3cf209: 0x24fe,
      _0x360dfa: 0x24fe,
      _0x3db145: 0x24fe,
      _0x35b0de: 0x24fe,
      _0x5f1552: 0x24fe,
      _0x405142: 0x24fe,
      _0xeae42a: 0x24fe,
      _0x4a497a: 0xf86,
      _0x2719d9: 0x628,
      _0x4eac97: 0x115c,
      _0x424a1a: 0x2480,
      _0x419ee8: 0x14d2,
      _0x143626: 0x1da5,
      _0x36d49a: 0x235b
    },
          a0_0x26444f = {
      _0x124525: 0xf93
    },
          a0_0x1b5027 = {
      _0x3f422a: 0xf93,
      _0x45065b: 0xf93
    },
          a0_0x2e51c5 = {
      _0x20dca2: 0xf93,
      _0x217f03: 0xf93,
      _0x1feb04: 0x1f30,
      _0x2f95b4: 0x549,
      _0x4c30da: 0x1f30,
      _0x4a7c1e: 0x1f30,
      _0x546e7d: 0x1f30,
      _0x3db859: 0x235b,
      _0x5105ed: 0x16c5,
      _0x156f96: 0x2530,
      _0xea5437: 0x24d,
      _0x35f876: 0x2530,
      _0x15ac56: 0x24d,
      _0x2f3847: 0xbc8
    },
          a0_0x2ab9a8 = {
      _0x466006: 0xcb0,
      _0x34ae3a: 0x1941,
      _0x51de37: 0x1d66,
      _0x3ae002: 0x25fb,
      _0x1de8a3: 0x121d
    },
          a0_0x2bdf4b = {
      _0x145a5c: 0x24fe,
      _0x1ad79f: 0x1c55,
      _0x1b838b: 0x242c,
      _0x2d5de7: 0x1ec9,
      _0x4c8513: 0xcb0,
      _0x552793: 0x1c4b,
      _0x3e2fe1: 0xcb0,
      _0x529f4f: 0xcb0,
      _0x1166bd: 0x1c4b,
      _0x37ea4e: 0x1d66,
      _0x2ec56c: 0x1941,
      _0x1629ba: 0xcb0,
      _0x8eb0d1: 0x1d66,
      _0x5984b3: 0x1870,
      _0x270453: 0xcb0
    },
          a0_0x274794 = {
      _0x401ddc: 0x235b,
      _0x45b94a: 0x1699,
      _0x5ae24f: 0x1a23,
      _0x524288: 0x20d6,
      _0x161407: 0x917,
      _0x378355: 0x1d01,
      _0x2de17a: 0x20d6,
      _0x331cd2: 0xbc7,
      _0x5ae637: 0x1f30,
      _0x18d269: 0xe03,
      _0x22e083: 0xe58,
      _0x408585: 0x1c45,
      _0x2aa0ee: 0x19c5,
      _0x7ab1e7: 0xb5a,
      _0x4d32b1: 0x14d2,
      _0xd930d: 0x21bf,
      _0x44aaf9: 0x1c0e
    },
          a0_0xb8ada2 = {
      _0x3cf5e1: 0x362,
      _0x1fac78: 0xad8
    },
          a0_0x101772 = {
      _0x45dd72: 0x19d2,
      _0x22da81: 0xffb,
      _0x61f32a: 0x701,
      _0x26ebd0: 0x1a60,
      _0x1ecce7: 0x1632,
      _0xafc516: 0x1a50,
      _0x2dcfc1: 0x4ee,
      _0xf9da9a: 0x19d2,
      _0x1b7336: 0x10cd,
      _0x4e7775: 0x1a2c,
      _0x4162cd: 0x535,
      _0x43ae44: 0xe90,
      _0x546420: 0x14e4,
      _0x17cc62: 0x14d2,
      _0x2443c1: 0x1da5,
      _0xcb81af: 0x1961,
      _0x5c000a: 0x1da5
    },
          a0_0x40c8aa = {
      _0x15aae8: 0x185e,
      _0x416111: 0xffb,
      _0x39d2b3: 0x19c5
    },
          a0_0x17ee5c = {
      _0x49d29b: 0x2ba,
      _0xe5d8bf: 0x1366,
      _0x4b90f2: 0x211f,
      _0x58fdc7: 0x150c,
      _0x10c2dd: 0x1366,
      _0x4282ca: 0x1f6,
      _0x3fc97e: 0x19c5,
      _0x27ec3f: 0x1105,
      _0xbbb332: 0x14d2,
      _0x2c9260: 0x19c5,
      _0x39d95d: 0x1033,
      _0x5badaf: 0x19c5,
      _0x17d00d: 0x121d,
      _0x3baf55: 0x1029
    },
          a0_0x2ed3f1 = {
      _0x395049: 0x535,
      _0x4c0420: 0x1a5,
      _0x5c6f3b: 0x59d,
      _0x2403a5: 0x1bf6,
      _0x4033b1: 0x1627
    },
          a0_0xdfc7a0 = {
      _0x5c1651: 0x1366,
      _0x48f81f: 0x150c
    },
          a0_0x37d5c8 = {
      _0x16ac40: 0x14d2,
      _0x147c7a: 0x79d
    },
          a0_0x580a65 = {
      _0x54fdb0: 0x40d,
      _0x118296: 0x1e82
    },
          a0_0x1cae4a = {
      _0x5f31b4: 0x1366,
      _0x177c6e: 0xf82
    },
          a0_0x16e562 = {
      _0xbcc957: 0x1366,
      _0x5da28d: 0x16c5,
      _0x57cf5c: 0x40d,
      _0xa36840: 0x14a6,
      _0x1e190d: 0x17f,
      _0x758b51: 0xadd
    },
          a0_0x1b1fad = {
      _0x5c1a8c: 0xcd6,
      _0x507397: 0x7de,
      _0x451ebd: 0xe97,
      _0x375c19: 0x14d2,
      _0x5c3c3c: 0x19c5,
      _0x52d5d6: 0xd17
    },
          a0_0x2367ab = {
      _0x1e9691: 0xe1b,
      _0x437a68: 0x16c5,
      _0x40e056: 0x32e,
      _0x169b37: 0x7de,
      _0x4e7517: 0x1291,
      _0x39e627: 0x198d,
      _0x13e3ab: 0xf79,
      _0x36548a: 0x2530
    },
          a0_0x427110 = {
      _0x28b73b: 0x19e6,
      _0x377eb7: 0x16c5,
      _0x1f91c9: 0x2530,
      _0x41eb2a: 0x32e,
      _0x3f7458: 0x7de,
      _0x1eac2c: 0x1291,
      _0x32390f: 0x235b,
      _0x5535fd: 0x1052,
      _0x5c7fd8: 0x1915,
      _0x10af77: 0xf79,
      _0x12bbc4: 0xef8
    },
          a0_0xc5bf92 = {
      _0x391463: 0x1366,
      _0x150030: 0x1291,
      _0x3a4c45: 0x16c5,
      _0x52b9d7: 0x1052,
      _0x487eea: 0x198d
    },
          a0_0x576c26 = {
      _0x1cc82d: 0xec3,
      _0xb4b251: 0x1e08,
      _0x99e2e1: 0x23be,
      _0x52ac09: 0x13c4,
      _0x829aea: 0x1b95,
      _0x381ba4: 0x14d2,
      _0x29160f: 0xcd6,
      _0x5908aa: 0x183,
      _0x2c2ba7: 0x14d2,
      _0x13a67b: 0x19c5,
      _0x3cb382: 0x14d2,
      _0xa07ddf: 0x1ab8,
      _0x143dda: 0xf36
    },
          a0_0x31d2d2 = {
      _0x54dc3c: 0x1366,
      _0x3147be: 0x16c5,
      _0x432972: 0x235b,
      _0xf2ddb6: 0x16c5,
      _0x1a7824: 0x535,
      _0xd93801: 0x160a,
      _0x5d35c5: 0x17a7,
      _0x469c8b: 0x1f30,
      _0x367555: 0x1d66
    },
          a0_0x21b944 = {
      _0xea3d29: 0x1e08
    },
          a0_0x307c01 = {
      _0x19e9b4: 0xe1b,
      _0x36ee09: 0x19e6,
      _0x464c64: 0x1366,
      _0x19040b: 0x16c5,
      _0x5d7ce7: 0x2530,
      _0x4d0d95: 0x183,
      _0x4a98b6: 0x183,
      _0x4d0727: 0x240a
    },
          a0_0x8ec8e4 = {
      _0x108611: 0x2001,
      _0xb7a4d8: 0x2001
    },
          a0_0xa2fb0e = {
      _0x4669de: 0x19e6,
      _0x475200: 0x1366,
      _0x3f4046: 0x2001,
      _0x2426aa: 0x17f,
      _0x19186f: 0x1052,
      _0x119e01: 0x1915,
      _0x264317: 0x24a2,
      _0x25baa2: 0x1078,
      _0xbcdb92: 0xdce
    },
          a0_0x84aee3 = {
      _0x3ce0c4: 0x16d3,
      _0x1a25bc: 0x198d,
      _0x1a9b72: 0x2001,
      _0x7c6179: 0x1078,
      _0x385de9: 0x2145
    },
          a0_0x56f23b = {
      _0x1da426: 0x1fe9,
      _0x241f96: 0x185e,
      _0x404675: 0x1da0
    },
          a0_0x31abea = {
      _0x5a3209: 0x22e,
      _0x3e661f: 0x235b,
      _0x498f2a: 0x185e,
      _0x540092: 0x1078,
      _0x6e186d: 0x1360,
      _0x2eb02d: 0x1fe9,
      _0x562f29: 0x2001,
      _0x5aea43: 0x24a2,
      _0x4a9343: 0x1078
    },
          a0_0x2e8a11 = {
      _0xb1766e: 0x1fe9,
      _0x223fa4: 0x22e,
      _0x535443: 0x185e
    },
          a0_0x52574d = {
      _0x2e8d04: 0x2001,
      _0x2ff86e: 0x1b55,
      _0xc53c5a: 0x17a7,
      _0x2a5440: 0x6cc
    },
          a0_0x3c2f1b = {
      _0x25ca4b: 0x1fe9,
      _0x3fee64: 0xeff
    },
          a0_0x24c2f7 = {
      _0xa378b0: 0x1ccc,
      _0x262623: 0x17a7,
      _0x841609: 0x1a50,
      _0xfeca6: 0x235b,
      _0x42b543: 0x1f30,
      _0x26a447: 0x22e,
      _0x2773cb: 0x1fe9,
      _0x38e962: 0x342,
      _0x2b9ddf: 0x1ec5,
      _0x216206: 0x22e,
      _0x343c2f: 0x16c5,
      _0x5c77ca: 0x2534,
      _0x312e4a: 0xffb,
      _0x1d8451: 0x353
    },
          a0_0x4ace64 = {
      _0x45a7dd: 0x1098,
      _0x496397: 0x1078
    },
          a0_0xdbf09c = {
      _0x14e218: 0x2001,
      _0x4cda10: 0x1fe9,
      _0xf9d065: 0x1078,
      _0x366335: 0x227d,
      _0x1ca8e2: 0x1834,
      _0x184cf8: 0x2534,
      _0x5d868f: 0x353,
      _0x3debf7: 0x2001,
      _0x46da08: 0x1360
    },
          a0_0x2b12f5 = {
      _0x41dd5d: 0x185e,
      _0x3c5235: 0x14d2,
      _0x1f1c10: 0x19c5,
      _0xacaa39: 0x19c5,
      _0x466c9a: 0x1105
    },
          a0_0x3e6e32 = {
      _0x28133c: 0x16c5,
      _0x266426: 0x2301,
      _0x4a8f50: 0x1da5,
      _0x5bff20: 0x1587
    },
          a0_0x2ceef9 = {
      _0x2acc23: 0x1edc
    },
          a0_0x4f5356 = {
      _0x2251b9: 0x1507,
      _0x332a4c: 0xc83,
      _0x3aef5e: 0x18c1,
      _0x309c28: 0x2606,
      _0x28aaaa: 0x178f,
      _0x30f325: 0x2606,
      _0xf2e38c: 0x913,
      _0x4f3c40: 0x14d2,
      _0x276ad0: 0x175c,
      _0x235d7d: 0x14d2,
      _0x1f489d: 0x235f,
      _0x3ff88d: 0x1d66,
      _0x333d22: 0x91b,
      _0x5b16dd: 0x19c5,
      _0xb0bbce: 0x1e5f
    },
          a0_0x4398d3 = {
      _0x1130d5: 0x1291,
      _0x412156: 0x2606,
      _0xa6c3b6: 0x11dc,
      _0x372bca: 0x1885
    },
          a0_0x4bc5ba = {
      _0x46636f: 0x14d2
    },
          a0_0x287fbe = {
      _0x113b01: 0x16c5,
      _0x1fb725: 0x2530,
      _0x4ffe6f: 0x2530,
      _0x300323: 0x10f4,
      _0x312c49: 0x10f4,
      _0x4ae60c: 0x2606,
      _0x2e0828: 0x16c5
    },
          a0_0x15015c = {
      _0x1e5365: 0x2606,
      _0x573289: 0x266d
    },
          a0_0x3cfd20 = {
      _0x4ac02c: 0xf7d,
      _0x241ca7: 0x14d2,
      _0x3f2e6c: 0x154c
    },
          a0_0x2679a9 = {
      _0x5149f9: 0x535,
      _0x3b1b37: 0x1a07,
      _0x2af0a6: 0xf17,
      _0x337b01: 0x1934,
      _0x3ba7dc: 0x12a3,
      _0x411835: 0x1c66,
      _0x5479b9: 0x1d66,
      _0x201db0: 0x1524,
      _0x45ee2b: 0x1870,
      _0x9ac508: 0x91b,
      _0x32407a: 0x1870,
      _0x2975ce: 0xb4a,
      _0xa00d51: 0x1524,
      _0x1f55f5: 0x14d2,
      _0x348dda: 0x65e
    },
          a0_0x1c2377 = {
      _0x3b41ea: 0xd17,
      _0x3ca863: 0x14d2,
      _0x213b84: 0x19c5,
      _0x1386bf: 0x175c
    },
          a0_0x114c1f = {
      _0x1eb24d: 0x11dc,
      _0x33ae95: 0x19e6,
      _0x19469c: 0x1ab6
    },
          a0_0x2b3ce9 = {
      _0x13e8f9: 0x2606,
      _0x1dc335: 0x1e3d,
      _0x56499f: 0x300,
      _0x45d1e2: 0xa26,
      _0x5a2126: 0x17b7,
      _0x1753dc: 0x1b7c,
      _0x4ee3a9: 0x1d66,
      _0xdb679b: 0x1870
    },
          a0_0x511a7d = {
      _0xd21e6: 0x235b,
      _0x34b190: 0x185e,
      _0x1dbf16: 0x19c5,
      _0x5901de: 0x11d8,
      _0x50a357: 0x14d2,
      _0x5b187d: 0x4cb,
      _0x3b0add: 0x14d2,
      _0x436ea5: 0x19c5
    },
          a0_0x1ec765 = {
      _0x276b22: 0xdc3
    },
          a0_0x58b860 = {
      _0x334c04: 0x1d48,
      _0x37bad9: 0x1293,
      _0x50bcf4: 0x535,
      _0x3e963c: 0x2563
    },
          a0_0x5cb57b = {
      _0x3d3381: 0x235b,
      _0x1d6507: 0x185e,
      _0x468445: 0x14d2,
      _0x5855a3: 0xcd6,
      _0x44a731: 0x913
    },
          a0_0x440912 = {
      _0x3488d9: 0x11dc,
      _0x542668: 0x19e6,
      _0x26bdb3: 0x2001,
      _0x1b8f35: 0x14d2
    },
          a0_0x4b011f = {
      _0x1cb3be: 0x1291,
      _0x17a095: 0x2606,
      _0x3da7dc: 0xf42,
      _0x5c66e3: 0x2101,
      _0x4b78d2: 0x2101,
      _0x695dae: 0x1b8a,
      _0x50676b: 0x1d66,
      _0x5c78a7: 0x2606,
      _0x524fff: 0x1acd,
      _0x3b94b3: 0x1e35,
      _0x4a6b5a: 0xd91,
      _0x3f507f: 0x17d,
      _0x3a2345: 0x17d
    },
          a0_0x2e9a1e = {
      _0xf491bb: 0x235b,
      _0x43f4cc: 0x185e,
      _0x2ae584: 0x1418,
      _0x513b95: 0x19c5,
      _0xf448c7: 0x7f7,
      _0x3efa54: 0x14d2
    },
          a0_0x3b8c08 = {
      _0x1a8638: 0x1d66,
      _0x3d3ab0: 0x1992,
      _0x4f8986: 0x1329,
      _0x319753: 0x1d52,
      _0x8ed6d6: 0x535,
      _0x54f933: 0x1f93,
      _0x26ed3c: 0x1f41,
      _0xf41d11: 0xe48
    },
          a0_0x21b72c = {
      _0x3d9b74: 0xd7b,
      _0x4aa47f: 0x4b9,
      _0x564aa6: 0x14d2,
      _0x2e1213: 0x1a5,
      _0x36e9c5: 0x7f7,
      _0x31b66f: 0x1d66,
      _0x54164e: 0x1357
    },
          a0_0xd952be = {
      _0x44fcf1: 0xd7b,
      _0x3ae85c: 0x535,
      _0x56562c: 0x1985,
      _0x348d99: 0x136a,
      _0xa7d26e: 0x1d66,
      _0x550c29: 0xdfb,
      _0x1c7823: 0x1d66,
      _0xd7bf0c: 0x1a6f,
      _0x243d10: 0x1e35,
      _0x4b9528: 0x1d7c,
      _0x14b54c: 0x91b,
      _0x3a3c41: 0x535,
      _0x220ab3: 0x1cd8
    },
          a0_0x217ec1 = {
      _0x220f98: 0xd7b,
      _0x309e15: 0x1de9,
      _0x3562b6: 0x1b12,
      _0x45da5f: 0x1aaf,
      _0x44c261: 0x11f2,
      _0x42755c: 0xa58,
      _0x19f27c: 0x13b0,
      _0x18bb0b: 0x535,
      _0x370f89: 0x52c,
      _0x1a77a: 0x1cd8,
      _0x3f92a7: 0x535,
      _0x2843f0: 0x1985,
      _0x81b5c0: 0xa9d,
      _0x2c0cbb: 0xf82,
      _0x4af90c: 0x1d55,
      _0x41908f: 0x2530,
      _0x1fca9d: 0xe48,
      _0x4d9a18: 0x2c5,
      _0x1666a7: 0x1f41,
      _0x13ed99: 0x2072,
      _0x591e47: 0xd79
    },
          a0_0x4c4ecd = {
      _0x13b8a1: 0x19c5,
      _0x295b6d: 0x1391
    },
          a0_0x437eea = {
      _0x5eca0: 0x3d9,
      _0x5abd8f: 0xf01,
      _0x346b02: 0x1112,
      _0x222b7b: 0x502,
      _0x4cb049: 0x3d7
    },
          a0_0x23cbaa = {
      _0xd157a8: 0xacb,
      _0x22bbc0: 0xc6f,
      _0x235180: 0x12e8,
      _0x1992a4: 0x2222,
      _0x382da8: 0xf2b,
      _0x45a8bd: 0x46d,
      _0x56d159: 0x14e9,
      _0x3e373c: 0x230f,
      _0x47ea93: 0x427,
      _0x4e131e: 0x1a1a,
      _0x160cab: 0x25c,
      _0xb74b9e: 0xcad,
      _0x3785ce: 0x13d1,
      _0x53d0ea: 0x17e4,
      _0x4b5170: 0x1815,
      _0x478301: 0x175c,
      _0x32cf41: 0x185e,
      _0x40b0a0: 0x1202,
      _0x2186c6: 0x100f,
      _0x4b1d42: 0x237f,
      _0x2fc07c: 0x22a1,
      _0x1fe251: 0x2516,
      _0x34e800: 0x3d5,
      _0x3a7e59: 0x109d,
      _0x2c81da: 0x1679,
      _0xe1ba27: 0x1845,
      _0x2b5338: 0x142d,
      _0x1ace39: 0x384,
      _0x5e0904: 0x4a3,
      _0x208cc6: 0x23a2,
      _0x3c9e24: 0x235b,
      _0x187b7a: 0x24a4,
      _0x304d73: 0x1988,
      _0x2f2664: 0xf83,
      _0x23672c: 0x60e,
      _0x2693e9: 0x2603,
      _0x236047: 0x7e0,
      _0x40c71a: 0xd93,
      _0x8587af: 0xab5,
      _0x3cb12e: 0x807,
      _0x5eea98: 0x218b,
      _0x25b0dc: 0x2516,
      _0x38a9d8: 0xd34,
      _0xfdd9ec: 0x10c0,
      _0x13f6ba: 0x1243,
      _0x1f4c09: 0x1a46,
      _0x251a56: 0xa05,
      _0x299649: 0x2059,
      _0x1b9ca3: 0x121d,
      _0x4365ce: 0x235b,
      _0x3eea48: 0x1cb6,
      _0x3ab371: 0x26c,
      _0xee4bd3: 0x4a3,
      _0x33e0c6: 0x121d,
      _0x409924: 0x235b,
      _0xe4bbab: 0x1c8c,
      _0x3e2db6: 0x1787,
      _0x1cb325: 0xbae,
      _0x49d0c6: 0x1b19,
      _0x1e299d: 0x4d8,
      _0x2b5413: 0xca2,
      _0x84cbc1: 0x109c,
      _0xfab275: 0x4d8,
      _0x47ab39: 0xe2f,
      _0x101ddc: 0x1b92,
      _0x53fae4: 0x31b,
      _0xc86c98: 0x1a5d,
      _0x245d5e: 0x427,
      _0x5a0f24: 0x22a1,
      _0x21f323: 0x10cc,
      _0x4abfcb: 0x218b,
      _0x5a8673: 0x3d5,
      _0x2d6d2b: 0xacb,
      _0x19a2ef: 0x164e,
      _0x100e0c: 0x1a46,
      _0x19e07c: 0x1e05,
      _0x1088e6: 0xbae,
      _0x28ef68: 0x1e3c,
      _0x238fbc: 0x2117,
      _0x26722a: 0x2566,
      _0x3d2a0d: 0x1beb,
      _0x5d1f47: 0xe7f,
      _0x273e1b: 0x4e8,
      _0x2ce5b3: 0xd17,
      _0x147f45: 0xb3b,
      _0x3ecf11: 0xbae,
      _0x57bb53: 0x2578,
      _0x222b2f: 0x6f8,
      _0x169afd: 0x427,
      _0x4fe9dc: 0xa1d,
      _0x1a1cf0: 0x2516,
      _0x1d63fc: 0x35d,
      _0x1bb838: 0xa37,
      _0x563980: 0x2578,
      _0x17d173: 0x2193,
      _0x6095bd: 0x7ed,
      _0x406e29: 0x14d2,
      _0x4d0213: 0x61b,
      _0x7f2699: 0x14d2,
      _0x18dec6: 0x19c5,
      _0x477fef: 0x14d2,
      _0x596929: 0x19c5,
      _0x453ef2: 0x16ad,
      _0xb49801: 0x1105,
      _0x511549: 0x1a0f,
      _0x4507dc: 0x19c5,
      _0x26e9a5: 0x14d2,
      _0x1e74ae: 0x19c5,
      _0x1c4244: 0x204f,
      _0x441edf: 0x1029,
      _0x362277: 0x19c5,
      _0x36c3e4: 0x1808,
      _0x42465e: 0xab3,
      _0x12ccd3: 0x19c5,
      _0x234904: 0x241f,
      _0x2da781: 0x87d,
      _0x23536c: 0x14d2,
      _0x380244: 0x1867,
      _0x283f09: 0x19c5,
      _0x2864f2: 0x24da,
      _0xc6dfd9: 0x1880,
      _0x2e24b3: 0x19c5,
      _0x4c0623: 0x19c5,
      _0x586b37: 0x3e1,
      _0x2523e7: 0x19c5,
      _0x12fb8d: 0x22b3,
      _0x403dac: 0x19c5,
      _0x57fab1: 0x12ea,
      _0x522b67: 0x19c5,
      _0x23f99a: 0x1fe0,
      _0x3c876a: 0x99c,
      _0x53f422: 0xa93,
      _0x1b7953: 0x187f,
      _0x46e2d5: 0x8a6,
      _0x50b32e: 0x1911,
      _0x2aa975: 0x1ed2,
      _0x2b3ca6: 0x2142,
      _0x52bb13: 0x148c,
      _0x1a4184: 0x1abc,
      _0x23c314: 0x1597,
      _0x54f127: 0x2270,
      _0x2b0a09: 0x19c5,
      _0x344439: 0x1f29,
      _0x231e13: 0x19c5,
      _0x134c80: 0xbc3,
      _0x2a9de8: 0x84a,
      _0x1b2355: 0x19c5,
      _0x3709e7: 0xa93,
      _0x246946: 0x1a93,
      _0x3a97ce: 0x2185,
      _0x5d59bf: 0x14d2,
      _0x2031a5: 0x1b6f,
      _0x2ec2d5: 0x1f5a,
      _0x4b58a7: 0x14d2,
      _0x5645c2: 0x19c5,
      _0x4e565f: 0x14d2,
      _0x240675: 0x14d2,
      _0x3eebe6: 0x14d2,
      _0x57ed52: 0x970,
      _0x1f9d37: 0x121d
    },
          a0_0x3bf6c5 = {
      _0x55a520: 0x1d66,
      _0x1c2eb8: 0x1e35,
      _0x2ac7ec: 0x1e35,
      _0x489841: 0x1d2d
    },
          a0_0x5ad3d9 = {
      _0x4ffb1e: 0xa9d,
      _0x34e857: 0x3b1,
      _0x3ddfce: 0x1d55,
      _0x4dc618: 0x6fb,
      _0x4b50bb: 0x1b0,
      _0x3957e5: 0x1f1d,
      _0x469319: 0x49c
    },
          a0_0xd3c378 = {
      _0x4a345d: 0x186,
      _0x5b997b: 0xe6d,
      _0x1f1c70: 0x2488,
      _0x218c31: 0x1a3,
      _0x5c763e: 0x1797,
      _0x395a6a: 0x19d2,
      _0x1b494a: 0x1d6f,
      _0x5cc610: 0x1f5a
    },
          a0_0x478c39 = {
      _0x320369: 0x1e82,
      _0x1cccc8: 0x1d2,
      _0x4cba95: 0x2488,
      _0xb36e69: 0x1a3
    },
          a0_0x1e1d05 = {
      _0x49d28d: 0xe62,
      _0x55e8f8: 0x1442,
      _0x3df226: 0x1dd5,
      _0x4567e9: 0x1bc5,
      _0x1dc14a: 0x22b2,
      _0x25fab2: 0xc32,
      _0x3af479: 0x1dd5,
      _0x51de94: 0xc32,
      _0x55b3b9: 0x1dd5,
      _0x39d4d3: 0x1442,
      _0x9ac6a0: 0x1dd5,
      _0x116e85: 0xe62,
      _0x23d89f: 0x1442,
      _0x1c2c14: 0xc32,
      _0x1b0325: 0xadd,
      _0x1541f4: 0x1e82,
      _0x56e556: 0x1a3
    },
          a0_0xa67b81 = {
      _0x5cb7bb: 0x1dda,
      _0xf2515e: 0x1b0f,
      _0x59d415: 0x1e82,
      _0x50b1d9: 0xc32,
      _0x2eb421: 0x1dd5,
      _0x307173: 0x186,
      _0x450ceb: 0x1442,
      _0x3e5296: 0x1dd5,
      _0x40b6d4: 0xc32,
      _0x10e51e: 0x2488,
      _0xda2887: 0x1a3,
      _0x7cabe5: 0x1dd5,
      _0x3e5c24: 0x2463,
      _0x114f8d: 0x1a3,
      _0x236b81: 0x1934,
      _0x21d1ea: 0xe62,
      _0x3e8adb: 0x1934,
      _0x1c9c8a: 0x1941,
      _0x32b466: 0x186,
      _0x3b93c0: 0x1dd5,
      _0xc0c62d: 0x669,
      _0x214870: 0x20c4,
      _0x312aed: 0x186,
      _0x39b940: 0x2488,
      _0x22084c: 0x1c39
    },
          a0_0x140e0d = {
      _0x26a059: 0x14d2,
      _0x1b8a27: 0x1da5,
      _0xc524df: 0x209
    },
          a0_0x53a6be = {
      _0x5572f3: 0x2463,
      _0x29eafc: 0x1a3,
      _0x5e3afa: 0x1cdb,
      _0x343eda: 0x385,
      _0x587b1c: 0x4a3,
      _0x45b8af: 0x2659,
      _0x3dfce5: 0x535,
      _0x222e31: 0x52c
    },
          a0_0x2fda0b = {
      _0x5df34d: 0x22b2,
      _0xbb1af7: 0x7a0,
      _0x3f19a9: 0x14d2,
      _0x160f30: 0x112d
    },
          a0_0x35e59a = {
      _0x275168: 0x2488,
      _0xe7912c: 0x1b79
    },
          a0_0x535a5a = {
      _0xc42059: 0x1052,
      _0x4fe9da: 0x1ef5
    },
          a0_0x1d3950 = {
      _0x54574e: 0x2516
    },
          a0_0x1bbce9 = {
      _0x1890a2: 0x2062,
      _0x1ff7a1: 0x10c0
    },
          a0_0x5532fc = {
      _0x4e818d: 0x109d
    },
          a0_0x7a3ad9 = {
      _0x44d5f1: 0x1052,
      _0x447dee: 0x198d,
      _0x3198c6: 0x942,
      _0xef4bbf: 0x1e35,
      _0x4d6f2b: 0x17f0,
      _0x1bdf65: 0x535,
      _0x1cf517: 0x52c
    },
          a0_0x373f8f = {
      _0x391342: 0x287,
      _0x48bce4: 0x1ea,
      _0xb55d7b: 0x1c7a,
      _0x37b413: 0x1a4d,
      _0x54c051: 0x1283,
      _0xe5fecc: 0x1d66,
      _0x386aec: 0x1870
    },
          a0_0x1f2a68 = {
      _0x3073cc: 0x1a1a,
      _0xd3be79: 0x198d,
      _0xd0e23c: 0x576
    },
          a0_0xbcc103 = {
      _0x135838: 0x535,
      _0x35ec03: 0x220f,
      _0x567810: 0x1e35,
      _0x54a056: 0x2019,
      _0x44384d: 0x15ae,
      _0xfd0832: 0x14d2,
      _0x274783: 0x662
    },
          a0_0x2dcbfe = {
      _0x3ae945: 0x13b0,
      _0x43213e: 0x535,
      _0x2d5cfd: 0x7a0,
      _0x5da3af: 0x1200,
      _0x193e40: 0x1d66,
      _0x4d0df7: 0x17f0,
      _0x55fc30: 0x1a5,
      _0x37e4ab: 0x662,
      _0x51f883: 0x9a8,
      _0x445e6b: 0x969
    },
          a0_0x37f1a7 = {
      _0x2c462c: 0x198d,
      _0x2ea4ee: 0x1679,
      _0x38b215: 0x1d66,
      _0x5beabd: 0x2019,
      _0x414855: 0x15ae,
      _0x23ae97: 0x2488,
      _0x40132f: 0x1a3,
      _0x3a82c1: 0x836,
      _0x572487: 0x385,
      _0x3c3d25: 0x213a,
      _0x6fe8d9: 0x830,
      _0x2382f6: 0x1cfb,
      _0x3e0038: 0x4a3
    },
          a0_0x57f3d7 = {
      _0x789d7b: 0x90f,
      _0x5a9dc2: 0x1692,
      _0x3a0ca8: 0x2528,
      _0x3b9d87: 0x91d,
      _0xbe3b80: 0x136e,
      _0x576462: 0x136e,
      _0x1a474c: 0x235b,
      _0x380516: 0x1291,
      _0x29a822: 0x235b,
      _0x113f87: 0xa9d,
      _0x28db31: 0x373,
      _0x1cd04c: 0x17f,
      _0x32ec25: 0x1d66,
      _0xd0a637: 0xd79,
      _0x3ff7bb: 0x373,
      _0x13c242: 0x3b1,
      _0x123491: 0x2422,
      _0x37b7a2: 0x1f30,
      _0x5dca73: 0x1d55,
      _0x23268f: 0x1f30,
      _0xf0a09e: 0x2521,
      _0x1bdce0: 0x1d66
    },
          a0_0x1b755b = {
      _0x28bdb1: 0xe74,
      _0x3816e5: 0x264f,
      _0xbf1988: 0xa9d,
      _0x9cc750: 0x16c5,
      _0x3cd8a4: 0x17f,
      _0x3c24db: 0x373
    },
          a0_0x1ee057 = {
      _0x4bcc96: 0x1052,
      _0x1ea0a5: 0x198d
    },
          a0_0x5e7991 = {
      _0xd11c65: 0xe62,
      _0x1abd04: 0x1d2,
      _0x1a9a1a: 0x628,
      _0x3f186a: 0x535,
      _0xc6e208: 0xb0c,
      _0x4f6bfa: 0x2528,
      _0x344da8: 0x2528,
      _0x21d31a: 0x9ad,
      _0x17ae41: 0x23a2,
      _0x535da8: 0x1692,
      _0x42d69f: 0x1f08,
      _0x17f004: 0x871,
      _0x985319: 0x2573,
      _0x962160: 0xf1a,
      _0x58c7c: 0xd1a
    },
          a0_0x1f40aa = {
      _0x4c89f0: 0x2630,
      _0x55d12c: 0x1af1,
      _0xa022c: 0x1c7a,
      _0x520e47: 0x1283,
      _0x187d05: 0x1283,
      _0x29e226: 0x1a4d
    },
          a0_0x489cc9 = {
      _0x2abda4: 0x1af1,
      _0x3e1e6e: 0x1283,
      _0x5cbed1: 0x1d66,
      _0x555933: 0x1870,
      _0x590f0a: 0x2290
    },
          a0_0x38977e = {
      _0x41ba25: 0x16c5,
      _0x518ed1: 0x266e,
      _0x490eaf: 0x1291,
      _0xcb06b7: 0x2001,
      _0x44f318: 0x803,
      _0x48ba5d: 0x2606,
      _0x202222: 0x19e6
    },
          a0_0x2c29c7 = {
      _0x3998fb: 0x1a1a
    },
          a0_0x224f02 = {
      _0x41d8c1: 0x10b7,
      _0xda8dc0: 0xdb5,
      _0x1f4981: 0x1e79,
      _0x54b920: 0x25e0,
      _0x861b89: 0xcd8,
      _0x2c2dd1: 0x3f4
    },
          a0_0x4e59f2 = {
      _0x3db53f: 0x142d,
      _0x34097f: 0x1e05,
      _0x1a9657: 0x1d66,
      _0x44c27e: 0xa94,
      _0xe9f847: 0xa94,
      _0x2f6851: 0x136e,
      _0x24387c: 0x235b,
      _0x52fd9a: 0x2574,
      _0x5b2129: 0x1f30,
      _0x52c4ab: 0x1f30,
      _0x2d8f10: 0x10f6,
      _0x1e4dc6: 0x22e6,
      _0x2c2a2f: 0x1d55,
      _0x33930d: 0x1f30,
      _0x524af9: 0x2521,
      _0x100b71: 0x1692,
      _0x528967: 0x19d2,
      _0x4d4ea0: 0x2528,
      _0x31bf20: 0x235b,
      _0x3818c0: 0xc7c,
      _0x28415f: 0x1f30,
      _0x4b5b49: 0x1291,
      _0x56bb83: 0x1692,
      _0x586e34: 0x16c5,
      _0x37d079: 0x125b,
      _0xf2b157: 0x6ba,
      _0x686ff8: 0x1f30,
      _0x4a084f: 0x643,
      _0x5bd313: 0x130c,
      _0x136c78: 0x1e5b,
      _0x27a62a: 0x1e35,
      _0x4cf5f9: 0x19d2,
      _0x163209: 0x1d66,
      _0x1b7c2d: 0x1969,
      _0x4376c2: 0x1692,
      _0x476aa9: 0xbcb,
      _0x2facc0: 0x14eb,
      _0x4921d1: 0x1d66,
      _0x44e1ac: 0x1c7a,
      _0x3d7dc1: 0x1e35,
      _0x3bbff4: 0x1969,
      _0x2cbd53: 0x212d,
      _0x25e41b: 0x10b7,
      _0x47f281: 0x576,
      _0xc42cc8: 0x1af1,
      _0x44d4fd: 0x942,
      _0x18bbbf: 0x1d66,
      _0x4c95bb: 0x24f9
    },
          a0_0xf9ca8f = {
      _0x2c933d: 0x129e,
      _0x25a94a: 0x235b,
      _0x2579d5: 0xd81,
      _0x31d9e1: 0x198d
    },
          a0_0x1f295b = {
      _0x48ff06: 0xeb0,
      _0x835090: 0x535,
      _0x2ddc56: 0x1cd8,
      _0x3cfd55: 0x535,
      _0x261fd4: 0x14d2,
      _0x412e53: 0x1a5,
      _0x17a304: 0x662,
      _0x177b5a: 0xa9d,
      _0x38d087: 0x16c5,
      _0x3bbdc9: 0x8bd,
      _0x488d17: 0xb54,
      _0x2b09bf: 0xb54,
      _0xc58d19: 0x1bb6,
      _0x40c249: 0x1bb6,
      _0x217f6b: 0x1a6d,
      _0x2ac09a: 0x1bb6,
      _0x509ddf: 0x1bb6,
      _0x1830cf: 0xa9d,
      _0x29c837: 0xf82,
      _0x3af056: 0xb54,
      _0x3989e5: 0xa9d,
      _0x2b303b: 0x3b1,
      _0x148267: 0xf5c,
      _0x4fe9d8: 0x2521,
      _0x181c11: 0xb54,
      _0x13462f: 0xd79,
      _0x125394: 0x535,
      _0x13b98d: 0x1a4a,
      _0x374401: 0x8bd,
      _0x301249: 0x1870,
      _0x52526a: 0xb54,
      _0x2ceeb9: 0x17f,
      _0x4984d2: 0x1d66
    },
          a0_0x1df7a1 = {
      _0x5f442f: 0x576,
      _0x381ce2: 0x1af1,
      _0x331c9b: 0x52c,
      _0x3e0559: 0x535,
      _0x5931ba: 0x1cd8,
      _0x170256: 0x1283,
      _0x2c9397: 0x1a4d,
      _0x584c05: 0x264f,
      _0x178dd6: 0x218b
    },
          a0_0x21f953 = {
      _0x15a99b: 0x1052,
      _0x4b8609: 0x198d,
      _0x45fd25: 0x1f15,
      _0x966e88: 0x1d66,
      _0x49e0eb: 0x15ae,
      _0x36b7a7: 0x52c
    },
          a0_0x54bbfe = {
      _0xac52eb: 0x235b,
      _0x4368f3: 0x576,
      _0x26d839: 0x1af1,
      _0x4bc342: 0x91d
    },
          a0_0x49fea8 = {
      _0x3a6c8a: 0x10c0,
      _0x50cf69: 0x15e0,
      _0x45c72e: 0x14d2,
      _0x5b72ff: 0x52c,
      _0x5d8010: 0x535,
      _0x48b666: 0x13b0
    },
          a0_0x2b1f56 = {
      _0x1fe5ee: 0x1052,
      _0x55d171: 0x198d,
      _0x1c09a2: 0x576,
      _0x3b09d7: 0x1e35,
      _0x25cc79: 0x15ae,
      _0x55e094: 0x1a5,
      _0x384b99: 0x662,
      _0x4ff695: 0x535,
      _0x4c52f7: 0x13b0,
      _0x52786d: 0x1cd8,
      _0x40053c: 0x535,
      _0x564151: 0x220f,
      _0x87c5d0: 0x1e21,
      _0x49f034: 0x9a8,
      _0x42a567: 0x17d,
      _0x93b89f: 0x1e96
    },
          a0_0xd206d = {
      _0x3031aa: 0x220f,
      _0xf77157: 0x14d2,
      _0x5781a5: 0x662,
      _0x460b39: 0x52c,
      _0x14114f: 0x13b0,
      _0x374f16: 0x535,
      _0x1815fe: 0x1cd8,
      _0xb2e5a: 0x2488,
      _0xa11145: 0x4a3,
      _0x5b1b92: 0x1b92,
      _0x474a8b: 0x1d66,
      _0x1f4535: 0x1d66,
      _0x5d21ce: 0x2379,
      _0x1686fb: 0x1a47,
      _0x124d95: 0x15e0,
      _0x4e96cb: 0x186b,
      _0xda121b: 0x1331
    },
          a0_0xa2ebac = {
      _0x42e656: 0x14d2,
      _0x193977: 0x1a5,
      _0x1d6741: 0x662,
      _0x26fdd6: 0x535,
      _0x216acd: 0x13b0,
      _0x16c4b2: 0x1cd8,
      _0x14298f: 0x220f,
      _0x20eb46: 0x535,
      _0x1abc97: 0x25df,
      _0x49fbe0: 0x1d66,
      _0x83f7bc: 0x15e0,
      _0x2a418e: 0x2325,
      _0x135214: 0x1d66,
      _0x20f206: 0x16d1,
      _0x3a83ad: 0x1d66,
      _0x4e1b05: 0xc47,
      _0x133f2b: 0x225d,
      _0x3d98c5: 0x17f,
      _0x1b9c0e: 0xf82,
      _0x1f0c0b: 0xc7d,
      _0x1c1598: 0x225d,
      _0x39cc6f: 0x17f0,
      _0x10e320: 0x15ae,
      _0x1ace58: 0xd79,
      _0x1a635e: 0x1d66,
      _0x588c4b: 0xaf9,
      _0x37231b: 0xa9d,
      _0x29f5ff: 0x2072,
      _0x276a4e: 0xd79,
      _0x378f04: 0x880,
      _0x3d430d: 0x942
    },
          a0_0x236a9b = {
      _0x57859e: 0x1052
    },
          a0_0x98b1e2 = {
      _0x1d39d0: 0x198d,
      _0x57895e: 0x7cc
    },
          a0_0x4972f7 = {
      _0x15999b: 0x24fa,
      _0x3cabd2: 0xc2c,
      _0x5b4670: 0xd6a,
      _0x507e99: 0xe74,
      _0x18b63c: 0x24fa,
      _0x3e152e: 0xa05,
      _0x23676f: 0xa05,
      _0x281741: 0x1ed8,
      _0x23b208: 0x1d71,
      _0x4ffcba: 0x2296,
      _0x5bc4ad: 0x24fa,
      _0x4650b0: 0x2296,
      _0x3cb448: 0xe74,
      _0x1436b5: 0x10b7,
      _0x481ac1: 0x204e,
      _0x5be95f: 0x2528,
      _0x4fee0a: 0x2528,
      _0x314e3f: 0x1464,
      _0x5d58d3: 0x10b7,
      _0x55396a: 0x204e,
      _0x428c98: 0x10b7,
      _0x5a13ae: 0x2528,
      _0x453725: 0x1464,
      _0x28c65c: 0x204e,
      _0x1d4745: 0x377
    },
          a0_0x41ed5c = {
      _0x26779b: 0x942,
      _0x2fd1f1: 0x1992,
      _0x457d79: 0xa94,
      _0x28539a: 0x99e,
      _0x3bc7f0: 0x1d66,
      _0x1b5e73: 0x1992,
      _0x25de51: 0x3cd,
      _0x574913: 0x1992,
      _0x54ff17: 0x3cd,
      _0x585f20: 0x3cd,
      _0x11af4d: 0x1992,
      _0x259f44: 0x1992,
      _0x22019b: 0x3cd,
      _0x6bb68d: 0x1992,
      _0x1faff0: 0x1828,
      _0x1a4e6a: 0x1992,
      _0x5d5ad4: 0x1992,
      _0x46af55: 0x1828,
      _0x24f135: 0x220f,
      _0x2e95f4: 0x235b,
      _0x5ec15d: 0x1845,
      _0x1f5887: 0x14d2,
      _0x3730c3: 0x1a0b,
      _0x4786b9: 0x1c7a,
      _0x1ac28c: 0x206f,
      _0x36f67d: 0x1af1
    },
          a0_0x4a79b4 = {
      _0x2d7e76: 0x1a5,
      _0x4c8f0a: 0x79c,
      _0x43b60e: 0x1d66,
      _0x3a50e8: 0x287,
      _0x521290: 0x14d2,
      _0x3ea070: 0x662,
      _0x201196: 0x535,
      _0x278ea5: 0xfe3,
      _0x2c22a8: 0x19d6,
      _0x402fbc: 0xfe3,
      _0x5f2191: 0x855,
      _0x5727fe: 0x19d6,
      _0x21e36b: 0x1420,
      _0x29ef81: 0x20f6,
      _0x2ddc33: 0x1ccb,
      _0x320801: 0x19d6,
      _0x26193e: 0x5d0
    },
          a0_0x5f0d4c = {
      _0x3f2b42: 0x6d3,
      _0x1fc0b2: 0x6d3,
      _0xab9a30: 0x2091,
      _0x4d7ee6: 0x289,
      _0x59da29: 0x2062,
      _0x21293a: 0x3d5,
      _0x37966b: 0x1e21,
      _0x1cec7c: 0xacb,
      _0x4bd1ef: 0x576,
      _0x700f11: 0x1ea,
      _0x2d809c: 0x2062,
      _0x2b3efe: 0xd34,
      _0x2a7b15: 0x10c0,
      _0x24cdd8: 0x164e,
      _0x1efc8a: 0x22ce,
      _0x2d9cf3: 0x109d,
      _0x15c4f1: 0x1de1,
      _0x24303a: 0x2062,
      _0xed76dd: 0x2222,
      _0x5824e7: 0xf2b,
      _0x17866b: 0x46d,
      _0x599f3d: 0x46d,
      _0x146cb2: 0x1105,
      _0x52eea1: 0x14e9,
      _0x5d6287: 0x1bab,
      _0x20f9cc: 0x2091,
      _0x2d64a8: 0x1052,
      _0xe3d524: 0x1653
    },
          a0_0x48c8ae = {
      _0x308c69: 0x2062,
      _0x366b42: 0x1bc5,
      _0x1ee742: 0x19c5,
      _0x1e127e: 0xd17,
      _0x5ac32c: 0x14d2,
      _0x2850c5: 0x19c5
    },
          a0_0x3223c4 = {
      _0x24880f: 0x1a3,
      _0x31b01b: 0x1cdb,
      _0x2927f6: 0x1cfb,
      _0x289dee: 0x1a3,
      _0x268a5: 0x9bb
    },
          a0_0x2c1266 = {
      _0x28393c: 0x1ff0
    },
          a0_0x4e6efa = {
      _0x1fa6f1: 0xeb1
    },
          a0_0x41f238 = {
      _0x3b2b17: 0x32c,
      _0x2b8d2f: 0x2488,
      _0x420339: 0x1a3,
      _0x16da7a: 0x1a3
    },
          a0_0x19e973 = {
      _0x2a40bc: 0xffe,
      _0x43d06f: 0x1999,
      _0x56cb26: 0x32c,
      _0x5a0df0: 0xeb1,
      _0x10373f: 0x2474,
      _0x4f6504: 0x11ff,
      _0x1f76a8: 0x1cb5,
      _0x5f5be6: 0x1cb6,
      _0x154276: 0xab5,
      _0x1eda38: 0x8b9,
      _0xaedd8c: 0x14d2
    },
          a0_0x4125c9 = {
      _0x2891ae: 0xe41,
      _0x278c2e: 0xe41
    },
          a0_0x4ac725 = {
      _0x4d81aa: 0x535,
      _0x25829f: 0x235b,
      _0x3810b4: 0x185e,
      _0x381764: 0x1f30,
      _0x564aa1: 0x235b,
      _0x277fd9: 0x1f30,
      _0x5ec910: 0x155a,
      _0x55db57: 0x1d66,
      _0x36a91d: 0x19d8,
      _0x557afd: 0x1d71,
      _0x52b234: 0x1195,
      _0x46c878: 0x2002,
      _0x11f32d: 0x1d71,
      _0x544b2e: 0x300,
      _0x3a619d: 0x1d66,
      _0x3c8f56: 0x20fb,
      _0x2c0e72: 0x119c,
      _0x231507: 0x700,
      _0x4dcd77: 0x204e,
      _0x59c5f4: 0x50c,
      _0x5f34d9: 0x1d71,
      _0x1f4c1e: 0xe74,
      _0x196d92: 0x1d71,
      _0x3c9ebf: 0xe74,
      _0x3dbc83: 0x1d71,
      _0x4880c6: 0x1d66,
      _0x257a12: 0x204e,
      _0x2f8c22: 0x1c49,
      _0x538593: 0x1f30,
      _0x1bd0d9: 0x1502,
      _0x2bba5d: 0x1d71,
      _0x3ec7e9: 0x5c3,
      _0x1f5e8a: 0x1d71
    },
          a0_0xa296f0 = {
      _0x1e186e: 0xb82,
      _0x361e7c: 0x542,
      _0x2a9ccd: 0x179e,
      _0x16f484: 0x6a1,
      _0x4a913d: 0xa1b,
      _0x2f3beb: 0x50c,
      _0x396a44: 0x20bf
    },
          a0_0x4026d6 = {
      _0xdf1dec: 0x16c5,
      _0x2abff0: 0x179e,
      _0x5a631d: 0xf82,
      _0x257c1c: 0x2379,
      _0x34dea1: 0x12f9,
      _0x3b91eb: 0x155a,
      _0x1b8e3e: 0x377,
      _0x23eff5: 0xa8e,
      _0x3e5049: 0x17f,
      _0x3f81ef: 0x6ba,
      _0x7ff726: 0xd2a,
      _0x10fd4d: 0x1f30,
      _0xfd7746: 0x179e,
      _0x1c2653: 0x179e,
      _0x13d2be: 0x2606,
      _0x4c4f26: 0xa26,
      _0xaa6a51: 0x179e,
      _0x1b1415: 0xa8e,
      _0x3e5e29: 0x6ba,
      _0x3a313a: 0x2606,
      _0x31f1a5: 0x179e,
      _0x4b8ad9: 0x17f,
      _0x206234: 0xa8e,
      _0x123e07: 0x17f,
      _0x2b6b0a: 0xd2a
    },
          a0_0x5406d2 = {
      _0x2b572b: 0x142d,
      _0x29b0d6: 0x1992,
      _0x459804: 0xa94,
      _0x173955: 0x1d66,
      _0x2e9cf4: 0x264f,
      _0x383307: 0x1291,
      _0x50081e: 0x2574,
      _0x2a5111: 0x1d66,
      _0x40390f: 0x11dc,
      _0x39c5ef: 0x2422,
      _0x3aa46f: 0x1f30,
      _0x515ad7: 0x10f6,
      _0x4684ed: 0x373,
      _0x22839e: 0x1d55,
      _0x7257f6: 0x1f30,
      _0x262ca9: 0x1f30,
      _0x8189c4: 0x2528,
      _0x5346f9: 0x1692,
      _0x45859c: 0x125b,
      _0x2b54f6: 0x235b,
      _0x413ab2: 0x1692,
      _0x4ac08c: 0x1a76,
      _0x567ca9: 0x1692,
      _0x3356de: 0x1c7a,
      _0x42e70f: 0x576,
      _0x1b72af: 0x1af1,
      _0x317b13: 0x195a,
      _0x94ce69: 0x212d,
      _0x382cbf: 0x1e35,
      _0x6fe756: 0x1969,
      _0x1dcc5a: 0x17a4
    },
          a0_0x53f681 = {
      _0xc45e53: 0x129e,
      _0x283cfe: 0x185e,
      _0x4f7e16: 0xb00
    },
          a0_0x4e8505 = {
      _0x5c7944: 0x576,
      _0x3717f4: 0x1af1,
      _0x39f15f: 0x535,
      _0x41be68: 0x52c,
      _0xc0e689: 0x13b0,
      _0x3f0bb2: 0x1954,
      _0x39d518: 0x535,
      _0x2268ef: 0x1cd8,
      _0x318953: 0x218b
    },
          a0_0x511a93 = {
      _0x5106a2: 0x198d,
      _0x2360a1: 0x22ce,
      _0x5c57e4: 0x1e35,
      _0x169acc: 0x15ae,
      _0x224848: 0x535
    },
          a0_0x9c6bf6 = {
      _0x14aa45: 0x235b,
      _0x12c2a2: 0x576,
      _0x45719b: 0x1af1,
      _0x1ad1f6: 0x218b
    },
          a0_0x1c30cb = {
      _0x3267fb: 0x1d66,
      _0xa850ff: 0x287,
      _0x2b0581: 0x14d2,
      _0x431d71: 0x1a5,
      _0x521592: 0x535,
      _0x1e7611: 0x13b0,
      _0x2bd726: 0x1cd8,
      _0x5bc2e6: 0x4a3
    },
          a0_0x170fae = {
      _0x4bfd70: 0x1052,
      _0x2a7bfb: 0xacb,
      _0x306e2e: 0x535,
      _0x3d64ac: 0x2488,
      _0x376440: 0x1a3,
      _0x2615cc: 0x1a3,
      _0x265745: 0x711,
      _0x4077d1: 0x17a1,
      _0x2cd5d8: 0x2248,
      _0x1b5b3: 0x29c,
      _0x2428d2: 0x5b5,
      _0x4bc487: 0x9bb,
      _0x4de077: 0x1a3,
      _0x1d3bf2: 0x1913,
      _0x4bfdad: 0x2511,
      _0x447f8d: 0x13f3,
      _0xed8774: 0x81b,
      _0x260c9a: 0x13f3,
      _0x4badc1: 0x81b,
      _0x592238: 0x265f,
      _0x9fcacc: 0x213a,
      _0x3118b9: 0x830
    },
          a0_0x20b857 = {
      _0xa3f839: 0x264f,
      _0xbd29d5: 0x264f,
      _0x5140b3: 0xa9d,
      _0x2384e0: 0x16c5,
      _0x2fecb7: 0x373,
      _0x191b29: 0x1d66,
      _0x5c3fd3: 0x2072,
      _0x36841e: 0xd79
    },
          a0_0x390a0e = {
      _0x385b54: 0x1052,
      _0x475fa6: 0x1414
    },
          a0_0x202099 = {
      _0x381d40: 0xeb1,
      _0x36893a: 0x2488,
      _0x3137ca: 0x1a3
    },
          a0_0x28172e = {
      _0x4f3ee6: 0xe62,
      _0x25e0c1: 0x628,
      _0x75a69c: 0x1692,
      _0x131f42: 0x535,
      _0x16f59d: 0xb0c,
      _0x3b1e67: 0x2528,
      _0x510b76: 0x9ad,
      _0x495e23: 0x1692,
      _0x453c37: 0x1692,
      _0x4cac91: 0x1a2c,
      _0x534130: 0x1f08,
      _0x4226e8: 0x871,
      _0x53e580: 0x14eb,
      _0x1c8cde: 0x14eb,
      _0x264989: 0x2573
    },
          a0_0x2d83b4 = {
      _0xc2a7b8: 0xf01,
      _0xf8c5bb: 0x1414
    },
          a0_0x4f6406 = {
      _0x23c7cd: 0x535,
      _0x710747: 0xf01,
      _0x4d6a1a: 0xf1c
    },
          a0_0x7016ce = {
      _0xad1122: 0x1d7c,
      _0x3154c0: 0x2379
    },
          a0_0x481007 = {
      _0x2f6a3b: 0x14d2
    },
          a0_0x2dd60d = {
      _0x10d9b8: 0x576,
      _0x493db3: 0x1af1,
      _0x58a99a: 0x130c,
      _0x3249ea: 0xd1a,
      _0x2bad3d: 0x22b2,
      _0x2ef9b6: 0x1d2,
      _0x1846f3: 0xaec
    },
          a0_0x4d0549 = {
      _0x205cdb: 0xa26,
      _0x4b61ab: 0x15ae,
      _0x3542e6: 0x7a0,
      _0x275e21: 0x15ae,
      _0x581a76: 0xe98,
      _0x824325: 0x7a0,
      _0x244b03: 0x1410,
      _0x365296: 0x264f,
      _0x1f1f6b: 0x373,
      _0x479586: 0x1d55,
      _0x4de618: 0x1c7a,
      _0x452264: 0x2290,
      _0x183f58: 0x1aab,
      _0x2ae87d: 0x136c,
      _0x47b1fe: 0x443,
      _0x1851d3: 0x7a0,
      _0x4932ec: 0x2528,
      _0x18ad1c: 0x129e,
      _0x5869bd: 0x128a,
      _0x3ce1fa: 0xf82,
      _0xe8e7ce: 0x170f,
      _0x4822ea: 0x443,
      _0x2de58c: 0xa26,
      _0x356124: 0x24bc,
      _0x538fba: 0x13df,
      _0x79db3b: 0x2285,
      _0x1e71e8: 0xf1a,
      _0x197027: 0x879,
      _0x2f58ec: 0x24bc,
      _0x13b147: 0x24bc,
      _0x169da6: 0x879
    },
          a0_0x3684e7 = {
      _0x211cc0: 0x242c,
      _0xa89ec1: 0x5d0,
      _0x4aa873: 0x1cfb,
      _0x2e217b: 0x2488,
      _0x1cefa6: 0x1a3,
      _0xac5de5: 0x182f,
      _0x14b6d3: 0x1a3,
      _0xe068a2: 0xaec
    },
          a0_0x4f273b = {
      _0x5c44ca: 0x1a2c,
      _0x321c12: 0x182f
    },
          a0_0x1cdf93 = {
      _0x3f08fe: 0x2001,
      _0x2965a8: 0x235b,
      _0x407271: 0x185e,
      _0x427ad7: 0x20ff,
      _0x2aa20c: 0x16c5,
      _0x180c3f: 0x535
    },
          a0_0x2f9566 = {
      _0x2a77c1: 0x79e,
      _0x28e84e: 0x235b,
      _0x16c92e: 0x1291,
      _0x48eab9: 0x1291,
      _0x3c709b: 0x79e
    },
          a0_0x4d804c = {
      _0x142e57: 0x52c,
      _0x5f0ccc: 0x535,
      _0x3f4508: 0x535,
      _0x43e68f: 0x1283,
      _0x297a2a: 0x99e
    },
          a0_0x32c3d4 = {
      _0x354f8d: 0x1052,
      _0xc4cc9f: 0x22ce,
      _0x3a32e3: 0x942,
      _0x44473e: 0x1d66,
      _0xb0c316: 0x1e35,
      _0x2590dd: 0x17f0,
      _0x13135c: 0x15ae
    },
          a0_0x17f3c3 = {
      _0x476268: 0x1052,
      _0x5f4bd7: 0x1f15,
      _0x2f94b9: 0x1d66,
      _0x583a12: 0x1e35,
      _0x3d280e: 0x2019,
      _0x164cb6: 0x15ae,
      _0x44efc6: 0x52c
    },
          a0_0x58b1ec = {
      _0x3d4d42: 0x1d66,
      _0xbebce3: 0x15e0,
      _0x3612ab: 0x14d2,
      _0x3e4de9: 0xf46,
      _0x1ed543: 0x535,
      _0x337aeb: 0x13b0,
      _0xf95cc: 0x1cd8,
      _0x32c1fe: 0x390,
      _0x1218d5: 0x19d6,
      _0x101f9d: 0xfe3,
      _0x581173: 0x855,
      _0x625656: 0x19d6,
      _0x104d48: 0x1ccb,
      _0x15899b: 0x19d6,
      _0x220141: 0x5d0
    },
          a0_0x1b8b86 = {
      _0x4c5d02: 0x1052,
      _0x133c1b: 0x198d,
      _0x41850e: 0x576,
      _0x1b7f85: 0xf46,
      _0x3fb50e: 0x1d66,
      _0x5af73a: 0x1e35,
      _0x359d19: 0x17f0,
      _0x51b040: 0x1a5,
      _0x3c46db: 0x662,
      _0x4fcfc0: 0x535,
      _0x52206f: 0x1cd8,
      _0x4be25d: 0x535,
      _0xdeb557: 0x220f,
      _0x3d999c: 0xfe3,
      _0x4e9de3: 0x390,
      _0x5aac67: 0x157d,
      _0x4a16a1: 0x19d6,
      _0x1e208f: 0xfe3,
      _0x4c6416: 0x855,
      _0x59cb7f: 0x432,
      _0x194a21: 0x157d,
      _0x173a37: 0x17b4,
      _0x104f01: 0x129f,
      _0x4fb9f0: 0x20f6,
      _0x82312b: 0xe06,
      _0x4fc1c6: 0x1ccb,
      _0x5782c2: 0x157d,
      _0x2fb7b9: 0x9a8,
      _0x448d19: 0x969,
      _0x1ca080: 0x535,
      _0x418cf1: 0x1e96
    },
          a0_0x535cff = {
      _0xfc284c: 0x535,
      _0x448825: 0x220f,
      _0x7a7afb: 0xf46,
      _0x1d18b7: 0x13b0,
      _0x43bd7d: 0x1cd8,
      _0x1d9ebd: 0x25df,
      _0x5d99eb: 0x2488,
      _0x9c2519: 0x4a3,
      _0x4f71a0: 0x5d0,
      _0x9f1dda: 0x830,
      _0x1b4bd6: 0x1988
    },
          a0_0x1329a2 = {
      _0x105ddd: 0x155f,
      _0x2519c4: 0x535,
      _0x5ebbb8: 0x1b37,
      _0x522813: 0xc41,
      _0x2e1c0c: 0xf82,
      _0x5e5e35: 0x1d66,
      _0x538498: 0x2379,
      _0x4db437: 0x1e6c,
      _0x31ea68: 0xdde,
      _0x2d4ca6: 0x1e6c,
      _0x798fbc: 0x19d2,
      _0x55a70f: 0x1d55,
      _0x5e7413: 0x235b,
      _0x206a2b: 0x185e,
      _0x3e6217: 0xa26,
      _0x22b530: 0xaf9
    },
          a0_0x3be41f = {
      _0x489d6b: 0x1af1,
      _0x65cf42: 0x1283,
      _0x1d039c: 0x1d66,
      _0x8b0342: 0x1870,
      _0x28eaf5: 0x91b
    },
          a0_0x1fd31a = {
      _0x56be8d: 0x235b,
      _0x3c2f04: 0x185e,
      _0x1b2afa: 0x1283,
      _0x4f1665: 0x235b
    },
          a0_0x49f20b = {
      _0xef0eaf: 0x2488,
      _0x3d16c7: 0x1cfb,
      _0x879fb0: 0x680
    },
          a0_0x14db69 = {
      _0x9a8715: 0xe62,
      _0x775c38: 0x1692,
      _0x380452: 0x9ad,
      _0x26699e: 0x1692,
      _0x5b629d: 0x1f08,
      _0x53f356: 0x871,
      _0x80d687: 0x871,
      _0x51a232: 0x14eb,
      _0x5d030f: 0x14eb,
      _0xa3b213: 0x535,
      _0x4c0d99: 0xb0c,
      _0x2c0140: 0x855,
      _0xfb4afd: 0x1efb,
      _0x9f6055: 0x2573,
      _0x33c936: 0xf83
    },
          a0_0x3976c3 = {
      _0x3c2814: 0x201
    },
          a0_0x5b9d7e = {
      _0x5d4a9c: 0x14d2,
      _0x4062e9: 0x19c5
    },
          a0_0x412947 = {
      _0x1bc416: 0x6e0
    },
          a0_0x13cf5f = {
      _0x1d586a: 0x1ea
    },
          a0_0x781516 = {
      _0x1a0e8c: 0x14d2
    },
          a0_0x50f609 = {
      _0x37c4e4: 0x1af1,
      _0x511862: 0x2410,
      _0x2304bf: 0x1a5
    },
          a0_0x13c34d = {
      _0x4b924f: 0x1052,
      _0x452f88: 0x15e0,
      _0x5d7ce3: 0x170f,
      _0x2d95e3: 0x170f,
      _0x1b0457: 0x170f,
      _0x10d86d: 0x170f,
      _0x12484a: 0x170f,
      _0x37e9f1: 0x443,
      _0x508259: 0x16d1,
      _0x3a4ac2: 0x1d66,
      _0x561a68: 0x1da5
    },
          a0_0x237b00 = {
      _0x3eac94: 0xa26,
      _0x55dbf8: 0x61e,
      _0x30d7d8: 0x1618,
      _0x475236: 0x1d55,
      _0x3d5144: 0x7a0,
      _0x28e18a: 0x1df4,
      _0x5a607d: 0x1df4,
      _0x1509fa: 0x443,
      _0x185e0: 0x1df4,
      _0x57e517: 0x1c05
    },
          a0_0x15ba6d = {
      _0x472a9b: 0x1052,
      _0x124d9c: 0x1e89
    },
          a0_0x1739b1 = {
      _0x206f9b: 0x14d2,
      _0x3723bd: 0x19c5,
      _0x1993b6: 0xd17,
      _0x4a8803: 0x14d2,
      _0x30a359: 0x5d9,
      _0x37ef0d: 0xcd6,
      _0x12ea93: 0x172a,
      _0x4a3160: 0x14d2,
      _0x4f548e: 0x1029,
      _0x3a18c6: 0x1808,
      _0x3a9a09: 0x19c5,
      _0x4630cd: 0x1bab,
      _0x1f0f37: 0x879,
      _0x4f5162: 0x121d,
      _0x8babc: 0x19c5,
      _0x1984d4: 0x23cc
    },
          a0_0x535b49 = {
      _0x2b211d: 0x1e35,
      _0x58df13: 0x1272
    },
          a0_0x1199c9 = {
      _0x2c6e9f: 0x535,
      _0x3eafa1: 0x19d2
    },
          a0_0x5e342f = {
      _0x27378c: 0x19e6
    },
          a0_0x29a720 = {
      _0xa69229: 0x11dc,
      _0x26fb7c: 0x910
    },
          a0_0x2dc548 = {
      _0xa3afa3: 0x2530,
      _0x2fe08b: 0x910,
      _0xa37553: 0xc95
    },
          a0_0x450fa0 = {
      _0x51a466: 0x1dda,
      _0xd60bac: 0x2ae,
      _0x563a01: 0x21bb,
      _0x270476: 0x2003,
      _0x2ae4e0: 0x24bc,
      _0xfa76f: 0xc55,
      _0x1974a5: 0xbaf,
      _0x48955e: 0x5d4
    },
          a0_0x156e67 = {
      _0x59644e: 0x1639,
      _0x10e55e: 0x19d2,
      _0x2bbbc6: 0x2428
    },
          a0_0x30cac8 = {
      _0xa6e950: 0xf95,
      _0x545528: 0x1d6a,
      _0x4da2a4: 0x19d2
    },
          a0_0x5bf7e1 = {
      _0xd642b8: 0x1d90,
      _0x3ee535: 0x18c0
    },
          a0_0x2d115a = {
      _0x2fafe9: 0xcd6,
      _0x19bf76: 0x19c5,
      _0x2eca4d: 0x14d2,
      _0x5b244e: 0x753
    },
          a0_0x5bd9e9 = {
      _0x3952b4: 0x19e6,
      _0x5e697e: 0xac9
    },
          a0_0x2ebbbd = {
      _0x4d33a6: 0x1705,
      _0x12b087: 0x14d2,
      _0x314527: 0x19c5,
      _0x565a88: 0x1d04
    },
          a0_0x169f22 = {
      _0x4c095d: 0x1a3,
      _0x16ee12: 0x53b,
      _0x147ef9: 0x3e9,
      _0x69a722: 0x16a6
    },
          a0_0x4be4bb = {
      _0x511e36: 0x235b,
      _0x457be2: 0x1349,
      _0xb7cdfd: 0x1aa8
    },
          a0_0x2ec728 = {
      _0x386fe8: 0x14d2,
      _0x5c620c: 0x19c5,
      _0x3a6cee: 0x257d,
      _0x5b5815: 0xc1e,
      _0x2e8d1a: 0xf7f,
      _0xbc3030: 0x14d2,
      _0xaae9d7: 0xac8
    },
          a0_0x226cd1 = {
      _0x3c64b9: 0x16c5,
      _0x411eea: 0xa8e
    },
          a0_0x2775b0 = {
      _0x3b9c04: 0x6ba,
      _0x546924: 0x16c5,
      _0xf9042: 0x19e6
    },
          a0_0x3a1913 = {
      _0x27f538: 0x6ba,
      _0x351a6b: 0x2530,
      _0x51311b: 0x535,
      _0x1f8edf: 0x1349,
      _0x4b60ca: 0x138f,
      _0x16d57b: 0x1d66,
      _0x37c977: 0x1bb9,
      _0x1a8b31: 0x1a9d,
      _0x50cb93: 0xf74
    },
          a0_0x11efde = {
      _0x1eba13: 0x235b,
      _0x30f364: 0x185e,
      _0x40c9a7: 0x1d66,
      _0x59eb03: 0x2379,
      _0x56c008: 0xa97,
      _0x2e02cb: 0xd71,
      _0x5103af: 0x1ee5,
      _0x53e7e0: 0x7c1,
      _0x4e6637: 0x1d66,
      _0x5e0738: 0x2379,
      _0x1c8207: 0x16fa,
      _0x305172: 0x1d66,
      _0x1f1ee4: 0x2379,
      _0x1cef54: 0x1814,
      _0x515876: 0x15b5,
      _0x33bd2f: 0x2379,
      _0x258227: 0x1ffe,
      _0x3a351f: 0xa2d,
      _0xfa1168: 0x14da,
      _0x557b54: 0x2379,
      _0x2abd9b: 0x1d66,
      _0x506ace: 0x2379,
      _0x15a24e: 0x9ef,
      _0x5cffc4: 0x1d66,
      _0x4a81e5: 0x2520,
      _0x2c7fd0: 0x1d66,
      _0x2ecde1: 0x2379,
      _0x11fc75: 0x19c5,
      _0x1e885e: 0x1029,
      _0x2c5606: 0x1808,
      _0x14df77: 0x70e,
      _0x3291ac: 0x19c5,
      _0x265cf6: 0x14d2,
      _0x3e94a9: 0x19c5,
      _0x30e843: 0x1105,
      _0x1ffe48: 0x753
    },
          a0_0x5c8c75 = {
      _0x16b50a: 0x4b9,
      _0x1b0b0c: 0x163e,
      _0x2ce2ed: 0x133c,
      _0x338765: 0x92f,
      _0x47a901: 0xb5f,
      _0x3d5632: 0x14d2,
      _0x5f2c10: 0x1da5,
      _0x1fcd4d: 0x1121,
      _0x5d19b2: 0x1a5,
      _0x2cf17c: 0x1d95,
      _0x30d179: 0x14d2,
      _0x154ead: 0x11fa,
      _0x5d790d: 0x1a07,
      _0x50414d: 0xc3a,
      _0x1d8c8d: 0x535,
      _0x47138d: 0x157d,
      _0x17847e: 0x1d71
    },
          a0_0x6b85d3 = {
      _0x5603c5: 0xe6d
    },
          a0_0xf5d67e = {
      _0x33178d: 0xe6d
    },
          a0_0x4b57e5 = {
      _0x4353ca: 0x535,
      _0x10703a: 0x253d,
      _0x34481e: 0x4b9,
      _0xd92340: 0x623,
      _0x24ff96: 0x18d0,
      _0x361c00: 0x2001,
      _0x582da0: 0xcf8,
      _0x49250d: 0x535,
      _0x96bbef: 0xf86,
      _0x56b24c: 0x1b36
    },
          a0_0x50df98 = {
      _0x34539b: 0x14d2,
      _0x4c6512: 0x1aab,
      _0x56bd00: 0x25e1,
      _0x385726: 0x17f,
      _0x20d736: 0x16c5,
      _0x3c96ce: 0x24fa,
      _0x2effa4: 0xa8e
    },
          a0_0xd5d717 = {
      _0x57c9c2: 0x235b,
      _0x1c1e85: 0x14d2,
      _0x1843a2: 0x19c5,
      _0x49e95c: 0x14d2,
      _0x95029b: 0x120a
    },
          a0_0x2c5ace = {
      _0x403e62: 0x535,
      _0x5afd59: 0x1c66,
      _0x582e24: 0x535,
      _0x1d4e0a: 0x3dd,
      _0x3aa3c5: 0x108e,
      _0x168666: 0x1d66,
      _0x20276f: 0x1870,
      _0x364c7e: 0x580,
      _0x349c35: 0x49e,
      _0x152edb: 0x535,
      _0x477338: 0x1c66,
      _0x39b77a: 0x535,
      _0x1f0821: 0x1de9,
      _0x33506e: 0x280,
      _0x1f612a: 0x1c66,
      _0x4388a8: 0x1da5
    },
          a0_0x43b924 = {
      _0x241a7f: 0x185e,
      _0x38f03d: 0x19c5,
      _0x532f08: 0x19c5,
      _0x9d4a12: 0xf9c,
      _0x2417d0: 0x14d2,
      _0xc5f859: 0x19c5,
      _0x203347: 0x1599,
      _0x47fae0: 0x14d2,
      _0x1ed39d: 0x1029,
      _0x2ed923: 0x1808,
      _0x49cb5f: 0x14d2,
      _0x2d370d: 0x19c5,
      _0x68ab87: 0x1105,
      _0x3255d6: 0x19c5,
      _0x3cf092: 0x753,
      _0x1acb61: 0x19c5,
      _0x2f3b65: 0x24d0
    },
          a0_0x269903 = {
      _0x1bd75b: 0x101f,
      _0x24fce6: 0x14d2,
      _0x31c05e: 0x1a5
    },
          a0_0x297407 = {
      _0xf01fc7: 0x196a,
      _0x2e7b88: 0x14d2,
      _0xffd060: 0x92f,
      _0x298f4f: 0x4b9,
      _0x15ddaa: 0x4b9,
      _0x49f791: 0xb5f,
      _0xfbf964: 0x1a5,
      _0x49bfa0: 0x157d,
      _0x5f2a2b: 0x1d71,
      _0x44d002: 0x535
    },
          a0_0x49c07b = {
      _0x1c55d3: 0x14d2,
      _0x4dfe57: 0x1a5,
      _0x50038d: 0x220,
      _0x2a6685: 0x1128,
      _0x5b167c: 0xf82,
      _0x4d3990: 0x1d55,
      _0x420146: 0xa8e,
      _0x5c4f4a: 0x6ba,
      _0x1967e7: 0x1d4e,
      _0x5f1843: 0x1b2d,
      _0x457942: 0x14d2,
      _0x50795a: 0x535,
      _0x552510: 0x1349
    },
          a0_0x102c5a = {
      _0x1e976e: 0xc95,
      _0x3424e0: 0x25e1,
      _0x3272e0: 0x1b36,
      _0x590281: 0x22c8,
      _0x542b56: 0x1d8,
      _0x9bb53f: 0x1c23,
      _0x125507: 0x1da5,
      _0x1c5654: 0x2064
    },
          a0_0x2a9967 = {
      _0x4f8e0e: 0x253d,
      _0x30af75: 0x1d66
    },
          a0_0x31373f = {
      _0x4a9d68: 0x6ba,
      _0x5539c9: 0x16c5,
      _0x56f886: 0x17f
    },
          a0_0x3a92a5 = {
      _0x17e026: 0x16c5,
      _0x4951e4: 0x25e1,
      _0x1c7880: 0x17f,
      _0x81c4bd: 0x1128,
      _0x15dd82: 0x18b1
    },
          a0_0x22f930 = {
      _0x2e1eee: 0x1dda,
      _0x56168f: 0xcf8,
      _0x2dd9c4: 0x25e1,
      _0x2cde8b: 0x18b1,
      _0x4aa24e: 0x1d55
    },
          a0_0x489972 = {
      _0x4518b1: 0x1dda,
      _0x4ba409: 0xf82,
      _0x1d89e0: 0x1d55,
      _0x16a409: 0xf4a
    },
          a0_0x220e6b = {
      _0x2a58ed: 0x19c5,
      _0x52bf1e: 0x121d,
      _0x58a09e: 0x1029,
      _0x1c6bd7: 0x1105,
      _0x5de11d: 0x1e5a
    },
          a0_0x396921 = {
      _0x4615f7: 0x1fcd,
      _0x35be4c: 0x535,
      _0x4d39e0: 0x14d2,
      _0x3dfa40: 0x662,
      _0xe3f98c: 0x160a,
      _0x33ee78: 0x1f30,
      _0x2d5118: 0x11a8,
      _0x51cce2: 0x11a8,
      _0x254979: 0x35c,
      _0x18a186: 0x191a,
      _0x5c3cc2: 0x1d72,
      _0x5b9ae4: 0x10bb,
      _0x5e6abc: 0x13b0,
      _0x3b1897: 0x1143,
      _0x568bd9: 0x1d71,
      _0x151472: 0x19d6
    },
          a0_0x192d33 = {
      _0x144a6b: 0x1143,
      _0x16c989: 0x1fcd,
      _0x3d447e: 0x23ab,
      _0x45d5de: 0x535,
      _0x1faed9: 0x23ab,
      _0x132c96: 0x1da5,
      _0xa1c953: 0x147e
    },
          a0_0x32d3e1 = {
      _0x59d8d0: 0x253d,
      _0x238169: 0x1143,
      _0x326dd5: 0xffb,
      _0x4eee27: 0xb48,
      _0x383c2b: 0x1992,
      _0x1690b5: 0x3cd,
      _0x176368: 0x1d66,
      _0x197aed: 0x1992,
      _0x496baf: 0xe74,
      _0x528778: 0x535,
      _0x3a72df: 0xe74,
      _0x54ea0f: 0xffb,
      _0x109df5: 0x1e8d,
      _0x3ff98f: 0x1fc8,
      _0x424f24: 0x1da5,
      _0x3f32aa: 0x1143
    },
          a0_0x1e4bba = {
      _0x348e19: 0x235b,
      _0x5901c8: 0x14d2,
      _0x55e1d5: 0x9f2,
      _0x1d9998: 0x14d2,
      _0xea68e0: 0x19c5,
      _0x66677d: 0x1029,
      _0x15173f: 0x19c5,
      _0x36622e: 0x1105,
      _0x293202: 0x19c5
    },
          a0_0x4c6cb5 = {
      _0x300cc5: 0x2315,
      _0x2c91fc: 0x535,
      _0x57bd02: 0x2017,
      _0x5661db: 0x535,
      _0x4d643c: 0x1de9,
      _0x306fde: 0xc18,
      _0xac7b85: 0x1870,
      _0x236186: 0x14d2,
      _0xc08403: 0x1da5,
      _0x14e57c: 0x1c66
    },
          a0_0x12f760 = {
      _0x4c96fd: 0x535,
      _0x151c21: 0x1d66,
      _0x59d784: 0x59d
    },
          a0_0x596571 = {
      _0x56b93c: 0x185e,
      _0xcd89af: 0xffb,
      _0x2cebb7: 0x2053,
      _0x458176: 0x22b2,
      _0x27487e: 0x14d2,
      _0x2c6d38: 0x19c5,
      _0x47f1bd: 0x1558,
      _0x4fbffa: 0x19c5,
      _0x587df0: 0x20dc,
      _0x5761a7: 0x14d2,
      _0xe3b148: 0x121d,
      _0x10627c: 0x14d2
    },
          a0_0x4480d8 = {
      _0x34e280: 0x6f3,
      _0xbdba5: 0x1da5,
      _0x5ace01: 0x6f3,
      _0x346d3d: 0x14d2,
      _0x357625: 0x1da5,
      _0x53aab2: 0x23ee,
      _0x303ddc: 0x1c66,
      _0xe9ff27: 0x1a5,
      _0x5efb26: 0x662,
      _0x181bdf: 0x11a8,
      _0x49841d: 0x17f,
      _0x4ff285: 0x1152,
      _0x7ffa99: 0x1152
    },
          a0_0x59deea = {
      _0x44b085: 0x535,
      _0xaa0cd3: 0x14d2,
      _0x376b4c: 0x662,
      _0x14eea0: 0x2292,
      _0x52869a: 0x6f3,
      _0xd2f425: 0x160a,
      _0x173a4f: 0x1f30,
      _0x403a19: 0x1f41,
      _0x29db24: 0x11a8,
      _0x3a6344: 0x191a,
      _0xf7b5c0: 0x11a8,
      _0x5140b8: 0x13b0,
      _0x564737: 0x1152,
      _0x260762: 0x157d,
      _0x19ec2f: 0x1d71
    },
          a0_0x20dfd6 = {
      _0x2b3960: 0x535,
      _0x1bbe85: 0x4b9,
      _0x547733: 0x1152,
      _0x5d3522: 0x19d6,
      _0x4a8806: 0x3cd,
      _0x3a0a8f: 0x1c55,
      _0x2d942d: 0x1f93,
      _0x189fee: 0x1152,
      _0x32c6b0: 0x535,
      _0x379777: 0x1de9,
      _0x2ebec9: 0xe1c,
      _0xd101a2: 0x1e8d,
      _0x248f03: 0x14d2,
      _0x2287bb: 0x12ef,
      _0x2764e9: 0x1152,
      _0xf2196b: 0x1152,
      _0x1071b2: 0x19d2,
      _0x1cb8e6: 0xccc,
      _0xb2d179: 0xccc,
      _0x497585: 0x1e82,
      _0x43c1e4: 0x1fdb,
      _0x426f49: 0x1c3c,
      _0x3d22e0: 0x1fdb,
      _0x51f845: 0xc55,
      _0x3b48a3: 0x1f30,
      _0x58c8a4: 0x535,
      _0x5db767: 0x1a50,
      _0x39de7b: 0xbf5,
      _0x4561b6: 0x14c1,
      _0xe3a40a: 0x16f9,
      _0x3de294: 0x1af1,
      _0xb00143: 0x6b3,
      _0xfa8e8: 0x6b3,
      _0x361f98: 0x549,
      _0xe276fb: 0x1f93,
      _0x5d538c: 0xf45,
      _0x41336e: 0x5f4,
      _0x1bd14b: 0x535,
      _0x35cb16: 0x16f9,
      _0x24413d: 0x72f,
      _0x137bf1: 0x535
    },
          a0_0x58105a = {
      _0x14a265: 0x11f5,
      _0x497fc: 0x21e0,
      _0xa1712a: 0x1e3d,
      _0x3fb08f: 0xbf5,
      _0x21a980: 0x2327,
      _0x5830e6: 0x7fe,
      _0x4b00cb: 0x10a8,
      _0x9f81b9: 0x72f,
      _0x433ace: 0x1a54,
      _0x3f7344: 0x16f9,
      _0x1b7f5c: 0x14c1,
      _0x259650: 0x14c1
    },
          a0_0x5525fd = {
      _0x43a35b: 0x14a7,
      _0x2d7cd6: 0x2327,
      _0x41d68e: 0x2327,
      _0x3d8361: 0xf82,
      _0x17fcaa: 0x13b4,
      _0x3e8ad0: 0x1e3d,
      _0x37e383: 0xeac,
      _0x292765: 0x1d55,
      _0x30755f: 0x1f30,
      _0xf2c661: 0x1997,
      _0x2bf567: 0x1997,
      _0x555b8d: 0x72f,
      _0x2ab315: 0x1e3d,
      _0x4bcd92: 0x1a54
    },
          a0_0x1be05c = {
      _0x515e3d: 0xe6d
    },
          a0_0x8cb787 = {
      _0x222b32: 0x1aab,
      _0x4cc2b5: 0x1f30,
      _0x2e9a93: 0x1dc6,
      _0x8d9f7b: 0xe20
    },
          a0_0x5099b4 = {
      _0x2ae8b4: 0x235b,
      _0x5e3a7d: 0x185e,
      _0x3915d7: 0x62e,
      _0xbc95ad: 0x14d2,
      _0x1d6dbc: 0x2523,
      _0x3a5a6f: 0x19c5,
      _0x34810b: 0xbfa,
      _0x4fdddf: 0x19c5,
      _0x323bfa: 0x2106,
      _0x1010ee: 0x1be6,
      _0xb0ffc7: 0x1ca3,
      _0x1bc34c: 0x14d2,
      _0x10f1e9: 0x19c5,
      _0x2e4b2e: 0x10c6,
      _0x57f8eb: 0x1029,
      _0x497eeb: 0x19c5,
      _0x23bbe3: 0x19c5,
      _0x449b1c: 0x2555,
      _0x181965: 0x19c5,
      _0x518b89: 0x1b8b,
      _0x2de33e: 0x19c5,
      _0x353c9c: 0x14d2,
      _0x46c1f9: 0x19c5,
      _0x51724e: 0x1819
    },
          a0_0x3a154c = {
      _0x7ab6dc: 0x1063
    },
          a0_0x225d7d = {
      _0x54f51f: 0x35c,
      _0x5131e1: 0x9fb,
      _0x181ff2: 0x191a,
      _0x38fbb7: 0x1a07,
      _0x2d6a98: 0x4a9,
      _0x25d79b: 0x13b0
    },
          a0_0x251200 = {
      _0x1ed34c: 0x6ba,
      _0x2080f0: 0x16c5,
      _0x38ec5b: 0x17f
    },
          a0_0x5cfcc6 = {
      _0x17212a: 0x6ba,
      _0x36b8be: 0x16c5,
      _0x20048f: 0x17f,
      _0x4b1eb8: 0x1aab,
      _0x3ca64e: 0x2348,
      _0xef2076: 0x18b1
    },
          a0_0x3cc93f = {
      _0x99edd4: 0x1d66,
      _0x1b624c: 0x84b,
      _0x137ab6: 0x1349,
      _0x328804: 0xbb1,
      _0x3a939e: 0x2631,
      _0x5644d9: 0x535,
      _0x494300: 0xbc2
    },
          a0_0x34cb71 = {
      _0x5a4391: 0x535,
      _0x330b13: 0x1d66,
      _0x4adf20: 0x59d
    },
          a0_0x43dab9 = {
      _0x1dcf23: 0xa8e,
      _0x30c0f3: 0x17f,
      _0x94fa2e: 0xa8e,
      _0x623a6e: 0x1aab,
      _0x24a158: 0x16c5,
      _0x169325: 0x2348,
      _0x4b6ab5: 0x2348,
      _0x38b7f3: 0x1128,
      _0x45013e: 0x17f,
      _0x59ff31: 0x18b1,
      _0x2939ca: 0x2348,
      _0x33a2e7: 0x2405,
      _0x1f1041: 0x18b1,
      _0x172575: 0xf82,
      _0xc19af0: 0xa8e,
      _0x538cdb: 0x6ba,
      _0x1745e3: 0xf82,
      _0xbb082b: 0x1d4e,
      _0x49e6b8: 0x14d2,
      _0x5b0ba4: 0x2618,
      _0x108bef: 0xf2f,
      _0xada97d: 0x1e93,
      _0xc0f1de: 0xf2f,
      _0x36a6a2: 0xd44,
      _0x259b8b: 0x212a,
      _0x362121: 0x535,
      _0x77ea68: 0xf71,
      _0xf94690: 0x212a,
      _0x10181b: 0x91b
    },
          a0_0x4468c2 = {
      _0x240365: 0xbc6,
      _0x291979: 0x1c66,
      _0x38a71a: 0x14d2,
      _0x5119a7: 0x1a5
    },
          a0_0x177a54 = {
      _0x3ba564: 0xe74,
      _0x5d26e8: 0x535
    },
          a0_0x1e2ac8 = {
      _0x30f075: 0x235b,
      _0x3f3842: 0x185e,
      _0x25dbdf: 0x1d55,
      _0xaa765e: 0x19c5,
      _0x383b75: 0x14d2,
      _0x5d7288: 0x14d2,
      _0x2bb854: 0x1e2f,
      _0x3e5525: 0x2319,
      _0x8a9f81: 0x14d2,
      _0x187d15: 0x14d2,
      _0x4909f9: 0x1029,
      _0x117ed5: 0x1808,
      _0x372f67: 0x19c5,
      _0x4199b7: 0x1105,
      _0x1e7b6a: 0x14d2,
      _0x3659ce: 0x1ef7,
      _0x3e5fd1: 0x19c5,
      _0x4039dd: 0x8ef
    },
          a0_0x1bad57 = {
      _0x549f02: 0x18b1,
      _0x43d329: 0x17f,
      _0x5ef3cb: 0xa8e,
      _0x3605d3: 0x535,
      _0x3d2919: 0x1c66,
      _0x5f5865: 0x239,
      _0x1dd5f2: 0x167e,
      _0x854ca6: 0x1870,
      _0x112a50: 0x1de9,
      _0x8d684c: 0x1d7c,
      _0x9eac7a: 0x12e4,
      _0x1c3b7d: 0x1d66,
      _0x48dc15: 0x1aab,
      _0x5d351c: 0x1128,
      _0x71619d: 0xf82,
      _0x3eb08a: 0x1d55,
      _0x5550a5: 0x6ba,
      _0x575d8e: 0xa8e,
      _0x289e5e: 0x1b2d
    },
          a0_0x43a0bb = {
      _0x15aba1: 0x3b1,
      _0x22502b: 0x1d8,
      _0x4a7efc: 0x535
    },
          a0_0x5a9527 = {
      _0xd63d68: 0x196a,
      _0x2fd926: 0x92f,
      _0x33f28f: 0x4b9,
      _0x2d74ae: 0x1a35,
      _0x78ea6a: 0x4b9,
      _0x3c7e95: 0x14d2,
      _0x317180: 0x1da5,
      _0x200216: 0x1121,
      _0x3b3d69: 0x14c0,
      _0x36738e: 0x157d,
      _0x33b956: 0x73d,
      _0x1bda44: 0x535
    },
          a0_0x130682 = {
      _0x823b4: 0x14d2,
      _0x123cdb: 0x1a5
    },
          a0_0x3279ed = {
      _0x434fa4: 0x6da,
      _0x15c343: 0x18b1,
      _0x165cb2: 0x1820,
      _0x2e006b: 0x16c5,
      _0x5e329d: 0x1d66,
      _0x2c218b: 0x186b,
      _0x4ec583: 0x15b2,
      _0x2e0038: 0x1915,
      _0x5bf0ed: 0x24c7,
      _0x40c480: 0x25e1,
      _0x772841: 0x2405,
      _0x354f7e: 0x1d55,
      _0x18f3a8: 0x6ba,
      _0x4ded18: 0x1d4e,
      _0x2b282c: 0xa8e,
      _0x54b359: 0x1209
    },
          a0_0x5d5210 = {
      _0x2d08f7: 0x1dda,
      _0x459baa: 0x17b9,
      _0x550df1: 0xbb9,
      _0x8dd7c4: 0x1af5,
      _0x5dde9c: 0x25e1,
      _0x9913c4: 0x1d55,
      _0x34d33d: 0x1d55,
      _0x27f0e7: 0xf82,
      _0x44c2d7: 0x21e8,
      _0x4a4c0f: 0x1d4e,
      _0x33edca: 0xa8e,
      _0x383799: 0xa8e,
      _0x2ee5a5: 0x14d2,
      _0x14987e: 0x1a5,
      _0x3d3cde: 0x1349,
      _0xf378f6: 0xbb1
    },
          a0_0x382dcc = {
      _0x16147c: 0x1c23,
      _0x21dd8b: 0x535,
      _0x2358d6: 0x1c92,
      _0x5454be: 0x1ad5,
      _0x1d6e2f: 0x4a9
    },
          a0_0x1456ef = {
      _0x3f6ec7: 0x535,
      _0xec3f3e: 0x253d,
      _0x157dd3: 0x1d66,
      _0x3700a3: 0x59d
    },
          a0_0xe8d305 = {
      _0x27a3ee: 0x235b,
      _0x4b22c3: 0x185e,
      _0x282083: 0x19c5,
      _0x2fb420: 0x14d2,
      _0xeeed41: 0x158b,
      _0x1cccd7: 0x19c5,
      _0x460ab1: 0x19c5,
      _0x15495e: 0x19c5
    },
          a0_0x91a18c = {
      _0x44eb40: 0x1d8,
      _0x305832: 0x535
    },
          a0_0x5e4e99 = {
      _0x45ea9a: 0x1aab,
      _0x8d0487: 0x16c5,
      _0xe8ff67: 0x18b1,
      _0x150641: 0x6ba,
      _0x13964d: 0xa8e,
      _0x4cbd62: 0x1128,
      _0x3558ad: 0x18b1,
      _0x225906: 0x6ba,
      _0x44eb89: 0x16c5,
      _0x18d1c2: 0xa8e,
      _0x5d2696: 0xa8e,
      _0x2b7f19: 0x17f,
      _0x3cc1c4: 0x16c5,
      _0x48a604: 0x18b1,
      _0x4c5bec: 0x17f,
      _0x3a1cee: 0x16c5,
      _0x366a70: 0x17f
    },
          a0_0x197f6e = {
      _0x27d72b: 0x11d9,
      _0x55e9c6: 0x14d2,
      _0x1e434f: 0x1da5,
      _0x5d6f4e: 0x441
    },
          a0_0x4919c1 = {
      _0x71a7ee: 0x253d,
      _0x49fd11: 0x535,
      _0x5a219d: 0x2315,
      _0x5519ba: 0x2315,
      _0x2d4c46: 0xf6e,
      _0x2f7a4d: 0x59d
    },
          a0_0x237f7d = {
      _0x59f55e: 0x1dda,
      _0x2a384d: 0x22b2,
      _0x1db2bb: 0x535,
      _0x1edab1: 0x1349,
      _0x38b1d: 0xbb1,
      _0x442903: 0x14d2,
      _0x35f974: 0x1a5,
      _0x9979c3: 0x1987,
      _0x41e3f0: 0xf82,
      _0x3d10b3: 0x1e48
    },
          a0_0x29a02c = {
      _0x3c099c: 0x235b,
      _0x4142ac: 0x19c5,
      _0x2a85b1: 0x10ac,
      _0x45ca3e: 0x14d2,
      _0x1f0c1f: 0x1808,
      _0x483a0d: 0x19c5
    },
          a0_0x3283a7 = {
      _0x57c2a5: 0xc95,
      _0x69a6ae: 0x1d66,
      _0x3fcb32: 0x59d,
      _0xfb49c3: 0x1a2c,
      _0x53e225: 0xa8e,
      _0x2c01e2: 0xda6,
      _0xb66ca: 0x17f,
      _0x11b426: 0x1aab,
      _0x666516: 0x17f,
      _0x56ce9d: 0x1b65
    },
          a0_0x15bb6f = {
      _0x55446e: 0x535,
      _0x16d37e: 0x253d,
      _0x2dcc4e: 0x4b9,
      _0x427c8c: 0xb5b,
      _0x51b3ad: 0x1edc,
      _0x4fca98: 0x535,
      _0x5304d6: 0xf86
    },
          a0_0x2f3e9c = {
      _0x1ddeff: 0x185e,
      _0x3875d3: 0x1029,
      _0x5c746e: 0x14d2,
      _0x5eaa41: 0x19c5,
      _0x43a9e1: 0x14d2,
      _0x50902a: 0xe6a,
      _0x18c8f8: 0x14d2,
      _0x4bb659: 0x19c5,
      _0x1b7517: 0xb5a
    },
          a0_0x44a62e = {
      _0x499415: 0x535,
      _0x2f74ac: 0x1b65,
      _0xe28b98: 0x1d7c,
      _0x5640ed: 0x106b,
      _0x2da20d: 0x1d66,
      _0x1d07ac: 0x1870,
      _0x1ba655: 0xae2,
      _0xfd17d3: 0x1de9,
      _0x56e65e: 0x2587,
      _0x7ce86b: 0x14d2
    },
          a0_0x54e0a0 = {
      _0x2ed438: 0x535,
      _0x41afc1: 0x1c66,
      _0x3764b3: 0x1de9,
      _0x28d125: 0x106b,
      _0x414684: 0x2229,
      _0x56fba0: 0x1870,
      _0x26e7c0: 0x1d7c,
      _0x487bb8: 0x1d55,
      _0x50d4d5: 0x10f6,
      _0x3c9187: 0x11dc,
      _0x2b1b82: 0x2422,
      _0x5c89e1: 0x186b,
      _0x1a6db5: 0x2506,
      _0x181135: 0x1d66,
      _0x1e7ad5: 0x1d55,
      _0x2ce123: 0x6bb,
      _0x1bd0b5: 0x1334,
      _0x80e5c4: 0x17d,
      _0x56cb22: 0x14d2,
      _0x12e5d4: 0x1a5
    },
          a0_0x2ead86 = {
      _0x2a46f0: 0x535,
      _0x1eee16: 0x253d,
      _0x655f2: 0x1edc
    },
          a0_0x3d80b9 = {
      _0x5026c7: 0x19c5,
      _0x49223e: 0x1029,
      _0x5d72c2: 0x14d2,
      _0x31bc57: 0x14d2,
      _0x52dd38: 0x19c5,
      _0x2545de: 0x154c,
      _0x16a2c5: 0x14d2,
      _0x5cf714: 0xb5a,
      _0x29c77c: 0x14d2,
      _0x46c236: 0x1105,
      _0x2def05: 0xb4e,
      _0x4fd933: 0x14d2,
      _0x475e03: 0x19c5,
      _0xe160e4: 0x1c67,
      _0x28b826: 0xb56,
      _0x16c4f1: 0xebf,
      _0x47879d: 0x14d2,
      _0xf165ad: 0x19c5,
      _0x2181d1: 0x14d2
    },
          a0_0x13ad64 = {
      _0x5b0ecd: 0x284,
      _0xeb92e8: 0x1e35,
      _0x4eff51: 0xebb,
      _0x4d5744: 0x1d55,
      _0x73e3d9: 0x1d55,
      _0x2c82be: 0x1d66,
      _0x6881fe: 0x199b
    },
          a0_0x282737 = {
      _0x2a37d6: 0x1e13
    },
          a0_0x241cc5 = {
      _0x280a1c: 0x16c5,
      _0x49369b: 0x17f,
      _0x233e99: 0x1f59
    },
          a0_0x586d74 = {
      _0x2bc8aa: 0x1aab,
      _0x2bb4da: 0x16c5,
      _0x3a7d61: 0x1a07,
      _0x5717ec: 0x1099,
      _0x4868e5: 0x1934,
      _0x12280b: 0x239d,
      _0xdf643: 0x535,
      _0x29c8a8: 0x2537,
      _0x59eb21: 0x504,
      _0x3dafe1: 0x1b83,
      _0x4c3f29: 0x15a4
    },
          a0_0x38ac0b = {
      _0x5c1ed5: 0x504,
      _0x3ca12c: 0x1d66,
      _0x3a3bc7: 0x239d
    },
          a0_0x19c5af = {
      _0x40e6ea: 0x6ba,
      _0x4bf9c8: 0x1aab,
      _0x76083: 0x1c05,
      _0x57fcf8: 0x504,
      _0x3df0b4: 0x15a4,
      _0x1e08ad: 0x1d55,
      _0x4fd621: 0x1fd,
      _0x408fd2: 0x14c7,
      _0x354201: 0x24b7
    },
          a0_0x5b4dc4 = {
      _0x3cb963: 0x185e,
      _0x3cf066: 0x14d2,
      _0x1d7cc0: 0x1029,
      _0x4dfce9: 0x19c5,
      _0x5190b6: 0x14d2,
      _0x165098: 0x1105,
      _0x289e73: 0x2621,
      _0x14d547: 0x19c5,
      _0x55469c: 0x6fc,
      _0x27eb7c: 0x14d2,
      _0x3b75a7: 0x19c5
    },
          a0_0x593f8b = {
      _0x4ac431: 0xc95,
      _0x336b47: 0x2647,
      _0x1c55f2: 0x2054,
      _0x3c1a81: 0x20c1,
      _0x420642: 0x1d28,
      _0x1d9411: 0x1d28,
      _0x59a36f: 0x17d,
      _0x1ae78b: 0x17d,
      _0x225c45: 0x17d
    },
          a0_0x1a4e0c = {
      _0x3eed26: 0x235b,
      _0x47512a: 0x185e,
      _0xee4095: 0x1aab,
      _0x2ac3f8: 0x2405,
      _0xacbe1f: 0x22ba,
      _0x56f62e: 0xda6,
      _0x2b2889: 0xf82,
      _0x462d52: 0x14d2,
      _0x191a84: 0x1029,
      _0x169b41: 0x19c5,
      _0x3f83e2: 0x1808,
      _0x1ac643: 0x1e1d,
      _0x273b88: 0x14d2,
      _0x454e1c: 0x19c5,
      _0x4a657e: 0x17d1,
      _0x563403: 0x1a6a
    },
          a0_0x1d95d9 = {
      _0xad2213: 0x1d7c,
      _0x517a14: 0x167c,
      _0x2679ef: 0x2292,
      _0x24157c: 0x14d2,
      _0x5cb6bf: 0x1da5,
      _0x59d5fc: 0x15d3,
      _0xf32bd2: 0x535,
      _0x29590d: 0x1c66
    },
          a0_0x3acc47 = {
      _0x619e90: 0xa8e,
      _0x3d9a1b: 0x17f,
      _0x2b64af: 0x22ba,
      _0x4f58f0: 0x17f,
      _0x40af26: 0x2405,
      _0x1b0b96: 0xf82,
      _0x2b7bc5: 0x9c7,
      _0x1e7299: 0xf82,
      _0x25a5a7: 0x1d55
    },
          a0_0x52e635 = {
      _0x362223: 0x235b,
      _0x5ac685: 0x185e,
      _0x51460a: 0x2379,
      _0x904efb: 0x9e0,
      _0x20d930: 0xbf1,
      _0x4e777a: 0x14d2,
      _0x4e3742: 0x1f8a,
      _0x327447: 0x19c5,
      _0x59af47: 0x14d2,
      _0x517d79: 0x19c5,
      _0x124f47: 0x5a6,
      _0x252b1c: 0xbe2,
      _0x12b2c3: 0x1029,
      _0x389b79: 0x19c5,
      _0x2bba8d: 0x14d2,
      _0x10a1b8: 0x19c5,
      _0x28e144: 0x9c9,
      _0xcae45f: 0xe92,
      _0x14fc4e: 0x19a7,
      _0x3c0a8e: 0x4bb
    },
          a0_0x20149f = {
      _0x3f2a6e: 0x1edc,
      _0x3a180d: 0x13b4,
      _0x5e52e3: 0x535
    },
          a0_0x1bc0e3 = {
      _0x55e4ae: 0x135e,
      _0x37a036: 0x535,
      _0x34fc1b: 0x1063
    },
          a0_0x5e8b04 = {
      _0x702803: 0x14d2,
      _0x47cead: 0x1a5,
      _0x569c30: 0xbe2
    },
          a0_0xb84afd = {
      _0x306ba8: 0x51e,
      _0x37877a: 0x1128,
      _0x5439e5: 0x1d55,
      _0x34e1ea: 0x22d3,
      _0x1e0f36: 0x1d55,
      _0x7e468f: 0x1987,
      _0x29299e: 0x112d,
      _0x3d23dd: 0x535,
      _0x32c33: 0x196b
    },
          a0_0x222728 = {
      _0x509f6b: 0x51e
    },
          a0_0x98d108 = {
      _0x11da9a: 0xd11,
      _0x3e18c8: 0x535,
      _0x5067f6: 0x133c,
      _0x39dbe4: 0x22b2,
      _0x57507a: 0x1edc,
      _0x38eff4: 0x1d66,
      _0x1ae725: 0x14d2
    },
          a0_0x3df6ec = {
      _0x1cb737: 0x535,
      _0x2852d9: 0x59d
    },
          a0_0xabb095 = {
      _0x45031b: 0x535,
      _0xa0bc67: 0x4b9,
      _0x56b136: 0x18d0,
      _0x533b33: 0x19d2,
      _0x553016: 0x22b2,
      _0x1fdd96: 0x1edc,
      _0x56879b: 0xf86
    },
          a0_0x2a4d4e = {
      _0xbe2180: 0x19d2,
      _0x1fb5d3: 0xe6d
    },
          a0_0xe1a8a7 = {
      _0x2c80d4: 0x1dda,
      _0x2fc05a: 0xe6d
    },
          a0_0x2e5ce7 = {
      _0x42dcd9: 0x185e,
      _0x1c6f48: 0x2405,
      _0xaab26: 0x22ba,
      _0x2bfbd1: 0x25e1,
      _0x1b6427: 0x1161,
      _0x4b712c: 0x22ba,
      _0x3f2059: 0xda6,
      _0x20dd6c: 0xf82,
      _0x264c6e: 0x1d55,
      _0x4c4e07: 0x1161,
      _0x15c796: 0xa04,
      _0xcc8534: 0xa04,
      _0x483600: 0xda6,
      _0x1b2d2b: 0x25e1,
      _0x43ca64: 0x10ae,
      _0x40db46: 0x10ae,
      _0x13f0de: 0x1aab,
      _0xfbb899: 0x25e1,
      _0x17f8c1: 0x13f7,
      _0x184aa0: 0x19c5,
      _0x14847f: 0x1029,
      _0x5a1377: 0x1808,
      _0x1f684f: 0x14d2,
      _0x126529: 0x579,
      _0x53451f: 0x1900,
      _0x5a8fb4: 0x14d2,
      _0xb2f64: 0x19c5,
      _0x204314: 0x1105,
      _0x8cce9e: 0x14d2,
      _0x3d16fe: 0xb41,
      _0x1843a8: 0xfda,
      _0x2eaec4: 0x14d2,
      _0x52c293: 0x19c5,
      _0x3153a8: 0x753
    },
          a0_0x522c85 = {
      _0x3cebe6: 0x279,
      _0x226a9f: 0x535,
      _0x27965b: 0x1c92,
      _0x2ba7d7: 0x24fa,
      _0x527bbf: 0x24fa,
      _0x59e831: 0xa8e,
      _0x4838e6: 0x24fa,
      _0x2d977c: 0x22ba,
      _0x4c9d44: 0x22ba,
      _0x2bde85: 0x17f,
      _0x24bbba: 0x646,
      _0x2fd7da: 0x1b65,
      _0x580562: 0x1c66,
      _0x36014f: 0x1da5,
      _0x40c738: 0x235b,
      _0x49ffd8: 0x1293,
      _0x21c998: 0x24ce,
      _0x5dc8a4: 0x24ce
    },
          a0_0x1d4573 = {
      _0x5822a1: 0x1992
    },
          a0_0x3dcac3 = {
      _0x24fa75: 0x14d2,
      _0x194dcb: 0xa8e,
      _0x439a2d: 0x17f,
      _0x70c90e: 0x22ba,
      _0x5dda62: 0x24fa,
      _0x47219a: 0x22ba,
      _0x1dcfe8: 0x1289,
      _0x1ded3a: 0x18c1,
      _0x3738c6: 0x1f41,
      _0x4d46f4: 0x535,
      _0x2c9c5b: 0x1d66,
      _0x119875: 0x18c1,
      _0x17d3d2: 0xbc8,
      _0x2569f7: 0x1de9,
      _0x289592: 0x15c0,
      _0x46898f: 0x24fa,
      _0x479e46: 0x2405,
      _0xed9994: 0x34c,
      _0x26a546: 0xf82,
      _0x17c35b: 0x1d55,
      _0x15251a: 0x34c,
      _0x2ce06d: 0x34c,
      _0x5d420a: 0x34c,
      _0x163fa4: 0x21e8,
      _0xbf3f1: 0x34c,
      _0x495b5c: 0xcd2,
      _0x47215a: 0x34c,
      _0x1315c8: 0x18c1,
      _0x33406c: 0x662
    },
          a0_0x279bee = {
      _0x3d84cd: 0x25e1,
      _0x49b000: 0xa04,
      _0x588580: 0x59d,
      _0x21e595: 0x14d2,
      _0x182014: 0xf29,
      _0x162372: 0x10ae,
      _0x5cd1ba: 0x1da5,
      _0x2d8ada: 0x24fa,
      _0x155200: 0x18c1,
      _0xd2353a: 0xf4c,
      _0x4ed605: 0x414,
      _0x43d9dc: 0x1d7c,
      _0x3164f6: 0x1027,
      _0x1d3d87: 0x18c1
    },
          a0_0x57de42 = {
      _0x75ac6f: 0x1dda,
      _0x1f5ff9: 0x1aab,
      _0x549163: 0x2405,
      _0x309556: 0x22ba,
      _0x4b9a30: 0xda6,
      _0x15c40b: 0xf82,
      _0x279570: 0x24fa,
      _0x31cb0f: 0x6ba,
      _0xe68577: 0xf82,
      _0x11c3db: 0x3fe,
      _0x5a1f73: 0xa8e,
      _0x52b0b5: 0x535,
      _0x3c68ff: 0x18c1,
      _0x57e96d: 0x34c
    },
          a0_0x5afe8d = {
      _0xfbe5ca: 0x1dda,
      _0x3eabc1: 0x24fa,
      _0x3c882d: 0x1aab,
      _0x44d5fc: 0x2405,
      _0x128ae0: 0x24fa,
      _0x4c9731: 0x22ba,
      _0x1f85e5: 0x24fa,
      _0x8e766b: 0xa8e,
      _0x526677: 0x1d55,
      _0x17c592: 0x3fe,
      _0x1f81a9: 0x24fa,
      _0x4c820f: 0xa8e,
      _0x1cf7e2: 0xcfe,
      _0x448e4b: 0x18c1
    },
          a0_0x5854ef = {
      _0x3b5cd6: 0x24fa,
      _0x14ca05: 0xa8e,
      _0x4f9f43: 0x17f,
      _0x3ea194: 0x24fa,
      _0x18c242: 0x17f,
      _0x4d2c71: 0x1aab,
      _0x176f68: 0xb4a,
      _0x32c5d7: 0x535,
      _0x4b3f7d: 0x1b65,
      _0x4dc677: 0x14d2,
      _0x491eab: 0xfda,
      _0x167ff1: 0x1c66
    },
          a0_0x32c91 = {
      _0x3cbca6: 0x253d,
      _0x4d6b77: 0x25e1,
      _0x34981e: 0x25e1,
      _0x598efd: 0x1d66,
      _0x766d97: 0x59d,
      _0x2824fa: 0xa04,
      _0x2006ad: 0x1d66,
      _0x2cb041: 0x24fa
    },
          a0_0x565cb4 = {
      _0x476191: 0x14d2,
      _0x330de3: 0x19c5,
      _0x8d54d0: 0x1029,
      _0x40ba9f: 0x19c5
    },
          a0_0x108714 = {
      _0x266386: 0x2315,
      _0x51f1bd: 0x1241,
      _0x48739b: 0x535,
      _0x475e7d: 0x1a07,
      _0x4028e8: 0x8a8,
      _0x4ceb46: 0x1c66,
      _0x188395: 0xc18,
      _0x544b9e: 0xdb0,
      _0x52f2b4: 0x19d2,
      _0x572fa2: 0x14d2,
      _0x2364c7: 0x1da5,
      _0x447eec: 0x11e2,
      _0x5ddffb: 0x736
    },
          a0_0x4783b4 = {
      _0x5333d3: 0xc95,
      _0xb2cdf2: 0xb5b,
      _0x34d019: 0x59d,
      _0x211f21: 0xa8e,
      _0x47ab0c: 0x17f,
      _0x2484bb: 0x22ba,
      _0x800108: 0x535
    },
          a0_0x32c89e = {
      _0x32e247: 0x253d,
      _0x1e49dd: 0x1edc,
      _0x29f817: 0x1d66
    },
          a0_0x20f5d0 = {
      _0x21136b: 0x235b,
      _0x21bc60: 0x185e,
      _0x2b194c: 0x14d2,
      _0x51be97: 0x19c5,
      _0x3cbc4d: 0x15eb,
      _0x27afcd: 0x25c1,
      _0x450f16: 0x19c5,
      _0x159b67: 0x1cea
    },
          a0_0x34bfd7 = {
      _0x4cbefa: 0x1d66,
      _0x4d254a: 0x1992,
      _0x378799: 0x1d66,
      _0x38878e: 0x1992,
      _0x53d6b2: 0x24fe
    },
          a0_0x16d33f = {
      _0x41a29d: 0x242c,
      _0x2fbac7: 0x18eb,
      _0x118f79: 0x1a5
    },
          a0_0x4c9e03 = {
      _0x45539: 0x535,
      _0x49a912: 0x52c,
      _0x9bba04: 0x1cd8,
      _0x47e07a: 0x14d2,
      _0x1417df: 0x1a5,
      _0x59cc34: 0xf2f,
      _0x2cf577: 0x1c85,
      _0x861878: 0x1eec,
      _0x1401b2: 0x1d66,
      _0x455ed1: 0x9ba,
      _0x4036a9: 0x1870,
      _0x10913f: 0x4a3,
      _0x134ded: 0x1870,
      _0x906a3c: 0x880
    },
          a0_0x528c14 = {
      _0x32ad5a: 0x1d55,
      _0xa6f128: 0x1d5f,
      _0x31eef3: 0x1d55,
      _0x48ea8b: 0x223b,
      _0x5dd688: 0xa68,
      _0x43a2d0: 0xfe9,
      _0x958047: 0x14d2,
      _0x5051ba: 0x19c5,
      _0x2e996f: 0x1df,
      _0x2e7dd0: 0x223a,
      _0x3afaf4: 0x1558,
      _0x4a8783: 0x1e5f,
      _0x580477: 0x14d2,
      _0x4a1bf6: 0x19c5
    },
          a0_0x5e50a7 = {
      _0x44d02b: 0x1362,
      _0xefd80f: 0x29d,
      _0x23bd5f: 0x29d
    },
          a0_0x36c633 = {
      _0x4e1829: 0x1c01,
      _0x723d43: 0x1d48,
      _0x18dae9: 0x1aa6,
      _0x258062: 0x2530,
      _0x17be0e: 0x1aa6,
      _0x3d8df3: 0x1d48,
      _0x248de3: 0x1da5
    },
          a0_0x1cbc04 = {
      _0x3ed17a: 0x1c01,
      _0x53ef3d: 0x1d48,
      _0x1b46f9: 0x1fe9,
      _0xdf99a1: 0x874,
      _0x5c2e03: 0x1fe9
    },
          a0_0x2d0d0b = {
      _0x17717a: 0x1c01,
      _0x1f1748: 0x1fe9,
      _0x467a3c: 0x35c,
      _0x4569ea: 0x874,
      _0x25dce6: 0x2a2,
      _0x92256d: 0x13b0,
      _0x4026ac: 0x1d48
    },
          a0_0xb501cb = {
      _0xae0f8e: 0x1d48,
      _0x45be20: 0x1d66,
      _0x12bab8: 0x1992,
      _0x21acf8: 0xa94,
      _0x4476c6: 0x2082,
      _0x2df221: 0x1d48,
      _0x4f25ce: 0xffb,
      _0x1fb6a9: 0xf4e,
      _0x4e05a2: 0x1fc8,
      _0x4ad8e4: 0x1c07
    },
          a0_0x6b5d36 = {
      _0x2223aa: 0x1d55,
      _0x1d1750: 0x19c5,
      _0x457190: 0x1df,
      _0xffabd8: 0x223a,
      _0x176cd4: 0x879,
      _0x5afb4f: 0x1cdd,
      _0x26e492: 0x14d2,
      _0x5673ab: 0xc43,
      _0x419cfc: 0x29d,
      _0x74d1ac: 0x6a7
    },
          a0_0x3230f6 = {
      _0x1f90b0: 0x19ee,
      _0x4517e6: 0x2121,
      _0x32230b: 0x198c,
      _0x261ebd: 0x186b,
      _0x1ed4a3: 0x2310,
      _0x41ed24: 0x9d3
    },
          a0_0x4325d3 = {
      _0x5948d5: 0x1869,
      _0x1aef24: 0x29d
    },
          a0_0xcf04b7 = {
      _0x2a49cf: 0x8ce
    },
          a0_0x31856b = {
      _0x13d22e: 0x1c01,
      _0x54c075: 0x1fe9,
      _0x31fb05: 0x35c,
      _0x24e8e4: 0x191a,
      _0x18dd31: 0x13b0
    },
          a0_0x3110ee = {
      _0x190ef7: 0x1d55,
      _0x227c97: 0x95d,
      _0x3e5ca3: 0x114a,
      _0x580a44: 0x19c5,
      _0x29e224: 0x1df,
      _0x2798d6: 0x223a,
      _0x4cea83: 0x14d2,
      _0x565d76: 0x1558,
      _0x463cbf: 0x24bc,
      _0x10e234: 0x1cdd,
      _0x1f0136: 0x19c5
    },
          a0_0x1216e9 = {
      _0x560818: 0x1d48,
      _0x4db663: 0x19ee,
      _0x1eca83: 0x2121,
      _0xe83dfb: 0x2121,
      _0x5914f6: 0x1d66,
      _0x50220b: 0x2310,
      _0x4c8ce8: 0x9d3
    },
          a0_0x30f57f = {
      _0x3ec426: 0x1c01,
      _0x3bf693: 0x1fe9,
      _0x499e86: 0x13b0,
      _0x50116a: 0x1fe9
    },
          a0_0x407e66 = {
      _0xa5e101: 0x1c01,
      _0x3d7105: 0x1fe9,
      _0x3e57d2: 0x874,
      _0x160b24: 0x13b0,
      _0x219a83: 0x1d48
    },
          a0_0x1b9ad8 = {
      _0x4c9110: 0x15e0,
      _0x572902: 0x18c2,
      _0xc23f98: 0x1d66,
      _0x25462a: 0x2297,
      _0x4a731d: 0x16c5,
      _0x388b22: 0x248,
      _0x3058d5: 0x1a6d,
      _0x228e58: 0x1d55,
      _0x2e0f68: 0x2521,
      _0x50bcda: 0xf5c,
      _0x1707c6: 0x248,
      _0x1174be: 0x10e6,
      _0x139bbf: 0x21c7,
      _0x5c7365: 0x1fc8,
      _0x2455ec: 0x1fe9,
      _0x59f713: 0x2606,
      _0x1440b7: 0xf82,
      _0x2519b7: 0xeae,
      _0xf4d56e: 0x12e9,
      _0x2a179b: 0x1f30,
      _0x10e286: 0x1e3d,
      _0x26c9d6: 0x1383,
      _0xb14ae9: 0x54d,
      _0x586224: 0x1383,
      _0x3ef82: 0x19ee,
      _0x3e5cb9: 0x2121,
      _0x11458d: 0x2121,
      _0x4b3b6b: 0xf4d,
      _0x5d4e16: 0x2310,
      _0x50724c: 0x9d3
    },
          a0_0xc8a343 = {
      _0x484ef1: 0x1d55,
      _0x57763f: 0x2551,
      _0xb92d41: 0x20b4,
      _0x425d83: 0x223b,
      _0x55b58b: 0x2000,
      _0x11f954: 0x14d2,
      _0x42c1a4: 0x19c5,
      _0x5ab904: 0x14d2,
      _0xc0f579: 0x223a,
      _0x369a96: 0x1558,
      _0x3635a4: 0x24bc,
      _0x2d850e: 0x879,
      _0x284874: 0xc43,
      _0x3debe0: 0x19c5,
      _0x92259: 0x753
    },
          a0_0x38d2e3 = {
      _0x1c03f5: 0x8ce
    },
          a0_0xe2149f = {
      _0x415926: 0x9ed,
      _0x4b37c6: 0x1c01,
      _0x5602b8: 0x1d48,
      _0x2ce390: 0x1c01,
      _0x11dfdd: 0x10e6,
      _0x382f9a: 0x927,
      _0x2c8889: 0x2530,
      _0x43c1ca: 0x1f59,
      _0x1eb86d: 0x140a,
      _0x47f58d: 0x11c0,
      _0x29460b: 0x15e0,
      _0x2aaef8: 0x1d66,
      _0x5d7bb: 0x206a,
      _0x162fec: 0x9ed,
      _0x2eec04: 0x2310,
      _0x3a5000: 0x2168,
      _0x201127: 0x1da5,
      _0x34d464: 0x582
    },
          a0_0x178090 = {
      _0x18f3e1: 0x1c01,
      _0x1dc40f: 0x1fe9,
      _0x5e1f57: 0x790,
      _0x2c60eb: 0x1c01,
      _0x90f2a0: 0x1fe9
    },
          a0_0x2d8d84 = {
      _0x3decfa: 0x1fe9,
      _0x2cb134: 0x35c,
      _0x521576: 0x191a,
      _0x2836eb: 0x13b0,
      _0x4118ec: 0x2a2
    },
          a0_0x1ba2a9 = {
      _0x5a66ca: 0xa9d,
      _0x2b58fb: 0x16c5,
      _0x3f1519: 0x1d66,
      _0x450e44: 0x2072,
      _0x20e2cb: 0x248,
      _0x4bed0c: 0x1fe9,
      _0x3c24ec: 0x1199,
      _0x5a97fd: 0x17f,
      _0x457121: 0x248
    },
          a0_0x155f6 = {
      _0x523644: 0x1869
    },
          a0_0x4983a6 = {
      _0x5db1c0: 0x7bd
    },
          a0_0x1b984b = {
      _0x41262e: 0x185e,
      _0x1881b8: 0x1d55,
      _0x50dbb3: 0x1d55,
      _0x3e3962: 0x19c5,
      _0x119914: 0x223a,
      _0x52ec4c: 0x19c5,
      _0x2335c2: 0x1558,
      _0xa0137: 0xd17,
      _0x311755: 0x24bc,
      _0x59c10f: 0x1cdd,
      _0x494743: 0x29d,
      _0x259d27: 0x14d2
    },
          a0_0x25a7b7 = {
      _0x35773f: 0xe1b,
      _0x5616e9: 0x19e6,
      _0x3da125: 0x1471
    },
          a0_0x41613d = {
      _0x5c9d5b: 0x1d48,
      _0x518880: 0x1c01,
      _0x221c5f: 0x874,
      _0x5cbeca: 0x1fe9,
      _0x1b91bf: 0x1fe9
    },
          a0_0x14f7b1 = {
      _0xe5bfca: 0x2530,
      _0x171696: 0x1471,
      _0x65201a: 0x1b37,
      _0x1f17ba: 0x1a67,
      _0x7cdfb8: 0x535,
      _0x573047: 0x1b37,
      _0x10063b: 0x358,
      _0x5543e1: 0x213e,
      _0x374c30: 0x1b37,
      _0x952e20: 0x1a67,
      _0x290e1e: 0x535,
      _0x3ab8b4: 0x91b
    },
          a0_0x437f56 = {
      _0x2a5727: 0x1869
    },
          a0_0x58ce16 = {
      _0x4b507b: 0x1362
    },
          a0_0x49a0ce = {
      _0x2f64bd: 0x1d55,
      _0x4e5570: 0x16e,
      _0x25eb5c: 0x223b,
      _0x5a860e: 0x2000,
      _0x565027: 0x1df,
      _0x2a77b5: 0x14d2,
      _0x39a46a: 0x19c5,
      _0x3a6934: 0x1558,
      _0x3f605a: 0x879,
      _0x25ae79: 0x14d2,
      _0x383d50: 0xc43,
      _0x45230d: 0x29d,
      _0x2286b2: 0x753
    },
          a0_0x48f62b = {
      _0x42b1f5: 0x1869,
      _0x19e02d: 0x29d,
      _0x1f6de9: 0x29d,
      _0x1976b6: 0x29d
    },
          a0_0x58ab5c = {
      _0x43389f: 0x8ce
    },
          a0_0x5798cd = {
      _0x19ab4e: 0x9ed,
      _0x32d4d1: 0x1c01,
      _0x5c2b73: 0x1d48,
      _0x581159: 0x10e6,
      _0xe5fb9a: 0x927,
      _0x53c2df: 0x535,
      _0xec5818: 0x18f6,
      _0x4b3b18: 0x2530,
      _0x1d5b88: 0x1aa6,
      _0x21e0c5: 0x2530,
      _0x5ebe1e: 0x1f59,
      _0x458c3d: 0x1d48,
      _0x2d5a02: 0x9ed,
      _0x1c00a5: 0x582
    },
          a0_0x54938a = {
      _0x4ac0cf: 0x1c01,
      _0x393bae: 0x1c01,
      _0x594b45: 0x1fe9,
      _0x5b98a4: 0x790,
      _0x258dd2: 0x874,
      _0x2bcbca: 0x190,
      _0x6188f: 0x1fe9
    },
          a0_0x358a44 = {
      _0xc09416: 0xa9d,
      _0x43d08e: 0x248,
      _0x520c91: 0x1fe9,
      _0x37e370: 0xd79,
      _0x36f9fa: 0x1fe9,
      _0xe1f0a1: 0x1199,
      _0x3880be: 0x1fe9,
      _0x208ed6: 0x17f
    },
          a0_0x4ca019 = {
      _0xa449d6: 0x1d55,
      _0x433c22: 0x1d55,
      _0x11af18: 0x1d55,
      _0x3defda: 0x1d55,
      _0x1c6fd4: 0x1d55,
      _0x2b2e2b: 0x1d55,
      _0x42ab5d: 0x1d55,
      _0x497249: 0x1d55,
      _0x3a018a: 0x1d55,
      _0x55cb07: 0x1d55,
      _0x40edda: 0x1d55,
      _0x492263: 0x1d55,
      _0x12f25a: 0x1d55,
      _0x36c205: 0x1d55,
      _0x57e3c0: 0x1d55,
      _0xda8f5: 0x1d55,
      _0x5ab2e1: 0x1d55,
      _0x1abf9b: 0x1d55,
      _0x483e84: 0x1d55,
      _0x375350: 0x1d55,
      _0xd8c816: 0x1d55,
      _0xbc02bd: 0x1d55,
      _0x4c0081: 0x1d55,
      _0x378452: 0x14d2,
      _0x253433: 0x229,
      _0x1e63e3: 0x1c0b,
      _0x410989: 0x2072
    },
          a0_0x519093 = {
      _0x196378: 0x14d2,
      _0x4cb307: 0x1da5
    },
          a0_0x5e0b9d = {
      _0x56822a: 0x4ee,
      _0x5113f6: 0x7ac,
      _0x27093b: 0x1fd0,
      _0x520802: 0xdfe,
      _0x791d74: 0xdfe,
      _0x3c5fa9: 0xdfe
    },
          a0_0x1c727c = {
      _0x8809a6: 0x2a2
    },
          a0_0x20d1dc = {
      _0x1acbb5: 0xba7,
      _0x52faba: 0x14d2,
      _0x1e559f: 0x171d
    },
          a0_0x37b324 = {
      _0x1d97a5: 0x106d,
      _0x200e2e: 0x762,
      _0x5d24b4: 0x1d64,
      _0x448278: 0x20b0,
      _0x2e5aba: 0x1397,
      _0x47a224: 0x1e5f,
      _0x5d69ed: 0x19c5
    },
          a0_0x2a3801 = {
      _0x1fd99b: 0x1d66,
      _0x5dc184: 0x1f87
    },
          a0_0x54bafc = {
      _0x3c7052: 0xd02,
      _0x29415e: 0x1ab9,
      _0x309e33: 0x1511,
      _0x368e03: 0x16e4,
      _0x147376: 0x1f34,
      _0x3edb1e: 0x1e7b,
      _0x508741: 0x2405,
      _0x204a19: 0x22ba,
      _0x1eb93e: 0xda6,
      _0xd89e37: 0x1d55,
      _0x5e9b0f: 0x22ba,
      _0x3cebc9: 0xda6,
      _0x1b443c: 0x1d55,
      _0x22836e: 0x1029,
      _0x11bbb0: 0x14d2,
      _0x390b8e: 0x19c5,
      _0x2ff9ea: 0x1808,
      _0x284e07: 0x1105
    },
          a0_0x44513d = {
      _0x2ab4e4: 0x535,
      _0xafc426: 0x253d,
      _0x1696c0: 0x535,
      _0x126790: 0xf86,
      _0x4b4246: 0xa81,
      _0x44765e: 0xf86
    },
          a0_0x4d0c68 = {
      _0x45e64c: 0x235b,
      _0x3e5105: 0x185e,
      _0x25cd4d: 0x4da,
      _0x532e4e: 0x21f,
      _0x54301d: 0x5bf,
      _0x2b8275: 0x14d2,
      _0x2769db: 0xf82,
      _0x28c35c: 0x14d2,
      _0x57dc51: 0x19c5,
      _0x3e1dba: 0x19c5,
      _0x21d81c: 0x1808,
      _0x40610f: 0x14d2,
      _0x4fdb85: 0x19c5,
      _0x30480a: 0x14d2,
      _0xa4b48c: 0x20dc,
      _0x407168: 0x2ae,
      _0x21dfcb: 0x11dc,
      _0x4f0fc6: 0x2405,
      _0xb31010: 0x1d2,
      _0x28cc14: 0x1808,
      _0x2438ae: 0x14d2,
      _0x1fcac9: 0x1105,
      _0x1d6f0c: 0x14d2,
      _0x792d52: 0x14d2,
      _0x3e085e: 0x19c5,
      _0x1b2f77: 0x2580,
      _0x14e517: 0x14d2
    },
          a0_0x5594f3 = {
      _0x527406: 0x55b,
      _0x4157e2: 0x18c1,
      _0x39e6e5: 0x173f,
      _0xb267aa: 0x1d66,
      _0x1bd824: 0x1d66,
      _0xac07e5: 0xf2f,
      _0x32b083: 0x198f,
      _0x26747b: 0x121a
    },
          a0_0x3e2a53 = {
      _0x3a3a77: 0x535,
      _0x3cf374: 0x1a50,
      _0x472f1c: 0x235b,
      _0x3f96cc: 0x1f30,
      _0x191edb: 0xf82,
      _0x4efb7d: 0x13b4,
      _0x5dbcf4: 0x2292,
      _0x15fca1: 0x263f,
      _0x43a1e4: 0x2530,
      _0x137ce8: 0x1b37,
      _0x479afc: 0x2442,
      _0x3d6620: 0x55b,
      _0x31df0f: 0x16c5,
      _0x4ad7b6: 0x2140,
      _0x1468bb: 0x2442,
      _0x18c9a7: 0x17b5,
      _0x3f384f: 0x1870,
      _0x48f04b: 0x18c1,
      _0x4a1dc7: 0x1366,
      _0x4d5395: 0x1d66,
      _0x300ed7: 0x6d9,
      _0x5d4c7c: 0x4fc,
      _0x306147: 0x2cd,
      _0x267401: 0x1de9,
      _0x1638f0: 0x1c0d,
      _0x4b4096: 0x1870
    },
          a0_0xaff558 = {
      _0x3a5632: 0x1edc,
      _0x294720: 0x1e1c
    },
          a0_0x4c0ecb = {
      _0x581153: 0x1edc,
      _0x1b6965: 0x1e1c
    },
          a0_0x55b6e2 = {
      _0x5af97a: 0x25df,
      _0x1715a3: 0x2422,
      _0x15c48e: 0x1f30,
      _0xdbe10e: 0x1f30,
      _0x21aea7: 0x2422,
      _0x3f5d73: 0x535,
      _0x479678: 0x1289,
      _0x579714: 0x535,
      _0x587fe0: 0x1d66,
      _0x4b424a: 0x2072,
      _0x5a7343: 0x1ce5,
      _0x370f7c: 0x8a5,
      _0x53d05f: 0x10f6,
      _0x26646c: 0x1d66,
      _0x53b82e: 0x1870,
      _0x48fdf3: 0x535,
      _0xbf5ceb: 0x880,
      _0x7d4094: 0x1c66,
      _0x5a5cfa: 0x2292,
      _0xf55d48: 0x535,
      _0x47ff2a: 0x52c,
      _0x43350a: 0x13b0,
      _0x2ba4ea: 0x1b65
    },
          a0_0x2197f1 = {
      _0x571585: 0x11dc,
      _0x8cc1: 0x535,
      _0x110168: 0x535,
      _0x49be9b: 0x1985,
      _0x19f772: 0x535,
      _0x3f1e90: 0x1c66,
      _0xc2e04b: 0x535,
      _0x4f4f0c: 0x1de9,
      _0x1cc994: 0x535,
      _0x3fa39b: 0x880,
      _0x413b19: 0x1d66,
      _0x21122c: 0x1870,
      _0x361761: 0x14d2,
      _0x189c57: 0x18b6
    },
          a0_0x4fdbf5 = {
      _0x3f47b7: 0x535,
      _0xf6590: 0x253d,
      _0x3407d4: 0x1d66,
      _0x518c09: 0x59d
    },
          a0_0x32a9cf = {
      _0x59f591: 0xf86,
      _0x21e589: 0xf0a
    },
          a0_0x1770c4 = {
      _0x56b0c8: 0xf2f,
      _0x468332: 0xf9d,
      _0x2c44d5: 0x121a
    },
          a0_0x1663a3 = {
      _0x1dac5c: 0x253d,
      _0x45dcc8: 0x1d66
    },
          a0_0x351062 = {
      _0x336684: 0x253d,
      _0x5d066d: 0x47d
    },
          a0_0xe244d0 = {
      _0x80687b: 0x1f6,
      _0x34bd82: 0x2379
    },
          a0_0x2a4178 = {
      _0x14f623: 0x14d2,
      _0x170c97: 0x1e5f
    },
          a0_0x5efe9a = {
      _0x5eb3f6: 0x1d66,
      _0x3db6a5: 0x106d,
      _0x2329eb: 0x762,
      _0x16c70e: 0x1344,
      _0x183d35: 0x210,
      _0x5533a6: 0x1d66
    },
          a0_0x44190d = {
      _0x35a502: 0x149c,
      _0x844cea: 0x1d55,
      _0x2a078e: 0x372,
      _0x966061: 0x20a8,
      _0x16ffab: 0xa8d,
      _0x3c2620: 0x18ad,
      _0x5cf6b2: 0x1d55,
      _0x536166: 0x1e5f
    },
          a0_0x3eca5d = {
      _0x1dfa61: 0x185e,
      _0x5490b1: 0x306,
      _0x3a588f: 0xe55,
      _0x3cad9c: 0x679,
      _0x8d3e19: 0xb02,
      _0x124416: 0xc00,
      _0x22288a: 0xe18,
      _0x2036f7: 0x16e6,
      _0x113473: 0x7b3,
      _0x2cb54f: 0x1730,
      _0x1046d3: 0x657,
      _0x5548d7: 0x276,
      _0x329328: 0x111d,
      _0x578f1a: 0x1aab,
      _0x54ead0: 0x22ba,
      _0x2b81bd: 0xf82,
      _0x177f00: 0x14d2,
      _0x718d66: 0x1105,
      _0x489723: 0x1029,
      _0x1cf036: 0x1808,
      _0x33c038: 0x14d2,
      _0x3f8a1c: 0x19c5
    },
          a0_0x119abc = {
      _0x2583b5: 0x535,
      _0x41a754: 0x1985,
      _0x488f01: 0x21e4,
      _0x36e0e0: 0x535,
      _0x2e1df4: 0x140a,
      _0x5eb995: 0x2479,
      _0x4085e5: 0x15e0,
      _0x1e43b7: 0x815,
      _0x1ab9da: 0x535,
      _0x57cb3a: 0x1063
    },
          a0_0x46a529 = {
      _0x348aea: 0x1d66,
      _0xf6829d: 0x15e0,
      _0x1f1d46: 0x1d66,
      _0x585b7e: 0x15e0,
      _0x501de2: 0x1151,
      _0x3fa62a: 0x1d66,
      _0x367467: 0xf2f,
      _0x5b5268: 0x144c,
      _0x22ab20: 0x5d6,
      _0x225381: 0x1f0,
      _0x2f3a74: 0x1870,
      _0x2c2c2e: 0x1f87,
      _0x4160e9: 0x535
    },
          a0_0x50e1d2 = {
      _0x48d7ae: 0x1e35,
      _0x2c48b9: 0x157f,
      _0x4acff9: 0x1d35,
      _0xbf2619: 0x17fa,
      _0x25f813: 0x1d66,
      _0x422a5d: 0x1d66,
      _0x552c11: 0x1cfb,
      _0x4735df: 0x511
    },
          a0_0x19a0ba = {
      _0x3ce4b5: 0x1d66,
      _0x408789: 0x948,
      _0x22bdfb: 0x186d,
      _0x49a798: 0x1250,
      _0x1a0f84: 0x1d66,
      _0x523181: 0x1e35,
      _0x2da221: 0x1032,
      _0x4ebc63: 0x535
    },
          a0_0x20b923 = {
      _0x32725c: 0x535,
      _0x4d5162: 0x1d66,
      _0x47f8d3: 0x1d66,
      _0x238651: 0x59d
    },
          a0_0x2744d6 = {
      _0xeb4e72: 0xe6d
    },
          a0_0x2c7ce0 = {
      _0x48ea40: 0x185e
    },
          a0_0x2c4bc2 = {
      _0x3dcf2d: 0x35f,
      _0x17bf06: 0x1cd0,
      _0x325498: 0x927
    },
          a0_0x32851b = {
      _0x4babdf: 0x19c5,
      _0x27e6b0: 0x206e
    },
          a0_0x3d4ed = {
      _0x4a2842: 0x535,
      _0x29a1e4: 0x23e3,
      _0x42ea00: 0xb1f,
      _0xd69362: 0x1db3
    },
          a0_0x43996d = {
      _0xb5c375: 0xda5,
      _0x2375e4: 0x1441,
      _0x30c17c: 0x408,
      _0x4709d6: 0x15a0,
      _0x19c001: 0x368,
      _0x50a826: 0x8eb,
      _0x45e017: 0xd45,
      _0x3009e3: 0x233e,
      _0x20d092: 0x1eb9,
      _0x32f8e8: 0x16c6,
      _0x476c8c: 0xd53,
      _0x1cf0b2: 0xd2e,
      _0x4dd8a0: 0x13b3,
      _0xbdbeee: 0x2345,
      _0x40360f: 0x10f7,
      _0xd5fe96: 0x249a,
      _0x59b593: 0x5ab,
      _0x2d23ec: 0x10ce,
      _0x35eae5: 0x1222,
      _0x2c81bb: 0x1788,
      _0x188150: 0x1e7a,
      _0xdcb47d: 0x12dc,
      _0x994b35: 0x1226,
      _0x2e4052: 0x6ae,
      _0x830990: 0x22be,
      _0x214e8f: 0x4ac,
      _0x20730a: 0x1e3f,
      _0x1300f7: 0x20a0,
      _0x5f33d1: 0xf7c,
      _0x188880: 0x161b,
      _0x47eb0d: 0x17c0,
      _0x5cfc53: 0xb86,
      _0xde38f5: 0x25e5,
      _0x522fb4: 0x2423,
      _0x553ed5: 0x6f2,
      _0x4cdac9: 0x897,
      _0x49230e: 0x5ad,
      _0x241c72: 0x20e7,
      _0x43f528: 0x1ed7,
      _0x6e6e4d: 0x237a,
      _0x51ec1c: 0x182e,
      _0x34f1fa: 0x246,
      _0x14e074: 0x22aa,
      _0x5b8744: 0x18c5,
      _0x6475d0: 0x72b,
      _0x25e24d: 0x7ad,
      _0x769e85: 0x15f6,
      _0x27b61d: 0xab4,
      _0x4ae745: 0x1b16,
      _0x1db31e: 0xf5f,
      _0x4187a9: 0x1c7e,
      _0x3722bf: 0x17ec,
      _0x21dead: 0x1d70,
      _0x6dd4ef: 0x1cb1,
      _0x2b0da6: 0x817,
      _0x203e07: 0x1a96,
      _0x56dd36: 0x1b38,
      _0x2abf6a: 0x19c5,
      _0x4e995b: 0x1e5f
    },
          a0_0x35bf9c = {
      _0x1a0f34: 0x235b,
      _0x3be488: 0x185e,
      _0x594f09: 0xc55,
      _0x36fb90: 0xe6d,
      _0x1e85ad: 0x19c5,
      _0x130032: 0x1029,
      _0x5ac691: 0x14d2,
      _0xefda44: 0x19c5,
      _0x2aa273: 0x14d2,
      _0x15713c: 0x19c5,
      _0x345d7a: 0xfb0,
      _0x30fa4c: 0x121d,
      _0x35f7ac: 0x206e
    },
          a0_0x1aed6b = {
      _0x34619c: 0x1e78,
      _0x4b44c7: 0x532,
      _0x3c502b: 0x11dc,
      _0x5c1db3: 0x948,
      _0x370d48: 0x1d66,
      _0x52d463: 0x1e35,
      _0x38080c: 0x1250,
      _0x35ec40: 0x217,
      _0x470969: 0x186d,
      _0x3e095a: 0x1e35,
      _0xf2509a: 0x1d66,
      _0x18b60b: 0x186d
    },
          a0_0x1b9b48 = {
      _0x27c556: 0x19e6,
      _0x34c440: 0x14d2,
      _0x190ee4: 0x1da5,
      _0x44cbb1: 0x23b2,
      _0x11afe5: 0x19e6
    },
          a0_0x4941be = {
      _0xc6aa8e: 0x535,
      _0x3ca7ce: 0x253d,
      _0x1452e8: 0xf86
    },
          a0_0x1c3127 = {
      _0x1ffb39: 0x2405,
      _0x3e5d55: 0x1f30,
      _0x23a7ab: 0x1f30
    },
          a0_0x31785c = {
      _0x12645e: 0x235b,
      _0x9d2411: 0x185e,
      _0x2ded0c: 0x1aab,
      _0x2215e6: 0x1536,
      _0x55595c: 0x1591,
      _0x51ae7f: 0x1aab,
      _0x336e37: 0x2405,
      _0x5a8abe: 0x22ba,
      _0x348f33: 0xda6,
      _0x3fab71: 0xf82,
      _0x1ed47d: 0x1d55,
      _0x27029d: 0x1aab,
      _0x126f9b: 0x22ba,
      _0x12f2d0: 0xda6,
      _0x2683fc: 0x1d55,
      _0x8bbed2: 0xf82,
      _0x4e7a65: 0x1d55,
      _0x1c90d0: 0x1aab,
      _0x63951c: 0x14d2,
      _0x2e3060: 0x19c5,
      _0x61b073: 0x1029,
      _0x4d23b7: 0x1808
    },
          a0_0x1f9242 = {
      _0x5a52f9: 0x535,
      _0x3ed518: 0x253d,
      _0x4ebc31: 0x1d66,
      _0xa6b80f: 0x59d,
      _0x5ea991: 0x59d,
      _0x3964be: 0x1d66,
      _0x1fc8b4: 0x1d66,
      _0x24b143: 0x1d66,
      _0x21e7ce: 0x59d
    },
          a0_0x20be8b = {
      _0x202b5e: 0xb66,
      _0x25e0e6: 0x14d2,
      _0x7faf6e: 0x19c5,
      _0x260d96: 0x19c5,
      _0x6ab8e3: 0x2036,
      _0x2af32d: 0x19c5,
      _0x38db6b: 0x14d2,
      _0xe2a0: 0x1e5f
    },
          a0_0x3eca10 = {
      _0x59762c: 0xe6d
    },
          a0_0x59469c = {
      _0x41ed05: 0x170d,
      _0x33b20d: 0x14d2,
      _0x6c8d8a: 0x14d2
    },
          a0_0x2b9889 = {
      _0x908c6: 0x1edc,
      _0x872adb: 0x535,
      _0x229ea1: 0xabf,
      _0x8ef5f5: 0x2385
    },
          a0_0x48eee1 = {
      _0x5bf5ca: 0x17f8
    },
          a0_0x35a4a3 = {
      _0x51e29b: 0x1d55,
      _0x8e8d37: 0x23f0,
      _0x54b19d: 0x1899,
      _0x58aa37: 0xa8b,
      _0x2fce4d: 0x220d,
      _0x58d700: 0x1685,
      _0x4e7409: 0x1a36,
      _0x56881e: 0x78c,
      _0x307ddc: 0xda2,
      _0x5a7d72: 0x1d03,
      _0x522b4c: 0x25e,
      _0x416363: 0x181e,
      _0x5d42f8: 0x142e,
      _0x257620: 0x2a9,
      _0x3ba563: 0x206d,
      _0x212f0a: 0x640,
      _0x6bf245: 0xfdb,
      _0x2a8624: 0x2595,
      _0x730548: 0xc21,
      _0x39ac4a: 0xe78,
      _0x235f70: 0x1f82,
      _0x1ba830: 0x25b1,
      _0x11a944: 0x1188,
      _0x55cd19: 0x1bae,
      _0x5de7b6: 0x1141,
      _0x549b87: 0x282,
      _0x1cc253: 0x8d3,
      _0x31aa7a: 0xad3,
      _0x4f9f48: 0x12a7,
      _0x514688: 0xf09,
      _0x794c37: 0x18b2,
      _0x330548: 0x1ccf,
      _0x2a630f: 0x107b,
      _0x2442db: 0x4b0,
      _0x4314f2: 0x1b73,
      _0x3c1769: 0x16d5,
      _0x161e49: 0xc8e,
      _0x429fed: 0x5a8,
      _0x38f1a4: 0x110b,
      _0x44db72: 0x102c,
      _0x5d189c: 0x261d,
      _0xe750ef: 0x1908,
      _0x37d756: 0x626,
      _0xc78972: 0xb10,
      _0x3e990e: 0x1977,
      _0x5bbdce: 0x1fe3,
      _0x505a7b: 0x19f8,
      _0x496c0b: 0x1c37,
      _0x3c01fa: 0x23da,
      _0x5e042f: 0xb5e,
      _0x6cba7e: 0x53a,
      _0x4e8b26: 0x388,
      _0x5dd314: 0x758,
      _0x2890f4: 0x2011,
      _0x26c3a0: 0x1be5,
      _0x36e6c1: 0x1985
    },
          a0_0x528ad9 = {
      _0x201ba5: 0xe6d
    },
          a0_0xca8572 = {
      _0x1887e0: 0xa42,
      _0x255891: 0x2503,
      _0x3e7acd: 0x535,
      _0x5c0831: 0x14d2
    },
          a0_0x3f4e46 = {
      _0x4a10ad: 0x535,
      _0x4ef4a0: 0x592,
      _0x1ef9f7: 0xffb,
      _0x489a8d: 0x1a50
    },
          a0_0x5807a1 = {
      _0x393c98: 0x185e,
      _0x3c0a31: 0x2484,
      _0x3c3685: 0x11b3,
      _0x227dc7: 0x4f1,
      _0x10ea23: 0x2146,
      _0x37cae7: 0x1b0d,
      _0x5e77cf: 0x1b5f,
      _0x2a3304: 0x1058,
      _0x3d6577: 0x1aab,
      _0xc369b0: 0x2405,
      _0x4ce0f5: 0x22ba,
      _0x3d272d: 0x1d55,
      _0x20224b: 0xda6,
      _0x3d8da7: 0xf82,
      _0x3b4767: 0x19c5,
      _0x494fcb: 0x14d2,
      _0x10a7bb: 0x1029,
      _0x2f6f52: 0x14d2,
      _0x4236fb: 0x1808,
      _0x153c29: 0x14d2,
      _0x41e4e6: 0x19c5,
      _0x2e702b: 0x121d
    },
          a0_0x3cd3d1 = {
      _0x42dd58: 0x535,
      _0x21bf4b: 0x1985,
      _0xa18ad4: 0x1d66,
      _0x5a6b67: 0x15e0,
      _0x2bd968: 0x140a,
      _0x39a1bd: 0x1cb1,
      _0x124895: 0x815
    },
          a0_0x1f1a45 = {
      _0x32040d: 0x157f,
      _0x4a5928: 0x1d66,
      _0x12d0e7: 0x647,
      _0x119058: 0x1d66,
      _0x4c760a: 0x1e35,
      _0x275eea: 0x208a,
      _0x5d308c: 0x1d66,
      _0x3efa92: 0x1d35,
      _0x1b6b33: 0x1cfb,
      _0x4644ad: 0x511
    },
          a0_0xaf4cf = {
      _0x467c58: 0x535,
      _0x8dba0e: 0x1d66
    },
          a0_0x3a4194 = {
      _0x54b743: 0xfa6,
      _0x5b3a9b: 0x14d2,
      _0x254b54: 0x1da5,
      _0x3fa8b5: 0x1463,
      _0x4fac7b: 0x1ea6,
      _0x665fc2: 0x131a
    },
          a0_0x45d9df = {
      _0xf99b69: 0x202b,
      _0x4ef010: 0x1310,
      _0x49beb0: 0x1641,
      _0x440b0c: 0xfe6,
      _0x5b7704: 0x2453,
      _0x1fc031: 0x22bb,
      _0x160c95: 0x2405,
      _0x581b43: 0x22ba,
      _0xef288c: 0xda6,
      _0x38a52e: 0x2405,
      _0x30e1ea: 0xf82,
      _0x1c426d: 0x19c5,
      _0x3c84fb: 0x14d2,
      _0x59ee14: 0x19c5,
      _0x230798: 0x19c5,
      _0x1e0842: 0x1105
    },
          a0_0x4c897f = {
      _0x2e4a04: 0x253d,
      _0x4373e2: 0x59d
    },
          a0_0x58dc74 = {
      _0x467ee3: 0x1518,
      _0x1cd45b: 0x1a98,
      _0x3b2e05: 0x1914,
      _0xb3376b: 0x1b7e,
      _0x1112ec: 0x260c,
      _0x451d40: 0x177f,
      _0x1258ff: 0x2405,
      _0x8551b8: 0xda6,
      _0x3e5870: 0xf82,
      _0x5979db: 0x1d55,
      _0x4b3f91: 0x14d2,
      _0x3090b6: 0x19c5,
      _0x34d556: 0x1029,
      _0x14b4dd: 0x1105
    },
          a0_0x1f69a9 = {
      _0xd94f75: 0x535,
      _0x5c7545: 0xfa6,
      _0x1df097: 0x4b9,
      _0x26e865: 0x1d66,
      _0x462377: 0x4b9,
      _0x216280: 0x58a,
      _0xe56dd6: 0x535,
      _0x1cae17: 0x85d,
      _0x4d8e44: 0x59d,
      _0x449196: 0x3be,
      _0x1e2435: 0x1ea6,
      _0x220b55: 0x14d2,
      _0x410138: 0x1d55
    },
          a0_0x2a6761 = {
      _0x3956b1: 0x253d,
      _0x30a35b: 0xf86,
      _0x474301: 0x535,
      _0x1e79fb: 0xf86,
      _0x2e0746: 0x1be2
    },
          a0_0x1fe84d = {
      _0x41d67d: 0x1d66,
      _0x117141: 0x106d,
      _0x49a265: 0x762,
      _0xb9bb1d: 0x106d,
      _0x3371d4: 0x1d66,
      _0x69dce6: 0x1f87,
      _0x2f73bd: 0x6ba,
      _0x100cdf: 0x16c5,
      _0x3610cf: 0x1d55,
      _0x204dbf: 0xcc8,
      _0x178087: 0x1d4e
    },
          a0_0x4fda7c = {
      _0x3e8819: 0x762,
      _0x1f810b: 0x1d66,
      _0x2d7a27: 0x59a,
      _0x519ce3: 0x1faa,
      _0x363983: 0x16c5,
      _0x47ef38: 0x17f
    },
          a0_0x459015 = {
      _0x25b266: 0x235b,
      _0x2312b6: 0x2405,
      _0x30cd7a: 0xf82,
      _0x46b8f2: 0x1aab,
      _0x2bfb44: 0xda6,
      _0x28c9a4: 0x1d55,
      _0x211079: 0x19c5,
      _0x5adac8: 0x14d2,
      _0x22e53e: 0x1808,
      _0x47b96b: 0x1105
    },
          a0_0x34fa5d = {
      _0x1ceff6: 0x535,
      _0x382ca3: 0xfa6,
      _0x39473b: 0x1ea6,
      _0x58b9ca: 0x1d66,
      _0x1a6035: 0x1282,
      _0x2255ed: 0x1da5,
      _0x3244d8: 0x131a
    },
          a0_0x4427d7 = {
      _0xe684af: 0x235b,
      _0x58021e: 0x1aab,
      _0x316e44: 0x2405,
      _0x1bdd01: 0xf82,
      _0x216a53: 0x1d55,
      _0x2fc7b7: 0xda6,
      _0x1147eb: 0xf82,
      _0x14a38c: 0x14d2,
      _0x28e87a: 0x1029,
      _0x21f5ba: 0x19c5,
      _0x448f6: 0x1808,
      _0x3ce68e: 0x1057,
      _0x3a7f35: 0x19c5,
      _0xb2ce2b: 0x14d2,
      _0x47ea4e: 0x8cf,
      _0x2be1bb: 0xb5a,
      _0xbb502: 0x19c5,
      _0x278a36: 0x4fa,
      _0x5c0093: 0x19c5,
      _0xfbf468: 0x1c3f,
      _0x58fd0f: 0x14d2,
      _0x48b453: 0x19c5,
      _0x513dba: 0xbfd,
      _0x1fb9b5: 0x19c5,
      _0x33f4cc: 0x23ad,
      _0x3df362: 0x1bb2
    },
          a0_0x2bab4f = {
      _0x940dfe: 0x1da5,
      _0x2b0176: 0x20f2
    },
          a0_0x5c1a5d = {
      _0x335458: 0x413
    },
          a0_0x4d0b03 = {
      _0x31acde: 0x2488,
      _0x5e3290: 0xf97,
      _0x413bb9: 0x1a3,
      _0x2b3929: 0x23f5
    },
          a0_0xbfe8ad = {
      _0x3f5eda: 0x1820
    },
          a0_0x16e1d5 = {
      _0x577ef9: 0x235b,
      _0x5514d1: 0x185e,
      _0xbcc860: 0x183f,
      _0x2d166e: 0x1f30,
      _0x1e39d8: 0x19d2,
      _0x20386f: 0x17f,
      _0x38bebc: 0x1da5,
      _0x35a4e8: 0x24c4,
      _0x273142: 0x14d2,
      _0x4f37cd: 0x1a5,
      _0x1a9991: 0x1fd4,
      _0x56d38c: 0x24fa,
      _0xfbc297: 0x1f30,
      _0xe08b38: 0x1128,
      _0x49d7b4: 0x1d55,
      _0x350810: 0x1d55,
      _0x202eef: 0x1d55,
      _0x50d7b6: 0x6ba,
      _0x5c8753: 0x1d4e,
      _0x1c19d0: 0x350
    },
          a0_0x43d0b6 = {
      _0x4883c5: 0x1a5,
      _0x20cf29: 0x14d2,
      _0x40f3d6: 0x17f
    },
          a0_0x1a6dbc = {
      _0x1a2cd8: 0x1bb2,
      _0x5cd592: 0x1d66,
      _0x50f3d9: 0x1d55,
      _0x4d8bd1: 0xb3d,
      _0x266db9: 0x2170,
      _0x56dbbe: 0xb3d,
      _0x296015: 0xbf3,
      _0x14ea99: 0x1f41,
      _0x190f06: 0xaf5,
      _0x43823f: 0x17b9,
      _0x47f086: 0x1ee9,
      _0x149fc1: 0xbb9,
      _0x2a2ec8: 0x2530,
      _0x49361f: 0x1fd4,
      _0x2deb0e: 0xf82,
      _0x130af9: 0x1f30,
      _0x2011fa: 0xf82,
      _0x125606: 0x535
    },
          a0_0x3e8637 = {
      _0x4de463: 0x1be2
    },
          a0_0x5e6370 = {
      _0xefd54a: 0x235b,
      _0x532149: 0x185e,
      _0x3c399d: 0x1aab,
      _0x47e58e: 0x22ba,
      _0x2e0738: 0xda6,
      _0x5a13a4: 0xf82,
      _0x221be3: 0x1d55,
      _0x3e1cd: 0x1d55,
      _0x381403: 0x19c5,
      _0x51d79c: 0x14d2,
      _0x53b3fa: 0x1808,
      _0x379618: 0x14d2
    },
          a0_0x342140 = {
      _0x525b2c: 0x1ea6,
      _0x4b7d79: 0x1d66,
      _0x10ad34: 0x59d,
      _0x107a99: 0x131a,
      _0x286bde: 0xdbb,
      _0x1d8b73: 0x1d55,
      _0x38a59f: 0x59d,
      _0x4e8b1f: 0x14d2,
      _0x14dc98: 0x1da5
    },
          a0_0x3333da = {
      _0x20b112: 0x253d,
      _0x4cc7f8: 0x1edc,
      _0x5cb83a: 0x535,
      _0x3010d2: 0xf86,
      _0x352479: 0xa81,
      _0x3af7a0: 0x1be2
    },
          a0_0x4e1b2d = {
      _0x518956: 0x185e,
      _0x116cff: 0x2405,
      _0x3b56ac: 0x22ba,
      _0x4ac0fd: 0xda6,
      _0x449499: 0xf82,
      _0x538a7e: 0x1d55,
      _0x1d1a62: 0x2405,
      _0x9933a: 0x2405,
      _0x3a48d9: 0xda6,
      _0x108eda: 0x1d55,
      _0x4a59f4: 0x1aab,
      _0x25d59b: 0x2405,
      _0x45dcd5: 0x22ba,
      _0x55e6de: 0x1d55,
      _0x4d5fdd: 0x1d55,
      _0x454004: 0x2405,
      _0x4a86b8: 0x1d55,
      _0x181f6b: 0x1aab,
      _0x22361e: 0x2405,
      _0x4d6fd7: 0xda6,
      _0x192034: 0x1d55,
      _0x511551: 0x1d55,
      _0x37d532: 0x14d2,
      _0x592d9b: 0x1808,
      _0x262630: 0x19c5,
      _0x51827a: 0x1105
    },
          a0_0x1ad3fb = {
      _0x5f4493: 0x1aab,
      _0x36135c: 0x1dc6,
      _0x59ede1: 0xd95,
      _0x423a2b: 0x5f2,
      _0x5972c7: 0x1d55,
      _0x2f5d75: 0x1dc6,
      _0x45a1a0: 0x1d2
    },
          a0_0x626fe4 = {
      _0x3c6e44: 0x235b,
      _0x3009d1: 0x1d55,
      _0x24f3d2: 0x1d55,
      _0x32fd20: 0x1aab,
      _0x3b8720: 0x2405,
      _0x2d2e11: 0x24df,
      _0x3c98fb: 0x24df,
      _0x48f32e: 0x22ba,
      _0x25da7b: 0xda6,
      _0x1dcd96: 0x24df,
      _0x25e8a1: 0x24df,
      _0x2d2ca2: 0x11bf,
      _0x23bd19: 0x22ba,
      _0x5a64b4: 0x11bf,
      _0x341b76: 0x1d55,
      _0x1bf053: 0x19c5,
      _0x3a4d24: 0x1029,
      _0x314e0f: 0x14d2,
      _0x4913ee: 0x1808
    },
          a0_0x2eed67 = {
      _0x3bb47e: 0x1daa,
      _0x310c26: 0xb1c,
      _0x3c65d2: 0x1e4e,
      _0x33ddd2: 0x17ce,
      _0x4cdc65: 0x1603,
      _0x38dee3: 0x1fdd,
      _0x538e6e: 0xc9f,
      _0x8640c8: 0x2472,
      _0xdf286b: 0x1c4,
      _0x202730: 0xd67,
      _0x1d625f: 0x19b2,
      _0xd7c36f: 0x1503,
      _0x326d24: 0x238c,
      _0x455c82: 0x25b5,
      _0x2bc1bd: 0x238,
      _0x5b59b2: 0x1455,
      _0x282162: 0xf67,
      _0x11b98c: 0x231f,
      _0x10c957: 0xe91,
      _0xed2a28: 0x1452,
      _0x43ef10: 0xc17,
      _0x473d8e: 0x1e9e,
      _0x592aed: 0x2561,
      _0x5d537b: 0x4f4,
      _0x53d507: 0x16da,
      _0x248856: 0x1c13,
      _0x402b94: 0x15ec,
      _0x4970fd: 0x25ea,
      _0xc227d4: 0x1c44,
      _0x541fb1: 0x12c7,
      _0x34d05c: 0x18f5,
      _0x5b5223: 0x2360,
      _0x4a422b: 0x1a2d,
      _0x1d8f7f: 0x1315,
      _0x52b884: 0xef2,
      _0x7123f9: 0x1a49,
      _0xb2f759: 0x194c,
      _0x4ce502: 0xff2,
      _0x4eac6d: 0xe22,
      _0x1bb53f: 0x946,
      _0xac5de6: 0x1809,
      _0x2bd4ca: 0x1dd3,
      _0x438a50: 0x267,
      _0x470d81: 0x1d33,
      _0x4bb561: 0x1bb,
      _0x1a6c0d: 0x1de6,
      _0x1609e5: 0x160c,
      _0x2a6712: 0xb1c,
      _0x4e28c1: 0x96a,
      _0x54d37e: 0x17ce,
      _0x38832c: 0x25b5,
      _0x1ad69d: 0xf67,
      _0x318f0a: 0x231f,
      _0x19a68a: 0x1c09,
      _0x6b091e: 0x10b2,
      _0x20872e: 0x227c,
      _0x394267: 0x247e,
      _0x3757c6: 0xf65,
      _0x2f7efd: 0x1c10,
      _0x33e8ad: 0x2561,
      _0x182d01: 0x4dc,
      _0x229a37: 0x1e14,
      _0x47ac2c: 0x4d7,
      _0x35dbff: 0x1a97,
      _0x338a5f: 0x13c0,
      _0x1b6a3c: 0xf89,
      _0x1288be: 0x25a9,
      _0x268ffa: 0x17e6,
      _0x491c53: 0x1c4,
      _0x1cbd91: 0x18e8,
      _0x4ef12d: 0x17ac,
      _0x5240b9: 0xd67,
      _0x399cf8: 0x1aab,
      _0xe8edf4: 0x22ba,
      _0x1c33c1: 0x1d55,
      _0x40fef2: 0x22ba,
      _0x4c2650: 0xf82,
      _0x2c9fdb: 0x14d2,
      _0x16ba52: 0x1029,
      _0x4c6ea5: 0x14d2,
      _0x540182: 0x19c5,
      _0x1a5697: 0x1808,
      _0x1cdb88: 0x1105
    },
          a0_0x3c2cc4 = {
      _0x44a671: 0x535,
      _0x3867ca: 0x59d,
      _0x4d055d: 0x131a,
      _0x53dfd5: 0x535,
      _0x130fc1: 0x1ea6,
      _0x445850: 0x1d55,
      _0x304cd3: 0x1d66,
      _0x58877e: 0x59d,
      _0x3fe206: 0x131a
    },
          a0_0x502e95 = {
      _0x115e56: 0x535
    },
          a0_0x48193c = {
      _0x2432f4: 0xf86,
      _0x27c936: 0x1be2
    },
          a0_0x1d5bb0 = {
      _0x1047a0: 0x1a05,
      _0x26e947: 0x63c,
      _0x2cdaeb: 0x19c5,
      _0x6b5ec8: 0x14d2,
      _0xd3c294: 0x19c5
    },
          a0_0x2e2255 = {
      _0x2f0ba1: 0xe6d
    },
          a0_0x13dd15 = {
      _0x50b946: 0x143c
    },
          a0_0x15af2d = {
      _0x17f409: 0x2405,
      _0x6bb4d4: 0x22ba,
      _0x506060: 0xda6,
      _0x2f5d22: 0xf82,
      _0x4e703c: 0x1d55,
      _0x5f2d1d: 0x1aab,
      _0x4e30eb: 0x22ba,
      _0x419072: 0xda6,
      _0x5e2d17: 0x22ba,
      _0x4fb6af: 0x1d55,
      _0x5d0fb6: 0x1aab,
      _0x5a97cc: 0x22ba,
      _0x5824bc: 0xda6,
      _0x2783f6: 0x1d55,
      _0x268974: 0x2405,
      _0x324351: 0x1d55,
      _0x47e7c7: 0x1aab,
      _0xae01bd: 0x2405,
      _0x22c6b3: 0x1d55,
      _0x15c95a: 0x19c5,
      _0x20ef71: 0x14d2,
      _0x2533d5: 0x19c5,
      _0x29772d: 0x1808,
      _0x3e8702: 0x14d2,
      _0x4041c9: 0x19c5
    },
          a0_0x194197 = {
      _0x30b6de: 0x1aab,
      _0x2fb71d: 0x22ba,
      _0x4a90ab: 0xf82,
      _0x55375f: 0x1aab,
      _0x53ecc3: 0x1d55,
      _0x45a662: 0x1029,
      _0x11e1dc: 0x19c5,
      _0x4542fe: 0x1808,
      _0x8cdfe7: 0x14d2,
      _0x29b49c: 0x1b78
    },
          a0_0x1bf1e4 = {
      _0x490459: 0x1ca4,
      _0x3a1c17: 0xe74,
      _0x169e00: 0x19d6,
      _0x4f92c4: 0xd9e,
      _0x3a9462: 0x30a
    },
          a0_0x16cb49 = {
      _0x19288e: 0xa12
    },
          a0_0xa4c0de = {
      _0x4840e3: 0x1d90,
      _0x410fe7: 0x180b,
      _0xd7d4e7: 0x2488,
      _0x160d4a: 0x20c9
    },
          a0_0x158a99 = {
      _0x85c8e9: 0x1d90,
      _0x242751: 0x137c,
      _0x549240: 0xa7d,
      _0x5e7ba8: 0x137c,
      _0x580fb5: 0x2488,
      _0x4c9760: 0x20c9
    },
          a0_0x684e63 = {
      _0x3285ff: 0x137c
    },
          a0_0x52d8ce = {
      _0x321300: 0x1706
    },
          a0_0x4a1882 = {
      _0x25bb3f: 0x1e94
    },
          a0_0x384a02 = {
      _0xf81052: 0x2098,
      _0x5a8d1d: 0x1a3
    },
          a0_0xceba33 = {
      _0x18d39c: 0x1b0c,
      _0x2abe1b: 0x184,
      _0x5377de: 0x184
    },
          a0_0x594473 = {
      _0x56072e: 0x1d71,
      _0x222e97: 0x129f
    },
          a0_0x4c9121 = {
      _0x332fa4: 0x14d2,
      _0x4f614c: 0x1a5,
      _0x5257ec: 0x1220
    },
          a0_0xaa88e4 = {
      _0x3840cd: 0x185e,
      _0x4ad6f0: 0x19c5,
      _0x2a383d: 0x2375,
      _0x16f0fa: 0x19c5,
      _0x4489fe: 0x121d
    },
          a0_0x1f8432 = {
      _0x4421af: 0x2f8,
      _0x2f9099: 0x1820,
      _0x1c20f2: 0x2f8,
      _0x54113f: 0x2530,
      _0x50bdab: 0xd23
    },
          a0_0x46462b = {
      _0xe78d03: 0x2f8
    },
          a0_0x2b58e7 = {
      _0x31ba09: 0x185e,
      _0x49cc73: 0x1145
    },
          a0_0x1e155c = {
      _0x329f1c: 0x233f,
      _0x4265ad: 0x2173,
      _0x2e04ad: 0xdcd,
      _0x5ce440: 0x197e,
      _0x1fffa1: 0x164c,
      _0x1c5cdd: 0xdcd,
      _0x22a660: 0x1896,
      _0x106fcf: 0xdd0,
      _0x2080bb: 0x1f30,
      _0x306f4d: 0x24fa,
      _0x1360dd: 0x19e6,
      _0x1af4ca: 0x460,
      _0x564399: 0x9e8,
      _0x2ca38c: 0x19d2,
      _0x56bd33: 0xdcd,
      _0x9531f1: 0x1e82,
      _0x1486b4: 0x164c,
      _0x1bd37f: 0x19c5,
      _0x1466fb: 0x164c,
      _0x45de38: 0x176c,
      _0x59c8e7: 0x1896,
      _0x347f3a: 0x853,
      _0x441939: 0x13b9,
      _0x3ea29c: 0x186,
      _0x2eb078: 0x1bb4,
      _0x404e51: 0x135b,
      _0x2ed38a: 0x249d,
      _0x365bb7: 0x14af,
      _0x1e1d4a: 0x1b8e,
      _0x1f9ea1: 0xdcd
    },
          a0_0x2ae1db = {
      _0x39079d: 0x6da,
      _0x53c3a2: 0x853,
      _0x2fde6e: 0x152f,
      _0x51b128: 0x1a2c,
      _0x53ff4e: 0x19d2,
      _0x3f2e40: 0x152f
    },
          a0_0x143ef6 = {
      _0x4cff1a: 0x152f,
      _0x1ec241: 0x152f,
      _0x37e3a7: 0x853,
      _0x43148d: 0x24fa,
      _0x585387: 0xd0c,
      _0x296c4e: 0x2b8
    },
          a0_0x48b9ed = {
      _0x1e7d0c: 0x866,
      _0x2c6007: 0x535,
      _0x3763bd: 0x25c9,
      _0x2d53cc: 0x19b8,
      _0x538902: 0x19d2,
      _0x4faab7: 0x921,
      _0x5b59fc: 0x853,
      _0x1b4ee3: 0x1442,
      _0x47bcda: 0xa41,
      _0x23496e: 0x24fa,
      _0xee342f: 0x19e6,
      _0x1c78d2: 0xee6,
      _0x5880fa: 0x266a,
      _0x3c2bdd: 0x391,
      _0x11c9c4: 0x2505,
      _0x48f90c: 0x1bdc,
      _0x597704: 0x488,
      _0x335466: 0x866
    },
          a0_0x196171 = {
      _0x9656d4: 0xa41,
      _0x3d0486: 0xa41,
      _0x2bf5da: 0x2b8,
      _0x427468: 0x19b8,
      _0x5aa2ad: 0x19ec,
      _0x54243e: 0x19ec,
      _0x262b39: 0x12c4,
      _0x517963: 0x1758,
      _0x297033: 0x233f,
      _0x35632b: 0xffb,
      _0x57f17a: 0x2173,
      _0x2633fb: 0x1b8e,
      _0x5a079f: 0x197e,
      _0x54fd2c: 0xdcd,
      _0x3f05ee: 0x853,
      _0x5dc06d: 0x866,
      _0x3bd87e: 0x19c5,
      _0x6ab3e3: 0x1762
    },
          a0_0x347ccb = {
      _0x3b3d2e: 0x1402,
      _0x2d1b25: 0x104e,
      _0x20beca: 0x1750
    },
          a0_0x213be9 = {
      _0x6b5085: 0x84b
    },
          a0_0x212f29 = {
      _0x496577: 0x19c5,
      _0x4f4df4: 0x80a,
      _0x4dcd2b: 0x165c,
      _0x41daae: 0x14d2,
      _0x489969: 0x121d
    },
          a0_0xd50f23 = {
      _0xce4695: 0x12d8,
      _0xbaa268: 0x1feb
    },
          a0_0x3ffd19 = {
      _0x3d16ca: 0x22d7,
      _0x5a82c3: 0x12d8
    },
          a0_0x378e33 = {
      _0x7e0cba: 0x4e3,
      _0x408429: 0x12d8
    },
          a0_0x34f4ef = {
      _0x49c993: 0x19c5,
      _0x461d1e: 0x1f04,
      _0x18dc1b: 0x14d2,
      _0x345021: 0x19c5,
      _0x3ca37e: 0xb61,
      _0x52fa74: 0x973,
      _0xa355bb: 0x14d2,
      _0x20c2fc: 0x121d
    },
          a0_0x4c4a68 = {
      _0x51749f: 0x1357,
      _0x5603e8: 0x12d8
    },
          a0_0x2d9d9c = {
      _0xcaffc4: 0x4e3,
      _0x2f638a: 0x478,
      _0x5848cc: 0xb0a,
      _0x3ba98c: 0xffb
    },
          a0_0x51d777 = {
      _0x3f8802: 0x478,
      _0x1d0c93: 0x67f,
      _0x30b657: 0xffb
    },
          a0_0x592606 = {
      _0x14d857: 0x185e,
      _0x7c8a60: 0x14d2,
      _0x54bd9e: 0x19c5,
      _0x3f0875: 0x14d2,
      _0x1cd71c: 0x121d,
      _0x4db4f1: 0x1391
    },
          a0_0x4beeb1 = {
      _0x10afe3: 0xf64,
      _0x428355: 0x535,
      _0x4ad3bf: 0x1a5a,
      _0x5b7a4f: 0x235b,
      _0x2d7da0: 0x1a5a
    },
          a0_0x443d3c = {
      _0x13179f: 0x2571,
      _0x356a40: 0x1bdc,
      _0x113dee: 0x460,
      _0x187e98: 0x319,
      _0x40c4fd: 0x19d2,
      _0x4fb38a: 0x16d6,
      _0x5a6091: 0x1d2
    },
          a0_0x1472ec = {
      _0x27dfc8: 0x14d2,
      _0x41d168: 0x19c5,
      _0x33be56: 0xba7
    },
          a0_0x5c6b81 = {
      _0x533678: 0x1cfb,
      _0x3f6b5c: 0x514
    },
          a0_0x46ba40 = {
      _0x5b1b74: 0x1287,
      _0x95c3e7: 0x1d66,
      _0x2cabc6: 0x2287
    },
          a0_0x306140 = {
      _0x14894a: 0x1d66,
      _0x18b8d2: 0x1e35,
      _0x55be6a: 0xa58,
      _0x32f00d: 0x12af,
      _0x315d06: 0x1dc0,
      _0x1eb9aa: 0xb65,
      _0x337940: 0x2214,
      _0x5d5385: 0x134f,
      _0x462e14: 0x1392,
      _0x5e43e1: 0x19da,
      _0x3543c7: 0x790,
      _0x22ed56: 0x190,
      _0x12cad1: 0x19c5,
      _0x3ee7d0: 0x121d
    },
          a0_0x1f1f44 = {
      _0x339faf: 0x1d66,
      _0x213162: 0x11f5
    },
          a0_0x78accc = {
      _0x2cbb34: 0x1af1
    },
          a0_0x36791c = {
      _0x38623c: 0x1f8
    },
          a0_0x34fa02 = {
      _0x3dd754: 0xe6d,
      _0x3df705: 0x2a2,
      _0x144f75: 0x1f80
    },
          a0_0x5b42a8 = {
      _0x5d0a7f: 0xf01,
      _0x3014b1: 0x11a1,
      _0x582ab4: 0x24bc,
      _0x409e8f: 0x1cfb,
      _0x423a5c: 0x12d8,
      _0xf234b8: 0x8e5
    },
          a0_0x371261 = {
      _0x3d42e9: 0x1f8,
      _0x23f708: 0x21e0
    },
          a0_0x249d78 = {
      _0x1241cc: 0x1d90,
      _0x37cb0d: 0x1d2,
      _0x47fa06: 0x12d8,
      _0x3907cd: 0x535,
      _0x113723: 0x1cfb,
      _0x15035a: 0x1f80,
      _0x460d50: 0x1f8,
      _0x24ae73: 0x1cfb,
      _0x1310b7: 0x1349,
      _0x40a885: 0x2a2,
      _0xef2ddf: 0x12d8,
      _0x531659: 0x8e5
    },
          a0_0x128d2a = {
      _0x275d63: 0x1d90,
      _0x1dbfaf: 0x19d2,
      _0x2b5a61: 0xe3d,
      _0x4050b0: 0xf01,
      _0x48bf50: 0x1cfb,
      _0x2eaeec: 0x1cfb,
      _0x31cfa4: 0x8e5
    },
          a0_0x6d05dd = {
      _0x4fd6ca: 0xf6b,
      _0x198cda: 0x1e21,
      _0x527ba9: 0x1f15,
      _0x5c21f9: 0x927,
      _0x4a9891: 0x24d7,
      _0x576df1: 0x1263,
      _0x39e6ae: 0x24dd,
      _0x1b8ab9: 0x165d,
      _0x3615a3: 0x17bd,
      _0x512f9c: 0x185b,
      _0x59c4d7: 0x14d2,
      _0x5c1898: 0x19c5,
      _0x5347d9: 0x14d2,
      _0x594179: 0x1841
    },
          a0_0x40a092 = {
      _0x99fe04: 0x535,
      _0x25fcad: 0xf6b,
      _0x12a714: 0x2549
    },
          a0_0x4deb80 = {
      _0x592d44: 0x16db
    },
          a0_0xa156b1 = {
      _0x12931f: 0x428,
      _0x11aba1: 0x7fe,
      _0x2e58cc: 0x24d6,
      _0x3ddfe5: 0x39c,
      _0x9cb6c5: 0x1157,
      _0x12ee85: 0x39c,
      _0x289c80: 0x1157,
      _0x5c2b4a: 0x24c9,
      _0x2aa655: 0x618,
      _0x2aafd2: 0x4e7,
      _0x1253a5: 0x4e7
    },
          a0_0x39cf9a = {
      _0x3e940d: 0x618
    },
          a0_0x4c1a85 = {
      _0x245d02: 0x39c
    },
          a0_0x313031 = {
      _0x38543e: 0x2564,
      _0x8f5f2b: 0x317,
      _0x3e40a7: 0x24c7,
      _0x4c7b06: 0x1d55,
      _0x152cc4: 0x2422,
      _0x5774da: 0xaa1,
      _0x4ac928: 0xa9d,
      _0x4f3589: 0xf82,
      _0x13efce: 0x22e6,
      _0xa9a07: 0x2c5,
      _0x3ca9f7: 0x19cf,
      _0xdce00b: 0x2521
    },
          a0_0x3103f4 = {
      _0x83d8d0: 0x7fe,
      _0x5f4de7: 0x1e9b,
      _0x4f09f9: 0x4e7,
      _0x760c7f: 0x2422,
      _0x4f3e59: 0xaa1,
      _0x2766d7: 0xaa1,
      _0x5ede4e: 0x4e7,
      _0x31936d: 0xa9d,
      _0x54aacd: 0xf82,
      _0x4f44e0: 0x22e6,
      _0x744f97: 0x2c5,
      _0x5ef365: 0x2521,
      _0x1a17db: 0x247,
      _0x4ddf64: 0x247,
      _0x4a6d4f: 0x255f
    },
          a0_0x783b6c = {
      _0x3adea3: 0xaa1,
      _0x279efe: 0x247,
      _0x3902b2: 0x250a,
      _0x1c4f6f: 0x16db,
      _0x5eb992: 0xfc0,
      _0x4c70a5: 0x4e7,
      _0x510fea: 0x24c9,
      _0x3c1647: 0x39c,
      _0x1c5a5a: 0x428,
      _0x4889dd: 0x1d6c
    },
          a0_0x20395d = {
      _0x3040ed: 0x24bc,
      _0x3d86b9: 0x879,
      _0x54de1d: 0x2285,
      _0x532451: 0x24bc,
      _0x1c0739: 0x879,
      _0x4d9811: 0x879,
      _0x294ce5: 0x24bc,
      _0x5e13aa: 0x1699,
      _0x4b7043: 0x24bc,
      _0x51dd56: 0x1230,
      _0x5bffa5: 0x879,
      _0x5b76e0: 0x24bc,
      _0x3ed502: 0x24bc
    },
          a0_0x3ff14e = {
      _0x16cbf0: 0x1d66,
      _0x1a7b80: 0x535,
      _0x32540b: 0x74c,
      _0x5ea73e: 0x253d,
      _0x2e31a3: 0x242c,
      _0x514b20: 0x23c9,
      _0x7479da: 0x146b,
      _0x406ef8: 0x535,
      _0x2b59c: 0x14d2,
      _0x274e0f: 0x242c,
      _0x5f461b: 0x1b6b,
      _0x1891d7: 0x235b
    },
          a0_0x56b6f5 = {
      _0x56da38: 0x535,
      _0x55f5a3: 0x242c,
      _0x1a9b77: 0x23c9,
      _0x43bac9: 0xc49,
      _0x439306: 0x146b,
      _0xd3b8d5: 0x12a3,
      _0x315471: 0x14d2,
      _0x56c3d7: 0x535
    },
          a0_0x39c65b = {
      _0x1976f4: 0x535,
      _0x578c82: 0x74c,
      _0x2438a1: 0x23c9,
      _0x19d60f: 0xc49,
      _0x40cac3: 0x146b,
      _0x39fb18: 0x535,
      _0x8deb3a: 0x12a3,
      _0x489a57: 0x14d2,
      _0x488c56: 0x1a5,
      _0x53eb19: 0xfd0,
      _0x2f8c41: 0x1063
    },
          a0_0x9668e6 = {
      _0x3c863e: 0x535,
      _0x1a8e41: 0x74c,
      _0x30eeb3: 0x253d,
      _0x1e6b9e: 0x242c,
      _0x563e0e: 0x385,
      _0x42d6af: 0x19d6,
      _0x45774b: 0x12a3,
      _0x44128c: 0x1a5,
      _0x42e47c: 0x236e,
      _0x25cdce: 0x535,
      _0x1a0458: 0x1063
    },
          a0_0x1754ff = {
      _0x4ddcbd: 0x74c,
      _0xb5772a: 0x253d,
      _0x3d1f30: 0x23c9,
      _0x3d0a54: 0x213a,
      _0x3ad90c: 0x19d6,
      _0x45b8be: 0xc49,
      _0x7801ab: 0x146b,
      _0x1c788f: 0x535,
      _0x3befd1: 0x14d2,
      _0x410bac: 0x1f6d,
      _0x5b9290: 0x1063
    },
          a0_0x545a44 = {
      _0x1bc672: 0x74c,
      _0x35d2cc: 0x535,
      _0x28e2ff: 0x253d,
      _0x4fbbd4: 0x242c,
      _0xcefaea: 0xc49,
      _0x124d39: 0x12a3,
      _0x3937c3: 0x1a5,
      _0x5144ca: 0x1063
    },
          a0_0x16b5ab = {
      _0x4ef673: 0x74c,
      _0x4e22cf: 0x1921,
      _0x2d5cb9: 0x535,
      _0x2c4edf: 0x23c9,
      _0x366825: 0x535,
      _0xa8e426: 0x14d2,
      _0x125832: 0x1063
    },
          a0_0x2115bb = {
      _0x52e6eb: 0x15a9,
      _0x4e97a2: 0x242c,
      _0x4623e1: 0x23c9,
      _0x2a3f72: 0x12a3,
      _0x5e3d5b: 0x14d2,
      _0x458bcb: 0x1063
    },
          a0_0x262e38 = {
      _0x59582d: 0x535,
      _0x1c8fe7: 0xc49,
      _0x33a620: 0x146b,
      _0x3a8ba6: 0x85e,
      _0x4f925b: 0x535,
      _0x172a22: 0x12a3,
      _0x39396a: 0x1a5,
      _0x3128c9: 0x1d8f
    },
          a0_0x100cd1 = {
      _0x31e20d: 0x535,
      _0x2b1e61: 0x74c,
      _0x17b108: 0x253d,
      _0x5989d5: 0x242c,
      _0x51cd3a: 0x146b,
      _0x43a47b: 0x12a3,
      _0x5289f4: 0x14d2,
      _0x32b293: 0x1a5,
      _0x439325: 0x2529
    },
          a0_0x39cd32 = {
      _0x6f7276: 0x535,
      _0x17f1bf: 0x23c9,
      _0x1a33fd: 0x90f,
      _0x546682: 0x535,
      _0xa5e618: 0x14d2,
      _0x333105: 0x223d,
      _0x4356aa: 0x535
    },
          a0_0x47bfc3 = {
      _0x1865f0: 0x535,
      _0xe5dcd4: 0x253d,
      _0x1fb5e6: 0x242c,
      _0x3abcdf: 0xc49,
      _0x8e7ad: 0x12a3,
      _0x3966bc: 0x1a5,
      _0x47de3e: 0x1728
    },
          a0_0x555145 = {
      _0x49d0df: 0x535,
      _0x106c49: 0x242c,
      _0x304d1e: 0x146b,
      _0x3101ab: 0x12a3,
      _0x3fdcc0: 0x14d2,
      _0x1759e7: 0x1063
    },
          a0_0x2411fe = {
      _0x2d4865: 0x1cd,
      _0x449e29: 0x11a3,
      _0x368e17: 0x19c5,
      _0x47f023: 0x13b5,
      _0x48aaad: 0x14d2,
      _0x29aeb2: 0x19c5,
      _0x554794: 0x19e7
    },
          a0_0x1cd06a = {
      _0x686baa: 0x235b,
      _0x1421e4: 0x1cd,
      _0x2bb651: 0x725,
      _0x590675: 0xae6
    },
          a0_0x2246cc = {
      _0x588613: 0x120b,
      _0x2557d2: 0x120b,
      _0x22db9e: 0x235b,
      _0x21b267: 0x185e,
      _0x104606: 0xbff,
      _0x194f9e: 0xae6,
      _0x33f7b3: 0x14d2,
      _0x351683: 0x10b4,
      _0x2cfd67: 0x1d66,
      _0x2a2ee5: 0x259d,
      _0x333484: 0x120b
    },
          a0_0x32a259 = {
      _0x287794: 0x1de9
    },
          a0_0x33e71e = {
      _0x4431bf: 0x235b,
      _0x60afba: 0xae6,
      _0x24e838: 0x120b,
      _0x4d7894: 0x4fc,
      _0x45dff4: 0x2530
    },
          a0_0x22af5e = {
      _0x5a0755: 0x1cfa
    },
          a0_0x1e7dbf = {
      _0x2dee29: 0x185e,
      _0x55ff9e: 0x14d2,
      _0x385fdb: 0x14d2,
      _0x3212de: 0x1105,
      _0x4f3337: 0x19c5,
      _0x128d56: 0x1b59,
      _0x4dba8a: 0xda7,
      _0x159dd5: 0x1504,
      _0x99fb6: 0x14d2,
      _0x13eebf: 0x1f5f,
      _0x583523: 0x19c5,
      _0xce7f77: 0x115e
    },
          a0_0x509218 = {
      _0x254097: 0x11a8,
      _0x3005c7: 0x17f,
      _0x536d65: 0x1d71,
      _0x3437de: 0x19d6,
      _0x4d7702: 0x1b65
    },
          a0_0x17887c = {
      _0x2df8e8: 0x4b9,
      _0x5d9b13: 0x2288,
      _0x544c7f: 0x1d71,
      _0x2b5b5b: 0x1d71,
      _0x81f4cf: 0xffb,
      _0x1f01ef: 0x1cd9,
      _0x264dd8: 0xe74,
      _0x1106ab: 0x535,
      _0x3032af: 0xe74,
      _0xca6b6: 0xffb,
      _0x44fd69: 0x1de9,
      _0x1a91a0: 0x188f,
      _0x3efcb2: 0x10f6,
      _0x60a56: 0x1d71,
      _0x383bb8: 0x11a8,
      _0x5d6ff9: 0x190,
      _0x3fe11a: 0x6cd,
      _0x12ca30: 0x14d2,
      _0x2b1b13: 0x1da5,
      _0x3661a7: 0x285,
      _0x15dd2a: 0x285
    },
          a0_0x1a4784 = {
      _0x2c4046: 0x1582,
      _0x4f42c2: 0xe6d,
      _0x1646e7: 0x25e1,
      _0x297899: 0x2405,
      _0x36c575: 0x1a4e,
      _0x4cac8b: 0x25e1,
      _0x4f3d5e: 0x16c5,
      _0x4d8ec3: 0x17f
    },
          a0_0x2d7586 = {
      _0x4f8fe6: 0x1e35,
      _0x285b66: 0xf42,
      _0x1ce643: 0x1d66,
      _0x45524d: 0x2101,
      _0x327868: 0x1e35,
      _0x2e34a9: 0x17d,
      _0x548043: 0x17d,
      _0x43be26: 0x1d66,
      _0xf915f8: 0x650,
      _0x3c733: 0x1e35
    },
          a0_0x1e9239 = {
      _0x143642: 0x535,
      _0x5c36e2: 0xf42
    },
          a0_0x19c147 = {
      _0x477fe4: 0x535,
      _0x3af279: 0x535,
      _0xc85118: 0x25c9,
      _0x182db1: 0xa20,
      _0x15f099: 0x1d55,
      _0x5e4f45: 0x1dc6,
      _0x1ce510: 0x978,
      _0x446e06: 0x1870,
      _0x5f33d9: 0x1d66,
      _0x24bc7c: 0x978,
      _0x19dace: 0x1ab
    },
          a0_0x2cb103 = {
      _0x1bb7b3: 0x1de9,
      _0x47b04d: 0x280,
      _0x3a2b51: 0x1c66,
      _0x3c5338: 0x258e,
      _0x2b2c31: 0x3e9
    },
          a0_0x4f3456 = {
      _0x262f75: 0x1c66,
      _0x460e2d: 0x535,
      _0x382597: 0x3e9,
      _0x56bd70: 0x10be,
      _0x46403e: 0x535,
      _0x15fe2f: 0x3dd,
      _0x392b03: 0x1870,
      _0x5adf52: 0x49e,
      _0xe30968: 0x14d2,
      _0x42001b: 0x10fa,
      _0x211651: 0x1de4
    },
          a0_0x102740 = {
      _0x22960f: 0x1aab,
      _0x6ac8ed: 0xc95,
      _0x37ef63: 0x1ea2,
      _0x36732b: 0x14d2,
      _0x1b5c08: 0x1894,
      _0x54bfe5: 0x25e1,
      _0x4fba47: 0x14d2,
      _0x3d6c42: 0x1da5,
      _0x1418bd: 0x7cb,
      _0xfbb3c8: 0x6cd,
      _0x465b09: 0x19d6,
      _0x1599b3: 0x1d71,
      _0x3d0912: 0x1b65,
      _0x44c88d: 0x1c66
    },
          a0_0x40098c = {
      _0x53959d: 0x535,
      _0x1a4c84: 0x1d66,
      _0x36577c: 0x59d
    },
          a0_0x35efa5 = {
      _0x45d6a0: 0x535,
      _0x23b0d8: 0x32e,
      _0x534154: 0x1ea2,
      _0x592123: 0xf86,
      _0x1ea460: 0x7b1
    },
          a0_0x252223 = {
      _0x513775: 0x1b8c,
      _0x25cdab: 0x535,
      _0x9af042: 0x2396,
      _0x225bef: 0x179b,
      _0x52717c: 0x535,
      _0x1e777c: 0xe75,
      _0x298e75: 0xb32,
      _0x390526: 0x179b
    },
          a0_0x4369cf = {
      _0x1c79f2: 0x185e,
      _0x107327: 0x14d2,
      _0x4325cf: 0x1029,
      _0x512c22: 0x19c5,
      _0x4c1619: 0x14d2,
      _0x601c5b: 0xc58
    },
          a0_0x1833e5 = {
      _0x3a5528: 0x535,
      _0x20f7f: 0x3e9,
      _0x45274c: 0x1eba,
      _0x37fbd5: 0x1de9,
      _0x582b64: 0x3dd,
      _0x54403e: 0x108e,
      _0x2d6329: 0x535,
      _0x57fc3b: 0x1de9,
      _0xaae581: 0x580,
      _0x53a972: 0x1abe
    },
          a0_0x65b356 = {
      _0xb70b13: 0x14d2,
      _0x3756c5: 0x14d2,
      _0x2ba9c3: 0x19c5,
      _0xfb916f: 0x1808,
      _0xd1853d: 0x14d2,
      _0xacbe94: 0x19c5,
      _0x167b5e: 0xb93,
      _0x27f942: 0x81f,
      _0x28059f: 0x19c5
    },
          a0_0x505c5f = {
      _0x447b51: 0xb32,
      _0x4a89dd: 0x2095
    },
          a0_0x19b5c3 = {
      _0xb461bc: 0xf05,
      _0xdebda7: 0x535,
      _0x444802: 0x2292,
      _0x2850cb: 0x11dc,
      _0x35a4f5: 0x2422,
      _0x120637: 0x1f30,
      _0x431424: 0x1f30,
      _0x15a3a0: 0x1366,
      _0x3765e0: 0x1d66,
      _0x4e7e31: 0x2379,
      _0x4de317: 0x16c5,
      _0x32ed81: 0x1870,
      _0x45fcb6: 0x2530,
      _0x571211: 0x1985,
      _0x3f0112: 0x939,
      _0x9fa30b: 0x2530,
      _0x1decac: 0x1985,
      _0x39ff69: 0x230e,
      _0x287819: 0x1868,
      _0x34e29d: 0x192f,
      _0x56cdd2: 0x535,
      _0x2875ea: 0x168f,
      _0x1d9abb: 0x1d66,
      _0x56e92d: 0x2379,
      _0x1c919f: 0x185e,
      _0x58cf99: 0x535,
      _0x2a411f: 0x230e,
      _0x19ec15: 0x2530,
      _0xb92d29: 0x17f
    },
          a0_0x72d995 = {
      _0x4e0e12: 0x4b9,
      _0x117936: 0x1c66,
      _0x5bc072: 0x535,
      _0x405eba: 0x1d66,
      _0x4fe770: 0x1870,
      _0x26ceec: 0x1490,
      _0x4ee2dc: 0x3e9
    },
          a0_0xc17c85 = {
      _0x232cc8: 0x4b9,
      _0x1a0c12: 0x1aab,
      _0x41fdf0: 0x16c5,
      _0x5ceedb: 0x267e,
      _0x50b0ce: 0xc95,
      _0x22e3c5: 0xd7f
    },
          a0_0x1cc1d5 = {
      _0x1f05d2: 0x535,
      _0x283d6e: 0x253d,
      _0x536eed: 0x4b9,
      _0x2a362d: 0x267e
    },
          a0_0x55ab50 = {
      _0x1d6abc: 0x21f8,
      _0x3d24d6: 0x1b70,
      _0x549d8b: 0x269,
      _0x42f8b2: 0x235b,
      _0x20632c: 0x185e,
      _0x23a0f4: 0x1d55,
      _0x48dcfe: 0x14d2,
      _0x10211c: 0x19c5,
      _0x3bbacf: 0x14d2,
      _0x29cff2: 0x14d2,
      _0x1acca4: 0x20dc,
      _0x1c4bb7: 0x14d2,
      _0x56db79: 0xd17,
      _0x3b4437: 0xf47,
      _0x49cc0d: 0xf82,
      _0x598f22: 0x1d66,
      _0x5a6bd4: 0x2379,
      _0xcc464f: 0x10df,
      _0x9600b0: 0x2292,
      _0x276d6c: 0xeac,
      _0x2877ee: 0xedd,
      _0x3e95d1: 0xf80,
      _0x20647b: 0x14d2,
      _0x75d20: 0x1e5f
    },
          a0_0x10b037 = {
      _0x27f3ef: 0x253d,
      _0x46e15d: 0x19d2,
      _0x2b9d41: 0x16c5,
      _0x1f5625: 0x2530,
      _0x2b7479: 0x14d1,
      _0x530f2e: 0x14d1,
      _0x3b5b36: 0x2606,
      _0x2263e5: 0x2530,
      _0x5afdb8: 0x14d1,
      _0x2daff7: 0x1edc,
      _0x5819ee: 0x2001,
      _0x2368ae: 0xf86,
      _0x18d669: 0x1a50,
      _0x9ffa6e: 0x135a,
      _0x2bea2b: 0xf86,
      _0x6b7d9d: 0x2013,
      _0x49ac4d: 0x17f1,
      _0x1dc9bb: 0x1af1,
      _0x31593e: 0xaf7,
      _0x527a9c: 0xf86,
      _0x2dac33: 0x1082,
      _0xd05f93: 0x1f7f,
      _0x373797: 0x2681
    },
          a0_0x444b9b = {
      _0x39bf9c: 0x1291,
      _0x3bd081: 0x235b,
      _0xdf07e9: 0x16c5,
      _0x2b40da: 0x2493,
      _0x14fbff: 0xe28,
      _0x8281b8: 0x535,
      _0x298243: 0x2493,
      _0x3a07a5: 0x235b,
      _0x3e0bd4: 0x2438,
      _0x49ed45: 0xaf7,
      _0x23795a: 0x1de9,
      _0x160b55: 0x535,
      _0x210d36: 0x16c5,
      _0x469527: 0x1366,
      _0x5c31df: 0x1de9,
      _0x5b8196: 0x2438,
      _0x416dcd: 0x5b0,
      _0x469ef3: 0x244b
    },
          a0_0x310657 = {
      _0xfd8463: 0x17f1,
      _0x503e3a: 0xe28,
      _0x4db784: 0x1de9,
      _0xe238: 0x165e,
      _0x420e09: 0x1a94,
      _0x10fae5: 0x2438,
      _0x31beeb: 0xe28,
      _0x5d9281: 0x535,
      _0x239a2a: 0x2493,
      _0x2fb6c6: 0x2438,
      _0x2b2b35: 0xe28,
      _0x11ac40: 0x14d2,
      _0x195bd7: 0x1da5
    },
          a0_0x1c4291 = {
      _0x2daa35: 0x1564,
      _0x3c827d: 0x1e42,
      _0x16f65f: 0x16c5,
      _0x5704ca: 0x535,
      _0x48be3a: 0x1870,
      _0x4eb04c: 0x13b4,
      _0x350a65: 0x2fa,
      _0x55fb14: 0x535,
      _0x43a796: 0x240a,
      _0x417239: 0x1366,
      _0xdc2349: 0x2530,
      _0x4ffdb4: 0x2180,
      _0x1cc7d0: 0x2530,
      _0x54cf3c: 0x24c7,
      _0x1daa3e: 0xe1b,
      _0x52018a: 0x1f09,
      _0x5e6d9f: 0x2438,
      _0x22e0db: 0x2276,
      _0x18fd33: 0x320,
      _0x3d2116: 0xbca,
      _0x42aa20: 0x24d,
      _0x415ac5: 0x17f,
      _0x430374: 0x1e42
    },
          a0_0x210b2c = {
      _0x4bd616: 0x235b,
      _0x6ba2d2: 0x16c5,
      _0x240304: 0x242f,
      _0x34ce7b: 0x17f1,
      _0x1c831e: 0x2323,
      _0x315c96: 0x16c3,
      _0x3d4358: 0x24c7,
      _0x3ee77f: 0x240a,
      _0xefc86f: 0x1d66,
      _0x47ceaa: 0x1870,
      _0x2bb531: 0x235b,
      _0x3bd9c1: 0xf82,
      _0x3a0a49: 0x13b4,
      _0x41aec0: 0x1f30,
      _0xb44340: 0x535,
      _0x5cc59f: 0x240a,
      _0x4d7187: 0x235b,
      _0x247714: 0x16c5,
      _0x5ee904: 0x2140,
      _0x739172: 0x1366,
      _0x4760c7: 0x263f,
      _0x5c8508: 0x2180,
      _0x24a3dc: 0x2530,
      _0x5a0e54: 0x2180,
      _0x501abb: 0x1f30,
      _0x3410e4: 0x7fe,
      _0x4487b4: 0x2650,
      _0x264661: 0x1d66,
      _0x42e9fc: 0xe1b,
      _0xa9b628: 0x1cad,
      _0x348c17: 0x98f,
      _0x5f7752: 0x108c,
      _0x3840fc: 0x1cad,
      _0x5a889a: 0x16c5,
      _0x293fcb: 0x235b,
      _0x159402: 0x16c5,
      _0x1fe95a: 0x1f09,
      _0x336ee6: 0x2438,
      _0x338034: 0x16c5,
      _0xe2db42: 0x1f30,
      _0xba4dad: 0x7fe
    },
          a0_0x2b6fff = {
      _0x11ebc1: 0x9c8,
      _0x881323: 0x385,
      _0x5d537e: 0x213a,
      _0x1110bf: 0x19d6,
      _0x3c171f: 0x185e,
      _0x3d3474: 0x11d9,
      _0x4ae152: 0x235b,
      _0xe2c92c: 0x2288,
      _0x6e1410: 0xb5b,
      _0x2506d9: 0x12e5,
      _0x31a680: 0x242f,
      _0x15d419: 0x135a,
      _0x28ccc5: 0x1af1,
      _0x5a80b2: 0x1a50,
      _0x35652e: 0x1d66,
      _0x2430ea: 0x1e35,
      _0x6048: 0x2159,
      _0x2ddf3c: 0x1da5,
      _0x4d66a6: 0x1723,
      _0x27038a: 0x14d2
    },
          a0_0x3e591c = {
      _0x1f4e9e: 0xc11,
      _0xbcf661: 0xe41,
      _0xad47eb: 0x1d55
    },
          a0_0x2f1876 = {
      _0x53b16d: 0xf47,
      _0x562df9: 0x549
    },
          a0_0x51d5b9 = {
      _0x2bbd14: 0x2497,
      _0x2f0969: 0x2606,
      _0x20710c: 0xf82,
      _0x49df8b: 0x1d55,
      _0x28661f: 0x2606,
      _0x4e94f6: 0xf82,
      _0x5aabbe: 0x1d66,
      _0x348fb1: 0x15e0,
      _0x26944e: 0x2379,
      _0x50440: 0x239c,
      _0x16c7d8: 0x1d55,
      _0x1b62fd: 0x14e8,
      _0x238899: 0x21a4,
      _0x21adbf: 0x1d55,
      _0xf062b: 0x2606,
      _0x7606cc: 0x1d66,
      _0x48f312: 0x1d66,
      _0x251420: 0x14d2,
      _0x3da055: 0x14d2,
      _0x1bb820: 0x19c5,
      _0x140ffc: 0x1105,
      _0x2e7bf5: 0x670,
      _0x39c7c2: 0x14d2,
      _0x26c1d5: 0x1e53,
      _0x4f7acb: 0x121d,
      _0x3618f1: 0x14d2,
      _0x165723: 0x19c5
    },
          a0_0x595690 = {
      _0x15729a: 0x191a,
      _0x31d9db: 0x2a6,
      _0x342507: 0x1063
    },
          a0_0x2fb8eb = {
      _0xc25bd3: 0x535
    },
          a0_0x212099 = {
      _0x5a7064: 0x535,
      _0x52b6e7: 0x1289,
      _0x27c7f0: 0x1d55,
      _0xc7cda: 0x535,
      _0x455ec1: 0xaaf,
      _0x1f0cb7: 0x1c66,
      _0x440bb2: 0x2292,
      _0xfe0d6b: 0x16c5,
      _0x5e2fc5: 0x1793
    },
          a0_0x1260eb = {
      _0x316878: 0x1ec5,
      _0x52deaa: 0x385,
      _0x53bb63: 0x213a,
      _0x5ecf01: 0x1b65,
      _0x1a2de9: 0x14d2,
      _0x109771: 0x1da5,
      _0x5de82b: 0x1d66,
      _0x5d717d: 0x1c66
    },
          a0_0x2e2654 = {
      _0x23b3c6: 0x13e3,
      _0x11c8ed: 0x1d66,
      _0x2b6cb9: 0x59d
    },
          a0_0x496e24 = {
      _0x28d6df: 0x13e3,
      _0x371114: 0x535,
      _0x443076: 0x2a3
    },
          a0_0x5df8b2 = {
      _0x44ff4f: 0xe6d
    },
          a0_0xe76212 = {
      _0x48b045: 0x235b,
      _0x29960a: 0x22ba,
      _0x3af834: 0x1d55,
      _0x1f604f: 0x14d2,
      _0x3f7a40: 0x19c5,
      _0x2e18b9: 0x1808,
      _0x1722b0: 0x19c5,
      _0x1f6766: 0x19c5,
      _0xe8ecb8: 0x22c4,
      _0x53c91b: 0x19c5,
      _0x2192ce: 0x49a,
      _0xe0a633: 0x14d2,
      _0x1c5a9a: 0x13e8,
      _0x4f7771: 0x14d2,
      _0x5f2087: 0x14d2,
      _0x343802: 0x11b4
    },
          a0_0x55cd8a = {
      _0x5bbd4a: 0x535,
      _0x2d441d: 0x14d2
    },
          a0_0x4648e9 = {
      _0x4b9396: 0x535,
      _0x322d02: 0x12a3
    },
          a0_0x349e01 = {
      _0x38c46c: 0x2488
    },
          a0_0x4a9569 = {
      _0x16482c: 0xa92,
      _0x288a4b: 0x2488,
      _0x5701b8: 0x1a3,
      _0x453628: 0x1838
    },
          a0_0x425be1 = {
      _0x2aff50: 0x1a07,
      _0x407937: 0x14d6,
      _0x52ac84: 0x4a9,
      _0xc7af2a: 0x1da5,
      _0x1f88d2: 0x1050
    },
          a0_0x59ee47 = {
      _0x3b69a7: 0x535,
      _0x1b2ba4: 0x183f,
      _0x701aa2: 0x535,
      _0x3dd203: 0xf86,
      _0x45d75c: 0xbbf
    },
          a0_0x8227ad = {
      _0x19e25a: 0x185e,
      _0x3c859c: 0x1a8,
      _0x21f742: 0x1d0e,
      _0x4ecaf4: 0x14d2,
      _0x4e1e42: 0x19c5,
      _0x4e8839: 0x1321,
      _0x2202d8: 0x68c,
      _0x55af48: 0x14d2,
      _0x2ac8c6: 0x19c5,
      _0x5a472a: 0xf19,
      _0x4676f8: 0x121d,
      _0x4117b2: 0x19c5,
      _0xd9c2dc: 0x14d2,
      _0x4cbe9b: 0x14d2
    },
          a0_0x5f9280 = {
      _0x948588: 0x1870,
      _0x560a84: 0x91b
    },
          a0_0x54e8bf = {
      _0x3ea5c9: 0xa9d,
      _0x4546a4: 0x8bd,
      _0x41be25: 0x8bd,
      _0x36b6d5: 0xb54,
      _0x1dbef8: 0x1d66,
      _0x414e5a: 0x2072,
      _0x1b64c3: 0x535,
      _0x484fdf: 0x235b,
      _0x401c8f: 0x535,
      _0x5d0041: 0x13b0,
      _0x3c54dd: 0x2630,
      _0x4ab409: 0x1aab,
      _0x3df4e5: 0x136c,
      _0x4932b8: 0x1df4,
      _0x473b9d: 0x6ba,
      _0x31cc04: 0x128a,
      _0x4224f7: 0x128a,
      _0x402a76: 0x1df4,
      _0x54e84f: 0x15ff,
      _0x360e01: 0x12e1,
      _0xf9fde7: 0x18c3,
      _0xcabc18: 0x855,
      _0x509c07: 0x855,
      _0x2442a3: 0x157d,
      _0x4320ef: 0x432,
      _0x313847: 0x1420,
      _0x37d52f: 0x15ff,
      _0x499c9b: 0x17b4,
      _0x16add5: 0x129f,
      _0x24bc1b: 0x20f6,
      _0x11a490: 0x20f6,
      _0x4d55fa: 0x157d,
      _0x44b312: 0x129f,
      _0x6fe219: 0x1ccb,
      _0x2b94d0: 0x2646
    },
          a0_0x365b4d = {
      _0x927112: 0x235b,
      _0x22dc3c: 0x185e,
      _0x4c997f: 0x4e0,
      _0x5b4c3e: 0x14d2,
      _0x2f4c13: 0x1029,
      _0x245504: 0x14d2,
      _0x59aed1: 0x19c5,
      _0x3811f7: 0xe03
    },
          a0_0x5dfc38 = {
      _0x3a5f75: 0x1aab,
      _0x1dfcc1: 0x16c5,
      _0x3b0b1f: 0x1d66,
      _0x245fe8: 0x59d,
      _0x5612f2: 0xc95,
      _0x46e0ec: 0x11af,
      _0x1a0dcc: 0x14d2
    },
          a0_0x167824 = {
      _0x5ea075: 0x535,
      _0x18d3b6: 0x253d,
      _0x8d3a96: 0x1d66
    },
          a0_0x2ab216 = {
      _0x112b4f: 0x4b9,
      _0x5f226a: 0x11af,
      _0x7d204e: 0xc95,
      _0x45b02b: 0xfb2
    },
          a0_0x2ed145 = {
      _0x44d62b: 0x1e21,
      _0x1fc64d: 0x927,
      _0x1bfb6d: 0x20eb,
      _0x3603de: 0x1ec0,
      _0x243651: 0x14d2,
      _0x2b3867: 0x882,
      _0x567709: 0x19c5,
      _0x321332: 0x19c5,
      _0x506843: 0x121d
    },
          a0_0x25df44 = {
      _0xff71cb: 0x235b
    },
          a0_0x4918ce = {
      _0x5abc79: 0x535,
      _0x6806dd: 0x19e6
    },
          a0_0x5355e3 = {
      _0x4fb498: 0x21c3,
      _0x596c65: 0x190
    },
          a0_0x3ce2c8 = {
      _0x54acaf: 0x13d2,
      _0x345019: 0xffb,
      _0x3239fe: 0x1ec9,
      _0x48fffb: 0x14d2,
      _0x3f242d: 0x19c5
    },
          a0_0x5343e5 = {
      _0xb84ef6: 0x1985,
      _0x4f6336: 0x2530,
      _0x3ed91f: 0x16c5,
      _0x52ec36: 0x1fb8,
      _0x27142e: 0x6ba,
      _0x5ed567: 0x2606,
      _0x47c7db: 0x17a7,
      _0x3e95dd: 0xa9d,
      _0x196dae: 0x16c5,
      _0x1b0d88: 0x1d66,
      _0x39bcfc: 0x111b,
      _0x46c0c2: 0x9c2,
      _0x3bc95c: 0x186b,
      _0x5415f2: 0x2506,
      _0x533604: 0x12d8,
      _0x2ee049: 0x24e9,
      _0x308fbd: 0x535,
      _0x1cc31d: 0x1a50,
      _0x5c23b5: 0x24ee,
      _0x481b9b: 0x2317,
      _0x24c57d: 0x24ee,
      _0x2fe3fb: 0xfd6,
      _0x2ba15b: 0x2323,
      _0x1ef55a: 0x1a5,
      _0x52ae91: 0x1d2,
      _0x270994: 0x1aef,
      _0x4e3b08: 0x1da5,
      _0x13ffc7: 0xffb,
      _0x5b6838: 0x1449,
      _0x8f5e6c: 0x1d2
    },
          a0_0x3fbae8 = {
      _0x6b74c0: 0x2606,
      _0x132e1d: 0x235b,
      _0x88903a: 0xd3f,
      _0x513ae1: 0x263f,
      _0x14c55a: 0x2530
    },
          a0_0x218076 = {
      _0x3e26fb: 0x1ce7,
      _0x549d94: 0xf91,
      _0x3a1463: 0xf91
    },
          a0_0x549fbb = {
      _0xf9a374: 0x22a5
    },
          a0_0x3aa8a9 = {
      _0x188aec: 0x1d66,
      _0x2d69f8: 0x11dc,
      _0x4803c7: 0x169b,
      _0xfbbb6c: 0x1d66,
      _0x4c8278: 0x11dc,
      _0x3083df: 0x11dc,
      _0x43fdcd: 0x11dc,
      _0x504465: 0x1d66,
      _0x1c6302: 0x169b
    },
          a0_0x2031c6 = {
      _0x4d1ccb: 0x535,
      _0x4f10c1: 0x2215,
      _0x4f1570: 0x535,
      _0x52190c: 0x1985,
      _0x3d567f: 0x14c3,
      _0x2a7fd6: 0x1e3d,
      _0x593c6b: 0x204,
      _0x218998: 0x97a,
      _0xafaac8: 0x1f33,
      _0x31abde: 0x1985,
      _0xe8f3dd: 0x7df
    },
          a0_0x2d7dbe = {
      _0x2ae62c: 0x1d66,
      _0x49469c: 0x25fb,
      _0x4d5ee9: 0x535,
      _0x31058c: 0x1985,
      _0x3adcf5: 0x1fc6
    },
          a0_0x38d390 = {
      _0x28166f: 0x1d66,
      _0x24cc84: 0x1df9,
      _0x206ae3: 0xeb4,
      _0x1aa274: 0x535,
      _0x2c05b5: 0x1e11,
      _0x1365cb: 0x24f4,
      _0x4a4be7: 0x87c,
      _0x5eb13d: 0x1d66,
      _0x374ebc: 0x112b
    },
          a0_0x52c064 = {
      _0x3fc1b6: 0x1b0e,
      _0x39836a: 0x17f
    },
          a0_0x8db3d8 = {
      _0x3292f1: 0x228,
      _0x21bda7: 0x125a,
      _0x435d24: 0x18d5,
      _0x5ee689: 0x5fc,
      _0x3dc866: 0xe6d,
      _0x397d32: 0x1734,
      _0x3f3c02: 0xed6
    },
          a0_0x43aa9d = {
      _0x518c15: 0x12d8,
      _0x344895: 0x1ae6
    },
          a0_0x3804ec = {
      _0x5844e5: 0x4e3,
      _0x47ff66: 0x84f,
      _0x3b8c52: 0x12d8,
      _0x27ffcf: 0x138c,
      _0x19a9e8: 0x18f3,
      _0x3f9a55: 0x1a9f,
      _0x4714ac: 0x12d8,
      _0x37cae9: 0x1f2e
    },
          a0_0x1510bd = {
      _0x42239a: 0x35c,
      _0x5208e1: 0x191a,
      _0x5d26e1: 0x2318,
      _0x52f9cf: 0x191a,
      _0x3f526d: 0x18cb,
      _0x33b80a: 0x13b0
    },
          a0_0x1b5e13 = {
      _0x4da24f: 0x16c5,
      _0x4ac066: 0xf82,
      _0xd5c0c0: 0xe40,
      _0x3c7ad1: 0x235b,
      _0x1cf44e: 0x185e,
      _0x2df26e: 0xa26,
      _0x2f190c: 0x1700
    },
          a0_0x5973e = {
      _0x56545b: 0xffb
    },
          a0_0x3e2402 = {
      _0x449256: 0x17a7,
      _0x8021a6: 0x2662,
      _0x2d4c7c: 0x1a12,
      _0x14691e: 0x2292,
      _0x38d7f8: 0x1ebb
    },
          a0_0x201a18 = {
      _0x527923: 0x1199,
      _0x5a2700: 0x17f,
      _0x26c948: 0x287,
      _0x54ecb2: 0xf2f,
      _0x51ee63: 0x9c2,
      _0x2a1719: 0x1d66,
      _0x3ea1d7: 0x2072
    },
          a0_0x48115f = {
      _0x13f88d: 0xa9d,
      _0x2f517f: 0x16c5,
      _0x26726b: 0x16c5,
      _0x4bfa43: 0x1d66,
      _0x2d73df: 0x111b,
      _0x3a851c: 0x15e0,
      _0x15061c: 0xd79,
      _0x2d4b41: 0x2422,
      _0x2aa341: 0x10f6,
      _0x3adbee: 0x2521,
      _0x28b374: 0x497,
      _0x52c369: 0x261,
      _0x3ced9e: 0x15e0,
      _0x535812: 0x23b1
    },
          a0_0x218931 = {
      _0x5c6421: 0x535,
      _0x3908ec: 0x1b8a,
      _0x4290a2: 0x1e35,
      _0x2c425d: 0x1acd,
      _0x5376ca: 0x1f46,
      _0x218a41: 0x1d66,
      _0x424938: 0x663,
      _0x5692bc: 0x1eed
    },
          a0_0x3fb778 = {
      _0x32a3cf: 0x2606,
      _0x2f031a: 0xf82,
      _0x17b58a: 0x2379,
      _0x542ae6: 0x1870,
      _0x3c0180: 0x1700,
      _0x4a4f5c: 0x112d,
      _0x5098eb: 0x17f
    },
          a0_0x299753 = {
      _0x365d65: 0x16c5,
      _0x4846da: 0x17f
    },
          a0_0xacbe35 = {
      _0x481fbb: 0x235b,
      _0x5678a5: 0x185e,
      _0x173893: 0xa26,
      _0x84d95e: 0x1d66,
      _0x373785: 0x1080,
      _0x3f0dc6: 0x1985,
      _0x39f42b: 0x535,
      _0x53ab18: 0x17ff,
      _0x36a7c4: 0x1985,
      _0x3798ab: 0x2530,
      _0x11b8e5: 0x2530,
      _0x2ec3b8: 0x1c16,
      _0x589125: 0x1985,
      _0x4018cf: 0x2530
    },
          a0_0x473f74 = {
      _0x517574: 0x1d55,
      _0x123575: 0x14d2,
      _0x3c2156: 0x19c5,
      _0x453c01: 0x1029,
      _0x42f660: 0x1105,
      _0x17290a: 0x19c5,
      _0x23a8d8: 0x604,
      _0x5477e1: 0x14d2,
      _0x2c9a31: 0x19c5,
      _0x2a7117: 0x8e3,
      _0x17ef61: 0x14d2,
      _0x2996b4: 0x196e,
      _0x3a8fe9: 0x19c5,
      _0x57de01: 0x14d2,
      _0x10f32a: 0x2536,
      _0x31b08d: 0x14d2,
      _0x5df6a4: 0x19c5,
      _0x37c77f: 0x14d2,
      _0x2962db: 0x411,
      _0x1a668f: 0x19c5,
      _0x1841d6: 0x19b3,
      _0x8bee52: 0x14d2,
      _0x24e31c: 0x1661,
      _0x403741: 0x258b,
      _0x48f62d: 0x14d2,
      _0x5b6957: 0x1bcf,
      _0x4af771: 0x1c1,
      _0x5b629e: 0x14d2,
      _0x2a1648: 0x19c5,
      _0x376c3f: 0x7bb,
      _0x8a5516: 0x12eb,
      _0x49d482: 0x14d2,
      _0x193c59: 0x19c5,
      _0x4a97b3: 0x14d2,
      _0x4ee832: 0x392,
      _0x27ee1a: 0x14d2,
      _0x21aeb9: 0x19c5,
      _0x54925d: 0x1e2e,
      _0x13d3e3: 0x1efe,
      _0xd8475d: 0xf5a,
      _0x800ca0: 0x1856,
      _0x24872c: 0x22d0,
      _0x382fb4: 0x2599,
      _0x1d59e8: 0x70f,
      _0x471edb: 0x208e,
      _0x194439: 0x2153,
      _0x1bba25: 0x121d,
      _0xac6bf7: 0xcd6,
      _0x43bc31: 0x1af1,
      _0x581e97: 0xcdf,
      _0x20cfe3: 0x411,
      _0x5977fe: 0x1fc6,
      _0x436709: 0x2f2,
      _0x512050: 0x535,
      _0x15e57d: 0x2636,
      _0x3c9de6: 0x535,
      _0x47bf83: 0x1985,
      _0x31449c: 0xb3a
    },
          a0_0x408b6d = {
      _0x2a1dc3: 0x1aef
    },
          a0_0x4e8680 = {
      _0x47d1aa: 0x1efe
    },
          a0_0x3f7b5c = {
      _0x1611fe: 0x1856,
      _0x52892e: 0x1f30
    },
          a0_0x5e8020 = {
      _0x5dc39a: 0x2174,
      _0x59045d: 0x1e3d,
      _0x4ab529: 0x1707,
      _0x3820a6: 0x2085,
      _0x44a8ee: 0x2085,
      _0x3eeef0: 0x2085,
      _0x1782e6: 0x2085
    },
          a0_0x18c872 = {
      _0x5438e6: 0x1c93,
      _0x5d0f6a: 0x12d6,
      _0xaf8f04: 0x95c,
      _0x196327: 0x127d,
      _0x4d27b4: 0x10ad,
      _0x2beeed: 0x1da5,
      _0x2a1a69: 0x21d3
    },
          a0_0x5dea0a = {
      _0x519103: 0x2606,
      _0x3de98f: 0x16c5,
      _0x1fe792: 0x1578,
      _0x773a7c: 0x1a12,
      _0x1857e7: 0x2292,
      _0x3a0800: 0x1ebb,
      _0x3ad950: 0x1578
    },
          a0_0x456919 = {
      _0x69f709: 0x1291,
      _0x18b2bd: 0x2606
    },
          a0_0x59f748 = {
      _0x2b74e4: 0x2292,
      _0x30975a: 0xb9e
    },
          a0_0x35b616 = {
      _0x12067b: 0x6c5
    },
          a0_0x6c3898 = {
      _0x1aa3c1: 0x4a7,
      _0x361201: 0x1f28,
      _0x386bd3: 0xa7f,
      _0x42cb04: 0x7ba,
      _0x3bff40: 0x535,
      _0x2e0ec6: 0x13b0,
      _0x5c9e64: 0x1e37,
      _0x282d6a: 0xebb,
      _0x42bd6c: 0xc28,
      _0xf2645e: 0x1c66,
      _0x4cef4f: 0x535,
      _0x1b0b7e: 0x3e9,
      _0x24e78b: 0x235b,
      _0x27a352: 0x185e,
      _0x4b3696: 0x2605
    },
          a0_0x3d7f76 = {
      _0x4ec525: 0x535,
      _0x54d3d6: 0x535,
      _0x323e43: 0x12a3
    },
          a0_0x142e2d = {
      _0x56f301: 0xa92
    },
          a0_0x37f49d = {
      _0x1453d3: 0x535,
      _0x2786b2: 0x253d,
      _0x1c48e2: 0x183f,
      _0x47beda: 0x535,
      _0x2f13a4: 0xf86,
      _0x41de47: 0xbbf
    },
          a0_0x5b0186 = {
      _0x1b2a26: 0x1d55,
      _0x374eba: 0x1707,
      _0x28bbf7: 0x2606,
      _0x5cfcd2: 0xf82,
      _0x571b8c: 0x1d66,
      _0x8875d0: 0x2379,
      _0xfdb225: 0xa9d,
      _0x2370f1: 0x1d55,
      _0xfca24b: 0x14d2,
      _0x3598a3: 0x20dc,
      _0x1af752: 0x24bc,
      _0x8327a8: 0x879,
      _0x59d860: 0x19c5,
      _0x1a2ac7: 0xd17,
      _0x3abf00: 0x121d,
      _0x4d2590: 0x753,
      _0x19673f: 0x1d66,
      _0x3054cc: 0x24c5,
      _0x663e0d: 0x1d55,
      _0x51fff7: 0x929,
      _0x55f3c9: 0x2530,
      _0x26ca26: 0x263f,
      _0x47c3d6: 0x1277,
      _0x11c41f: 0x1d55,
      _0x7219c1: 0x2085,
      _0x35e482: 0x1d2,
      _0x4a3fca: 0x14d2,
      _0x3a354f: 0x1e5f
    },
          a0_0xccaf54 = {
      _0x3507e4: 0x1c80,
      _0x5544ff: 0x16c5,
      _0x314d66: 0x19e6,
      _0x58f1f9: 0x17f
    },
          a0_0x11909c = {
      _0x701a46: 0x16c5,
      _0x321950: 0xe95,
      _0x2d5d62: 0x535,
      _0x43d666: 0x1d66,
      _0x4a696d: 0x235b,
      _0x432d86: 0xf82,
      _0x35fe64: 0x13b4,
      _0x13280d: 0x10f6,
      _0x316d23: 0x2530,
      _0x48c0f7: 0x2140,
      _0xa4b42f: 0x2530,
      _0x45d026: 0x2180,
      _0x2815b4: 0x1c66,
      _0x26ac77: 0x1cd8,
      _0x441e41: 0x52c,
      _0x45d6e6: 0x22e6,
      _0x23ba06: 0x1199,
      _0x2c0f20: 0x1d66,
      _0x353f04: 0x535,
      _0x5d5586: 0x215f,
      _0x20897b: 0x96f,
      _0x4462d9: 0xffc,
      _0x16e655: 0x1f09,
      _0x22a43c: 0xbca,
      _0x2598d0: 0x215f,
      _0x38a8de: 0x2180,
      _0xee6a5f: 0x25df,
      _0x37e5f5: 0x1d66,
      _0x3d83b9: 0xf2f,
      _0x156a0c: 0x101e,
      _0x55a24b: 0xf2f,
      _0xb8254c: 0x111b,
      _0x180cdd: 0x9ba,
      _0x4e824e: 0xbef,
      _0x24bee3: 0x14d2,
      _0x507dd2: 0x1da5,
      _0x25d3fa: 0x64b,
      _0x4afaa5: 0x535,
      _0x4c1ef2: 0x244b
    },
          a0_0x48c512 = {
      _0x2a4360: 0x9c8,
      _0x2b8335: 0x213a,
      _0xa64b73: 0x19d6,
      _0x3ce425: 0x235b,
      _0x3c69d6: 0x185e,
      _0x347bef: 0xc95,
      _0x5c5f46: 0x146b,
      _0x4d34af: 0x11d9,
      _0x3b20f7: 0x235b,
      _0x59bd2b: 0x21e0,
      _0x3a90bc: 0x14d2,
      _0x26b8fa: 0x1da5,
      _0x35206f: 0x2401,
      _0x3e433b: 0x1e3d,
      _0x289a24: 0x535,
      _0x10f6db: 0x1a50,
      _0x1b5e2f: 0x1da5
    },
          a0_0xc2dfd2 = {
      _0xa16ca8: 0x17be,
      _0x822475: 0x1e3d
    },
          a0_0x137e8c = {
      _0x4fc173: 0x235b,
      _0x136c12: 0x1d55,
      _0x1b11e6: 0xe6d,
      _0x3e54fe: 0x19c5,
      _0x1b6a21: 0x14d2,
      _0x3e690a: 0x1105,
      _0x29826e: 0x14d2,
      _0x3df9ad: 0x19c5,
      _0x232512: 0x19c5,
      _0x1eb4ca: 0x53f,
      _0x42b5b0: 0x14d2,
      _0x396c9a: 0x1716,
      _0x4a793a: 0x14d2
    },
          a0_0x58e5b4 = {
      _0xd7c1d3: 0x1a3,
      _0x1bd67b: 0x1534
    },
          a0_0x2cce71 = {
      _0x1e311f: 0x2488,
      _0x4525da: 0x904
    },
          a0_0x233966 = {
      _0x2414da: 0x535,
      _0x6b9b89: 0x535,
      _0x220088: 0x12a3,
      _0x54c0a7: 0x14d2,
      _0x29d189: 0x778
    },
          a0_0x375b90 = {
      _0x36db76: 0x2488,
      _0x4f7afa: 0xa9d,
      _0x281dd4: 0x16c5,
      _0x2021c6: 0x1199,
      _0x17ad09: 0x17f,
      _0x34e35c: 0x2072,
      _0x11b3ff: 0x14d2,
      _0x338bfd: 0x1da5,
      _0x1de7e7: 0x662,
      _0x561e28: 0x535,
      _0xde8814: 0x52c,
      _0x612ad: 0x535,
      _0x58befc: 0x1cd8
    },
          a0_0x276446 = {
      _0x6a362e: 0x385,
      _0x5e44af: 0x213a,
      _0x5b4740: 0x2488,
      _0x57ae6c: 0x4a3,
      _0xdbfc2: 0x12ff,
      _0x2672dc: 0xa9d,
      _0x3cacc5: 0xf82,
      _0x2acc9c: 0x1d55,
      _0x4a5348: 0x2521,
      _0x44cc64: 0x1199,
      _0x1c3255: 0x1d66,
      _0x262d22: 0x2072,
      _0x15810e: 0xd79,
      _0x2fa97b: 0x1d66,
      _0x5b7e23: 0x880
    },
          a0_0x3a9777 = {
      _0x574d23: 0x235b,
      _0x7066e8: 0x19c5,
      _0x5d32af: 0x1593,
      _0x20f2db: 0x14d2,
      _0x59ab90: 0x19c5,
      _0x12e740: 0x1029,
      _0x21ee19: 0x14d2,
      _0x1d060a: 0x1808,
      _0x2a1b49: 0x19c5,
      _0x548d0d: 0x879,
      _0x4a48bc: 0x2285,
      _0x28450f: 0x1579,
      _0x19f836: 0x19c5,
      _0x5ef5a0: 0x204f,
      _0x1b468a: 0x1ec8,
      _0x2017d7: 0x19c5,
      _0x2045d3: 0x2382
    },
          a0_0x2ea012 = {
      _0x18c93a: 0x1fc1,
      _0x5f152a: 0x1629,
      _0x287735: 0x1d66,
      _0x3dec4f: 0x1fe9,
      _0x595b47: 0x2134,
      _0x38f5f6: 0x490,
      _0x291564: 0x535,
      _0x1e2226: 0x1b37,
      _0xb65937: 0x91b
    },
          a0_0x1ed4bb = {
      _0x45a069: 0x535,
      _0x3cb6b9: 0x1063
    },
          a0_0x3afadf = {
      _0x19c2a8: 0x535,
      _0xf40e1b: 0x1924
    },
          a0_0x4ce62a = {
      _0x623b06: 0x535
    },
          a0_0x4c954d = {
      _0x7e8d7e: 0x56a,
      _0x490c77: 0x1568,
      _0x202883: 0x131c
    },
          a0_0x3da0c6 = {
      _0xbc32d9: 0x235b,
      _0x396301: 0x16c5,
      _0x415cee: 0x3e9,
      _0x3c0515: 0x14d2,
      _0xc5cea8: 0x13f4,
      _0x382fe6: 0x535,
      _0x8af435: 0x2530
    },
          a0_0x400e53 = {
      _0xa78314: 0x535,
      _0x3ababf: 0x74c,
      _0x335f62: 0x242c,
      _0x99e637: 0x23c9,
      _0x49aba2: 0x385,
      _0x4530b3: 0x1e94,
      _0xfd6752: 0x13f4,
      _0x41c2a8: 0x20c2,
      _0x46cc45: 0x1d66,
      _0x59a213: 0x1870
    },
          a0_0x564577 = {
      _0x408222: 0x235b,
      _0x2a7a59: 0x185e,
      _0x567557: 0xce4,
      _0x47a4f7: 0xb1b,
      _0x91f96: 0xb1b,
      _0x126934: 0xb1b,
      _0x522bc2: 0x178e,
      _0x3b0362: 0x208c,
      _0x42df9b: 0x178e,
      _0x2ff068: 0x14d2,
      _0x156ea9: 0x19c5,
      _0x487a3a: 0x1e5f,
      _0xa90903: 0x1808,
      _0x27fa91: 0x1b75,
      _0x33328d: 0x22e7,
      _0x3eae5d: 0x479,
      _0x5f125e: 0x3eb,
      _0x251351: 0x2545,
      _0x4adce6: 0xfc4,
      _0x19a541: 0x535,
      _0x1d1c9a: 0x1b37,
      _0x3ca7ab: 0x23e6,
      _0x8321fc: 0x18dd,
      _0x6c25ad: 0x8ba,
      _0xf18624: 0x14d2,
      _0x93e996: 0x19c5,
      _0x3d00e5: 0x1105,
      _0x60a64b: 0x14d2,
      _0x36f18b: 0x19c5,
      _0x10015b: 0x201c,
      _0x224b4f: 0x11c7,
      _0x27182d: 0x1bab,
      _0x40649d: 0x19c5,
      _0x26bba5: 0x14d2,
      _0x38bf86: 0x19c5,
      _0x5a1374: 0xb98,
      _0x1f7b16: 0x14d2,
      _0x80e99f: 0x1eae,
      _0x294b9a: 0x14d2,
      _0x7405fe: 0x19c5,
      _0x3ce8fa: 0x753,
      _0x57bf6e: 0x24bc,
      _0x418ad8: 0x13df,
      _0x592f48: 0x24bc,
      _0x50a6f9: 0x879
    },
          a0_0x451462 = {
      _0x5cda04: 0x1063
    },
          a0_0x292332 = {
      _0x408977: 0xe74,
      _0x38c065: 0x535
    },
          a0_0x5062e5 = {
      _0x2f0216: 0x535,
      _0x153628: 0x74c,
      _0x50a8e8: 0x23c9,
      _0x573ca6: 0x1ec5,
      _0x20eeda: 0x385,
      _0x34ab4e: 0x213a,
      _0x223ab2: 0x19d6,
      _0x5016d2: 0x1c3e
    },
          a0_0xc12d11 = {
      _0xa7a711: 0xe74
    },
          a0_0x409ef7 = {
      _0x39797e: 0x19d6,
      _0x2bf558: 0x19d6
    },
          a0_0xf03ef3 = {
      _0x5ba4da: 0xe6d,
      _0x35c1fe: 0x1a60,
      _0xe67948: 0xf2f,
      _0x593fb1: 0xb0f,
      _0x32b0f6: 0x535
    },
          a0_0x1eed18 = {
      _0x3f5573: 0x535,
      _0x3a0991: 0x1063
    },
          a0_0x5167f1 = {
      _0x1c3651: 0x1ec5,
      _0x10e58b: 0x213a,
      _0x4ece1e: 0x11dc,
      _0x17ba49: 0xa9d,
      _0x491293: 0x3b1,
      _0x22dbfc: 0x1d55,
      _0x41dfcc: 0xe48,
      _0x48f675: 0x1d66,
      _0x31c3f4: 0xd79,
      _0x257e23: 0x535,
      _0x19cabd: 0x13b0
    },
          a0_0x451b87 = {
      _0x671d0e: 0x21b2,
      _0x4e8fcf: 0x163f,
      _0x181f96: 0x1d55,
      _0x9df4a2: 0x1d55,
      _0x1efcaf: 0x1d66,
      _0x189ac1: 0xf2f,
      _0x5dc409: 0x1d66,
      _0x279979: 0xf2f,
      _0x3d4768: 0xf2f,
      _0x4b404d: 0xf8f,
      _0x3a88c3: 0x338,
      _0x3eb243: 0x2be,
      _0x4b804c: 0x2e3,
      _0x2cb198: 0x1759,
      _0x33b1cc: 0xe15,
      _0x19aca2: 0xe1b,
      _0x917ff4: 0x16c5,
      _0x388dd9: 0x13b4,
      _0x3cbf6f: 0x1d66,
      _0x1f6996: 0x2379,
      _0x4a9f0b: 0x208c,
      _0x517168: 0xc90,
      _0x978bc1: 0x86d,
      _0x2bc5c9: 0x86d,
      _0x3c9076: 0xe1b,
      _0x579f40: 0x18dd,
      _0x2e59f9: 0x86d,
      _0x48e7f7: 0x1d66,
      _0xfc29ab: 0x1870,
      _0x1d0d5b: 0x91b
    },
          a0_0x2c4473 = {
      _0x2f7b9d: 0x19e6,
      _0x32904d: 0x1672,
      _0x5b09c7: 0x1d66,
      _0x33a8da: 0x2379,
      _0x90917c: 0x208c,
      _0x466b26: 0xc90,
      _0x4ee65b: 0x24ce,
      _0x2f3b63: 0x18dd,
      _0x18fd2e: 0xe1b,
      _0x24f827: 0x2530,
      _0x3b2c01: 0xf2f,
      _0x184da2: 0x2530,
      _0x1131c4: 0x2379,
      _0xc88c43: 0x1d8c,
      _0x1169aa: 0x2530,
      _0x5da088: 0x2379,
      _0x3c28b5: 0xf2f,
      _0x2d64df: 0x1d66,
      _0x2fc49e: 0x2379,
      _0x2f6efd: 0x1d66,
      _0x5640fb: 0x1d66,
      _0x2df355: 0xf2f,
      _0x19f625: 0x219,
      _0x101b21: 0x1d66,
      _0x499cda: 0x2530,
      _0x2b0b47: 0x1bed,
      _0xb26cb8: 0x11dc
    },
          a0_0x308bc3 = {
      _0x1a7a6d: 0x235b,
      _0x111430: 0x185e,
      _0x5a4867: 0x2379,
      _0x43836e: 0x1d55,
      _0x4803a0: 0x2405,
      _0x299e7b: 0x19c5,
      _0x4d3043: 0x14d2,
      _0x3ee178: 0x19c5,
      _0x1f5881: 0x1808,
      _0x67ca30: 0x1105,
      _0xf9d6e3: 0x14d2,
      _0x45f3a4: 0xffb
    },
          a0_0x7995bf = {
      _0x21a271: 0x1d66,
      _0x53b304: 0xf2f,
      _0x6e6bb1: 0x1b3a,
      _0x54d7a7: 0x1d0,
      _0x36889d: 0x1d62,
      _0x2c148a: 0x2530
    },
          a0_0x255584 = {
      _0x4df8df: 0xffb,
      _0x318f89: 0x1157
    },
          a0_0x4a7653 = {
      _0x4aeda9: 0x2054,
      _0x5539fa: 0x6b3
    },
          a0_0x21d9b8 = {
      _0xaa94fe: 0x1c66,
      _0x1ae701: 0x535
    },
          a0_0x293537 = {
      _0x2edc03: 0x1d66,
      _0x17ee5d: 0x59d
    },
          a0_0xfc66d0 = {
      _0x519e37: 0x1d55,
      _0x4dc3ba: 0x1269,
      _0x35a97a: 0x2379,
      _0x3d27d1: 0x168,
      _0x317ae8: 0x1269
    },
          a0_0x2297fa = {
      _0x558aa7: 0xa59,
      _0xec93b5: 0x1269,
      _0x1d0cbe: 0x185e,
      _0x26df78: 0x118a,
      _0x2116b9: 0x11cd,
      _0x21200f: 0x531,
      _0x33804c: 0x1d66,
      _0x392e02: 0x2379,
      _0x28cc29: 0x2405,
      _0xb692cb: 0x1aab,
      _0x2ff7da: 0xf82,
      _0x131caa: 0x22ba,
      _0x2b061c: 0x1d55,
      _0x140544: 0xda6,
      _0x145fb4: 0xf82,
      _0x486a1c: 0x1d55,
      _0x374731: 0x2405,
      _0x156e1c: 0x1bbe,
      _0x4b773f: 0x716,
      _0x4a9c58: 0x14d2,
      _0x1bf960: 0x14d2,
      _0x2b0ab2: 0x19c5,
      _0x569901: 0x9e7,
      _0x3c2403: 0x1029,
      _0x4a37d0: 0x14d2,
      _0x21d8ab: 0x1105,
      _0x29368c: 0x19c5,
      _0x4d2444: 0x121d,
      _0x125f0a: 0x2036,
      _0x4d964e: 0x206e,
      _0x344021: 0x14d2
    },
          a0_0x1a1fd6 = {
      _0x35a89e: 0x1d66,
      _0x55cbdb: 0x1d35,
      _0x2ae314: 0x1e35,
      _0x2adaed: 0x17fa,
      _0x303bb1: 0x1d66,
      _0xe318ec: 0x1c1d,
      _0x4283c6: 0x1cfb
    },
          a0_0x268182 = {
      _0x1c7c50: 0x1e78,
      _0x357ee0: 0x535,
      _0x5a407b: 0xbb5,
      _0x23451d: 0xe94,
      _0x13499b: 0x2344,
      _0x5cd082: 0x25e3,
      _0xbbc847: 0x1e78,
      _0x7f03e9: 0x100e,
      _0x4c1f7f: 0x1d66,
      _0x2677e1: 0x1e35
    },
          a0_0x425fdd = {
      _0x22af91: 0xa59,
      _0xe9b5e: 0x1bbe,
      _0x3b1982: 0x14d2
    },
          a0_0x4de2be = {
      _0x11c458: 0x535,
      _0x569472: 0x59d,
      _0x504482: 0x14d2,
      _0x24115b: 0x535,
      _0x3dc271: 0x1ea6,
      _0x334f65: 0x1edc,
      _0x15132f: 0x1cd8,
      _0x73e651: 0x535,
      _0x1f9d40: 0x52c,
      _0x471049: 0xa9d,
      _0xa65105: 0xf82,
      _0x54e366: 0x2521,
      _0x44ddf1: 0x1199,
      _0x5ab39f: 0x2072,
      _0x4e1400: 0xd79,
      _0x26c955: 0x8a5,
      _0x4efeb3: 0x1d66,
      _0x33be01: 0x1870,
      _0x3e0c3e: 0xa9d,
      _0x1c1d12: 0x17f,
      _0x56cbdd: 0x25df
    },
          a0_0x4c4afe = {
      _0xf0d88c: 0x535,
      _0x4200ae: 0x253d,
      _0x40c7f2: 0x1edc,
      _0x28f73f: 0x535,
      _0x127ef7: 0xf86,
      _0x3625e2: 0x1be2,
      _0x55d2c1: 0xd26
    },
          a0_0x319c2d = {
      _0x34714e: 0x235b,
      _0x9c1b3d: 0x185e,
      _0x5a3f38: 0x90f,
      _0x32e77e: 0x8ce,
      _0x3d087c: 0x90f,
      _0x244fd8: 0x8ce,
      _0x1a52e3: 0x8ce,
      _0x111a65: 0x8ce,
      _0x214bd2: 0x90f,
      _0x13e49a: 0x90f,
      _0x9ea5e7: 0x8ce,
      _0x26bcca: 0x14d2,
      _0x57f00c: 0x19c5,
      _0x4fec58: 0x14d2,
      _0x320550: 0x19c5,
      _0x3bc490: 0x2379,
      _0x27bb96: 0x8fc,
      _0x1fd586: 0x19c5,
      _0x5c26cc: 0x121d,
      _0x1b3fad: 0x2036,
      _0x3c522c: 0x14d2,
      _0x3d14a9: 0x19c5,
      _0x43a681: 0x14d2,
      _0x38dd1f: 0x19c5,
      _0x1fdc0c: 0x2029,
      _0x54fff7: 0x181
    },
          a0_0xd824ef = {
      _0xced093: 0x17f
    },
          a0_0x2b1a2b = {
      _0x47d01d: 0xed2
    },
          a0_0x1fc45b = {
      _0x59dccf: 0x1d66,
      _0x194d94: 0xf2f
    },
          a0_0x3c7fe7 = {
      _0x3df09e: 0x235b,
      _0x1927c8: 0x235b,
      _0x5c5ddb: 0x535,
      _0x280dd4: 0x178c
    },
          a0_0x18dfcf = {
      _0x352cd8: 0x12d8,
      _0x2f1a47: 0x5fb
    },
          a0_0x394c65 = {
      _0x309197: 0x14d2,
      _0x545b41: 0x1937,
      _0x185b2c: 0x1d66,
      _0x7d0cea: 0xf2f,
      _0x542d68: 0x1b3a,
      _0x44aae2: 0xe9b
    },
          a0_0xe398ec = {
      _0x3327b2: 0x12d8,
      _0xf9f2f3: 0x10ed,
      _0x32bd4a: 0x11fc
    },
          a0_0x15ebec = {
      _0x29ff9c: 0x1edc,
      _0x34332c: 0x535,
      _0x550674: 0xa58,
      _0x39349c: 0xbb5,
      _0x3dabaf: 0x1485
    },
          a0_0xd79e1f = {
      _0x381ba1: 0x1063
    },
          a0_0x39c622 = {
      _0x4a9c30: 0x1d66,
      _0x177965: 0x1269,
      _0x372ba0: 0x1438
    },
          a0_0x17fb85 = {
      _0x2d4a95: 0x235b,
      _0x487bbb: 0xed3,
      _0x406963: 0x86b,
      _0x1723f8: 0x86b,
      _0x41ce81: 0x208c,
      _0x4752ac: 0x178e,
      _0x3dfa3d: 0x178e,
      _0x146698: 0x178e,
      _0x37fc17: 0x208c,
      _0x4dcd8a: 0x208c,
      _0x336a72: 0x14d2,
      _0xa703d4: 0x2d7,
      _0x5398f6: 0x14d2,
      _0x58d1f8: 0x19c5,
      _0x3aed57: 0x14d2,
      _0x27e1c9: 0xd17,
      _0x1dea11: 0x19c5,
      _0x1b79c7: 0x19c5,
      _0x533ccc: 0x1a5e,
      _0x154f4d: 0x14d2,
      _0x1c13ab: 0x19c5,
      _0x1a8fb3: 0x14d2,
      _0x4c7bad: 0x20bc,
      _0x33faed: 0x1495,
      _0x52c5c4: 0x14d2,
      _0xc6a517: 0x1a3d,
      _0xd6cbb5: 0x19c5,
      _0x2a22d6: 0x226f,
      _0x175348: 0x590,
      _0x5a7167: 0x25ed,
      _0x2a19be: 0x1bab,
      _0x2d6756: 0x14d2,
      _0x427a58: 0x13cf,
      _0x53400f: 0x1ae9,
      _0x51a384: 0xdb8,
      _0x3a9534: 0x1989,
      _0x2f26b7: 0x8e2,
      _0x50a680: 0x988,
      _0x59de6c: 0x21e,
      _0x3c80df: 0x1611,
      _0x3e706c: 0x1a64,
      _0x1d6637: 0x233d,
      _0xf0e4ac: 0x14d2,
      _0x3bed3d: 0x19c5,
      _0xf80625: 0x1efc,
      _0xb4a4fd: 0x14d2,
      _0x3a5a91: 0x19c5,
      _0x5bb7e3: 0x14d2,
      _0x4d11a9: 0x121d,
      _0x32b154: 0x879,
      _0x239ec8: 0x13df,
      _0x77655e: 0x2285,
      _0x1da919: 0x1d66,
      _0x52a93c: 0x1fe9,
      _0xcd817f: 0x1be4,
      _0x172d00: 0x1d66,
      _0x26ec9a: 0x2379,
      _0x79c609: 0x86b,
      _0x4a0a4c: 0x1fe9,
      _0x1e15e5: 0x2379,
      _0x428949: 0x13c2,
      _0x27af79: 0x1d66,
      _0x3962ac: 0x1d66,
      _0x295817: 0x13c2,
      _0x42620f: 0x1be4,
      _0x329be2: 0x1776,
      _0x4e1f24: 0x2379,
      _0x7d15f1: 0x1776
    },
          a0_0x3c7ab5 = {
      _0x3df1d0: 0x535
    },
          a0_0x44310f = {
      _0x252afb: 0x82d,
      _0x9d4891: 0x1063
    },
          a0_0x4c7450 = {
      _0x2c3a9d: 0x535,
      _0x373c39: 0x253d,
      _0x263558: 0x23c9,
      _0x22694a: 0x1ec5,
      _0x3077ba: 0x213a,
      _0x4f7163: 0xf2f,
      _0x3d8b14: 0x169e,
      _0x55bacb: 0x25c3
    },
          a0_0x55b03f = {
      _0x548dfd: 0x535,
      _0x58bcd4: 0x253d,
      _0x3b1d40: 0x213a,
      _0x18e692: 0x19d6,
      _0x572a9b: 0x535,
      _0x15325a: 0x1d66,
      _0x2265c7: 0xf2f,
      _0x2ca2ae: 0x1c3e,
      _0x9eaa17: 0x1a4c
    },
          a0_0x233662 = {
      _0x18a9c5: 0xe74,
      _0x3b4873: 0xee5
    },
          a0_0x34ac54 = {
      _0x4d4024: 0x190,
      _0x506c72: 0x535
    },
          a0_0x342663 = {
      _0x5b465e: 0x790,
      _0x503c22: 0x401,
      _0x64c4a1: 0x13b0,
      _0x175ff3: 0x19d6,
      _0x4c5de0: 0x264a,
      _0x3a718b: 0x790,
      _0x55429c: 0x258a,
      _0x44b967: 0x258a,
      _0x1c91d8: 0x790,
      _0x20633e: 0x258a,
      _0x2b2f93: 0x190
    },
          a0_0x540bf5 = {
      _0x3154e7: 0x191a,
      _0x1e7dd0: 0x13b0,
      _0x24b2e4: 0x1063
    },
          a0_0x3a1efd = {
      _0x5363fd: 0x35c,
      _0x5f20d6: 0x191a,
      _0x14e9ea: 0x191a,
      _0x4e923c: 0x17a,
      _0x298b65: 0x191a,
      _0x4b6e34: 0x1264,
      _0x1ea78f: 0x157d,
      _0x3a6af2: 0xe74,
      _0x355e19: 0x19d6,
      _0x2843e4: 0x19d6,
      _0x2874c9: 0x535
    },
          a0_0x2d9c66 = {
      _0x34e6e6: 0x10e9
    },
          a0_0x6a77ff = {
      _0x27339b: 0x1ba8,
      _0x37168f: 0xe6d,
      _0x93a22e: 0x34b,
      _0x23963a: 0xe6d
    },
          a0_0x55f56e = {
      _0x1eb02e: 0x119d,
      _0x5cf71f: 0x1ba8,
      _0x4ea314: 0x34b,
      _0x4bf2cc: 0x19e0,
      _0x1a5195: 0xe6d,
      _0x1a5dd7: 0x119d,
      _0x1f07ed: 0x56e
    },
          a0_0x719dba = {
      _0x512c0e: 0xe1b,
      _0x61f9fb: 0x20dd
    },
          a0_0x5844a9 = {
      _0x2ab1ec: 0x1bbe,
      _0x14d699: 0x1da5
    },
          a0_0x1c4042 = {
      _0xdd19a0: 0x1da5,
      _0x1ce266: 0xc12
    },
          a0_0x50bec6 = {
      _0x58e4eb: 0x235b,
      _0x155a79: 0x1c66,
      _0x5a47a5: 0x21b2,
      _0xb5a306: 0x1700,
      _0x2b78da: 0x14d2,
      _0x5205cf: 0x1a5,
      _0x229722: 0x52c,
      _0x4bde3d: 0x535,
      _0x5e0c13: 0x3e9,
      _0x2bcaac: 0x24c8,
      _0xb94d64: 0x1d66,
      _0x29da23: 0xf2f,
      _0x111d36: 0x535,
      _0x3aeac7: 0x1985,
      _0x39bc08: 0x263f
    },
          a0_0x580e2a = {
      _0x30bd1a: 0x1ec5,
      _0x1f66dc: 0x3a7,
      _0x312bc1: 0x1f92,
      _0x5bc1dc: 0x14d2,
      _0x1c38b4: 0x1a91,
      _0xcdd018: 0x21b2,
      _0x3a9277: 0x535,
      _0x52c118: 0x1c66,
      _0x1a3cf5: 0x59d,
      _0x57262a: 0x91b,
      _0x2fea13: 0x1d66,
      _0x44e839: 0x11dc,
      _0x19cb8d: 0x1da5,
      _0x488ed8: 0x1240,
      _0x32d02d: 0x1870
    },
          a0_0x2244d2 = {
      _0x324b76: 0x19e6,
      _0x209377: 0x2530,
      _0x17cd28: 0xe1b,
      _0x1a8fa2: 0x1d66,
      _0x244176: 0x1d8c,
      _0x1f28e8: 0x2379,
      _0x5ae813: 0x7c3,
      _0x3dd296: 0xe1b,
      _0x5d08d9: 0xf2f,
      _0x2e8341: 0x1d66,
      _0x58a01b: 0x2379,
      _0x2c4666: 0xf2f,
      _0x1903e2: 0x2530,
      _0x5069de: 0x23a0,
      _0x32d711: 0x2530,
      _0x3cb4e9: 0x1d8c,
      _0x5bc574: 0xbb7,
      _0x4374b7: 0xe1b,
      _0x3db52a: 0xe1b,
      _0x5c1372: 0xb99,
      _0x497dc1: 0x1edc,
      _0x1bd1a9: 0x1985,
      _0x221805: 0x16ef,
      _0x49060c: 0x21b2,
      _0x359406: 0x14d2,
      _0x45a385: 0x1611
    },
          a0_0x3045a8 = {
      _0x49acde: 0x535,
      _0x54683b: 0xe6d
    },
          a0_0x1fa3b = {
      _0x32072e: 0x1dda
    },
          a0_0x27808e = {
      _0x3d6c4a: 0x1029
    },
          a0_0x14c4bc = {
      _0x47be52: 0x2606,
      _0x30eca1: 0xc95,
      _0x1656db: 0x1fdc,
      _0x565ec1: 0x1a5
    },
          a0_0x4cbd02 = {
      _0x3b371e: 0x1726,
      _0x26d7cb: 0x22b2,
      _0x798ded: 0x13b4,
      _0x3939c5: 0x1d89,
      _0x1d5898: 0xfb8,
      _0x1a516c: 0x24fa,
      _0x10b209: 0x235b,
      _0x6e8326: 0x19c5,
      _0xf1b065: 0x20dc,
      _0x153681: 0x14d2,
      _0x556bb1: 0x24bc,
      _0x3ba860: 0x879,
      _0x1cc0ec: 0x98c,
      _0x5b71bf: 0x13b9,
      _0x127e47: 0x121d,
      _0x26bdb0: 0x19c5
    },
          a0_0x4841a2 = {
      _0x32cdb0: 0x23a2,
      _0x23a0d9: 0x235b,
      _0x553f7f: 0x1b3,
      _0x213fb5: 0x10c9,
      _0x53f176: 0x1509,
      _0x44a92e: 0xeb4,
      _0x3dfb3e: 0x535,
      _0x5c826e: 0x1509,
      _0x33cd19: 0x2114,
      _0x3f3768: 0x1d66,
      _0x17806c: 0x1e35,
      _0xa78381: 0x1b3,
      _0x1eda1c: 0x18a5,
      _0x487dbb: 0x14c1,
      _0x2c9f3f: 0x1a2c,
      _0xd0c91a: 0x1e35,
      _0x5b2444: 0x1d66,
      _0x1f6afd: 0x1969,
      _0x3797ad: 0xe8f,
      _0x29aef6: 0x1f30,
      _0x29446b: 0x1879,
      _0x350b32: 0x1a50,
      _0x202ebf: 0x1af1
    },
          a0_0x341736 = {
      _0x34b7f2: 0x1c01,
      _0x1b9df5: 0x35c,
      _0x3acbff: 0x13b0,
      _0x2a630c: 0x2a2,
      _0x5e5210: 0x1c01
    },
          a0_0x34904b = {
      _0x2c33c6: 0x18a5,
      _0x5da41c: 0x18a5
    },
          a0_0x26686e = {
      _0x12a443: 0x1b3,
      _0x3f1b32: 0x21f6,
      _0x501583: 0x535,
      _0x374b13: 0x74c,
      _0x2c1e9c: 0x1ec0,
      _0xa26b53: 0x21f6,
      _0x244258: 0x18a5,
      _0x5c1765: 0x14c1,
      _0x374519: 0xffb,
      _0x388294: 0x18a5,
      _0x5dc7ea: 0x14d2,
      _0x1c7e9d: 0xfcd,
      _0x29fd5f: 0x24bf
    },
          a0_0x4e2f02 = {
      _0x2923ee: 0x1d66,
      _0x3d10fa: 0x628,
      _0x3b1107: 0x1ec5,
      _0x2131e6: 0x385,
      _0x1c2ff8: 0x213a,
      _0x12af4d: 0x185e,
      _0x123f95: 0xc95,
      _0x53edde: 0x235b,
      _0x36a536: 0x4b9,
      _0xcb5765: 0x11d9,
      _0x5a7dfd: 0x12e5,
      _0x1c89c3: 0xffb,
      _0x45ad5b: 0x1538,
      _0x7c1cce: 0x1da5,
      _0x1ff0ac: 0x176c,
      _0x1303af: 0x535,
      _0x37570c: 0x1f30,
      _0x11331e: 0x2323,
      _0x78b6bf: 0x2642,
      _0x1e1a74: 0x535
    },
          a0_0xdd8d22 = {
      _0x38a488: 0x1768,
      _0x127396: 0x1efe,
      _0x44a32d: 0xf5a,
      _0x398c59: 0x2313,
      _0x3b8b7e: 0x2599,
      _0x4ec552: 0x70f,
      _0x311ce1: 0x862,
      _0x5b60c3: 0xbdd,
      _0x537972: 0x9e5,
      _0x53d669: 0x1f7,
      _0x463d01: 0x1225,
      _0x4926f1: 0x152d,
      _0x588ab8: 0x12fa,
      _0x15dfaf: 0x105f,
      _0x38287f: 0x4e5,
      _0x5c1d7d: 0x1753,
      _0x147563: 0x838,
      _0x1580bf: 0x20a5,
      _0x1f7c32: 0x4e9,
      _0x3bde12: 0x14d2,
      _0x529b38: 0x870,
      _0x1266b9: 0x19c5,
      _0x27a1aa: 0x185,
      _0x565b6c: 0x14d2,
      _0x33c48d: 0x1634,
      _0x1c6304: 0x950,
      _0x457ff7: 0x14d2,
      _0x10b6bf: 0x19c5,
      _0x14637f: 0x1f78,
      _0x20e118: 0x14d2,
      _0x464076: 0x1b4,
      _0x56cd70: 0x370,
      _0x11f6ad: 0x19c5,
      _0x5cc02c: 0x14d2,
      _0x133ebe: 0x121d,
      _0x319d3e: 0x19c5,
      _0x54467d: 0x121d,
      _0xbacf14: 0x19c5,
      _0x11a84a: 0x272,
      _0x1b34de: 0x14d2,
      _0x47ba51: 0x19c5,
      _0x39bb70: 0x19c5,
      _0x431fe4: 0x19c5,
      _0x4967c0: 0x235b,
      _0x24f1b2: 0x19c5
    },
          a0_0x1349ec = {
      _0xf43ca: 0x4b9,
      _0x432060: 0x1aab,
      _0x2877fc: 0xfff,
      _0x4d0b68: 0x14d2,
      _0x38646a: 0x59d
    },
          a0_0x5c4c86 = {
      _0x359ec1: 0x16c5,
      _0x489f3f: 0x235b,
      _0x4d961d: 0x2072,
      _0x251074: 0x22d0,
      _0x228e96: 0x9ab,
      _0x576cde: 0x208,
      _0x4d22dd: 0x1d66,
      _0x2c68c6: 0x1828,
      _0x5304e4: 0x1992,
      _0x3a5602: 0x535,
      _0x295d0c: 0x10ff,
      _0x54efc9: 0x14d2,
      _0x12cd9d: 0x1da5,
      _0x4933fb: 0x200c,
      _0xbf944a: 0x14d2,
      _0x569a3c: 0x1a5,
      _0x1a7d09: 0x2513
    },
          a0_0x1192f0 = {
      _0x799d3c: 0x2606,
      _0x3c594a: 0x16c5,
      _0x2f295f: 0x1f30,
      _0x3ef4f1: 0x235b,
      _0x449044: 0x2054,
      _0x250404: 0x1d55,
      _0x473474: 0x2606,
      _0x3113d3: 0xf82,
      _0xa9c108: 0x17f
    },
          a0_0x591f47 = {
      _0x3f0074: 0x258c,
      _0x12ec27: 0x19a8,
      _0x25b899: 0x19d2,
      _0x47769a: 0xb45,
      _0x1f1f2b: 0x1f49,
      _0x93b440: 0x14d2,
      _0x3dfd0c: 0x718,
      _0x42cd3c: 0x1d66,
      _0x1f638d: 0x1a7d,
      _0x55d9b2: 0x2606,
      _0x5d166f: 0x905,
      _0x3aafc6: 0x17a7,
      _0x41ff4e: 0x22d0,
      _0x516999: 0x2341,
      _0x1760b6: 0x7e4
    },
          a0_0x2504c3 = {
      _0x33a318: 0x258c,
      _0x4c2b84: 0x1d9a,
      _0x4e7c62: 0x9e5,
      _0x274fc0: 0x2606,
      _0x1382b5: 0x16c5,
      _0x4049b5: 0x17a7,
      _0x336556: 0x2599,
      _0x48b04d: 0x6b3,
      _0x1c8b7c: 0x137a,
      _0x2081d1: 0x24bc,
      _0x13367f: 0x1753,
      _0x194d4b: 0xa76,
      _0x1d1cda: 0x248,
      _0xf14e97: 0xe48,
      _0x413b5f: 0x22d0,
      _0x3d3e57: 0x22d0,
      _0x34ff51: 0x1856,
      _0x11ed2e: 0x1d66,
      _0x3269b0: 0x2197,
      _0x255966: 0x1d66,
      _0x4477a0: 0x1e35,
      _0x17c3c8: 0x89f
    },
          a0_0x1379ee = {
      _0x32d3e8: 0x2606,
      _0x228567: 0x16c5,
      _0x54e562: 0x235b,
      _0x40d171: 0xa26,
      _0x39971b: 0x1dda,
      _0x32b324: 0x1700,
      _0x151c76: 0x185e,
      _0x15e939: 0x235b,
      _0x2cefbb: 0x263f
    },
          a0_0x23a4c7 = {
      _0x10c893: 0x2606
    },
          a0_0x525245 = {
      _0x5ec4ca: 0x258c,
      _0x558f4e: 0x3a4,
      _0x29e085: 0x2606,
      _0x301369: 0x1a7d,
      _0x11b45b: 0x2178,
      _0x26168a: 0x215a,
      _0x19c4f5: 0x11ca,
      _0x22dc9b: 0x240e,
      _0x16617d: 0x2178,
      _0x4f406f: 0x3a4,
      _0x4bc6d1: 0xffb
    },
          a0_0x38286b = {
      _0xc9750c: 0xe6d
    },
          a0_0x18a782 = {
      _0x483a01: 0xb49
    },
          a0_0x50cf30 = {
      _0x253dba: 0x16c5,
      _0x483e87: 0x2606,
      _0x592ee1: 0xbdd,
      _0x3cdad4: 0x2504,
      _0x10f375: 0x10f6,
      _0x34aaf4: 0x1d66,
      _0x4020bd: 0x2422
    },
          a0_0x4596bc = {
      _0x3cc2cc: 0x1204
    },
          a0_0x29536d = {
      _0x1d8a63: 0x1f7
    },
          a0_0x513467 = {
      _0x4b1d24: 0x1fda
    },
          a0_0x2dd93a = {
      _0x386e32: 0x535,
      _0x55ef0d: 0x1a50,
      _0x83f54d: 0x17a7,
      _0x217ea2: 0x1d20
    },
          a0_0x43dc43 = {
      _0x5e9beb: 0x1d66,
      _0x599964: 0xd79,
      _0xad6be9: 0x248,
      _0xe00a01: 0x1199,
      _0x3df039: 0x17f,
      _0x245344: 0x535,
      _0x37e5c8: 0x52c
    },
          a0_0x3aa993 = {
      _0xd45b5e: 0x2072,
      _0x20a353: 0x2599,
      _0x35eff5: 0x248,
      _0x426a6a: 0xa9d,
      _0x45fc4c: 0x248,
      _0x2b2849: 0xd79,
      _0x54139c: 0x13b0,
      _0x398600: 0x52c
    },
          a0_0x10902a = {
      _0x1cc621: 0x11dc,
      _0xd9393e: 0x19d2,
      _0x1e1ee0: 0x21e0
    },
          a0_0x289a2b = {
      _0xeab9f1: 0x11dc,
      _0x4341b6: 0x1a7d,
      _0x29027c: 0x19d2,
      _0x34cf66: 0x1a7d
    },
          a0_0x1dfffd = {
      _0x17f5e4: 0x1a7d,
      _0x31eea9: 0x19d2,
      _0x363262: 0xe41,
      _0x32bcb4: 0x1398,
      _0x3b272f: 0x1398
    },
          a0_0x1d4d49 = {
      _0x41a212: 0x11dc,
      _0x30d8d5: 0x1a7d,
      _0x1785a7: 0x19d2,
      _0x57aaa3: 0x1d20
    },
          a0_0x56fa92 = {
      _0x3ff7bf: 0x17a7,
      _0x379f40: 0x8cd,
      _0x17b540: 0x1d2,
      _0x5b835f: 0xfcd,
      _0x30fb59: 0x112d
    },
          a0_0x533439 = {
      _0x4cda63: 0x1a7d,
      _0x80a205: 0x2606,
      _0x3bc0b3: 0x2530,
      _0x38af47: 0x1a8c
    },
          a0_0x117c5f = {
      _0x3415d9: 0x1a7d,
      _0x3621ef: 0x16c5
    },
          a0_0x1f9f33 = {
      _0x50f889: 0x11dc,
      _0x3c40f3: 0x1a7d,
      _0x396b2f: 0x19d2
    },
          a0_0x1fb42e = {
      _0x115729: 0x208e,
      _0xd42e5: 0x1f30
    },
          a0_0x47d276 = {
      _0x2b097a: 0x1856,
      _0x42a5c1: 0x1f30
    },
          a0_0x4cbdce = {
      _0x4dfc66: 0x2174,
      _0x593c18: 0x1e3d,
      _0x23ce4b: 0x2085,
      _0x18db17: 0x1707
    },
          a0_0x5c1dbd = {
      _0x3b09e1: 0x185e,
      _0x570720: 0x2606,
      _0x17f124: 0x1d66,
      _0x545fc7: 0x1d55,
      _0x50bd3f: 0xf82,
      _0x4fc94e: 0x1ade,
      _0x45beb3: 0x1d55,
      _0x1b1a2e: 0x1d55,
      _0x4867d7: 0x1aab,
      _0x496576: 0x2405,
      _0x1221a7: 0x19c5,
      _0x5324bb: 0x1808,
      _0x59ae39: 0x14d2,
      _0x4434bb: 0x1105,
      _0x248d95: 0x19c5
    },
          a0_0x5cfe61 = {
      _0x4460b9: 0x1d66
    },
          a0_0x19dac9 = {
      _0x4a14e1: 0x2609,
      _0x5375be: 0x14d2,
      _0x5d73ba: 0x19c5,
      _0x3ff954: 0x3da,
      _0x3f7cce: 0x1029,
      _0x183e10: 0x14d2
    },
          a0_0x3b571a = {
      _0x1af139: 0x535,
      _0x342fa8: 0x32e,
      _0x33c2cd: 0x1973,
      _0x45983e: 0x535,
      _0x2f5c39: 0xf86
    },
          a0_0xe5044a = {
      _0x37faaf: 0x1211,
      _0x17e06d: 0x535,
      _0x45b2e8: 0x1c66,
      _0x24ba9d: 0x535,
      _0x5bc1b2: 0x239,
      _0x395091: 0x1d66,
      _0x569997: 0x1870,
      _0x5b8b7c: 0x1d7c,
      _0x3f7000: 0xb4a,
      _0x1121d9: 0x1d66,
      _0x38d2e2: 0x2379,
      _0x11dfe0: 0xf05
    },
          a0_0x24fed1 = {
      _0x4fab1f: 0x235b,
      _0xa56cc7: 0x185e,
      _0x68f8f5: 0x1d55,
      _0x5d9dd5: 0x1d55,
      _0x32f516: 0x1d55,
      _0x2574c7: 0x1d55,
      _0x526bb0: 0x1aab,
      _0x5c3307: 0x66b,
      _0x10fccb: 0x14d2,
      _0x167e76: 0x19c5,
      _0x12e16e: 0x1808,
      _0xed828: 0x1105,
      _0x24dce6: 0x19c5,
      _0x59da79: 0x4a0
    },
          a0_0x484e68 = {
      _0x505b3a: 0x596,
      _0x5bc2a7: 0x82d,
      _0x287b81: 0x11dc,
      _0x2f1970: 0x16c5,
      _0x21bc16: 0x16d6,
      _0x13f588: 0x1927,
      _0x46dbc3: 0x263f,
      _0x2d0834: 0x1870
    },
          a0_0x28ebea = {
      _0x1a8f71: 0x59d,
      _0x4eb081: 0x14d2,
      _0x494a70: 0x1da5,
      _0x907186: 0xbde
    },
          a0_0x28fb2f = {
      _0x41d5ba: 0x596,
      _0xd4216: 0x1edc,
      _0xe2c555: 0x421,
      _0x32bfbb: 0x1c3,
      _0x3351ec: 0xf86,
      _0x54a20a: 0x45d
    },
          a0_0x5db34c = {
      _0x21fd8c: 0x7c9,
      _0x2a68fe: 0x19c5,
      _0x481d0d: 0x14d2,
      _0x30c4e1: 0x19c5,
      _0x506e92: 0x19c5,
      _0x413939: 0x1f0b
    },
          a0_0x9bb805 = {
      _0xc77eb1: 0x6ba,
      _0x58e334: 0x1d55,
      _0x2f1f14: 0x1a43,
      _0x2d8aeb: 0x1b7f,
      _0x41d64a: 0x1d2
    },
          a0_0xbe4e7f = {
      _0x97854a: 0xe6d
    },
          a0_0x27294c = {
      _0x250e1c: 0x253d,
      _0x16cc6a: 0x21e0,
      _0x259e88: 0x1aab,
      _0x10f007: 0x25e1,
      _0x1e9039: 0x17f,
      _0x25b110: 0x25e1,
      _0x20ff64: 0x6ba,
      _0x4a849c: 0x16c5,
      _0x68858a: 0x17f,
      _0x1fe413: 0x1a07,
      _0x474c17: 0x149e,
      _0x355484: 0x1223
    },
          a0_0x1a81b1 = {
      _0x56fc95: 0x535,
      _0x4e03a9: 0xbc2,
      _0x4f56de: 0x1cc2,
      _0x550ebf: 0x1aab,
      _0x52a31f: 0x2405,
      _0x40fd70: 0x7da,
      _0x3ef8fa: 0x1d4e,
      _0x3d9739: 0xa55,
      _0x52ba59: 0xffb
    },
          a0_0x3c8725 = {
      _0x10fcd9: 0x185e,
      _0x112d3c: 0x19c5,
      _0x14c9fc: 0x14d2,
      _0x453b84: 0x11b0
    },
          a0_0x307a9b = {
      _0x203045: 0x6ba,
      _0x25c04d: 0x16c5,
      _0x470ca3: 0x17f
    },
          a0_0x30a150 = {
      _0x4163d7: 0x112d,
      _0x1c299e: 0x203,
      _0x3d40f1: 0xab6,
      _0x297833: 0x2109
    },
          a0_0x177cb7 = {
      _0x202bdf: 0x235b,
      _0x52afe2: 0x185e,
      _0x172606: 0x14d2,
      _0x1c5723: 0x19c5,
      _0x2181f9: 0x19c5,
      _0x3d6840: 0x1029,
      _0x3a6144: 0x19c5,
      _0x382080: 0x14d2
    },
          a0_0x53e660 = {
      _0x223f50: 0x535,
      _0x4a3d08: 0x19d2,
      _0x57f0b7: 0x22b2,
      _0x133306: 0xe83
    },
          a0_0x1b3d4e = {
      _0x5367a7: 0x1dda
    },
          a0_0x16bece = {
      _0x23e3a6: 0x1fd2,
      _0x20c03d: 0x185e,
      _0x1d8d98: 0x19d2,
      _0x46bad0: 0x1955,
      _0x361dd2: 0x22b2,
      _0xe6a2e8: 0xee6,
      _0x18818d: 0x19c5,
      _0x56262c: 0x14d2,
      _0x220ffb: 0x19c5,
      _0x419352: 0x1665,
      _0x50c8e8: 0x19c5,
      _0x5c1520: 0x19c5,
      _0x264ed3: 0x1d29,
      _0x4a2fea: 0x19c5,
      _0x245412: 0x5b1,
      _0x800c26: 0x19c5,
      _0x1795f2: 0x14d2,
      _0x1b5b6e: 0x42b,
      _0xa93a10: 0x14d2,
      _0x865448: 0x14d2,
      _0x4c2b43: 0x753,
      _0xe856dd: 0x19c5,
      _0x3eca58: 0x19c5,
      _0x3dce42: 0x126e,
      _0x375408: 0x249d,
      _0x37a211: 0x13b9,
      _0x4d2e36: 0x19c5,
      _0x3d0d77: 0x121d,
      _0x267d63: 0x1029,
      _0x4a296f: 0x19c5,
      _0xd39e59: 0xcd6
    },
          a0_0xb9024a = {
      _0x1e7ff4: 0x535,
      _0x3ae1e3: 0x253d,
      _0x5a0ae8: 0x23a2,
      _0x24e0df: 0x1955,
      _0x2c8362: 0x19d2,
      _0x95e824: 0xa8e
    },
          a0_0x30f9d2 = {
      _0x24e495: 0x1c08,
      _0x3d9bf2: 0x12b4
    },
          a0_0x2eb646 = {
      _0x261707: 0x1d2,
      _0x46ebd1: 0x12b4
    },
          a0_0x3a8703 = {
      _0x407eef: 0x14d2,
      _0x5262ac: 0x1da5,
      _0x13676f: 0x1c40,
      _0x16463b: 0x112d,
      _0x5d8153: 0x1c08
    },
          a0_0xbbc889 = {
      _0x589adc: 0x2271,
      _0x4461c9: 0x19d6,
      _0x5d83e5: 0x2c2,
      _0x3d01e2: 0x310,
      _0xc4cc0c: 0x10c9,
      _0x2c1791: 0x1837,
      _0x36b408: 0x19d6
    },
          a0_0x5df278 = {
      _0x5c1364: 0x1c6f,
      _0x46022d: 0x14c1,
      _0x18da78: 0x1978,
      _0x53f997: 0x13e9,
      _0xac3bb: 0x1d2a,
      _0x2e3fc9: 0x1460,
      _0x3bf5f8: 0x203,
      _0x393f41: 0x112d
    },
          a0_0x556642 = {
      _0x351d96: 0x22ba,
      _0x2d5505: 0x25e1,
      _0x1d2a14: 0x1704,
      _0x3b249: 0x1704,
      _0x5613b0: 0x17f,
      _0x216c50: 0x18a2,
      _0x5681ef: 0x18a2,
      _0x5ec39c: 0x5e9,
      _0x14ee75: 0x5e9
    },
          a0_0x32cc99 = {
      _0x377944: 0x19c8,
      _0x2a99f2: 0x16c5,
      _0x4a015d: 0xb53,
      _0x48615e: 0x1774
    },
          a0_0x1482d4 = {
      _0x1c4444: 0xa8e
    },
          a0_0x1026cd = {
      _0x42637f: 0x19c8,
      _0x39ad5c: 0x6ba,
      _0x392957: 0xa8e
    },
          a0_0x1777ac = {
      _0x3df26a: 0x1955,
      _0x2387e0: 0x19d2,
      _0xdb8ab2: 0x6ba,
      _0x2c5ca6: 0xa8e,
      _0x52d747: 0x2140,
      _0x13fb29: 0x421,
      _0xab352f: 0x1774
    },
          a0_0xc48410 = {
      _0x3464f4: 0x1d66,
      _0x523a89: 0x17e5,
      _0x200252: 0x1d55,
      _0x325ade: 0x1d55,
      _0x484937: 0x1d55,
      _0x436cc5: 0x2405,
      _0x85d25b: 0x198,
      _0x213a39: 0x8ce,
      _0x50506f: 0x2606,
      _0x5ea17c: 0xf82,
      _0x1f20b8: 0x17e5,
      _0x59e462: 0x1d55,
      _0xd6ba45: 0x2606,
      _0xc78049: 0x1d55,
      _0x38a500: 0x1d55,
      _0x2bf649: 0x1d55,
      _0x36d2ee: 0x1aab,
      _0x5730f0: 0x90f,
      _0x41949f: 0x14d2,
      _0x4bf243: 0x19c5,
      _0x116d73: 0x1029,
      _0x3a398b: 0x1105,
      _0x542360: 0x944
    },
          a0_0x492710 = {
      _0x5eb1b8: 0x198,
      _0x4fcd48: 0x1d66
    },
          a0_0x1055bd = {
      _0x5efe76: 0x1edc,
      _0x5b5ca9: 0x421,
      _0xedfac3: 0x40b,
      _0x226b32: 0xf86
    },
          a0_0x53d2fa = {
      _0x4211a7: 0x235b,
      _0x15dbe3: 0x185e,
      _0xb8de43: 0x14d2,
      _0x1cf6d2: 0x121d,
      _0x35be21: 0xcd6,
      _0x2ba3f4: 0xc31,
      _0x26d88f: 0x779,
      _0x5614d2: 0x2119,
      _0x22dcc2: 0x879,
      _0x272758: 0x19c5,
      _0x397fd9: 0x14d2
    },
          a0_0x5e83a2 = {
      _0x581352: 0x253d,
      _0x161108: 0x16c5,
      _0x288ec: 0x14d2,
      _0x3fc096: 0x1a5,
      _0x56571c: 0x5ba
    },
          a0_0x117951 = {
      _0x10a5aa: 0x535,
      _0x191cd6: 0x74c,
      _0x74807f: 0x115c,
      _0x3a9c8f: 0x235b,
      _0x383393: 0x12a3,
      _0x5d573a: 0x1a3e,
      _0x348fa1: 0xbc0,
      _0x25348d: 0x535,
      _0x5c8973: 0x2470,
      _0x4ebe29: 0x628,
      _0x1a0fe7: 0x19e6,
      _0x14623e: 0x1bda,
      _0xc2157d: 0xe3b,
      _0x446868: 0x2530,
      _0x11253: 0x535,
      _0x266959: 0x421,
      _0x2c64fe: 0x1774,
      _0x33b58c: 0x421,
      _0x4146b4: 0x421,
      _0x119d84: 0xfeb,
      _0x545920: 0x421,
      _0x15004f: 0x421,
      _0x1d73ae: 0x1c8a
    },
          a0_0x4cca0b = {
      _0x9af78e: 0x2530,
      _0x229731: 0x235b,
      _0x4133df: 0x185e
    },
          a0_0x5b948a = {
      _0x2ce68c: 0x235b
    },
          a0_0x54e247 = {
      _0x4beb00: 0x1d66,
      _0x2bdb03: 0x1992,
      _0x25ad78: 0x24fe,
      _0x139447: 0x24fe,
      _0x1513d1: 0x1d66,
      _0x99ac84: 0x1992,
      _0x46c099: 0x1d66,
      _0x41c75e: 0x1992,
      _0x3ec1d3: 0x24fe,
      _0x118b8c: 0x1992,
      _0x3260ee: 0x535,
      _0x24ae91: 0x2530,
      _0x5b01c9: 0x1d66,
      _0x1c3204: 0x24fe,
      _0x5a5a7f: 0x1d66,
      _0x2538b9: 0xf86,
      _0x4166b1: 0x1d43
    },
          a0_0xce0e7f = {
      _0x2f5320: 0x253d,
      _0x1d31ac: 0x185e,
      _0x52e526: 0x185e,
      _0x2556b8: 0xc95,
      _0x11c4eb: 0x235b,
      _0x4a2f0d: 0x24ce,
      _0x5eb588: 0x185e,
      _0x261a47: 0x1de9,
      _0x3a36a6: 0x24ce,
      _0x19a100: 0xc95,
      _0x5c4efb: 0xc31,
      _0x5c704a: 0x1b6d,
      _0x209ff: 0x9f7,
      _0x373220: 0x174f,
      _0x5a7387: 0x7f7
    },
          a0_0x4e49ed = {
      _0x39f7af: 0x185e,
      _0x447313: 0x14d2,
      _0x257c0b: 0x19c5,
      _0x1a4696: 0x21c8,
      _0x176d09: 0x753
    },
          a0_0x3f5e44 = {
      _0xcd5a9c: 0x157d,
      _0x33a622: 0x1d71,
      _0x4151db: 0x535,
      _0x388920: 0x1063
    },
          a0_0x35bee6 = {
      _0x992a72: 0x1d66,
      _0xade145: 0x628,
      _0x7ff859: 0x9c8,
      _0x2532a1: 0x745,
      _0x4c5e04: 0x1366,
      _0x539d8d: 0x40d,
      _0x442805: 0x19e6,
      _0x219fdd: 0x535,
      _0x5da077: 0x535,
      _0x5c8e79: 0x265,
      _0x262bd4: 0xdc0,
      _0x421155: 0x14d2,
      _0x56ba02: 0x1da5,
      _0x6b3a59: 0xcf7,
      _0x36f0e4: 0xdc0,
      _0x804cac: 0xe4c,
      _0x3e7658: 0xe4c,
      _0x28a473: 0xa9b,
      _0x406f08: 0x1293,
      _0x5996fb: 0x1873,
      _0x20e25c: 0xd12,
      _0x85e197: 0x1873,
      _0xb3bc7d: 0x14d2,
      _0x271d68: 0x40d,
      _0x428ad3: 0x1a59,
      _0x5456d4: 0x14d2,
      _0x5313a8: 0x195
    },
          a0_0x18f5dd = {
      _0x382012: 0x235b,
      _0x1e779b: 0x185e,
      _0x55b41a: 0x14d2,
      _0x1188d7: 0x19c5,
      _0x214054: 0x14d2,
      _0xdf9def: 0x19c5,
      _0x2a969e: 0x1808,
      _0x417db9: 0x2580,
      _0x5a9955: 0x19c5,
      _0x47c5fe: 0x1e5f
    },
          a0_0x3f171c = {
      _0x57ecec: 0x17f,
      _0x6806ec: 0xf82
    },
          a0_0x1c0716 = {
      _0x11f64f: 0x1d69
    },
          a0_0x159caf = {
      _0x35c2a5: 0x535,
      _0x500be8: 0x1d66
    },
          a0_0x1ffbfa = {
      _0x1e49b8: 0x1693,
      _0x427127: 0x1d66,
      _0xe7a69f: 0x11dc,
      _0x44291c: 0x1d66,
      _0x4ccc70: 0x1149,
      _0x4b68c5: 0xa9e,
      _0x26240e: 0x14cc,
      _0x8aea96: 0x1afd,
      _0x229564: 0x13ef
    },
          a0_0x23dfab = {
      _0x548bcf: 0x14d2,
      _0xa8788d: 0x909,
      _0x573b8b: 0x14d2
    },
          a0_0x171ee8 = {
      _0x331a14: 0x16c5
    },
          a0_0x31f77d = {
      _0xc0ca92: 0x17f
    },
          a0_0x2e24e4 = {
      _0x383a45: 0x185e,
      _0x25e7dc: 0x19c5,
      _0x529c02: 0x2449,
      _0x25cecf: 0x19c5
    },
          a0_0x59d590 = {
      _0x4b5c79: 0x16c5
    },
          a0_0x21a99c = {
      _0x3db073: 0x235b,
      _0x54480: 0x185e
    },
          a0_0x1e2466 = {
      _0x12b349: 0x185e,
      _0x51fd2f: 0x2405,
      _0x31900e: 0x243b,
      _0x513583: 0x1aab,
      _0x354023: 0xe71,
      _0x98b793: 0x1aab,
      _0x471046: 0xac0,
      _0x462099: 0x14d2,
      _0x2b3358: 0x19c5,
      _0x244d1d: 0x204f,
      _0x51375b: 0xab3,
      _0x38368b: 0x2606,
      _0x23b217: 0x1d66,
      _0xfd0af6: 0x2379,
      _0x4f49f5: 0x1ade,
      _0x1c3d1c: 0x1d55,
      _0x258649: 0x1d55,
      _0x33df77: 0xf82,
      _0x14cf6c: 0x1d55,
      _0x48fb42: 0x2405,
      _0x1c71bc: 0xee7,
      _0x2278f6: 0x8ce,
      _0x13848b: 0xf82,
      _0xadd8be: 0x1d55,
      _0x349fd1: 0x2606,
      _0x19c4e6: 0x1d55,
      _0xe035de: 0xee7,
      _0x24fb48: 0x90f,
      _0x4dce64: 0x14d2,
      _0x5be8f2: 0x19c5,
      _0x508fcd: 0x1808,
      _0x2fbaaf: 0x14d2,
      _0x33a0a2: 0x19c5,
      _0x56d5ee: 0x1105
    },
          a0_0x3620c7 = {
      _0x24c135: 0x8ce,
      _0x3f83dc: 0x90f,
      _0x472af3: 0x1edc,
      _0x5c31c9: 0xee7,
      _0x4001b3: 0x535,
      _0x428e4d: 0x421
    },
          a0_0x2eda51 = {
      _0x5ee4af: 0x535,
      _0x1ccaea: 0x1c66,
      _0x208109: 0x1289,
      _0x3fd428: 0x1d55,
      _0x564eb9: 0x1f41,
      _0x20aca3: 0x1e3d,
      _0x299ec8: 0x535,
      _0x4e0cad: 0x1de9,
      _0x1096c2: 0x10f3,
      _0x7b2c3b: 0xf82,
      _0x231fd9: 0x3b1,
      _0x17f071: 0x22e6,
      _0xdaa9b7: 0x2c5,
      _0x44f91c: 0x14d2
    },
          a0_0x16902b = {
      _0x3b749d: 0x253d,
      _0x1b7de5: 0xe6d
    },
          a0_0x1f5376 = {
      _0x4fdecb: 0x1820,
      _0x2d1de7: 0x1a03,
      _0xaaef1e: 0xf82,
      _0x5da656: 0x385,
      _0x6afbbb: 0x23c9,
      _0x1a9887: 0x830,
      _0x3a116b: 0x20c6,
      _0x4ac8a7: 0x222c,
      _0x41a13c: 0x2ad,
      _0x44d022: 0xe9c,
      _0x19bdb6: 0x1c8d,
      _0x58c656: 0x19c5,
      _0x55b7e1: 0x163c,
      _0x1d9860: 0x1ab,
      _0x3cc322: 0x14d2,
      _0xa0dfcc: 0xf6e,
      _0x3c8a0c: 0x4a3,
      _0xa073e9: 0x200,
      _0x465623: 0x1d04,
      _0x230914: 0x24bc,
      _0xa1a1b8: 0x879,
      _0x938e9f: 0x1a5
    },
          a0_0x5bb7d4 = {
      _0x3d56bf: 0x1a3
    },
          a0_0x4ee706 = {
      _0x1493ff: 0x242c,
      _0x13406e: 0x2cc,
      _0x30befb: 0x213a,
      _0x170097: 0x19d6,
      _0x5131d5: 0x19d6
    },
          a0_0xd227a0 = {
      _0x196e6f: 0xf6e,
      _0x478a77: 0x624
    },
          a0_0x161ba5 = {
      _0x887dc5: 0x2d2,
      _0x5f3d7e: 0x7cf,
      _0x379493: 0xa1f
    },
          a0_0x2689b2 = {
      _0x4ba369: 0x1edc
    },
          a0_0x33d588 = {
      _0x35b2e6: 0x235b,
      _0x42d7bf: 0x185e,
      _0x4c104c: 0x14d2,
      _0x5d8dd3: 0x19c5,
      _0x2ac0f0: 0x14d2,
      _0x11e959: 0x19c5,
      _0x48eacd: 0x14d2,
      _0x6ff75b: 0x14d2,
      _0x372e67: 0x19c5,
      _0xf8aca4: 0x204f,
      _0x4c9663: 0x19c5,
      _0x373ebd: 0x1103,
      _0x4b6b89: 0x14d2,
      _0xdeb78e: 0x237b,
      _0x307f2f: 0x14d2,
      _0x558331: 0x40e,
      _0xc69954: 0x18d7,
      _0x363616: 0x753
    },
          a0_0x3732c1 = {
      _0xaebd6b: 0x190,
      _0x14f678: 0x1063
    },
          a0_0x39c255 = {
      _0x117385: 0x190,
      _0x118811: 0x1063
    },
          a0_0x1b1636 = {
      _0x279d93: 0x1d7c,
      _0x996bf5: 0x2379,
      _0x4b0493: 0xa90,
      _0x4be7bc: 0x535,
      _0x3bf0d5: 0x1b65
    },
          a0_0x3183c4 = {
      _0x2c622b: 0x2606,
      _0x18f43c: 0x16c5,
      _0x2048ff: 0x1293,
      _0x1de7f9: 0x1ddf,
      _0x251042: 0x2e3,
      _0x150a49: 0x1d66,
      _0x19ab61: 0x535,
      _0x9e84db: 0x1289,
      _0x51d148: 0x535,
      _0x360a60: 0xb46
    },
          a0_0x55b306 = {
      _0x16258f: 0x2292,
      _0x39fc5a: 0x535,
      _0x2890d1: 0x535,
      _0x1c3633: 0x1b65,
      _0x16b97a: 0x2488,
      _0x32a616: 0x1ab0,
      _0x5078d7: 0x1d7c,
      _0x4d361f: 0xb4a,
      _0x41112e: 0x2379,
      _0x2f6eae: 0x1ba,
      _0x40754d: 0x14d2,
      _0x104aa5: 0x1f2d,
      _0x59004a: 0x1da5,
      _0x5742c7: 0x1a07,
      _0x5c6223: 0x11d3
    },
          a0_0x102fa8 = {
      _0x3d5a5c: 0x535,
      _0x949c11: 0x1b65,
      _0x58b663: 0x2488,
      _0x34f59b: 0x14d2
    },
          a0_0x2f7938 = {
      _0x1b2682: 0x2292,
      _0x12fb4d: 0x1c66,
      _0x9ca372: 0x1b65,
      _0x142108: 0x242c,
      _0x25e4db: 0x1ab0,
      _0x145656: 0x2488,
      _0x549876: 0x4a3,
      _0x32feb3: 0xb4a,
      _0x232c4a: 0x1d66,
      _0x1c82db: 0x2379,
      _0x48ce9f: 0x535,
      _0x16677b: 0x1c66,
      _0x3d9e86: 0x535
    },
          a0_0x3a89b2 = {
      _0x64c2ee: 0x246b,
      _0x2e509b: 0x2292,
      _0x379559: 0x535,
      _0x2e668f: 0x1c66,
      _0x1e5888: 0x1b65,
      _0x255037: 0x4a3,
      _0xdc2c25: 0x1ab0,
      _0x286322: 0x1d7c,
      _0x5115e7: 0xb4a,
      _0x81fb6e: 0x1d66,
      _0x97f051: 0x2379,
      _0x55a6ad: 0x1ba,
      _0x4b11f8: 0x1aab,
      _0x5a00e4: 0x20b8,
      _0x3a2148: 0x1fe7,
      _0x389cda: 0x90e,
      _0x263f49: 0x1edc,
      _0x1dd698: 0x19e6,
      _0x38ca0a: 0x2288,
      _0x4306b2: 0x1a07,
      _0x3e9b4c: 0x1099,
      _0x2fd9d9: 0x1934,
      _0x8a5514: 0x1da5,
      _0x447875: 0x19e6,
      _0x4b090c: 0x1d66,
      _0x58e9b2: 0x59d
    },
          a0_0x249030 = {
      _0x40b7f2: 0x19d6
    },
          a0_0x2dea95 = {
      _0x21f4ee: 0x1028
    },
          a0_0x9471e7 = {
      _0x3d4db4: 0x235b,
      _0x562c31: 0xff9,
      _0x241e2a: 0x19c5,
      _0x485ac3: 0x14d2,
      _0x301c4c: 0x19c5,
      _0x3aa1d7: 0x18f2,
      _0x1ec64d: 0x724,
      _0x5b9048: 0xbd5,
      _0x5d81c9: 0x24f5,
      _0x51ffce: 0x13c6
    },
          a0_0x5e142d = {
      _0x4ddf23: 0x10b7
    },
          a0_0x4a3b6f = {
      _0x3f9dc4: 0x24bc,
      _0x37c37c: 0x6ba,
      _0x5475ae: 0x1cdf,
      _0x5c15e1: 0x1d4e
    },
          a0_0x471359 = {
      _0x5c2329: 0x2271
    },
          a0_0x1bbce6 = {
      _0x2f1114: 0x157d,
      _0x410566: 0x1d71
    },
          a0_0x901877 = {
      _0x320519: 0x2271,
      _0xe7e530: 0x215,
      _0x2856fd: 0x10b7,
      _0x562d4f: 0x959,
      _0x412f6f: 0x24bc,
      _0x5c879f: 0xbea,
      _0x59fb47: 0x22b2,
      _0x1cacad: 0x24bc,
      _0x108528: 0x14d2,
      _0x1d319f: 0x30c,
      _0x26763b: 0x19c5,
      _0x3b3ef7: 0x1a1f,
      _0x27b854: 0x14d2,
      _0x114d87: 0x2607,
      _0x2e77b5: 0x154c,
      _0x267f52: 0x1fcd,
      _0x3bdb9a: 0x225f,
      _0x52bb33: 0x19c5,
      _0x1b71b4: 0x14d2,
      _0x29f7a7: 0x753
    },
          a0_0x5cfed0 = {
      _0x480864: 0x235b,
      _0x4812e1: 0x185e,
      _0x3c7757: 0x21b5,
      _0xc4a1f2: 0x2488,
      _0x500ef9: 0x535,
      _0x41e36c: 0x1c66
    },
          a0_0x3ab204 = {
      _0x4c8055: 0x535,
      _0x2ea8e7: 0x1de9,
      _0x34c07a: 0x17b3,
      _0x1672ff: 0x535,
      _0x51b227: 0x2488,
      _0x1d7788: 0x4a3,
      _0x4b3d13: 0x21b5
    },
          a0_0xde1266 = {
      _0x22c00b: 0x2322,
      _0x1307d2: 0xa2c,
      _0x2fdb57: 0x7d0,
      _0x26fef4: 0x1342,
      _0x2d3dee: 0x1289,
      _0x1c093d: 0x2034,
      _0x1fdc8c: 0x253d,
      _0x50e406: 0x1a5a,
      _0x3480a8: 0xb0c,
      _0x39dd58: 0x1de9,
      _0x5b7cbc: 0x7b9,
      _0x46d4a7: 0x1a7c,
      _0x20558d: 0x228e,
      _0x5d488c: 0xbce,
      _0xf80b84: 0x1d9e,
      _0x504931: 0x1e6,
      _0x57be18: 0x22f6,
      _0x28dd2c: 0x1453,
      _0x149d81: 0x932,
      _0x4b7034: 0x21b,
      _0x2afe08: 0x134b,
      _0x422c3a: 0x97b,
      _0x4dcef0: 0x2515,
      _0x57c31b: 0x995,
      _0x1db09a: 0x12e3,
      _0x397c94: 0x243,
      _0x4a5fcb: 0x13b0,
      _0x57a370: 0x116a,
      _0x50c9e3: 0x1cd8,
      _0x23288d: 0x12a3,
      _0x4cf0b5: 0x21b7,
      _0x503636: 0x1e01,
      _0x4c3d4c: 0x1c11,
      _0x465685: 0x6d7,
      _0x2d5463: 0x2272,
      _0x4e51a3: 0x1932,
      _0x1baf5d: 0x266,
      _0x525d4e: 0x930,
      _0x48b54a: 0x1917,
      _0x40a1f4: 0x25df,
      _0x1de470: 0x1fa0,
      _0x37f467: 0x2637,
      _0x5e2792: 0x23d6,
      _0x6239cd: 0x2470,
      _0x49efd7: 0x1904,
      _0x5897c0: 0x17d8,
      _0x5d9da2: 0x160a,
      _0x4f7bab: 0x1371,
      _0x238a9c: 0xfd4,
      _0x3e972a: 0x1462,
      _0x5bab1c: 0x141a,
      _0x15f535: 0x1c36,
      _0x3e0561: 0x180c,
      _0x394c59: 0x68a,
      _0x5a2f2a: 0xbda,
      _0x4b2d6c: 0x17ed,
      _0x4a9ee3: 0x6f5,
      _0x57f6da: 0x648,
      _0x206fd8: 0xbc2,
      _0x5a037d: 0x1933,
      _0x303724: 0x232f,
      _0x61daa: 0x861,
      _0xfab837: 0x131b,
      _0x137f87: 0x178c,
      _0x45d383: 0xa66,
      _0x3899f5: 0x56c,
      _0x2b35f0: 0x1d2b,
      _0x352ec8: 0x2119,
      _0x3c3b26: 0x8f2,
      _0x239e72: 0x1689,
      _0x8ffda2: 0x1d58,
      _0x4f6c7f: 0x1dbd,
      _0x730ab8: 0x1400,
      _0x273e2c: 0x2526,
      _0x4fdb60: 0xb01,
      _0x9434fb: 0x1ec6,
      _0x4284b6: 0x522,
      _0x35bc21: 0x25f7,
      _0x4c06e2: 0xb7c,
      _0xc848be: 0x1dde,
      _0x3ea745: 0x190b,
      _0x4bd941: 0x539,
      _0x239f23: 0x1a33,
      _0x1fbc33: 0xc34,
      _0x3bc896: 0xf71,
      _0x221938: 0x133c,
      _0x3fe440: 0x21b8,
      _0x40b8d8: 0xd94,
      _0x5e53dd: 0x20ac,
      _0x5762b6: 0x1b8f,
      _0x564202: 0x210,
      _0x464cce: 0x2080,
      _0x21999b: 0x1a50,
      _0x5d546b: 0x1f86,
      _0x12c603: 0x141c,
      _0x2af89f: 0x9d0,
      _0x4c9495: 0x15cc,
      _0x3dcde4: 0x25bb,
      _0x1d3308: 0xbb5,
      _0x32651f: 0xe94,
      _0x47f04b: 0x252b,
      _0xe5581a: 0x1918,
      _0x41f854: 0x1937,
      _0x4e6b4c: 0xf52,
      _0x568b0b: 0x1c2e,
      _0x49fd75: 0xb06,
      _0x10d99a: 0x250d,
      _0x3a7ba7: 0x1a26,
      _0x4d8a02: 0x1b09,
      _0x57fdaf: 0xffc,
      _0x5bb57a: 0x1456,
      _0x5d85c5: 0x24a6,
      _0x452250: 0x1079,
      _0x3787db: 0xd7e,
      _0x2c6f7d: 0xc60,
      _0x3a3e6c: 0x1153,
      _0x4f349e: 0x1971,
      _0x3321a0: 0x801,
      _0xa759e1: 0xf50,
      _0x595b35: 0x1969,
      _0x27d2ef: 0xfa7,
      _0x251a77: 0x2fb,
      _0x4571df: 0xb32,
      _0x1e58ff: 0x145e,
      _0x2780e3: 0x1959,
      _0xecdcc3: 0xb09,
      _0x2ba620: 0x588,
      _0x426542: 0xc3e,
      _0x46ea7a: 0xaa0,
      _0x26067c: 0x2092,
      _0x42fec2: 0x349,
      _0x5971c4: 0x2379,
      _0x456da1: 0x22c6,
      _0x146cf2: 0x1ec5,
      _0x2a8f07: 0x32f
    },
          a0_0x4426b1 = {
      _0x42fe33: 0xa7b,
      _0x48d30a: 0x12d2,
      _0x280010: 0x1fe9,
      _0x5b5f1e: 0x1d66,
      _0x3e5b04: 0x21c6,
      _0x4376d4: 0x1fe9
    },
          a0_0x5c76a7 = {
      _0x2a2087: 0x1639
    },
          a0_0x454000 = {
      _0x3ef4b0: 0x1e35,
      _0x129d8b: 0x284,
      _0x1d3f00: 0x1d55,
      _0x5895ff: 0x1959,
      _0x3f249a: 0x1d66
    },
          a0_0x4f067a = {
      _0x111743: 0x310
    },
          a0_0x2968a1 = {
      _0x5764f8: 0x1d55,
      _0x49c298: 0x12b5,
      _0x23f8bc: 0x25a1,
      _0x5ccf9a: 0x1e2d
    },
          a0_0x578bba = {
      _0x515417: 0x1e90,
      _0x4984bb: 0x1f93,
      _0x1d7948: 0x1157,
      _0x5a4f77: 0xc11,
      _0x52ab86: 0x1d55,
      _0x442a16: 0x1768
    },
          a0_0x15ac44 = {
      _0x412978: 0x30e,
      _0x14adb8: 0x300,
      _0x11804c: 0x24c3,
      _0x119b49: 0x17f2,
      _0x1084de: 0x24fb,
      _0x467a8e: 0x1064,
      _0x532e3a: 0x2c1,
      _0x2391ba: 0xde4,
      _0x87e73: 0xe26,
      _0x28eade: 0x17bb,
      _0x1e1c25: 0x1101,
      _0x3570e1: 0x1f76,
      _0x205e24: 0x1985,
      _0xd7e3b: 0x62c,
      _0x187923: 0x9a6,
      _0x214401: 0x1ba9,
      _0x456e79: 0x6da,
      _0x576aa8: 0xd51,
      _0x36c944: 0x1d66,
      _0x5eaea6: 0x1e35,
      _0x16a9f9: 0x1b3c,
      _0x4dad8f: 0x1969
    },
          a0_0x2657cb = {
      _0x1cb1b0: 0x19d2,
      _0x5eb020: 0x13f4,
      _0x145ddf: 0x1d66,
      _0x5e81b0: 0x2287
    },
          a0_0x37ac04 = {
      _0x4aa84f: 0xeff,
      _0x558a64: 0x13f4,
      _0x310094: 0x1f86,
      _0xc4476e: 0x1f93,
      _0x37a0eb: 0x310
    },
          a0_0x5d9694 = {
      _0x11a3e6: 0x1fdf,
      _0x2a4f6b: 0xbb1,
      _0x3b76c0: 0x371,
      _0x1e76a2: 0x471,
      _0x43cf90: 0x362,
      _0x4608b1: 0x1349,
      _0x3c9cae: 0x1009,
      _0x205438: 0x1d66,
      _0x2b70a4: 0x686,
      _0x541841: 0x852,
      _0x3962a2: 0x852,
      _0x4a7951: 0x19ad
    },
          a0_0x323cb0 = {
      _0x4b53d5: 0x19d2
    },
          a0_0xc072e3 = {
      _0x51ca12: 0x1157,
      _0x41a596: 0xe41,
      _0x1b1bfb: 0x1398,
      _0x13c7c5: 0x1398,
      _0x5e471d: 0x1398
    },
          a0_0x405c67 = {
      _0x3bc87d: 0x1d66,
      _0x222a64: 0x11ed
    },
          a0_0x2a34ff = {
      _0x18d83c: 0x235b,
      _0xeb3685: 0x16c5,
      _0x6cfba1: 0x1293
    },
          a0_0x4136cb = {
      _0x5c2fa0: 0x1d66,
      _0x1f6c82: 0x15e0,
      _0x4c254e: 0x287,
      _0x144682: 0x1870,
      _0x3e03da: 0x91b
    },
          a0_0x39dfc6 = {
      _0x105ef6: 0x250d,
      _0x32270d: 0x13b7,
      _0x34b595: 0x235b,
      _0x48a54c: 0xd3f,
      _0x15f1e1: 0xcf2,
      _0x49fb04: 0x2606,
      _0x57cdcf: 0xd3f
    },
          a0_0x1daf1b = {
      _0x1b63a7: 0x19d2,
      _0x5d00c2: 0x19d2
    },
          a0_0x5ec60f = {
      _0x42d951: 0x864,
      _0x107903: 0x1e35,
      _0x313d8c: 0x157f,
      _0x165ae8: 0x1d66,
      _0x339092: 0x21cb,
      _0x2156f8: 0x1d66,
      _0x455585: 0x186d
    },
          a0_0xcf58b4 = {
      _0x1b8e40: 0x1d66,
      _0xc9e731: 0x1551,
      _0x2c9ba0: 0x260e,
      _0x4bf1cd: 0x1d66,
      _0x40389c: 0x188e
    },
          a0_0x24652e = {
      _0x4f3d08: 0x1c15,
      _0x48c2c7: 0x1c15,
      _0x53fefb: 0xa26,
      _0x32446c: 0x185e,
      _0x37ea7c: 0x1afd,
      _0x5dc320: 0x1d66,
      _0x382429: 0x15e0,
      _0x3ed6ea: 0x246a,
      _0x20e271: 0x235b,
      _0x13c4c6: 0x185e,
      _0x2b5937: 0x4b9,
      _0x152ead: 0x185e,
      _0x1190b2: 0x1f41,
      _0x16ea6b: 0x14d2,
      _0x591cfc: 0x1256,
      _0x583be4: 0x996,
      _0x76d9ae: 0x2667,
      _0x597886: 0x20b1,
      _0x4c01bf: 0x1870,
      _0x1b09f4: 0x287,
      _0x3f08a7: 0x1a35,
      _0x3aba9: 0x1a35,
      _0x288c47: 0x880
    },
          a0_0xae207e = {
      _0x497a6f: 0x952,
      _0x591788: 0x1a2c,
      _0x52260e: 0xe6d
    },
          a0_0x3dbcdd = {
      _0x37c440: 0x1d55,
      _0x49cb51: 0x1063
    },
          a0_0x452bef = {
      _0x144a1f: 0x1d52,
      _0x53d8f6: 0x190b,
      _0x5ee11c: 0x1d55,
      _0x163d3e: 0x190b,
      _0x3c879e: 0x1d55,
      _0x54f06d: 0x539,
      _0x2f7bc1: 0x5ee,
      _0x47926b: 0x5ee,
      _0x36f29c: 0x2174,
      _0x12dd2d: 0x1707,
      _0x184b3a: 0x912,
      _0x3ac3d7: 0x2085,
      _0x57c90e: 0x190b,
      _0x4aec29: 0x912,
      _0xd9e15a: 0x190b,
      _0x2e1636: 0x1dde,
      _0x183b59: 0x912,
      _0x3e5b7b: 0x190b,
      _0x1ff437: 0x912
    },
          a0_0xc18300 = {
      _0x56d720: 0x502,
      _0x4004c7: 0x1112,
      _0x4269c2: 0x1d55,
      _0xb580d3: 0x12d2,
      _0x27d580: 0x185e
    },
          a0_0x1b96c2 = {
      _0x46f45f: 0x14d2,
      _0x495234: 0xa1a
    },
          a0_0x4ceeee = {
      _0x1d29a9: 0x1a3
    },
          a0_0xcbaab0 = {
      _0x578c5e: 0x1ec6,
      _0xcdb89f: 0xa1a
    },
          a0_0x245095 = {
      _0x39800a: 0x1985
    },
          a0_0x124847 = {
      _0x517f28: 0x1d51
    },
          a0_0x3b2e5f = {
      _0x43319f: 0xc95,
      _0x3e1e39: 0xc31,
      _0x4f99ee: 0x1063
    },
          a0_0x5b34e7 = {
      _0x13e700: 0x1b7a,
      _0xe66716: 0x163e,
      _0x1f123d: 0x1d2,
      _0xaad462: 0x1ed
    },
          a0_0x5967c1 = {
      _0x2f9a60: 0x8d1,
      _0x4eca84: 0x1d66,
      _0x1aaf47: 0x852
    },
          a0_0x43dd0e = {
      _0x5f1ed2: 0x1d3e,
      _0x3ddeb1: 0x119f,
      _0x1457d8: 0x112d
    },
          a0_0x58a7c2 = {
      _0x5e7c20: 0x1a3,
      _0x548fa7: 0x13ef
    },
          a0_0x447cb3 = {
      _0x51fcb0: 0x1398
    },
          a0_0x256767 = {
      _0x59a6a9: 0x1549
    },
          a0_0x730fd = {
      _0x3e9f9f: 0x1985,
      _0x579572: 0x2530
    },
          a0_0x1e6761 = {
      _0x16214c: 0x1985,
      _0x1637d1: 0x1c94
    },
          a0_0x5a0b10 = {
      _0x16a196: 0x14d2,
      _0x32a6c1: 0x1da5,
      _0x197fce: 0x21a8
    },
          a0_0x3b3ca2 = {
      _0x1f9b68: 0x14d2,
      _0x37c965: 0x1da5,
      _0x4c7251: 0x177a
    },
          a0_0x461871 = {
      _0x43b452: 0x1da5,
      _0x288941: 0x968
    },
          a0_0x2526a2 = {
      _0x3b502f: 0x1da5,
      _0x48fb67: 0x114b
    },
          a0_0x74875c = {
      _0x1eddc0: 0x22a6
    },
          a0_0x24a1cb = {
      _0x3aa75a: 0x88e
    },
          a0_0x1b75f6 = {
      _0x34a4f9: 0x1d66,
      _0x2b35c7: 0x2602,
      _0x4b3aa5: 0x2034
    },
          a0_0xc4bb80 = {
      _0x3a66ba: 0xc95,
      _0x3b77c5: 0xa72,
      _0x1f1889: 0xa72,
      _0x42708a: 0xc95,
      _0x26c146: 0xa72,
      _0x279464: 0x235b,
      _0x7c1bf8: 0xd11,
      _0x3b4e93: 0x1063
    },
          a0_0x167598 = {
      _0x3b5a1b: 0x21b8,
      _0x28e077: 0x1fe9,
      _0x4bb40d: 0xe1b,
      _0xb97c07: 0x17a7,
      _0x3fca0a: 0x1f30,
      _0x482bfe: 0x1f30,
      _0x500b33: 0x2080,
      _0x2f047c: 0x1fe9
    },
          a0_0x2acc51 = {
      _0x36148d: 0x1820,
      _0x2860fc: 0xd3f,
      _0x1088a5: 0x1820,
      _0x5a1b5d: 0x1291
    },
          a0_0x470120 = {
      _0x324c03: 0x16d0,
      _0x1ea16b: 0x1223,
      _0x137ffd: 0x170b,
      _0x500c83: 0x19d1
    },
          a0_0x313b96 = {
      _0xc8a0d9: 0x19e6,
      _0xaf25eb: 0x19d1,
      _0xc05658: 0x145f,
      _0x40a870: 0xc1d,
      _0x195b81: 0x1e36,
      _0x1b622d: 0x1c00,
      _0x5ad0db: 0x1c00,
      _0x45530f: 0x7b5,
      _0xf1ad5b: 0xd08,
      _0x54d244: 0x2637,
      _0x2d07df: 0x2488,
      _0x36f80c: 0x1a3,
      _0x4fd5dd: 0xdd9
    },
          a0_0x3fe991 = {
      _0x330fc1: 0x1985,
      _0x1d88e4: 0x2235,
      _0x9aff0b: 0x1985,
      _0x1cfdca: 0x1a52,
      _0x149260: 0x1d66,
      _0x37b8c9: 0xe1f
    },
          a0_0x1a7bdc = {
      _0xe3ff9a: 0xc95,
      _0x436189: 0xc95,
      _0x335d06: 0x24e7,
      _0x58df21: 0x235b,
      _0x1953bf: 0x185e,
      _0x10b9cb: 0x1c34,
      _0x44f043: 0x1063
    },
          a0_0x18694d = {
      _0x4c8663: 0xc95,
      _0x1a65c6: 0x235b,
      _0x5f3d21: 0x185e,
      _0x189d23: 0x421,
      _0x38596d: 0x185e,
      _0x13ef91: 0xfeb,
      _0x45599a: 0x185e,
      _0x573d40: 0x1774
    },
          a0_0x1f2d54 = {
      _0x4ba593: 0xc95,
      _0x4a1e85: 0xa72,
      _0x51a0c4: 0x235b,
      _0x232134: 0xc74,
      _0x596156: 0x1063
    },
          a0_0x525f7b = {
      _0xee2c19: 0x20a9
    },
          a0_0x1ca8a6 = {
      _0x47424d: 0xbd6,
      _0x15254d: 0x1063
    },
          a0_0x2d126d = {
      _0x5c80ff: 0x1820
    },
          a0_0xd821f2 = {
      _0x125a38: 0x1820,
      _0x31b1ec: 0x1d66,
      _0x558b0b: 0x4b9,
      _0x162b10: 0x13b4,
      _0x4a2ea5: 0x13b4
    },
          a0_0x58b36e = {
      _0x225e09: 0x2488,
      _0x4813a7: 0x2488,
      _0x5eaf1b: 0x18c
    },
          a0_0x2cc591 = {
      _0x1fae2a: 0x5da,
      _0x3c9e8a: 0x1a4d,
      _0x9cf1d: 0x5da,
      _0x374d34: 0x10d2,
      _0x118f2e: 0x1749,
      _0xb2c268: 0x14d2,
      _0x40c6d7: 0x1c83
    },
          a0_0x2d2f97 = {
      _0x50c132: 0x11ac,
      _0x4635d0: 0x5da,
      _0x5332c4: 0x5da,
      _0x5eb789: 0x15c3,
      _0x50d8a7: 0x15c3,
      _0x107020: 0x1a7b,
      _0x37d8ad: 0x1047,
      _0x2bc72a: 0x1d66,
      _0xeb226f: 0xf2f,
      _0x2c713e: 0x1e93,
      _0x1349f1: 0xf2f,
      _0x47fa7c: 0x20f0,
      _0x27ed67: 0x10d2,
      _0x571b46: 0xf2f,
      _0x3f3686: 0x1749,
      _0x1e1654: 0x14d2,
      _0x530174: 0x1da5
    },
          a0_0xb1ab0c = {
      _0x24abf7: 0x24c7,
      _0x4e506a: 0x10f6,
      _0x530f90: 0x11dc,
      _0x1c9da9: 0x3b1,
      _0x963dcb: 0x22e6,
      _0x460972: 0x2c5,
      _0x4d2147: 0x2521,
      _0x11ed83: 0x1870,
      _0x16d1bb: 0x17f
    },
          a0_0x3f11f0 = {
      _0x485822: 0x24c7,
      _0x2daf43: 0x24c7,
      _0x13b6df: 0x1063
    },
          a0_0x1a2961 = {
      _0x46f5f2: 0x1453,
      _0x1a614d: 0x1349,
      _0x1f4940: 0xbb1
    },
          a0_0x1bf3b0 = {
      _0x5ddc5f: 0x37e,
      _0x4a7ca5: 0x22b5,
      _0x2ffb15: 0x1985,
      _0x12ee95: 0x4c5,
      _0x198325: 0x1d66,
      _0x55d808: 0x1063
    },
          a0_0xf5106c = {
      _0x1634b8: 0x1d66,
      _0x26d75f: 0x15e0,
      _0x1e1c52: 0x7d9,
      _0x5d8ce9: 0x2379,
      _0x3cff57: 0x1d66,
      _0x5f49ef: 0x1d66
    },
          a0_0x50bacc = {
      _0x439a7a: 0x1d66,
      _0x26e540: 0x1e35,
      _0x5dea85: 0xa58,
      _0x317435: 0x1e35,
      _0x2edef7: 0xfe1,
      _0xdca307: 0x1870
    },
          a0_0x5f22df = {
      _0x50eb7a: 0x1e35,
      _0x405ff5: 0x1d66,
      _0x4776c6: 0x1d66,
      _0x3824a9: 0x1b66
    },
          a0_0x4f3946 = {
      _0x508a7f: 0x1068,
      _0x3e2686: 0x15e0,
      _0x511e49: 0x1d66,
      _0x286186: 0x425,
      _0x5303a7: 0x1870,
      _0x4ae8cf: 0x1b8a
    },
          a0_0x2bf20e = {
      _0x3e3107: 0x284,
      _0x488474: 0xebb,
      _0x50102a: 0x1e35
    },
          a0_0x4039d2 = {
      _0x569c1a: 0x1d66,
      _0x48ddae: 0x15e0,
      _0x1f5bc1: 0x1b37
    },
          a0_0x502060 = {
      _0x24c0f7: 0x185e,
      _0x4c92cb: 0x1b37,
      _0x230267: 0x91b
    },
          a0_0x49730e = {
      _0xd2a54d: 0x20a9,
      _0x2d7b0c: 0x1e0a
    },
          a0_0xd602a5 = {
      _0x5ffe8b: 0x1dc6,
      _0x1e135f: 0x4b9,
      _0x276467: 0x1f30
    },
          a0_0x177ad1 = {
      _0x1c820f: 0x1b37,
      _0x50395a: 0x1d66,
      _0x384d6e: 0x24cc,
      _0x4f8f11: 0x1d66
    },
          a0_0x56fb44 = {
      _0x5d8ce7: 0x1a4d,
      _0x2f9d8c: 0x1d66,
      _0x5dc763: 0x1870
    },
          a0_0x4005e2 = {
      _0x1c9f1b: 0x235b,
      _0x536586: 0x14d2,
      _0x298b37: 0x19c5,
      _0x72f497: 0x20bd,
      _0x3c8d85: 0x18da,
      _0x39df4a: 0x28d,
      _0x22db70: 0x14d2,
      _0x4c7d36: 0x1889,
      _0x2fd7c9: 0x5a2,
      _0x5ccefc: 0x14d2,
      _0x4ab241: 0xe5b,
      _0x33fc14: 0x2c8,
      _0x54c328: 0x19c5,
      _0x1dd07d: 0x14d2,
      _0x32c1f6: 0x19c5,
      _0x493260: 0x27e,
      _0x2f1134: 0x19c5,
      _0x18b433: 0x19c5,
      _0x6219e6: 0x14d2,
      _0x1096d6: 0x121f,
      _0x30d668: 0x5d3,
      _0x489c38: 0x19c5,
      _0x46b248: 0x19c5,
      _0x22d874: 0x164b,
      _0x16addd: 0x14d2,
      _0x212968: 0x19c5,
      _0x3e289b: 0xb44,
      _0x35369a: 0x23de,
      _0xbb39f6: 0xb2d,
      _0x38077a: 0x19c5,
      _0x392d29: 0x12be,
      _0x2b4a48: 0x14d2,
      _0x1fe33d: 0xf34,
      _0x8dcc1e: 0xe03,
      _0xc70b07: 0x1a95,
      _0x4f8ce9: 0xe03,
      _0x15b3c0: 0xdfc,
      _0x4de4f3: 0x1bc9,
      _0x2b4aaa: 0x25cc,
      _0x4a62f9: 0xe03,
      _0x3d05f6: 0x19c5,
      _0x1863e5: 0x1b5c,
      _0x5515af: 0x14d2,
      _0xcb78c5: 0x14d2,
      _0x15a0d0: 0x19c5,
      _0x127fba: 0xaf4,
      _0x44e3b1: 0x14d2,
      _0x3e1d4c: 0x15f0,
      _0x57cce3: 0x19c5,
      _0xbe0d8d: 0x14d2,
      _0x524f0d: 0x104b,
      _0xbcee06: 0x14d2,
      _0x13be54: 0x1018,
      _0x128959: 0x14d2,
      _0x18f2ee: 0xe2e,
      _0x449341: 0x5fe,
      _0x313312: 0x14d2,
      _0x2b2590: 0x1ff4,
      _0x2d4740: 0x19c5,
      _0x405a56: 0x1492,
      _0x233a83: 0x19c5,
      _0x2a9f96: 0x16ed,
      _0x33975d: 0x19c5,
      _0x335d5b: 0x19c5,
      _0x2da105: 0x1527,
      _0x4f507e: 0x14d2,
      _0x4ee146: 0x19b9,
      _0x46d207: 0x11be,
      _0x2b0de6: 0x19c5,
      _0x2c6398: 0xe6b,
      _0x5674d6: 0x19c5,
      _0x4b584b: 0x14d2,
      _0x12d56e: 0x17b8,
      _0x2692f7: 0x118d,
      _0x1d7a50: 0x314,
      _0x12e3fd: 0x2339,
      _0x14b473: 0x14d2,
      _0x5a8de4: 0x19c5,
      _0x4066b8: 0x1773,
      _0x1e95cb: 0x19c5,
      _0x512574: 0x14d2,
      _0x4bb2dc: 0x19c5,
      _0x20e6c7: 0x19c5,
      _0x145196: 0x14d2,
      _0x5ae936: 0x106e,
      _0x5655be: 0x14d2,
      _0x4ddfa2: 0x19c5,
      _0x6f9875: 0x1a9b,
      _0x1e18b1: 0x236a,
      _0x121f85: 0x67c,
      _0x535d90: 0x14d2,
      _0x212be6: 0x124a,
      _0x5d92de: 0x203c,
      _0x3b15db: 0x19c5,
      _0x570cd5: 0x1129,
      _0x2e1a2e: 0x14d2,
      _0x431bb7: 0x19c5,
      _0x65ddf7: 0x42c,
      _0x3dfc15: 0x14d2,
      _0x5ef67b: 0x19c5,
      _0x39a7c4: 0x256,
      _0x18e963: 0x13b8,
      _0x2dd08d: 0x19c5,
      _0x4eb027: 0x2258,
      _0x33b9aa: 0x2335,
      _0x4bdc48: 0x14d2,
      _0x3c4297: 0x21ed
    },
          a0_0x396428 = {
      _0x3c998e: 0x1d66,
      _0x2184a1: 0x1085
    },
          a0_0x35823f = {
      _0x4127d0: 0x628,
      _0x5b1f16: 0x25f3
    },
          a0_0x14defe = {
      _0x10e006: 0x2530,
      _0x102afd: 0xb3d,
      _0x43d4e: 0x1820,
      _0x46c7d6: 0x16c5,
      _0x4700ad: 0x1c74
    },
          a0_0x3e05bb = {
      _0x3e8094: 0x1820,
      _0x19755e: 0x16c5,
      _0x53410f: 0x1456,
      _0x23d768: 0x2001,
      _0x3422cb: 0x2e2,
      _0x2369e8: 0x273,
      _0x4d2981: 0x1600,
      _0x1f56b5: 0x220f
    },
          a0_0x599caf = {
      _0x3fc87f: 0xf42,
      _0x2e55dc: 0x1e35,
      _0x54ecd1: 0x1acd,
      _0xe932fa: 0x5b2,
      _0x392df3: 0x1d66,
      _0x1a1b65: 0x1e35,
      _0x1f95b1: 0xd91,
      _0x1221c6: 0x17d,
      _0x5764fc: 0x17d,
      _0x8dca86: 0x1d66,
      _0x836afc: 0x650,
      _0xefd839: 0x1d66,
      _0x376154: 0x1fe2
    },
          a0_0x5378af = {
      _0x585825: 0x1366,
      _0x2c4188: 0x16c5,
      _0x43aaa2: 0x2128
    },
          a0_0x4ff69b = {
      _0x27b50b: 0x538,
      _0x3b169d: 0xc2a,
      _0x5ef367: 0x2314
    },
          a0_0x3d2622 = {
      _0x520126: 0x16c5,
      _0x57a145: 0x235b,
      _0x1b3a20: 0x1f97,
      _0x435476: 0x2671,
      _0x461bcd: 0x1f30,
      _0x3fd498: 0x2292
    },
          a0_0x4a408e = {
      _0x3004a0: 0x535
    },
          a0_0x532858 = {
      _0x3275c6: 0x1b8c,
      _0x43b8aa: 0x1507,
      _0x27beb0: 0x8e7
    },
          a0_0x11a58c = {
      _0x4f5d1c: 0x1ea6
    },
          a0_0x1eecbb = {
      _0x74f343: 0x14d2,
      _0x9be052: 0x235b,
      _0x2ef1da: 0x185e,
      _0x15161e: 0x263f
    },
          a0_0x52f6ab = {
      _0xfc0fdf: 0x1820
    },
          a0_0x5f40c5 = {
      _0xc582b6: 0x20b4,
      _0x71b99a: 0x159e,
      _0x1fa9df: 0x1b65,
      _0x29ec38: 0x535,
      _0x5b2701: 0x1de9,
      _0x14af6e: 0x14d2,
      _0x133f9c: 0x20ef,
      _0x19fe0e: 0x14d2,
      _0x384e16: 0x154e,
      _0x5b6c5f: 0x1d66,
      _0x379ea3: 0x14d2,
      _0x13a2ff: 0x1a5,
      _0x456e75: 0x14d2,
      _0x3476bc: 0x1a5,
      _0x2957d2: 0x1a5,
      _0x1596cb: 0x1d7c,
      _0x5171e8: 0x535,
      _0x4a5e8b: 0x267c,
      _0x119879: 0x235b,
      _0x25008d: 0x342,
      _0x3dda43: 0x24ee,
      _0x13cf94: 0x1da5,
      _0x1eec8e: 0x2444,
      _0x1c25a1: 0x535
    },
          a0_0x148223 = {
      _0x215e0b: 0x16c5,
      _0x1a54de: 0x2140
    },
          a0_0x5e6f4c = {
      _0x557609: 0x14d2,
      _0x103fa6: 0x1aed
    },
          a0_0x2e41ea = {
      _0x5404f0: 0x535
    },
          a0_0x197732 = {
      _0xb280b1: 0x2618
    },
          a0_0x259d2e = {
      _0x21a5d6: 0x535
    },
          a0_0x2d95dd = {
      _0x24353d: 0x15c3
    },
          a0_0x2b660c = {
      _0x1a6164: 0x535,
      _0xfdfd1f: 0x2515
    },
          a0_0xda40c5 = {
      _0x5d8da9: 0x535,
      _0x1e0beb: 0x97b
    },
          a0_0x38884e = {
      _0x19d96b: 0x235b,
      _0x5dbcdc: 0x4fc
    },
          a0_0x5e1107 = {
      _0x1b8a9b: 0xa26,
      _0x5c2aea: 0x235b,
      _0x147cec: 0x185e,
      _0x512ce4: 0xa26,
      _0x2a63b1: 0xe85,
      _0x12fbec: 0x535,
      _0x59e05b: 0x138f
    },
          a0_0x21b226 = {
      _0x476ba5: 0xa26,
      _0x5f5628: 0x185e,
      _0x344ba1: 0xa26
    },
          a0_0x2d9008 = {
      _0x128d83: 0x13ef
    },
          a0_0x465f63 = {
      _0x37bc70: 0x535,
      _0x1b8fd0: 0x260b
    },
          a0_0x4b186c = {
      _0x4aa688: 0xfd4
    },
          a0_0x4b53d8 = {
      _0x41f344: 0x235b,
      _0x5b7c0a: 0x16c5,
      _0x508e74: 0x535
    },
          a0_0x59af09 = {
      _0x576777: 0x535
    },
          a0_0x53fc3f = {
      _0x35cf4b: 0x1291,
      _0x21cf7f: 0x1820,
      _0x57668f: 0x16c5,
      _0x19bc07: 0x1d66,
      _0x43894e: 0x15b2,
      _0x10ffb1: 0x13f4,
      _0x537443: 0x24c7,
      _0x44c8f8: 0x186b,
      _0x556a74: 0x2506,
      _0x242a70: 0x112d,
      _0x4e9589: 0x535
    },
          a0_0x4e5f8c = {
      _0x559c8b: 0x185e,
      _0x25ca7e: 0x9ca,
      _0x21e533: 0x535,
      _0x53e876: 0x1063
    },
          a0_0xb802cb = {
      _0x35db0d: 0x186b,
      _0x4a9423: 0x2506,
      _0x351f6b: 0x535
    },
          a0_0x4cb3a3 = {
      _0x190977: 0x1147,
      _0x80c2f3: 0x535
    },
          a0_0x14569e = {
      _0x1b8a4f: 0x535
    },
          a0_0x3c6b39 = {
      _0x3a0ada: 0x1294,
      _0x36e898: 0x535
    },
          a0_0x52d8f9 = {
      _0x9bd363: 0x1291,
      _0x51701c: 0x535,
      _0x10ecb1: 0x1985,
      _0xca3347: 0x1d66,
      _0xe5f8a7: 0xf9d
    },
          a0_0x5e368c = {
      _0x488e3a: 0x235b,
      _0x4c501d: 0x185e,
      _0x59ed0f: 0x4b9,
      _0x48796d: 0x989,
      _0x12ee8b: 0x2530
    },
          a0_0x22315d = {
      _0x221c51: 0x1820,
      _0x2460db: 0x16c5,
      _0x1bd9f9: 0x25e6,
      _0x1eae3b: 0x535,
      _0x1e9d1b: 0x1985,
      _0x153f63: 0x2530,
      _0x8785b4: 0x1d66
    },
          a0_0x5a5a14 = {
      _0x104e4f: 0x1820,
      _0x4947f1: 0x1820,
      _0x42ac1f: 0x16c5,
      _0x1ce897: 0x1c8
    },
          a0_0x53193d = {
      _0x54930c: 0x1291,
      _0x3209fe: 0x16c5
    },
          a0_0x10d866 = {
      _0x27fa02: 0x1291,
      _0x251f6a: 0x235b,
      _0x3a2d3a: 0x2530
    },
          a0_0x152df2 = {
      _0x3fb4f7: 0x235b,
      _0x3369cb: 0x1291,
      _0x1fd0f3: 0x1d66,
      _0x569333: 0x2272
    },
          a0_0x3554b4 = {
      _0x4501b9: 0x1366,
      _0x565496: 0x2272,
      _0x2e961d: 0x2530,
      _0x4e5e1c: 0x40d,
      _0x4b39e5: 0x40d,
      _0x388228: 0x9c3,
      _0x4b3105: 0x9c3,
      _0x3bd492: 0x1f6a,
      _0x22b91f: 0x2272
    },
          a0_0x419d0a = {
      _0x275e50: 0x535,
      _0x4a981c: 0x1289,
      _0x5ba7f9: 0x185e,
      _0x353965: 0x1d55
    },
          a0_0x3c0d02 = {
      _0x39e1f5: 0x1870,
      _0x563f44: 0x535,
      _0xc6af7e: 0x1b37,
      _0x7227d6: 0x1820,
      _0x4f1d66: 0x16c5,
      _0x1b7c68: 0x12da,
      _0x4dc464: 0x4fc
    },
          a0_0x11b937 = {
      _0x11f0ad: 0x535,
      _0x5e3a50: 0x116a
    },
          a0_0x3c4324 = {
      _0x351c06: 0x535,
      _0x3971d0: 0x1cd8
    },
          a0_0x1bac2d = {
      _0x11ca98: 0x1291,
      _0x372006: 0x235b,
      _0x172a88: 0x16c5,
      _0x2d6b76: 0x1d66,
      _0x48346d: 0x15e0
    },
          a0_0x30da29 = {
      _0x528546: 0x1684,
      _0x37dbe8: 0xe2a,
      _0x154a7b: 0x12da
    },
          a0_0x33a150 = {
      _0x4b6d20: 0x1180,
      _0x12c6ca: 0x2530,
      _0x435930: 0x12d8,
      _0x368f9a: 0x17f,
      _0x52c8c9: 0x1878,
      _0x150a59: 0x64e,
      _0x1b5138: 0x1357,
      _0x5aa920: 0x9ad,
      _0x5d0ffd: 0x1e21,
      _0x3c5533: 0x9ad,
      _0x459a9b: 0x75f,
      _0xd561fc: 0x9b9,
      _0x80dd92: 0x2140,
      _0x5a8c85: 0xf45,
      _0x206ba9: 0x1a54,
      _0x27a89d: 0x539,
      _0x454d69: 0x19d2,
      _0x3beda8: 0x348,
      _0x27cbef: 0x1e2d,
      _0x120a6d: 0x90f,
      _0x2c529b: 0x1b29,
      _0x24ae94: 0x9ad,
      _0x57868c: 0x1e82,
      _0x33eda8: 0x255b,
      _0xb4ed12: 0x19c5,
      _0x5d9d9b: 0x14d2,
      _0x3bf85f: 0x121d
    },
          a0_0x438a2c = {
      _0x375f9a: 0x235b,
      _0x45fe28: 0x185e,
      _0x4fec8e: 0x1d52,
      _0x453f82: 0x535,
      _0x596cdd: 0x801,
      _0x3fd702: 0x535,
      _0x1e6752: 0x535,
      _0x2b112a: 0x648,
      _0x218deb: 0x535,
      _0x990414: 0x535,
      _0x418ffd: 0x1f93,
      _0x4805de: 0x648,
      _0x5d6d0b: 0x648,
      _0x3b7221: 0x241e,
      _0x2a8168: 0x15ab,
      _0x31eb5f: 0x76d,
      _0x5178ca: 0x1a3,
      _0x1746cd: 0x2606,
      _0xc77079: 0x1d55,
      _0x439796: 0x648,
      _0xe65029: 0x1f30,
      _0x17206d: 0x535,
      _0x1b7cf4: 0x1f30,
      _0x1a8357: 0x1f30,
      _0x53b1e1: 0x50a,
      _0x597387: 0xe3b,
      _0x21a4a3: 0x2530,
      _0x3dcde9: 0x17f
    },
          a0_0x340ec2 = {
      _0x18fbc9: 0x16b7,
      _0x3fd2eb: 0xea1,
      _0x22b388: 0x7dc,
      _0x49011c: 0x1d2
    },
          a0_0xd5f206 = {
      _0x32e315: 0x1e77
    },
          a0_0x5ceb5d = {
      _0x548497: 0x1e77
    },
          a0_0x51085a = {
      _0x5e3cef: 0x1e77
    },
          a0_0x5f5c62 = {
      _0xa2082: 0x140f,
      _0x2301fe: 0x1132
    },
          a0_0x54c9f1 = {
      _0x3c0cee: 0x13ed
    },
          a0_0x413644 = {
      _0x33e3b8: 0x140f,
      _0x2415fc: 0x13ed
    },
          a0_0xaff69e = {
      _0x116cc8: 0xe2b
    },
          a0_0x528f6f = {
      _0x5176f5: 0x1a54
    },
          a0_0x542e6b = {
      _0xa6090: 0x2085
    },
          a0_0x1ded78 = {
      _0x4eccaf: 0x1d55
    },
          a0_0x2d6f65 = {
      _0x4383af: 0x8d2
    },
          a0_0x15195b = {
      _0x5b506b: 0x2219,
      _0x2c96f6: 0x2219
    },
          a0_0x28e540 = {
      _0x5c077c: 0x181b,
      _0x570294: 0x1b4b,
      _0x105194: 0x1b4b,
      _0x26fb14: 0xc6d,
      _0x2e2cbe: 0x1f0f,
      _0x3f1419: 0x535,
      _0x460865: 0x20e8
    },
          a0_0x272cf4 = {
      _0x12686d: 0x235b,
      _0x40c17d: 0x2606,
      _0x70ae0c: 0x16c5,
      _0x47bfe7: 0x1afd,
      _0x2778c4: 0x181b,
      _0x592fc8: 0x1b4b,
      _0x5d382d: 0x15ab,
      _0x544430: 0x1e68,
      _0x422442: 0x105c,
      _0x1f1a1e: 0x1cda,
      _0x2f5545: 0x44e,
      _0x5b60e9: 0x44e,
      _0x57fd00: 0xb62,
      _0x34589a: 0x12b2,
      _0x80d87c: 0x535,
      _0x3439dd: 0xc19,
      _0x76321c: 0x1a3,
      _0x4928de: 0xf05,
      _0x47c771: 0x1cda
    },
          a0_0x4eb73c = {
      _0x182f35: 0x1afd,
      _0x1a5912: 0x1f30,
      _0x54a1c6: 0x181b,
      _0xec3c9d: 0x1b4b,
      _0x5511e9: 0x15ab,
      _0x228bd2: 0x15ab,
      _0x12a707: 0xa26,
      _0x225cc3: 0xa26,
      _0x4e5ab7: 0x1e68,
      _0x31cb96: 0x105c,
      _0x15bf90: 0x105c,
      _0x96e056: 0x1cda,
      _0x22d035: 0x44e,
      _0x5d79ec: 0xb62,
      _0x5acbad: 0x15d4,
      _0xc39a7b: 0x12b2,
      _0x2923b6: 0x535,
      _0x468f82: 0x44e,
      _0x43ef00: 0x15d4
    },
          a0_0x25fa8e = {
      _0x479394: 0x181b,
      _0x15e960: 0x181b,
      _0x3f7e3e: 0x181b,
      _0x443189: 0x19b5,
      _0x198ba9: 0x181b,
      _0x1740f0: 0x2514
    },
          a0_0x2ed7af = {
      _0x1caf26: 0x700,
      _0x36425e: 0x967
    },
          a0_0x1b4152 = {
      _0x283a87: 0x1fe9,
      _0x487ce7: 0x1023,
      _0x376196: 0x1119,
      _0xceca15: 0x1d66,
      _0xfaa3ec: 0x1131,
      _0x19677c: 0x216c,
      _0xd7b8bd: 0x1e35,
      _0xac3e6a: 0x1285,
      _0x533de4: 0x1023,
      _0x510ec0: 0x1f59
    },
          a0_0x59344f = {
      _0xb359d7: 0x1fe9,
      _0x912f65: 0x9ad,
      _0x1d0ca4: 0x1119,
      _0x515bef: 0x1e35,
      _0x433309: 0x1131,
      _0x24b461: 0x216c,
      _0x28a064: 0x216c,
      _0x1ec40e: 0x1023,
      _0x2c91f1: 0x663,
      _0x48fdb5: 0x1285,
      _0x412bbd: 0x300
    },
          a0_0x40d8c1 = {
      _0x2e36de: 0xcf8,
      _0x38b880: 0x1119,
      _0x5955a1: 0x1acd,
      _0x3e7b30: 0x1131,
      _0x35efc6: 0x216c,
      _0x1bdf49: 0x1d66,
      _0x254347: 0x23ce,
      _0x2b84a6: 0x1e35,
      _0x3cb703: 0x300,
      _0x202072: 0x1f59
    },
          a0_0x556d2b = {
      _0x26f6db: 0x1119,
      _0x25ece5: 0x1e35,
      _0x2368e4: 0x1acd,
      _0x268ccb: 0x1131,
      _0x26e516: 0x216c,
      _0x300d8f: 0x1e35,
      _0x2599c3: 0x23ce,
      _0x3886f6: 0x216c,
      _0x175066: 0x1023,
      _0x4c8ac4: 0x1d66,
      _0x8423be: 0x300,
      _0x2286a8: 0x1f59
    },
          a0_0x1ce6d6 = {
      _0x2635fa: 0x2530
    },
          a0_0x4418af = {
      _0x5b41bb: 0x601,
      _0x41964d: 0x19d2,
      _0x5a9c6b: 0x177d,
      _0x195f01: 0x145f,
      _0x289986: 0xd9e,
      _0x239a04: 0x176e,
      _0x181ee6: 0x176e,
      _0xa37d53: 0x18b4,
      _0x4afd94: 0x18d6,
      _0x1ab518: 0x2316
    },
          a0_0x375b82 = {
      _0x490ae5: 0x2530
    },
          a0_0x39fa27 = {
      _0xa9ebf9: 0x1fd3,
      _0x12ad46: 0x2530
    },
          a0_0x4d3383 = {
      _0x43f2c5: 0x1878,
      _0x35565a: 0x1d66,
      _0x27d6ad: 0x1e35,
      _0x1ae234: 0x2530
    },
          a0_0x535723 = {
      _0x3b1375: 0x1180,
      _0xb8b04b: 0x1e35,
      _0x3ab297: 0x2530
    },
          a0_0x457c6e = {
      _0x4e68c9: 0x1878,
      _0x3c12a9: 0x1180,
      _0x1010c9: 0x1d66,
      _0x135f41: 0x1e35
    },
          a0_0x232da1 = {
      _0x12b019: 0xadd
    },
          a0_0x5f4a51 = {
      _0x2d921a: 0x149b
    },
          a0_0x301570 = {
      _0xb16e89: 0x103d,
      _0x4ea6c2: 0x2530,
      _0x37e371: 0x1d66,
      _0x1bbee9: 0x1e35,
      _0x44c393: 0x22f3,
      _0xa826b7: 0x2530,
      _0x4e0f53: 0x1ba3,
      _0x5ecf64: 0x1442
    },
          a0_0x59d180 = {
      _0x601b79: 0xb71
    },
          a0_0x58de70 = {
      _0xa5cbe6: 0xb71,
      _0x167b86: 0x1d66,
      _0x318076: 0x1e35,
      _0xc57293: 0xb71
    },
          a0_0x2945c3 = {
      _0x5cc45a: 0xb71,
      _0x3f94d1: 0x1e35,
      _0x54ae9a: 0xa58,
      _0x17e891: 0x1ba3,
      _0x165f8d: 0x149b
    },
          a0_0x3c0f77 = {
      _0x487710: 0x235b,
      _0xbbb2a2: 0x21e7,
      _0x221747: 0x14d2,
      _0x16ff3e: 0x19c5,
      _0xce5ea7: 0x15bd,
      _0x39c187: 0x19c5,
      _0xbb3feb: 0x1cf2,
      _0x257b5e: 0x14d2,
      _0x5095f6: 0x1dc6,
      _0xc3c343: 0x1d55,
      _0xba7347: 0x19c5,
      _0x292598: 0x1da5,
      _0xe64231: 0x18c1,
      _0xc09e7c: 0x22d1,
      _0x3a544e: 0x14d2
    },
          a0_0x4686d5 = {
      _0x162642: 0xffb,
      _0x72912c: 0x1d38,
      _0x33ae90: 0x13a4,
      _0x2420e7: 0xe6d,
      _0x169082: 0x19f0,
      _0x12762f: 0x1157,
      _0x2ce267: 0x1d2,
      _0x5ca1d9: 0x13a4,
      _0x1c1da5: 0x19d2,
      _0x5af4b8: 0x22b2,
      _0x35fd82: 0x19d2,
      _0x23cf93: 0x14d2,
      _0x2779d6: 0x1da5,
      _0x4f9765: 0x1c6b,
      _0x59a469: 0x112d,
      _0x28012c: 0x1d2
    },
          a0_0x5db71d = {
      _0x1803fb: 0x178a,
      _0x59cb30: 0x223c,
      _0x5993dd: 0x16d
    },
          a0_0x412f5f = {
      _0x500886: 0x811
    },
          a0_0x5b7e91 = {
      _0x5abedd: 0x14d2,
      _0x49fbda: 0x19c5,
      _0x453531: 0x121d
    },
          a0_0x279581 = {
      _0x42c4c1: 0x535
    },
          a0_0x326f3b = {
      _0x477d5f: 0x1fc7
    },
          a0_0x1e7b06 = {
      _0x7b13d1: 0x14d2,
      _0x8b7d3e: 0x19c5,
      _0x24c848: 0x1c54,
      _0x18abd5: 0xe03,
      _0x4b4b9e: 0x121d,
      _0x5469be: 0xed0
    },
          a0_0x3e67f3 = {
      _0x23cea7: 0x23c9,
      _0x35c396: 0x137a,
      _0x453ea4: 0x3d9,
      _0x42b900: 0x1d52,
      _0x366b60: 0x1d66,
      _0x31f20e: 0x2072,
      _0x1aca0b: 0x2061,
      _0x5be267: 0x1992,
      _0x154681: 0x1828,
      _0x533f75: 0x1329,
      _0x5e3f7: 0x1d66,
      _0x1f23ae: 0x1329,
      _0x443e41: 0x502,
      _0xbd509e: 0x3d9,
      _0x2ad57c: 0x1112,
      _0x5d672b: 0x1d55,
      _0x44465e: 0x9c6,
      _0x16d10f: 0x535,
      _0x7fb26d: 0x549,
      _0x173483: 0x7fe,
      _0x36803b: 0x3d9,
      _0x454a97: 0x22e6,
      _0x404f17: 0x3d9,
      _0x531f7b: 0xe48
    },
          a0_0x1ee2ef = {
      _0x442b6b: 0x2421,
      _0x4d96c2: 0x14ce,
      _0x4c8c66: 0x535,
      _0x19b4e1: 0x6f5,
      _0x1fb952: 0x1da5,
      _0xc60b0d: 0xd59,
      _0x588de8: 0x1da5,
      _0x2317f7: 0x14d2,
      _0x37d900: 0x1da5
    },
          a0_0x5917f3 = {
      _0xd42a6c: 0x3d9,
      _0x2a2540: 0x1f30,
      _0x55cd11: 0x1d66,
      _0x1c6eb5: 0x2072,
      _0x1b7b1d: 0x798,
      _0x4c04fe: 0x2292
    },
          a0_0x4eab0f = {
      _0x100229: 0x235b,
      _0x49d7e4: 0x14d2,
      _0x3dd51f: 0x19c5,
      _0x2daa7b: 0x19c5,
      _0x354b94: 0xa13
    },
          a0_0x43946d = {
      _0x190890: 0x235b,
      _0x25b9e5: 0x1366,
      _0x5aee66: 0x235b,
      _0x153c13: 0xd3f
    },
          a0_0x2629f1 = {
      _0x1a1921: 0x1a5a
    },
          a0_0x3739c1 = {
      _0x5e5283: 0x105a,
      _0x40e782: 0xbed,
      _0x3f5e1d: 0x1870,
      _0x4d6645: 0x1e35,
      _0x189741: 0x1adb,
      _0x45da65: 0x8b8
    },
          a0_0x421d0d = {
      _0x4381b8: 0x14d2,
      _0x5ad9c8: 0x1da5,
      _0x321aa1: 0x177b,
      _0x333e1d: 0x13ae,
      _0x1cfb56: 0x1c90,
      _0x265d9e: 0x1055,
      _0x3ebdcd: 0x11f1
    },
          a0_0x4dd655 = {
      _0x117001: 0xe6d,
      _0x92d040: 0x19c5,
      _0x224705: 0x1029,
      _0x27dc59: 0x19c5,
      _0x1a8d30: 0x14d2,
      _0x2d39e6: 0x1169,
      _0x1641c3: 0x14d2,
      _0x30b4f4: 0x1d09,
      _0x302e70: 0x2f0
    },
          a0_0xe4f858 = {
      _0x34b083: 0x12a3,
      _0x5234be: 0x1da5,
      _0x4fc7e7: 0x4a3
    },
          a0_0x44e102 = {
      _0xb6f04d: 0x1d66,
      _0x5caf78: 0x1bb8
    },
          a0_0x5e2914 = {
      _0x3207bf: 0x67e,
      _0x26977b: 0xe6d,
      _0x1571a7: 0x19c5,
      _0x5d1ed7: 0x1029,
      _0x4104e: 0x19c5,
      _0x287d22: 0x1105,
      _0x24499b: 0x8dd,
      _0x1f4ceb: 0x14d2,
      _0x528dd2: 0x1c58,
      _0x243e42: 0x19c5,
      _0x4a59eb: 0x14d2,
      _0x8098f1: 0x247b,
      _0x1249f3: 0x14d2,
      _0x3abe35: 0x9a4,
      _0x427409: 0x19c5,
      _0x36b3dd: 0x19c5,
      _0x332e7d: 0x347,
      _0x73e4cd: 0x14d2,
      _0x5e25fa: 0xddd,
      _0x1ae331: 0x875,
      _0x3fefcf: 0x22cc,
      _0x3f53c1: 0x19c5,
      _0x21555a: 0xed5,
      _0x29cf12: 0x1f4a,
      _0x29d743: 0x19c5,
      _0x1a7a14: 0x6d0,
      _0x154392: 0x14d2,
      _0x13bd72: 0x1e26,
      _0x3039fa: 0x1d0a,
      _0xe29ad: 0x19c5,
      _0x26af54: 0x712,
      _0x54a6a6: 0x203a,
      _0xf2d2d6: 0x19c5,
      _0x5c772a: 0x1701,
      _0x59d8af: 0x19c5,
      _0x16642f: 0x2f9,
      _0x57a234: 0x19c5,
      _0x5cbe76: 0x14d2,
      _0x2584d3: 0x2106,
      _0x3b5d4b: 0x8cf
    },
          a0_0x15d779 = {
      _0x3938e8: 0x4b9,
      _0x339cba: 0x1d1b,
      _0x43bbe6: 0x421,
      _0x5c0fd4: 0xfeb,
      _0x4c6a8a: 0x535,
      _0x3f0aee: 0x1c3,
      _0x7fa607: 0x421,
      _0x3f5ba7: 0x535,
      _0x2cc430: 0x535,
      _0x269710: 0x421,
      _0x5856cd: 0x4e4,
      _0x13e3f8: 0x421,
      _0x159022: 0x421,
      _0xe9faf9: 0x24bc,
      _0x4ecb5e: 0xc95,
      _0x31772d: 0x21e0,
      _0x423d84: 0x6ba,
      _0x38ae86: 0x1d55,
      _0x224b77: 0x204b,
      _0x50cb59: 0x204b,
      _0x3d88fa: 0x204b,
      _0x2b1010: 0x8e0,
      _0xd8a7a2: 0x1d4e
    },
          a0_0x3d00ee = {
      _0xf2e8aa: 0x16c5,
      _0xceec45: 0x6ba,
      _0x24e5f9: 0x17f
    },
          a0_0x299d33 = {
      _0x2c5d28: 0x1a3
    },
          a0_0x53d8c3 = {
      _0x503e: 0x14d2,
      _0x2cd58a: 0x1da5
    },
          a0_0x24cb10 = {
      _0x4de2b0: 0x1a3,
      _0x5702e6: 0x13e1
    },
          a0_0x5a93ac = {
      _0x20b7e2: 0x1da5,
      _0x4c1c5d: 0x22d5
    },
          a0_0x185fdb = {
      _0x516bca: 0x14d2
    },
          a0_0x587d87 = {
      _0x14b458: 0x2315,
      _0x292aca: 0x6da,
      _0x3a3c0a: 0x1fd5
    },
          a0_0x42bcc8 = {
      _0x14373c: 0x14d2,
      _0x4e4f32: 0x1da5,
      _0x2279eb: 0x23fc
    },
          a0_0x596f27 = {
      _0x498205: 0x15d6,
      _0x252222: 0x11d9,
      _0x504308: 0x1a3,
      _0x52290d: 0x1bd0,
      _0x3d259c: 0x2488,
      _0x6fae71: 0x4a3,
      _0x1c600d: 0x14d2
    },
          a0_0x506acf = {
      _0x3789d1: 0x2488,
      _0x1dedcc: 0x1bd0,
      _0x41d059: 0x1717
    },
          a0_0x5285ed = {
      _0x3df5c8: 0x2488,
      _0x5aa148: 0x124f
    },
          a0_0x9b0450 = {
      _0xe7277a: 0x1edc,
      _0x3f373b: 0x1edc,
      _0x31751d: 0x59d,
      _0x5eb977: 0x1a5,
      _0x4dba30: 0x9a4
    },
          a0_0xdca26e = {
      _0xae1b5a: 0x1d90,
      _0x56e3f3: 0x2430,
      _0x339dc1: 0x204b,
      _0x150736: 0x204b,
      _0x5a34da: 0x18a0,
      _0x5a1c7d: 0xf82,
      _0x53b5ed: 0x1cd1
    },
          a0_0x259c8f = {
      _0x7c0d61: 0x1d55,
      _0x585ee4: 0x1d55,
      _0x2ff33a: 0x1d55,
      _0x327dad: 0x1d66,
      _0x4b9f4d: 0xe1b,
      _0x47b6df: 0x187e,
      _0x248e37: 0x1d66,
      _0x1ac5c1: 0x15e0,
      _0x8d01f: 0x115f,
      _0x128b7e: 0x186b,
      _0x31ff13: 0x14d2,
      _0x59db1c: 0x19c5,
      _0x2f0f0f: 0xf6d,
      _0x94ddbd: 0x753,
      _0x290b59: 0x33c,
      _0x463d3c: 0x14d2,
      _0x37d0da: 0x2529,
      _0x485f0a: 0x14d2,
      _0x434ce7: 0x19c5,
      _0x140355: 0x24bc,
      _0xfcef5: 0x879
    },
          a0_0x4399ee = {
      _0x17e1c5: 0x12e5,
      _0x44d561: 0x242c,
      _0x2db9e6: 0x15d5,
      _0x11fdce: 0x253d,
      _0x37088f: 0x2404,
      _0x934a40: 0x535,
      _0x1b6627: 0x16e2,
      _0x1b1133: 0x1c06,
      _0x147932: 0x1a5,
      _0x457868: 0x1194
    },
          a0_0x4c3cfc = {
      _0x9d9272: 0x12e5,
      _0x5bf135: 0x631
    },
          a0_0x52d01d = {
      _0x221ea4: 0x1820,
      _0x54e4d6: 0x16c5,
      _0x348881: 0x4b9,
      _0x2d1d63: 0x4b9,
      _0x5973d3: 0x2b1,
      _0x499103: 0x4b9,
      _0x4985c7: 0x2b1,
      _0xae9a90: 0x2b1,
      _0x6504d4: 0x4b9,
      _0x1355fb: 0x4b9,
      _0x1ad400: 0x4b9,
      _0x11f3e2: 0x4b9,
      _0x34ea2b: 0x2b1,
      _0x254c7d: 0x2b1
    },
          a0_0x314887 = {
      _0x8d2698: 0x235b,
      _0x22136a: 0x185e,
      _0x3798b8: 0x14d2,
      _0x1ab812: 0x19c5,
      _0x39e6b8: 0xf33,
      _0x364bd4: 0x14d2,
      _0x27b11f: 0x19c5,
      _0x428176: 0x2462,
      _0x35a2d3: 0x19c5,
      _0x289113: 0x18cc,
      _0x44948c: 0x19c5,
      _0x5f151a: 0xec1,
      _0x3795b3: 0x4d2,
      _0x2f4218: 0x223a,
      _0x5c570b: 0x61d,
      _0x5e0a87: 0x1a32,
      _0xfc187d: 0x19c5,
      _0x212e8a: 0x24c,
      _0x5a0438: 0x1193,
      _0x3de9ba: 0x238b,
      _0x381372: 0xb83,
      _0x841bf8: 0x14d2,
      _0x2a9ce8: 0x6ec,
      _0x49ad94: 0x14d2,
      _0x3c2d50: 0x19c5,
      _0x5c10af: 0x1f85,
      _0xf4547: 0x14d2,
      _0x2ef751: 0x19c5,
      _0x72bb18: 0x23d,
      _0x6c6488: 0x153d,
      _0x56f77e: 0x14d2,
      _0x43dc50: 0x19c5,
      _0x386f43: 0x3d3,
      _0x1bb780: 0x11d5,
      _0x2b8226: 0x1d04
    },
          a0_0x394a97 = {
      _0x4f0bd7: 0x802,
      _0x1791e5: 0x14d2
    },
          a0_0x38e3c5 = {
      _0x4bd042: 0x2488,
      _0x78666d: 0x4a3,
      _0x21ebab: 0xf0f
    },
          a0_0x8af937 = {
      _0x14b62a: 0x802,
      _0x489585: 0x802,
      _0x4b3cc7: 0x14d2,
      _0xeacb9e: 0x20cb
    },
          a0_0x4ed055 = {
      _0x1e903f: 0x802,
      _0x580f38: 0xd61,
      _0x353e88: 0x14d2,
      _0x4028a2: 0x1da5,
      _0x18fd72: 0xca6
    },
          a0_0x2c2444 = {
      _0x424329: 0x2488,
      _0x4cf797: 0x1a3,
      _0x39dee1: 0xf87,
      _0x3237cb: 0x112d
    },
          a0_0x8f8b3c = {
      _0xf893e3: 0x14d2,
      _0x823818: 0x419
    },
          a0_0x1e21da = {
      _0x10c01d: 0x675,
      _0x16ea37: 0x14d2,
      _0x2b3931: 0x18d8
    },
          a0_0x534081 = {
      _0x38177e: 0x675
    },
          a0_0x23f2c4 = {
      _0x2fdb45: 0x535,
      _0xfb6cba: 0x1349,
      _0x3a8974: 0x15ad,
      _0x19092c: 0x2488,
      _0x3d1f42: 0xf0f
    },
          a0_0x3ad884 = {
      _0x22f7ba: 0x2488
    },
          a0_0x4710ee = {
      _0x332154: 0x2488,
      _0x297bca: 0x4a3,
      _0x20f363: 0xf0f
    },
          a0_0x4b467f = {
      _0x29d1b1: 0x2488,
      _0x251c1d: 0xf0f,
      _0x736339: 0x535,
      _0x522b4e: 0x1147
    },
          a0_0x557286 = {
      _0x326f78: 0x535,
      _0x40d0b4: 0xc95,
      _0x2c3bc8: 0xc74,
      _0x2ba039: 0x1dc8,
      _0x5de370: 0xc6b,
      _0xca6ee0: 0x174b,
      _0x484e65: 0x2488,
      _0x500ef: 0x1a3
    },
          a0_0x22475f = {
      _0x5c4854: 0x235b,
      _0x5adb76: 0x1088,
      _0x44f49d: 0x19c5,
      _0x46ed34: 0x14d2,
      _0x480d6e: 0x14d2,
      _0x5acb9a: 0x14d2,
      _0x40c8ef: 0x19c5,
      _0x25d311: 0xd4b,
      _0x226c14: 0x14d2,
      _0x46f43b: 0x19c5,
      _0x22e62a: 0x14d2,
      _0x3f57cd: 0x22b4,
      _0x1b347b: 0x14d2,
      _0x5c1464: 0x19c5,
      _0x14949f: 0x22f8
    },
          a0_0x40c262 = {
      _0x178b7c: 0x8ca,
      _0x495603: 0x14d2,
      _0x38ebad: 0xf2a
    },
          a0_0x5db9e8 = {
      _0x3f23fa: 0x1288,
      _0x3c0d5d: 0x1da5,
      _0x128a97: 0x14d2,
      _0x19496f: 0x4b9,
      _0x258e34: 0x4b9,
      _0x2e1dfa: 0x1608,
      _0x166f00: 0x1608,
      _0x40a87c: 0x1608,
      _0x48ea11: 0x2488,
      _0x13fbec: 0xbf8,
      _0x175d52: 0x16d8
    },
          a0_0x1e07be = {
      _0x57cfd0: 0x1da5
    },
          a0_0x343170 = {
      _0x2d3fa9: 0x14d2,
      _0x2f44a9: 0x18fa
    },
          a0_0x3254d0 = {
      _0x18056c: 0x185e,
      _0x3aa800: 0x14d2,
      _0x9b5e5b: 0x19c5,
      _0x33bdeb: 0x14d2,
      _0x4de563: 0x777,
      _0x58f749: 0x88f,
      _0x3ed9c3: 0x3e8,
      _0x34ce96: 0xa98,
      _0x430d24: 0x14d2,
      _0x58146f: 0x1bad,
      _0x58cadf: 0x22b0,
      _0x304d94: 0x19c5,
      _0x224531: 0xa46,
      _0x3ef367: 0x21d,
      _0x14989e: 0x14d2,
      _0x2448ed: 0x1764,
      _0x41f46e: 0x252c,
      _0xddbf0e: 0x19c5,
      _0x6c001: 0x8e6,
      _0x4a7fe6: 0x1c17,
      _0x3cecdc: 0x19c5,
      _0x22db85: 0x1def,
      _0x1a5a3b: 0x14d2,
      _0x5cdb13: 0x19c5,
      _0x18e957: 0xccf,
      _0x12a07c: 0x19c5,
      _0x627dbe: 0x19c5,
      _0x17dff5: 0x14d2,
      _0x18de40: 0x14d2
    },
          a0_0x14d764 = {
      _0x16e4d2: 0x1aab,
      _0x75d7d7: 0x16c5,
      _0x4e26ea: 0xc95,
      _0x2fd301: 0x11e6,
      _0x3a1645: 0x59d
    },
          a0_0x23bb0f = {
      _0x2af72d: 0x253d,
      _0x33e4e8: 0x1aab,
      _0x4034f0: 0x11e6
    },
          a0_0x712903 = {
      _0x46e410: 0x4b9,
      _0x265e1e: 0x1f6c,
      _0x2cf0eb: 0x535,
      _0x425dc1: 0x2034,
      _0x4ff501: 0x535,
      _0x285475: 0x1f71,
      _0x31b774: 0x18ec,
      _0x5f5ba4: 0x17b9,
      _0x1b1d9c: 0x1ee9,
      _0x4c7b6a: 0x18ec,
      _0x483853: 0x2273,
      _0x10b25b: 0x535,
      _0x102bbd: 0x1732,
      _0xc63125: 0x1ef0,
      _0x1a252f: 0x1ef0,
      _0xa7ac5e: 0x3c5,
      _0x189af2: 0x2568,
      _0x2619bc: 0x535,
      _0x3b8138: 0x2034,
      _0x20dd87: 0x2034,
      _0xe0d48f: 0x1f71,
      _0x2e9670: 0x1f30,
      _0x28991d: 0x1f30,
      _0x5c5adc: 0x535,
      _0x510131: 0x13ab,
      _0x5ebf8b: 0x731,
      _0x58b42c: 0x731,
      _0x238939: 0x2488,
      _0x8bac82: 0xb3c,
      _0x4a3acf: 0x1d22
    },
          a0_0x2a4540 = {
      _0x6b7183: 0x2488,
      _0x443fb7: 0xb3c,
      _0xb0b2db: 0x4b9,
      _0x3d587e: 0x634
    },
          a0_0x2041b9 = {
      _0x115a9d: 0x2488,
      _0x14174d: 0x1301
    },
          a0_0x45393c = {
      _0x27f234: 0x14d2,
      _0x314f90: 0x1da5
    },
          a0_0x3099b3 = {
      _0xa86800: 0x5b7
    },
          a0_0x2a8e0a = {
      _0x48a6a1: 0x145f,
      _0x2fe716: 0x535,
      _0x38ead7: 0x2034,
      _0x1c02de: 0x1d66,
      _0x285aa5: 0x1d66,
      _0x44eccf: 0x4b9,
      _0x420cbb: 0x14c4,
      _0x4b57c7: 0x2379,
      _0x2d9412: 0x731,
      _0x30bbdd: 0x1a3,
      _0x331ff4: 0x112d
    },
          a0_0x1fe0fe = {
      _0x1e8315: 0x2488,
      _0x4daf03: 0x1a07,
      _0x4c6bd1: 0xba0,
      _0xf10037: 0x1934
    },
          a0_0x256aa6 = {
      _0x16332e: 0x1d66,
      _0x233fc8: 0xec7,
      _0x533558: 0x19c5,
      _0x10e8fc: 0x6e4,
      _0x4100c9: 0x14d2,
      _0x8f728c: 0x19c5,
      _0x5ee162: 0x233a,
      _0x45445: 0x1a85,
      _0x494cbe: 0x37d,
      _0x385f81: 0x9a3,
      _0xb4c892: 0x19c5,
      _0x4efbe0: 0x1d81,
      _0x5d142e: 0x19c5,
      _0x2138f8: 0x206e,
      _0x3549f0: 0x14d2
    },
          a0_0x6e38db = {
      _0x200597: 0x535,
      _0x3662d8: 0xfba
    },
          a0_0x243a91 = {
      _0x1a4498: 0x19d2,
      _0x296bbd: 0x12dd,
      _0x46aff4: 0x1506,
      _0x339119: 0x14d2,
      _0x5e4908: 0x662,
      _0x229633: 0x2488,
      _0x190af5: 0x535,
      _0x9501a7: 0x52c,
      _0x96dcb3: 0x1f30,
      _0x21ed4c: 0x10f6,
      _0x2aa75e: 0x1d66,
      _0x51c035: 0x11dc,
      _0xf50ffa: 0x22e6,
      _0x48746c: 0x2521,
      _0x309075: 0x1d66,
      _0x48d6f2: 0xd79,
      _0x1546fa: 0xf6b,
      _0x11ea56: 0x1e21,
      _0x1355f3: 0x1d55,
      _0x2adc76: 0x1f30,
      _0x1a0388: 0x535,
      _0xe08fa8: 0x165d,
      _0x3b0af5: 0x1399
    },
          a0_0x5d5a80 = {
      _0x22dc84: 0x535,
      _0x413dc7: 0x24d7,
      _0x5b47f3: 0x1d81,
      _0x5911d4: 0x9ad,
      _0x4247d9: 0x623,
      _0x383a78: 0x13bc,
      _0x4bc967: 0x623,
      _0x35a2e3: 0x1dc8,
      _0x154988: 0xf08,
      _0x267809: 0xb29,
      _0x279b55: 0x11f5,
      _0x4d985b: 0xf79,
      _0x3de424: 0x1d66,
      _0x170ba0: 0x852,
      _0x18249a: 0x2256,
      _0x15864e: 0x1349,
      _0x5b1833: 0xbb1,
      _0x470df3: 0x572,
      _0x32bde5: 0xbb1,
      _0x23d648: 0x268,
      _0x3bd82d: 0x19e6,
      _0x1bc671: 0x1506,
      _0x216a40: 0x1d2,
      _0x2ff74f: 0x1a3,
      _0x522cb9: 0x112d,
      _0x201774: 0x1d66,
      _0x294fb3: 0x1df8,
      _0x249ee2: 0x1d9c,
      _0x163551: 0xec7,
      _0x2b9de4: 0x2488,
      _0x212d43: 0x1d39,
      _0xd1bfec: 0x1f41,
      _0x5cbbc4: 0xf6b,
      _0x5080bc: 0x14a1,
      _0x136eec: 0xfba,
      _0x481436: 0x11ae
    },
          a0_0x331118 = {
      _0x12d37e: 0x535,
      _0x17c244: 0x1a07,
      _0x2af693: 0x251,
      _0x186b4d: 0x198d,
      _0x1df940: 0x82d,
      _0xb04fe7: 0x545,
      _0x34f2dd: 0x14a5,
      _0xb3df59: 0x14d2,
      _0x453cac: 0x1757,
      _0x5cedfc: 0xf8c,
      _0x146067: 0x1934
    },
          a0_0x3f08e4 = {
      _0x1ee4c5: 0xe6d,
      _0x307962: 0x22b2,
      _0x3f4c37: 0x1d04,
      _0x16aee7: 0x19c5,
      _0x5ede42: 0x207d,
      _0x21a969: 0x168e,
      _0x2a46a9: 0x14d2,
      _0x2b8a1e: 0x1644,
      _0x4ea0b6: 0x749,
      _0x58f95b: 0x14d2,
      _0x2d46de: 0x2036,
      _0x31cf14: 0x19c5,
      _0x1be4ae: 0x204f,
      _0x3bf626: 0x19c5
    },
          a0_0x21e0b3 = {
      _0x488183: 0x1a5
    },
          a0_0x41be0a = {
      _0x1bcf61: 0x1edc,
      _0x513cca: 0x254d,
      _0x316dbe: 0x535,
      _0x2f4bb3: 0x18bb,
      _0x140564: 0x2385
    },
          a0_0x49f527 = {
      _0x1c9464: 0x535,
      _0x52f4fd: 0xfba
    },
          a0_0x20525e = {
      _0x4d46f5: 0x535,
      _0x507ce0: 0x14a5,
      _0x511025: 0x14d2,
      _0x4b1624: 0x9fa,
      _0x357ed0: 0x535
    },
          a0_0x349554 = {
      _0x9f228: 0x2488,
      _0xbfdd5a: 0x1a3,
      _0x84d68e: 0xabd,
      _0x1a7d99: 0x1512
    },
          a0_0x27b836 = {
      _0x229808: 0xe6d
    },
          a0_0x272b6d = {
      _0x1a6b3c: 0xbdc,
      _0x25f918: 0x1db5,
      _0x45a12b: 0xbdc,
      _0xcd4edd: 0x1920,
      _0x3638a0: 0x1d2,
      _0x6ae73b: 0x14d2,
      _0x5a5fba: 0x9f5,
      _0x4c1c05: 0x14d2,
      _0x53aaa3: 0x19c5
    },
          a0_0x28a6ce = {
      _0x57467d: 0x14d2,
      _0x5d36e0: 0x1da5,
      _0x1167f1: 0x1bbc
    },
          a0_0x1b6dfb = {
      _0x1b92a4: 0x196a
    },
          a0_0x1a6564 = {
      _0x5aab21: 0x2488,
      _0x5f329e: 0xbb6,
      _0x3a67d2: 0x196a
    },
          a0_0x232718 = {
      _0x4a245a: 0x235b,
      _0x38c3e8: 0x185e
    },
          a0_0x5b063a = {
      _0x3fcabc: 0x19c5,
      _0x353d33: 0x14d2,
      _0x23e4a6: 0x2455,
      _0xd6ea44: 0x14d2,
      _0x118f58: 0x5c7,
      _0x1c1b01: 0xf70,
      _0xd4c088: 0x14d2,
      _0x50b56b: 0x19c5,
      _0x1dea40: 0x8b6,
      _0x45b0ae: 0x250b,
      _0x3c2d0c: 0x19c5,
      _0x12aae4: 0x187c,
      _0x30b39c: 0x19c5,
      _0x5a0fe9: 0x19c5,
      _0x5034b8: 0x21ce,
      _0x59f360: 0x14d2
    },
          a0_0x5b4ecc = {
      _0x51bcbc: 0x2233,
      _0x50d115: 0x14d2,
      _0x35f87b: 0x79b
    },
          a0_0x1c82fb = {
      _0x40758d: 0x2488,
      _0x5f1f47: 0x1a3,
      _0x628e15: 0x1d40
    },
          a0_0x155a0a = {
      _0x57bf3a: 0x1a3
    },
          a0_0x17a509 = {
      _0x211848: 0x3a5
    },
          a0_0x535c58 = {
      _0x594dd3: 0x3a5,
      _0x32ad06: 0x3a5,
      _0x2f2364: 0x14d2,
      _0x4f2d7a: 0x1da5
    },
          a0_0x40825c = {
      _0x76af2c: 0x1da5,
      _0x2b43ac: 0x3f7
    },
          a0_0x4990ce = {
      _0x54655b: 0x318,
      _0x14aa20: 0x5a9,
      _0x44a5a7: 0x24f6,
      _0x1c579d: 0x1349,
      _0x2b6fb7: 0x138f,
      _0x8b2d51: 0x10f5,
      _0xf745d5: 0x1943,
      _0x44122f: 0xbdc,
      _0x33bf23: 0x1a3,
      _0x1e48e4: 0x1aa7
    },
          a0_0x28e01e = {
      _0x37543a: 0x235b,
      _0x4c6e43: 0x19c5,
      _0x41ea78: 0x6b8,
      _0x44adb4: 0x19c5,
      _0x105190: 0x14d2,
      _0x165810: 0x17c2,
      _0x6396a6: 0x132c,
      _0x29cf24: 0x14d2,
      _0x1e27d1: 0x19c5
    },
          a0_0x297829 = {
      _0x276f3a: 0x2488,
      _0x3f6c6f: 0x1a3
    },
          a0_0x1f7df9 = {
      _0x1f70bf: 0x535,
      _0x5ec77a: 0x74c,
      _0x72cbcc: 0xd10,
      _0x4538df: 0x12a3,
      _0x4e3136: 0x14d2,
      _0x39b8c9: 0x226c
    },
          a0_0x3a6e53 = {
      _0x998de: 0x1a07,
      _0x5b988f: 0xd10,
      _0x3c49fd: 0x1934,
      _0x22fdfd: 0x12a3,
      _0x5f58c1: 0x14d2,
      _0x166ad5: 0x1da5
    },
          a0_0x4d614e = {
      _0x1cd097: 0x2488,
      _0xfd1dd: 0x4a3
    },
          a0_0x7817af = {
      _0x3e415b: 0x14d2
    },
          a0_0x5370b9 = {
      _0xff241a: 0x235b,
      _0x29a79d: 0xe6d,
      _0x23813c: 0x14d2,
      _0x17b592: 0x19c5,
      _0x5befd8: 0x1105,
      _0x243b78: 0x1323,
      _0x11f7e9: 0x9d6
    },
          a0_0xe61639 = {
      _0x2ce672: 0xcec,
      _0x49f612: 0xe6d,
      _0x294844: 0x310,
      _0x5a1d02: 0x1b41,
      _0x1b013a: 0xf79,
      _0x27673b: 0x2034,
      _0x14ce7e: 0x4b9,
      _0x1fb58a: 0x1d66,
      _0x557e02: 0x2b4,
      _0x43762e: 0x1a3
    },
          a0_0x27fa77 = {
      _0x14162e: 0x242c,
      _0x205a35: 0x1d05,
      _0x25cbff: 0x535,
      _0x4c07ca: 0x13b0,
      _0x58bf70: 0x535,
      _0x32c282: 0x1cd8,
      _0x358a6d: 0x1a5,
      _0x1afc8e: 0x92f,
      _0x481c59: 0x4b9,
      _0x1a23c6: 0x4b9,
      _0x5779dc: 0x2488,
      _0x4a9516: 0x14d2
    },
          a0_0x47b638 = {
      _0x12340c: 0x535,
      _0x727716: 0x253d,
      _0x4e37ba: 0x1edc
    },
          a0_0xf228fa = {
      _0x4ba77a: 0x535,
      _0x35983f: 0x253d,
      _0x31a682: 0x4b9,
      _0x25a054: 0xf86
    },
          a0_0x27927d = {
      _0x568bad: 0x1aab,
      _0x7299a2: 0x2405,
      _0x29c156: 0x1d2
    },
          a0_0x2a1513 = {
      _0x8ea946: 0x185e,
      _0x920b8e: 0xe6d,
      _0x578915: 0x19c5,
      _0x24a89e: 0x1029,
      _0x24830b: 0x14d2,
      _0x7c15a8: 0x14d2,
      _0x3c4254: 0x19c5,
      _0xc8463e: 0x19c5,
      _0x255a3f: 0x19c5,
      _0xfbf5de: 0x3a1
    },
          a0_0x280a67 = {
      _0x307c34: 0x2488,
      _0x1853b1: 0x1522,
      _0x51e0ad: 0x14d2,
      _0x5a4afb: 0x1da5,
      _0x58217b: 0x1345,
      _0x29177b: 0xd3e,
      _0x40829b: 0x535
    },
          a0_0x1713c0 = {
      _0x7d7b07: 0x4a3,
      _0x10cd73: 0x1522,
      _0xde0629: 0x1a3,
      _0x4e7b28: 0x1182,
      _0x5c3049: 0x52c
    },
          a0_0x50f62c = {
      _0x30ecf0: 0x22b2,
      _0x563569: 0x2488,
      _0x2aa6a6: 0x4a3,
      _0x3b4bfa: 0x1522
    },
          a0_0x53cdea = {
      _0x5d5cdd: 0x14d2,
      _0x52b6e4: 0xdc6
    },
          a0_0x3937ee = {
      _0x1d110b: 0x535,
      _0x16a94e: 0x253d,
      _0x20f58f: 0x1aab,
      _0x34f000: 0x16c5,
      _0x22bd3e: 0x535,
      _0x423a75: 0x52c
    },
          a0_0x37e8b5 = {
      _0x284673: 0x235b,
      _0x4bad45: 0x14d2,
      _0x26425a: 0x1dbc,
      _0x32ed83: 0x14d2,
      _0x520626: 0x19c5,
      _0x2052f4: 0x24d5
    },
          a0_0x5e730e = {
      _0x3f1361: 0x2488,
      _0x393ec4: 0x1d2e,
      _0x5e40a1: 0x14d2,
      _0x4aac42: 0x1a5,
      _0x5183dc: 0x6df
    },
          a0_0x4e6d3e = {
      _0x2aa521: 0x14d2,
      _0x3aab1f: 0x1da5
    },
          a0_0x1ab9d5 = {
      _0x427a4f: 0x112d
    },
          a0_0x399b63 = {
      _0x2d47b7: 0x2488,
      _0x323017: 0x1d2e,
      _0x2b1c3e: 0x1a07,
      _0x232a5c: 0xa23
    },
          a0_0x464923 = {
      _0x1c4c19: 0x14d2,
      _0x1f8d2a: 0x1edd,
      _0x4ccf9d: 0x19c5,
      _0x5f34e7: 0x14d2,
      _0xf96fb2: 0x14d2
    },
          a0_0xed98b1 = {
      _0x16f85b: 0x2488,
      _0x567d79: 0x1a3
    },
          a0_0x286e83 = {
      _0x1df1f5: 0x2488
    },
          a0_0x3d14a0 = {
      _0x49f524: 0x535,
      _0x43011e: 0x20f8,
      _0x5ccc1c: 0x12a3,
      _0x23057a: 0x14d2,
      _0x43880f: 0x1da5,
      _0x1fa609: 0xf05,
      _0x4e3ac4: 0x1196,
      _0x421f36: 0x7b2
    },
          a0_0x4ebd36 = {
      _0x49fb21: 0x242c,
      _0x51ab9e: 0x1613,
      _0x5b6b73: 0x2488,
      _0x3e0d9e: 0x4a3,
      _0x14a6a4: 0x2315,
      _0x7ef129: 0x11d9,
      _0x418887: 0x14d2,
      _0x3414d4: 0x1a5
    },
          a0_0x52e829 = {
      _0x4d4ca6: 0x185e,
      _0x26ae2c: 0x14d2,
      _0x55b038: 0x14d2,
      _0x36b554: 0x19c5,
      _0x37c272: 0x1808,
      _0x2d37e3: 0x19c5,
      _0x35fe74: 0x14d2,
      _0x32f6b2: 0x19c5,
      _0x57d7ab: 0x14d2,
      _0x3568bd: 0x19c5,
      _0x3b1c87: 0x10f9,
      _0x240dfb: 0x375,
      _0x3ad25b: 0x19c5,
      _0x57de0a: 0x14d2,
      _0x3a3421: 0x204f,
      _0x295511: 0x14d2,
      _0x5b3a23: 0x19c5,
      _0x5222ab: 0x19c5,
      _0x163f17: 0x595,
      _0x553e31: 0x14d2
    },
          a0_0x5ef446 = {
      _0x590a0f: 0x251,
      _0x517141: 0x1877,
      _0x3c59ce: 0x1da5
    },
          a0_0x3f693f = {
      _0x471ced: 0x4a3,
      _0x54247b: 0x1877,
      _0x5de5b9: 0x14d2,
      _0x414282: 0x77d,
      _0x59651a: 0xff3,
      _0x5ef5c5: 0x1062
    },
          a0_0x24353a = {
      _0x16ae80: 0x4a3,
      _0x559cc2: 0x1877
    },
          a0_0x5ec691 = {
      _0x5e63cb: 0x2488,
      _0x2eb11e: 0x23df
    },
          a0_0x2744b1 = {
      _0x42a121: 0x1324,
      _0x550e20: 0x4a3
    },
          a0_0x5b7604 = {
      _0x651685: 0x2488,
      _0xa271d8: 0x4a3,
      _0x4f9c76: 0x18ec,
      _0x467c34: 0x2220,
      _0x1eeedb: 0x1a5
    },
          a0_0x1ba872 = {
      _0x209a84: 0x535
    },
          a0_0x456b67 = {
      _0x4dc6d4: 0x251,
      _0x55696c: 0x1934
    },
          a0_0x362763 = {
      _0x54504c: 0x242c,
      _0x42cb8c: 0x2488,
      _0x5ea14d: 0x11d9,
      _0x3f267e: 0x1a60,
      _0x5a3014: 0xe4c,
      _0x48881e: 0x10ba,
      _0x5e131f: 0x14d2,
      _0xb2338f: 0x1da5,
      _0x5f3f93: 0x1a60
    },
          a0_0x280ca3 = {
      _0x205366: 0x16c5,
      _0x4149bd: 0x14d2
    },
          a0_0x4c739e = {
      _0x3d87a5: 0x535,
      _0x3250a1: 0x1aab,
      _0x501dc9: 0x4b9,
      _0x1101ba: 0x1a60,
      _0x991305: 0xe4c,
      _0x34577f: 0x3c5,
      _0x1b84ea: 0x10ba,
      _0xdc6818: 0x1dc6,
      _0x1931a9: 0x1157
    },
          a0_0x319d6b = {
      _0x3952a8: 0x235b,
      _0x1b0076: 0x185e,
      _0x52eeb6: 0x19c5,
      _0x4f411f: 0x14d2,
      _0x2e5bff: 0x19c5,
      _0x35d986: 0x25dd,
      _0x1f3e19: 0x19c5,
      _0x4c20ad: 0x1ac9
    },
          a0_0x2467df = {
      _0x293134: 0x185e,
      _0x59e57b: 0x2060,
      _0x44b520: 0xaa2,
      _0x37aaa7: 0x1b29,
      _0x55d374: 0x19f6,
      _0x1575a4: 0x24bc,
      _0x10f5bb: 0x14d2,
      _0x45cf8e: 0x1581,
      _0x3c19ce: 0x19c5,
      _0x273343: 0x1e19,
      _0x9d3de4: 0x35b,
      _0x306925: 0x19c5,
      _0x2b4109: 0x1be,
      _0x531cea: 0x14d2,
      _0x531bfa: 0x1642,
      _0x546323: 0x14d2,
      _0x79fe5d: 0x19c5,
      _0x330186: 0xa31,
      _0xc5d2cb: 0x19c5,
      _0xbc166b: 0x2188,
      _0x45b471: 0x19c5,
      _0x32ad97: 0x20be,
      _0x33e0e4: 0x14d2,
      _0x4e0cbe: 0x204f
    },
          a0_0x2c81fc = {
      _0x90f5fa: 0x4a3,
      _0x380940: 0x2cc,
      _0x5a7664: 0x535,
      _0x2ace29: 0x52c
    },
          a0_0x476a95 = {
      _0x2be265: 0x2488,
      _0x5c564f: 0x1a3,
      _0x119015: 0x2473,
      _0x44c00d: 0x212e
    },
          a0_0x3f214d = {
      _0x32051c: 0x242c,
      _0xff4ebb: 0x14d2,
      _0x1a3d55: 0x1da5,
      _0x357f13: 0x1328
    },
          a0_0x1db818 = {
      _0x26c28a: 0x10ca,
      _0x57d553: 0x394,
      _0x1d92a0: 0x2488,
      _0x294288: 0x1a3,
      _0x228d92: 0x394
    },
          a0_0x1e1fd2 = {
      _0x193ff9: 0x23c9,
      _0x1fb3b2: 0x535,
      _0x5ae90a: 0x52c,
      _0xbe2ff1: 0x1cfb,
      _0x5d4cfa: 0x535,
      _0x368e27: 0x13b0,
      _0x544d70: 0x16bd,
      _0x51418c: 0x1cd8,
      _0x3f03a4: 0x14d2,
      _0x214d33: 0x2f6,
      _0xa90f9e: 0xe66,
      _0x9fb473: 0x1da5,
      _0x6376ea: 0x13b7,
      _0x176661: 0x1a26,
      _0x3dfed4: 0x535,
      _0x133d0c: 0xcf2,
      _0x5d8695: 0x535,
      _0x4629cb: 0x1a26,
      _0xd9ed1d: 0xcf2,
      _0x25a496: 0x3c3,
      _0x329dd0: 0x2488,
      _0xf3ef39: 0x1a3,
      _0x59327a: 0x1c6e,
      _0x40a32b: 0x243a,
      _0x7395db: 0x14d2,
      _0x2614f1: 0x1a5
    },
          a0_0xa77679 = {
      _0x2d615b: 0x1a5,
      _0x51642b: 0x2488,
      _0x6d59fd: 0x4d5
    },
          a0_0x3e9b13 = {
      _0x4d8da9: 0x2488,
      _0x4ed4f7: 0x1dc
    },
          a0_0x112cfe = {
      _0x525d99: 0x1f48
    },
          a0_0xed76db = {
      _0x12c784: 0x52c,
      _0x18a9f1: 0x253d,
      _0x475002: 0x11d9,
      _0x59c86e: 0x1076,
      _0x1c8a06: 0x1a1e,
      _0x5d223f: 0x23c9,
      _0x265af4: 0x2cc,
      _0x39cacc: 0xa4e,
      _0x4accca: 0x2488,
      _0x26fd5f: 0x385,
      _0x4a7872: 0x213a,
      _0x4af4b9: 0x19d6,
      _0x27aeff: 0x535
    },
          a0_0x5954f0 = {
      _0x1dbf01: 0x1a2c,
      _0x1b4447: 0x24bc,
      _0x23309e: 0x2488,
      _0x1eae0c: 0x1a3,
      _0x1b3f13: 0x14d2,
      _0x5ad857: 0x1a6,
      _0x66485d: 0x1cf
    },
          a0_0x31876a = {
      _0x53d6ab: 0x14d2,
      _0x78041a: 0x19c5,
      _0x4943cf: 0x77d,
      _0x1c07fb: 0x14d2,
      _0x6447d4: 0x1939,
      _0x111f9b: 0x126e
    },
          a0_0x2843de = {
      _0x4d67b9: 0xe6d,
      _0xf74f25: 0x1a2c,
      _0x5cddb7: 0x14d2,
      _0x3d0312: 0x19c5,
      _0x453f95: 0x19c5,
      _0x37de60: 0x1ca2,
      _0x198d2a: 0x19c5,
      _0x57062d: 0x1ff,
      _0x537f05: 0x14d2,
      _0x1935dd: 0x21a,
      _0x4ad385: 0x204f
    },
          a0_0x322e04 = {
      _0x199267: 0x14d2,
      _0x4ef1b7: 0x21a
    },
          a0_0x5e443c = {
      _0x51b69e: 0x535,
      _0x470ab3: 0x13b0,
      _0x2c28bd: 0x3e9
    },
          a0_0x523bf3 = {
      _0x566c24: 0x2488
    },
          a0_0xd7392b = {
      _0x59b561: 0x185e,
      _0x32f0b4: 0x2548,
      _0x359db2: 0x1375,
      _0x1acba0: 0x3b0,
      _0x929f23: 0x1e7e,
      _0xd12c79: 0x1648,
      _0x27916d: 0x664,
      _0x23fe8c: 0x1783,
      _0x577cbf: 0x1783,
      _0x322323: 0xaf6,
      _0x58be07: 0x1105,
      _0x22cdcc: 0x19c5,
      _0x4368c6: 0x19c5,
      _0x58b5d4: 0x1808,
      _0x524cf2: 0x14d2,
      _0x43b5d5: 0xd75,
      _0x2387ef: 0xb7b,
      _0x468198: 0x121d
    },
          a0_0x4a7669 = {
      _0x404236: 0x165,
      _0x2b9b11: 0x1d66,
      _0x27ca2c: 0x535,
      _0x5276bd: 0x1289,
      _0x582360: 0x14d2,
      _0x1ea874: 0x2667,
      _0x4c0783: 0x535,
      _0x570bc9: 0x13b0,
      _0x169d1c: 0x1a5,
      _0x4c4614: 0x1da5,
      _0x1085d2: 0x506
    },
          a0_0x149c40 = {
      _0xd1645b: 0x535,
      _0x4414f0: 0x13b0,
      _0x339b99: 0x2667,
      _0x2ac0d3: 0x185e,
      _0x1cde7f: 0x3e9,
      _0x5dedad: 0x1a5,
      _0x33d3c6: 0x1985,
      _0x18fa3a: 0x12a4,
      _0x4c758c: 0x1d9e,
      _0x48f5ff: 0x15c4,
      _0xd34e86: 0x535,
      _0x398747: 0x4b9,
      _0x4b4123: 0x1d2,
      _0x30c287: 0x1d66,
      _0x5b565d: 0x14d2,
      _0x1045ca: 0x12ec
    },
          a0_0x29e4f6 = {
      _0x113178: 0x4a3,
      _0x2bb4ec: 0x137e,
      _0xd5c814: 0x21e0,
      _0xa8ed0f: 0x1a2c,
      _0x4162d8: 0xec9,
      _0x152ff6: 0x165,
      _0x3ecc5e: 0x13b0
    },
          a0_0x210e48 = {
      _0x3df5a1: 0x4a3,
      _0x3f6a71: 0x137e
    },
          a0_0x406860 = {
      _0x25cebd: 0x535,
      _0x108e7d: 0x2679,
      _0x289b8d: 0x1edc,
      _0x29652a: 0x2132,
      _0x3ca3ea: 0xf86,
      _0x141c03: 0xdd4
    },
          a0_0x3c9299 = {
      _0x37572e: 0x1a21,
      _0x4fc57a: 0x1aab,
      _0x51e9aa: 0x2405,
      _0x32348d: 0xf79,
      _0xa14d20: 0x1468,
      _0x1f9b8d: 0x1d55,
      _0x5d8c5e: 0x2087,
      _0x43ea69: 0x1a21,
      _0x3fdca1: 0xf82,
      _0x47cb08: 0x1d2
    },
          a0_0x44060d = {
      _0x2ab27d: 0x14d2,
      _0x8d0b68: 0x19c5,
      _0x1d5aa1: 0x2199,
      _0x71a928: 0x19c5,
      _0x502fa4: 0x1f1a,
      _0x5b3e8e: 0x14d2,
      _0x4b5292: 0x1e16,
      _0x36de9b: 0x204f
    },
          a0_0x34ffae = {
      _0x5f4089: 0x242c,
      _0x21ece4: 0x2124,
      _0x77bf5b: 0x14d2
    },
          a0_0x48fd56 = {
      _0x27c071: 0x14d2,
      _0x21e65a: 0x19c5
    },
          a0_0x226e35 = {
      _0x531a13: 0x1d66,
      _0x356fc0: 0xbb9,
      _0x26d1f5: 0x535,
      _0x23ea9f: 0x2034,
      _0x267f77: 0x1d66,
      _0x33696e: 0x1ee9,
      _0xcfe63f: 0x1850,
      _0x312cfd: 0x2568,
      _0x4db460: 0x157b,
      _0x2a714b: 0x1ad2,
      _0x6e274b: 0x1bf3
    },
          a0_0xdefa0c = {
      _0x179047: 0x235b,
      _0xba25d1: 0x14d2,
      _0x4e51b3: 0x19c5,
      _0x1f51b7: 0x2f5,
      _0x22fb13: 0x1d0c,
      _0x44cd31: 0x19c5,
      _0x5229a0: 0x1278
    },
          a0_0x5c2bd5 = {
      _0x852d1c: 0x4a3,
      _0x3f4dff: 0x14d2,
      _0x3fdc1e: 0xb39
    },
          a0_0x2d2808 = {
      _0x5574ad: 0x1765
    },
          a0_0x363bcf = {
      _0x2b3134: 0x1063
    },
          a0_0x285d45 = {
      _0x28e920: 0x535,
      _0x5c9bf6: 0x156e,
      _0x313e3d: 0x23c9,
      _0x124e66: 0x1765,
      _0x43b5b0: 0x14d2,
      _0x43f681: 0x4ca
    },
          a0_0x113d7b = {
      _0x38e9e0: 0x235b,
      _0x1320ea: 0x1af9,
      _0x31d358: 0x19c5,
      _0x54bd9b: 0x1029,
      _0x5ecbcf: 0x14d2,
      _0x5db8d7: 0x1808,
      _0x53458d: 0x14d2,
      _0x592ed4: 0x19c5,
      _0x243928: 0xb6f,
      _0x1a4857: 0x19c5,
      _0x118bd6: 0x498
    },
          a0_0x3319cd = {
      _0x53c430: 0x235b,
      _0x27f885: 0x19c5,
      _0x4864ab: 0x1769,
      _0x35482d: 0x14d2,
      _0x3e624c: 0x2365,
      _0x52e2a9: 0x19c5,
      _0x2393c8: 0x14d2,
      _0x513d91: 0xd86
    },
          a0_0xfc7076 = {
      _0x2ec160: 0x2488
    },
          a0_0x1be751 = {
      _0x15a17a: 0x1a3
    },
          a0_0x156c1a = {
      _0x3ad562: 0xd11,
      _0x5a6bb7: 0x24f
    },
          a0_0x2f815e = {
      _0x56ad58: 0x2158,
      _0x412274: 0x1473,
      _0x5068ef: 0x2529,
      _0x14838d: 0x14d2,
      _0x48cabe: 0x9f7,
      _0x56b149: 0x19c5,
      _0x462936: 0x19c5,
      _0x1d54ea: 0xdc4,
      _0x366711: 0x14d2,
      _0x4a4373: 0x19c5,
      _0x2dd29a: 0x2046,
      _0x27e9b3: 0x19c5,
      _0xe0f787: 0x453,
      _0x3fec52: 0x14d2,
      _0x696fe5: 0x19c5,
      _0x21dd9b: 0x1d7,
      _0x136702: 0x14d2,
      _0x5257f0: 0x14d2,
      _0x5a378a: 0x10a9,
      _0xeb5d5a: 0x17c9,
      _0x3c0672: 0x178,
      _0x5f1f8c: 0x1c12,
      _0x2b6517: 0x1a72,
      _0x37754d: 0x14d2,
      _0x32ae6f: 0x48b,
      _0x5b9763: 0x19c5,
      _0xb90f8: 0x16c9,
      _0x58075b: 0x19c5,
      _0x544efb: 0x204f,
      _0x91e421: 0x14d2,
      _0x565fa4: 0x19c5,
      _0x529468: 0x19c5,
      _0x5c7b60: 0x48a,
      _0x53ac3b: 0x1190,
      _0x10bac9: 0x19c5,
      _0x2a2148: 0xac1,
      _0x4e1a26: 0xa99,
      _0x553444: 0x19c5
    },
          a0_0x28e36c = {
      _0x23b1a6: 0x48d,
      _0x2ba758: 0x14d2,
      _0x352b3f: 0x854,
      _0xe5d932: 0x48d
    },
          a0_0x66bd67 = {
      _0x5a18e4: 0x1fb1,
      _0x4df070: 0x854
    },
          a0_0xe87250 = {
      _0x3c2507: 0x14d2
    },
          a0_0x3a651c = {
      _0x562bc5: 0x1d66,
      _0x486e14: 0x20a2,
      _0x1bd255: 0x1ba1,
      _0xb7c241: 0xbc2,
      _0x346331: 0x184a,
      _0x40f155: 0x1da5
    },
          a0_0x3a7685 = {
      _0x12433a: 0xf05,
      _0x486c92: 0x142c,
      _0x555afd: 0x535,
      _0x4fe370: 0x2034,
      _0xa61494: 0x1a3,
      _0x5517e9: 0x1b6d,
      _0x5ce09a: 0x11d9,
      _0x36a5c0: 0x1b7
    },
          a0_0x24356f = {
      _0x4fd46f: 0x2488,
      _0x9fb476: 0x1a3,
      _0x1ba03a: 0x23a9,
      _0x5ce220: 0x19d2
    },
          a0_0x5428bc = {
      _0x171638: 0x2488,
      _0x1b3d13: 0x1a3,
      _0x53578e: 0x20ae
    },
          a0_0x4c91e3 = {
      _0x168c5e: 0x14d2,
      _0xe1da90: 0x1da5,
      _0x2e9a6f: 0x267d
    },
          a0_0x638ff4 = {
      _0x2c4c40: 0x1a3,
      _0x40fb09: 0x1cb3,
      _0x1aed1c: 0xf2f,
      _0x5f40f9: 0x1aad,
      _0x24ca98: 0x2530,
      _0x301e35: 0x535,
      _0x937e09: 0x129d,
      _0x306bc2: 0x1872,
      _0x29e742: 0x1934
    },
          a0_0x48db95 = {
      _0x1f7a54: 0x1da5
    },
          a0_0x37801c = {
      _0x333e29: 0x2ec
    },
          a0_0x2db45d = {
      _0x1ae4ef: 0x2488,
      _0x494214: 0x1b6d,
      _0x3f11cc: 0x2288,
      _0x557569: 0x14d2,
      _0x2942e4: 0x1da5
    },
          a0_0x5f5d5b = {
      _0x4379a5: 0x23c9,
      _0x516619: 0x253d,
      _0x39724d: 0x1076,
      _0x4870b5: 0xfa6,
      _0x31dd7f: 0x2404,
      _0x1c814e: 0x1b6d,
      _0x311ae0: 0x74c,
      _0x557f71: 0x2315,
      _0x1103ad: 0xe63,
      _0x2ea3aa: 0x1e75,
      _0x18dbc5: 0x535,
      _0x4eaaa4: 0x12a3,
      _0x42e321: 0x9f7,
      _0x2114ad: 0x535,
      _0xe7fb31: 0x1ec5,
      _0x4edabf: 0x3e4,
      _0x2cec6f: 0x1a07,
      _0x50e29a: 0x239d,
      _0x3b8fb3: 0x1d66,
      _0x32acf2: 0xc95,
      _0x45a3f4: 0xb5b,
      _0x3d4b4c: 0x1a3e,
      _0x4d27f6: 0x41d,
      _0x833bf7: 0xbc0,
      _0x565c76: 0x21bc,
      _0x372081: 0x535,
      _0x56d9eb: 0x25ba,
      _0x4567b2: 0x1934
    },
          a0_0x3d30dc = {
      _0x165a81: 0x19c5,
      _0x2b19d1: 0x15da,
      _0x233293: 0xdd2,
      _0x3f8aab: 0x14d2,
      _0x400042: 0x204f,
      _0x39995e: 0x19c5
    },
          a0_0x2b72cb = {
      _0x38d2ed: 0x14d2,
      _0xa56619: 0x22ac
    },
          a0_0x51942b = {
      _0x34ca7a: 0x23c0
    },
          a0_0x151757 = {
      _0x8126c6: 0x1144,
      _0x65e186: 0x14d2,
      _0x33a93c: 0x14d2,
      _0x2a566b: 0x19c5,
      _0x503166: 0x1013,
      _0x3f5a46: 0x1930
    },
          a0_0x2778df = {
      _0x3f778b: 0x2488
    },
          a0_0x4e710f = {
      _0x8587c9: 0x19c5,
      _0x393c8a: 0x8c2,
      _0x3202e5: 0x14b2,
      _0x323dde: 0x14d2,
      _0x7c6b8f: 0x19c5
    },
          a0_0x4843e6 = {
      _0x271584: 0x1a3
    },
          a0_0x3b7035 = {
      _0x47ae73: 0x1da5
    },
          a0_0x3ac48f = {
      _0x4c6f90: 0x14d2,
      _0x4103ff: 0x19c5,
      _0xb06802: 0x25b0,
      _0x5da1e4: 0x20c0,
      _0x51c204: 0x410
    },
          a0_0x250125 = {
      _0x1b7314: 0x14d2
    },
          a0_0x1bd237 = {
      _0x49abf4: 0x2488,
      _0x546cbb: 0x1a3,
      _0x2df8f1: 0x800
    },
          a0_0xd4ef91 = {
      _0x163191: 0x14d2
    },
          a0_0x2d171c = {
      _0x2d4fac: 0x19c5,
      _0x500f44: 0x19c5
    },
          a0_0x21f3ca = {
      _0x516820: 0x14d2,
      _0x7e21b7: 0x19c5,
      _0x5443c9: 0x24e1,
      _0xf91bb4: 0x14d2,
      _0x3e0534: 0x19c5,
      _0x99039b: 0x2675,
      _0x1dc391: 0x27f,
      _0x4acc2e: 0x14d2,
      _0x722040: 0x19c5,
      _0x1e9634: 0x1a2b,
      _0x586104: 0x1983
    },
          a0_0x1c719f = {
      _0xfa010c: 0x14d2
    },
          a0_0x281f90 = {
      _0x1f25e3: 0xd8d
    },
          a0_0x24f604 = {
      _0x11641c: 0x1e85
    },
          a0_0x42f154 = {
      _0x3bc2bb: 0x14d2,
      _0x5c1821: 0x1da5
    },
          a0_0x58208f = {
      _0x31897e: 0x19c5,
      _0x13a975: 0x243e,
      _0x23d902: 0x14d2,
      _0x3e294b: 0x19c5,
      _0x45ee50: 0x166,
      _0x573fa5: 0x19c5,
      _0x23ffa3: 0x21ba,
      _0x2f5a58: 0x255c,
      _0x370943: 0xc71
    },
          a0_0x5e7e6a = {
      _0xd01c80: 0x2488
    },
          a0_0x421428 = {
      _0x55f230: 0x1da5,
      _0x35cc58: 0xe68
    },
          a0_0x4c99d2 = {
      _0x1100d6: 0x1da5
    },
          a0_0x230ce0 = {
      _0x169115: 0x11bc,
      _0x1af3c0: 0x1d66,
      _0x421bda: 0x2379
    },
          a0_0xd330b3 = {
      _0x3ea726: 0x14d2
    },
          a0_0x1c87fc = {
      _0x2260b5: 0x14d2,
      _0x1dcca1: 0x19c5,
      _0xc066f8: 0x14d2,
      _0x32ae7d: 0x14d2,
      _0x3fc994: 0x19c5,
      _0x313727: 0x1e71,
      _0x196a5e: 0x19c5,
      _0x2100db: 0x14d2,
      _0x53a228: 0x19c5,
      _0x2c64c9: 0x1007
    },
          a0_0x3fbba5 = {
      _0x1d7e26: 0x1a3,
      _0x37ec9: 0xa15
    },
          a0_0x142425 = {
      _0x4785a2: 0x1a3
    },
          a0_0x4fe985 = {
      _0xf5b86: 0xa0c,
      _0x20d7a6: 0x14d2,
      _0x2d0912: 0x19c5,
      _0x37ce13: 0x19c5,
      _0x52467a: 0x1c4d,
      _0xf42a2f: 0x19c5,
      _0x5eb43b: 0x14d2,
      _0x13ce3f: 0x19c5,
      _0xbbf27f: 0x615
    },
          a0_0x5a24d5 = {
      _0xf26131: 0x1da5
    },
          a0_0x22442e = {
      _0x5a7ad6: 0x14d2
    },
          a0_0x5eb1d7 = {
      _0x58efff: 0x2488,
      _0x4f6e2b: 0x1a3,
      _0x347c7f: 0x11e9
    },
          a0_0x4d12ec = {
      _0x3e8ec6: 0x19c5,
      _0x320cf0: 0x14d2,
      _0x2d370f: 0x18fe
    },
          a0_0x375738 = {
      _0x360a72: 0x1f44
    },
          a0_0xaff415 = {
      _0x29090b: 0x1601,
      _0x11276f: 0x19c5,
      _0x194bbc: 0x14d2,
      _0x342d2d: 0x2d0
    },
          a0_0x294b81 = {
      _0x203b0e: 0x14d2
    },
          a0_0x2aae27 = {
      _0x25293a: 0x1da5
    },
          a0_0x45eee4 = {
      _0x5d9bd2: 0x14d2,
      _0x445fb8: 0x19c5,
      _0x915ac8: 0x2663
    },
          a0_0x30fd6d = {
      _0x331348: 0x1a3,
      _0xd2d2b8: 0x11ce
    },
          a0_0x206f4a = {
      _0x2a883f: 0x19c5,
      _0x25ce95: 0x1bd2,
      _0x147085: 0x14d2,
      _0x5a39ae: 0x19c5,
      _0x57d01e: 0x1ac6
    },
          a0_0xf03a = {
      _0x1c9235: 0x2488,
      _0x3f377f: 0x1a3
    },
          a0_0xfb80 = {
      _0x3038d2: 0xba8
    },
          a0_0x2dbed0 = {
      _0x5487c5: 0x19c5,
      _0x3ec830: 0x30f,
      _0x140baa: 0x14d2,
      _0x88f27f: 0x19c5,
      _0x337ea5: 0x2673,
      _0x14f9d9: 0x19c5,
      _0x5343cc: 0x14d2,
      _0x388b62: 0x19c5,
      _0x5ad493: 0xc40,
      _0x42daac: 0x19c5,
      _0x1f2c9e: 0x11e4,
      _0x5bf040: 0x19c5,
      _0xc49133: 0xb6e,
      _0x1cd7c0: 0x14d2,
      _0x589168: 0x19c5,
      _0x5bd8ba: 0x12ba,
      _0x15e7d8: 0x19c5,
      _0x4c7e2c: 0xa38,
      _0x34c174: 0x19c5,
      _0xde2e0a: 0x6c4,
      _0x43796a: 0x17cc,
      _0x51295c: 0x14d2,
      _0x18c399: 0xcb9,
      _0x158f52: 0x156c,
      _0x295a10: 0x19c5,
      _0x3db91d: 0x1963
    },
          a0_0x20d8a2 = {
      _0x1c3dbf: 0x14d2,
      _0x38a942: 0x994
    },
          a0_0x1a952a = {
      _0x5d032d: 0x1da5
    },
          a0_0x4b7ba9 = {
      _0x1a0cee: 0x1a3,
      _0x21c4cc: 0x75a
    },
          a0_0x47925e = {
      _0x10690f: 0x14d2,
      _0x19a87b: 0x1da5,
      _0x1affe4: 0x1c3a
    },
          a0_0x41d9fe = {
      _0xb97917: 0x235b,
      _0x40ddc7: 0x1bb0,
      _0x489444: 0x19c5,
      _0x2bec0c: 0x14d2,
      _0x32791b: 0x19c5,
      _0x3c5a50: 0xd48,
      _0x5f213e: 0x19c5,
      _0x1797d5: 0x14d2,
      _0x4525be: 0x14d2,
      _0x48344a: 0x19c5,
      _0x45eb3e: 0x13bb
    },
          a0_0xddccf7 = {
      _0x5a3637: 0x14d2,
      _0x214131: 0x1da5,
      _0x5257aa: 0x196f
    },
          a0_0x2c7b0a = {
      _0x2b9a9b: 0x2488,
      _0x3b2a0b: 0x1a3,
      _0x3388dc: 0x1d74
    },
          a0_0x315597 = {
      _0x56418f: 0x14d2,
      _0x442afd: 0x1da5
    },
          a0_0x21e3fc = {
      _0x3b29a1: 0x2488
    },
          a0_0x337977 = {
      _0x2fdcfd: 0x14d2
    },
          a0_0x5ba9f1 = {
      _0x1ba900: 0x14d2,
      _0x11ea43: 0x1da5,
      _0x3763a9: 0x2626
    },
          a0_0x5a33bf = {
      _0x15f9e1: 0x14d2,
      _0x1ae34c: 0x19c5,
      _0x4b4991: 0x24aa,
      _0x35e75a: 0x721,
      _0x4e239b: 0x19c5,
      _0x1f035d: 0xd3d,
      _0x45b88a: 0x19c5,
      _0xdfcd89: 0x210a,
      _0x42a8d2: 0x784,
      _0x20a9bb: 0x244,
      _0x1b2750: 0x14d2,
      _0x11c121: 0xd6f,
      _0x3cfa8b: 0x14d2,
      _0x386f89: 0x1319,
      _0x4f9ced: 0x19c5,
      _0x49801d: 0x2192,
      _0x3828c3: 0x14d2,
      _0x4a21e5: 0x19c5,
      _0x1070d1: 0xa22,
      _0x1ee69c: 0x1a9e
    },
          a0_0x46b420 = {
      _0x528d86: 0x2488,
      _0x232f00: 0x1a3,
      _0x674ccf: 0x40a
    },
          a0_0x1827d3 = {
      _0x388abb: 0x2488,
      _0x476053: 0x1a3
    },
          a0_0x19666b = {
      _0x3b19f2: 0x14d2,
      _0x475da2: 0x1da5,
      _0x518634: 0x535,
      _0x5db3d5: 0x1a07
    },
          a0_0x5a8dd1 = {
      _0x56af23: 0x2488
    },
          a0_0x1ff14f = {
      _0x39cc24: 0x1da5,
      _0x21f0db: 0xe23,
      _0x402f4c: 0x535,
      _0x567e00: 0x1a07,
      _0x29c4cf: 0x1e03
    },
          a0_0x43722e = {
      _0x2728bd: 0x8c6,
      _0x2fa41f: 0x535,
      _0x11698e: 0x22b2,
      _0x498c07: 0x2488,
      _0x3e2226: 0x16b1
    },
          a0_0xc02e46 = {
      _0x450508: 0x1ab1,
      _0x498e3e: 0x12dd,
      _0x501e3b: 0x1a3,
      _0x11807a: 0x145f
    },
          a0_0xdfdfb7 = {
      _0x9ed00: 0x235b,
      _0x5d9aba: 0x917,
      _0xb114c9: 0x14d2,
      _0x2b338a: 0x19c5,
      _0x515757: 0x204f,
      _0x42db77: 0x14d2,
      _0xe074de: 0x19c5,
      _0xffbfaf: 0xad1,
      _0xfb541: 0x14d2,
      _0x3cbdce: 0x19c5,
      _0x194df0: 0x203d,
      _0xb8f111: 0x19c5,
      _0x4349b0: 0x231,
      _0x138a59: 0x1848,
      _0x4c8473: 0x923,
      _0x21c9fd: 0x1031,
      _0xbad2b4: 0x14d2,
      _0x27b347: 0x148a
    },
          a0_0x89e4c8 = {
      _0x2dd96a: 0xc74,
      _0x268ff: 0x2488,
      _0x48df61: 0x1a3,
      _0x11c210: 0x2634,
      _0x482b72: 0x112d
    },
          a0_0x31623d = {
      _0x2c0156: 0x1da5,
      _0x3d36f5: 0x1b57
    },
          a0_0xe53d1b = {
      _0x5360e4: 0x1a3,
      _0x2995e7: 0x1eab
    },
          a0_0x12c4eb = {
      _0x205bcc: 0x1a3
    },
          a0_0x1c89fa = {
      _0x58bb83: 0x2530,
      _0x29bdba: 0x11d9,
      _0x3412d7: 0x1d7c,
      _0x2bad57: 0x1b50
    },
          a0_0x273ba1 = {
      _0x497a82: 0x235b,
      _0x4b8764: 0x185e,
      _0x239611: 0x14d2,
      _0x4492ae: 0x1df,
      _0x209428: 0x24bc,
      _0x312f3b: 0x879,
      _0x135903: 0x19c5,
      _0x30e7be: 0x1728,
      _0xe3d5e7: 0x14d2,
      _0x93a2c6: 0xeb2,
      _0x2ae03b: 0x14d2,
      _0x28169c: 0x19c5,
      _0x24d087: 0x19c5,
      _0x55ce8d: 0x1300,
      _0x300325: 0x263,
      _0x533b9c: 0x19c5,
      _0x12678c: 0x1d7f,
      _0x4bdc32: 0x14d2,
      _0x2e3857: 0x14d2,
      _0x1fd49f: 0xf13,
      _0x571e31: 0x14d2,
      _0x2dd4e0: 0x19c5,
      _0x423904: 0xe7c,
      _0x55b3fb: 0x14d2,
      _0x481077: 0x2d8,
      _0x40c946: 0x116d,
      _0x4f0e6b: 0x14d2,
      _0x539943: 0x19c5,
      _0x1b130f: 0xd83,
      _0x32a492: 0x14d2,
      _0x20c568: 0x123a,
      _0x441d71: 0x1645,
      _0x1df3cc: 0x14aa,
      _0x35776d: 0xe82,
      _0x2fb38a: 0x14d2,
      _0x182739: 0x19c5,
      _0x579fbc: 0x148f,
      _0x4206f6: 0x14d2,
      _0x3b0efc: 0x19c5,
      _0x4aba53: 0x19c5,
      _0x1d8349: 0x19c5,
      _0x234186: 0x11ab,
      _0x496d6d: 0x1530,
      _0xc50766: 0x14d2,
      _0x358f0f: 0x19c5,
      _0x14fdb4: 0x14d2,
      _0xd1b7b2: 0x19c5,
      _0x1f8f2d: 0x68b,
      _0x248bb2: 0x14d2,
      _0x3db616: 0xa3b,
      _0x3bfdd6: 0xc0f,
      _0x3cbff9: 0x191d,
      _0x67d193: 0x14d2,
      _0x376475: 0x19c5,
      _0x33147d: 0x204f,
      _0x5b56b7: 0x742,
      _0x4034dc: 0x4ba,
      _0x3c7843: 0x12d5,
      _0x124b73: 0x14d2,
      _0x2ef5d1: 0x19c5,
      _0x1882b7: 0x14d2,
      _0x36747f: 0x708,
      _0x2c5679: 0x14d2,
      _0x3e195d: 0x19c5,
      _0x111bc1: 0x14d2,
      _0x3d1cc8: 0x19c5,
      _0x55a562: 0x7fa,
      _0xd53dbe: 0x14d2,
      _0x326fce: 0x14d2,
      _0x26afe7: 0x226d,
      _0x567ab5: 0x14d2,
      _0x159552: 0xbc9,
      _0x8b7a17: 0x19c5
    },
          a0_0x41ee69 = {
      _0x5ab88b: 0x1a5,
      _0x348412: 0x2123
    },
          a0_0x501176 = {
      _0x5c48c1: 0x1a3
    },
          a0_0x1daef1 = {
      _0xaaa039: 0x14c5
    },
          a0_0x2e9840 = {
      _0x1797a4: 0x14d2
    },
          a0_0xa306a9 = {
      _0x51d469: 0x2488,
      _0x5bef79: 0x18be
    },
          a0_0xf611ae = {
      _0x4adf3a: 0x1da5,
      _0x5e7dd6: 0x1f79
    },
          a0_0xa0d683 = {
      _0x14ae28: 0x2488,
      _0x59281e: 0x22e5
    },
          a0_0x125d09 = {
      _0x428ecc: 0x14d2,
      _0x27fd62: 0x1081
    },
          a0_0x58c8ac = {
      _0x3e2fd8: 0x2416
    },
          a0_0x23eb24 = {
      _0x321839: 0x1a07,
      _0x489ade: 0xd10,
      _0x3cc6af: 0x14d2,
      _0x308f89: 0x2125
    },
          a0_0x4ceee3 = {
      _0x4c0076: 0x1934,
      _0x378c6f: 0x14d2,
      _0x186a38: 0x1482
    },
          a0_0x4e7b14 = {
      _0x444611: 0x1a07,
      _0x286a03: 0x1934
    },
          a0_0x309790 = {
      _0x6fe32c: 0x1a07,
      _0x4a38b7: 0xd10,
      _0xf3560b: 0x1934,
      _0x385651: 0x1da5,
      _0x273d0c: 0x202c
    },
          a0_0x38e137 = {
      _0x3a7163: 0x535,
      _0x3fc967: 0x1934,
      _0x27b97d: 0x14d2,
      _0x30c4f0: 0x1da5
    },
          a0_0x3945b0 = {
      _0x28b32f: 0x535,
      _0x21e897: 0x1a07,
      _0x54755c: 0x1934,
      _0x583865: 0x2560
    },
          a0_0x45de91 = {
      _0x514f65: 0x535
    },
          a0_0x346277 = {
      _0x372d55: 0x1a3,
      _0x56d2a6: 0x11e5
    },
          a0_0x21d96b = {
      _0x47a424: 0x1a3
    },
          a0_0x4a7b73 = {
      _0x46adc6: 0x2315,
      _0x26d61a: 0x535,
      _0x2a72d2: 0x1dc8,
      _0x16952f: 0x971,
      _0x189c18: 0x623,
      _0x18287c: 0x2119,
      _0x270bb9: 0x2352,
      _0x58858a: 0x971,
      _0x480d72: 0x623,
      _0x5644a6: 0x6da,
      _0x267235: 0x1a3,
      _0x4e4197: 0x2315
    },
          a0_0x20103d = {
      _0xe68897: 0x2315,
      _0x394789: 0x971,
      _0x1fd0a6: 0x623,
      _0x36f2e1: 0x1dc8,
      _0x196805: 0x6da,
      _0xc1a934: 0x2488,
      _0x475370: 0x62d
    },
          a0_0x47dd35 = {
      _0x549738: 0x2315,
      _0x2da64c: 0x1bfe,
      _0x2497ba: 0x623,
      _0x512a1f: 0x535,
      _0x3f6318: 0x10b9,
      _0x407f50: 0x2315,
      _0x10357c: 0x1dc8,
      _0x2d3209: 0x13cd,
      _0x31ceac: 0x2488,
      _0x4c8194: 0x1631,
      _0x5ed19d: 0x62d
    },
          a0_0x40a4ae = {
      _0x5a9f59: 0x2315,
      _0x38953b: 0x971,
      _0x2c501a: 0x535,
      _0x34d35c: 0x623,
      _0x2beb0d: 0x1dc8,
      _0x43907b: 0x1a3,
      _0x12548f: 0x5b8
    },
          a0_0x4c330c = {
      _0x419b68: 0x1a3
    },
          a0_0x30124e = {
      _0x3966df: 0x535,
      _0x311c60: 0x1dc8,
      _0x38d041: 0x6da,
      _0x1b3495: 0x2315,
      _0x34d9eb: 0x971,
      _0x3139a0: 0x623,
      _0x13dafa: 0x2488,
      _0x27f1e0: 0x1a3,
      _0x2135a1: 0x1270
    },
          a0_0x4495c9 = {
      _0x5293bd: 0x242c,
      _0x153a16: 0x1b6d,
      _0x2aa8e6: 0x1ec9
    },
          a0_0x2a6279 = {
      _0x29ab96: 0x535,
      _0x3ae560: 0x74c,
      _0x4ed5da: 0xc49,
      _0x154b7c: 0xc95,
      _0x127def: 0xc52,
      _0x177337: 0x11d9,
      _0x4838a0: 0x1ec5,
      _0x7caab: 0x1a5f,
      _0x55dcbe: 0x1f0d,
      _0x4e1b60: 0x1a3e,
      _0x343b2a: 0x535,
      _0x140c69: 0x41d,
      _0x490b81: 0xbc0,
      _0x2f2e01: 0x12a3,
      _0xaf1b04: 0x32e,
      _0x3a0bb1: 0x2530,
      _0x5c7ab0: 0xf8c,
      _0x24b672: 0xe19,
      _0x5092a1: 0x1bc7,
      _0x492b57: 0xe19,
      _0xd44778: 0x14d2,
      _0xb74e63: 0xe0c,
      _0x3cd9b1: 0x1a5,
      _0x4ca8a4: 0x16bf,
      _0x38d1a8: 0x146f,
      _0x1fddd3: 0x2001
    },
          a0_0x2854f5 = {
      _0x52b25e: 0x14d2,
      _0x5b7b74: 0x19c5,
      _0x294367: 0x2136,
      _0x2a1e1d: 0x13ee,
      _0x154afa: 0x879,
      _0x39d85e: 0x975,
      _0x3957f4: 0x14d2,
      _0x68e288: 0x1cd3,
      _0x20b068: 0x21af,
      _0x260e31: 0x1086
    },
          a0_0x109c7a = {
      _0x3dde6f: 0xeb4,
      _0x50c82c: 0x10a5
    },
          a0_0x314966 = {
      _0x1cada6: 0x2488,
      _0x925d3e: 0x15b7
    },
          a0_0x2e128f = {
      _0x419565: 0x2267,
      _0x271477: 0x19e6
    },
          a0_0x3b2af0 = {
      _0x46025d: 0xc2e,
      _0x125112: 0x535,
      _0x291595: 0x1ee4
    },
          a0_0x3c00dd = {
      _0x2cb8d4: 0x74c,
      _0x39eecd: 0x23c9,
      _0x45ad83: 0x235b,
      _0x37424f: 0x185e,
      _0x4af61e: 0xc52,
      _0x189e2d: 0x11d9,
      _0x296957: 0xc2e,
      _0x57cf33: 0x1a5f,
      _0x136002: 0x535,
      _0x541edd: 0x1a3e,
      _0x5d9483: 0x535,
      _0x5c2832: 0x41d,
      _0x549ee8: 0xbc0,
      _0xbd27e: 0xbc2,
      _0x4389f4: 0x2470,
      _0x1e7128: 0x628,
      _0x4bec52: 0x19e6,
      _0x56c04d: 0xe3b,
      _0xac5d61: 0x2530,
      _0x2c7bc6: 0x2488,
      _0x403399: 0x1a3,
      _0x4a21cc: 0x563,
      _0x1b6a20: 0x2530,
      _0x1b3a01: 0x2530,
      _0x557558: 0xc95,
      _0x2941ad: 0x4b9,
      _0x47541d: 0x1d66,
      _0x43485d: 0xa8c,
      _0xd6fb96: 0x2379,
      _0x55598b: 0x1af3,
      _0x242e40: 0x1d66,
      _0x2353fa: 0x2379,
      _0x5383f7: 0x1d12,
      _0x87353d: 0x1edc,
      _0x1daf1e: 0x32e,
      _0x398f81: 0x535,
      _0x13a19d: 0x623,
      _0x5d20db: 0x6da,
      _0x41bbcc: 0xfa6,
      _0x16c196: 0x2288,
      _0xc92241: 0x1bc7,
      _0x5bcddc: 0x2288,
      _0xbe5220: 0x2315,
      _0x5d7319: 0x4b9,
      _0x1b932a: 0x1915,
      _0x148f58: 0x2315,
      _0x1da2c0: 0x2315,
      _0x35162a: 0x535,
      _0x5d433b: 0xf52,
      _0x16c88b: 0x3e4,
      _0x294b1c: 0xffb,
      _0x8a3436: 0x1cd3,
      _0x1bf0ca: 0x13b4,
      _0x360196: 0x1cd3,
      _0x1cc216: 0x1d66,
      _0x41d9e4: 0x1be8,
      _0x2defae: 0x1fa3,
      _0x11a00e: 0x1cd3,
      _0x543542: 0x1b76,
      _0x54393c: 0xcc1,
      _0x50615d: 0x141d,
      _0x4f185d: 0x160e,
      _0xfda781: 0x3e6,
      _0x3548f0: 0x535,
      _0x2eb828: 0x71e,
      _0x479077: 0x535,
      _0xbce203: 0x1cd3,
      _0xca94ed: 0x719,
      _0x3c0680: 0x3cb,
      _0x1c51a0: 0x1cd3,
      _0xa58f06: 0x1276,
      _0x4ad1ef: 0x535,
      _0x5c246b: 0x1546,
      _0x530db5: 0x1c34,
      _0x2ca1c3: 0xc95,
      _0x5a9b7b: 0xc95,
      _0xf46e53: 0xc95,
      _0x251129: 0x377,
      _0x56ff30: 0x2315,
      _0x580e1e: 0x1241,
      _0x488506: 0x1b4a,
      _0x231950: 0xc82,
      _0x1f2168: 0x1241,
      _0x4de8fe: 0x1cd3,
      _0xfe873e: 0x2616,
      _0x22d65a: 0x112e,
      _0x475bd1: 0x633,
      _0x234ef6: 0x786,
      _0x195d19: 0x56c,
      _0x583933: 0x13fc,
      _0xb1b8f1: 0x12b1,
      _0x2bef0e: 0xc95,
      _0x52c898: 0x1d1b,
      _0xe0ab93: 0x24e7,
      _0xbf1231: 0xa63,
      _0x208367: 0xb51,
      _0x2bad16: 0x774,
      _0x3fbee8: 0xade,
      _0x35fd4a: 0x1c76,
      _0x4a562d: 0x628,
      _0x45dff8: 0x1ec5,
      _0x599a20: 0x2284,
      _0x3f27f9: 0x1cd3,
      _0x855bda: 0x1249,
      _0x348623: 0x2315,
      _0x5dee2e: 0x1cd3,
      _0xe751c8: 0xaa5,
      _0x2b28de: 0x984,
      _0x63a4b0: 0x1421,
      _0x5f48af: 0x1be1,
      _0x51fa2a: 0x1f52,
      _0x10225e: 0xbc0,
      _0x51b6f9: 0x1ca8,
      _0x4e6862: 0xd1f,
      _0x697b74: 0x1cd3,
      _0x2b45f1: 0x1ef1,
      _0x2a9ec5: 0x1241,
      _0x2828ae: 0x1b87,
      _0x36e305: 0x50d,
      _0xd1b28: 0x23bc,
      _0x4cf8a7: 0x225a,
      _0x1f723a: 0x118e,
      _0x1d4bcd: 0xb3c,
      _0x12c1b7: 0x1cd3,
      _0x5e9663: 0x179,
      _0x5a3e9a: 0x3e4,
      _0x3f9def: 0x2315,
      _0x361f9c: 0x2315,
      _0x24674d: 0x1241,
      _0x7a00af: 0x14f0,
      _0x5bab48: 0x95a,
      _0x5a2590: 0x2293,
      _0x48a1c6: 0x535,
      _0x50da69: 0x1928,
      _0x48546b: 0x1729,
      _0x2ec8ba: 0x535,
      _0x2ae7a0: 0x1d2b,
      _0x1061f1: 0x1cd3,
      _0x4f6b59: 0x1407,
      _0x243610: 0x1cd3,
      _0x459bb0: 0xedb,
      _0x3c4942: 0x93b,
      _0x4c0642: 0x18e7,
      _0x1a56b4: 0x27c,
      _0x2126d7: 0x32e,
      _0x2e00a1: 0x22ee,
      _0x3473f2: 0x1cd3,
      _0x170f33: 0x2228,
      _0x14401d: 0x1f9a,
      _0x2dd5ad: 0xc95,
      _0x2ec737: 0x1a5a,
      _0x263117: 0x1d53,
      _0x58df22: 0x32e,
      _0x41a351: 0x1cd3,
      _0x4801ed: 0xc95,
      _0x3cb87b: 0x2110,
      _0x364ca7: 0x32e,
      _0x2e4273: 0x1d44,
      _0x1458a3: 0x535,
      _0x5334e7: 0x1b07,
      _0x30e2dd: 0x32e,
      _0x40869a: 0x1bd9,
      _0x421728: 0xc95,
      _0x3555ed: 0x1ca5,
      _0x56ed17: 0x32e,
      _0x10441d: 0x183,
      _0x4fa496: 0x342,
      _0x3b2c4c: 0x2509,
      _0x595159: 0x257c,
      _0x4a606d: 0x342,
      _0x26002e: 0x7d3,
      _0x4e8f7b: 0xf85,
      _0x4d16e1: 0x45e,
      _0x3699dd: 0x2001,
      _0x2f23b3: 0x19e6,
      _0x2ba5aa: 0x535,
      _0x4dd7f5: 0x4b9,
      _0x5704f8: 0x235b,
      _0x57dc1d: 0x163e,
      _0x2dce8b: 0x535,
      _0x1ce02d: 0x2530,
      _0x29dd58: 0x1312,
      _0x2d2715: 0x535,
      _0x53d983: 0x235b,
      _0x3c42de: 0x535,
      _0x44d041: 0x17d8,
      _0x5ae4dc: 0x1f27,
      _0x494851: 0x135e,
      _0x3fb2a2: 0x1cd3,
      _0x34ee7a: 0xb12,
      _0x4ba2c5: 0x1be8,
      _0x5b1370: 0x1241,
      _0x5b2fb3: 0x1cd3,
      _0x1d70c3: 0xae0,
      _0x60693c: 0xc3f,
      _0x254620: 0x2628,
      _0x5be1ec: 0x1cd3,
      _0x264a69: 0x1b76,
      _0x4bc1e3: 0x4b9,
      _0x53ec21: 0x1f1e,
      _0x50bb17: 0x17c1,
      _0xf9379d: 0xf22,
      _0xa39d91: 0x9c1,
      _0x384450: 0x4b9,
      _0x4b4d57: 0x1cd3,
      _0x59d2be: 0xdf1,
      _0x3b6213: 0x171c,
      _0x39b51e: 0xe8e,
      _0x307351: 0x2014,
      _0x2d64ff: 0x3e6,
      _0x31e092: 0x18a7,
      _0x86788b: 0xf3b,
      _0xf88f84: 0x1e12,
      _0x10544d: 0x4b9,
      _0x1b5de3: 0x1be8,
      _0x1cc506: 0x221a,
      _0x1de874: 0x1741,
      _0x2739c8: 0xbdc,
      _0xaeb7e3: 0x259e,
      _0x9f4f83: 0x19e,
      _0x4c3fcc: 0x4b9,
      _0x32ac4d: 0x4b9,
      _0x2c6e3b: 0x1fa3,
      _0x2357d8: 0x1cd3,
      _0x2fb93b: 0x535,
      _0x576f06: 0x1cd3,
      _0x1688b5: 0x1d66,
      _0x5324b4: 0x1be8,
      _0x92454c: 0x163e,
      _0x261cb5: 0x535,
      _0x50bbf1: 0x133c,
      _0x1c9bcd: 0x185e,
      _0x4fed34: 0x1613,
      _0x39093a: 0x133c,
      _0x27fff2: 0x235b,
      _0x45a67c: 0x185e,
      _0x48f5f6: 0x1cd3,
      _0x52e0c8: 0x4b9,
      _0x590714: 0x19e6,
      _0x25af3f: 0x1bf6,
      _0x48f382: 0x2288,
      _0x2f10d8: 0x183f,
      _0x19cc0f: 0x1d66,
      _0x5a57d2: 0x115c,
      _0x11c019: 0xaa9,
      _0x5409f4: 0x1371,
      _0x3d87b0: 0x15f9,
      _0x265bbe: 0x1cbf,
      _0x2d7ecf: 0x41d,
      _0xb4e8b7: 0xc95,
      _0x98ece7: 0x19b7,
      _0x3c1eab: 0xf52,
      _0xc42d68: 0xdcb,
      _0x3806b0: 0xc95,
      _0x4aa9a4: 0x1f30,
      _0x2b8f3c: 0x1d66,
      _0x5148a8: 0x186b,
      _0xbb775a: 0x2506,
      _0x5dbf62: 0xfc7,
      _0x962018: 0x9af,
      _0x5d88c9: 0x1fec,
      _0x34cc52: 0x535,
      _0x24b82c: 0x1063
    },
          a0_0x5c43c1 = {
      _0x1bf8b3: 0x1d66,
      _0x3e7144: 0x1e35,
      _0xa25572: 0x1adb,
      _0x19fe2a: 0xc2e,
      _0x917275: 0x2488,
      _0x4a9af6: 0x4a3,
      _0x2257f1: 0x535
    },
          a0_0x1b95ac = {
      _0x42789e: 0x1291,
      _0xa258fc: 0x2315,
      _0x418319: 0xf8c,
      _0x53dedf: 0x1748,
      _0x38e419: 0x1673,
      _0x57fe33: 0x145f,
      _0x2e9d7d: 0xf8c,
      _0x16cf5b: 0x1b61,
      _0x5e61a2: 0x2488,
      _0x4f957b: 0x1a3,
      _0x5d4df3: 0x145f,
      _0xc4379c: 0x1792
    },
          a0_0x1b290a = {
      _0x4b8aea: 0x14d2,
      _0x3c9124: 0x19c5,
      _0x4339d3: 0x101b,
      _0x3d1a4e: 0x14d2,
      _0x2b30d3: 0x19c5,
      _0x3944e3: 0x14d2,
      _0x37f139: 0xa74,
      _0x596467: 0x14d2,
      _0x17495b: 0x18e1,
      _0x18e286: 0x14d2
    },
          a0_0x3818aa = {
      _0x2f447a: 0x2488
    },
          a0_0x216acc = {
      _0x1982a7: 0x2488
    },
          a0_0x1de4fc = {
      _0x5d4705: 0xf8a,
      _0x2ea2ea: 0x2602,
      _0x1dfd35: 0x17b9,
      _0x4599e6: 0x1ee9,
      _0x41491c: 0x535,
      _0x76920e: 0x2034,
      _0xbf91e6: 0x1d66,
      _0x4e9244: 0xf90,
      _0x19710c: 0x1ee9,
      _0x1ee664: 0x1850,
      _0xb1cfc2: 0x2568,
      _0x451234: 0x1572
    },
          a0_0x28c27e = {
      _0x23b750: 0x185e,
      _0x3fb6a4: 0x14d2,
      _0x573c8e: 0x182a,
      _0x1b367c: 0x19c5,
      _0x2b1d9b: 0x14d2,
      _0x294154: 0x19c5,
      _0xb14b17: 0x1e5f,
      _0x10b52e: 0x19c5,
      _0x4e8b47: 0x20c5,
      _0x98ec57: 0x14d2,
      _0x156db9: 0x19c5,
      _0x3a1f60: 0xf1e,
      _0x4eb531: 0x2136,
      _0x3ed076: 0xf6d,
      _0xd8b851: 0x166a,
      _0x193bba: 0x14d2,
      _0x32ef7c: 0x19c5,
      _0x2e447c: 0x2666,
      _0x3295b4: 0x879,
      _0x3c1b47: 0x1699,
      _0x5658a2: 0x24bc,
      _0x2ab6dd: 0x1b56,
      _0x282139: 0xcc9,
      _0x3b66f4: 0x9a9,
      _0x428ec0: 0x1d66,
      _0xe8590b: 0x683,
      _0x4caed8: 0x1d66,
      _0x260ca8: 0x12b3
    },
          a0_0x55a14e = {
      _0x3494b2: 0x1a3,
      _0x5b4536: 0x1c4f,
      _0x4edf9a: 0x112d
    },
          a0_0x2a76c0 = {
      _0x153283: 0x1f3a
    },
          a0_0x656131 = {
      _0x3c458b: 0x4b9,
      _0x31807a: 0x163e,
      _0x43c049: 0x1063
    },
          a0_0x25ad48 = {
      _0xb20057: 0x2488,
      _0x18ea57: 0x1a3
    },
          a0_0x5a3c36 = {
      _0x1f865a: 0x2488,
      _0x2e3937: 0x1a3
    },
          a0_0x70b473 = {
      _0x3a111f: 0x11d9,
      _0x4ee685: 0x535,
      _0x9622d0: 0x1cfb,
      _0x1c9337: 0x1a3
    },
          a0_0x27c76b = {
      _0xb66b86: 0x535,
      _0x948fff: 0x253d,
      _0x5158a3: 0xf8a,
      _0x2867ee: 0x235b,
      _0x38dde0: 0x1f30,
      _0x47c7d4: 0x185e,
      _0x17b58f: 0x1f30,
      _0x2307fd: 0x235b,
      _0x5431e3: 0x2034,
      _0x2e6a3f: 0x1d66,
      _0x3d43c6: 0x686,
      _0x533335: 0x235b,
      _0x55d93c: 0x185e,
      _0x400317: 0x1850,
      _0x5a093e: 0x7c0,
      _0x4719d1: 0x1350,
      _0x3efd90: 0x2572
    },
          a0_0x25f5e5 = {
      _0x224d67: 0x2488,
      _0x1c8528: 0x6c6
    },
          a0_0x4ebdec = {
      _0x3749c8: 0x19d2,
      _0x2734bf: 0x14d2,
      _0x26941a: 0xed4
    },
          a0_0x488582 = {
      _0x415d6a: 0x235b,
      _0x4cb4f9: 0x14d2,
      _0x39192d: 0x1a5
    },
          a0_0x17b424 = {
      _0x54b9bc: 0x19d2,
      _0x2541cd: 0x14d2,
      _0x59edb4: 0xed4
    },
          a0_0x279f46 = {
      _0x169882: 0x24bc,
      _0x8dada0: 0x879,
      _0x39fabf: 0x14d2,
      _0x4fcf1b: 0x1c27,
      _0x13d095: 0x14d2,
      _0xb60be2: 0x19c5,
      _0xeddb6c: 0x3bc,
      _0x1d7c2f: 0x19c5,
      _0xa1b478: 0x14d2,
      _0x303185: 0x14d2,
      _0x3557a7: 0x227,
      _0x4867bb: 0x19c5,
      _0x39e824: 0x5ed,
      _0x3cfe8f: 0x14d2,
      _0x2fbcae: 0xc2d,
      _0x54dc49: 0x19c5,
      _0x68a133: 0x1d7d,
      _0x1d4e33: 0x1af8
    },
          a0_0x59d6fb = {
      _0x5401e2: 0x2181
    },
          a0_0x283919 = {
      _0x103e50: 0x2488,
      _0x3fcf2a: 0x112d
    },
          a0_0x444af1 = {
      _0x42b2a5: 0x1da5,
      _0x501438: 0x1dff
    },
          a0_0x565fbc = {
      _0x8d7982: 0x21e0,
      _0x242e07: 0x1c79,
      _0xa55fff: 0x2488,
      _0x542fca: 0x1a3,
      _0x40e170: 0x200b
    },
          a0_0x38cfb3 = {
      _0x256b82: 0x11d9,
      _0x438dee: 0x2488,
      _0xe19be3: 0x4a3,
      _0x55ca16: 0x1bd0
    },
          a0_0xc4168 = {
      _0x5cf639: 0x1447
    },
          a0_0x40f0e3 = {
      _0x18cfa6: 0x1349,
      _0x3af066: 0x138f,
      _0x4d6846: 0x1a3,
      _0x30eb08: 0x535
    },
          a0_0x205227 = {
      _0x265d73: 0xa27
    },
          a0_0x58b056 = {
      _0x25cc7e: 0x2181,
      _0x55eeb2: 0x1f30,
      _0x436079: 0x17a7,
      _0x264412: 0x2080,
      _0x3c0b71: 0x535,
      _0x176fe9: 0x2526,
      _0x564a6a: 0xa00,
      _0x17f369: 0x4b9,
      _0x56c6aa: 0x535,
      _0x31f5e4: 0xf71,
      _0x3c0f37: 0x1d66,
      _0xe3ec21: 0x2530,
      _0x587b94: 0x23c,
      _0x34eae2: 0x310,
      _0x5e1969: 0x178b,
      _0x16484e: 0x207f,
      _0x52ff42: 0xffb,
      _0x237fde: 0x207f,
      _0x3a2dcb: 0x74e,
      _0x29a108: 0x22a,
      _0x34fdcf: 0xf88,
      _0x30a296: 0x2152,
      _0x5ce1ef: 0x14d2,
      _0x1c6353: 0x3b9,
      _0x16017b: 0x207f,
      _0x4dc752: 0xffb,
      _0x21ede6: 0xf88,
      _0x591856: 0x207f,
      _0x21315a: 0x660,
      _0x37a1df: 0x14d2,
      _0x3962af: 0x1c27,
      _0x33dade: 0xf88,
      _0x209e92: 0x1eaf,
      _0x40aaee: 0x3b9,
      _0x4b067d: 0xe7e,
      _0x5e5a8b: 0x2152,
      _0xd7509f: 0x207f,
      _0x58666f: 0x2152,
      _0x3c64f5: 0x728,
      _0x15abe9: 0x1eaf,
      _0x32447f: 0x167f,
      _0x3c0ffa: 0x728,
      _0x3a3ae: 0x178b,
      _0x16e678: 0x14d2,
      _0x5904de: 0x1a5,
      _0x18827d: 0xe7e,
      _0x32b2c1: 0x1edf,
      _0x1a4f1b: 0x207f,
      _0x390c1c: 0x2152,
      _0x225343: 0x178b,
      _0x9012e1: 0x207f,
      _0x4dfed1: 0x3b9,
      _0x14c129: 0x728,
      _0x394400: 0x178b,
      _0x43cf0e: 0xffb,
      _0x4cac20: 0x207f,
      _0x4f6dd3: 0x263c,
      _0xb56e77: 0xffb,
      _0x28ace9: 0x2152,
      _0x121b7b: 0x2459,
      _0x1c6816: 0x207f,
      _0x2cb846: 0x2152,
      _0x1845ba: 0x14d2,
      _0x430039: 0x1a5,
      _0x5f3a99: 0xe7e,
      _0x122c22: 0x207f
    },
          a0_0x1ecc80 = {
      _0xd39f7f: 0x14d2,
      _0x43f743: 0x19c5,
      _0x5e08df: 0x1105,
      _0x23ed8f: 0x1808,
      _0x1bb2e2: 0x24bc,
      _0x33b73d: 0xb16,
      _0x16560a: 0x1a2c,
      _0x8f22ee: 0x22b2,
      _0x32bb35: 0x17a6,
      _0x5ad8dd: 0x19c5,
      _0x3d267f: 0x254a,
      _0x39920b: 0x19c5,
      _0x33c311: 0x14d2,
      _0x5c1629: 0x1234,
      _0x1d9fb4: 0x1a06
    },
          a0_0x334431 = {
      _0x2abf8e: 0x4a3,
      _0x59fc8a: 0xbf3,
      _0x22b2b0: 0x14d2,
      _0x463c10: 0x1a5
    },
          a0_0x3675ab = {
      _0x406844: 0x2488,
      _0x9570ae: 0xbf3,
      _0x13a55d: 0x4b9,
      _0x1bd1c6: 0x9a8,
      _0x53bda2: 0x535,
      _0x192140: 0x4b9,
      _0x485c35: 0x4b9,
      _0x5525a8: 0x3e9
    },
          a0_0x5db72d = {
      _0x3b30c4: 0x21e0
    },
          a0_0xa983d2 = {
      _0x2b4881: 0x535,
      _0x3b3f1d: 0x2129,
      _0x25bbce: 0x1d66,
      _0x31d585: 0x242c,
      _0x1f8789: 0xbf3,
      _0x2ee76c: 0x2488
    },
          a0_0x1d3e36 = {
      _0x528ef7: 0xd55,
      _0x35309a: 0x14d2,
      _0x36173f: 0x4b9,
      _0x5a594d: 0x4b9
    },
          a0_0x444d4e = {
      _0x403c6a: 0x1f19,
      _0x450610: 0x2181,
      _0x1befde: 0x57e,
      _0x2292bb: 0x1f19,
      _0x44a1b6: 0x2315,
      _0x4cc7eb: 0x1f19,
      _0x286210: 0xa2a,
      _0x467e14: 0x1f91,
      _0x5332b9: 0x1f19,
      _0x1a87bb: 0xa7a,
      _0x3808d6: 0x14d2,
      _0x33ec60: 0x19c5,
      _0x156111: 0x8cf,
      _0x91fe40: 0x19c5,
      _0x4c1cd0: 0x1b6b,
      _0x38d469: 0x1f6d
    },
          a0_0x50aedc = {
      _0x17930e: 0x535,
      _0x4c766b: 0x22b2,
      _0x4b7d38: 0x1d9f,
      _0x117ee3: 0x112d
    },
          a0_0x293a09 = {
      _0x4af4a5: 0x19c5,
      _0x1ee375: 0x2078,
      _0x1e6cf7: 0x19c5,
      _0x5e5d72: 0x1378
    },
          a0_0x3b639f = {
      _0x1de04e: 0x2488,
      _0x27a6b6: 0x4a3,
      _0x169375: 0x316
    },
          a0_0x5e703a = {
      _0x4ae4ca: 0x316,
      _0x5e6ea4: 0x316,
      _0xb9758f: 0x4a3
    },
          a0_0x4bdd16 = {
      _0x130922: 0x185e,
      _0xb6492b: 0x1447,
      _0x35850d: 0x23b4,
      _0x9e6899: 0x14d2,
      _0x2bb0ce: 0x19c5,
      _0x573c61: 0x2431,
      _0x2a6a9d: 0x158f,
      _0x2db288: 0x1f1f,
      _0x4f38c8: 0x65a,
      _0x37a1cc: 0x14d2,
      _0x2da950: 0x19c5,
      _0x207401: 0x19c5,
      _0x5d5a04: 0x171a,
      _0x26882f: 0x19c5,
      _0x1e0648: 0x1b9e,
      _0x4c2cf4: 0x1808,
      _0x3c4ece: 0x1105
    },
          a0_0x48fcd6 = {
      _0x315b9c: 0x535,
      _0x53f094: 0xf86,
      _0x594b83: 0x22b2,
      _0x375945: 0x1edc
    },
          a0_0x139408 = {
      _0x3f28d1: 0xe6d
    },
          a0_0xc00a = {
      _0x2e248f: 0x6ba,
      _0xc485b0: 0x16c5,
      _0x33b9a8: 0x17f
    },
          a0_0x3fcfdd = {
      _0x2a9dc7: 0xa96,
      _0x16060e: 0xadd,
      _0x154922: 0x2488,
      _0x3e23e6: 0x1bd0,
      _0x33526c: 0x63e
    },
          a0_0x45f4a7 = {
      _0x4239c4: 0x19c5,
      _0x4486c1: 0x14d2,
      _0x549e45: 0x1da5
    },
          a0_0x224834 = {
      _0x1d0440: 0x2488,
      _0x1f950d: 0x1a3,
      _0x14ccc8: 0x1bd0,
      _0x53d95: 0x2488,
      _0x2b7878: 0x4a3,
      _0x433c7f: 0x63e,
      _0x4d72ae: 0x256b
    },
          a0_0x5a3c1f = {
      _0x4a033d: 0x2488,
      _0x1e2036: 0x1a3
    },
          a0_0x4d61d3 = {
      _0x5b07d7: 0x1da5
    },
          a0_0x3efb57 = {
      _0x293841: 0x1a3,
      _0x555a80: 0x4a3
    },
          a0_0x1b5f58 = {
      _0x577ad8: 0x185e,
      _0xe92a77: 0xe6d,
      _0x12bec9: 0x14d2,
      _0x1ae664: 0x19c5,
      _0x41212b: 0x19c5,
      _0x3b3d78: 0x1105,
      _0x3f4e7f: 0x14d2,
      _0xb1ca35: 0x2147,
      _0x4982c4: 0x19c5,
      _0x4c635c: 0x1abf
    },
          a0_0x34785e = {
      _0x544239: 0x2488,
      _0x4dec74: 0x4a3
    },
          a0_0x1c4ac5 = {
      _0x40aea2: 0x1da5,
      _0x13f67e: 0x2260
    },
          a0_0x372154 = {
      _0x4eff80: 0x13f7
    },
          a0_0x1e624 = {
      _0x1fd2c4: 0x253d,
      _0x1f647c: 0x16c5,
      _0x3ef7a2: 0x13f7,
      _0x385c55: 0x1d66,
      _0x2d395a: 0x59d,
      _0x519ff1: 0x4a3
    },
          a0_0x262275 = {
      _0x4634f5: 0x14d2,
      _0x12d54d: 0x19c5,
      _0x159888: 0x1808,
      _0x22c173: 0x14d2,
      _0x258075: 0x1105,
      _0x536200: 0x1bd1,
      _0x376908: 0x19c5,
      _0x3b7d55: 0x23f7,
      _0x211d05: 0x1cc1,
      _0x4fe4f2: 0x19c5,
      _0x19d2aa: 0x754,
      _0x1c544a: 0x33b,
      _0x6849a1: 0x1bcc
    },
          a0_0x1f9f35 = {
      _0x4ec4ba: 0x2488,
      _0xdfd1a5: 0x4a3,
      _0x52cadc: 0x21ab
    },
          a0_0x156309 = {
      _0x5e6128: 0x14d2,
      _0x2d6c0f: 0x1da5,
      _0x5600fb: 0x3dc
    },
          a0_0x5bc356 = {
      _0xf9db03: 0x1da5
    },
          a0_0x34e5bd = {
      _0x1321f3: 0x116b
    },
          a0_0x5e3f19 = {
      _0x17c76b: 0x1aab,
      _0xf8c83: 0x16c5,
      _0x1f0b6d: 0xe21
    },
          a0_0x280331 = {
      _0x52c734: 0x235b,
      _0x3c0510: 0x185e,
      _0x1451b5: 0x2ae,
      _0x430f52: 0x1aab,
      _0x5892e5: 0x2606,
      _0x5847f1: 0xf82,
      _0x4b856b: 0x2379,
      _0x342a9c: 0x25e4,
      _0x5ea80c: 0x1d55,
      _0x42e766: 0xde5,
      _0x5be589: 0x1d2,
      _0x417cc2: 0x19c5,
      _0xb88423: 0x1029,
      _0x543f13: 0x1105,
      _0xaf97ed: 0x19c5,
      _0x2e6bd5: 0x218c
    },
          a0_0x270045 = {
      _0x25a4b9: 0x4a3,
      _0x525c70: 0x2612
    },
          a0_0x58a5cd = {
      _0x22de29: 0x2023,
      _0x2136ed: 0x1d66
    },
          a0_0x140b40 = {
      _0x30e692: 0x535,
      _0x46c12e: 0xf86
    },
          a0_0x21b79d = {
      _0x378e5b: 0x143e,
      _0x59d5b0: 0x14d2,
      _0x1bfae8: 0x19c5,
      _0x449491: 0x200,
      _0x5ed4a7: 0x19c5,
      _0x3d36d6: 0xe9c,
      _0x359a1c: 0x1c8d
    },
          a0_0x359838 = {
      _0x5498cd: 0x7a0,
      _0x464528: 0x1e9a,
      _0x3a1e6b: 0x1054,
      _0x221e5f: 0x113b
    },
          a0_0x24d908 = {
      _0x30c85d: 0x7a0,
      _0x2b5915: 0x1e9a
    },
          a0_0x1956c8 = {
      _0x2645f8: 0x1e9a,
      _0x290cdb: 0x14d2,
      _0x5d0561: 0x1da5,
      _0x5ced72: 0xba9,
      _0x3ee4df: 0x1a3
    },
          a0_0x2f50e8 = {
      _0x2464c1: 0x14d2,
      _0x47119c: 0x1d04,
      _0x16c50c: 0x14d2,
      _0x15f73b: 0x20c5,
      _0x288914: 0x19c5,
      _0x34a9dc: 0x1dae,
      _0x49e504: 0x194e,
      _0x191ef1: 0x14d2,
      _0x5bcb5a: 0x14d2,
      _0x1ed54b: 0x20fa,
      _0x30c420: 0x19c5,
      _0x1a2087: 0x19c5,
      _0x46fd67: 0x844,
      _0x279426: 0x19c5,
      _0x7d20a2: 0x19c5,
      _0x11ed79: 0x2055,
      _0x3629d9: 0x1835,
      _0x26e470: 0x14d2,
      _0x5d6e9d: 0x14d2,
      _0x4e399c: 0x1ee3
    },
          a0_0x4ba04e = {
      _0x42e2e5: 0x1bff
    },
          a0_0x29bf56 = {
      _0x197dc8: 0x1a3,
      _0x1861a5: 0x1a3,
      _0x17a731: 0xcbf
    },
          a0_0x52dfb9 = {
      _0x2782a2: 0x1da5,
      _0x1c6e24: 0xc50,
      _0x438b88: 0x3b1
    },
          a0_0x41faa4 = {
      _0x223c8e: 0x20ba,
      _0x28df96: 0x112d
    },
          a0_0x80da9a = {
      _0xdebc4: 0x14d2
    },
          a0_0x17db4e = {
      _0x42966f: 0x14d2
    },
          a0_0x340e4a = {
      _0x38f317: 0x14d2,
      _0x5f1f85: 0x13da
    },
          a0_0x437721 = {
      _0x5b7aa7: 0x112d,
      _0x25702f: 0x535,
      _0x65d751: 0xcba,
      _0x3eaeaa: 0x831,
      _0x5186e2: 0x1a2c,
      _0x51f77a: 0x2488,
      _0x5de200: 0x2079
    },
          a0_0x2db8c3 = {
      _0x230011: 0x185e,
      _0x4e9a93: 0x1aac,
      _0x26f76f: 0x14d2,
      _0x1b35ac: 0x19c5,
      _0x14ebbd: 0x6e1
    },
          a0_0x51e2c0 = {
      _0x3d6e60: 0x2488,
      _0x5a2128: 0x1e0f,
      _0xedd0b4: 0x4a3,
      _0x1b7360: 0x294,
      _0x258ab8: 0x1d66
    },
          a0_0x48d56f = {
      _0x2494f1: 0x464,
      _0x11dad2: 0x4a3
    },
          a0_0x195d56 = {
      _0x215789: 0x14d2,
      _0x575e38: 0x101f,
      _0x24336c: 0x19c5,
      _0x16940d: 0xf0b,
      _0x4249f1: 0x1e16,
      _0x12bd6a: 0x204f
    },
          a0_0x4e4023 = {
      _0x13804f: 0x242c,
      _0x34e5af: 0x1a5
    },
          a0_0x4968f6 = {
      _0x5cd855: 0x242c,
      _0x1e0d38: 0x1c31,
      _0x43d764: 0x1a5
    },
          a0_0x42b42d = {
      _0x39c92c: 0x1dda,
      _0xf4fcbf: 0x535,
      _0x31011e: 0xf79,
      _0x551a9c: 0x535,
      _0x5b2fd9: 0x1349,
      _0x5508ea: 0xbb1,
      _0x1ddf1e: 0x1b61,
      _0x49cc2e: 0xd37,
      _0x346a2a: 0x1bbb,
      _0x29e7ec: 0xac9,
      _0x5c970e: 0x1349,
      _0x1b6ae2: 0x535,
      _0x107e5e: 0x1349,
      _0x8e2c70: 0x2488,
      _0x37a8ec: 0x1a3,
      _0x590bb7: 0x2432
    },
          a0_0x33a921 = {
      _0x172e85: 0x6df,
      _0x5546f2: 0x19c5,
      _0x34bffb: 0x2088,
      _0x306d7a: 0x14d2,
      _0x210422: 0x14d2,
      _0x37808c: 0x19c5,
      _0x5e9ba9: 0x14d2,
      _0xd58a5b: 0x14d2,
      _0x9a0fc1: 0xc09,
      _0x1b8e09: 0x14d2,
      _0x3fd361: 0x14d2,
      _0x4e19ed: 0x13a3,
      _0x48254e: 0x14d2,
      _0x3b3276: 0x19c5,
      _0x8e9e4a: 0x19c5,
      _0x2069dc: 0xce7,
      _0x4b534f: 0x19c5,
      _0x5b2296: 0x367,
      _0xe6909d: 0x19c5,
      _0x49485c: 0x142f,
      _0x5ef043: 0x121d
    },
          a0_0x24812e = {
      _0x4680ab: 0x14d0,
      _0x432c75: 0x665,
      _0x2bc9c7: 0x215c,
      _0x4b1ff3: 0x535,
      _0x5315bd: 0x1b37,
      _0x52b6f2: 0x215c
    },
          a0_0xafc5b4 = {
      _0x2cd911: 0x535,
      _0x47ff3b: 0x74c,
      _0x54a190: 0x12a3,
      _0xf3314f: 0x232,
      _0x51d689: 0x535
    },
          a0_0x370cd8 = {
      _0x140d0d: 0xf6b
    },
          a0_0x4346ac = {
      _0x1e5819: 0x25df,
      _0x548c86: 0x662,
      _0x3465b1: 0x385,
      _0x23ffc3: 0x927,
      _0x3cfb81: 0x1d66,
      _0x7a7fa: 0xf2f,
      _0x423212: 0x102d,
      _0x533104: 0x1d66,
      _0x2c6b99: 0x2596,
      _0x469cf7: 0x4a3,
      _0x48694f: 0xf6b,
      _0x211f9c: 0xa9d,
      _0x4c1584: 0x17f,
      _0x2326eb: 0x2292
    },
          a0_0x393d1b = {
      _0x43918c: 0x535,
      _0xf03c27: 0x927,
      _0x8f140e: 0x212b,
      _0x25c5cf: 0x14d2,
      _0xf4c463: 0x1a5,
      _0x241147: 0x535,
      _0x5ed051: 0x52c,
      _0x127bdb: 0x535
    },
          a0_0x695b1 = {
      _0x4c5333: 0xc95,
      _0x1e03a0: 0xc74,
      _0x530bbd: 0xc95,
      _0xafa8c8: 0x535,
      _0x4932a1: 0x1a5a,
      _0x218542: 0x4ee,
      _0x41cbec: 0x2488,
      _0x2771e0: 0xd25,
      _0x2358f5: 0x14d2,
      _0x3a971f: 0x112d,
      _0x288caa: 0x1fe1
    },
          a0_0x33fc34 = {
      _0x319d59: 0xe4f,
      _0x2563e9: 0x1e45,
      _0x3cf59b: 0x1d5d,
      _0xa07ac4: 0x1268,
      _0x2612d0: 0x1bfa,
      _0x5bb8b0: 0xf58,
      _0x57db0e: 0x1b39,
      _0xb41946: 0x17f2,
      _0x595eb8: 0xf58,
      _0x53dd20: 0x2084,
      _0x4433b8: 0x1dc7,
      _0x361534: 0x22c,
      _0x2f5eb2: 0x1bfa,
      _0x5d00d0: 0x17f2,
      _0x4864e1: 0x1306,
      _0x18fe2f: 0x1bfa,
      _0x15a8f4: 0xf58
    },
          a0_0x4fbc27 = {
      _0x5804b9: 0x1d6a,
      _0x346eca: 0x2175,
      _0x397354: 0xf58,
      _0x1fa782: 0xf58,
      _0x102f88: 0x1d6a,
      _0x42ede9: 0xf58,
      _0x58c466: 0xf58,
      _0x5bf977: 0xf58,
      _0x168f01: 0x2175,
      _0x1029e0: 0xf58,
      _0x111b07: 0x2084,
      _0x1b7150: 0x1dc7
    },
          a0_0x3c6838 = {
      _0x2226e2: 0x662,
      _0x269c86: 0x1f41,
      _0x57ca57: 0x2140,
      _0xb010e5: 0x1d66,
      _0xa69fd3: 0x14d2,
      _0x58dd4e: 0x1fd4,
      _0x5a7020: 0x14d0,
      _0x375250: 0x623,
      _0x3a27dc: 0x1dc8,
      _0x2be149: 0x6da,
      _0xb2ac72: 0x1337,
      _0x431877: 0x178c,
      _0x998f26: 0x762,
      _0xf87791: 0x106d,
      _0x3f0ba6: 0x1f87,
      _0x4c603b: 0x535,
      _0x330618: 0x13b0,
      _0x536d80: 0x10f6,
      _0x3460b3: 0x1d55,
      _0x1ccc11: 0x3b1,
      _0x3886ed: 0x22e6,
      _0x1d8be4: 0x2072,
      _0x35eba4: 0xd79,
      _0xc74221: 0x1e21,
      _0xd1bcfb: 0x609,
      _0x3b86f7: 0x535,
      _0x8a0330: 0xf6b,
      _0x578a6c: 0x14d2,
      _0x1f4501: 0x1f4,
      _0x3b8628: 0x1039,
      _0x4f29b0: 0x665,
      _0x63e44e: 0x1de9,
      _0x2203d6: 0x665,
      _0x415a02: 0x215c,
      _0x5918b1: 0x1b37,
      _0x12cbbd: 0x1870
    },
          a0_0x5c2995 = {
      _0x22571d: 0x185e,
      _0x2a4c37: 0x241d,
      _0x483bfa: 0x19c5,
      _0x59c8e9: 0x20cf
    },
          a0_0x1bd8ca = {
      _0x72a7f5: 0x1da5,
      _0x326ed0: 0x1ddc
    },
          a0_0x518a39 = {
      _0x5e929f: 0x1bd0,
      _0x5971a8: 0x2488
    },
          a0_0x4a1fe5 = {
      _0xe287ad: 0x235b,
      _0x1ba053: 0x1d13,
      _0x27e1cc: 0x14d2,
      _0x5093db: 0x20d9,
      _0xe31cb4: 0x14d2,
      _0x4fd5d0: 0x19c5,
      _0x28fbc3: 0xd8b,
      _0x194d3e: 0x14d2,
      _0x1776c8: 0x1637,
      _0x108301: 0x19c5,
      _0x47ad20: 0x204f
    },
          a0_0x3988de = {
      _0x4ad79c: 0x1a5
    },
          a0_0x5c66f2 = {
      _0x4460b7: 0x535,
      _0x4525a7: 0x1a07,
      _0x375ea7: 0x251,
      _0x3b6a23: 0x1934,
      _0x313c88: 0x14a5,
      _0x1521fc: 0x14d2,
      _0x3d5bce: 0x60b
    },
          a0_0x40706a = {
      _0x1eaca5: 0x185e,
      _0x371793: 0x535,
      _0x3dc7f6: 0x623,
      _0x398978: 0x1dc8,
      _0x3b2a20: 0x6da,
      _0x33e950: 0x3b1,
      _0x380e5e: 0x5d7,
      _0x3473af: 0x230a,
      _0x151db7: 0x30b,
      _0x3730e3: 0x1752,
      _0x3f8f9e: 0x471,
      _0x5b9ef1: 0x1361,
      _0x126c4b: 0x62d,
      _0x2becec: 0x1a51,
      _0x2b7ae8: 0xedc,
      _0x2e2d2c: 0x3b8,
      _0x143db9: 0x34f,
      _0x4c1764: 0x1861,
      _0x5ecbeb: 0x135f,
      _0x2c309d: 0xe6d,
      _0x395521: 0x14d2,
      _0x4ffb26: 0x19c5,
      _0x1c1f5c: 0x14d2,
      _0x33ed99: 0x1105,
      _0x4ea687: 0xfef,
      _0x2d3ef1: 0x14d2,
      _0x18be36: 0x19c5,
      _0x38b771: 0x36f,
      _0x4df4d1: 0x2406,
      _0x4a6deb: 0x19c5,
      _0x3c04cf: 0x25bc,
      _0x1c4919: 0x19c5,
      _0x560816: 0x19c5,
      _0x33bc0c: 0x45a,
      _0xbc0af5: 0x14d2,
      _0x4b7342: 0x204f
    },
          a0_0x350556 = {
      _0x4a7f8a: 0x14d2,
      _0x677113: 0x62a
    },
          a0_0x51f92b = {
      _0x2b6b32: 0x1edc,
      _0x2c6b23: 0x535,
      _0x10a910: 0x9c5,
      _0x490cd2: 0x535,
      _0x3e139a: 0xfba,
      _0x62c324: 0xabf
    },
          a0_0x9c7c4c = {
      _0x2d2936: 0x1edc,
      _0x293cbc: 0x1155,
      _0x10446c: 0x535
    },
          a0_0x394f41 = {
      _0x4d9429: 0x14d2,
      _0x55da8e: 0x14a1
    },
          a0_0x5c9d27 = {
      _0x3f7cdf: 0x14d2,
      _0x7bc5d6: 0x535,
      _0x2c4f2d: 0x5d7,
      _0x4c1ed0: 0x2028,
      _0x1b6d07: 0x6da,
      _0xbeb3bf: 0xad8,
      _0x15aff8: 0x1153,
      _0x218858: 0x1bf9,
      _0x42b5f7: 0x1edc,
      _0x58141f: 0xd5f,
      _0x21ff42: 0xcba,
      _0x52dc1d: 0x1d2,
      _0x3aa56b: 0x1971,
      _0x477fd5: 0x19d2,
      _0xb36b87: 0x1f8f,
      _0x40da96: 0x1d2,
      _0x38dfbf: 0x1f8f,
      _0x31650e: 0x19d2,
      _0x2b9155: 0x21e0,
      _0x3ed953: 0x21e0,
      _0x2073d9: 0x2378,
      _0x18cd2c: 0x161a,
      _0x1f84d6: 0x10db,
      _0x523a5a: 0x1f8f,
      _0x1532c6: 0x1f8f,
      _0x1b1149: 0x1a2c,
      _0x358b90: 0x1a2c,
      _0xe897e0: 0x2488,
      _0x433613: 0x24e4,
      _0x3d207c: 0x2378
    },
          a0_0x1c5edc = {
      _0xcb7e1e: 0x2488,
      _0x2566b0: 0x4a3,
      _0x398dd4: 0x1fdf,
      _0x34a7fa: 0x535,
      _0x2cda04: 0x1cd8,
      _0x215c1e: 0x535,
      _0x41ab8a: 0x2072,
      _0x42565d: 0xd79,
      _0x45a261: 0xa9d,
      _0x2da0b5: 0x14d2,
      _0x31bc29: 0x535,
      _0x51146b: 0x1a5,
      _0x1e9375: 0xd9b,
      _0x5ef10f: 0x1182,
      _0x5474bf: 0x1da5,
      _0x4a87a8: 0x1dfa
    },
          a0_0x2a5047 = {
      _0x2577c7: 0x535,
      _0x5c001c: 0x623,
      _0x14a561: 0x1dc8,
      _0x580b8d: 0x6da,
      _0x5bb428: 0xad8,
      _0x383bc0: 0x362,
      _0x19fc48: 0x2028,
      _0x54ad3f: 0x19d2,
      _0x1aa56f: 0x1d66,
      _0x526d69: 0xe1b,
      _0x425d5d: 0x103b,
      _0x4760fc: 0x2530,
      _0x6c660d: 0xe1b,
      _0x3faa07: 0x103b,
      _0x26950b: 0x2530,
      _0x3543ce: 0x1d66
    },
          a0_0x2b5707 = {
      _0x28cc4a: 0x5d7,
      _0x1a2c9c: 0x2028,
      _0x33015e: 0x8bc,
      _0x417108: 0xe1b,
      _0x17aeb5: 0x2530,
      _0x4d4976: 0x1d66,
      _0x4cce16: 0x103b,
      _0x42b511: 0x2530
    },
          a0_0x4b2587 = {
      _0x1d8bf3: 0x1b5d,
      _0x70f480: 0x535,
      _0x15727d: 0x1dc8,
      _0x7f2d40: 0xad8,
      _0x6aee1e: 0xf66,
      _0x3e5344: 0x1b8c,
      _0x363536: 0xbdc,
      _0x387f13: 0x6da,
      _0x1475a9: 0x21e0,
      _0xb10f7d: 0x831,
      _0xb816f2: 0x22b2,
      _0x383be5: 0x123d,
      _0x277495: 0x1153,
      _0x19e965: 0x21e0,
      _0x23c506: 0x268,
      _0x5e0fd8: 0xcba,
      _0x39db97: 0x230a,
      _0x39ee84: 0x62d,
      _0x44f3fb: 0x535,
      _0x55bcb5: 0xbb1,
      _0x436f7c: 0x19d2,
      _0x12d688: 0x1d2,
      _0x16ea42: 0x1fbe,
      _0x28c983: 0x1186,
      _0x20754e: 0x1edc,
      _0x435c93: 0xd5f,
      _0xbd28a6: 0x1971,
      _0x58ba64: 0x19d2,
      _0x4d975b: 0x19d2,
      _0x8cb7dc: 0xd5f,
      _0xbd83e2: 0x19a5,
      _0x2fbc32: 0xcba,
      _0xeaaef0: 0xcba,
      _0x4a7e71: 0xd5f,
      _0xaa651: 0xd5f,
      _0x3d8842: 0x1f8f,
      _0x1a4d47: 0xb52,
      _0x24a4cc: 0x19aa,
      _0x10362e: 0x3b1,
      _0x1ccf8c: 0x19aa,
      _0x1faa81: 0x22e5,
      _0x22ddd6: 0x1f8f,
      _0x31c85a: 0x1b8c,
      _0x29131a: 0x831,
      _0x2a8c8f: 0x831,
      _0x2d59b9: 0x1d2,
      _0x3776ad: 0x831,
      _0x2ea191: 0x19f2,
      _0x3b63a1: 0x831,
      _0x22147b: 0x1f8f,
      _0x48e304: 0x19d2,
      _0xc8ad87: 0x3b1,
      _0x1df1d9: 0x1a3a,
      _0x17c436: 0x2378,
      _0x4f8bb1: 0x1fdf,
      _0x54e2af: 0x535,
      _0x3e8dc2: 0x52c,
      _0x58908c: 0x14d2,
      _0x431c9b: 0x2667,
      _0x3a4f70: 0x1d55,
      _0x18c56c: 0x7fe,
      _0x39dd01: 0x1f30,
      _0x45d85d: 0x10f6,
      _0x145468: 0x1d55,
      _0x10ca7a: 0x1d66,
      _0x4ee962: 0xa9d,
      _0x3c657d: 0xf82,
      _0x2d7fc9: 0x22e6,
      _0x163064: 0x2c5,
      _0x2e814f: 0x1199,
      _0x569e3a: 0x2072,
      _0xb19430: 0xd79,
      _0x34f188: 0xf6b,
      _0x5432d: 0x1e21,
      _0x13ea09: 0x609,
      _0x374135: 0x2292,
      _0x5ecf9f: 0x936,
      _0x4016d7: 0x1a5
    },
          a0_0x22bf13 = {
      _0xcddc94: 0x18a0,
      _0x1a4297: 0xc95,
      _0x4bb65b: 0xc74,
      _0x463b81: 0x623,
      _0x434272: 0x6da,
      _0x49f1f0: 0x623,
      _0x22f0e5: 0x82d,
      _0x11e9cc: 0x1f8f,
      _0x46325c: 0x1d2,
      _0xab61a7: 0x535,
      _0x2cd62a: 0x1349,
      _0xa55b31: 0xbb1,
      _0xe8f69: 0x53e,
      _0x3b77c9: 0x14d2,
      _0x353eb6: 0xc95,
      _0x51e542: 0x1f30
    },
          a0_0x4121b0 = {
      _0x574032: 0x22c2,
      _0x1b1272: 0x22c2
    },
          a0_0x4af335 = {
      _0x2866cd: 0xcb7
    },
          a0_0x5b3278 = {
      _0x1cdb39: 0x235b,
      _0x2bf229: 0x185e,
      _0x140697: 0x1507,
      _0x22e77b: 0x24cf,
      _0x579256: 0x8e7,
      _0x1eff86: 0x14d2,
      _0x81cdfd: 0x19c5,
      _0x594bf9: 0x182,
      _0x3437fc: 0x19c5,
      _0x4032a0: 0xbb3,
      _0xc0ee08: 0x405,
      _0x39c39b: 0xf8e,
      _0x2b3eb7: 0x19c5,
      _0x310322: 0x1184,
      _0x4eb840: 0x2165,
      _0x3fe517: 0x14d2,
      _0x5c9572: 0x19c5,
      _0x12da25: 0x1adf,
      _0x11ae35: 0x14d2,
      _0x2f2e9c: 0x19c5,
      _0x763271: 0x1d9d,
      _0x34d00e: 0x1a28,
      _0x16788d: 0x607,
      _0x270bd4: 0x14d2,
      _0x3926ba: 0x14d2,
      _0x244b78: 0x11f3
    },
          a0_0xcd8ca2 = {
      _0x111d81: 0x2488
    },
          a0_0x35f35e = {
      _0x2b5ec1: 0x535,
      _0x1267e9: 0x1349,
      _0x13ba94: 0x535,
      _0x462636: 0x18fb,
      _0x3d1d49: 0x1167
    },
          a0_0x5d0c38 = {
      _0x46049c: 0x535,
      _0x9f5f6c: 0x2245,
      _0x81750b: 0x2457,
      _0x5869dd: 0xf01,
      _0x4bb9b2: 0x18fb
    },
          a0_0x1cc3c2 = {
      _0x55044f: 0x1349,
      _0xc21c9: 0xbb1,
      _0x4a1254: 0x535,
      _0x33cfb3: 0x648,
      _0x322c33: 0x1a50,
      _0x6ba074: 0x1f30,
      _0x643e84: 0x535
    },
          a0_0xec2233 = {
      _0x55eb2b: 0x535,
      _0x59ca11: 0xbb1,
      _0x4de5f4: 0x648
    },
          a0_0x34330e = {
      _0x28bb62: 0x535,
      _0x347e41: 0xbb1,
      _0x334b8e: 0x2559,
      _0x468124: 0x535,
      _0x3f95a9: 0x648,
      _0x387ec8: 0x1a50
    },
          a0_0x59a165 = {
      _0x30b569: 0x535,
      _0x102e1e: 0x1a50,
      _0x2b8205: 0x1f30,
      _0x5d1111: 0xf01,
      _0x2bdf09: 0x535
    },
          a0_0x310216 = {
      _0x298405: 0x535,
      _0x232b30: 0x2245,
      _0xc667ba: 0x210f,
      _0x1a19a3: 0x535,
      _0x1e98ee: 0xbb1,
      _0x1d0c5e: 0x145d,
      _0x396b03: 0x1349,
      _0x5ae674: 0xf01,
      _0x414627: 0x535
    },
          a0_0x11e108 = {
      _0x389057: 0xa26,
      _0x12b9aa: 0x535,
      _0x64c685: 0x1f30,
      _0x37121e: 0x2245,
      _0x3bab99: 0x1349,
      _0x5db4e1: 0x852,
      _0x2ed4f8: 0xef5,
      _0x17405e: 0x2001
    },
          a0_0x29777b = {
      _0x27d374: 0xa26,
      _0x25ec2c: 0x1f30,
      _0x34ce6c: 0x535,
      _0x283090: 0x2245,
      _0x58c94a: 0xf71,
      _0x1b0c8e: 0x210f,
      _0x4eb044: 0x1f30,
      _0x5b9780: 0x155c,
      _0xe953e5: 0x535,
      _0x5eedea: 0x1f93,
      _0x262f5e: 0x19d2,
      _0x375ad8: 0x1349,
      _0x490690: 0x1984,
      _0x24abb9: 0x18b5,
      _0x220526: 0x535,
      _0x2b9e5c: 0xf01,
      _0x4880d9: 0x18fb
    },
          a0_0x28e4dd = {
      _0x3ad38a: 0x18c1,
      _0x3839ee: 0x24cf,
      _0x1ff49e: 0x1bbf,
      _0x1f0ebf: 0x24cf,
      _0x282279: 0xd24,
      _0xb1155a: 0x2262,
      _0x1e0dfd: 0x1507,
      _0x21b4ff: 0x8e7
    },
          a0_0x3d4cc7 = {
      _0x477dc9: 0x235b,
      _0x288480: 0x185e,
      _0x385ab2: 0x14d2,
      _0x504d44: 0x1105,
      _0x3d871e: 0x19c5,
      _0x3afb8a: 0x1f95,
      _0xfa668f: 0xfdc,
      _0x2e923f: 0x14d2,
      _0x1f4520: 0x1029,
      _0xe64843: 0x14d2,
      _0x397e44: 0x1808,
      _0x1a961f: 0xd27,
      _0x3c504f: 0x107e,
      _0x54d03d: 0x14d2,
      _0x465b27: 0x1f9e,
      _0x6adb16: 0x14d2,
      _0xbe3432: 0x2047
    },
          a0_0x24d682 = {
      _0x15e14a: 0xcdb,
      _0x1e4294: 0x1d66,
      _0xf09e93: 0x1992,
      _0x2495b5: 0x24fe,
      _0x24997b: 0x1d66,
      _0x86a3a8: 0x1992,
      _0x4a42d7: 0x24fe
    },
          a0_0x4be788 = {
      _0x30acf4: 0x1a5,
      _0x54fa9a: 0x92f,
      _0x7c14a0: 0x1a5,
      _0x7f2f3f: 0x4b9,
      _0x226c0: 0x2292
    },
          a0_0x15a521 = {
      _0x34f33c: 0x14d2,
      _0x365e12: 0x1a5,
      _0x359e60: 0xfbd,
      _0xea6db3: 0x4b9
    },
          a0_0x12fdb3 = {
      _0x397aeb: 0x1d66,
      _0x3129ad: 0x1e35
    },
          a0_0x326bb6 = {
      _0x449880: 0x14a5,
      _0x365815: 0x14a5,
      _0x4633fd: 0x14a5,
      _0x2a8196: 0x14d2,
      _0x23580c: 0x1da5,
      _0x382773: 0x678,
      _0x2f9398: 0x2488,
      _0x5f083f: 0x4a3,
      _0x354991: 0x787,
      _0x103e1b: 0x1a07
    },
          a0_0x3c3a28 = {
      _0x548831: 0x22b2,
      _0x748572: 0x1d66,
      _0x406b41: 0x59d,
      _0x50b27f: 0x14d2,
      _0xb1b5a4: 0xfc8,
      _0x19c982: 0x1a60
    },
          a0_0x2d819e = {
      _0x2f47f3: 0xc55,
      _0x20c9eb: 0x10fa,
      _0x18a230: 0x2682
    },
          a0_0x105220 = {
      _0x249369: 0x535,
      _0x4ccbd4: 0x253d,
      _0x52e166: 0x242c
    },
          a0_0xb94b18 = {
      _0x4f8c3e: 0x235b,
      _0x4b46e2: 0x19c5,
      _0x295d87: 0x48e,
      _0x254c14: 0x14d2,
      _0x4cac10: 0x133a,
      _0x544463: 0x1fa5,
      _0x110163: 0x14d2,
      _0x6767dc: 0xd21,
      _0x5d83f4: 0x2105,
      _0x3b1c73: 0x19c5,
      _0x5d1d40: 0x2678,
      _0x51cf21: 0x19c5,
      _0x31c865: 0x1f12,
      _0x4f09b2: 0x14d2,
      _0x29b38b: 0x19ba,
      _0xfea57d: 0x14d2,
      _0x1ccbd0: 0x19c5,
      _0x25405d: 0x14d2,
      _0x4ba346: 0xe36,
      _0x371f79: 0x19c5,
      _0x174bbd: 0x1d42
    },
          a0_0x99fa7c = {
      _0x2d3a6b: 0x2488,
      _0x1a22c8: 0x1a3
    },
          a0_0xf55693 = {
      _0x3bb6bc: 0x1a07
    },
          a0_0x4efb1f = {
      _0x8bc0f7: 0x2488,
      _0x1b6329: 0x1a3,
      _0x58908e: 0x4d0
    },
          a0_0x4da798 = {
      _0x291000: 0x535,
      _0x15b51c: 0x1a07,
      _0x13487c: 0x1da5
    },
          a0_0x3dcb74 = {
      _0x2ff549: 0x1da5,
      _0x2f81e0: 0x12ae
    },
          a0_0x3238df = {
      _0x4b8ee9: 0x2488
    },
          a0_0x5936e7 = {
      _0x8989d9: 0x2488,
      _0x33eb06: 0x1a3,
      _0x397bec: 0x22d4,
      _0x40c1b5: 0x1806
    },
          a0_0x34aaeb = {
      _0xf08e5d: 0x1a3,
      _0x78c9bb: 0x1b1d
    },
          a0_0x137d20 = {
      _0x4f3c59: 0x235b,
      _0x446f6f: 0x185e,
      _0x39acaa: 0x1aab,
      _0x1dce74: 0x2405,
      _0x63d863: 0x1029,
      _0x35d5fe: 0x14d2,
      _0x3161eb: 0x19c5,
      _0x59d145: 0x19c5,
      _0xfde2ba: 0x4fd,
      _0x3cdf09: 0xafb,
      _0xc0c634: 0x14d2,
      _0x504fd5: 0x19c5,
      _0x128fd1: 0x10dc,
      _0x2bd03a: 0x14d2,
      _0x3d640a: 0x1960,
      _0x3ab275: 0x1e0d,
      _0x32e344: 0x13f2
    },
          a0_0x22026e = {
      _0xa35dce: 0x4a3
    },
          a0_0x1ddb16 = {
      _0x14805e: 0x14d2
    },
          a0_0x240a96 = {
      _0x15dfad: 0x2488
    },
          a0_0x1ee0b0 = {
      _0x23e38b: 0x516
    },
          a0_0x1ba60f = {
      _0x21ab2d: 0x2488,
      _0x415a0e: 0xc54
    },
          a0_0x1487c9 = {
      _0x5c4034: 0x1a3
    },
          a0_0x4f0426 = {
      _0x265653: 0x14d2,
      _0x2a4202: 0x1d66
    },
          a0_0xec89fd = {
      _0x20090b: 0x253d,
      _0xf7e0ba: 0x59d,
      _0x21257d: 0x242c,
      _0x5a2524: 0x14d2,
      _0x5bd564: 0x1a5
    },
          a0_0xdb38af = {
      _0x1d98e7: 0x535,
      _0x308ae1: 0x253d,
      _0x3a459d: 0x535,
      _0x51305c: 0xf86,
      _0x5d308f: 0x122d
    },
          a0_0xd1b2d4 = {
      _0x5dc593: 0x14d2,
      _0x4673e6: 0x19c5,
      _0x522574: 0x19c5,
      _0x21ebcd: 0x535,
      _0x81dd49: 0x4bf,
      _0x1ecb5a: 0x535,
      _0x5e6f64: 0x1985,
      _0xc430ca: 0x1372,
      _0x356155: 0x1d2,
      _0x32b413: 0x1d2,
      _0x3c0d81: 0x19c5,
      _0x46343a: 0x14d2,
      _0x48060f: 0xc96,
      _0x46daf2: 0x19c5,
      _0x5d222c: 0x2592,
      _0x3138f1: 0x10b5,
      _0x14446c: 0x20a4,
      _0x2c1471: 0x1246,
      _0x177137: 0x262,
      _0x538fc5: 0x1577,
      _0x3bb4e0: 0x1208,
      _0x33de7f: 0x98d,
      _0x6ba392: 0x21d7,
      _0x356f19: 0xf6f,
      _0x112f79: 0x1660,
      _0xce22f5: 0x2668,
      _0x38a6ac: 0xf18,
      _0x41f3dc: 0xeeb,
      _0x1220a3: 0x19ae,
      _0x14193d: 0x16a7,
      _0x321af6: 0x1f01,
      _0x1f8cc0: 0xa3d,
      _0x133330: 0x21e9,
      _0x264e45: 0xcc4,
      _0x51944e: 0x2041,
      _0x25652e: 0x2194,
      _0x29d32e: 0x202d,
      _0x882076: 0x1628,
      _0x48319b: 0x17c3,
      _0x1b2032: 0x9f9,
      _0x37374d: 0x17aa,
      _0x550412: 0xc97,
      _0x5f0cd4: 0x9c0,
      _0x46981c: 0x9be,
      _0x2eb8a6: 0x18a6,
      _0x5a4488: 0x1e86,
      _0x586dca: 0x10a7,
      _0x36a36d: 0x19c5,
      _0x1d8565: 0x121d
    },
          a0_0x574c69 = {
      _0x53a427: 0x189a,
      _0x4315f0: 0xd81,
      _0x35f4e5: 0x535,
      _0x47fd9d: 0xf6b,
      _0x2f197e: 0x1f15,
      _0x5e8bf4: 0x1d66,
      _0x162c54: 0xe1b,
      _0x2dbc01: 0x1fcb,
      _0x1e9169: 0x1937,
      _0x330b24: 0xf2f,
      _0x373a3f: 0x2530,
      _0x483b70: 0x638,
      _0x24bca1: 0x13ef,
      _0x425530: 0x535,
      _0x4668c3: 0x1985,
      _0x2a5da0: 0x230b
    },
          a0_0x3f37f4 = {
      _0x27fe4c: 0xf6b,
      _0x58d6d8: 0x1f15,
      _0x3c8167: 0x24d7,
      _0x1e8909: 0x17d,
      _0x2e3473: 0x814,
      _0x4598bb: 0x6e2,
      _0x15fe20: 0x1edc,
      _0x2e97c8: 0x20a7,
      _0x37ea0a: 0x63d,
      _0x315875: 0x22f4
    },
          a0_0x4e50b5 = {
      _0x3b6d75: 0x8d1,
      _0x391364: 0x535,
      _0x52a949: 0x2034,
      _0x33e4ef: 0xd6d,
      _0x42ef29: 0x1a3
    },
          a0_0x37e7ea = {
      _0x56e8b8: 0xbd0,
      _0x120b75: 0xe1b,
      _0x4730b3: 0xec4,
      _0x245649: 0x1d66,
      _0x3823df: 0xd6d,
      _0xdbf675: 0xc46,
      _0x197fc0: 0xcaa
    },
          a0_0x5e9f5c = {
      _0x5d9135: 0x11f5,
      _0x44ce64: 0x1d66,
      _0x25e73b: 0x535,
      _0x344529: 0x219a,
      _0x5e5179: 0x2488,
      _0x24062d: 0x1a3,
      _0x361d56: 0xcaa,
      _0x177080: 0x112d
    },
          a0_0x5b1436 = {
      _0x281940: 0xf6b,
      _0x1e11c1: 0x927,
      _0x348ec0: 0x2072,
      _0x47199d: 0xd79,
      _0x3493df: 0x1da5,
      _0x567c71: 0x2667,
      _0x55169d: 0xbc8,
      _0x1fd931: 0x535,
      _0x46aa93: 0x2140,
      _0x4908d0: 0x1a1e,
      _0x48db41: 0x535
    },
          a0_0x453e28 = {
      _0x2f0d01: 0x1d66,
      _0xdb99ed: 0xe1b,
      _0x1a6b99: 0xf73,
      _0x41483f: 0x1793,
      _0x5df94f: 0x1cad,
      _0x1f86a2: 0x1f30,
      _0x421410: 0x1f30,
      _0x35549c: 0x7fe,
      _0x28f594: 0x535,
      _0x17c111: 0x1985,
      _0x457632: 0x11f0,
      _0x2604ac: 0x629
    },
          a0_0x12de59 = {
      _0x229fe6: 0x220f,
      _0x41f39a: 0x305,
      _0x10a31b: 0xbff,
      _0x310cc7: 0x163f,
      _0xb40971: 0x220f
    },
          a0_0x1573e1 = {
      _0x1fe7f8: 0x535,
      _0x1289e8: 0x185e,
      _0xb76b0b: 0xf58,
      _0x470463: 0x21cc,
      _0x1b6a09: 0x1366,
      _0x40aeb1: 0x235b,
      _0x308214: 0x13b4,
      _0xd4435d: 0x1f30,
      _0xe8343: 0x185e,
      _0x12ebbb: 0x2530
    },
          a0_0x2039fe = {
      _0xde5a00: 0x1da5,
      _0x51472e: 0x2492,
      _0x381809: 0x1a5,
      _0x242916: 0xd9b,
      _0x47d755: 0x814,
      _0x3f0546: 0x2115,
      _0x1ba1f6: 0x265d,
      _0x30194b: 0x2115,
      _0x2d00ac: 0xc46,
      _0x1ce771: 0x265d
    },
          a0_0x31c790 = {
      _0x295efc: 0x535,
      _0x585966: 0x1a07,
      _0x5c2b04: 0x24d7,
      _0x10c7e6: 0x14a5,
      _0x1011a2: 0x14a5,
      _0x1a1bbe: 0x9b1,
      _0x58d829: 0x1934,
      _0x42781c: 0xf8c,
      _0x177b22: 0x545,
      _0x596bf1: 0x1da5,
      _0x26f02e: 0x112d
    },
          a0_0x15a1b4 = {
      _0x4f5dba: 0x265d,
      _0x2535b0: 0x1c66,
      _0x44e7ac: 0x25df,
      _0x15e9aa: 0x535,
      _0x330657: 0x1870,
      _0x5a50a8: 0x14d2,
      _0x1adea5: 0x2667,
      _0x255493: 0x1870,
      _0x8d87eb: 0x1a2c,
      _0x499ec9: 0x535,
      _0x14d588: 0x1358,
      _0x4f5859: 0x1b43,
      _0x376420: 0xa26,
      _0x415da6: 0x1f30,
      _0x5e9ad6: 0x1be0,
      _0x41ce37: 0x9f3,
      _0x3db534: 0x222f,
      _0x569a2d: 0x1289,
      _0x2e3334: 0x2499,
      _0x190321: 0x535,
      _0x4e5064: 0x1b37,
      _0x3752fd: 0x3b1,
      _0x26e36f: 0x535,
      _0x178493: 0x2422,
      _0x23ef66: 0x7fe,
      _0x45eb26: 0x1277,
      _0x51fe2d: 0x2521,
      _0x1b9190: 0x1f30,
      _0x516b44: 0x1f30,
      _0x22d378: 0x535,
      _0x2e52a5: 0x880,
      _0x5596ea: 0x1199,
      _0x5759a: 0x1d66,
      _0x33ad80: 0x2072,
      _0x54b299: 0xd79
    },
          a0_0x1f6117 = {
      _0x2d2334: 0x9c5,
      _0x4ef189: 0x535,
      _0x6a860b: 0xabf,
      _0x3e057f: 0x2385,
      _0x5ed19a: 0x8d5,
      _0x5e1f4e: 0x2385
    },
          a0_0x409fb5 = {
      _0x417dfc: 0xe6d,
      _0x446796: 0x14d2,
      _0x48841d: 0x19c5,
      _0x579d83: 0x19c5,
      _0x2db529: 0x603,
      _0x3d8b11: 0x14d2,
      _0x155587: 0x560,
      _0x52a76b: 0x19c5,
      _0x2cebb3: 0xeee,
      _0x143ae8: 0x14d2,
      _0x34c5cd: 0x343,
      _0x469d72: 0x620,
      _0x35cd19: 0x19c5,
      _0x547d68: 0x19c5,
      _0x6adaaf: 0x10c2,
      _0xcf6578: 0x19c5,
      _0x2eadd3: 0x14d2,
      _0x3d8c38: 0x4f3,
      _0x868ec3: 0x19c5,
      _0x5d316d: 0x261e,
      _0x35e032: 0x14d2,
      _0x355ad6: 0x2408,
      _0x3e0d99: 0x15f,
      _0x7521ae: 0x14d2,
      _0x2d68e8: 0x20d3,
      _0x21083b: 0x458,
      _0x1357b6: 0x19c5,
      _0x1cbc10: 0x2351,
      _0x490885: 0x470,
      _0x4909af: 0x2187,
      _0x8453a8: 0x18df,
      _0xcc9cc8: 0x1b13,
      _0x559b3a: 0x19c5,
      _0x1ef26e: 0x1831,
      _0x567345: 0x224d,
      _0x250343: 0x19c5,
      _0xcffa5c: 0x1a2f,
      _0x14fa47: 0x14d2,
      _0x4b0e65: 0x2306
    },
          a0_0xb917ed = {
      _0x35f5a2: 0x14d2
    },
          a0_0x15ad05 = {
      _0x16d1ea: 0x1a3
    },
          a0_0x32c1a4 = {
      _0x243d3b: 0x1f37
    },
          a0_0x4833d4 = {
      _0x291aba: 0x2488,
      _0x4e36f1: 0x63b
    },
          a0_0x219bc5 = {
      _0x58e70a: 0x14d2,
      _0x279577: 0x1da5,
      _0x5374d1: 0xd82
    },
          a0_0x58c9e6 = {
      _0xcef716: 0x14d2
    },
          a0_0x5c6683 = {
      _0x7d24a9: 0x1a3,
      _0xd29e59: 0x2517,
      _0x378f2b: 0x112d
    },
          a0_0x197524 = {
      _0x2e01dd: 0x14d2,
      _0x431dbf: 0x1da5,
      _0x5ee932: 0x25de
    },
          a0_0x4cb0b1 = {
      _0x362c63: 0x2488,
      _0x51748b: 0x1a3
    },
          a0_0x2b5645 = {
      _0x1474f5: 0x14d2,
      _0x5a1e11: 0x1da5
    },
          a0_0x208433 = {
      _0x4fce2f: 0x980,
      _0x4d77f7: 0x535,
      _0x2663f6: 0x13b0,
      _0x5163ba: 0x1da5,
      _0x21daa7: 0x174
    },
          a0_0x3ef523 = {
      _0x49a09a: 0x1da5
    },
          a0_0x4e9d42 = {
      _0x2766a2: 0x2488,
      _0x458221: 0x1a3,
      _0x4224be: 0x4a3,
      _0x2220b1: 0x535,
      _0x24f55a: 0x52c
    },
          a0_0x5d8be = {
      _0x442b88: 0x242c,
      _0xb5c287: 0x2488,
      _0x342e84: 0x980,
      _0x47dc12: 0x535,
      _0x4a9fb1: 0x11d9,
      _0x1a7080: 0x4a3,
      _0x3817cc: 0x980,
      _0x531994: 0x535,
      _0xced1f5: 0x52c
    },
          a0_0x165bfc = {
      _0x554be6: 0x235b,
      _0x4b5395: 0x19c5,
      _0x31c4f2: 0xb43
    },
          a0_0x2497f4 = {
      _0x533823: 0x1182
    },
          a0_0x332cdc = {
      _0x4b68b2: 0x88b,
      _0x5d99b7: 0x14d2,
      _0x5ebceb: 0x17a5,
      _0xdae017: 0x266c,
      _0x769b8e: 0x1a71,
      _0x4588a3: 0x1a5,
      _0x59216f: 0x14d2,
      _0xcc5dfb: 0x1385,
      _0x33b3ad: 0x536,
      _0x2fcddb: 0x14d2,
      _0x490bf4: 0x4fb,
      _0x4e3d61: 0x1ca0,
      _0x460474: 0x14d2,
      _0xa4395c: 0x1a5,
      _0x169e62: 0x22f5,
      _0x213a87: 0x748,
      _0x477bef: 0x1a5,
      _0x4aa5b6: 0x1718,
      _0x23cfe1: 0x23b5
    },
          a0_0x136ef7 = {
      _0x193db9: 0x185e,
      _0x2b16a4: 0x19c5,
      _0xb3f1ce: 0x1c4a,
      _0x3ee5d5: 0x1017
    },
          a0_0x1ea29f = {
      _0x5c4d84: 0x4a3
    },
          a0_0x153de8 = {
      _0x3b116e: 0x1aaa,
      _0x15c8a3: 0x2488,
      _0x4f445e: 0x1aaa
    },
          a0_0x2287a2 = {
      _0x3b49ae: 0x235b,
      _0x190d6b: 0x185e,
      _0x5ba0f9: 0x14d2,
      _0x159ec9: 0x1309,
      _0x181366: 0x14d2,
      _0xedb283: 0x19c5,
      _0x333541: 0x19c5,
      _0x5196a4: 0x18a8,
      _0x587081: 0x14d2,
      _0x4f27f6: 0x19c5,
      _0x5cba6f: 0x257e,
      _0x1a6fe0: 0x14d2,
      _0x1103d2: 0x1385,
      _0x140909: 0x1ebf,
      _0x57a699: 0x8cf,
      _0xac070d: 0x204f,
      _0xb670f7: 0x14d2
    },
          a0_0x3b2099 = {
      _0x1b4349: 0x240,
      _0x3774a2: 0x14d2,
      _0x3166d7: 0x128f
    },
          a0_0x39d8a5 = {
      _0xb6e310: 0x535,
      _0x4530a3: 0x1f2
    },
          a0_0x40b641 = {
      _0x212378: 0x185e,
      _0x38b535: 0x19c5,
      _0x3e83f1: 0x699,
      _0x213e72: 0x1242,
      _0x2c2542: 0x14d2,
      _0x4337d3: 0x19c5,
      _0x1ec364: 0x1795,
      _0x4926b5: 0x19c5,
      _0x573649: 0x218a,
      _0x3cb697: 0x19c5,
      _0x3f3a5e: 0x1bec,
      _0x5d0857: 0x14d2,
      _0x59e2a5: 0x7a3,
      _0x3664ab: 0x19c5,
      _0x18d8f6: 0x8cb
    },
          a0_0x56fc2e = {
      _0x5b93ac: 0x14d2,
      _0x27be70: 0x1bf4
    },
          a0_0x5f1601 = {
      _0x3d18e7: 0x14d2,
      _0xeaa8e7: 0x1da5
    },
          a0_0x2c52f3 = {
      _0x17114a: 0x116f
    },
          a0_0x55f0c3 = {
      _0x454555: 0x1934,
      _0x39405d: 0x2488,
      _0x1079e0: 0x1671,
      _0xef9d95: 0x2e8,
      _0x4533c7: 0x1a07,
      _0x2d2727: 0xfc9,
      _0x14e8f6: 0x1934
    },
          a0_0x5814fd = {
      _0x8529b2: 0x14d2,
      _0x4aa73e: 0x1da5
    },
          a0_0x348f11 = {
      _0x4c62b0: 0x13b0,
      _0x1bbb14: 0x2488,
      _0x4c9fd4: 0x116f
    },
          a0_0x3f45b6 = {
      _0x54603e: 0x235b,
      _0x894b6e: 0x185e,
      _0x5f1ae8: 0x19c5,
      _0x7a0f4: 0x14d2,
      _0x323144: 0x1808,
      _0x403e1a: 0x14d2,
      _0x418a86: 0x19c5,
      _0x1d3745: 0x14d2,
      _0x2153c0: 0x19c5,
      _0x1cf3b6: 0x19c5,
      _0x3f5762: 0x14d2,
      _0x3afdba: 0x20b6,
      _0x27b580: 0x74a,
      _0x573b20: 0x3f1,
      _0x3a355d: 0x14d2,
      _0x134c47: 0x19c5,
      _0x25d9c0: 0x720,
      _0x3515ce: 0x14d2,
      _0x2879fe: 0x1e8a,
      _0x12c06d: 0x170,
      _0x1595f3: 0x1c96,
      _0x16b6d5: 0x14d2,
      _0x407d5b: 0x4cf,
      _0x5aa909: 0x14d2,
      _0x40f2a7: 0x19c5,
      _0x402fec: 0x14d2,
      _0x1337c7: 0x19c5,
      _0x3fa10e: 0x485,
      _0x18d8e2: 0x19c5,
      _0x20ffdf: 0x19c5,
      _0x3c03e1: 0x157c
    },
          a0_0x106c01 = {
      _0x31bdb6: 0x2488,
      _0x5ad2fa: 0x1a3
    },
          a0_0x2af569 = {
      _0x40d97e: 0x14d2,
      _0xce683c: 0x1da5
    },
          a0_0x39e66d = {
      _0x7f07cd: 0x2488,
      _0x243d91: 0x2688
    },
          a0_0x73b9c5 = {
      _0x1d7b76: 0x1a3,
      _0x212bd1: 0x16ee
    },
          a0_0x304f42 = {
      _0x3ffdba: 0x2488,
      _0x1f4454: 0x1a3,
      _0x1cf2e3: 0x6e7
    },
          a0_0x28183e = {
      _0x1a94cc: 0x404
    },
          a0_0x1cfbab = {
      _0x28d237: 0x1a3,
      _0x3d068b: 0xc95
    },
          a0_0x1fe298 = {
      _0x4d1287: 0x14d2,
      _0x552a16: 0x1da5,
      _0x5007d5: 0x191f
    },
          a0_0x2f43d8 = {
      _0xf5936: 0x2488,
      _0x4815db: 0x1a3
    },
          a0_0x253d90 = {
      _0x5e5298: 0x14d2,
      _0x5bad55: 0x1da5,
      _0x579c28: 0x972
    },
          a0_0x1e93a2 = {
      _0x4247f7: 0x535,
      _0x544bd6: 0x4a3,
      _0x3a4e9f: 0xdbb,
      _0x1d0231: 0xc95
    },
          a0_0x35e8ee = {
      _0x153cc2: 0x1da5
    },
          a0_0x2561d7 = {
      _0x157daf: 0x235b,
      _0x41d46f: 0x1029,
      _0x5a64bb: 0x1808,
      _0x26930e: 0x19c5,
      _0x5418f1: 0x1c6c,
      _0x53632f: 0x3b5,
      _0x33d407: 0x10eb,
      _0x1a034b: 0x14d2,
      _0x1e4d18: 0x19c5,
      _0x593343: 0x14d2,
      _0x1dbec3: 0x2294,
      _0x40fa43: 0x1477,
      _0x21cb82: 0x19c5,
      _0x48b102: 0x1952,
      _0x309bc2: 0x94d,
      _0x34375a: 0x14d2,
      _0xdbda24: 0x199e,
      _0x373629: 0x14d2,
      _0x2f3c9a: 0xf8b,
      _0x648e97: 0x14d2,
      _0x3ca0a2: 0x1dec,
      _0x2940ad: 0x329,
      _0x12fe7b: 0x19c5,
      _0x3ed9e5: 0x14d2,
      _0xce5033: 0x19c5,
      _0x5794aa: 0x22fc,
      _0x18a663: 0x19c5,
      _0xe8e66a: 0x9b2,
      _0x1340ed: 0xdee,
      _0x3bd3b8: 0x14d2,
      _0x259401: 0x19c5,
      _0xb7c890: 0x25ac,
      _0x2cd306: 0x19c5,
      _0x588cfa: 0x2324,
      _0x53cdc8: 0xf77,
      _0x5034d6: 0x1e7,
      _0x4e02df: 0x14d2,
      _0x275a0b: 0x19c5
    },
          a0_0xd15599 = {
      _0x3060d0: 0x14d2,
      _0x1f472d: 0x3b5
    },
          a0_0x427d71 = {
      _0x35bb59: 0x105b,
      _0x45196f: 0x14d2
    },
          a0_0x4dbebd = {
      _0x2c900f: 0x535,
      _0x5d069a: 0x1a07,
      _0x3d70c3: 0xd10,
      _0x19c53b: 0x1934,
      _0x4caaf: 0x14d2,
      _0x4a5306: 0x1a5,
      _0x540594: 0x77d,
      _0x182172: 0xf24,
      _0x253b1b: 0x8c1,
      _0x17ca1d: 0x22af
    },
          a0_0x2b6af0 = {
      _0x391d3d: 0x535,
      _0x2104f5: 0x14d2,
      _0xd7b699: 0x1da5,
      _0xb49ff8: 0x2df
    },
          a0_0x22df77 = {
      _0x26a36f: 0x2488,
      _0x35e543: 0x1a3,
      _0x8f4616: 0x172b
    },
          a0_0x470edf = {
      _0x4a1b47: 0x1870,
      _0x45ecb1: 0x2488
    },
          a0_0x13966f = {
      _0x13e37d: 0x1a07,
      _0x50b5cc: 0x105b,
      _0x534c50: 0x11f7
    },
          a0_0x33c13f = {
      _0x28b49c: 0x535,
      _0x541c0c: 0x1934,
      _0x42f705: 0x14d2,
      _0x739452: 0x1d47,
      _0x97cd93: 0x105b,
      _0x1effb1: 0x11f7
    },
          a0_0x143cf6 = {
      _0x29ef5a: 0x1a07,
      _0x5a1510: 0xd10,
      _0x1d231f: 0x1da5,
      _0x4b8fff: 0x19f,
      _0x148ce8: 0x105b,
      _0x221f34: 0x11f7
    },
          a0_0x29fd87 = {
      _0x56dc8d: 0x91b,
      _0x54bcd7: 0x1a3,
      _0x431c67: 0x2554
    },
          a0_0x3f8824 = {
      _0xe05b56: 0x2488,
      _0x54a81c: 0x4a3,
      _0x39efe4: 0x3c5,
      _0x5b76c6: 0x235b,
      _0x50020b: 0x185e,
      _0x4a5461: 0xc95,
      _0x37c788: 0xb5b,
      _0xe15bac: 0x185e,
      _0x3c28ad: 0x535,
      _0x279495: 0x1de9
    },
          a0_0x527fc8 = {
      _0x35f551: 0x14d2,
      _0xc0c820: 0x1da5,
      _0x335075: 0xe59
    },
          a0_0xe1ae9e = {
      _0x5be14a: 0x2405,
      _0x40cacc: 0xe4c
    },
          a0_0x2de050 = {
      _0x57d886: 0x1f0d,
      _0x1f013a: 0x1f3b,
      _0x3c6540: 0x14d2,
      _0x2dfc34: 0x19c5,
      _0x303586: 0x2320,
      _0x2eccec: 0xd69,
      _0x3dd500: 0x19c5,
      _0x2a65fb: 0x17df,
      _0x9276ac: 0x19c5,
      _0x598fd5: 0x2670,
      _0x5394e4: 0x14d2,
      _0xa2a15e: 0x19c5,
      _0x559bb6: 0x121d,
      _0x408341: 0x4df
    },
          a0_0x3a1806 = {
      _0x8a4883: 0x242c,
      _0xea2d4: 0x937,
      _0x1cf8a7: 0x24fe,
      _0x3f7b8f: 0x1992,
      _0x5b1ead: 0x1d66,
      _0x24869b: 0x24fe,
      _0x749982: 0x1992,
      _0x3e023b: 0x24fe,
      _0x39b489: 0x1992
    },
          a0_0x412ec1 = {
      _0x3a1b20: 0x242c,
      _0x4a346f: 0x937,
      _0x32b9dd: 0x911,
      _0x4f86fb: 0x535,
      _0x1e7548: 0x52c,
      _0x5f4af3: 0x14d2,
      _0x25c9de: 0xa29
    },
          a0_0x33d6d7 = {
      _0x4c83c2: 0x937,
      _0x9883c9: 0x535,
      _0x786464: 0x52c,
      _0x459ebc: 0xeaf,
      _0x358dd4: 0x14d2
    },
          a0_0x4a0ed2 = {
      _0x283fa4: 0x19d2,
      _0x20c8d0: 0x1f8f,
      _0x5ba6e9: 0x1a2c,
      _0x4a3f9a: 0x2488,
      _0xb62fbc: 0xee1
    },
          a0_0x159e4c = {
      _0x663a7d: 0x2488,
      _0x331797: 0x1a3,
      _0x1d07c9: 0x112d,
      _0xa6b009: 0x937,
      _0x3be987: 0x2488
    },
          a0_0x3a94b2 = {
      _0x4d1603: 0x14d2
    },
          a0_0x296cbe = {
      _0x22a544: 0x21e0,
      _0x4567d7: 0x1f8f,
      _0xda7261: 0x2097
    },
          a0_0x23626f = {
      _0x162a87: 0x1f8f,
      _0x5dc4f5: 0x14d2,
      _0x4037c5: 0x1a5,
      _0x3fa4c8: 0xf06
    },
          a0_0x51a495 = {
      _0x264b49: 0x937,
      _0x3df2b4: 0x14d2,
      _0x535e27: 0xefb
    },
          a0_0x5a7461 = {
      _0x158c56: 0x7f1,
      _0x4facf2: 0x1fe9,
      _0x5c84bd: 0x2467,
      _0x4cba57: 0x927,
      _0x159eea: 0x17f,
      _0x5b80a9: 0x535,
      _0xe9659f: 0x235b,
      _0xe4a469: 0x14d2,
      _0x1be93e: 0x7ca,
      _0x17ed81: 0x1a4d,
      _0x1be4ff: 0x1f0d
    },
          a0_0x470a4b = {
      _0x3f7699: 0xe6d,
      _0x550a00: 0x1a2c,
      _0x518c61: 0x22b2,
      _0xbada6c: 0x19c5,
      _0x1c7ee3: 0x1d04,
      _0x24d5c6: 0x14d2,
      _0x27ef90: 0x14d2,
      _0x68bef8: 0x2036,
      _0x448878: 0x14d2,
      _0xf70c4a: 0x204f,
      _0x3a69c4: 0x14d2,
      _0x19b3e6: 0x1e16
    },
          a0_0x47ce9c = {
      _0x437705: 0x14d2,
      _0x372fd5: 0x193a
    },
          a0_0x2f708a = {
      _0x384a5f: 0x1edc,
      _0x3571e2: 0x535,
      _0x53b78c: 0xfba,
      _0x2ad832: 0x1998
    },
          a0_0x86e8e1 = {
      _0x5d09e9: 0x2488,
      _0x37096e: 0x4a3,
      _0x4aaf75: 0x535
    },
          a0_0xc43bc3 = {
      _0x54ac02: 0x9c5,
      _0x3edae7: 0x1daf
    },
          a0_0x2c5f52 = {
      _0x1f7743: 0x1a07,
      _0x53feee: 0x1934,
      _0x1d6999: 0x1da5,
      _0x1c8d33: 0x1014,
      _0x22d60d: 0x535,
      _0x1aceee: 0x9b1
    },
          a0_0x5d5916 = {
      _0x44b354: 0x2488,
      _0x1275cc: 0x1a3
    },
          a0_0x4225bc = {
      _0x38ee6d: 0xe6d
    },
          a0_0x986da8 = {
      _0x4f905: 0x235b,
      _0x143071: 0x185e,
      _0x16eab4: 0x14d2,
      _0x3fddc7: 0x19c5,
      _0x2a7013: 0x19c5,
      _0x5008ce: 0x20af,
      _0x377202: 0xb07,
      _0x56b10f: 0x14d2,
      _0x503dbd: 0x19c5,
      _0x3c1e2e: 0xb28,
      _0x23f634: 0x131f,
      _0x83a0b5: 0x1655,
      _0x443e54: 0x14d2,
      _0x2b827d: 0x19c5,
      _0x3ceda3: 0x19c5,
      _0x74d0c5: 0x775,
      _0x1c9573: 0x19c5,
      _0x1bc4a5: 0x1094,
      _0x38cc50: 0x19c5,
      _0x59e2e8: 0x4e6
    },
          a0_0x45b597 = {
      _0x44b2b9: 0x14d2
    },
          a0_0x2bb639 = {
      _0x4e3a50: 0x2488
    },
          a0_0x3e8b0c = {
      _0x1f9994: 0x2488
    },
          a0_0x392401 = {
      _0x5133a9: 0x14d2,
      _0x1fc065: 0x1da5,
      _0x1a8daa: 0x13aa
    },
          a0_0x4c6523 = {
      _0xcf25d1: 0x2488,
      _0x22b5b0: 0x1a3,
      _0x16e860: 0x1588
    },
          a0_0x2d8686 = {
      _0x27bc63: 0x1dda,
      _0x160d84: 0x1592,
      _0x12b676: 0x14d2
    },
          a0_0x3ead20 = {
      _0x1f79cb: 0x22b2,
      _0x10e6b8: 0x535,
      _0x509f67: 0x19d6,
      _0x54a90e: 0x2488,
      _0x2aac1e: 0x1a3
    },
          a0_0x2e44a3 = {
      _0x4c245b: 0x1da5,
      _0x132232: 0x13aa,
      _0x54c00d: 0x112d
    };

    var _0x20daac,
        _0x2b4c2d,
        _0x19698d = {
      0x158ff: (_0x13f4de, _0x1283c5, _0x24d84b) => {
        'use strict';

        const a0_0x43ce02 = {
          _0x35816c: 0x1da5,
          _0x41bfe3: 0x242c
        },
              a0_0x24c81f = {
          _0x40b40d: 0x14d2,
          _0x52f47a: 0x1da5,
          _0x5f3764: 0x242c
        },
              a0_0x11c9ed = {
          _0x5b4b68: 0x14d2,
          _0x357904: 0x14ee
        },
              a0_0x597d34 = {
          _0x375e37: 0x2488,
          _0x2c4a6c: 0x158a
        },
              a0_0x2041d0 = {
          _0x38e160: 0xc95,
          _0xa01f4: 0x535,
          _0x36dd8b: 0x178c,
          _0x28642b: 0x1dbf,
          _0x1bd8ac: 0xbdc,
          _0x5af700: 0x1da5
        },
              a0_0x35825e = {
          _0x3442e3: 0x2488,
          _0x5f2c49: 0x1a3,
          _0x2abfbb: 0x1109
        },
              a0_0x29166d = {
          _0x37c6e6: 0x1a3
        },
              a0_0x4e4f5d = {
          _0x7c1fee: 0x385,
          _0xfe6840: 0x213a,
          _0x5646ef: 0x19d6,
          _0xed9e52: 0x2488,
          _0x15beb3: 0x1a3,
          _0x234baf: 0x1bd0,
          _0x55644a: 0x14d2,
          _0x197bcb: 0x1da5
        };

        _0x24d84b.r(_0x1283c5);

        var _0x59a38d = _0x24d84b(0x16a21),
            _0xb8f902 = _0x24d84b(0x12a76),
            _0x41c716 = _0x24d84b(0x161cd);

        const _0x4f0e28 = _0x41c716.players.local;
        let _0x458976 = false,
            _0x555e7f = null,
            _0xdb81d5 = null;

        const _0x38e7a0 = () => {
          _0xb8f902.globalBrowser.toggle('adminReport', {
            'value': false
          }), _0x41c716.gui.cursor.visible = false, _0xb8f902.globalBrowser.emit('chat_show', true), _0x458976 = false, _0xdb81d5 && (_0x41c716.events.callRemote('1342667600', JSON.stringify(_0xdb81d5)), _0xdb81d5 = null);
        };{
        }), _0x41c716.events.add('adminReport.getTicketsResult', _0x4022c0 => {
          _0x458976 = false, _0x4022c0 = _0x4022c0.map(_0x1864ee => (_0x1864ee.text = _0x59a38d.api.escapeHtml(_0x1864ee.text), _0x1864ee)), _0xb8f902.globalBrowser.toggle('adminReport', {
            'value': true,
            'tickets': _0x4022c0,
            'isAdmin': !!_0x59a38d.api.isAdmin(_0x4f0e28)
          }), _0x41c716.gui.cursor.visible = true, _0xb8f902.globalBrowser.emit('chat_show', false);
        }), _0x41c716.events.add('adminReport.getTicketMessages', _0x51bc96 => {
          _0x51bc96 = JSON.parse(_0x51bc96), _0x458976 || (_0x458976 = true, _0x51bc96.status = _0x51bc96.ticketStatus, _0xdb81d5 = _0x51bc96, _0x41c716.events.callRemote('1456964258', _0x51bc96.id));
        }), _0x41c716.events.add('adminReport.getTicketMessagesError', () => {
          _0x458976 = false, _0xb8f902.globalBrowser.emit('adminReport_clearTicket');
        }), _0x41c716.events.add('adminReport.setBusy', _0x204ada => {
          _0xb8f902.globalBrowser.emit('adminReport_setBusy', _0x204ada);
        }), _0x41c716.events.add('adminReport.setUnbusy', _0x1b864d => {
          _0xb8f902.globalBrowser.emit('adminReport_setUnbusy', {
            'report': _0x1b864d
          });
        }), _0x41c716.events.add('adminReport.returnReport', () => {
          _0x41c716.events.callRemote('1342667600', JSON.stringify(_0xdb81d5)), _0xdb81d5 = null;
        }), _0x41c716.events.add('adminReport.getTicketMessagesResult', _0x294669 => {
          _0x458976 = false, _0x294669 = _0x294669.map(_0x5788c4 => (_0x5788c4.message = _0x59a38d.api.escapeHtml(_0x5788c4.message), _0x5788c4)), _0xb8f902.globalBrowser.emit('adminReport_getTicketMessagesResult', {
            'answers': _0x294669,
            'report': _0xdb81d5
          });
        }), _0x41c716.events.add('adminReport.close', () => {
          _0x38e7a0();
        }), _0x41c716.events.add('adminReport.answerTicket', (_0x439fd6, _0x16d358, _0x21c143) => {
          _0x555e7f = {
            'ticketId': _0x16d358,
            'accountId': _0x4f0e28.getVariable('id'),
            'message': _0x59a38d.api.escapeHtml(_0x439fd6),
            'login': _0x59a38d.api.getName(_0x4f0e28),
            'logo': 'https://a.rsg.sc/n/' + _0x4f0e28.socialClub.toLowerCase() + '/s'
          }, _0x41c716.events.callRemote('2397538716', _0x439fd6, _0x16d358, _0x21c143);
        }), _0x41c716.events.add('adminReport.answerTicketResult', (_0x5dec55, _0xdcfa09) => {
          _0x458976 = false, _0x555e7f.id = _0x5dec55, _0x555e7f.date = _0xdcfa09, _0xb8f902.globalBrowser.emit('adminReport_answerTicket', {
            'answer': _0x555e7f
          });
        }), _0x41c716.events.add('adminReport.answerTicketReset', () => {
          _0x458976 = false;
        }), _0x41c716.events.add('adminReport.setQueueStatus', (_0x5c813e, _0x5be793) => {
          _0xb8f902.globalBrowser.emit('adminReport_setQueueStatus', {
            'reportId': _0x5c813e,
            'status': _0x5be793
          });
        }), _0x41c716.events.add('adminReport.requestSpectate', _0x107168 => {
          _0x41c716.events.callRemote('52074750', _0x107168);
        }), _0x41c716.events.add('adminReport.requestTeleport', _0x1b15a9 => {
          _0x41c716.events.callRemote('4260569184', _0x1b15a9), _0x24d84b.g.interfaces.adminReport && _0x38e7a0();
        }), _0x41c716.events.add('adminReport.requestTeleportHere', _0x1d6ae0 => {
          _0x41c716.events.callRemote('2827169112', _0x1d6ae0), _0x24d84b.g.interfaces.adminReport && _0x38e7a0();
        }), _0x41c716.events.add('adminReport.checkQueue', (_0x29b3e9, _0x460123, _0x15ef8a) => {
          _0x458976 || (_0x458976 = true, _0x41c716.events.callRemote('2082986615', _0x29b3e9, _0x460123, _0x15ef8a));
        });
      },
      0x13215: (_0x21bd5a, _0x2ee504, _0x1ca1dd) => {
        'use strict';

        const a0_0x255dee = {
          _0x173ac0: 0x193a
        },
              a0_0x5a4c2e = {
          _0x5d46a7: 0x535,
          _0x507414: 0x9c5,
          _0xfee61e: 0xfba
        },
              a0_0x2c4353 = {
          _0x449048: 0x11d9,
          _0x5ed2e8: 0xa69,
          _0x27a03d: 0x13b0,
          _0x11f14b: 0x535,
          _0x2a7c19: 0x535,
          _0x41f859: 0x3e9,
          _0x351cfd: 0x59e
        };

        _0x1ca1dd.r(_0x2ee504);

        var _0x2e96b4 = _0x1ca1dd(0x16a21),
            _0x3a5975 = _0x1ca1dd(0x69a1),
            _0x3802b0 = _0x1ca1dd.n(_0x3a5975),
            _0x29bb04 = _0x1ca1dd(0x13aad),
            _0x46ed1c = _0x1ca1dd.n(_0x29bb04),
            _0x581edc = _0x1ca1dd(0x35cd),
            _0x5997d2 = _0x1ca1dd(0x18bd),
            _0x3bb465 = _0x1ca1dd(0x12a76),
            _0x2193ab = _0x1ca1dd(0x161cd);

        const _0x3d403c = _0x2193ab.players.local,
              _0x304a89 = [0x3c901, 0x25901, 0x21a01, 0x29101, 0x28301, 0x22401, 0x2ba01, 0x2b101, 0x2ae01, 0x31101, 0x2c101];
        let _0x156842 = false,
            _0xc17f3 = false;

        const _0x31d847 = new Set();

        _0x46ed1c().forEach(_0x22dcdd => {
          _0x22dcdd.items.forEach(_0x2176d0 => {
            _0x31d847.add(_0x2176d0);
          });
        });

        const _0x1afaf0 = _0x581edc.Z.filter(_0x100c3b => _0x31d847.has(_0x100c3b.id)).map(_0x10116c => ({
          'itemId': _0x10116c.id,
          'title': _0x10116c.title,
          'width': _0x10116c.width,
          'height': _0x10116c.height,
          'caliber': _0x10116c.caliber,
          'clip': _0x10116c.clip,
          'description': _0x10116c.description,
          'weight': _0x10116c.weight,
          'tintsCount': _0x5997d2.f[_0x10116c.id] && _0x2193ab.game.weapon.getWeaponTintCount(_0x2193ab.game.joaat(_0x5997d2.f[_0x10116c.id]) >> 0x0) || 0x0
        }));

        let _0x2098f6;

        _0x2193ab.events.add('vue.mounted', () => {
          _0x3bb465.globalBrowser.emit('ammo_preinit', {
            'shopConfig': _0x46ed1c(),
            'items': _0x1afaf0,
            'priceConfig': _0x3802b0().ammo_shops
          });
        }), _0x2193ab.events.add('ammo.init', (_0x2a8c3a, _0x2b930c) => {
          _0x1ca1dd.g.currentInterface || (_0xc17f3 = true, _0x3bb465.globalBrowser.toggle('ammo', {
            'value': true,
            'warehouse': _0x2a8c3a,
            'prices': _0x2b930c
          }), _0x2e96b4.api.toggleHud(false), _0x2e96b4.api.toggleChat(false), _0x2e96b4.api.setDiscordStatus('ammoshop'));
        }), _0x2193ab.events.add('ammo.buy', (_0x361f6d, _0x339694, _0x38a753) => {
          if (_0x156842) return _0x2e96b4.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          'bank' !== _0x339694 || _0x3d403c.bank && _0x3d403c.bank.id ? (_0x361f6d = JSON.parse(_0x361f6d), _0x156842 = true, _0x2193ab.events.callRemote('4198636701', _0x361f6d.itemId, _0x339694, _0x38a753 || 0x0)) : _0x2e96b4.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
        }), _0x2193ab.events.add('ammo.buySuccess', () => {
          _0x156842 = false, _0x2e96b4.api.playPedSpeech(_0x2e96b4.api.getNearestPed(0x32).id, 'SHOP_SELL', 'AMMUCITY', 'SPEECH_PARAMS_FORCE_SHOUTED');
        }), _0x2193ab.events.add('ammo.buyError', () => {
          _0x156842 = false;
        }), _0x2193ab.events.add('ammo.exit', () => {
          _0x156842 = false, _0xc17f3 = false, _0x3bb465.globalBrowser.toggle('ammo', {
            'value': false
          }), _0x2e96b4.api.toggleHud(true), _0x2e96b4.api.toggleChat(true), _0x3bb465.globalBrowser.emit('toggle_bankCard', {
            'value': false
          });
        }), _0x2193ab.events.add('playerEnterInterior', _0x1d4a9d => {
          _0x304a89.includes(_0x1d4a9d) && _0x2e96b4.api.playPedSpeech(_0x2e96b4.api.getNearestPed(0x96).id, 'SHOP_GREET', 'AMMUCITY', 'SPEECH_PARAMS_FORCE_SHOUTED'), _0x2098f6 = _0x1d4a9d;
        }), _0x2193ab.events.add('playerExitInterior', _0x5add5c => {
          _0x304a89.includes(_0x2098f6) && (_0x2e96b4.api.playPedSpeech(_0x2e96b4.api.getNearestPed(0x96).id, 'SHOP_GOODBYE', 'AMMUCITY', 'SPEECH_PARAMS_FORCE_SHOUTED'), _0x156842 = false), _0x2098f6 = _0x5add5c;
        }), _0x2193ab.events.add('playerDeath2', _0x5de61e => {
          _0xc17f3 && _0x5de61e === _0x3d403c && _0x2193ab.events.call('ammo.exit');
        }), _0x2193ab.events.add('npc.exitShape', () => {
          _0xc17f3 && _0x2193ab.events.call('ammo.exit');
        });
      },
      0x11178: (_0x4f5f71, _0x425d3d, _0x443231) => {
        'use strict';

        const a0_0x5aab20 = {
          _0x1d5836: 0x7f1,
          _0x19f223: 0x1fe9,
          _0x586fb3: 0x7f1,
          _0x15af2a: 0x2467,
          _0x3d77e0: 0x927,
          _0x244422: 0x10e6,
          _0x40209a: 0x1fe9,
          _0x4ba6fc: 0x2467,
          _0x42dde2: 0x1c9c,
          _0x229144: 0x1fe9,
          _0x2c9d30: 0x207b,
          _0x465cd7: 0x1ae2,
          _0x51d24d: 0x1d2,
          _0x57f5c3: 0x1d2,
          _0x4e9d4f: 0x1fe9,
          _0x268c17: 0x7f1,
          _0x139b99: 0x14fd,
          _0x2a5703: 0x17f,
          _0x4f738c: 0x19d2,
          _0x55e953: 0x1c2c,
          _0x3c74c1: 0x535,
          _0x286d44: 0x10b4,
          _0x539e3c: 0x13fe,
          _0x1c7025: 0xffb,
          _0x44ef70: 0x1fe9,
          _0x2034b7: 0x1fe9,
          _0x2abc07: 0x7f1,
          _0x4f4ec2: 0x7f1,
          _0x42ee51: 0x7f1,
          _0x186b82: 0x14fd,
          _0x1bda42: 0x2236,
          _0x45fd57: 0x19d2
        },
              a0_0x500dcb = {
          _0x55857d: 0x535,
          _0x1f8365: 0x242c,
          _0x5cf949: 0x279,
          _0x24001f: 0x1b17,
          _0x48d469: 0x213a,
          _0x5c40fc: 0x19d6,
          _0x5b0832: 0x235b,
          _0x21a28f: 0xc95,
          _0x55e24f: 0xc52,
          _0x54aa78: 0xc49,
          _0x418d6a: 0x146b,
          _0x23599b: 0x183f,
          _0x10ad73: 0x11d9,
          _0x598bb3: 0x185e,
          _0x35eb3d: 0xfa6,
          _0x16f649: 0x1d66,
          _0x41b27f: 0x15e0,
          _0x156ced: 0xf63,
          _0x3c21fb: 0x2488,
          _0xe7f026: 0x2cc,
          _0x2938df: 0x213a,
          _0x322400: 0x830,
          _0x1ab6d8: 0x937
        },
              a0_0x36e4d7 = {
          _0x3ce1f9: 0x1f8f,
          _0xa49345: 0x22b2,
          _0x116b93: 0x2488,
          _0x4413d0: 0x1a3,
          _0x1d730d: 0x13ab
        },
              a0_0x20d660 = {
          _0x1e687a: 0x1edc,
          _0x3f1c45: 0x14d2,
          _0x36c02d: 0x1a5,
          _0xdd459e: 0x1f3b,
          _0x4bc345: 0x628,
          _0x2f1814: 0x9c8,
          _0x59e514: 0x235b,
          _0x16d0a5: 0x1a5,
          _0x4e8979: 0x1f3b,
          _0x155aee: 0x1d66,
          _0x1e3406: 0x1992,
          _0x5be151: 0x24fe,
          _0x2d4f89: 0x1992,
          _0x43938e: 0xffb,
          _0x511e18: 0x1293,
          _0x2ed303: 0x535,
          _0x3a73c7: 0x1ec5,
          _0x249b68: 0x1da5,
          _0x401b68: 0x1ed5,
          _0x5d1da6: 0x927,
          _0x5aace7: 0x1fe9,
          _0x3d47a1: 0x19d2,
          _0x1b2913: 0x535,
          _0x1a8f35: 0x1b65
        },
              a0_0x43b6b2 = {
          _0x58909b: 0x937
        },
              a0_0xcb05de = {
          _0x3fa48b: 0x902,
          _0xda7fc9: 0x1da5,
          _0x39d42b: 0x10d8
        },
              a0_0x455b6c = {
          _0x29a1ef: 0x385
        },
              a0_0x2ec7ec = {
          _0x4c025e: 0x535,
          _0x12d4de: 0xffb,
          _0x1962b9: 0x918,
          _0xb80d59: 0x1da5,
          _0x2d9fd2: 0x1ddd,
          _0x439425: 0x1de9,
          _0x19c0c4: 0x13fe,
          _0x38eac1: 0x10b4,
          _0x40983f: 0x1c9c
        };
        _0x443231.r(_0x425d3d), _0x443231.d(_0x425d3d, {
          'exclusiveAnimations': () => _0x1e855f
        });

        var _0x32f851 = _0x443231(0x16a21),
            _0x244192 = _0x443231(0xe694),
            _0x86b04b = _0x443231.n(_0x244192),
            _0x595ce8 = _0x443231(0x16a7d),
            _0x4c1eb3 = _0x443231(0x12a76),
            _0x45d378 = (_0x443231(0x66f9), _0x443231(0x1249d)),
            _0x526f88 = _0x443231(0x704e),
            _0x256a20 = _0x443231(0x161cd);

        const _0x26c4c7 = _0x256a20.players.local,
              _0x21de59 = [0x16, 0x18, 0x19, 0x20, 0x21, 0x22, 0x23, 0x45, 0x46, 0x5c, 0x72, 0x101, 0x14b],
              _0x1e855f = _0x86b04b().find(_0x204198 => 'exclusive' == _0x204198.path) || {};

        let _0xb5c53f,
            _0x4c4ecb,
            _0x3d06f1 = false,
            _0x5c9714 = 0x0,
            _0x194bbf = 0x0,
            _0x28b40e = {},
            _0x160bcb = 0x0,
            _0x112e53 = [],
            _0x289edc = 0x0;

        _0x443231.g.isUsingTABAnim = false;
        let _0x12caa1 = {
          'favourite': false,
          'circle': false
        };
        _0x256a20.events.add('animations.play', async (_0x4028a8, _0x32c733) => {
          if (!_0x32f851.api.canUseAnim()) return;

          const _0x5d79a6 = 'exclusive' === _0x32c733 ? 0x7d0 : 0x1f4;

          if (Date.now() - _0x5c9714 < 0x0) return;
          _0x5c9714 = Date.now() + _0x5d79a6;

          const _0x259eda = _0x86b04b().find(_0x4c986e => _0x4c986e.path === _0x32c733);

          if (!_0x259eda) return;
          const _0x440f8d = _0x259eda.items[_0x4028a8];
          _0x440f8d && ('exclusive' === _0x32c733 ? _0x256a20.events.callRemote('3216955401', _0x4028a8) : (_0x443231.g.isUsingTABAnim = true, _0x289edc = _0x440f8d.flag, await _0x32f851.api.taskPlayAnim(_0x440f8d.animData[0x0], _0x440f8d.animData[0x1], _0x440f8d.flag, _0x440f8d.looped, false)));
        }), _0x256a20.events.add('animations.stop', (_0x27ff0f = false, _0x4f99c3 = false) => {
          if (_0x526f88.localAnimSound.entity && !_0x526f88.localAnimSound.entity.isStopped && _0x526f88.AnimSounds2D.stop(_0x526f88.localAnimSound.entity.id), _0x112e53.length) {
            for (const _0x2d62f5 of _0x112e53) _0x2d62f5.destroy();

            _0x112e53 = [];
          }

          if (true !== _0x32f851.api.getLocalVariable('clothesWearEffects') && !_0x256a20.players.local.getVariable('fun.minigames.playing')) {
            if (!_0x27ff0f) {
              if (!_0x32f851.api.canUseAnim()) return;
              if (_0x32f851.api.ePress(_0x194bbf, 0xfa)) return;
              _0x194bbf = _0x32f851.api.ePressUpdate(0xfa);
            }

            _0x4f99c3 ? _0x256a20.events.callRemote('1834990008') : _0x32f851.api.stopAnim(), _0x3d06f1 && (_0x3d06f1.cancel(), _0x3d06f1 = undefined), _0x443231.g.isUsingTABAnim = false;
          }
        }), _0x256a20.events.add('animations.close', () => {
          _0x4c1eb3.globalBrowser.toggle('panelMenu', {
            'value': false,
            'roundMenu': false
          }), _0xb5c53f = undefined, _0x32f851.api.toggleChat(true), _0x256a20.gui.cursor.show(false, false);
        }), _0x256a20.events.add('animations.toggleFavourite', (_0x528de4, _0x42bb54) => {
          if (_0x12caa1.favourite) return;

          const _0x25917f = _0x86b04b().find(_0x34887f => _0x34887f.path === _0x42bb54);

          if (!_0x25917f) return;
          _0x25917f.items[_0x528de4] && (_0x12caa1.favourite = true, _0x256a20.events.callRemote('744928331', _0x528de4, _0x42bb54));
        }), _0x256a20.events.add('animations.favouriteResult', () => {
          _0x12caa1.favourite = false;
        }), _0x256a20.events.add('animations.deleteCircular', _0x304404 => {
          _0x12caa1.circle || (_0x12caa1.circle = true, _0x256a20.events.callRemote('1812091021', _0x304404));
        }), _0x256a20.events.add('animations.selectCirclePlayAnim', _0x112e1a => {
          const _0x1c98f8 = _0x28b40e.circle[_0x112e1a];
          if (!_0x1c98f8) return;

          const _0x2909e3 = _0x86b04b().find(_0x4a7a81 => _0x4a7a81.path === _0x1c98f8.animPath);

          if (!_0x2909e3) return;
          _0x2909e3.items[_0x1c98f8.animIndex] && _0x256a20.events.call('animations.play', _0x1c98f8.animIndex, _0x1c98f8.animPath);
        }), _0x256a20.events.add('animations.setCircleAnim', (_0x2ffd1d, _0x512597, _0x5a15d3) => {
          if (_0x12caa1.circle) return;

          const _0x3f28a2 = _0x86b04b().find(_0x5e3768 => _0x5e3768.path === _0x5a15d3);

          if (!_0x3f28a2) return;
          _0x3f28a2.items[_0x512597] && (_0x12caa1.circle = true, _0x256a20.events.callRemote('1993613975', _0x2ffd1d, _0x512597, _0x5a15d3));
        }), _0x256a20.events.add('animations.circleResult', () => {
          _0x12caa1.circle = false;
        }), _0x256a20.events.add('keys.backspace', () => {
          _0x443231.g.isUsingTABAnim && _0x256a20.events.call('animations.stop');
        }), _0x256a20.events.add('render', () => {
          if (_0x443231.g.isUsingTABAnim) {
            if ([0x0, 0x1].includes(_0x289edc)) {
              for (const _0x3bc8c7 of _0x21de59) if (_0x256a20.game.controls.isControlJustPressed(0x0, _0x3bc8c7)) {
                _0x256a20.events.call('animations.stop', true);

                break;
              }
            } else (_0x256a20.game.player.isFreeAiming() || _0x256a20.players.local.isShooting()) && _0x256a20.events.call('animations.stop', true);

            0x21 == _0x289edc && (_0x256a20.game.controls.disableControlAction(0x0, 0x15, true), _0x256a20.game.controls.disableControlAction(0x0, 0x16, true), _0x256a20.game.controls.disableControlAction(0x0, 0x18, true), _0x256a20.game.controls.disableControlAction(0x0, 0x19, true));
          }

          if (_0x4c4ecb && _0x160bcb - Date.now() < 0x0 && (!_0x256a20.players.local.isPlayingAnim(_0x4c4ecb.animDict, _0x4c4ecb.animName, 0x3) || _0x32f851.api.isDead() || !_0x32f851.api.canUseAnim())) {
            if (_0x256a20.events.callRemote('1925836604'), _0x4c4ecb = null, _0x526f88.localAnimSound.entity && !_0x526f88.localAnimSound.entity.isStopped && _0x526f88.AnimSounds2D.stop(_0x526f88.localAnimSound.entity.id), _0x112e53.length) {
              for (const _0x25b69b of _0x112e53) _0x25b69b.destroy();

              _0x112e53 = [];
            }

            0x21 != _0x289edc && 0x20 != _0x289edc || _0x32f851.api.stopAnim();
          }
        }), _0x256a20.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x86b04b().forEach(_0x4c3a6d => {
            ({ ..._0x4c3a6d
            }).items = _0x4c3a6d.items.map(_0x3490ec => ({
              'title': _0x3490ec.title
            })), _0x4c1eb3.globalBrowser.emit('panelMenu_animations_updateListByCategory', {
              'path': _0x4c3a6d.path,
              'items': _0x4c3a6d.items
            });
          });
        }), _0x256a20.events.add('animations.updateSaved', _0x2043d8 => {
          const a0_0x1440f3 = {
            _0x4e9486: 0x11dc,
            _0x376666: 0xc65,
            _0x66578b: 0x1d2,
            _0x98d00d: 0xf06
          };

          if (_0x28b40e = _0x2043d8, _0x2043d8.favourite) {
            let _0x481123 = {};
            _0x2043d8.favourite.forEach(_0x17ae11 => {
              'object' == typeof _0x17ae11 && _0x17ae11.animPath && (_0x481123[_0x17ae11.animPath] || (_0x481123[_0x17ae11.animPath] = []), _0x481123[_0x17ae11.animPath].push(_0x17ae11.animIndex));
            }), _0x4c1eb3.globalBrowser.emit('panelMenu_animations_setFavourite', JSON.stringify(_0x481123));
          }

          if (_0x2043d8.circle) {
            for (let _0x142cb3 = 0x0; _0x142cb3 < 0x8; _0x142cb3++) _0x2043d8.circle[_0x142cb3] || (_0x2043d8.circle[_0x142cb3] = null);

            _0x4c1eb3.globalBrowser.emit('panelMenu_animations_setCircle', JSON.stringify(_0x2043d8.circle));
          }
        }), _0x256a20.events.add('animations.updatePurchased', _0x1b749c => {
          if (_0x1b749c && _0x1b749c.length) {
            const _0x26c66b = _0x1e855f.items.filter((_0x20d104, _0x1eba22) => _0x1b749c.includes(_0x1eba22));

            _0x4c1eb3.globalBrowser.emit('panelMenu_animations_updateExclusives', _0x26c66b);
          }
        }), _0x256a20.keys.bind(_0x595ce8.t.X, true, () => {
          !_0x32f851.api.isAuthed() || _0x443231.g.interfaces.chat || _0x26c4c7.isDead() || _0x26c4c7.isFalling() || _0x26c4c7.isSwimming() || _0x256a20.game.player.isFreeAiming() || _0x256a20.gui.cursor.visible || _0x256a20.players.local.getVariable('fun.minigames.playing') || _0x443231.g.piano || _0x443231.g.playableInstrument || _0x256a20.players.local.isInAnyVehicle(true) || _0x443231.g.currentInterface || _0x256a20.players.local.getVariable('playerInTrunk') || _0x32f851.api.isUsingSystemAnim() || _0x256a20.game.streaming.isPlayerSwitchInProgress() || _0xb5c53f || (_0x32f851.api.toggleChat(false), _0x4c1eb3.globalBrowser.toggle('panelMenu', {
            'value': true,
            'roundMenu': true
          }), _0x256a20.gui.cursor.show(false, true), _0xb5c53f = 'circle');
        }), _0x256a20.keys.bind(_0x595ce8.t.X, false, () => {
          'circle' === _0xb5c53f && (_0x32f851.api.toggleChat('true'), _0x256a20.events.call('animations.close'));
        }), _0x256a20.events.add('render2', () => {
          _0x443231.g.interfaces.panelMenu && 'circle' === _0xb5c53f && _0x256a20.keys.isUp(_0x595ce8.t.X) && (_0xb5c53f = undefined, _0x32f851.api.toggleChat('true'), _0x256a20.events.call('animations.close'));
        }), _0x256a20.events.add('render', () => {
          _0x443231.g.interfaces.panelMenu && 'circle' === _0xb5c53f && (_0x256a20.game.controls.disableControlAction(0x0, 0x1, true), _0x256a20.game.controls.disableControlAction(0x0, 0x2, true), _0x256a20.game.controls.disableControlAction(0x0, 0x3, true), _0x256a20.game.controls.disableControlAction(0x0, 0x4, true), _0x256a20.game.controls.disableControlAction(0x0, 0x5, true), _0x256a20.game.controls.disableControlAction(0x0, 0x6, true), _0x256a20.game.controls.disableControlAction(0x0, 0x18, true), _0x256a20.game.controls.disableControlAction(0x0, 0x101, true));
        }), _0x256a20.events.add('animations.playExclusiveResult', async _0x2ccbe5 => {
          const _0x4a0de7 = _0x1e855f.items[_0x2ccbe5];
          if (!_0x4a0de7) return;
          _0x443231.g.isUsingTABAnim = true, _0x289edc = _0x4a0de7.flag;
          const _0x8726f0 = [_0x32f851.api.requestAnimDict(_0x4a0de7.animData[0x0])];
          let _0x588c17 = [];

          if (_0x112e53.length) {
            for (const _0x253fc1 of _0x112e53) _0x253fc1.destroy();

            _0x112e53 = [];
          }

          if (_0x526f88.localAnimSound.entity && !_0x526f88.localAnimSound.entity.isStopped && _0x526f88.AnimSounds2D.stop(_0x526f88.localAnimSound.entity.id), _0x4a0de7.music && (_0x526f88.localAnimSound.entity = new _0x526f88.AnimSounds2D('animations/' + _0x4a0de7.music, {
            'volume': 0x23,
            'loop': _0x4a0de7.looped
          }), _0x8726f0.push(_0x526f88.localAnimSound.entity.load())), _0x4a0de7.propList) for (const _0x29c28f of _0x4a0de7.propList) {
            const _0x565dcb = new _0x45d378.$(_0x26c4c7, _0x29c28f.prop, _0x29c28f.propAnimData, _0x29c28f.propAttachData);

            _0x588c17.push(_0x565dcb), _0x112e53.push(_0x565dcb), _0x8726f0.push(_0x565dcb.load());
          }

          if (await Promise.all(_0x8726f0), _0x526f88.localAnimSound.entity && _0x526f88.localAnimSound.entity.isStopped) {
            if (_0x588c17.length) {
              for (const _0xdce7d0 of _0x588c17) _0xdce7d0.destroy();

              _0x588c17 = [];
            }
          } else {
            if (_0x588c17.length) {
              let _0x153249 = false;

              for (const _0x425117 of _0x588c17) _0x425117.destroyed && (_0x153249 = true);

              for (const _0x383234 of _0x588c17) !_0x383234.destroyed && _0x153249 && _0x383234.destroy();

              _0x153249 && (_0x588c17 = []);
            }

            if (_0x4c4ecb = null, await _0x32f851.api.taskPlayAnim(_0x4a0de7.animData[0x0], _0x4a0de7.animData[0x1], _0x4a0de7.flag, _0x4a0de7.looped, false, false, null, {
              'animExclusiveId': _0x2ccbe5
            }), _0x4c4ecb = {
              'animDict': _0x4a0de7.animData[0x0],
              'animName': _0x4a0de7.animData[0x1]
            }, _0x160bcb = Date.now() + 0x3e8, _0x526f88.localAnimSound.entity && _0x526f88.localAnimSound.entity.isStopped) {
              if (_0x588c17.length) {
                for (const _0x29b358 of _0x588c17) _0x29b358.destroy();

                _0x588c17 = [];
              }
            } else {
              if (_0x588c17.length) {
                let _0x42a154 = false;

                for (const _0x51bafd of _0x588c17) _0x51bafd.destroyed && (_0x42a154 = true);

                _0x42a154 && _0x526f88.localAnimSound && _0x526f88.AnimSounds2D.stop(_0x526f88.localAnimSound.entity.id);
              }

              if (_0x526f88.localAnimSound && _0x526f88.localAnimSound.entity && !_0x526f88.localAnimSound.entity.isStopped && _0x526f88.localAnimSound.entity.play(), _0x588c17.length) {
                for (const _0x486b08 of _0x588c17) _0x486b08.play();
              }
            }
          }
        });
      },
      0x152c3: (_0x160740, _0x177294, _0x3e42f6) => {
        'use strict';

        const a0_0xe93e1 = {
          _0x5a3b92: 0xf05
        },
              a0_0x33637b = {
          _0x3b91a1: 0x535,
          _0xd0c66d: 0xf05
        },
              a0_0x4b934f = {
          _0x25b05c: 0x535,
          _0x5e54cd: 0xf05,
          _0x420a51: 0xdb4
        },
              a0_0x59b752 = {
          _0x1db9cd: 0x1a07,
          _0x1e3592: 0xd10,
          _0x296dc0: 0x14d2,
          _0x33d88f: 0x1da5
        },
              a0_0x11d832 = {
          _0x42e733: 0x2488,
          _0x7e0e66: 0x17f9
        },
              a0_0x5aa56d = {
          _0x2754f1: 0x1934,
          _0x587084: 0x1254
        },
              a0_0x86c730 = {
          _0x286eb9: 0xd10,
          _0x4f1060: 0x14d2,
          _0x4a471f: 0x1da5,
          _0x536628: 0x564
        },
              a0_0x479067 = {
          _0x814b97: 0xd10,
          _0x40547b: 0x14d2,
          _0x3c4aaa: 0x1da5,
          _0x45f5b3: 0x4b7
        },
              a0_0x596e80 = {
          _0x2cfc86: 0x535,
          _0x524ed3: 0xd10,
          _0x3d2369: 0x1934,
          _0x3e36f2: 0x1da5
        },
              a0_0x1db609 = {
          _0x1d65de: 0x91b
        },
              a0_0x166deb = {
          _0x2ab02d: 0x535,
          _0x54b74f: 0xd10,
          _0x16c32d: 0x764,
          _0x3dfc5d: 0x11f7
        },
              a0_0x4df372 = {
          _0x422853: 0x25f1,
          _0x7ab364: 0x1eb3,
          _0x157437: 0x1a8d,
          _0x59cc2c: 0xaed,
          _0x3fb3f2: 0x188f,
          _0x4568a6: 0x535,
          _0x13cde7: 0x1de9
        },
              a0_0x16a245 = {
          _0x1a8790: 0x11dc,
          _0x4dfcb5: 0x105b,
          _0xf0b2d0: 0x11d9,
          _0x326e62: 0x235b,
          _0x25c9cc: 0x185e,
          _0x325af3: 0xc95,
          _0x2af585: 0xc31,
          _0x134f6d: 0x174f,
          _0x41bfd7: 0x185e,
          _0x4d7bee: 0x779,
          _0x368ab9: 0x1de9,
          _0x5e4c72: 0x20b4,
          _0x4ffba6: 0x1d66,
          _0x4a54b2: 0x4a3,
          _0xf3ecc9: 0x3c5,
          _0x57a803: 0x11f7,
          _0x1cd294: 0x535
        },
              a0_0x2cd87b = {
          _0x5051cd: 0x253d,
          _0x3ee028: 0x1aab,
          _0x2869a9: 0x16c5,
          _0x448fcf: 0x105b
        },
              a0_0x1b64f1 = {
          _0x4a2960: 0x16c5,
          _0x3d89fb: 0x4b9,
          _0x4e8075: 0xf52,
          _0x50f591: 0x5cd,
          _0x73b301: 0x105b,
          _0x84e4e0: 0x21e0
        };

        _0x3e42f6.r(_0x177294);

        var _0xb86fbe = _0x3e42f6(0x16a21),
            _0x5ead28 = _0x3e42f6(0x49e3),
            _0x261fec = _0x3e42f6(0x12a76),
            _0x1ef187 = _0x3e42f6(0x161cd);

        const _0x66ccbd = _0x1ef187.players.local;
        let _0x3fc106 = false;
        _0x5ead28.Z.forEach(_0x30db8a => {
          const _0x479a19 = _0x1ef187.colshapes.newSphere(_0x30db8a.x, _0x30db8a.y, _0x30db8a.z, 1.3, -0x1);

          _0x479a19.key = _0x30db8a.id, _0x479a19.tableName = 'atm';
        }), _0x1ef187.events.add('playerEnterColshape', _0x1dc8a9 => {
          _0xb86fbe.api.isAuthed() && _0x1ef187.colshapes.exists(_0x1dc8a9) && (_0x66ccbd.vehicle || 0x3 !== _0xb86fbe.api.getLocalVariable('isWorking') && 'atm' === _0x1dc8a9.tableName && (_0x66ccbd.currentAtm = _0x5ead28.Z.find(_0x5d1eaa => _0x5d1eaa.id === _0x1dc8a9.key), _0xb86fbe.api.displayHelpStringTrans('displayHelpString.openAtm', false, true, 0x1388)));
        }), _0x1ef187.events.add('playerExitColshape', _0x15c14a => {
          _0xb86fbe.api.isAuthed() && _0x1ef187.colshapes.exists(_0x15c14a) && 'atm' === _0x15c14a.tableName && (_0x1ef187.game.ui.clearHelp(true), delete _0x66ccbd.currentAtm, _0x3e42f6.g.interfaces.atm && _0xf76fc9());
        }), _0x1ef187.events.add('keys.e', () => {
          _0x3fc106 || _0x66ccbd.currentAtm && (_0x3fc106 = true, _0x1ef187.events.callRemote('2122832260', _0x66ccbd.currentAtm.propertyId));
        }), _0x1ef187.events.add('atm.initResult', (_0x3d58ca, _0x10dfad, _0x28c677, _0x234aa8) => {
          if (_0x3fc106 = false, !_0x66ccbd.currentAtm) return;

          const _0x2550ed = _0x1ef187.game.object.getObjectOffsetFromCoords(_0x66ccbd.currentAtm.x, _0x66ccbd.currentAtm.y, _0x66ccbd.currentAtm.z, _0x66ccbd.currentAtm.r, 0x0, -0.6, 0x1);

          _0xb86fbe.api.setPlayerPos(_0x66ccbd, _0x2550ed), _0x66ccbd.setHeading(_0x66ccbd.currentAtm.r), _0x3e42f6.g.interfaces.atm ? _0xf76fc9() : _0x3e42f6.g.currentInterface || null != _0x1ef187.players.local.getVariable('playerInTrunk') || _0x1ef187.players.local.getVariable('cuffed') || _0x1ef187.players.local.getVariable('tied') || _0x1ef187.players.local.getVariable('tiedHands') || (_0xb86fbe.api.taskPlayAnim('anim@mp_atm@base', 'base', 0x1), _0x1ef187.game.graphics.transitionToBlurred(0xfa), _0x261fec.globalBrowser.toggle('atm', {
            'value': true,
            'id': _0x66ccbd.currentAtm.propertyId,
            'atm': _0x3d58ca,
            'materialPrice': _0x10dfad,
            'tax': _0x28c677,
            'dayPercent': _0x234aa8
          }), _0xb86fbe.api.toggleChat(false));
        });

        const _0xf76fc9 = async () => {
          _0x3fc106 = false, _0x261fec.globalBrowser.toggle('atm', {
            'value': false
          }), _0x1ef187.game.graphics.transitionFromBlurred(0xfa), null == !_0x1ef187.players.local.getVariable('playerInTrunk') || _0x1ef187.players.local.getVariable('cuffed') || _0x1ef187.players.local.getVariable('tied') || _0x1ef187.players.local.getVariable('tiedHands') || (await _0xb86fbe.api.taskPlayAnim('anim@mp_atm@base', 'exit', 0x0, false, true)), _0xb86fbe.api.toggleChat(true);
        };

        _0x1ef187.events.add('atm.client.triggerPlayAnimation', async _0x52f844 => {
          let _0x411057 = 'anim@mp_atm@base',
              _0x223f1e = 'base',
              _0x3e98e4 = 0x1,
              _0xa771d5 = true;

          switch (_0x52f844) {
            case 'insertCard':
              _0x411057 = 'anim@mp_atm@enter', _0x223f1e = 'enter', _0x3e98e4 = 0x0, _0xa771d5 = false;
              break;

            case 'take':
              _0x411057 = 'anim@mp_atm@exit', _0x223f1e = 'exit', _0x3e98e4 = 0x0, _0xa771d5 = false;
              break;

            case 'idle':
              _0x411057 = 'amb@prop_human_atm@female@idle_a', _0x223f1e = 'idle_a', _0x3e98e4 = 0x1, _0xa771d5 = true;
          }

          _0xb86fbe.api.taskPlayAnim(_0x411057, _0x223f1e, _0x3e98e4, _0xa771d5, true);
        }), _0x1ef187.events.add('atm.close', () => {
          _0xf76fc9();
        }), _0x1ef187.events.add('atm.cashOut', _0x449cea => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('981727626', _0x66ccbd.currentAtm.propertyId, 0x64 * _0x449cea);
        }), _0x1ef187.events.add('atm.cashOutSuccess', (_0x516c2d, _0x30daa6, _0x25ef85) => {
          _0x1ef187.game.sleep(0xbb8).then(() => {
            _0x3fc106 = false;
          }), _0x261fec.globalBrowser.emit('atm_cashOutSuccess', {
            'profit': _0x516c2d,
            'materials': _0x30daa6,
            'cash': _0x25ef85
          });
        }), _0x1ef187.events.add('atm.result', () => {
          _0x3fc106 = false;
        }), _0x1ef187.events.add('atm.cashIn', _0x18280f => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('3470775106', _0x66ccbd.currentAtm.propertyId, 0x64 * _0x18280f);
        }), _0x1ef187.events.add('atm.cashInSuccess', (_0x57570f, _0x2c3f97, _0x57caeb) => {
          _0x1ef187.game.sleep(0xbb8).then(() => {
            _0x3fc106 = false;
          }), _0x261fec.globalBrowser.emit('atm_cashInSuccess', {
            'profit': _0x57570f,
            'materials': _0x2c3f97,
            'cash': _0x57caeb
          });
        }), _0x1ef187.events.add('atm.mobile', (_0xbdf50, _0x5d09d4) => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('1714100664', _0x66ccbd.currentAtm.propertyId, 0x64 * _0xbdf50, _0x5d09d4);
        }), _0x1ef187.events.add('atm.deposit', (_0x54c585, _0x452579) => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('3299336482', _0x66ccbd.currentAtm.propertyId, 0x64 * _0x54c585, _0x452579);
        }), _0x1ef187.events.add('atm.depositSuccess', (_0x5cadec, _0x20c6eb, _0x188c94) => {
          _0x1ef187.game.sleep(0xbb8).then(() => {
            _0x3fc106 = false;
          }), _0x261fec.globalBrowser.emit('atm_depositSuccess', {
            'profit': _0x20c6eb,
            'materials': _0x188c94
          }), _0x261fec.globalBrowser.emit('bank_setMonthTransfers', {
            'monthTransfers': _0x5cadec
          });
        }), _0x1ef187.events.add('atm.buy', _0x349a6c => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('3917382', _0x349a6c);
        }), _0x1ef187.events.add('atm.buySuccess', _0x1633c1 => {
          _0x3fc106 = false, _0x261fec.globalBrowser.emit('atm_buySuccess', {
            'atm': _0x1633c1
          });
        }), _0x1ef187.events.add('atm.orderMaterials', _0x49cb42 => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('2321131093', _0x49cb42);
        }), _0x1ef187.events.add('atm.orderMaterialsSuccess', _0x228129 => {
          _0x3fc106 = false, _0x261fec.globalBrowser.emit('atm_orderMaterialsSuccess', {
            'materials': _0x228129
          });
        }), _0x1ef187.events.add('atm.setPercent', (_0x5b1164, _0xbc74d1) => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('3581390656', _0x5b1164, _0xbc74d1);
        }), _0x1ef187.events.add('atm.setPercentSuccess', (_0x40b2a9, _0x575cce) => {
          _0x3fc106 = false, _0x261fec.globalBrowser.emit('atm_setPercentSuccess', {
            'type': _0x40b2a9,
            'value': _0x575cce
          });
        }), _0x1ef187.events.add('atm.takeMoney', _0x25eae2 => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('3024656184', _0x25eae2);
        }), _0x1ef187.events.add('atm.takeMoneySuccess', _0x2098c3 => {
          _0x3fc106 = false, _0x261fec.globalBrowser.emit('atm_takeMoneySuccess', {
            'profit': _0x2098c3
          });
        }), _0x1ef187.events.add('atm.getStats', _0x1a79bb => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('589296641', _0x1a79bb);
        }), _0x1ef187.events.add('atm.getStatsResult', (_0x4a0a5c, _0x4e4a14) => {
          _0x3fc106 = false, _0x261fec.globalBrowser.emit('atm_getStatsSuccess', {
            'period': _0x4a0a5c,
            'stats': _0x4e4a14
          });
        }), _0x1ef187.events.add('atm.payTax', _0x119971 => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0x1ef187.events.callRemote('3590704124', _0x119971);
        }), _0x1ef187.events.add('atm.payTaxSuccess', _0x1aef6d => {
          _0x3fc106 = false, _0x261fec.globalBrowser.emit('atm_payTaxSuccess', {
            'paidUntil': _0x1aef6d
          });
        }), _0x1ef187.events.add('atm.sell', (_0x1ff30b, _0x4deffd) => {
          if (_0x3fc106) return _0xb86fbe.api.longNotifyTrans('system.notTooFast', 'error');
          _0x3fc106 = true, _0xf76fc9(), _0x1ef187.events.call('showDialogTrans', 0x35, 'confirm', 'user.dialog.sellAtmTitle', 'user.dialog.sellAtmBody', {
            'id': _0x1ff30b,
            'amount': _0x4deffd / 0x64 / 0x64 * 0x4b
          });
        }), _0x1ef187.events.add('atm.sellConfirm', () => {
          _0x66ccbd.currentAtm ? (_0x3fc106 = true, _0x1ef187.events.callRemote('908027245')) : _0x3fc106 = false;
        }), _0x1ef187.events.add('atm.sellResult', () => {
          _0xf76fc9();
        }), _0x1ef187.events.add('atm.triggerPlayAnimation', _0x4ff7c4 => {
          _0x1ef187.events.call('atm.client.triggerPlayAnimation', _0x4ff7c4);
        }), _0x1ef187.events.add('atm.triggerPlayClick', () => {
          _0xb86fbe.api.play3DSound('atm/atm_beep', {
            'volume': 0x1e
          });
        }), _0x1ef187.events.add('atm.triggerPlayError', () => {
          _0xb86fbe.api.play3DSound('atm/atm_error', {
            'volume': 0x1e
          });
        }), _0x1ef187.events.add('atm.triggerPlaySuccess', () => {
          _0xb86fbe.api.play3DSound('atm/atm_success', {
            'volume': 0x1e
          });
        });
      },
      0x68c3: (_0x36a2d0, _0x104535, _0x3d5aa5) => {
        'use strict';

        const a0_0x3d67c0 = {
          _0x33bd95: 0x14d2,
          _0x1b552d: 0x2007
        },
              a0_0x1494a3 = {
          _0x101e45: 0x1958
        },
              a0_0x3a1bb6 = {
          _0x1954d0: 0x1da5
        },
              a0_0x3057e9 = {
          _0x5d4f3a: 0x14d2
        },
              a0_0xdf7f8a = {
          _0x541cfa: 0x1a3
        },
              a0_0x454cbf = {
          _0x1db6a1: 0x2488,
          _0x46e2e4: 0x4a3,
          _0x576034: 0x535,
          _0x42f1f9: 0x52c,
          _0xbfe617: 0x14d2,
          _0x15eac2: 0x14b8
        },
              a0_0x4f0b0b = {
          _0x2cade7: 0x242c,
          _0x33f153: 0x14d2,
          _0x37102d: 0x1d66,
          _0x3d9266: 0x59d
        },
              a0_0xaadd7e = {
          _0x22a7c8: 0x535,
          _0x475b35: 0x1d66,
          _0x3961c6: 0x242c,
          _0x4e314d: 0x1a5,
          _0x569bcb: 0x616
        },
              a0_0x5ddec1 = {
          _0x40d7b6: 0x535,
          _0x17cee5: 0x253d,
          _0x142ee2: 0xf86,
          _0x53a7cc: 0xb8f
        },
              a0_0x484349 = {
          _0x4f3cb8: 0x2568,
          _0x1e12f6: 0x1f71,
          _0x2bc0fe: 0x1941
        };

        _0x3d5aa5.r(_0x104535);

        var _0x172de5 = _0x3d5aa5(0x16a21),
            _0x1158a3 = _0x3d5aa5(0x96d1),
            _0x43f511 = _0x3d5aa5.n(_0x1158a3),
            _0x43b9d7 = _0x3d5aa5(0x92e0),
            _0x2d5436 = _0x3d5aa5(0x49e3),
            _0x3f078e = _0x3d5aa5(0x12a76),
            _0x3676e5 = _0x3d5aa5(0x161cd);

        const _0x513693 = _0x3676e5.players.local;

        let _0x58989b,
            _0xcf4c1d = false;

        const _0x3583ca = _0x3676e5.colshapes.newSphere(-1138.45, -391.86, -0xa2, 0x5, -0x1),
              _0xa2e7e0 = (_0x261c58, _0x4a868b) => ('vehicles' === _0x261c58 ? _0x4a868b = _0x4a868b.map(_0x2013a7 => (_0x2013a7 || (_0x2013a7 = {}), _0x2013a7.model && (_0x2013a7.title = _0x172de5.api.escapeHtml(_0x3676e5.game.ui.getLabelText(_0x3676e5.game.vehicle.getDisplayNameFromVehicleModel(_0x3676e5.game.joaat(_0x2013a7.model))))), null == _0x2013a7.status && (_0x2013a7.status = 0x0), _0x2013a7)) : 'houses' === _0x261c58 ? _0x4a868b = _0x4a868b.map(_0x3fe30b => (_0x3fe30b.address = _0x172de5.api.escapeHtml(_0x172de5.api.getAddress(parseFloat(_0x3d5aa5.g.houses[_0x3fe30b.keyId].posX), parseFloat(_0x3d5aa5.g.houses[_0x3fe30b.keyId].posY), parseFloat(_0x3d5aa5.g.houses[_0x3fe30b.keyId].posZ))) + ', ' + _0x3fe30b.keyId, null == _0x3fe30b.status && (_0x3fe30b.status = 0x0), _0x3fe30b)) : 'apartments' === _0x261c58 ? _0x4a868b = _0x4a868b.map(_0x1143dd => (_0x1143dd.address = _0x172de5.api.escapeHtml(_0x172de5.api.getAddress(_0x43f511()[_0x1143dd.buildingId].shapeX, _0x43f511()[_0x1143dd.buildingId].shapeY, _0x43f511()[_0x1143dd.buildingId].shapeZ)) + ', ' + _0x1143dd.keyId, null == _0x1143dd.status && (_0x1143dd.status = 0x0), _0x1143dd)) : 'items' === _0x261c58 || (_0x4a868b = 'billboards' === _0x261c58 ? _0x4a868b.map(_0x1e3be2 => (_0x1e3be2.address = _0x172de5.api.escapeHtml(_0x172de5.api.getAddress(_0x43b9d7.N[_0x1e3be2.keyId].position.x, _0x43b9d7.N[_0x1e3be2.keyId].position.y, _0x43b9d7.N[_0x1e3be2.keyId].position.z)) + ', ' + _0x1e3be2.keyId, null == _0x1e3be2.status && (_0x1e3be2.status = 0x0), _0x1e3be2)) : 'atm' === _0x261c58 ? _0x4a868b.map(_0x13b1a7 => {
          const _0x35f869 = _0x2d5436.Z.find(_0x531398 => _0x531398.propertyId === _0x13b1a7.keyId);

          return _0x13b1a7.address = _0x172de5.api.escapeHtml(_0x172de5.api.getAddress(_0x35f869.x, _0x35f869.y, _0x35f869.z)) + ', ' + _0x13b1a7.keyId, null == _0x13b1a7.status && (_0x13b1a7.status = 0x0), _0x13b1a7;
        }) : _0x4a868b.map(_0x1d3acf => (_0x1d3acf.address = _0x172de5.api.escapeHtml(_0x172de5.api.getAddress(parseFloat(_0x3d5aa5.g[_0x1d3acf.type][_0x1d3acf.keyId].posX), parseFloat(_0x3d5aa5.g[_0x1d3acf.type][_0x1d3acf.keyId].posY), parseFloat(_0x3d5aa5.g[_0x1d3acf.type][_0x1d3acf.keyId].posZ))) + ', ' + _0x1d3acf.keyId, null == _0x1d3acf.status && (_0x1d3acf.status = 0x0), _0x1d3acf))), _0x4a868b);

        _0x3676e5.events.add('playerEnterColshape', async _0x426294 => {
          if (_0x172de5.api.isAuthed()) return _0x3583ca === _0x426294 ? (_0x58989b = _0x426294, void _0x172de5.api.displayHelpStringTrans('displayHelpString.openAuction', false, true, 0x1388)) : undefined;
        }), _0x3676e5.events.add('playerExitColshape', async _0x50ec61 => {
          if (_0x172de5.api.isAuthed()) return _0x3583ca === _0x50ec61 ? (_0x58989b = null, void _0x3676e5.game.ui.clearHelp(true)) : void (_0x3d5aa5.g.interfaces.auction && _0x3676e5.events.call('auction.close'));
        }), _0x3676e5.events.add('keys.e', async () => {
          if (_0x58989b && _0x58989b == _0x3583ca && !_0x3d5aa5.g.interfaces.auction) return _0x3676e5.events.call('auction.init'), void _0x3676e5.game.ui.clearHelp(true);
        }), _0x3676e5.events.add('auction.init', (_0x2526f6, _0xc7b588, _0x295dfb, _0x18ffce) => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('122826223', _0x2526f6, _0xc7b588, _0x295dfb, _0x18ffce));
        }), _0x3676e5.events.add('auction.initResult', (_0x3c8ded, _0x4391cb, _0x1e21ec, _0x206c7e, _0x14aa23, _0x70597c, _0x1bec32) => {
          _0xcf4c1d = false, _0x3c8ded && (_0x172de5.api.toggleChat(false), _0x3f078e.globalBrowser.toggle('auction', {
            'value': true,
            'lots': _0x3c8ded,
            'propertyTypes': _0x4391cb,
            'lotsCount': _0x1e21ec,
            'betsCount': _0x206c7e,
            'accountId': _0x513693.getVariable('id'),
            'totalLots': _0x14aa23,
            'type': _0x70597c,
            'currentPage': _0x1bec32
          }));
        }), _0x3676e5.events.add('auction.close', () => {
          _0xcf4c1d = false, _0x3f078e.globalBrowser.toggle('auction', {
            'value': false
          }), _0x172de5.api.toggleChat(true), _0x3676e5.events.callRemote('2982824974');
        }), _0x3676e5.events.add('auction.loadLot', (_0x425089, _0x502d30) => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('1677584375', _0x425089, _0x502d30));
        }), _0x3676e5.events.add('auction.loadLotResult', (_0x518bdc, _0x5d4c6c, _0x54707f) => {
          _0xcf4c1d = false, _0x518bdc && ([_0x54707f] = _0xa2e7e0(_0x5d4c6c, [_0x54707f]), _0x3f078e.globalBrowser.emit('auction_loadLotResult', {
            'bets': _0x518bdc,
            'property': _0x54707f
          }));
        }), _0x3676e5.events.add('auction.loadMyLots', _0x948422 => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('70950123', _0x948422));
        }), _0x3676e5.events.add('auction.loadMyLotsResult', (_0x1e2096, _0x183cc6, _0x5988ad) => {
          _0xcf4c1d = false, _0x3f078e.globalBrowser.emit('auction_loadMyLotsResult', {
            'lots': _0x1e2096,
            'total': _0x183cc6,
            'pageCount': _0x5988ad
          });
        }), _0x3676e5.events.add('auction.loadMyBets', _0x4a1ace => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('2623788061', _0x4a1ace));
        }), _0x3676e5.events.add('auction.loadMyBetsResult', (_0x2263ae, _0x3465c7, _0x30402f) => {
          _0xcf4c1d = false, _0x3f078e.globalBrowser.emit('auction_loadMyBetsResult', {
            'bets': _0x2263ae,
            'total': _0x3465c7,
            'pageCount': _0x30402f
          });
        }), _0x3676e5.events.add('auction.removeLot', _0x7cc98 => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('3512437767', _0x7cc98));
        }), _0x3676e5.events.add('auction.removeLotResult', _0xeb9fb4 => {
          _0xcf4c1d = false, _0xeb9fb4 && _0x3f078e.globalBrowser.emit('auction_removeLotResult', {
            'id': _0xeb9fb4,
            'accountId': _0x513693.getVariable('id')
          });
        }), _0x3676e5.events.add('auction.loadProperties', _0x3a2de5 => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('2143573518', _0x3a2de5));
        }), _0x3676e5.events.add('auction.loadPropertiesResult', (_0x94055c, _0x1fdcea) => {
          _0xcf4c1d = false, _0x1fdcea = _0xa2e7e0(_0x94055c, _0x1fdcea), _0x3f078e.globalBrowser.emit('auction_loadPropertiesResult', {
            'properties': _0x1fdcea
          });
        }), _0x3676e5.events.add('auction.createLot', (_0xcfd4eb, _0x13ef22, _0x416d91, _0x71ae14, _0x4faf69) => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('738729966', _0xcfd4eb, _0x13ef22, _0x416d91, _0x71ae14, _0x4faf69));
        }), _0x3676e5.events.add('auction.createLotResult', _0x2181e4 => {
          _0xcf4c1d = false, _0x2181e4 && (_0x172de5.api.playSound('auction/create_lot', {
            'volume': 0xa
          }), _0x3f078e.globalBrowser.emit('auction_createLotResult', JSON.stringify(_0x2181e4)));
        }), _0x3676e5.events.add('auction.increaseBet', (_0x2cf88d, _0x18325a, _0x31e541, _0x54f035) => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('3750162060', _0x2cf88d, _0x18325a, _0x31e541, _0x54f035));
        }), _0x3676e5.events.add('auction.increaseBetResult', _0x49340c => {
          _0xcf4c1d = false, _0x49340c && _0x3f078e.globalBrowser.emit('auction_increaseBetResult', JSON.stringify(_0x49340c));
        }), _0x3676e5.events.add('auction.cancelBet', (_0x16bcb3, _0x29dd39) => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('1559849986', _0x16bcb3, _0x29dd39));
        }), _0x3676e5.events.add('auction.cancelBetResult', _0x30c05d => {
          _0xcf4c1d = false, _0x30c05d && _0x3f078e.globalBrowser.emit('auction_cancelBetResult', {
            'id': _0x30c05d
          });
        }), _0x3676e5.events.add('auction.finishAuctionResult', _0x113f8c => {
          _0x3f078e.globalBrowser.emit('auction_finishAuctionResult', {
            'lot': _0x113f8c
          });
        }), _0x3676e5.events.add('auction.setGPS', (_0x168520, _0x214665, _0x486b91) => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('1267395572', _0x168520, _0x214665, _0x486b91));
        }), _0x3676e5.events.add('auction.setGPSResult', () => {
          _0xcf4c1d = false;
        }), _0x3676e5.events.add('auction.loadPage', (_0x55454a, _0x312faf) => {
          _0xcf4c1d || (_0xcf4c1d = true, _0x3676e5.events.callRemote('2169498569', _0x55454a, _0x312faf));
        }), _0x3676e5.events.add('auction.loadPageResult', (_0x1dc301, _0x2945cd, _0x2d9c59) => {
          _0xcf4c1d = false, _0x3f078e.globalBrowser.emit('auction_loadPageResult', {
            'category': _0x1dc301,
            'lots': _0x2945cd,
            'count': _0x2d9c59
          });
        });
      },
      0xe630: (_0x236d53, _0x160f5e, _0x3dad12) => {
        'use strict';

        const a0_0x165f28 = {
          _0x474c3e: 0x10b0,
          _0x783511: 0x535,
          _0x234894: 0x1a07,
          _0x117ea0: 0x1f2f,
          _0x183c91: 0x1934
        },
              a0_0x1f6425 = {
          _0xc63c27: 0x2488,
          _0x8af0db: 0x1a07,
          _0x52042f: 0x1934
        },
              a0_0x592359 = {
          _0x3cc87f: 0x1da5
        },
              a0_0x2e4d8e = {
          _0x2a3183: 0x14d2,
          _0x15a44d: 0x1a5
        },
              a0_0x46333e = {
          _0x552741: 0x2488,
          _0x250214: 0x4a3,
          _0x368d4a: 0x116f
        };

        _0x3dad12.r(_0x160f5e);

        var _0x1b3bb1 = _0x3dad12(0x16a21),
            _0x295271 = _0x3dad12(0x12a76),
            _0x1dc45e = _0x3dad12(0x161cd);

        _0x1dc45e.players.local;
        let _0x42f691 = false;
        _0x1dc45e.events.add('auth.init', () => {
          _0x1b3bb1.api.toggleHud(false), _0x295271.globalBrowser.toggle('auth', {
            'value': true,
            'page': 'auth'
          });
        }), _0x1dc45e.events.add('auth.close', () => {
          _0x295271.globalBrowser.toggle('auth', {
            'value': false
          });
        }), _0x1dc45e.events.add('auth.goToReg', () => {
          _0x1dc45e.events.call('reg.init');
        }), _0x1dc45e.events.add('auth.tryAuthUser', (_0x5a5286, _0x136255) => {
          _0x42f691 || (_0x42f691 = true, _0x1dc45e.events.callRemote('2558339172', _0x5a5286, _0x136255));
        }), _0x1dc45e.events.add('auth.authUserFailed', (_0x2c3864, _0x674544, _0x1fbc02, _0x383e14) => {
          if (_0x42f691 = false, 0x0 !== _0x1fbc02) {
            if (0x1 === _0x1fbc02) _0x1b3bb1.api.longNotifyTrans('user.wrongLoginOrPassword', {
              'amount': 0x4 - _0x383e14
            }, 'error'), _0x295271.globalBrowser.emit('auth_userFailed', {
              'login': _0x2c3864,
              'password': _0x674544
            });else {
              if (0x2 === _0x1fbc02) return void _0x1b3bb1.api.longNotifyTrans('user.socialClubAlreadyUsed', 'error');
            }
          } else _0x1b3bb1.api.longNotifyTrans('user.someoneAuthedUnderThisAccount', 'error');
        }), _0x1dc45e.events.add('auth.forget', () => {
          _0x295271.globalBrowser.toggle('auth', {
            'value': true,
            'page': 'reset_password'
          });
        }), _0x1dc45e.events.add('auth.passwordResetCheckEmail', _0x21a4e0 => {
          _0x42f691 || (_0x42f691 = true, _0x1dc45e.events.callRemote('1766395782', _0x21a4e0));
        }), _0x1dc45e.events.add('auth.passwordResetCheckEmailResult', (_0x5bcb97, _0x31a2e0) => {
          _0x42f691 = false, _0x5bcb97 ? _0x295271.globalBrowser.emit('auth_setStep', 0x2) : _0x1b3bb1.api.longNotifyTrans('user.wrongEmailRetry', {
            'amount': 0x4 - _0x31a2e0
          }, 'error');
        }), _0x1dc45e.events.add('auth.passwordResetCheckCode', _0x41e03e => {
          _0x42f691 || (_0x42f691 = true, _0x1dc45e.events.callRemote('2840515973', _0x41e03e));
        }), _0x1dc45e.events.add('auth.passwordResetCheckCodeResult', (_0x3067c2, _0x5eac65) => {
          _0x42f691 = false, _0x3067c2 ? _0x295271.globalBrowser.emit('auth_setStep', 0x3) : _0x1b3bb1.api.longNotifyTrans('user.wrongVerificationCode', {
            'amount': 0x4 - _0x5eac65
          }, 'error');
        }), _0x1dc45e.events.add('auth.setNewPasswordAndAuth', (_0x50a8a0, _0x3a17c7) => {
          _0x42f691 || (_0x42f691 = true, _0x1dc45e.events.callRemote('3391790510', _0x50a8a0, _0x3a17c7));
        }), _0x1dc45e.events.add('auth.reset', () => {
          _0x42f691 = false;
        });
      },
      0x5c4d: (_0x241f24, _0x5b5999, _0x2c7fa2) => {
        'use strict';

        const a0_0x56c774 = {
          _0x45ebbb: 0x25b4,
          _0x889f1d: 0x1820,
          _0x217f8e: 0x16c5,
          _0x5e5c9f: 0x2140,
          _0x5d864b: 0x1000,
          _0x496c86: 0x19d2,
          _0x2ecfd5: 0xfaa,
          _0x4fc978: 0x16c5,
          _0x92daa3: 0x2530,
          _0x3fdcf0: 0x2292,
          _0x253dac: 0xd80,
          _0x27a50a: 0x1700,
          _0x5e17df: 0x22b2,
          _0x21567b: 0x19d2
        },
              a0_0x1d2220 = {
          _0x432f04: 0x1505
        },
              a0_0x3c3559 = {
          _0x5c78d5: 0x1a07,
          _0xf0dcf: 0x1c8e,
          _0x59fc67: 0x14a5,
          _0x3f1671: 0xc8f,
          _0xc3d1fd: 0x14d2,
          _0x111fc6: 0x1da5,
          _0x339ecb: 0x1f2,
          _0x87dca2: 0x1a07,
          _0x31412c: 0x1934
        },
              a0_0x1bc2bc = {
          _0x33e4d9: 0xce0,
          _0x5cfc43: 0x175a,
          _0x55a482: 0x16c5,
          _0x162d55: 0x1700,
          _0x22fc4e: 0xce0,
          _0x3aa3f3: 0x175a,
          _0x16128b: 0xbba,
          _0x3e1d10: 0xce0,
          _0x1888aa: 0x216,
          _0x2fe7f1: 0xd84,
          _0x2f8a92: 0x6a2,
          _0x4c3367: 0x1b1c,
          _0x277cc6: 0x1f2,
          _0x4bc759: 0x175a,
          _0x2520d7: 0x2140,
          _0x4e3517: 0xc25,
          _0x55b0b7: 0xaf5,
          _0x5a545a: 0xd84,
          _0x430e5e: 0x2b1,
          _0x43893f: 0x175a,
          _0x1f0270: 0x2b1,
          _0x4a166a: 0x2b1,
          _0x42ef2f: 0xce0
        },
              a0_0x260bcc = {
          _0x260b70: 0x11d9,
          _0x33f3db: 0x535,
          _0x4c2399: 0x1505,
          _0x915890: 0x1c63,
          _0x1cf1e6: 0x4a3,
          _0x3c76a1: 0x2589,
          _0x53a2da: 0x535,
          _0x37d668: 0x1cd8,
          _0x474bad: 0x535,
          _0x17edba: 0x14d2,
          _0x4ea3db: 0x2667,
          _0x2c89cb: 0x2292,
          _0x3a96cf: 0x2140,
          _0x484f84: 0x3b1,
          _0xf4a688: 0x1199,
          _0x208e5f: 0x1d66,
          _0x364d98: 0xd79,
          _0x239cfe: 0x15e0,
          _0x27b784: 0x14ac,
          _0x55d875: 0x1d66,
          _0x2f4823: 0x1151,
          _0x39bf4d: 0x14ac,
          _0x251a13: 0x186e,
          _0x23322f: 0x186e,
          _0x19fe42: 0x13b4,
          _0x3fc0d5: 0x1f30,
          _0x28494d: 0xd80,
          _0x463367: 0x22b2,
          _0x397894: 0x1edc,
          _0x3d66ec: 0x1d55,
          _0x125714: 0x1b1c,
          _0x4576c5: 0x1b1c,
          _0x19bf2a: 0x1b3f,
          _0x30c92c: 0x1d55,
          _0x5b8e67: 0x2f3,
          _0x49366c: 0x6a5,
          _0x22fb10: 0x1e84,
          _0x125cbb: 0x1d55,
          _0x43c542: 0x1e21,
          _0x3d1279: 0xf6b,
          _0x5bd321: 0x165d,
          _0x33a1c0: 0x1d85,
          _0x31d64d: 0xc44,
          _0x317727: 0xd14,
          _0x2cc4d3: 0x2236,
          _0x1b0e37: 0xc44
        },
              a0_0xca4d8e = {
          _0x5469e4: 0x535,
          _0x3ff84e: 0x25df,
          _0xee4a87: 0x535,
          _0x41dc37: 0x1cd8,
          _0x29b009: 0x13b0,
          _0x11f49d: 0x52c,
          _0x528c6f: 0x14d2,
          _0x10af8f: 0x1289,
          _0x1e2691: 0x2140,
          _0x14c87f: 0x175a,
          _0x37fd3f: 0x175a,
          _0x6f8bc4: 0x248,
          _0x2d86fc: 0xf6b,
          _0x5d2eeb: 0x927,
          _0x32eecf: 0x14ac,
          _0x260b3d: 0x1d66,
          _0x1cae9c: 0x815,
          _0xbfea54: 0xfaa,
          _0x195134: 0xfaa,
          _0x2d015d: 0x16c5,
          _0x712548: 0x2488,
          _0x5ed2f5: 0x4a3,
          _0x377cdc: 0xc44,
          _0x14ea2d: 0x3e9,
          _0x581824: 0xc8f,
          _0x54759d: 0x1da5,
          _0xdca94e: 0x535,
          _0x21fb14: 0x880
        };

        _0x2c7fa2.r(_0x5b5999);

        var _0x53959c = _0x2c7fa2(0x16a21),
            _0x17c550 = _0x2c7fa2(0x580a),
            _0x5a24f5 = _0x2c7fa2(0xccab),
            _0x214f28 = _0x2c7fa2(0xfc97),
            _0x4cfca2 = _0x2c7fa2.n(_0x214f28),
            _0x2a3039 = _0x2c7fa2(0x12a76),
            _0x3dd51b = _0x2c7fa2(0x5d14),
            _0x586971 = _0x2c7fa2(0x16e5f),
            _0x272fdd = _0x2c7fa2(0xd194),
            _0x12a75b = _0x2c7fa2(0x161cd);

        const _0x1df3ff = _0x12a75b.players.local,
              _0x34015b = [0x2b, 0x3f, 0x86, 0x76],
              _0x577afa = {
          'camera': null,
          'selectedColor': 0x6f,
          'vehPosData': null,
          'vehPosR': null,
          'exitPosData': null,
          'bizId': null,
          'inShop': false,
          'waiting': false,
          'waitingFade': false,
          'expoVehicles': [],
          'expoRendered': false,
          'currentVehicle': null,
          'oldVehicle': null
        },
              _0x5a0334 = (_0x2a9849 = false) => {
          try {
            _0x53959c.api.fadeOut(0x0), _0x1df3ff.freezePosition(false), _0x53959c.api.toggleRadar(true), _0x53959c.api.toggleHud(true), _0x53959c.api.toggleChat(true), _0x2a9849 || _0x12a75b.events.callRemote('3702382805', 0x0), _0x53959c.api.setPlayerPos(_0x1df3ff, _0x577afa.exitPosData), _0x1df3ff.setAlpha(0xff), _0x577afa.currentVehicle && _0x577afa.currentVehicle.destroy(), _0x577afa.currentVehicle = null, undefined !== _0x577afa.camera && (_0x53959c.api.cameraRotation.stop(), _0x577afa.camera.destroy(true), _0x577afa.camera = undefined);
            const _0x488364 = _0x5a24f5.I9[_0x577afa.bizId - 0x1];

            if (_0x488364.ipl && _0x12a75b.game.streaming.isIplActive(_0x488364.ipl) && _0x12a75b.game.streaming.removeIpl(_0x488364.ipl), _0x577afa.expoVehicles && _0x577afa.expoVehicles.length) {
              for (const _0x29f517 of _0x577afa.expoVehicles) _0x12a75b.vehicles.exists(_0x29f517) && _0x29f517.destroy();

              _0x577afa.expoVehicles = [], _0x577afa.expoRendered = false;
            }

            _0x12a75b.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a3039.globalBrowser.toggle('autoshop', {
              'value': false
            }), _0x53959c.api.setDiscordStatus(), _0x586971.Z.stop(), _0x577afa.waiting = false, _0x2a9849 || _0x12a75b.events.callRemote('1261525060'), _0x53959c.api.fadeIn(0x3e8);
          } catch (_0x5f4eb5) {
            _0x53959c.api.sendError(_0x5f4eb5);
          }
        };

        _0x12a75b.events.add('autoshopAPI.show', async (_0x488a03, _0x4c40be, _0x249480) => {
          const a0_0x570396 = {
            _0xd454d5: 0xd84,
            _0x2ece8a: 0xf79,
            _0x9ac83: 0x2034,
            _0x184c95: 0x1d66,
            _0x3a951c: 0x4b9,
            _0x50fee1: 0x14c4,
            _0x3d4b32: 0x2379,
            _0x13e12a: 0x1748,
            _0x48af0f: 0x4b9,
            _0x596e85: 0xa33,
            _0x1b58cf: 0x1d66,
            _0x370bb3: 0x1ae1,
            _0x3873e4: 0x1d66,
            _0x4675a5: 0x324,
            _0x5a684c: 0x1b1f,
            _0x2a151c: 0x1741,
            _0x136174: 0x268,
            _0x36f3c0: 0x253,
            _0xc118f8: 0x172c
          };
          if (_0x2c7fa2.g.currentInterface) return;
          _0x53959c.api.fadeOut(0x0), _0x577afa.inShop = true, _0x577afa.bizId = _0x4c40be;
          let _0x2e82b0 = [];
          _0x249480.forEach(_0x5ed7c2 => {
            const _0x50a935 = _0x17c550.Z.find(_0x20b6a3 => _0x20b6a3.model === _0x12a75b.game.joaat(_0x5ed7c2.name)),
                  _0x4cd86d = 'urus58' === _0x5ed7c2.name ? 'urus' : _0x5ed7c2.name;

            _0x2e82b0.push({
              'model': _0x5ed7c2.name,
              'title': _0x53959c.api.escapeHtml(_0x12a75b.game.ui.getLabelText(_0x12a75b.game.vehicle.getDisplayNameFromVehicleModel(_0x12a75b.game.joaat(_0x4cd86d)))),
              'maxSpeed': _0x50a935 ? _0x50a935.limit : 3.6 * _0x12a75b.game.vehicle.getVehicleModelMaxSpeed(_0x12a75b.game.joaat(_0x4cd86d)),
              'breaking': _0x12a75b.game.vehicle.getVehicleModelMaxBraking(_0x12a75b.game.joaat(_0x4cd86d)),
              'acceleration': _0x12a75b.game.vehicle.getVehicleModelAcceleration(_0x12a75b.game.joaat(_0x4cd86d)),
              'traction': _0x12a75b.game.vehicle.getVehicleModelMaxTraction(_0x12a75b.game.joaat(_0x4cd86d)),
              'fuelCap': _0x5ed7c2.fuelCap,
              'fuelType': _0x5ed7c2.fuelType,
              'price': _0x5ed7c2.price,
              'class': _0x5ed7c2.class,
              'fuelConsumption': _0x5ed7c2.fuelConsumption,
              'capacity': _0x4cfca2()[_0x5ed7c2.name].capacity / 0x3e8,
              'server': _0x5ed7c2.server,
              'discount': _0x5ed7c2.discount,
              'limit': _0x5ed7c2.limit,
              'available': _0x5ed7c2.available
            });
          }), _0x2a3039.globalBrowser.toggle('autoshop', {
            'value': true,
            'type': 'Majestic' === _0x488a03 ? 'Chaps' : _0x488a03,
            'vehicles': _0x2e82b0,
            'biz': _0x4c40be
          }), _0x53959c.api.toggleRadar(false), _0x53959c.api.toggleHud(false), _0x53959c.api.toggleChat(false), _0x12a75b.events.callRemote('3702382805', _0x1df3ff.getVariable('id')), _0x1df3ff.freezePosition(true), _0x1df3ff.setAlpha(0x0), _0x577afa.camera = _0x12a75b.cameras.new('default'), _0x577afa.camera.setActive(true), _0x12a75b.game.cam.renderScriptCams(true, false, 0xbb8, true, false, 0x0);
          const _0x2b53b9 = _0x5a24f5.I9[_0x577afa.bizId - 0x1];

          if (_0x2b53b9.ipl && !_0x12a75b.game.streaming.isIplActive(_0x2b53b9.ipl) && _0x12a75b.game.streaming.requestIpl(_0x2b53b9.ipl), _0x2b53b9.expo) {
            for (const _0x31f227 of _0x2b53b9.expo) {
              const _0x4320f4 = _0x3dd51b.u.pickone(_0x34015b),
                    _0x1abbc1 = _0x12a75b.vehicles.new(_0x12a75b.game.joaat(_0x31f227.model), _0x31f227.position, {
                'heading': _0x31f227.heading,
                'dimension': -0x1,
                'numberPlate': 'Majestic',
                'locked': true,
                'engine': false,
                'color': [_0x4320f4, 0x0]
              });

              _0x1abbc1 && (_0x1abbc1.realCoords = _0x31f227.position, _0x577afa.expoVehicles.push(_0x1abbc1));
            }

            for (let _0x2b814c = 0x0; _0x577afa.expoVehicles.map(_0x20220c => _0x20220c.handle).includes(0x0) && _0x2b814c < 0xf; ++_0x2b814c) await _0x12a75b.game.sleep(0x64);
          }

          _0x577afa.vehPosData = new _0x12a75b.Vector3(parseFloat(_0x2b53b9.vehPosX), parseFloat(_0x2b53b9.vehPosY), parseFloat(_0x2b53b9.vehPosZ)), _0x577afa.vehPosR = parseFloat(_0x2b53b9.vehPosR) || 0x79, _0x577afa.exitPosData = new _0x12a75b.Vector3(parseFloat(_0x2b53b9.exitPosX), parseFloat(_0x2b53b9.exitPosY), parseFloat(_0x2b53b9.exitPosZ));

          const _0x3b1d42 = _0x577afa.vehPosData,
                _0x1f1ffb = new _0x12a75b.Vector3(_0x577afa.vehPosData.x, _0x577afa.vehPosData.y, _0x577afa.vehPosData.z + 0x1),
                _0x3558d8 = new _0x12a75b.Vector3(-4.5, 2.75, 0.5);

          _0x53959c.api.cameraRotation.start(_0x577afa.camera, _0x1f1ffb, _0x3b1d42, _0x3558d8, parseFloat(_0x2b53b9.vehPosR) + 0x5 || 0x79, 0x3c, true), _0x53959c.api.cameraRotation.setZBoderMultiplier(-1.25, 3.25), _0x53959c.api.cameraRotation.setZUpMultipler(0x2), _0x53959c.api.setDiscordStatus('autoshop'), !_0x53959c.api.getPlayerSetting('streamerMode') && _0x2b53b9.allowMusic && _0x586971.Z.play('autoshop', {
            'volume': 0x5,
            'startOffsetPercent': _0x3dd51b.u.integer({
              'min': 0x0,
              'max': 0x19
            }),
            'fade': 0x7d0,
            'waitTime': 0x3e8,
            'looped': false,
            'force': true
          }), _0x53959c.api.fadeIn(0x1f4);
        }), _0x12a75b.events.add('autoshopAPI.spawn', async _0x33e3f3 => {
          if (_0x577afa.waitingFade) return;
          _0x577afa.currentVehicle && _0x12a75b.vehicles.exists(_0x577afa.currentVehicle) && (_0x577afa.oldVehicle = _0x577afa.currentVehicle, _0x577afa.currentVehicle.setCollision(false, false), _0x577afa.waitingFade = new _0x272fdd.FadeEntity(_0x577afa.currentVehicle, 'fadeout', 0xc8), await _0x577afa.waitingFade.start(), _0x577afa.waitingFade = false, _0x577afa.oldVehicle.destroy());
          let _0x456a14 = _0x33e3f3;

          if ('urus58' === _0x33e3f3 && (_0x456a14 = 'urus'), _0x577afa.currentVehicle = _0x12a75b.vehicles.new(_0x12a75b.game.joaat(_0x456a14), _0x577afa.vehPosData, {
            'heading': _0x577afa.vehPosR,
            'color': _0x577afa.selectedColor,
            'locked': true,
            'engine': false,
            'alpha': 0x0,
            'dimension': _0x1df3ff.getVariable('id')
          }), _0x577afa.currentVehicle) {
            _0x577afa.hideVehicle = _0x577afa.currentVehicle;

            for (let _0x5f8825 = 0x0; 0x0 === _0x577afa.currentVehicle?.['handle'] && _0x5f8825 < 0x96; ++_0x5f8825) await _0x12a75b.game.sleep(0xa);

            _0x577afa.currentVehicle && (_0x577afa.currentVehicle.setAlpha(0x0), _0x577afa.currentVehicle.setHeading(_0x577afa.vehPosR), _0x577afa.currentVehicle.setNumberPlateText('FOR SALE'), _0x577afa.currentVehicle.freezePosition(true), _0x577afa.currentVehicle.setDirtLevel(0x0), _0x577afa.currentVehicle.setOnGroundProperly(), _0x577afa.currentVehicle.setColours('urus58' === _0x33e3f3 ? 0x80 : _0x577afa.selectedColor, 'urus58' === _0x33e3f3 ? 0x80 : _0x577afa.selectedColor), 'urus58' === _0x33e3f3 && (_0x577afa.currentVehicle.setMod(0x0, 0x0), _0x577afa.currentVehicle.setMod(0xa, 0x0), _0x577afa.currentVehicle.setMod(0xb, 0x7), _0x577afa.currentVehicle.setMod(0xc, 0x5), _0x577afa.currentVehicle.setMod(0xd, 0x5), _0x577afa.currentVehicle.setMod(0x12, 0x0), _0x577afa.currentVehicle.setMod(0x17, 0xfd), _0x577afa.currentVehicle.setMod(0x1c, 0x0), _0x577afa.currentVehicle.setMod(0x30, 0x1)), _0x577afa.waitingFade = new _0x272fdd.FadeEntity(_0x577afa.currentVehicle, 'fadein', 0xc8), await _0x577afa.waitingFade.start(), _0x577afa.waitingFade = false, _0x577afa.currentVehicle);
          }
        }), _0x12a75b.events.add('autoshopAPI.buy', (_0x51d11c, _0x1eaf6a) => {
          if (_0x577afa.waiting) return _0x53959c.api.longNotifyTrans('property.waitPurchaseEnd', 'error');
          'bank' !== _0x1eaf6a || _0x1df3ff.bank && _0x1df3ff.bank.id ? (_0x577afa.waiting = true, _0x12a75b.events.callRemote('718904932', _0x1eaf6a, _0x577afa.bizId, _0x51d11c, _0x577afa.selectedColor)) : _0x53959c.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
        }), _0x12a75b.events.add('autoshopAPI.buySuccess', () => {
          _0x5a0334(), _0x577afa.waiting = false;
        }), _0x12a75b.events.add('autoshopAPI.buyError', () => {
          _0x577afa.waiting = false;
        }), _0x12a75b.events.add('autoshopAPI.setColor', _0x3bb96a => {
          _0x3bb96a != _0x577afa.selectedColor && _0x53959c.api.playSound('tuning/spraycan' + _0x3dd51b.u.integer({
            'min': 0x1,
            'max': 0x3
          }), {
            'volume': 0x1e
          }), _0x577afa.selectedColor = _0x3bb96a, _0x577afa.currentVehicle.setColours(_0x577afa.selectedColor, _0x577afa.selectedColor);
        }), _0x12a75b.events.add('autoshopAPI.exit', () => {
          _0x5a0334(), _0x577afa.inShop = false;
        }), _0x12a75b.events.add('playerLeaveVehicle', () => {
          _0x1df3ff.isInTestDrive && _0x12a75b.events.call('autoshopAPI.stopTestDrive');
        }), _0x12a75b.events.add('playerDeath2', _0x18ca98 => {
          _0x577afa.inShop && _0x18ca98 === _0x1df3ff && _0x12a75b.events.call('autoshopAPI.exit');
        }), _0x12a75b.events.add('render', () => {
          if (_0x577afa.hideVehicle && _0x12a75b.vehicles.exists(_0x577afa.hideVehicle) && (_0x577afa.hideVehicle.setAlpha(0x0), delete _0x577afa.hideVehicle), !_0x577afa.expoRendered && _0x577afa.expoVehicles.length) {
            for (const _0x5a1fea of _0x577afa.expoVehicles) _0x12a75b.vehicles.exists(_0x5a1fea) && _0x5a1fea.handle && (_0x5a1fea.freezePosition(true), _0x5a1fea.setCoordsNoOffset(_0x5a1fea.realCoords.x, _0x5a1fea.realCoords.y, _0x5a1fea.realCoords.z, false, false, false), _0x5a1fea.setOnGroundProperly(), _0x5a1fea.setCollision(false, false), _0x5a1fea.isExpoRendered = true);

            0x0 === _0x577afa.expoVehicles.map(_0x4ac1e9 => !_0x4ac1e9.isExpoRendered).length && (_0x577afa.expoRendered = true);
          }
        });
      },
      0x133dc: (_0x13b012, _0xcd1ed9, _0x86b0d6) => {
        'use strict';

        _0x86b0d6.r(_0xcd1ed9);

        var _0x58254b = _0x86b0d6(0x12a76),
            _0xc13bdc = _0x86b0d6(0x161cd);

        _0xc13bdc.players.local, (_0xc13bdc.events.add('ban.init', () => {
          _0x86b0d6.g.interfaces.ban ? _0x58254b.globalBrowser.toggle('ban', {
            'value': false
          }) : _0x58254b.globalBrowser.toggle('ban', {
            'value': true
          });
        }), _0xc13bdc.events.add('ban.close', () => {
          _0x58254b.globalBrowser.toggle('ban', {
            'value': false
          });
        }));
      },
      0x1112f: (_0x4d69b8, _0x2ea61e, _0x1942f5) => {
        'use strict';

        const a0_0x23f407 = {
          _0x356452: 0x2488,
          _0x15b308: 0x14a5,
          _0xa72360: 0x14a5,
          _0x476143: 0x64c,
          _0x4baa3a: 0x1a07,
          _0x16d5b4: 0x2677,
          _0x263d86: 0x535,
          _0x4989cb: 0x1934,
          _0x41c465: 0x1da5,
          _0x3826fe: 0xb76,
          _0x2e3ff8: 0x19f2,
          _0x5cddf4: 0x112d,
          _0x205878: 0x1d37,
          _0xea8353: 0x1cc0,
          _0x578363: 0x9fa,
          _0x158ce3: 0x19e6,
          _0x528f7c: 0x17a5,
          _0x5c825c: 0x97e,
          _0x482b8c: 0xf8c,
          _0x29360c: 0x14d2,
          _0x640ac8: 0x1da5,
          _0x23f710: 0xe19,
          _0x566d18: 0x118b,
          _0x45785d: 0x256d,
          _0x5da2bc: 0x1757,
          _0xc104d5: 0x14d2,
          _0x28116b: 0x1da5,
          _0x4ea5d2: 0x1874,
          _0x525da5: 0x14d2,
          _0x66667d: 0x13e2,
          _0x579b6e: 0x112d,
          _0x36763d: 0x18c1,
          _0x5366e7: 0x1ca0,
          _0x2dd526: 0x20f4,
          _0x1fe312: 0x1757,
          _0x4bd7d5: 0x7a9,
          _0x42085c: 0x22c8,
          _0x197e18: 0x1da5,
          _0x5f3c27: 0x225b,
          _0x8ac97b: 0x1757,
          _0x530b80: 0x953,
          _0x38bc25: 0x1a82,
          _0x2c63f7: 0x396,
          _0x2d0439: 0x1da5,
          _0x3549e5: 0xe19,
          _0x4f6e1f: 0x1330,
          _0x1b64d6: 0x748,
          _0x1b0967: 0x14d2,
          _0x170330: 0x1da5,
          _0x4f92b8: 0x1c63,
          _0x520ed: 0x14d2,
          _0x3998bd: 0x68f,
          _0x1f1a98: 0x1d3,
          _0x20a142: 0x1741
        },
              a0_0x47bc48 = {
          _0x1fbedc: 0x2488
        };

        _0x1942f5.r(_0x2ea61e);

        var _0x561eb9 = _0x1942f5(0x16a21),
            _0x2b70bd = _0x1942f5(0x12a76),
            _0x1ffb18 = _0x1942f5(0x161cd);

        const _0x546f6e = _0x1ffb18.players.local;

        let _0x258595, _0x267045;

        _0x1ffb18.events.add('bankCard.show', (_0x4b01eb, _0x517a67) => {
          _0x258595 = _0x4b01eb, _0x267045 = JSON.parse(_0x517a67), _0x2b70bd.globalBrowser.emit('toggle_bankCard', {
            'value': true
          });
        });

        const _0x1092c9 = () => {
          switch (_0x258595) {
            case 'clothesShop.server.buyClothes':
              _0x1ffb18.events.call('clothesShop.buyClothesError');

              break;

            case 'store.server.buy':
              _0x1ffb18.events.call('store.buyError');

              break;

            case 'mobile_shops.server.buy':
              _0x1ffb18.events.call('mobile_shops.buyError');

              break;

            case 'ammo.server.buy':
              _0x1ffb18.events.call('ammo.buyError');

              break;

            case 'autoshopAPI.server.buy':
              _0x1ffb18.events.call('autoshopAPI.buyError');

              break;

            case 'tattoo.server.buyTattoo':
              _0x1ffb18.events.call('tattoo.buyError');

              break;

            case 'barberShop.server.buy':
              _0x1ffb18.events.call('barberShop.buyError');

              break;

            case 'rentcar.server.buy':
              _0x1ffb18.events.call('rentcar.rentResult');

              break;

            case 'tuning.server.buy':
              _0x1ffb18.events.call('tuning.setResult');

              break;

            case 'club.server.buy':
              _0x1ffb18.events.call('club.buyError');

              break;

            case 'carWash.server.wash':
              _0x1ffb18.events.call('carWash.washResult');

              break;

            case 'gas.server.buy':
            case 'gas.server.tryFill':
              _0x1ffb18.events.call('gas.result');

          }
        };

        _0x1ffb18.events.add('bankCard.close', () => {
          _0x2b70bd.globalBrowser.emit('toggle_bankCard', {
            'value': false
          }), _0x1092c9();
        }), _0x1ffb18.events.add('bankCard.validate', _0x5e3734 => {
          if (_0x2b70bd.globalBrowser.emit('toggle_bankCard', {
            'value': false
          }), !_0x546f6e.bank || !_0x546f6e.bank.pin || _0x546f6e.bank.pin !== _0x5e3734) return _0x1092c9(), _0x561eb9.api.longNotifyTrans('bank.wrongPin', 'error'), void _0x561eb9.api.playSound('error');

          switch (_0x258595) {
            case 'clothesShop.server.buyClothes':
              _0x1ffb18.events.callRemote('4057236684', _0x267045.key, _0x267045.type, _0x267045.category, _0x267045.isProp, _0x267045.component, _0x267045.drawable, _0x267045.texture, _0x267045.title, _0x267045.saveType, _0x267045.isColored, JSON.stringify(_0x267045.colors), true);

              break;

            case 'store.server.buy':
              _0x1ffb18.events.callRemote('3409426905', JSON.stringify(_0x267045.item), _0x267045.type, true);

              break;

            case 'mobile_shops.server.buy':
              _0x1ffb18.events.callRemote('3239613569', JSON.stringify(_0x267045.item), _0x267045.type, true);

              break;

            case 'ammo.server.buy':
              _0x1ffb18.events.callRemote('4198636701', _0x267045.itemId, _0x267045.type, _0x267045.weaponTint || 0x0, true);

              break;

            case 'autoshopAPI.server.buy':
              _0x1ffb18.events.callRemote('718904932', _0x267045.method, _0x267045.bizId, _0x267045.model, _0x267045.color, true);

              break;

            case 'tattoo.server.buyTattoo':
              _0x1ffb18.events.callRemote('602069858', _0x267045.key, _0x267045.type, JSON.stringify(_0x267045.item), _0x267045.category, true);

              break;

            case 'barberShop.server.buy':
              _0x1ffb18.events.callRemote('3197548184', _0x267045.key, JSON.stringify(_0x267045.data), true);

              break;

            case 'rentcar.server.buy':
              _0x1ffb18.events.callRemote('1426492631', _0x267045.method, _0x267045.period, _0x267045.model, _0x267045.color, _0x267045.partyId, true);

              break;

            case 'tuning.server.buy':
              _0x1ffb18.events.callRemote('4258941838', _0x267045.method, _0x267045.biz, _0x267045.category, _0x267045.modType, _0x267045.modIndex, _0x267045.indexCount, true);

              break;

            case 'club.server.buy':
              _0x1ffb18.events.callRemote('3959349840', _0x267045.itemId, _0x267045.type, _0x267045.barType, true);

              break;

            case 'carWash.server.wash':
              _0x1ffb18.events.callRemote('3479905518', _0x267045.category, _0x267045.method, _0x267045.bizId, true);

              break;

            case 'gas.server.buy':
              _0x1ffb18.events.callRemote('51702924', _0x267045.type, _0x267045.itemId, true);

              break;

            case 'gas.server.tryFill':
              _0x1ffb18.events.callRemote('681311381', _0x267045.fuelType, _0x267045.payType, _0x267045.count, true);

          }
        });
      },
      0x124e1: (_0x51c842, _0x564fe9, _0x1b9866) => {
        'use strict';

        const a0_0x1607f3 = {
          _0x3a3f06: 0x2488,
          _0x2ec25d: 0x4a3,
          _0x8d7e1b: 0x535,
          _0x40f24c: 0x52c
        },
              a0_0x1a970b = {
          _0x9781bc: 0x14a5,
          _0xa0cf7e: 0x2488,
          _0x152998: 0x1d3d
        },
              a0_0x3d1f3b = {
          _0x447a43: 0x14d2,
          _0x4ee68d: 0x1da5
        },
              a0_0xf9cc2d = {
          _0x536ae7: 0x2488,
          _0x3bfc68: 0x1483
        },
              a0_0x3a0d8e = {
          _0x158d4d: 0x1da5
        },
              a0_0x3288c7 = {
          _0x2429ee: 0x2488,
          _0x4b15d3: 0x1a3
        },
              a0_0x51ce9b = {
          _0x5be8d2: 0x553
        },
              a0_0x4c4f1 = {
          _0x4be425: 0x1da5,
          _0x340a36: 0x1544
        },
              a0_0x20742a = {
          _0x5c84ee: 0x1a3
        },
              a0_0x3af26c = {
          _0x1a8fdc: 0x1da5,
          _0x9bc7d: 0x3cf
        },
              a0_0x375cd4 = {
          _0x553c62: 0x64c,
          _0x44d9ed: 0x38d,
          _0x394716: 0x535,
          _0xeab49e: 0x1a07
        },
              a0_0x17110b = {
          _0x3b8902: 0x14d2
        },
              a0_0x554590 = {
          _0xc0b5c1: 0x535,
          _0x3c6daa: 0x13b0,
          _0x1875cd: 0x535
        },
              a0_0x499e96 = {
          _0x4c89d5: 0x242c,
          _0x202925: 0x4a3,
          _0x1045aa: 0x14a5,
          _0x342230: 0x535,
          _0x2f5cb5: 0x13b0,
          _0x58df5f: 0x535,
          _0x5499e0: 0x52c,
          _0x59c521: 0x1da5
        },
              a0_0x1c1137 = {
          _0x10c1c6: 0x980
        },
              a0_0x160330 = {
          _0xb6f49e: 0x2488,
          _0x18ca49: 0x4a3,
          _0x49fb1f: 0x980,
          _0x2c8489: 0x535
        },
              a0_0x3ca654 = {
          _0x49990a: 0xc26,
          _0x286d4b: 0x22ba,
          _0x540d3a: 0xda6,
          _0x46e5c8: 0x1d55
        },
              a0_0x475e75 = {
          _0x16bcd7: 0x14a5,
          _0x417fa8: 0x1a5
        };

        _0x1b9866.r(_0x564fe9);

        var _0x195ecd = _0x1b9866(0x16a21),
            _0x202e15 = _0x1b9866(0x12a76),
            _0xafe99a = _0x1b9866(0xda37),
            _0x5948b0 = _0x1b9866(0x161cd);

        const _0x2400b2 = _0x5948b0.players.local;
        let _0xe6161a = false,
            _0x4a6ed5 = false;
        [{
          'x': 313.7214,
          'y': -278.9084,
          'z': 54.1707
        }, {
          'x': 149.7842,
          'y': -1040.6875,
          'z': 29.374
        }, {
          'x': -1212.69,
          'y': -330.8,
          'z': 37.78
        }, {
          'x': -2962.57,
          'y': 482.74,
          'z': 15.7
        }, {
          'x': 1175.0581,
          'y': 2706.6508,
          'z': 38.094
        }, {
          'x': -351.19,
          'y': -49.8,
          'z': 49.04
        }, {
          'x': 248.4066,
          'y': 222.9089,
          'z': 106.2866
        }, {
          'x': -112.3442,
          'y': 6468.9677,
          'z': 31.6267
        }].forEach(_0x30b888 => {
          new _0xafe99a.ActionColshape({
            'text': 'displayHelpString.toOpenBank',
            'textDuration': 0x1388,
            'vehicle': false,
            'position': new _0x5948b0.Vector3(_0x30b888.x, _0x30b888.y, _0x30b888.z),
            'range': 0x1,
            'onTrigger': () => {
              _0x2400b2.bank && _0x2400b2.bank.id ? _0x5948b0.events.call('bank.init') : _0x5948b0.events.call('bankReg.init');
            },
            'onLeave': () => {
              _0x202e15.globalBrowser.toggle('bankReg', {
                'value': false
              });
            }
          }).marker = _0x5948b0.markers.new(0x1d, new _0x5948b0.Vector3(_0x30b888.x, _0x30b888.y, _0x30b888.z), 0x1, {
            'color': [0x2e, 0xcc, 0x71, 0x64],
            'visible': true,
            'scale': 0.7
          });
        });
        let _0x56e8c1 = false,
            _0x560b3a = false;
        _0x5948b0.events.add('bankReg.init', () => {
          _0x560b3a || (_0x1b9866.g.interfaces.bankReg && !_0xe6161a ? (_0x202e15.globalBrowser.toggle('bankReg', {
            'value': false
          }), _0x195ecd.api.toggleHud(true), _0x195ecd.api.toggleChat(true)) : _0x1b9866.g.currentInterface || (_0x56e8c1 ? (_0x202e15.globalBrowser.toggle('bankReg', {
            'value': true
          }), _0x195ecd.api.toggleHud(false), _0x195ecd.api.toggleChat(false)) : (_0x560b3a = true, _0x5948b0.events.callRemote('3558655335'))));
        }), _0x5948b0.events.add('bankReg.close', () => {
          _0x202e15.globalBrowser.toggle('bankReg', {
            'value': false
          }), _0x195ecd.api.toggleHud(true), _0x195ecd.api.toggleChat(true);
        }), _0x5948b0.events.add('bankReg.preinitResult', _0x2dc888 => {
          _0x202e15.globalBrowser.emit('bank_preinit', {
            'tariffs': _0x2dc888
          }), _0x202e15.globalBrowser.toggle('bankReg', {
            'value': true
          }), _0x195ecd.api.toggleHud(false), _0x195ecd.api.toggleChat(false), _0x560b3a = false, _0x56e8c1 = true;
        }), _0x5948b0.events.add('bankReg.tryRegCard', _0x556e4c => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0xe6161a = true, _0x5948b0.events.callRemote('2282740518', _0x556e4c));
        }), _0x5948b0.events.add('bankReg.tryRegCardResult', _0x1d0680 => {
          _0x4a6ed5 = false, _0x1d0680 ? _0x202e15.globalBrowser.emit('bankReg_setNewCardInfo', JSON.stringify(_0x1d0680)) : _0x202e15.globalBrowser.toggle('bankReg', {
            'value': false
          });
        }), _0x5948b0.events.add('bankReg.finishReg', _0x36b0f2 => {
          _0xe6161a = true, _0x202e15.globalBrowser.toggle('bankReg', {
            'value': false
          }), _0x195ecd.api.toggleHud(true), _0x195ecd.api.toggleChat(true), _0x5948b0.events.callRemote('1771615281', _0x36b0f2);
        }), _0x5948b0.events.add('bank.init', () => {
          if (_0x1b9866.g.interfaces.bank) _0x202e15.globalBrowser.toggle('bank', {
            'value': false
          }), _0x195ecd.api.toggleHud(true), _0x195ecd.api.toggleChat(true);else {
            if (!_0x1b9866.g.currentInterface) {
              if (_0x4a6ed5) return;
              _0x5948b0.events.callRemote('1620575783'), _0x4a6ed5 = true;
            }
          }
        }), _0x5948b0.events.add('bank.initResult', (_0xce1231, _0x34b2e6, _0xb4e815, _0x226069, _0x32ca46 = null, _0x2b5af8 = null) => {
          _0x4a6ed5 = false, _0x202e15.globalBrowser.toggle('bank', {
            'value': true,
            'cardInfo': _0xce1231,
            'transactions': _0x34b2e6,
            'deposit': _0x226069,
            'expenses': _0xb4e815,
            'tariffs': _0x32ca46,
            'deposits': _0x2b5af8
          }), _0x195ecd.api.toggleHud(false), _0x195ecd.api.toggleChat(false);
        }), _0x5948b0.events.add('bank.getHistory', _0xbb4ba => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('683562273', _0xbb4ba));
        }), _0x5948b0.events.add('bank.getHistoryResult', _0x4e4a25 => {
          _0x4a6ed5 = false, _0x202e15.globalBrowser.emit('bank_getHistoryResult', JSON.stringify(_0x4e4a25));
        }), _0x5948b0.events.add('bank.getExpenses', _0x34f892 => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('2637352881', _0x34f892));
        }), _0x5948b0.events.add('bank.getExpensesResult', _0x52cc9d => {
          _0x4a6ed5 = false, _0x202e15.globalBrowser.emit('bank_getExpensesResult', JSON.stringify(_0x52cc9d));
        }), _0x5948b0.events.add('bank.changePin', _0x3b67d6 => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('2573499708', _0x3b67d6));
        }), _0x5948b0.events.add('bank.changePinResult', _0x455aa2 => {
          _0x4a6ed5 = false, _0x455aa2 && (_0x2400b2.bank.pin = _0x455aa2, _0x202e15.globalBrowser.emit('bank_updatePin', {
            'pin': _0x455aa2
          }), _0x195ecd.api.longNotifyTrans('bank.changePinSuccess', {
            'code': _0x455aa2
          }, 'success'));
        }), _0x5948b0.events.add('bank.getRestoreCode', () => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('3085591142'));
        }), _0x5948b0.events.add('bank.getRestoreCodeResult', _0x4f78c4 => {
          _0x4a6ed5 = false, _0x4f78c4 && _0x202e15.globalBrowser.emit('bank_getRestoreCodeResult', JSON.stringify(_0x4f78c4));
        }), _0x5948b0.events.add('bank.restoreCode', () => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('528419746'));
        }), _0x5948b0.events.add('bank.restoreCodeResult', _0x17494e => {
          _0x4a6ed5 = false, _0x17494e && _0x202e15.globalBrowser.emit('bank_restoreCodeResult', JSON.stringify(_0x17494e));
        }), _0x5948b0.events.add('bank.send', (_0x1e4303, _0x166bc6, _0x54e122, _0x34caa2) => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('3205326188', _0x1e4303, _0x166bc6, _0x54e122, _0x34caa2));
        }), _0x5948b0.events.add('bank.sendResult', (_0x23a2c1, _0x598db6, _0x4ecd32, _0x13fc3a) => {
          _0x4a6ed5 = false, _0x23a2c1 && (_0x598db6 = parseInt(_0x598db6, 0x24), _0x202e15.globalBrowser.emit('bank_sendResult', {
            'amount': _0x598db6,
            'monthTransfers': _0x4ecd32,
            'transaction': _0x13fc3a
          }));
        }), _0x5948b0.events.add('bank.openDeposit', (_0x156984, _0x288855, _0x52066f) => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('3183915678', _0x156984, _0x288855, _0x52066f));
        }), _0x5948b0.events.add('bank.openDepositResult', (_0x77f1e2, _0x3fd126) => {
          _0x4a6ed5 = false, null != _0x77f1e2 && (_0x77f1e2 = parseInt(_0x77f1e2, 0x24), _0x202e15.globalBrowser.emit('bank_openDepositResult', {
            'amount': _0x77f1e2,
            'depositData': _0x3fd126
          }));
        }), _0x5948b0.events.add('bank.closeDeposit', _0x557fad => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('440555351', _0x557fad));
        }), _0x5948b0.events.add('bank.closeDepositResult', _0x521665 => {
          _0x4a6ed5 = false, null != _0x521665 && (_0x521665 = parseInt(_0x521665, 0x24), _0x202e15.globalBrowser.emit('bank_closeDepositResult', {
            'amount': _0x521665
          }));
        }), _0x5948b0.events.add('bank.cashOperation', (_0x3f95ee, _0xde472, _0x125924) => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('3205676964', _0x3f95ee, _0xde472, _0x125924));
        }), _0x5948b0.events.add('bank.cashOperationResult', (_0x388ecf, _0x591f66, _0x5bf2cc) => {
          _0x4a6ed5 = false, _0x388ecf && (_0x591f66 = parseInt(_0x591f66, 0x24), _0x202e15.globalBrowser.emit('bank_cashOperationResult', {
            'amount': _0x591f66,
            'monthOuts': _0x5bf2cc
          }));
        }), _0x5948b0.events.add('bank.changeTariff', _0x21d207 => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('1844145434', _0x21d207));
        }), _0x5948b0.events.add('bank.changeTariffResult', (_0x1e70f0, _0x14f9d5, _0x54d962) => {
          _0x4a6ed5 = false, _0x1e70f0 && (_0x14f9d5 = parseInt(_0x14f9d5, 0x24), _0x202e15.globalBrowser.emit('bank_changeTariffResult', {
            'amount': _0x14f9d5,
            'tariff': _0x54d962
          }));
        }), _0x5948b0.events.add('bank.depositCashIn', _0x1f0827 => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('1507949858', _0x1f0827));
        }), _0x5948b0.events.add('bank.depositCashInResult', (_0x31c533, _0x3813e9, _0x30238d) => {
          _0x4a6ed5 = false, _0x31c533 && (_0x3813e9 = parseInt(_0x3813e9, 0x24), _0x202e15.globalBrowser.emit('bank_depositCashInResult', {
            'amount': _0x3813e9,
            'deposit': _0x30238d
          }));
        }), _0x5948b0.events.add('bank.payTariff', () => {
          _0x4a6ed5 || (_0x4a6ed5 = true, _0x5948b0.events.callRemote('1449909228'));
        }), _0x5948b0.events.add('bank.payTariffResult', _0x22ca10 => {
          _0x4a6ed5 = false, _0x22ca10 && (_0x2400b2.bank.blocked = false, _0x202e15.globalBrowser.emit('bank_payTariffResult'));
        }), _0x5948b0.events.add('bank.close', () => {
          _0x202e15.globalBrowser.toggle('bank', {
            'value': false
          }), _0x195ecd.api.toggleHud(true), _0x195ecd.api.toggleChat(true);
        });
      },
      0x13c50: (_0x416742, _0x33b7b0, _0x4b6572) => {
        'use strict';

        const a0_0x2369e9 = {
          _0x1419dc: 0x14d0
        },
              a0_0x6ae9d0 = {
          _0x5ee6a7: 0x1e54,
          _0x49dc53: 0x4b6,
          _0x31418b: 0xe5f,
          _0x41e2c5: 0x11f4,
          _0x54276c: 0x20b3
        },
              a0_0x2d1edb = {
          _0x4483cd: 0xe01,
          _0x40aef3: 0x535,
          _0x4e8fc4: 0x2034,
          _0x571cb5: 0x686,
          _0x459417: 0xd6d,
          _0x523e82: 0xc46,
          _0x88950d: 0x2488,
          _0x4a589c: 0x1a3
        },
              a0_0x34e594 = {
          _0xe10102: 0xc46,
          _0x1e86c8: 0x2034,
          _0xd86774: 0x686,
          _0x490137: 0x1d2,
          _0x50964c: 0xd6d,
          _0x54351c: 0x112d
        },
              a0_0x575ebf = {
          _0x5d9d39: 0x22c,
          _0x5e3987: 0x19d2,
          _0x19777b: 0x535,
          _0x16c50e: 0x2034,
          _0x43359f: 0x1d2,
          _0x13d759: 0xd6d,
          _0x5076ef: 0xc46,
          _0x206259: 0x2488,
          _0x2f7215: 0xcaa,
          _0x3b08ee: 0x112d
        },
              a0_0x336396 = {
          _0x241338: 0x535,
          _0x5d2b2a: 0x1349,
          _0x58f285: 0xbb1,
          _0x2372c7: 0x1a2a,
          _0xa9905d: 0x535,
          _0x217d66: 0x2034,
          _0x16f001: 0x686,
          _0x591f05: 0x1d2,
          _0x21b28c: 0xd6d,
          _0x1a68e7: 0x1ecd,
          _0x1485f7: 0x2488,
          _0x593325: 0x1a3,
          _0x32d9bc: 0xcaa,
          _0x59b88c: 0x112d
        },
              a0_0x2a05e5 = {
          _0x39e5a9: 0x17f,
          _0x214b28: 0xa9d,
          _0x3417b4: 0x16c5
        },
              a0_0x332259 = {
          _0x4a721d: 0x535,
          _0x347b19: 0x1f15,
          _0x45159e: 0xf6b,
          _0x246f42: 0x24d7,
          _0x43af27: 0x385,
          _0x13a3ec: 0x213a,
          _0x20afed: 0x19d6,
          _0x105612: 0x14d2,
          _0x4f2c78: 0x2492,
          _0x1c5329: 0x1a5,
          _0x385d52: 0xd9b,
          _0x56e278: 0x1793,
          _0x3c6ac7: 0x1e9c,
          _0x257592: 0x1f30,
          _0x53dae4: 0x1ffa
        },
              a0_0x4e3ff3 = {
          _0x318dc7: 0x1793,
          _0x70a4d1: 0x1695,
          _0x29e7e7: 0x1f30,
          _0x5ae2f4: 0x1f30,
          _0x53f35e: 0x7fe,
          _0x1c55fa: 0x2358
        },
              a0_0x55b7ae = {
          _0x1b8f5b: 0x8d5,
          _0x3eafe0: 0x1d66,
          _0x25a605: 0x2385
        },
              a0_0x1ed435 = {
          _0x456cba: 0x535,
          _0x4f5d73: 0x3e9,
          _0x193b9e: 0x14d2,
          _0x308f39: 0x24b4
        },
              a0_0x48812a = {
          _0x127b19: 0x6e2,
          _0x3164ea: 0x265d,
          _0x4ae11f: 0x814,
          _0x2497c8: 0x1bfa,
          _0x1b1e1f: 0x22c,
          _0x2cce95: 0x1bfa,
          _0x27747b: 0x1306
        },
              a0_0x58e531 = {
          _0x570090: 0x1306,
          _0xf23fde: 0xc46,
          _0x300304: 0x1ecd,
          _0x1404ea: 0xf58,
          _0x4c5a6e: 0x1874,
          _0x54d9ac: 0x22c,
          _0x39ae4a: 0x265d,
          _0x3f11b5: 0x1bfa,
          _0x1f1d34: 0x1bfa,
          _0x148690: 0x1dc8,
          _0x9394f7: 0x21e0,
          _0xf6a8b2: 0x2640,
          _0x467ade: 0x987,
          _0x282d0e: 0x2379,
          _0x45bd26: 0x2379
        },
              a0_0x59106f = {
          _0x23ca10: 0x4a3,
          _0x2f454e: 0x41f,
          _0xec3c1b: 0x535,
          _0x1fceb4: 0x3e9,
          _0x58585b: 0x52c,
          _0x39c9d7: 0x1cd8
        },
              a0_0x2af45a = {
          _0x25941a: 0x9c5,
          _0x53edcc: 0x535,
          _0x516338: 0x18bb,
          _0x3d694a: 0x221,
          _0x5cf1f3: 0x2385
        };

        _0x4b6572.r(_0x33b7b0);

        var _0x25ed15 = _0x4b6572(0x16a21),
            _0x514c70 = _0x4b6572(0x6611),
            _0x4ab259 = _0x4b6572(0x5789),
            _0x450199 = _0x4b6572(0x66f9),
            _0x19d964 = _0x4b6572(0x137c),
            _0x214613 = _0x4b6572.n(_0x19d964),
            _0x4e5bad = _0x4b6572(0x12a76),
            _0x408a89 = _0x4b6572(0x161cd);

        const _0x46bb66 = _0x408a89.players.local,
              _0x25f28e = [0x30801, 0x29c01, 0x30d01, 0x26101, 0x22501, 0x2c001];
        let _0x5e88bf = false;
        _0x408a89.events.add('playerEnterInterior', _0x2d0206 => {
          _0x25f28e.includes(_0x2d0206) ? _0x25ed15.api.playPedSpeech(_0x25ed15.api.getNearestPed(0x32).id, 'SHOP_GREET', 'S_F_M_FEMBARBER_BLACK_MINI_01', 'SPEECH_PARAMS_FORCE') : 0x28601 === _0x2d0206 && _0x25ed15.api.playPedSpeech(_0x25ed15.api.getNearestPed(0x32).id, 'SHOP_GREET', 'S_M_M_HAIRDRESSER_01_BLACK_MINI_01', 'SPEECH_PARAMS_FORCE');
        }), _0x408a89.events.add('playerExitInterior', _0x3b39fd => {
          _0x25f28e.includes(_0x3b39fd) ? (_0x25ed15.api.playPedSpeech(_0x25ed15.api.getNearestPed(0x32).id, 'SHOP_GOODBYE', 'S_F_M_FEMBARBER_BLACK_MINI_01', 'SPEECH_PARAMS_FORCE'), _0x5e88bf = false) : 0x28601 === _0x3b39fd && (_0x25ed15.api.playPedSpeech(_0x25ed15.api.getNearestPed(0x32).id, 'SHOP_GOODBYE', 'S_M_M_HAIRDRESSER_01_BLACK_MINI_01', 'SPEECH_PARAMS_FORCE'), _0x5e88bf = false);
        }), _0x408a89.events.add('playerDeath2', _0x532913 => {
          _0x5bf554 && _0x532913 === _0x46bb66 && (_0x5e88bf = false, _0x4e5bad.globalBrowser.toggle('barbershop', {
            'value': false
          }), _0x446863(), _0x25ed15.api.setDiscordStatus(), _0x25ed15.api.toggleHud(true), _0x25ed15.api.toggleChat(true), _0x25ed15.api.toggleRadar(true));
        });
        const _0x1ff497 = [],
              _0x9aa190 = [],
              _0x302ffc = [];

        let _0x4dde46,
            _0x441339,
            _0x55b261,
            _0x2343ed,
            _0x5ef4f9,
            _0x2718eb,
            _0x865211 = false,
            _0xf45c04 = -0x1,
            _0x469aa2 = false,
            _0x3f4af2 = -0x1,
            _0x3ecd5c = [];

        const _0x452c8f = {
          0x1: [0x0, 0x0],
          0x2: [0x0, 0x0],
          0x5: [0x0, 0x0],
          0x8: [0x0, 0x0],
          0xa: [0x0, 0x0]
        },
              _0x310781 = {
          'headOverlayColors': {}
        };
        _0x4b6572.g.inBarbershop = false, Math.max(_0x25ed15.api.invokeNative('_GET_NUM_HAIR_COLORS'), _0x25ed15.api.invokeNative('_GET_NUM_MAKEUP_COLORS'));

        for (let _0x1fe391 = 0x0; _0x1fe391 <= 0x3d; _0x1fe391++) _0x302ffc.push(_0x1fe391), _0x9aa190.push(_0x1fe391), _0x1ff497.push(_0x1fe391);

        let _0x5bf554 = null;
        _0x408a89.events.add('barbershop.init', async (_0x21a3fc, _0x5eb84e) => {
          if (_0x4b6572.g.currentInterface || _0x5bf554) return;
          if (_0x310781.headOverlayColors = { ..._0x452c8f
          }, _0x25ed15.api.usingSystemAnim(true), _0x25ed15.api.fadeOut(0x1f4), _0x25ed15.api.toggleHud(false), await _0x408a89.game.sleep(0x1f4), _0x408a89.events.callRemote('3702382805', _0x46bb66.remoteId + 0x3e8), await _0x408a89.game.sleep(0xfa), _0x5bf554 = _0x21a3fc, _0x3ecd5c = _0x5eb84e, _0x4b6572.g.inBarbershop = true, _0x4dde46 = _0x214613().places.filter(_0x3f0f78 => _0x3f0f78.id === _0x21a3fc)[0x0], !_0x4dde46) return _0x25ed15.api.fadeIn(0x1f4);
          _0xf45c04 = 0x0, _0x865211 = true, _0x408a89.game.ui.requestAdditionalText('HAR_MNU', 0x9), _0x408a89.game.audio.requestAmbientAudioBank('SCRIPT\\Hair_Cut', false);
          const _0x373556 = _0x46bb66.position,
                _0x58678d = _0x46bb66.dimension,
                _0x186d75 = _0x4dde46.chair,
                _0x2a376c = _0x4dde46.exit.position;
          _0x441339 = _0x408a89.peds.new(_0x4dde46.pedModel, _0x373556, 0x0, _0x58678d), _0x2343ed = await (0x0, _0x450199.n)(_0x214613().scissors.model, _0x4dde46.scissorsPosition, {
            'dimension': _0x58678d
          }), _0x441339.taskLookAt(_0x46bb66.handle, -0x1, 0x800, 0x3), _0x25ed15.api.setPlayerPos(_0x46bb66, new _0x408a89.Vector3(_0x2a376c.x, _0x2a376c.y, _0x2a376c.z)), _0x46bb66.setHeading(_0x4dde46.exit.heading), _0x5819fc('SHOP_HAIR_WHAT_WANT'), await _0x25ed15.api.requestAnimDict(_0x4dde46.animDict), _0x55b261 = _0x408a89.cameras.new('default'), _0x46bb66.taskPlayAnimAdvanced(_0x4dde46.animDict, 'player_enterchair', _0x186d75.position.x, _0x186d75.position.y, _0x186d75.position.z, 0x0, 0x0, _0x186d75.heading, 0x3e8, -0x3e8, -0x1, 0x160a, 0x0, 0x2, 0x1), _0x19de21('keeper_enterchair', 'scissors_enterchair');
          const _0x410cc6 = _0x4dde46.cam;
          if (!_0x410cc6.position) return _0x25ed15.api.fadeIn(0x1f4);

          const _0x1b78b4 = _0x408a89.game.object.getObjectOffsetFromCoords(_0x410cc6.position.x, _0x410cc6.position.y, _0x410cc6.position.z, _0x410cc6.heading, _0x410cc6.offset.x, _0x410cc6.offset.y, _0x410cc6.offset.z);

          _0x55b261.setCoord(_0x1b78b4.x, _0x1b78b4.y, _0x1b78b4.z), _0x55b261.pointAtCoord(_0x410cc6.position.x, _0x410cc6.position.y, _0x410cc6.position.z), _0x55b261.setFov(0x2f), _0x25ed15.api.fadeIn(0x1f4), _0x55b261.setActive(true), _0x408a89.game.cam.renderScriptCams(true, false, 0xbb8, true, false, 0x0), _0x25ed15.api.setDiscordStatus('barbershop'), _0x25ed15.api.toggleHud(false), _0x25ed15.api.toggleChat(false);
        }), _0x408a89.events.add('barbershop.buy', _0x134554 => {
          if (_0x5e88bf) return _0x25ed15.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          if (_0x134554 = JSON.parse(_0x134554), _0x25ed15.api.cameraRotation.reset(), !('bank' !== _0x134554.method || _0x46bb66.bank && _0x46bb66.bank.id)) return void _0x25ed15.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
          const _0x3c2c17 = { ..._0x134554
          };
          _0x3c2c17.item && delete _0x3c2c17.item.cost, _0x5e88bf = true, _0x408a89.events.callRemote('3197548184', _0x5bf554, JSON.stringify(_0x3c2c17));
        }), _0x408a89.events.add('barbershop.setCategory', _0x218ed3 => {
          switch (_0x46bb66 && (0x0, _0x514c70.L6)(_0x46bb66, 0x1, 0x0, 0x0, 0x1), _0x218ed3) {
            case 0x0:
              _0x408a89.events.callRemote('629931721'), _0x408a89.events.call('resetClothes');
              break;

            case 'hair':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x46bb66.setHairColor(0x0, 0x0), _0x49fe8a(_0x218ed3);
              break;

            case 'eyecolor':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x2f16cb(_0x218ed3);
              break;

            case 'facialhair':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x46bb66.setHeadOverlayColor(0x1, 0x1, 0x0, 0x0), _0x310781.headOverlayColors[0x1] = [0x0, 0x0], _0x300ece(_0x218ed3, 0x1);
              break;

            case 'eyebrows':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x46bb66.setHeadOverlayColor(0x2, 0x1, 0x0, 0x0), _0x310781.headOverlayColors[0x2] = [0x0, 0x0], _0x300ece(_0x218ed3, 0x2);
              break;

            case 'chesthair':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x8, 0xf, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x3, 0xf, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0xb, 0xf, 0x0, 0x0)), _0x46bb66.setHeadOverlayColor(0xa, 0x1, 0x0, 0x0), _0x310781.headOverlayColors[0xa] = [0x0, 0x0], _0x300ece(_0x218ed3, 0xa);
              break;

            case 'makeup':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x53afdc(_0x218ed3);
              break;

            case 'face':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x818e87(_0x218ed3);
              break;

            case 'lipstick':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x46bb66.setHeadOverlayColor(0x8, 0x2, 0x0, 0x0), _0x310781.headOverlayColors[0x8] = [0x0, 0x0], _0x1d59ed(_0x218ed3);
              break;

            case 'blush':
              _0x46bb66 && (_0x46bb66.clearAllProps(), (0x0, _0x514c70.L6)(_0x46bb66, 0x7, 0x0, 0x0, 0x0), (0x0, _0x514c70.L6)(_0x46bb66, 0x9, 0x0, 0x0, 0x0)), _0x46bb66.setHeadOverlayColor(0x5, 0x2, 0x0, 0x0), _0x310781.headOverlayColors[0x5] = [0x0, 0x0], _0x5834ff(_0x218ed3);
          }
        });
        let _0x420aff = null;
        _0x408a89.events.add('playerCommand', async _0x533e6c => {
          if (_0x25ed15.api.getAdmin(_0x408a89.players.local) < 0x1) return;

          const _0x30e4db = _0x533e6c.split(/[ ]+/),
                _0x4baf86 = _0x30e4db[0x0];

          _0x30e4db.shift(), 'overlay' === _0x4baf86 ? _0x46bb66.setHeadOverlay(parseInt(_0x30e4db[0x0]), parseInt(_0x30e4db[0x1]), 0x1, 0x1, 0x1) : 'ttest1' === _0x4baf86 && (_0x420aff || (_0x420aff = _0x408a89.peds.new(_0x408a89.players.local.model, _0x408a89.players.local.position, 0x0, 0x0), await _0x25ed15.api.streamIn(_0x420aff)), _0x408a89.game.invoke('0xCC9682B8951C5229', _0x408a89.players.local.handle, parseInt(_0x30e4db[0x0]), parseInt(_0x30e4db[0x1]), parseInt(_0x30e4db[0x2]), parseInt(_0x30e4db[0x3])));
        }), _0x408a89.events.add('barbershop.setItem', _0xa52212 => {
          if (_0xa52212 = JSON.parse(_0xa52212), ['facialhair', 'eyebrows', 'chesthair', 'makeup', 'blush', 'face', 'lipstick'].includes(_0xa52212.category)) switch (_0x46bb66.setHeadOverlay(_0xa52212.overlay, _0xa52212.id, 0x1, 0x1, 0x1), _0xa52212.category) {
            case 'facialhair':
              {
                const [_0x5e60bb, _0x47ef64] = _0x310781.headOverlayColors[0x1];

                _0x46bb66.setHeadOverlayColor(0x1, 0x1, _0x5e60bb, _0x47ef64);

                break;
              }

            case 'eyebrows':
              {
                const [_0x323d89, _0x199088] = _0x310781.headOverlayColors[0x2];

                _0x46bb66.setHeadOverlayColor(0x2, 0x1, _0x323d89, _0x199088);

                break;
              }

            case 'blush':
              {
                const [_0x30f19d, _0x592e22] = _0x310781.headOverlayColors[0x5];

                _0x46bb66.setHeadOverlayColor(0x5, 0x2, _0x30f19d, _0x592e22);

                break;
              }

            case 'lipstick':
              {
                const [_0x558986, _0x32843d] = _0x310781.headOverlayColors[0x8];

                _0x46bb66.setHeadOverlayColor(0x8, 0x2, _0x558986, _0x32843d);

                break;
              }

            case 'chesthair':
              {
                const [_0x4c6a10, _0x3e858e] = _0x310781.headOverlayColors[0xa];

                _0x46bb66.setHeadOverlayColor(0xa, 0x1, _0x4c6a10, _0x3e858e);

                break;
              }
          }

          switch (_0xa52212.category) {
            case 'hair':
              {
                (0x0, _0x514c70.L6)(_0x46bb66, 0x2, _0xa52212.id, 0x0, 0x2);

                const _0x4fe7c5 = _0x4ab259.Z[_0x25ed15.api.getEntitySync(_0x46bb66, 'gender', 'number')].find(_0x849afd => _0x849afd.ID === _0xa52212.id) || {
                  'ID': 0x9a,
                  'Collection': 'MP_Gunrunning_Hair_F_001_F',
                  'Overlay': 'MP_Gunrunning_Hair_F_001_F'
                };

                _0x46bb66.clearFacialDecorations(), _0x46bb66.setFacialDecoration(_0x408a89.game.joaat(_0x4fe7c5.Collection), _0x408a89.game.joaat(_0x4fe7c5.Overlay));
                break;
              }

            case 'eyecolor':
              _0x46bb66.setEyeColor(_0xa52212.id);

          }
        }), _0x408a89.events.add('barbershop.setColor', (_0x182e84, _0x296c1a, _0x1ac921) => {
          switch (_0x182e84) {
            case 'hair':
              _0x46bb66.setHairColor(_0x296c1a, _0x1ac921);

              break;

            case 'facialhair':
              _0x46bb66.setHeadOverlayColor(0x1, 0x1, _0x296c1a, _0x1ac921), _0x310781.headOverlayColors[0x1] = [_0x296c1a, _0x1ac921];
              break;

            case 'eyebrows':
              _0x46bb66.setHeadOverlayColor(0x2, 0x1, _0x296c1a, _0x1ac921), _0x310781.headOverlayColors[0x2] = [_0x296c1a, _0x1ac921];
              break;

            case 'blush':
              _0x46bb66.setHeadOverlayColor(0x5, 0x2, _0x296c1a, _0x1ac921), _0x310781.headOverlayColors[0x5] = [_0x296c1a, _0x1ac921];
              break;

            case 'lipstick':
              _0x46bb66.setHeadOverlayColor(0x8, 0x2, _0x296c1a, _0x1ac921), _0x310781.headOverlayColors[0x8] = [_0x296c1a, _0x1ac921];
              break;

            case 'chesthair':
              _0x46bb66.setHeadOverlayColor(0xa, 0x1, _0x296c1a, _0x1ac921), _0x310781.headOverlayColors[0xa] = [_0x296c1a, _0x1ac921];
          }
        }), _0x408a89.events.add('barbershop.close', () => {
          _0x4e5bad.globalBrowser.toggle('barbershop', {
            'value': false
          }), _0x9ebc99(), _0x25ed15.api.setDiscordStatus(), _0x5e88bf = false, _0x408a89.events.callRemote('2313472715');
        }), _0x408a89.events.add('barberShop.buySuccess', _0x47a144 => {
          _0x24e540(_0x47a144), _0x5e88bf = false;
        }), _0x408a89.events.add('barberShop.buyError', _0x1fd696 => {
          _0x5e88bf = false;
        });

        const _0x5819fc = _0x1b12e0 => {
          const _0x3f416a = 0x418dff92 === _0x4dde46.pedModel ? 'S_M_M_HAIRDRESSER_01_BLACK_MINI_01' : 'S_F_M_FEMBARBER_BLACK_MINI_01';

          _0x408a89.game.audio.playAmbientSpeechWithVoice(_0x441339.handle, _0x1b12e0, _0x3f416a, 'SPEECH_PARAMS_FORCE', false);
        };

        let _0x5db4ac = -0x1;

        const _0x19de21 = (_0xece38e, _0x2e443e, _0xff0cdb = false) => {
          _0x5db4ac = _0x1759fb(_0xff0cdb), _0x441339.taskSynchronizedScene(_0x5db4ac, _0x4dde46.animDict, _0xece38e, 0x3e8, -0x3f000000, 0x0, 0x0, 0x447a0000, 0x0), _0x2e443e ? (_0x2343ed.setInvincible(false), _0x2343ed.playSynchronizedAnim(_0x5db4ac, _0x2e443e, _0x4dde46.animDict, 0x3e8, -0x3e8, 0x0, 0x447a0000), _0x2343ed.forceAiAndAnimationUpdate()) : _0x2343ed.setInvincible(true);
        },
              _0x1759fb = (_0x155ab4 = false) => {
          -0x1 !== _0x5db4ac && (_0x408a89.game.ped.detachSynchronizedScene(_0x5db4ac), _0x408a89.game.ped.disposeSynchronizedScene(_0x5db4ac), _0x5db4ac = -0x1);
          const _0x4afede = _0x4dde46.chair;
          return _0x5db4ac = _0x408a89.game.ped.createSynchronizedScene(_0x4afede.position.x, _0x4afede.position.y, _0x4afede.position.z, 0x0, 0x0, _0x4afede.heading, 0x2), _0x25ed15.api.invokeNative('_SET_SYNCHRONIZED_SCENE_OCCLUSION_PORTAL', _0x5db4ac, true), _0x408a89.game.ped.setSynchronizedSceneLooped(_0x5db4ac, _0x155ab4), _0x5db4ac;
        },
              _0x4f98bc = () => {
          const _0x3d55d5 = _0x4dde46.chair;
          _0x46bb66.taskPlayAnimAdvanced(_0x4dde46.animDict, 'player_base', _0x3d55d5.position.x, _0x3d55d5.position.y, _0x3d55d5.position.z, 0x0, 0x0, _0x3d55d5.heading, 0x8, 0x8, -0x1, 0x1609, 0x0, 0x2, 0x1), _0x19de21('keeper_base', 'scissors_base', true);
        },
              _0x9ebc99 = (_0x562180 = true) => {
          if (_0x25ed15.api.cameraRotation.pause(true), _0x25ed15.api.cameraRotation.reset(), _0x408a89.gui.cursor.visible = false, _0x408a89.events.callRemote('629931721'), _0x408a89.events.call('resetClothes'), _0x562180) {
            const _0x4069be = _0x4dde46.chair;
            _0x5819fc('SHOP_GOODBYE'), _0x46bb66.taskPlayAnimAdvanced(_0x4dde46.animDict, 'player_exitchair', _0x4069be.position.x, _0x4069be.position.y, _0x4069be.position.z, 0x0, 0x0, _0x4069be.heading, 0x3e8, -0x3e8, -0x1, 0x160a, 0x0, 0x2, 0x1), _0x19de21('keeper_exitchair', 'scissors_exitchair'), _0xf45c04 = 0x3;
          } else _0x446863();
        },
              _0x446863 = () => {
          _0x25ed15.api.cameraRotation.stop(), _0x408a89.game.cam.renderScriptCams(false, false, 0xbb8, true, false, 0x0), _0xf45c04 = -0x1, _0x865211 = false, _0x19dc74(), _0x408a89.events.callRemote('3702382805', 0x0), _0x46bb66.clearTasksImmediately(), _0x25ed15.api.stopAnim(), _0x46bb66.freezePosition(false), _0x46bb66.setAlpha(0xff), _0x25ed15.api.toggleHud(true), _0x5bf554 = null, _0x4b6572.g.inBarbershop = false, _0x25ed15.api.usingSystemAnim(false), _0x25ed15.api.toggleHud(true), _0x25ed15.api.toggleChat(true);
        },
              _0x19dc74 = () => {
          _0x441339 && _0x441339.destroy(), _0x2343ed && _0x2343ed.destroy(), _0x408a89.cameras.exists(_0x55b261) && (_0x55b261 = _0x55b261.destroy()), _0x441339 = undefined, _0x2343ed = undefined;
        },
              _0x49fe8a = _0xb4cca3 => {
          const _0x27fbf5 = _0x68b6bf(),
                _0x176be2 = _0x46bb66.isMale(),
                _0x342e1d = [];

          for (let _0xe8e994 = 0x0; _0xe8e994 < _0x27fbf5.length; _0xe8e994++) {
            const {
              id: _0x59a06e,
              price: _0x3ca3b0
            } = _0x27fbf5[_0xe8e994],
                  _0x3ad7c0 = _0x42c768(_0x176be2, _0xe8e994);

            _0x342e1d.push({
              'title': 'string' == typeof _0x3ad7c0 ? _0x25ed15.api.escapeHtml(_0x408a89.game.ui.getLabelText(_0x3ad7c0)) : _0x25ed15.api.language.translatePlayer('property.barberShopItemTitle', {
                'id': _0x59a06e
              }),
              'id': _0x59a06e,
              'category': _0xb4cca3,
              'cost': _0x3ca3b0,
              'mainColor': 0x0 === _0xe8e994 ? null : 'hair',
              'secondColor': 0x0 === _0xe8e994 ? null : 'hair'
            });
          }

          return _0x4e5bad.globalBrowser.emit('barbershop_setCategorySuccess', JSON.stringify(_0x342e1d)), _0x342e1d;
        },
              _0x300ece = (_0x295152, _0x39cda6) => {
          let _0x5c0e4d = [{
            'title': 'system.none',
            'id': 0xff,
            'category': _0x295152,
            'overlay': _0x39cda6,
            'cost': _0x214613().prices[_0x295152][0x0]
          }];

          const _0x2153ca = _0x408a89.game.ped.getNumHeadOverlayValues(_0x39cda6);

          for (let _0xb5f8b4 = 0x0; _0xb5f8b4 < _0x2153ca; _0xb5f8b4++) {
            const _0x2d9bd3 = _0x533f6a(_0x39cda6, _0xb5f8b4 + 0x1);

            let _0x43a14b = _0x25ed15.api.escapeHtml(_0x408a89.game.ui.getLabelText(_0x2d9bd3));

            _0x5c0e4d.push({
              'title': _0x43a14b,
              'id': _0xb5f8b4,
              'overlay': _0x39cda6,
              'category': _0x295152,
              'cost': _0x214613().prices[_0x295152][_0xb5f8b4 + 0x1],
              'mainColor': [0x1, 0x2, 0xa].includes(_0x39cda6) ? 'hair' : 'makeup'
            });
          }

          return _0x4e5bad.globalBrowser.emit('barbershop_setCategorySuccess', JSON.stringify(_0x5c0e4d)), _0x5c0e4d;
        },
              _0x2f16cb = _0x198b3f => {
          let _0x3799b7 = [];

          for (let _0x95f654 = 0x0; _0x95f654 < 0x20; _0x95f654++) {
            const _0x1c8b3d = 'FACE_E_C_' + _0x95f654;

            let _0x373686 = _0x25ed15.api.escapeHtml(_0x408a89.game.ui.getLabelText(_0x1c8b3d));

            _0x3799b7.push({
              'title': _0x373686,
              'id': _0x95f654,
              'category': _0x198b3f,
              'cost': _0x214613().prices[_0x198b3f][_0x95f654]
            });
          }

          return _0x4e5bad.globalBrowser.emit('barbershop_setCategorySuccess', JSON.stringify(_0x3799b7)), _0x3799b7;
        },
              _0x1d59ed = _0x487f61 => {
          let _0x390eee = [{
            'title': _0x25ed15.api.language.translatePlayer('system.none'),
            'id': 0xff,
            'category': _0x487f61,
            'overlay': 0x8,
            'cost': _0x214613().prices.lipstick[0x0]
          }];

          for (let _0x9d4538 = 0x0; _0x9d4538 < 0xa; _0x9d4538++) {
            const _0x1b7282 = 'CC_LIPSTICK_' + _0x9d4538;

            let _0x518989 = _0x25ed15.api.escapeHtml(_0x408a89.game.ui.getLabelText(_0x1b7282));

            _0x390eee.push({
              'title': _0x518989,
              'id': _0x9d4538,
              'category': _0x487f61,
              'overlay': 0x8,
              'cost': _0x214613().prices.lipstick[_0x9d4538 + 0x1],
              'mainColor': 'makeup'
            });
          }

          return _0x4e5bad.globalBrowser.emit('barbershop_setCategorySuccess', JSON.stringify(_0x390eee)), _0x390eee;
        },
              _0x5834ff = _0x383782 => {
          let _0x2d0b54 = [];

          for (let _0x8a344c = 0x0; _0x8a344c < _0x214613().blush.length; _0x8a344c++) {
            const _0x3bb375 = _0x214613().blush[_0x8a344c];

            let _0x2ac555 = _0x25ed15.api.escapeHtml(_0x408a89.game.ui.getLabelText(_0x3bb375.l));

            _0x2d0b54.push({
              'title': _0x2ac555,
              'id': _0x3bb375.v,
              'category': _0x383782,
              'overlay': 0x5,
              'cost': _0x214613().prices[_0x383782][_0x8a344c],
              'mainColor': 'makeup'
            });
          }

          return _0x4e5bad.globalBrowser.emit('barbershop_setCategorySuccess', JSON.stringify(_0x2d0b54)), _0x2d0b54;
        },
              _0x53afdc = _0x3b36f4 => {
          let _0x4121ab = [];

          for (let _0x32b289 = 0x0; _0x32b289 < _0x214613().makeup.length; _0x32b289++) {
            const _0x2e0ff5 = _0x214613().makeup[_0x32b289];

            let _0x25f2d9 = _0x25ed15.api.escapeHtml(_0x408a89.game.ui.getLabelText(_0x2e0ff5.l));

            _0x4121ab.push({
              'title': _0x25f2d9,
              'id': _0x2e0ff5.v,
              'category': _0x3b36f4,
              'overlay': 0x4,
              'cost': _0x214613().prices[_0x3b36f4][_0x32b289],
              'mainColor': 'makeup'
            });
          }

          return _0x4e5bad.globalBrowser.emit('barbershop_setCategorySuccess', JSON.stringify(_0x4121ab)), _0x4121ab;
        },
              _0x818e87 = _0x56b88d => {
          let _0x39e6ec = [];

          for (let _0xeb3abf = 0x0; _0xeb3abf < _0x214613().face.length; _0xeb3abf++) {
            const _0x431937 = _0x214613().face[_0xeb3abf];

            let _0x22d425 = _0x25ed15.api.escapeHtml(_0x408a89.game.ui.getLabelText(_0x431937.l));

            _0x39e6ec.push({
              'title': _0x22d425,
              'id': _0x431937.v,
              'category': _0x56b88d,
              'overlay': 0x4,
              'cost': _0x214613().prices[_0x56b88d][_0xeb3abf],
              'mainColor': 'makeup'
            });
          }

          return _0x4e5bad.globalBrowser.emit('barbershop_setCategorySuccess', JSON.stringify(_0x39e6ec)), _0x39e6ec;
        },
              _0x34482a = ['CC_M_HS_0', 'CC_M_HS_1', 'CC_M_HS_2', 'CC_M_HS_3', 'CC_M_HS_4', 'CC_M_HS_5', 'CC_M_HS_6', 'CC_M_HS_7', 'CC_M_HS_8', 'CC_M_HS_9', 'CC_M_HS_10', 'CC_M_HS_11', 'CC_M_HS_12', 'CC_M_HS_13', 'CC_M_HS_14', 'CC_M_HS_15', 'CC_M_HS_16', 'CC_M_HS_17', 'CC_M_HS_18', 'CC_M_HS_19', 'CC_M_HS_20', 'CC_M_HS_21', 'CC_M_HS_22', 'CLO_S1M_H_0_0', 'CLO_S1M_H_1_0', 'CLO_S1M_H_2_0', 'CLO_S1M_H_3_0', 'CLO_S2M_H_0_0', 'CLO_S2M_H_1_0', 'CLO_S2M_H_2_0', 'CLO_BIM_H_0_0', 'CLO_BIM_H_1_0', 'CLO_BIM_H_2_0', 'CLO_BIM_H_3_0', 'CLO_BIM_H_4_0', 'CLO_BIM_H_5_0', 'CLO_GRM_H_0_0', 'CLO_GRM_H_1_0'],
              _0x309cc3 = ['CC_F_HS_0', 'CC_F_HS_1', 'CC_F_HS_2', 'CC_F_HS_3', 'CC_F_HS_4', 'CC_F_HS_5', 'CC_F_HS_6', 'CC_F_HS_7', 'CC_F_HS_8', 'CC_F_HS_9', 'CC_F_HS_10', 'CC_F_HS_11', 'CC_F_HS_12', 'CC_F_HS_13', 'CC_F_HS_14', 'CC_F_HS_15', 'CC_F_HS_16', 'CC_F_HS_17', 'CC_F_HS_23', 'CC_F_HS_18', 'CC_F_HS_19', 'CC_F_HS_20', 'CC_F_HS_21', 'CC_F_HS_22', 'CLO_S1F_H_0_0', 'CLO_S1F_H_1_0', 'CLO_S1F_H_2_0', 'CLO_S1F_H_3_0', 'CLO_S2F_H_0_0', 'CLO_S2F_H_1_0', 'CLO_S2F_H_2_0', 'CLO_BIF_H_0_0', 'CLO_BIF_H_1_0', 'CLO_BIF_H_2_0', 'CLO_BIF_H_3_0', 'CLO_BIF_H_4_0', 'CLO_BIF_H_6_0', 'CLO_BIF_H_5_0', 'CLO_GRF_H_0_0', 'CLO_GRF_H_1_0'],
              _0x42c768 = (_0xb36551, _0x59819c) => _0xb36551 ? _0x34482a[_0x59819c] : _0x309cc3[_0x59819c],
              _0x533f6a = (_0x31af32, _0x5803a8) => {
          switch (_0x31af32) {
            case 0x1:
              return _0x5803a8 <= 0x13 ? 'HAIR_BEARD' + _0x5803a8 : 'BRD_HP_' + (_0x5803a8 - 0x14);

            case 0x2:
              return 0x0 === _0x5803a8 ? 'NONE' : 'CC_EYEBRW_' + (_0x5803a8 - 0x1);

            case 0xa:
              return 'CC_BODY_1_' + _0x5803a8;

            default:
              return 'NONE';
          }
        },
              _0x68b6bf = () => {
          const _0x18ce59 = _0x46bb66.isMale() ? 0x0 : 0x1;

          return _0x214613().hairValues[_0x18ce59];
        },
              _0x24e540 = _0x2afdf0 => {
          _0x25ed15.api.cameraRotation.pause(true), _0x25ed15.api.cameraRotation.reset();

          const _0x13a8ea = Math.random() >= 0.5 ? 'a' : 'b';

          _0x5ef4f9 = _0xfa6115() + _0x13a8ea, _0x55b261.setFov(0x2f);
          let _0xb87066 = 'SHOP_CUTTING_HAIR',
              _0x24b809 = true;
          ['hair', 'chesthair', 'eyebrows', 'facialhair'].includes(_0x2afdf0) ? (_0xb87066 = 'SHOP_CUTTING_HAIR', _0x24b809 = true) : (_0xb87066 = 'SHOP_DOING_MAKEUP', _0x24b809 = false), _0x5819fc(_0xb87066), _0x24b809 ? (_0x2718eb = 'Scissors', _0x19de21(_0x5ef4f9, _0x5ef4f9.replace('keeper_', 'scissors_'))) : (_0x2718eb = 'Makeup', _0x19de21(_0x5ef4f9)), _0xf45c04 = 0x2, _0x469aa2 = false;
        },
              _0xfa6115 = () => _0x4dde46.animDict.indexOf('hair_dressers') >= 0x0 ? 'keeper_hair_cut_' : 'keeper_idle_';

        _0x408a89.events.add('render', () => {
          const a0_0x494935 = {
            _0x4816aa: 0x535,
            _0x3491ee: 0xf6b,
            _0x5e6454: 0x1277,
            _0x13006b: 0x7fe,
            _0x33123f: 0x19d6,
            _0xdc1131: 0x2488,
            _0x25a26f: 0x1d66,
            _0x11dcd9: 0x1e35,
            _0x56cc3c: 0x1adb
          };

          if (_0x214613() && _0x865211) {
            if (0x0 === _0xf45c04 && _0x46bb66 && _0x46bb66.hasAnimFinished(_0x4dde46.animDict, 'player_enterchair', 0x3) && (() => {
              _0xf45c04 = 0x1, _0x4f98bc();
              const _0x2601a5 = _0x4dde46.cam;
              _0x25ed15.api.cameraRotation.start(_0x55b261, _0x2601a5.position, _0x2601a5.position, _0x2601a5.offset, _0x2601a5.heading, 0x2f, true), _0x25ed15.api.cameraRotation.setXBoderMultiplier(0x96, 0xf0), _0x408a89.gui.cursor.visible = true, _0x4e5bad.globalBrowser.toggle('barbershop', {
                'value': true,
                'hairColors': _0x1ff497,
                'lipstickColors': _0x9aa190,
                'blushColors': _0x302ffc,
                'shopPrices': _0x3ecd5c
              }), _0x408a89.game.graphics.transitionFromBlurred(0x32);
            })(), 0x2 === _0xf45c04 && (_0x441339 && _0x441339.hasAnimFinished(_0x4dde46.animDict, _0x5ef4f9, 0x3) && (_0xf45c04 = 0x1, _0x25ed15.api.cameraRotation.pause(false), _0x4f98bc()), -0x1 !== _0x5db4ac)) {
              const _0x122685 = _0x408a89.game.ped.getSynchronizedScenePhase(_0x5db4ac);

              _0x122685 >= 0.3 && _0x122685 <= 0.4 && !_0x469aa2 ? (_0x3f4af2 = _0x25ed15.api.getSoundId(), _0x408a89.game.audio.playSoundFromEntity(_0x3f4af2, _0x2718eb, _0x441339.handle, 'Barber_Sounds', false, 0x0), _0x469aa2 = true) : _0x122685 >= 0.6 && _0x469aa2 && (_0x408a89.game.audio.stopSound(_0x3f4af2), _0x469aa2 = false);
            }

            return 0x3 === _0xf45c04 && _0x46bb66 && _0x46bb66.hasAnimFinished(_0x4dde46.animDict, 'player_exitchair', 0x3) && _0x446863(), void _0x25ed15.api.invokeNative('HIDE_HUD_AND_RADAR_THIS_FRAME');
          }
        });
      },
      0xd398: (_0x2ca9d0, _0x5b4c2a, _0x1ea535) => {
        'use strict';

        const a0_0x252b7f = {
          _0x115599: 0x1a3,
          _0x2901c2: 0x1435
        },
              a0_0x58ec5a = {
          _0x2be5cf: 0x2488,
          _0x29a624: 0x1a3,
          _0x103dd8: 0x48f
        },
              a0_0x81c15f = {
          _0x33948f: 0x2488
        },
              a0_0x21f5b7 = {
          _0x4cc450: 0x14d2,
          _0x2c55f1: 0x1da5
        },
              a0_0x3ec0a8 = {
          _0x33b153: 0x14d2
        },
              a0_0xbac17b = {
          _0x3d7e6b: 0x2488,
          _0x5e63f5: 0x4a3,
          _0x2e9ce6: 0x1282
        };

        _0x1ea535.r(_0x5b4c2a);

        var _0x851a44 = _0x1ea535(0x16a21),
            _0x3165b1 = _0x1ea535(0x12a76),
            _0x2e2058 = _0x1ea535(0x161cd);

        _0x2e2058.players.local;

        let _0x1205d9,
            _0x10e843 = false;

        const _0x5ca599 = _0x2e2058.colshapes.newSphere(501.93, 123.96, 49.44, 0x5, 0x3e9);

        _0x2e2058.events.add('playerEnterColshape', async _0x28095e => {
          if (_0x851a44.api.isAuthed()) return _0x5ca599 === _0x28095e ? (_0x1205d9 = _0x28095e, void _0x851a44.api.displayHelpStringTrans('displayHelpString.openBets', false, true, 0x1388)) : undefined;
        }), _0x2e2058.events.add('playerExitColshape', async _0x35f4f1 => {
          if (_0x851a44.api.isAuthed()) return _0x5ca599 === _0x35f4f1 ? (_0x1205d9 = null, void _0x2e2058.game.ui.clearHelp(true)) : void (_0x1ea535.g.interfaces.bets && _0x2e2058.events.call('bets.close'));
        }), _0x2e2058.events.add('keys.e', async () => {
          if (_0x1205d9 && _0x1205d9 == _0x5ca599 && !_0x1ea535.g.interfaces.bets) return _0x2e2058.events.call('bets.init'), void _0x2e2058.game.ui.clearHelp(true);
        }), _0x2e2058.events.add('bets.init', _0x17c22c => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('4197415164', _0x17c22c));
        }), _0x2e2058.events.add('bets.initResult', (_0x40f1cb, _0x402bf3, _0x43e66a, _0x34ed40, _0x398e90) => {
          _0x10e843 = false, _0x40f1cb && _0x3165b1.globalBrowser.toggle('bets', {
            'value': true,
            'leagues': _0x40f1cb,
            'matches': _0x402bf3,
            'category': _0x43e66a,
            'oddCategories': _0x34ed40,
            'types': _0x398e90
          });
        }), _0x2e2058.events.add('bets.openLeague', (_0xe46eb1, _0x473f3d) => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('3165325808', _0xe46eb1, _0x473f3d));
        }), _0x2e2058.events.add('bets.openLeagueResult', (_0x130f60, _0x50f000) => {
          _0x10e843 = false, _0x3165b1.globalBrowser.emit('bets_openLeagueResult', {
            'matches': _0x130f60,
            'category': _0x50f000
          });
        }), _0x2e2058.events.add('bets.makeBet', (_0x142816, _0x19dd61, _0x1918e8) => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('2924454457', _0x142816, _0x19dd61, _0x1918e8));
        }), _0x2e2058.events.add('bets.makeBetResult', _0x2344c9 => {
          _0x10e843 = false, _0x2344c9 && _0x3165b1.globalBrowser.emit('bets_makeBetResult');
        }), _0x2e2058.events.add('bets.getProfileInfo', () => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('1059674946'));
        }), _0x2e2058.events.add('bets.getProfileInfoResult', (_0x5bd021, _0x1f9184, _0x55db19, _0x3787f3, _0x4fcebd, _0x1291ff) => {
          _0x10e843 = false, _0x3165b1.globalBrowser.emit('bets_getProfileInfoResult', {
            'bets': _0x5bd021,
            'betsTotalCount': _0x1f9184,
            'wins': _0x55db19,
            'winsTotalCount': _0x3787f3,
            'totalAmount': _0x4fcebd,
            'totalWins': _0x1291ff
          });
        }), _0x2e2058.events.add('bets.getBetsHistory', _0x1a3e84 => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('614109671', _0x1a3e84));
        }), _0x2e2058.events.add('bets.getBetsHistoryResult', (_0x32039c, _0x22aed9) => {
          _0x10e843 = false, _0x3165b1.globalBrowser.emit('bets_getBetsHistoryResult', {
            'bets': _0x32039c,
            'betsTotalCount': _0x22aed9
          });
        }), _0x2e2058.events.add('bets.getPaymentsHistory', _0x36c839 => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('1694935659', _0x36c839));
        }), _0x2e2058.events.add('bets.getPaymentsHistoryResult', (_0x478762, _0xf06276) => {
          _0x10e843 = false, _0x3165b1.globalBrowser.emit('bets_getPaymentsHistoryResult', {
            'wins': _0x478762,
            'winsTotalCount': _0xf06276
          });
        }), _0x2e2058.events.add('bets.setStatsPeriod', _0x173d99 => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('614476043', _0x173d99));
        }), _0x2e2058.events.add('bets.setStatsPeriodResult', (_0x45452a, _0x248a00) => {
          _0x10e843 = false, _0x3165b1.globalBrowser.emit('bets_setStatsPeriodResult', {
            'totalAmount': _0x45452a,
            'totalWins': _0x248a00
          });
        }), _0x2e2058.events.add('bets.getRatings', _0x2ab9a7 => {
          _0x10e843 || (_0x10e843 = true, _0x2e2058.events.callRemote('4203681453', _0x2ab9a7));
        }), _0x2e2058.events.add('bets.getRatingsResult', (_0x412bad, _0x8ba535, _0x3eba85) => {
          _0x10e843 = false, _0x3165b1.globalBrowser.emit('bets_getRatingsResult', {
            'countList': _0x412bad,
            'amountList': _0x8ba535,
            'statsData': _0x3eba85
          });
        }), _0x2e2058.events.add('bets.close', () => {
          _0x10e843 = false, _0x3165b1.globalBrowser.toggle('bets', {
            'value': false
          });
        });
      },
      0x124ee: (_0x514271, _0x430adf, _0x44407f) => {
        'use strict';

        const a0_0x1fde9d = {
          _0x2284dd: 0x1a07,
          _0x10d910: 0x1934,
          _0x32ad68: 0x14d2
        },
              a0_0x569450 = {
          _0x1e5686: 0xdb1
        },
              a0_0x5dbc6a = {
          _0x2a9ace: 0x1a3
        },
              a0_0x6d3fbb = {
          _0x56f794: 0x2488,
          _0xecb6ec: 0x1a3
        },
              a0_0x5c80c7 = {
          _0x2f2466: 0x535,
          _0x2cd8a9: 0x1a07,
          _0x3b17bd: 0xd10,
          _0x1910a9: 0x1934,
          _0x307e6d: 0x15bf
        },
              a0_0x3368ce = {
          _0x4633ce: 0x2488,
          _0xab521d: 0x1a3
        },
              a0_0x559921 = {
          _0x277d71: 0x535,
          _0xbc5836: 0x1a07,
          _0x57171f: 0xd10,
          _0x16f54c: 0x14d2
        },
              a0_0x5c19f6 = {
          _0x3225c6: 0x535,
          _0x81cb21: 0x1a07,
          _0x5814ca: 0x1934,
          _0x2ddcb0: 0x14d2,
          _0x4c7a84: 0xd7c
        },
              a0_0x58db7f = {
          _0xdf1fa4: 0x19fe
        },
              a0_0xbf4a67 = {
          _0x50dfd3: 0x14d2
        };

        _0x44407f.r(_0x430adf);

        var _0x16d239 = _0x44407f(0x35c8),
            _0x3e6df9 = _0x44407f.n(_0x16d239),
            _0x420c3c = (_0x44407f(0x92e0), _0x44407f(0x16a21)),
            _0x1de1ca = _0x44407f(0x12a76),
            _0x35fd10 = _0x44407f(0x161cd);

        let _0x85394a = false;
        _0x35fd10.players.local, (_0x35fd10.events.add('billboard.buy', _0x29766c => {
          _0x85394a || (_0x85394a = true, _0x35fd10.events.callRemote('2119731341', _0x29766c));
        }), _0x35fd10.events.add('billboard.buyResult', _0x3f0542 => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_buySuccess', {
            'billboard': _0x3f0542
          });
        }), _0x35fd10.events.add('billboard.sell', _0x502ed6 => {
          _0x85394a || (_0x85394a = true, _0x35fd10.events.callRemote('1890750911', _0x502ed6));
        }), _0x35fd10.events.add('billboard.sellResult', _0x1dc75e => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_sellSuccess', {
            'id': _0x1dc75e
          });
        }), _0x35fd10.events.add('billboard.result', () => {
          _0x85394a = false;
        }), _0x35fd10.events.add('billboard.openAdvApp', (_0x9991dc, _0x4a3b08) => {
          _0x1de1ca.globalBrowser.emit('ipad_adv_openAdvApp', {
            'billboard': _0x9991dc,
            'dayPercent': _0x3e6df9().dayPercent,
            'tax': _0x4a3b08,
            'materialPrice': _0x3e6df9().materialPrice
          }), _0x35fd10.events.call('ipad.openAppSuccess');
        }), _0x35fd10.events.add('billboard.orderMaterials', _0x220f01 => {
          if (_0x85394a) return _0x420c3c.api.longNotifyTrans('system.notTooFast', 'error');
          _0x85394a = true, _0x35fd10.events.callRemote('661643607', _0x220f01);
        }), _0x35fd10.events.add('billboard.orderMaterialsSuccess', _0x110dcf => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_orderMaterialsSuccess', {
            'materials': _0x110dcf
          });
        }), _0x35fd10.events.add('billboard.takeMoney', _0x303a96 => {
          if (_0x85394a) return _0x420c3c.api.longNotifyTrans('system.notTooFast', 'error');
          _0x85394a = true, _0x35fd10.events.callRemote('4020386067', _0x303a96);
        }), _0x35fd10.events.add('billboard.takeMoneySuccess', _0x7f2aa5 => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_takeMoneySuccess', {
            'money': _0x7f2aa5
          });
        }), _0x35fd10.events.add('billboard.payTax', _0x4ab4c5 => {
          if (_0x85394a) return _0x420c3c.api.longNotifyTrans('system.notTooFast', 'error');
          _0x85394a = true, _0x35fd10.events.callRemote('2214391696', _0x4ab4c5);
        }), _0x35fd10.events.add('billboard.payTaxSuccess', _0x39f924 => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_payTaxSuccess', {
            'paidUntil': _0x39f924
          });
        }), _0x35fd10.events.add('billboard.setDayCost', _0x1c7426 => {
          if (_0x85394a) return _0x420c3c.api.longNotifyTrans('system.notTooFast', 'error');
          _0x85394a = true, _0x35fd10.events.callRemote('790320903', _0x1c7426);
        }), _0x35fd10.events.add('billboard.setDayCostSuccess', _0x346b76 => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_setDayCostSuccess', {
            'value': _0x346b76
          });
        }), _0x35fd10.events.add('billboard.placeBoardInDates', _0x4c889d => {
          if (_0x85394a) return _0x420c3c.api.longNotifyTrans('system.notTooFast', 'error');
          _0x85394a = true, _0x35fd10.events.callRemote('9844816', _0x4c889d);
        }), _0x35fd10.events.add('billboard.placeBoardInDatesResult', _0x153b8a => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_setDayCostSuccess', {
            'value': _0x153b8a
          });
        }), _0x35fd10.events.add('billboard.getAdvDates', _0x3c5d8b => {
          if (_0x85394a) return _0x420c3c.api.longNotifyTrans('system.notTooFast', 'error');
          _0x85394a = true, _0x35fd10.events.callRemote('911001971', _0x3c5d8b);
        }), _0x35fd10.events.add('billboard.getAdvDatesSuccess', _0xb9b76a => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_getAdvDatesSuccess', {
            'dates': _0xb9b76a
          });
        }), _0x35fd10.events.add('billboard.showAdvs', _0x1d2cb0 => {
          if (_0x85394a) return _0x420c3c.api.longNotifyTrans('system.notTooFast', 'error');
          _0x85394a = true, _0x35fd10.events.callRemote('3488817897', _0x1d2cb0);
        }), _0x35fd10.events.add('billboard.showAdvsSuccess', _0x44238b => {
          _0x85394a = false, _0x1de1ca.globalBrowser.emit('ipad_adv_showAdvsSuccess', {
            'advs': _0x44238b
          });
        }));
      },
      0x62d0: (_0x245b63, _0x48e19a, _0x518b18) => {
        'use strict';

        const a0_0x248882 = {
          _0x3d08d6: 0x2488,
          _0x286b9e: 0x1a3,
          _0x231dc0: 0x18ca,
          _0xfe4ddb: 0x14d2,
          _0x261f39: 0x1a5,
          _0x1559a6: 0xe77
        },
              a0_0x42ff06 = {
          _0x212cd0: 0x2488,
          _0x11123f: 0x1a3,
          _0xa8982f: 0x1a5f
        },
              a0_0x222044 = {
          _0x96f6bc: 0x15bb,
          _0x21e1dc: 0x2111,
          _0x490dc4: 0x2488,
          _0x9d2348: 0x868,
          _0x3a683a: 0x1d66,
          _0x1a6767: 0x14d2,
          _0xe7a15f: 0x1a5,
          _0x234c77: 0x2682,
          _0xf9409f: 0x2111,
          _0x201b35: 0x1a3,
          _0x44b4e5: 0x1320,
          _0x36f2af: 0x1870
        },
              a0_0x3f4b32 = {
          _0xf69ac3: 0x1932,
          _0x335ba3: 0x20e0,
          _0x442e06: 0xf61,
          _0x5797ab: 0x4af,
          _0x5ab67e: 0x1e4d,
          _0x554d11: 0x1d66,
          _0x11df2a: 0x1870,
          _0x68555d: 0x91b
        };

        _0x518b18.r(_0x48e19a);

        var _0x3cec9d = _0x518b18(0x16a21),
            _0x41c3c8 = _0x518b18(0x12a76),
            _0x3a0b85 = _0x518b18(0x161cd);

        const _0x577131 = {
          'KEY_W': 0x57,
          'KEY_A': 0x41,
          'KEY_S': 0x53,
          'KEY_D': 0x44
        };
        let _0x21b0c0 = {
          'checking': false,
          'currentBtn': null,
          'totalPress': 0x0,
          'canPressNow': true
        },
            _0x159bfa = 0x0,
            _0x14a3d3 = null;
        _0x518b18.g.buttonPress = false;

        const _0x83387e = () => {
          const _0x24e446 = _0x3cec9d.api.randomProperty(_0x577131);

          _0x41c3c8.globalBrowser.emit('buttonPress_show', String.fromCharCode(_0x24e446)), _0x21b0c0.canPressNow = false, _0x21b0c0.checking = true, _0x21b0c0.currentBtn = _0x24e446, _0x3a0b85.game.sleep(0x1f4).then(() => _0x21b0c0.canPressNow = true);
        },
              _0xaaec8c = _0x10b2e7 => {
          _0x3cec9d.api.ePress(_0x159bfa) && !_0x3cec9d.api.isAuthed() || _0x518b18.g.interfaces.chat || (_0x159bfa = _0x3cec9d.api.ePressUpdate(), (async _0x40abd8 => {
            _0x21b0c0.checking && _0x21b0c0.canPressNow && (_0x21b0c0.canPressNow = false, _0x40abd8 == _0x21b0c0.currentBtn ? (_0x21b0c0.totalPress++, _0x41c3c8.globalBrowser.emit('buttonPress_success', ''), await _0x3a0b85.game.sleep(0x1f4), 0x4 !== _0x21b0c0.totalPress ? _0x83387e() : _0x3a0b85.events.call('buttonPress.stop', true)) : (_0x21b0c0.totalPress > 0x0 && _0x21b0c0.totalPress--, _0x41c3c8.globalBrowser.emit('buttonPress_failed', ''), await _0x3a0b85.game.sleep(0x1f4), _0x83387e()));
          })(_0x10b2e7));
        };

        for (const _0x171ac0 of Object.values(_0x577131)) _0x3a0b85.keys.bind(parseInt(_0x171ac0), true, () => {
          _0xaaec8c(parseInt(_0x171ac0));
        });

        _0x3a0b85.events.add('buttonPress.init', _0x81889d => {
          _0x14a3d3 = _0x81889d, _0x41c3c8.globalBrowser.emit('buttonPress_stop', ''), _0x83387e(), _0x518b18.g.buttonPress = true;
        }), _0x3a0b85.events.add('buttonPress.stop', _0x4dce82 => {
          _0x41c3c8.globalBrowser.emit('buttonPress_stop', ''), _0x21b0c0 = {
            'checking': false,
            'currentBtn': null,
            'totalPress': 0x0,
            'canPressNow': true
          }, _0x4dce82 && _0x3a0b85.events.call('buttonPress.' + _0x14a3d3 + '.stop', true), _0x14a3d3 = null, _0x518b18.g.buttonPress = false;
        });
      },
      0x177bd: (_0x2c17e6, _0x4cfe5f, _0x21f5f5) => {
        'use strict';

        const a0_0x21f8e7 = {
          _0x112ce6: 0x2488
        },
              a0_0x2b485a = {
          _0x3fe988: 0x1751,
          _0x175205: 0x1b8a,
          _0x2d0199: 0xeb3,
          _0x262756: 0x1d66,
          _0x98350f: 0x1acd,
          _0x3890bc: 0x1e35,
          _0x4c78dc: 0x50e,
          _0x4d9c97: 0x7c2
        },
              a0_0x5cb692 = {
          _0x1e37e5: 0x535,
          _0x3ebc72: 0x4b9,
          _0x482c8a: 0x209a,
          _0x4e2604: 0x1edc,
          _0x527cb7: 0x59d
        },
              a0_0x540b43 = {
          _0x162179: 0x535,
          _0x450a45: 0x253d,
          _0x39e49a: 0x4b9,
          _0x202b81: 0xf86,
          _0x206f65: 0x2040
        },
              a0_0x2ddcf3 = {
          _0x2df35a: 0x2488,
          _0x121f74: 0x4a3
        };

        _0x21f5f5.r(_0x4cfe5f);

        var _0x11a00d = _0x21f5f5(0x16a21),
            _0x444c1c = _0x21f5f5(0x12a76),
            _0x399f3b = _0x21f5f5(0x161cd);

        const _0x236b7d = _0x399f3b.players.local;
        let _0x37178d = false,
            _0x12efde = false,
            _0x432171 = false,
            _0x3bc393 = null;
        _0x399f3b.events.add('keys.e', () => {
          if (!_0x21f5f5.g.currentInterface && _0x236b7d.vehicle && !_0x432171) return Object.keys(_0x21f5f5.g.carwash_shops).map(_0x5d9169 => _0x21f5f5.g.carwash_shops[_0x5d9169].colshape).includes(_0x12efde) ? (_0x399f3b.game.ui.clearHelp(true), _0x432171 = true, _0x399f3b.events.callRemote('1039406381', _0x12efde.key), void (_0x12efde = false)) : undefined;
        }), _0x399f3b.events.add('carWash.initResult', (_0x936df1, _0x5ed626, _0x2b7858) => {
          _0x432171 = false, _0x3bc393 = _0x936df1, _0x444c1c.globalBrowser.toggle('carWash', {
            'value': true,
            'bizId': _0x936df1,
            'washingPrice': _0x5ed626,
            'waxPrice': _0x2b7858
          });
        }), _0x399f3b.events.add('carWash.wash', (_0x4ea689, _0x42c696) => {
          _0x432171 || ('bank' !== _0x42c696 || _0x236b7d.bank && _0x236b7d.bank.id ? (_0x432171 = true, _0x399f3b.events.callRemote('3479905518', _0x4ea689, _0x42c696, _0x3bc393), _0x444c1c.globalBrowser.toggle('carWash', {
            'value': false
          })) : _0x11a00d.api.longNotifyTrans('bank.noBankCardInInventory', 'error'));
        }), _0x399f3b.events.add('carWash.washResult', () => {
          _0x432171 = false;
        }), _0x399f3b.events.add('playerEnterColshape', _0x3a57d6 => {
          _0x11a00d.api.isAuthed() && _0x236b7d.vehicle && Object.keys(_0x21f5f5.g.carwash_shops).map(_0xece798 => _0x21f5f5.g.carwash_shops[_0xece798].colshape).includes(_0x3a57d6) && (_0x12efde = _0x3a57d6, _0x11a00d.api.displayHelpStringTrans('displayHelpString.washCar', false, true, 0x1388));
        }), _0x399f3b.events.add('playerExitColshape', _0x3e1591 => {
          _0x11a00d.api.isAuthed() && _0x236b7d.vehicle && Object.keys(_0x21f5f5.g.carwash_shops).map(_0x49f1ae => _0x21f5f5.g.carwash_shops[_0x49f1ae].colshape).includes(_0x3e1591) && (_0x12efde = null, _0x399f3b.game.ui.clearHelp(true));
        });
        let _0x2ffb8b = [];
        _0x399f3b.events.add('carWash.start', async _0x2a53e4 => {
          null != _0x2ffb8b[_0x2a53e4] && _0x399f3b.game.graphics.stopParticleFxLooped(_0x2ffb8b[_0x2a53e4], false), await _0x11a00d.api.requestNamedPtfxAsset('scr_carwash'), _0x399f3b.game.graphics.setPtfxAssetNextCall('scr_carwash');
          const _0x2dbe4e = _0x21f5f5.g.carwash_shops[_0x2a53e4];
          _0x2ffb8b[_0x2a53e4] = _0x399f3b.game.graphics.startParticleFxLoopedAtCoord('ent_amb_car_wash_jet', parseFloat(_0x2dbe4e.pickupX), parseFloat(_0x2dbe4e.pickupY), parseFloat(_0x2dbe4e.pickupZ) + 0x3, 0x0, 0x0, 0x0, 0x8, true, true, true, false);
        }), _0x399f3b.events.add('carWash.stop', async _0x61ab6f => {
          null != _0x2ffb8b[_0x61ab6f] && (_0x399f3b.game.graphics.stopParticleFxLooped(_0x2ffb8b[_0x61ab6f], false), _0x2ffb8b[_0x61ab6f] = null);
        }), _0x399f3b.events.add('carWash.freezePos', () => {
          _0x37178d = true, _0x399f3b.events.call('utils.disablePlayerExit', true), _0x399f3b.events.call('utils.disablePlayerMove', true), _0x399f3b.events.call('utils.disablePlayerVehShoot', true), _0x236b7d.vehicle && _0x236b7d.vehicle.freezePosition(true);
        }), _0x399f3b.events.add('carWash.unfreezePos', () => {
          _0x37178d = false, _0x399f3b.events.call('utils.disablePlayerExit', false), _0x399f3b.events.call('utils.disablePlayerMove', false), _0x399f3b.events.call('utils.disablePlayerVehShoot', false), _0x236b7d.vehicle && _0x236b7d.vehicle.freezePosition(false);
        }), _0x399f3b.events.add('render', () => {
          _0x37178d && (_0x399f3b.game.player.disableFiring(true), _0x399f3b.game.controls.disableControlAction(0x2, 0x5c, true), _0x399f3b.game.controls.disableControlAction(0x2, 0x45, true), _0x399f3b.game.controls.disableControlAction(0x2, 0x46, true), _0x399f3b.game.controls.disableControlAction(0x2, 0x107, true), _0x399f3b.game.controls.disableControlAction(0x2, 0x108, true));
        }), _0x399f3b.events.add('carWash.close', () => {
          _0x444c1c.globalBrowser.toggle('carWash', {
            'value': false
          });
        });
      },
      0x162c1: (_0x3d882f, _0x39bf7f, _0xb78818) => {
        'use strict';

        const a0_0x445df3 = {
          _0x3b23cd: 0x2488,
          _0x74a80e: 0x1a3,
          _0x3dd385: 0x1489
        },
              a0_0x2ba3da = {
          _0x119294: 0xeaf,
          _0xccbe78: 0x830
        },
              a0_0x14e380 = {
          _0x4675c3: 0x2488,
          _0x435f32: 0x52b,
          _0x2d9a21: 0x1507,
          _0x2b4e2c: 0x24cf,
          _0x86f489: 0x1a3,
          _0x14f82b: 0x18c1,
          _0x424446: 0x2488,
          _0x26fc60: 0x1a3,
          _0x6c6951: 0x18c1
        },
              a0_0x282be9 = {
          _0x32a75f: 0x535,
          _0x5c3ef7: 0x2245,
          _0xc5c19a: 0xbb1,
          _0x3ee106: 0xf71,
          _0x1f5f5f: 0x210f,
          _0xeb1c7c: 0x18fb
        },
              a0_0x294db8 = {
          _0x2bb10b: 0x535,
          _0x393a3c: 0xf71,
          _0x1d9f5c: 0xd14,
          _0x12f220: 0x210f
        },
              a0_0x4f1eaf = {
          _0x1471b9: 0x535,
          _0x5264ab: 0x1349,
          _0x2b382a: 0x2457,
          _0x48e01c: 0x535,
          _0x14a14e: 0x535,
          _0x451fdc: 0x18fb
        },
              a0_0x22112a = {
          _0x5aba3f: 0x535,
          _0x3e6ebb: 0x2245,
          _0x1051b4: 0xbb1,
          _0x5ee548: 0x1349,
          _0x8a0be0: 0xbb1,
          _0x43a6e4: 0x1738,
          _0x5995ac: 0x648,
          _0x1fbed9: 0x535,
          _0x1d436f: 0x108b,
          _0x2a3a89: 0xf01
        },
              a0_0x364197 = {
          _0x3443ba: 0x535,
          _0x304cce: 0xf71,
          _0x9f677e: 0x1349,
          _0x4f528f: 0xbb1,
          _0x56ed01: 0x1e33,
          _0x353bd9: 0x2001,
          _0x7dbe60: 0xf01,
          _0x431bd0: 0x535
        },
              a0_0x2e967b = {
          _0x72aa9f: 0x2245,
          _0x4b450d: 0x535,
          _0x1d9625: 0x210f,
          _0xde3738: 0x1349
        },
              a0_0x2d3824 = {
          _0x5becca: 0xa26,
          _0x26f664: 0x535,
          _0x1ab1d4: 0x1f30,
          _0x2339bd: 0x1f30,
          _0x289f32: 0x2245,
          _0x8ddcc8: 0x852,
          _0x3bcc7e: 0x111a,
          _0x4f2c22: 0x535,
          _0x20c3cd: 0xef5,
          _0x559281: 0x2001,
          _0x3ecb4f: 0x535,
          _0x2ce3fd: 0x18fb
        },
              a0_0x51439c = {
          _0xd51d94: 0x23c9,
          _0x3dc7cf: 0x23c9,
          _0x430983: 0x830,
          _0x21ba1f: 0x2488,
          _0x47b2eb: 0x1a3
        },
              a0_0x6fd93c = {
          _0x167692: 0x2cc,
          _0x44e8ca: 0x11d9,
          _0x4d8c72: 0x166f,
          _0x1bcb90: 0x22e5,
          _0xe391db: 0x1dc,
          _0x410d0e: 0x23c9,
          _0xbb8b19: 0x2488,
          _0x2b4492: 0x1a3
        };

        _0xb78818.r(_0x39bf7f);

        var _0x41baec = _0xb78818(0x16a21),
            _0x27664a = _0xb78818(0x16a7d),
            _0x4a6c9e = _0xb78818(0x12a76),
            _0x1db4b6 = _0xb78818(0xa327),
            _0x4ee267 = _0xb78818(0x161cd);

        const _0x4fde87 = _0x4ee267.players.local;
        _0x4ee267.keys.bind(_0x27664a.t.T, true, () => {
          if (!_0xb78818.g.interfaces.panelMenu && 'iphone' !== _0xb78818.g.currentInterface && 'ipad' !== _0xb78818.g.currentInterface && 'report' !== _0xb78818.g.currentInterface && 'donate' !== _0xb78818.g.currentInterface) return !_0xb78818.g.interfaces.chat && _0x4fde87.settings.chat ? (_0xb78818.g.interfaces.chat = true, _0x4ee267.gui.cursor.show(true, true), void _0x4a6c9e.globalBrowser.emit('chat_setInputStatus', true)) : undefined;
        }), _0x4ee267.keys.bind(_0x27664a.t.ENTER, true, () => {
          _0xb78818.g.interfaces.chat && _0x4fde87.settings.chat && (_0xb78818.g.interfaces.chat = false, _0x4ee267.gui.cursor.show(false, false), _0x4a6c9e.globalBrowser.emit('chat_setInputStatus', false));
        }), null == _0x4ee267.storage.data.chatcfg && (_0x4ee267.storage.data.chatcfg = {
          'timestamp': 0x0,
          'chatsize': 0x0,
          'fontstep': 0x0,
          'alpha': 0x1
        }, _0x4ee267.storage.flush()), _0x4ee267.events.add('chatconfig', function (_0x27fe06, _0x318404) {
          0x0 == _0x27fe06 ? _0x4ee267.storage.data.chatcfg.timestamp = _0x318404 : 0x1 == _0x27fe06 ? _0x4ee267.storage.data.chatcfg.chatsize = _0x318404 : 0x2 == _0x27fe06 ? _0x4ee267.storage.data.chatcfg.fontstep = _0x318404 : _0x4ee267.storage.data.chatcfg.alpha = _0x318404, _0x4ee267.storage.flush();
        }), _0x4ee267.events.add('chat.local', (_0x4ae123, _0x2a8472, _0x336d50) => {
          if (_0x4fde87.dimension != _0x4ae123.dimension) return;
          if (_0x41baec.api.vdist2(_0x4fde87.position, _0x4ae123.position) > _0x2a8472) return;

          let _0x4881d0 = _0x41baec.api.makeValidString(_0x336d50);

          if (!_0x4881d0) return;
          _0x41baec.api.getPlayerSetting('streamerMode') && (_0x4881d0 = _0x41baec.api.replaceTwitchWords(_0x4881d0));

          const _0x233466 = 0x5 * -Math.abs(_0x41baec.api.vdist2(_0x4fde87.position, _0x4ae123.position));

          let _0x40ba35 = _0x41baec.api.lightenDarkenColorHex('FFFFFF', _0x41baec.api.clamp(_0x233466, -0xfe, 0x0));

          for (; _0x40ba35.length < 0x6;) _0x40ba35 += '0';

          const _0x3144c0 = _0x41baec.api.language.translatePlayer('chat.events.speaks', {
            'name': _0x41baec.api.getDisplayName(_0x4ae123),
            'text': _0x4881d0
          });

          _0x41baec.api.chatPush(_0x41baec.api.hexToChatHex(_0x40ba35) + encodeURI(_0x3144c0));
        }), _0x4ee267.events.add('chat.event', (_0x35c00e, _0x2f4cbe, _0x146ba9, _0x45e5e8, _0x599a56 = false, _0x349086 = 'default') => {
          if (_0x4fde87.dimension != _0x35c00e.dimension) return;
          if (_0x41baec.api.vdist2(_0x4fde87.position, _0x35c00e.position) > _0x2f4cbe) return;

          let _0x51338d = _0x41baec.api.makeValidString(_0x146ba9);

          if (!_0x51338d) return;

          let _0x58c713 = _0x51338d.replace('%player', _0x41baec.api.getDisplayName(_0x35c00e));

          _0x58c713 = _0x58c713.replace('%id', _0x35c00e.remoteId), _0x599a56 && _0x41baec.api.getPlayerSetting('streamerMode') && (_0x58c713 = _0x41baec.api.replaceTwitchWords(_0x58c713)), _0x41baec.api.chatPush(_0x41baec.api.hexToChatHex(_0x45e5e8) + encodeURI(_0x58c713));
        }), _0x4ee267.events.add('chat.eventTrans', (_0x3dc940, _0x5c2f8b, _0x524240, _0x17f7db = {}, _0x3c653d, _0x370426 = false, _0x13ac35 = 'default') => {
          if (_0x4fde87.dimension != _0x3dc940?.['dimension']) return;
          if (_0x41baec.api.vdist2(_0x4fde87.position, _0x3dc940.position) > _0x5c2f8b) return;

          let _0x46e68d = _0x41baec.api.makeValidString(_0x41baec.api.language.translatePlayer(_0x524240, _0x17f7db));

          if (!_0x46e68d) return;

          let _0xbfe69 = _0x46e68d.replace('%player', _0x41baec.api.getDisplayName(_0x3dc940));

          _0xbfe69 = _0xbfe69.replace('%id', _0x3dc940.remoteId), _0x370426 && _0x41baec.api.getPlayerSetting('streamerMode') && (_0xbfe69 = _0x41baec.api.replaceTwitchWords(_0xbfe69)), _0x41baec.api.chatPush('[' + _0x13ac35 + '] ' + _0x41baec.api.hexToChatHex(_0x3c653d) + encodeURI(_0xbfe69));
        }), _0x4ee267.events.add('chat.fraction', (_0x4bac0c, _0x4e400a, _0x5ae55d, _0x304758, _0x34d1f2, _0x46b203 = 'default') => {
          let _0x5db31b = _0x41baec.api.makeValidString(_0x304758);

          if (!_0x5db31b) return;
          _0x41baec.api.getPlayerSetting('streamerMode') && (_0x5db31b = _0x41baec.api.replaceTwitchWords(_0x5db31b));

          const _0x3ebbf5 = _0x41baec.api.language.translatePlayer('chat.events.fractionChat', {
            'rank': _0x4e400a,
            'name': _0x5ae55d,
            'id': _0x4bac0c.remoteId,
            'text': _0x5db31b
          });

          _0x41baec.api.chatPush('[' + _0x46b203 + '] ' + _0x41baec.api.hexToChatHex(_0x34d1f2) + encodeURI(_0x3ebbf5));
        }), _0x4ee267.events.add('chat.fractionTrans', (_0x39a649, _0x1a83bd, _0x5fbd2b, _0x3f097c, _0x4f9a0a, _0x2da877, _0x1e75c0 = 'default') => {
          let _0x1798fb = _0x41baec.api.makeValidString(_0x3f097c);

          if (!_0x1798fb) return;
          _0x41baec.api.getPlayerSetting('streamerMode') && (_0x1798fb = _0x41baec.api.replaceTwitchWords(_0x1798fb));

          const _0x627aa8 = _0x41baec.api.language.translatePlayer('chat.events.fractionChat', {
            'rank': _0x1a83bd,
            'name': _0x5fbd2b,
            'id': _0x39a649.remoteId,
            'text': _0x41baec.api.language.translatePlayer(_0x1798fb, _0x4f9a0a)
          });

          _0x41baec.api.chatPush('[' + _0x1e75c0 + '] ' + _0x41baec.api.hexToChatHex(_0x2da877) + encodeURI(_0x627aa8));
        }), _0x4ee267.events.add('chat.family', (_0x854b92, _0x25292d, _0x9e45d2, _0xa4894a, _0x325d50, _0x90ce2e = 'default') => {
          let _0x2b882d = _0x41baec.api.makeValidString(_0xa4894a);

          if (!_0x2b882d) return;
          _0x41baec.api.getPlayerSetting('streamerMode') && (_0x2b882d = _0x41baec.api.replaceTwitchWords(_0x2b882d));

          const _0x535517 = _0x41baec.api.language.translatePlayer('chat.events.familyChat', {
            'rank': _0x25292d,
            'name': _0x9e45d2,
            'id': _0x854b92.remoteId,
            'text': _0x2b882d
          });

          _0x41baec.api.chatPush('[' + _0x90ce2e + '] ' + _0x41baec.api.hexToChatHex(_0x325d50) + encodeURI(_0x535517));
        }), _0x4ee267.events.add('chat.fractionInfo', (_0x6499f5, _0x2b61a3, _0x3d802a, _0x39a6df = 'default') => {
          const _0x4210a7 = _0x41baec.api.makeValidString(_0x6499f5);

          if (!_0x4210a7) return;

          const _0x5f2205 = _0x41baec.api.language.translatePlayer('chat.events.fractionChat2', {
            'text': _0x4210a7,
            'distPos': _0x2b61a3 ? 0x1 : 0x0,
            'distance': _0x2b61a3 ? _0x41baec.api.roundNumber(_0x41baec.api.vdist2(_0x4fde87.position, _0x2b61a3)) : 0x0
          });

          _0x41baec.api.chatPush('[' + _0x39a6df + '] ' + _0x41baec.api.hexToChatHex(_0x3d802a) + encodeURI(_0x5f2205));
        }), _0x4ee267.events.add('chat.fractionInfoTrans', (_0x5d114f, _0x16f5ca = {}, _0x48eb0f, _0x570cbc, _0x1f7e07 = 'default') => {
          const _0x34d344 = _0x41baec.api.makeValidString(_0x41baec.api.language.translatePlayer(_0x5d114f, _0x16f5ca));

          if (!_0x34d344) return;

          const _0x28914e = _0x41baec.api.language.translatePlayer('chat.events.fractionChat2', {
            'text': _0x34d344,
            'distPos': _0x48eb0f ? 0x1 : 0x0,
            'distance': _0x48eb0f ? _0x41baec.api.roundNumber(_0x41baec.api.vdist2(_0x4fde87.position, _0x48eb0f)) : 0x0
          });

          _0x41baec.api.chatPush('[' + _0x1f7e07 + '] ' + _0x41baec.api.hexToChatHex(_0x570cbc) + encodeURI(_0x28914e));
        }), _0x4ee267.events.add('chat.fractionInfo3Trans', (_0x293ce8, _0x38d9eb = {}, _0x4882f9, _0x29e41e, _0x56c76e = 'default') => {
          const _0x3d7810 = _0x41baec.api.makeValidString(_0x41baec.api.language.translatePlayer(_0x293ce8, _0x38d9eb));

          if (!_0x3d7810) return;

          const _0x3ef65c = _0x41baec.api.language.translatePlayer('chat.events.fractionChat3', {
            'text': _0x3d7810,
            'distPos': _0x4882f9 ? 0x1 : 0x0,
            'distance': _0x4882f9 ? _0x41baec.api.roundNumber(_0x41baec.api.vdist2(_0x4fde87.position, _0x4882f9)) : 0x0
          });

          _0x41baec.api.chatPush('[' + _0x56c76e + '] ' + _0x41baec.api.hexToChatHex(_0x29e41e) + encodeURI(_0x3ef65c));
        }), _0x4ee267.events.add('chat.familyInfo', (_0x180eff, _0x5b1faa, _0x12afce, _0x32c6c7 = 'default') => {
          const _0x4056ec = _0x41baec.api.makeValidString(_0x180eff);

          if (!_0x4056ec) return;

          const _0x9d7511 = _0x41baec.api.language.translatePlayer('family.tag') + ' ' + _0x4056ec + ' ' + (_0x5b1faa ? '(' + _0x41baec.api.roundNumber(_0x41baec.api.vdist2(_0x4fde87.position, _0x5b1faa)) + ' метров)' : '');

          _0x41baec.api.chatPush('[' + _0x32c6c7 + '] ' + _0x41baec.api.hexToChatHex(_0x12afce) + encodeURI(_0x9d7511));
        }), _0x4ee267.events.add('chat.familyInfoTrans', (_0x485aee, _0x10ae81 = {}, _0x9b0607, _0x81ede6, _0x302793 = 'default') => {
          const _0x1e4ee3 = _0x41baec.api.makeValidString(_0x41baec.api.language.translatePlayer(_0x485aee, _0x10ae81));

          if (!_0x1e4ee3) return;

          const _0x7bf585 = _0x41baec.api.language.translatePlayer('family.tag') + ' ' + _0x1e4ee3 + ' ' + (_0x9b0607 ? '(' + _0x41baec.api.roundNumber(_0x41baec.api.vdist2(_0x4fde87.position, _0x9b0607)) + ' метров)' : '');

          _0x41baec.api.chatPush('[' + _0x302793 + '] ' + _0x41baec.api.hexToChatHex(_0x81ede6) + encodeURI(_0x7bf585));
        }), _0x4ee267.events.add('chat.sysfraction', (_0x235166, _0x1033f8, _0x36c5c8 = 'default') => {
          const _0x3b8f9f = _0x41baec.api.makeValidString(_0x235166);

          if (!_0x3b8f9f) return;

          const _0x54685b = _0x41baec.api.language.translatePlayer('fractions.tag') + ' ' + _0x3b8f9f;

          _0x41baec.api.chatPush('[' + _0x36c5c8 + '] ' + _0x41baec.api.hexToChatHex(_0x1033f8) + encodeURI(_0x54685b));
        }), _0x4ee267.events.add('chat.sysfractionTrans', (_0x31e495, _0x55cc21, _0xdf7c2b, _0x637f56 = 'default') => {
          const _0x530999 = _0x41baec.api.makeValidString(_0x41baec.api.language.translatePlayer(_0x31e495, _0x55cc21));

          if (!_0x530999) return;

          const _0x52f8a7 = _0x41baec.api.language.translatePlayer('fractions.tag') + ' ' + _0x530999;

          _0x41baec.api.chatPush('[' + _0x637f56 + '] ' + _0x41baec.api.hexToChatHex(_0xdf7c2b) + encodeURI(_0x52f8a7));
        }), _0x4ee267.events.add('chat.system', (_0x381acf, _0x40b7aa, _0x5e32dd, _0x3063fa = 'default') => {
          let _0x27770a = _0x41baec.api.makeValidString(_0x381acf);

          _0x27770a && (_0x5e32dd && _0x41baec.api.getPlayerSetting('streamerMode') && (_0x27770a = _0x41baec.api.replaceTwitchWords(_0x27770a)), _0x41baec.api.chatPush('[' + _0x3063fa + '] ' + _0x41baec.api.hexToChatHex(_0x40b7aa) + encodeURI(_0x27770a)));
        }), _0x4ee267.events.add('chat.systemTrans', (_0x20ee57, _0x1e019a, _0x4e7b9a, _0x3bcf65, _0x7f6dd4 = 'default') => {
          let _0x15cb48 = _0x41baec.api.makeValidString(_0x41baec.api.language.translatePlayer(_0x20ee57, _0x1e019a));

          _0x15cb48 && (_0x3bcf65 && _0x41baec.api.getPlayerSetting('streamerMode') && (_0x15cb48 = _0x41baec.api.replaceTwitchWords(_0x15cb48)), _0x41baec.api.chatPush('[' + _0x7f6dd4 + '] ' + _0x41baec.api.hexToChatHex(_0x4e7b9a) + encodeURI(_0x15cb48)));
        }), _0x4ee267.events.add('chat.systemTransADM', (_0x381112, _0x6be1f, _0x538286, _0x4c32ff, _0x2d1a0f = 'default') => {
          let _0x478193 = _0x41baec.api.makeValidString(_0x41baec.api.language.translatePlayer(_0x381112, _0x6be1f));

          _0x478193 && (_0x4c32ff && _0x41baec.api.getPlayerSetting('streamerMode') && (_0x478193 = _0x41baec.api.replaceTwitchWords(_0x478193)), _0x41baec.api.chatPush('[' + _0x2d1a0f + '] ' + _0x41baec.api.hexToChatHex(_0x538286) + 'ADM: ' + encodeURI(_0x478193)));
        }), _0x4ee267.events.add('browserDomReady', _0x4a0f88 => {
          _0x4a0f88 === _0x4a6c9e.globalBrowser && (_0x4a6c9e.globalBrowser.emit('chat_newcfg', {
            'index': 0x0,
            'value': _0x4ee267.storage.data.chatcfg.timestamp
          }), _0x4a6c9e.globalBrowser.emit('chat_newcfg', {
            'index': 0x1,
            'value': _0x4ee267.storage.data.chatcfg.chatsize
          }), _0x4a6c9e.globalBrowser.emit('chat_newcfg', {
            'index': 0x2,
            'value': _0x4ee267.storage.data.chatcfg.fontstep
          }), _0x4a6c9e.globalBrowser.emit('chat_newcfg', {
            'index': 0x3,
            'value': _0x4ee267.storage.data.chatcfg.alpha
          }));
        }), _0x4ee267.events.add('changeChatState', _0x2fa770 => {
          'true' == _0x2fa770 ? (_0xb78818.g.interfaces.chat = true, _0x4ee267.gui.cursor.show(true, true)) : (_0xb78818.g.interfaces.chat = false, _0x4ee267.gui.cursor.show(false, false));
        }), _0x4ee267.events.add('chat.toggleachat', _0x5057c9 => {
          _0x4a6c9e.globalBrowser.emit('chat_toggleachat', {
            'toggle': _0x5057c9
          });
        }), _0x4ee267.events.add('chat.inited', () => {
          _0x4a6c9e.globalBrowser.emit('chat_updateRegion', _0x1db4b6.serverRegion);
        }), _0x4ee267.events.add('clearchat', () => {
          _0x4a6c9e.globalBrowser.emit('chat_clear');
        }), _0x4ee267.gui.chatsafe = true;
      },
      0x18fc: (_0x4b46e6, _0x5dc626, _0x514a8e) => {
        'use strict';

        const a0_0xcaa8c4 = {
          _0x2adb4e: 0x14d2,
          _0x5a9764: 0x1da5
        },
              a0_0x5e84f2 = {
          _0xee2a98: 0x535,
          _0x21ec24: 0x14d2,
          _0x1fe8fb: 0x82b,
          _0x291f7e: 0x112d,
          _0x176a6d: 0xcba
        },
              a0_0x343cba = {
          _0x39c640: 0x10db,
          _0x226167: 0x535,
          _0x27ba42: 0x1a07,
          _0x270fe6: 0x251,
          _0x173f28: 0x1934,
          _0x3cbf48: 0x14a5,
          _0xed2462: 0x14a5,
          _0x250995: 0x535,
          _0x4ce270: 0x623,
          _0x5da33a: 0x1dc8,
          _0x274ac2: 0x362,
          _0x2c18da: 0x2028,
          _0xfa221d: 0x14d2,
          _0xe7413a: 0x1fbe,
          _0x3d8293: 0xcba,
          _0x59ffb0: 0x112d
        },
              a0_0x19114b = {
          _0x2b10ca: 0x14d2,
          _0x240ec9: 0x1a5,
          _0x2ff7b5: 0xd9b,
          _0x2d78cf: 0x1f41,
          _0x1fe844: 0xd0d,
          _0x5a3423: 0x1cc5,
          _0x425dc6: 0x535,
          _0x53a794: 0x1263
        },
              a0_0x544b29 = {
          _0x4f3844: 0x2028,
          _0x833d79: 0x535,
          _0x4f9792: 0x623,
          _0x325fc3: 0x6da,
          _0x49c3b7: 0x362,
          _0xc73b1: 0xe1b,
          _0x1b6e7a: 0x103b,
          _0x271120: 0x1d66,
          _0x2fbffa: 0x1d66,
          _0x244eb0: 0xe1b,
          _0x27926f: 0x2530
        },
              a0_0x368c14 = {
          _0x125251: 0x3b1,
          _0x127c3e: 0x1edc,
          _0x1132d5: 0x2028,
          _0x1cf852: 0x2028,
          _0xf200e1: 0x2028,
          _0x5bdc52: 0x535,
          _0x3ab1e2: 0x143a,
          _0x134673: 0xa02,
          _0x329963: 0xcc5
        },
              a0_0x1a9915 = {
          _0x48edeb: 0x5d7,
          _0xf8759a: 0x210c,
          _0x1d320d: 0x62d,
          _0x201376: 0x80d,
          _0x4ec3ab: 0x21e5,
          _0x4dd715: 0x2cb,
          _0x34d38b: 0x471,
          _0x47ada6: 0x1752,
          _0x54e877: 0x535,
          _0xae5ffb: 0xf6b,
          _0x383c85: 0x1f41,
          _0x4d281c: 0xd9b,
          _0x73ff39: 0xd0d
        },
              a0_0x12b373 = {
          _0x32145f: 0x1f8f,
          _0x510b13: 0xa27
        },
              a0_0x3e7a0a = {
          _0x5e2b58: 0x1edc,
          _0x3d4b5a: 0x1d66,
          _0x11409f: 0x59d
        },
              a0_0x2b1014 = {
          _0x3592fd: 0x1edc,
          _0x472a1c: 0xc95,
          _0x534f76: 0x535,
          _0x344f70: 0xf86,
          _0x577588: 0xf0c
        },
              a0_0x1f0803 = {
          _0x8d8317: 0x1d55,
          _0x351e8a: 0x18a0,
          _0x3f96aa: 0x1ee9,
          _0x276367: 0x7fe,
          _0xb4c478: 0x1d2
        },
              a0_0x9c9ae8 = {
          _0x9405b6: 0x535,
          _0x36f78b: 0x1de9,
          _0xf3c2ae: 0x1cc5,
          _0x3576c9: 0x535,
          _0x3d9a4c: 0x1063
        };

        _0x514a8e.r(_0x5dc626);

        var _0x5b5e1a = _0x514a8e(0x16a21),
            _0x6d8a39 = (_0x514a8e(0x18403), _0x514a8e(0x6262)),
            _0x2b9f8a = _0x514a8e.n(_0x6d8a39),
            _0x3417e0 = _0x514a8e(0x203b),
            _0x1c0231 = _0x514a8e.n(_0x3417e0),
            _0x427447 = _0x514a8e(0xc79),
            _0x3ae20d = _0x514a8e(0xd15b),
            _0x4e4c89 = _0x514a8e(0x97d2),
            _0x4e62d9 = _0x514a8e.n(_0x4e4c89),
            _0x62ed0 = _0x514a8e(0x305c),
            _0x3ed954 = _0x514a8e.n(_0x62ed0),
            _0x2ecf31 = _0x514a8e(0x1264b),
            _0x7635c1 = _0x514a8e(0x17156),
            _0x6672fb = _0x514a8e(0x6611),
            _0x542de8 = _0x514a8e(0x12a76),
            _0x1f73de = _0x514a8e(0x161cd);

        const _0x215cd3 = _0x1f73de.players.local,
              _0x1d2147 = [0x30601, 0x29d01, 0x21801, 0x29501, 0x39701, 0x22601, 0x28701, 0x28901, 0x2ad01, 0x31701, 0x31301, 0x2cd01, 0x2be01, 0x2b001],
              _0x234623 = {
          'currentCategory': '',
          'currentColors': {},
          'currentShopType': '',
          'currentShopPrices': [],
          'currentCategories': {}
        };

        let _0x3925e1,
            _0x196d98,
            _0x10d75e,
            _0x1bb2b8 = [],
            _0x668ac3 = null,
            _0x3ca0f9 = false,
            _0x43d06c = null,
            _0x7b46d = _0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number'),
            _0x31b3f0 = false;

        const _0x5f3b42 = ['preview', 'donate', 'default', 'head', 'tops', 'undershirts', 'legs', 'shoes', 'glasses', 'watches', 'bracelets', 'ears', 'masks', 'accessories', 'armor', 'decals', 'bags', 'gloves'],
              _0x1d0ca6 = [{
          'id': 0x1,
          'price': 0x1388,
          'title': 'Кожаные водительские перчатки',
          'textureCount': 0x2,
          'texture': 0x1
        }, {
          'id': 0x2,
          'price': 0xbb8,
          'title': 'Кожаные перчатки',
          'textureCount': 0x2,
          'texture': 0x1
        }, {
          'id': 0x3,
          'price': 0x7d0,
          'title': 'Флисовые перчатки',
          'textureCount': 0x2,
          'texture': 0x1
        }, {
          'id': 0x4,
          'price': 0x7d0,
          'title': 'Флисовые митенки',
          'textureCount': 0x2,
          'texture': 0x1
        }, {
          'id': 0x5,
          'price': 0x2ee,
          'title': 'Желтые рабочие перчатки',
          'textureCount': 0x1,
          'texture': 0x1
        }, {
          'id': 0x6,
          'price': 0xbb8,
          'title': 'Кожаные перчатки',
          'textureCount': 0x1,
          'texture': 0x1
        }, {
          'id': 0x7,
          'price': 0x7d0,
          'title': 'Зеленые перчатки',
          'textureCount': 0x2,
          'texture': 0x1
        }, {
          'id': 0x8,
          'price': 0xfa0,
          'title': 'Тактические перчатки с узором',
          'textureCount': 0xa,
          'texture': 0x1
        }, {
          'id': 0x9,
          'price': 0x1770,
          'title': 'Перчатки с узором',
          'textureCount': 0x14,
          'texture': 0x1
        }, {
          'id': 0xa,
          'price': 0x1770,
          'title': 'Тактические перчатки',
          'textureCount': 0x14,
          'texture': 0x1
        }, {
          'id': 0xb,
          'price': 0x1388,
          'title': 'Спортивные перчатки',
          'textureCount': 0x8,
          'texture': 0x1
        }, {
          'id': 0xc,
          'price': 0x1388,
          'title': 'Custom gloves',
          'textureCount': 0xc,
          'texture': 0x1
        }];

        let _0x3a59b7, _0x59fb00;

        const _0x3cd8ef = async (_0x468cc7, _0x890ff) => {
          try {
            if (_0x3a59b7 && _0x59fb00 && _0x215cd3.isPlayingAnim(_0x3a59b7, _0x59fb00, 0x3)) return;
            if (!_0x31b3f0) return;
            _0x3a59b7 = _0x468cc7, _0x59fb00 = _0x890ff;

            const _0x5ee50e = await _0x5b5e1a.api.taskPlayAnim(_0x468cc7, _0x890ff, 0x0, true);

            if (await _0x1f73de.game.sleep(0x3e8 * _0x5ee50e), !_0x31b3f0) return;
            await _0x5b5e1a.api.taskPlayAnim('mp_clothing@female@shirt', 'try_shirt_base', 0x1, true);
          } catch (_0x24eb94) {
            _0x5b5e1a.api.sendError(_0x24eb94);
          }
        },
              _0x445df8 = () => {
          try {
            const _0x17871b = ['drop_clothes_a', 'drop_clothes_b', 'drop_clothes_c'];
            return _0x17871b[Math.floor(Math.random() * _0x17871b.length)];
          } catch (_0xd5dc60) {
            _0x5b5e1a.api.sendError(_0xd5dc60);
          }
        },
              _0x3af2d9 = [];

        _0x1c0231().forEach(_0x2bba79 => {
          _0x2bba79.craftPositions && _0x2bba79.craftPositions.forEach(_0x416eab => {
            _0x1f73de.markers.new(0x1, new _0x1f73de.Vector3(_0x416eab.x, _0x416eab.y, _0x416eab.z - 0x1), 0x1, {
              'color': [0x34, 0x98, 0xdb, 0xff],
              'dimension': -0x1
            });
          }), _0x2bba79.clothes && _0x2bba79.clothes.forEach(_0x1bdfcf => {
            _0x3af2d9.push({ ..._0x1bdfcf,
              'fractionId': _0x2bba79.id
            }), _0x1f73de.markers.new(0x1, new _0x1f73de.Vector3(_0x1bdfcf.x, _0x1bdfcf.y, _0x1bdfcf.z - 0x1), 0x1, {
              'color': [0x34, 0x98, 0xdb, 0xff]
            });

            const _0x29c7f1 = _0x1f73de.colshapes.newSphere(_0x1bdfcf.x, _0x1bdfcf.y, _0x1bdfcf.z, 0x1);

            _0x29c7f1.fractionId = _0x2bba79.id, _0x29c7f1.position = new _0x1f73de.Vector3(_0x1bdfcf.posX, _0x1bdfcf.posY, _0x1bdfcf.posZ), _0x29c7f1.position.heading = _0x1bdfcf.posHeading, _0x1bb2b8.push(_0x29c7f1);
          });
        }), _0x1f73de.events.add('playerEnterColshape', _0x2f96d6 => {
          _0x5b5e1a.api.isAuthed() && _0x1bb2b8.includes(_0x2f96d6) && _0x215cd3.getVariable('member') === _0x2f96d6.fractionId && (_0x668ac3 = _0x2f96d6, _0x5b5e1a.api.displayHelpStringTrans('displayHelpString.openWardrobe', false, true, 0x1388));
        }), _0x1f73de.events.add('playerExitColshape', _0x5c6b1c => {
          _0x1bb2b8.includes(_0x5c6b1c) && (_0x668ac3 = null, _0x1f73de.game.ui.clearHelp(true));
        }), _0x1f73de.events.add('keys.e', () => {
          if (!_0x5b5e1a.api.isUsingSystemAnim() && !_0x3ca0f9 && _0x668ac3 && _0x1bb2b8.includes(_0x668ac3) && _0x668ac3.fractionId === _0x215cd3.getVariable('member')) {
            const _0x246ae = _0x2b9f8a()[_0x215cd3.getVariable('member') - 0x1];

            if (!_0x246ae) return;

            const _0x5af5f3 = _0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number'),
                  _0xbc3169 = [];

            for (const _0x5bcfad in _0x246ae) {
              const _0x57258d = _0x246ae[_0x5bcfad][_0x5af5f3],
                    _0x55c048 = {
                'id': _0x5bcfad,
                'items': []
              };

              for (const [_0x193702, _0x58eedd] of _0x57258d) {
                let _0x2510ef = _0x5b5e1a.api.getClothesTitle(_0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number'), _0x5bcfad, _0x193702.toString(), _0x58eedd.toString());

                const _0x57d76d = {
                  'id': _0x193702,
                  'textures': [{
                    'id': _0x58eedd,
                    'title': _0x2510ef
                  }],
                  'price': 0x0,
                  'donate': true
                };

                _0x55c048.items.push(_0x57d76d);
              }

              _0x55c048.items.length && _0xbc3169.push(_0x55c048);
            }

            _0xbc3169.push({
              'id': 'off',
              'title': _0x5b5e1a.api.language.translatePlayer('fractions.events.returnClothes')
            }), _0x1f73de.events.call('clothesShop.init', null, _0x215cd3.getVariable('member'), _0x668ac3.position, null, _0xbc3169), _0x668ac3 = false, _0x3ca0f9 = false;
          }
        });

        const _0x156fac = _0x480647 => {
          _0x480647.items && _0x480647.items.sort((_0x92bf3d, _0x5b8a7b) => _0x5f3b42.indexOf(_0x92bf3d.id) - _0x5f3b42.indexOf(_0x5b8a7b.id));
        };

        _0x1f73de.events.add('clothesShop.init', (_0xb21e0c, _0x214fa1, _0x4952b7, _0x292781 = null, _0x1b08c2) => {
          if (_0x514a8e.g.currentInterface) return;
          _0x43d06c = _0xb21e0c, _0x234623.currentShopType = _0x214fa1, _0x234623.currentShopPrices = _0x292781, _0x7b46d = _0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number');

          const _0x56dd47 = _0x7b46d ? 'female' : 'male';

          let _0x12af97 = {
            'id': 'preview',
            'title': 'cef.clothes.welcome',
            'items': [],
            'subTitle': 'cef.clothes.select-clothes-type'
          };

          const _0xe732eb = _0x514a8e.g.server.toLowerCase().startsWith('en') ? 'en' : 'ru',
                _0x14c6da = _0x7635c1[_0xe732eb] && _0x7635c1[_0xe732eb][_0x56dd47];

          if ('number' == typeof _0xb21e0c) {
            const _0x54e06b = _0x3ed954().clothesItems[_0x7b46d],
                  _0x24dd90 = _0x5b5e1a.api.getClothes(_0x215cd3).find(_0x3ebf09 => 0x0 === _0x3ebf09.isProp && 0xb === _0x3ebf09.component).drawable;

            let _0xf79ea5 = [];
            _0x2ecf31.Z[_0x7b46d][_0x24dd90] && (_0xf79ea5 = _0x2ecf31.Z[_0x7b46d][_0x24dd90].map(_0x19affa => _0x19affa.u));
            const _0xee83b7 = _0x427447[_0x56dd47],
                  _0x4ebf84 = _0x3ae20d[_0x56dd47],
                  _0x3ca694 = [];

            for (const _0x1d43d1 in _0xee83b7) {
              if (['decals', 'armor'].includes(_0x1d43d1)) continue;

              const _0x3a3c94 = _0x5b5e1a.api.getClothesInfoByCategory(_0x1d43d1),
                    _0x3c4276 = _0xee83b7[_0x1d43d1],
                    _0x1b8334 = _0x4ebf84[_0x1d43d1],
                    _0xd3e65c = _0x54e06b[_0x1d43d1],
                    _0x40acb9 = _0x292781.find(_0x20b7c2 => _0x20b7c2.category === _0x1d43d1).price,
                    _0x4e3dfa = _0x14c6da && _0x14c6da[_0x3a3c94.componentId],
                    _0x3c9357 = {
                'id': _0x1d43d1,
                'items': []
              },
                    _0x3dbf27 = _0x3c4276[_0x214fa1] || _0x3c4276.others;

              if ('undershirts' !== _0x1d43d1) {
                for (const _0x34b6b1 of _0x3dbf27) {
                  if (_0xd3e65c && _0xd3e65c.find(_0x263c35 => _0x263c35.drawable === _0x34b6b1) || _0x4e3dfa && _0x4e3dfa[_0x34b6b1]) continue;

                  if ('gloves' === _0x1d43d1) {
                    const _0x3ff6ed = _0x1d0ca6.find(_0x4f980a => _0x4f980a.id === _0x34b6b1);

                    if (!_0x3ff6ed) continue;
                    const _0x47ec35 = {
                      'id': _0x34b6b1,
                      'textures': [],
                      'price': _0x4e62d9()[0x0].gloves[_0x34b6b1] / 0x64 * _0x40acb9
                    };

                    for (let _0xd41f7e = 0x0; _0xd41f7e < _0x3ff6ed.textureCount; _0xd41f7e++) _0x47ec35.textures.push({
                      'id': _0xd41f7e,
                      'title': _0x5b5e1a.api.language.translatePlayer('items.gloves.' + _0x34b6b1)
                    });

                    _0x47ec35.textures.length && _0x3c9357.items.push(_0x47ec35);
                    continue;
                  }

                  let _0x3144e6 = _0x4e62d9()[_0x7b46d][_0x1d43d1] && _0x4e62d9()[_0x7b46d][_0x1d43d1][_0x34b6b1] || 0x9c4;

                  'leopold' !== _0x214fa1 && (_0x3144e6 = _0x3144e6 / 0x64 * _0x40acb9);

                  const _0x34a101 = {
                    'id': _0x34b6b1,
                    'textures': [],
                    'price': _0x3144e6
                  },
                        _0x2912b6 = _0x3c4276.textures[_0x34b6b1],
                        _0xeed575 = _0x3a3c94.isProp ? _0x215cd3.getNumberOfPropTextureVariations(_0x3a3c94.componentId, (0x0, _0x6672fb.DQ)(_0x56dd47, _0x3a3c94.componentId, parseInt(_0x34b6b1))) : _0x215cd3.getNumberOfTextureVariations(_0x3a3c94.componentId, (0x0, _0x6672fb.px)(_0x56dd47, _0x3a3c94.componentId, parseInt(_0x34b6b1)));

                  for (let _0x1f8bcc = 0x0; _0x1f8bcc < _0xeed575; _0x1f8bcc++) _0x2912b6 && _0x2912b6.includes(_0x1f8bcc) || _0x34a101.textures.push({
                    'id': _0x1f8bcc,
                    'title': _0x5b5e1a.api.getClothesTitle(_0x7b46d, _0x1d43d1, _0x34b6b1, _0x1f8bcc.toString()),
                    'colors': _0x1b8334 && _0x1b8334[_0x34b6b1] && _0x1b8334[_0x34b6b1][_0x1f8bcc] ? _0x1b8334[_0x34b6b1][_0x1f8bcc].length : 0x0
                  });

                  _0x34a101.textures.length && _0x3c9357.items.push(_0x34a101);
                }

                _0x3c9357.items.length && _0x3ca694.push(_0x3c9357);
              } else {
                if (!_0xf79ea5.length) continue;

                for (const _0x42a1e5 of _0xf79ea5) {
                  if (!_0x3dbf27.includes(_0x42a1e5) || _0x4e3dfa && _0x4e3dfa[_0x42a1e5]) continue;

                  const _0x29f820 = {
                    'id': _0x42a1e5,
                    'textures': [],
                    'price': 0x19 * _0x40acb9
                  },
                        _0xb36543 = _0x3c4276.textures[_0x42a1e5],
                        _0x5b693e = _0x215cd3.getNumberOfTextureVariations(_0x3a3c94.componentId, (0x0, _0x6672fb.px)(_0x56dd47, _0x3a3c94.componentId, parseInt(_0x42a1e5)));

                  for (let _0x22f049 = 0x0; _0x22f049 < _0x5b693e; _0x22f049++) _0xb36543 && _0xb36543.includes(_0x22f049) || _0x29f820.textures.push({
                    'id': _0x22f049,
                    'title': _0x5b5e1a.api.getClothesTitle(_0x7b46d, _0x1d43d1, _0x42a1e5, _0x22f049.toString())
                  });

                  _0x29f820.textures.length && _0x3c9357.items.push(_0x29f820);
                }

                _0x3c9357.items.length && _0x3ca694.push(_0x3c9357);
              }
            }

            if ('leopold' === _0x214fa1) {
              _0x12af97.title = 'cef.clothes.unique-clothes';
              const _0x5ae5f4 = {
                'id': 'default',
                'main': true,
                'title': 'cef.clothes.precategories.main',
                'subTitle': 'cef.clothes.select-clothes-type',
                'items': _0x3ca694
              };
              _0x12af97.items.push(_0x5ae5f4), _0x156fac(_0x5ae5f4);
              const _0x216758 = {
                'id': 'donate',
                'main': true,
                'title': 'cef.clothes.precategories.donate',
                'subTitle': 'cef.clothes.select-clothes-type',
                'items': []
              };

              _0x12af97.items.push(_0x216758);

              for (const _0x57a0a4 in _0x54e06b) {
                const _0x315063 = _0x4ebf84[_0x57a0a4],
                      _0x4f48a8 = _0x54e06b[_0x57a0a4],
                      _0x1b6164 = _0x5b5e1a.api.getClothesInfoByCategory(_0x57a0a4),
                      _0x48eafa = _0x14c6da && _0x14c6da[_0x1b6164.componentId],
                      _0x4deecc = {
                  'id': _0x57a0a4,
                  'items': [],
                  'donate': true
                };

                for (const _0xe03bbf of _0x4f48a8) {
                  if (_0xe03bbf.server && 'TEST0' !== _0x514a8e.g.server && _0x514a8e.g.server !== _0xe03bbf.server || _0x48eafa && _0x48eafa[_0xe03bbf.drawable]) continue;
                  const _0x48e132 = {
                    'id': _0xe03bbf.drawable,
                    'textures': [],
                    'price': _0xe03bbf.price,
                    'donate': true
                  };

                  if (_0xe03bbf.items) {
                    for (let _0x21f42f = 0x0; _0x21f42f < _0xe03bbf.items; _0x21f42f++) _0x48e132.textures.push({
                      'id': _0x21f42f,
                      'colors': _0x315063 && _0x315063[_0xe03bbf.drawable] && _0x315063[_0xe03bbf.drawable][_0x21f42f] ? _0x315063[_0xe03bbf.drawable][_0x21f42f].length : 0x0
                    });
                  } else _0x48e132.singleTexture = _0xe03bbf.texture, _0x48e132.textures.push({
                    'id': _0xe03bbf.texture,
                    'colors': _0x315063 && _0x315063[_0xe03bbf.drawable] && _0x315063[_0xe03bbf.drawable][_0xe03bbf.texture] ? _0x315063[_0xe03bbf.drawable][_0xe03bbf.texture].length : 0x0
                  });

                  _0x4deecc.items.push(_0x48e132);
                }

                _0x4deecc.items.length && _0x216758.items.push(_0x4deecc);
              }

              _0x156fac(_0x216758), _0x156fac(_0x12af97);
            } else _0x12af97.id = 'default', _0x12af97.subTitle = 'cef.clothes.select-clothes-type', _0x12af97.items = _0x3ca694, _0x156fac(_0x12af97);
          } else _0x12af97.id = 'default', _0x12af97.items = _0x1b08c2, _0x156fac(_0x12af97);

          _0x234623.currentCategories = _0x12af97, _0x542de8.globalBrowser.toggle('clothes', {
            'value': true,
            'shop': _0x214fa1,
            'gender': _0x7b46d,
            'shopPrices': _0x292781,
            'categories': _0x12af97
          }), _0x5b5e1a.api.toggleHud(false), _0x5b5e1a.api.toggleChat(false), _0x5b5e1a.api.toggleRadar(false), 'number' == typeof _0x214fa1 && _0x214fa1 && (_0x1f73de.events.callRemote('3702382805', _0x215cd3.remoteId + 0x4), _0x5b5e1a.api.setPlayerPos(_0x215cd3, new _0x1f73de.Vector3(_0x4952b7.x, _0x4952b7.y, _0x4952b7.z)), _0x215cd3.setHeading(_0x4952b7.heading));
          let _0x2e4364 = _0x215cd3.position;
          _0x10d75e = _0x215cd3.getHeading();

          let _0x37b40b = new _0x1f73de.Vector3(0x0, 0x3, 0x0),
              _0x2b9e57 = _0x1f73de.game.object.getObjectOffsetFromCoords(_0x2e4364.x, _0x2e4364.y, _0x2e4364.z, _0x10d75e, _0x37b40b.x, _0x37b40b.y, _0x37b40b.z);

          _0x3925e1 = _0x1f73de.cameras.new('default'), _0x3925e1.setCoord(_0x2b9e57.x, _0x2b9e57.y, _0x2b9e57.z), _0x3925e1.setFov(0x32), _0x3925e1.pointAtCoord(_0x2e4364.x, _0x2e4364.y, _0x2e4364.z), _0x3925e1.setActive(true), _0x1f73de.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x5b5e1a.api.cameraRotation.start(_0x3925e1, new _0x1f73de.Vector3(_0x2e4364.x, _0x2e4364.y, _0x2e4364.z), new _0x1f73de.Vector3(_0x2e4364.x, _0x2e4364.y, _0x2e4364.z), new _0x1f73de.Vector3(0x0, 0x3, 0x0), _0x10d75e, 0x28, true), _0x5b5e1a.api.cameraRotation.setXBoderMultiplier(0xb4, 0xb4), _0x5b5e1a.api.cameraRotation.setZBoderMultiplier(-1.5, 0x1), _0x215cd3.freezePosition(true), _0x31b3f0 = true, _0x5b5e1a.api.setDiscordStatus('clothesshop'), _0x1f73de.events.call('utils.disablePlayerMove', true);
        }), _0x1f73de.events.add('clothesShop.changeCategory', async (_0x4a59e7, _0x2cd4e4) => {
          _0x234623.currentCategory = _0x4a59e7;
          let _0xd348c6 = 0x0,
              _0x22645b = 0x0,
              _0x19e948 = 0x3;

          switch (_0x4a59e7) {
            case 'tops':
            case 'bags':
            case 'undershirts':
            case 'torsos':
            case 'gloves':
              _0xd348c6 = 0x0, _0x22645b = 0x0, _0x19e948 = 0x3;
              break;

            case 'accessories':
              _0xd348c6 = 0x0, _0x22645b = 0x0, _0x19e948 = 2.75;
              break;

            case 'shoes':
              _0xd348c6 = 0x3779, _0x22645b = 0x0, _0x19e948 = 0x2;
              break;

            case 'legs':
              _0xd348c6 = 0x3fcf, _0x22645b = -0.25, _0x19e948 = 0x3;
              break;

            case 'head':
            case 'glasses':
            case 'ears':
            case 'masks':
              _0xd348c6 = 0x796e, _0x22645b = 0x0, _0x19e948 = 1.5;
              break;

            case 'watches':
              _0xd348c6 = 0x49d9, _0x22645b = 0x0, _0x19e948 = 1.5;
              break;

            case 'bracelets':
              _0xd348c6 = 0xdead, _0x22645b = 0x0, _0x19e948 = 1.5;
          }

          _0x5b5e1a.api.cameraRotation.pointCamAtEntityBone(_0x215cd3, _0xd348c6, 0x0, 0x0, _0x22645b, 0x0, _0x19e948, 0x1), _0x215cd3.setHeading(_0x10d75e), _0x1f73de.events.call('resetClothes'), _0x215cd3.setHeading(_0x10d75e), await _0x5b5e1a.api.taskPlayAnim('mp_clothing@female@shirt', 'try_shirt_base', 0x1, true);
        });

        const _0x3a4ad5 = (_0xff9976, _0x1decc0) => {
          if (['preview', 'donate', 'default'].includes('')) return;

          const _0x58f6aa = _0x5b5e1a.api.getClothesInfoByCategory('');

          _0x58f6aa.isProp ? _0x1f73de.events.call('setProp', _0x58f6aa.componentId, _0xff9976, _0x1decc0) : _0x1f73de.events.call('setClothes', _0x58f6aa.componentId, _0xff9976, _0x1decc0);
        };

        let _0x9a58fc, _0x4c8d27;

        _0x1f73de.events.add('clothesShop.changeItem', (_0x5193b9, _0x370247, _0x393249) => {
          _0x3a4ad5(_0x5193b9, _0x393249), false && (_0x234623.currentColors = {}, _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x0), _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x1), _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x2), _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x3));
        }), _0x1f73de.events.add('clothesShop.changeTexture', (_0x54ab3a, _0x53f7ff, _0x286cdb) => {
          if (_0x3a4ad5(_0x54ab3a, _0x53f7ff), false) {
            const _0x2850a3 = _0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number'),
                  _0x47f71e = _0x3ae20d[_0x2850a3 ? 'female' : 'male'][''];

            if (!_0x47f71e || !_0x47f71e[_0x54ab3a] || !_0x47f71e[_0x54ab3a][_0x53f7ff]) return;

            for (const _0x5e8d5d in _0x234623.currentColors) {
              const _0x28dbc3 = parseInt(_0x5e8d5d);

              _0x47f71e[_0x54ab3a][_0x53f7ff].includes(_0x28dbc3) || (delete _0x234623.currentColors[_0x28dbc3], 0x0 === _0x28dbc3 ? (_0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x0), _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x1)) : 0x1 === _0x28dbc3 ? _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x2) : 0x2 === _0x28dbc3 && _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, 0xff, 0xff, 0xff, 0x3));
            }
          }
        }), _0x1f73de.events.add('clothesShop.updateColor', (_0x3b8d97, _0x4181ff, _0x3ebacd, _0x298429, _0x5560e3, _0xe36173) => {
          const _0x216d0d = _0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number'),
                _0x1d7cbe = _0x3ae20d[_0x216d0d ? 'female' : 'male'][''];

          if (!(_0x1d7cbe && _0x1d7cbe[_0x3b8d97] && _0x1d7cbe[_0x3b8d97][_0x4181ff] && _0x1d7cbe[_0x3b8d97][_0x4181ff].length)) return;
          const _0x18454f = _0x1d7cbe[_0x3b8d97][_0x4181ff][_0x3ebacd];
          _0x234623.currentColors[_0x18454f] = {
            'r': _0x298429,
            'g': _0x5560e3,
            'b': _0xe36173
          }, 0x0 === _0x18454f ? (_0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, _0x298429, _0x5560e3, _0xe36173, 0x0), _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, _0x298429, _0x5560e3, _0xe36173, 0x1)) : 0x1 === _0x18454f ? _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, _0x298429, _0x5560e3, _0xe36173, 0x2) : 0x2 === _0x18454f && _0x1f73de.game.ped.setHeadBlendPaletteColor(_0x215cd3.handle, _0x298429, _0x5560e3, _0xe36173, 0x3);
        }), _0x1f73de.events.add('clothesShop.exit', () => {
          _0x43d06c = null, _0x31b3f0 = false, _0x196d98 && (_0x196d98.cancel(), _0x196d98 = undefined), _0x542de8.globalBrowser.toggle('clothes', {
            'value': false
          }), _0x215cd3.freezePosition(false), _0x5b5e1a.api.toggleHud(true), _0x5b5e1a.api.toggleChat(true), _0x5b5e1a.api.toggleRadar(true), _0x5b5e1a.api.cameraRotation.stop(), _0x1f73de.game.cam.renderScriptCams(false, false, 0x0, false, false, 0x0), _0x1f73de.cameras.exists(_0x3925e1) && (_0x3925e1 = _0x3925e1.destroy()), _0x1f73de.events.callRemote('3702382805', 0x0), _0x5b5e1a.api.stopAnim(), _0x1f73de.events.call('resetClothes'), _0x542de8.globalBrowser.emit('toggle_bankCard', {
            'value': false
          }), _0x1f73de.events.call('utils.disablePlayerMove', false), _0x3ca0f9 = false, _0x1f73de.events.callRemote('2266917858');
        }), _0x1f73de.events.add('clothesShop.resetClothes', async () => {
          _0x1f73de.events.call('resetClothes'), _0x215cd3.setHeading(_0x10d75e), await _0x5b5e1a.api.taskPlayAnim('mp_clothing@female@shirt', 'try_shirt_base', 0x1, true), _0x5b5e1a.api.cameraRotation.pointCamAtEntityBone(_0x215cd3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x1);
        }), _0x1f73de.events.add('clothesShop.buyClothes', (_0x19b1a4, _0x48429e, _0x4cc5c4, _0x4d7e86, _0x2e0164) => {
          if (_0x3ca0f9) return void _0x5b5e1a.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          if (!('bank' !== _0x19b1a4 || _0x215cd3.bank && _0x215cd3.bank.id)) return void _0x5b5e1a.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
          _0x3ca0f9 = true, _0x215cd3.isMale() ? _0x3cd8ef('mp_character_creation@customise@male_a', _0x445df8()) : _0x3cd8ef('mp_character_creation@customise@female_a', _0x445df8());

          const _0x3246f9 = _0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number'),
                _0x435676 = _0x3ae20d[_0x3246f9 ? 'female' : 'male'][''];

          let _0x567a28 = false,
              _0x3d5156 = null;
          _0x435676 && _0x435676[_0x48429e] && _0x435676[_0x48429e][_0x4cc5c4] && _0x435676[_0x48429e][_0x4cc5c4].length && (_0x567a28 = true, _0x3d5156 = _0x435676[_0x48429e][_0x4cc5c4].map(_0x13ae92 => _0x234623.currentColors[_0x13ae92] ? _0x5b5e1a.api.rgb2hexColor(_0x234623.currentColors[_0x13ae92]) : 'FFFFFF'));

          const _0x1527e1 = _0x5b5e1a.api.getClothesInfoByCategory('');

          _0x1f73de.events.callRemote('4057236684', _0x43d06c, _0x19b1a4, '', _0x1527e1.isProp, _0x1527e1.componentId, _0x48429e, _0x4cc5c4, _0x4d7e86, _0x2e0164, _0x567a28, JSON.stringify(_0x3d5156));
        }), _0x1f73de.events.add('clothesShop.buyClothesSuccess', (_0x16d8e4, _0x19a20f) => {
          if (_0x3ca0f9 = false, _0x1f73de.events.call('api.playPedSpeech', _0x5b5e1a.api.getNearestPed().id, 'SHOP_SELL', _0x4c8d27), false && _0x19a20f) {
            let _0x42f0b5 = [];

            const _0x580184 = _0x5b5e1a.api.getEntitySync(_0x215cd3, 'gender', 'number');

            _0x2ecf31.Z[_0x580184][_0x16d8e4] && (_0x42f0b5 = _0x2ecf31.Z[_0x580184][_0x16d8e4].map(_0x32d642 => _0x32d642.u));

            const _0x518861 = _0x580184 ? 'female' : 'male',
                  _0x3ed4b8 = 'undershirts',
                  _0x499a52 = _0x5b5e1a.api.getClothesInfoByCategory(_0x3ed4b8),
                  _0x2e7ff8 = _0x427447[_0x518861].undershirts,
                  _0x5c5ec4 = _0x234623.currentShopPrices.find(_0x12caf6 => _0x12caf6.category === _0x3ed4b8).price,
                  _0x432260 = _0x2e7ff8[''] || _0x2e7ff8.others,
                  _0x5da1a1 = {
              'id': _0x3ed4b8,
              'items': []
            };

            for (const _0x143994 of _0x42f0b5) {
              if (!_0x432260.includes(_0x143994)) continue;

              const _0x383c6c = {
                'id': _0x143994,
                'textures': [],
                'price': 0x19 * _0x5c5ec4
              },
                    _0xcfc193 = _0x2e7ff8.textures[_0x143994],
                    _0x3114e5 = _0x215cd3.getNumberOfTextureVariations(_0x499a52.componentId, (0x0, _0x6672fb.px)(_0x518861, _0x499a52.componentId, parseInt(_0x143994)));

              for (let _0x4bc0e9 = 0x0; _0x4bc0e9 < _0x3114e5; _0x4bc0e9++) _0xcfc193 && _0xcfc193.includes(_0x4bc0e9) || _0x383c6c.textures.push({
                'id': _0x4bc0e9,
                'title': _0x5b5e1a.api.getClothesTitle(_0x580184, _0x3ed4b8, _0x143994, _0x4bc0e9.toString())
              });

              _0x383c6c.textures.length && _0x5da1a1.items.push(_0x383c6c);
            }

            if (_0x5da1a1.items.length) {
              const _0x541e10 = _0x234623.currentCategories.items.find(({
                id: _0x2623fc
              }) => _0x2623fc === _0x3ed4b8);

              _0x541e10 ? _0x541e10.items = _0x5da1a1.items : (_0x234623.currentCategories.items.push(_0x5da1a1), _0x156fac(_0x234623.currentCategories));
            } else {
              _0x234623.currentCategories.items = _0x234623.currentCategories.items.filter(({
                id: _0x26f803
              }) => _0x26f803 !== _0x3ed4b8);
            }

            _0x234623.currentCategories.__ = true, _0x542de8.globalBrowser.emit('clothes_updateCategories', _0x234623.currentCategories);
          }
        }), _0x1f73de.events.add('clothesShop.buyClothesError', _0x20fdb8 => {
          _0x3ca0f9 = false;
          let _0x2cf52f = 'BUMP';

          switch (_0x20fdb8) {
            case 'money':
              _0x2cf52f = 'BUMP';
              break;

            case 'outofstock':
              _0x2cf52f = 'SHOP_OUT_OF_STOCK';
          }

          _0x2cf52f && _0x1f73de.events.call('api.playPedSpeech', _0x5b5e1a.api.getNearestPed().id, _0x2cf52f, _0x4c8d27);
        }), _0x1f73de.events.add('playerEnterInterior', _0x5e381f => {
          _0x1d2147.includes(_0x5e381f) && (_0x4c8d27 = [0x39701, 0x28701, 0x28901].includes(_0x5e381f) ? 'S_F_M_SHOP_HIGH_WHITE_MINI_01' : [0x29d01, 0x21801, 0x29501, 0x22601, 0x31301, 0x2b001].includes(_0x5e381f) ? 'S_F_Y_SHOP_MID_WHITE_MINI_01' : 'S_F_Y_SHOP_LOW_WHITE_MINI_01', _0x5b5e1a.api.playPedSpeech(_0x5b5e1a.api.getNearestPed(0xc8).id, 'SHOP_GREET', _0x4c8d27)), _0x9a58fc = _0x5e381f;
        }), _0x1f73de.events.add('playerExitInterior', _0x9de5c6 => {
          _0x1d2147.includes(_0x9a58fc) && (_0x5b5e1a.api.playPedSpeech(_0x5b5e1a.api.getNearestPed(0xc8).id, 'SHOP_GOODBYE', _0x4c8d27), _0x4c8d27 = null, _0x3ca0f9 = false), _0x9a58fc = _0x9de5c6;
        }), _0x1f73de.events.add('clothesShop.fractionWear', (_0x630545, _0x17dc3b, _0x1e6885) => {
          if (_0x3ca0f9) return;
          _0x3ca0f9 = true;

          const _0x4340e0 = _0x5b5e1a.api.getClothesInfoByCategory(_0x630545);

          _0x1f73de.events.callRemote('3565889469', JSON.stringify({
            'isProp': _0x4340e0.isProp,
            'component': _0x4340e0.componentId,
            'drawable': _0x17dc3b,
            'texture': _0x1e6885
          }));
        }), _0x1f73de.events.add('clothesShop.result', () => {
          _0x3ca0f9 = false;
        }), _0x1f73de.events.add('clothesShop.leftFractionClothes', () => {
          _0x3ca0f9 || (_0x3ca0f9 = true, _0x1f73de.events.callRemote('2702876203'));
        }), _0x1f73de.events.add('playerDeath2', _0x5c3b2d => {
          _0x43d06c && _0x5c3b2d === _0x215cd3 && _0x1f73de.events.call('clothesShop.exit');
        });
      },
      0x1594f: (_0x1b4272, _0x2f8ce5, _0x7081c) => {
        'use strict';

        const a0_0x1c3aa9 = {
          _0x2c3392: 0x1677,
          _0x5cdb68: 0x1790,
          _0x14b246: 0x2227,
          _0x1368c8: 0x74b,
          _0xd296bb: 0x535,
          _0x13feb5: 0xfba,
          _0x53c563: 0xedf
        },
              a0_0x171feb = {
          _0x1f78d5: 0x1721,
          _0xa66da6: 0x535,
          _0x3e5d1e: 0x52c,
          _0x45cde1: 0x2488,
          _0x41485d: 0x1a3,
          _0x18b99f: 0x535,
          _0x50a8c4: 0x3e9
        },
              a0_0x317988 = {
          _0x4998c3: 0x971,
          _0x11d503: 0x1dc8,
          _0x4069c2: 0x2488,
          _0x36a3f5: 0x13b0,
          _0x2f2000: 0x535
        };

        _0x7081c.r(_0x2f8ce5);

        var _0x349046 = _0x7081c(0x16a21),
            _0x284879 = _0x7081c(0x12a76),
            _0x40067e = _0x7081c(0x161cd);

        const _0x52e7e6 = _0x40067e.players.local;
        let _0x357431 = false,
            _0x240678 = false;
        _0x40067e.events.add('club.init', (_0xc39014 = 'Diamond', _0x13e2cb) => {
          if (_0x7081c.g.currentInterface && 'dialog' != _0x7081c.g.currentInterface) return;

          const _0x24f059 = _0x13e2cb.map(_0x12fc59 => [null, _0x12fc59]),
                _0x19f0bd = _0x40067e.inventory.getInventoryItems(_0x349046.api.getEntitySync(_0x52e7e6, 'gender', 'number'), _0x24f059);

          _0x284879.globalBrowser.toggle('club', {
            'value': true,
            'type': _0xc39014,
            'goods': _0x19f0bd
          }), _0x349046.api.toggleHud(false), _0x349046.api.toggleChat(false), _0x349046.api.setDiscordStatus('bar'), _0x357431 = true;
        }), _0x40067e.events.add('club.exit', () => {
          _0x284879.globalBrowser.toggle('club', {
            'value': false
          }), _0x349046.api.toggleHud(true), _0x349046.api.toggleChat(true), _0x284879.globalBrowser.emit('toggle_bankCard', {
            'value': false
          }), _0x349046.api.setDiscordStatus(), _0x357431 = false, _0x240678 = false;
        }), _0x40067e.events.add('club.buy', (_0x58d579, _0x41c5bd, _0x200ca1) => {
          if (_0x240678) return _0x349046.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          'bank' !== _0x41c5bd || _0x52e7e6.bank && _0x52e7e6.bank.id ? (_0x240678 = true, _0x40067e.events.callRemote('3959349840', _0x58d579, _0x41c5bd, _0x200ca1)) : _0x349046.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
        }), _0x40067e.events.add('club.buySuccess', _0x3316c0 => {
          let _0x1a4f98;

          switch (_0x240678 = false, _0x3316c0) {
            case 'BahamaMamas':
              _0x1a4f98 = 'CHEF';
              break;

            case 'VanillaUnicorn':
              _0x1a4f98 = 'CHASTITY';
              break;

            case 'Diamond':
            case 'ThePalace':
              _0x1a4f98 = 'CHEETAH';
              break;

            case 'Yellow_Jack_Inn':
              _0x1a4f98 = 'DAVE';
          }

          _0x1a4f98 && _0x349046.api.playPedSpeech(_0x349046.api.getNearestPed().id, 'GENERIC_THANKS', _0x1a4f98);
        }), _0x40067e.events.add('club.buyError', () => {
          _0x240678 = false;
        }), _0x40067e.events.add('playerDeath2', _0x20f572 => {
          _0x357431 && _0x20f572 === _0x52e7e6 && _0x40067e.events.call('club.exit');
        }), _0x40067e.events.add('npc.exitShape', () => {
          _0x357431 && _0x40067e.events.call('club.exit');
        });
      },
      0x47ca: (_0x1cd816, _0xb0dea4, _0x78f90) => {
        'use strict';

        const a0_0x130cea = {
          _0x58ec61: 0x4a3,
          _0x41e6c9: 0x2488
        };

        _0x78f90.r(_0xb0dea4);

        var _0x196ccf = _0x78f90(0x12a76),
            _0x516ed9 = _0x78f90(0x161cd);

        const _0x38819b = _0x516ed9.players.local;
        let _0x439d99 = false;
        _0x516ed9.events.add('createTicket.init', (_0x143edd, _0x4b452b) => {
          _0x196ccf.globalBrowser.emit('chat_show', false), _0x196ccf.globalBrowser.toggle('createTicket', {
            'value': true,
            'name': _0x143edd,
            'staticId': _0x4b452b
          });
        }), _0x516ed9.events.add('createTicket.show', (_0x599981, _0x46fe8b, _0x5445e4) => {
          _0x439d99 || (_0x439d99 = true, _0x516ed9.events.callRemote('1805293454', _0x599981, _0x46fe8b, _0x5445e4));
        }), _0x516ed9.events.add('createTicket.close', () => {
          _0x439d99 = false, _0x196ccf.globalBrowser.toggle('createTicket', {
            'value': false
          }), _0x196ccf.globalBrowser.emit('chat_show', true);
        }), _0x516ed9.events.add('playerDeath2', _0xf3d525 => {
          _0xf3d525 === _0x38819b && (_0x439d99 = false);
        });
      },
      0x123b4: (_0x992975, _0x5833d5, _0x2c981b) => {
        'use strict';

        const a0_0x32cb0b = {
          _0x267cd1: 0x1dc8,
          _0x52e914: 0x6da,
          _0x41397d: 0x21e0,
          _0x30b5be: 0x1c56,
          _0x421e7c: 0x987,
          _0x17ba30: 0x1d66,
          _0x204c39: 0x47a
        },
              a0_0x106abc = {
          _0x13b09c: 0x1293,
          _0x442310: 0x535,
          _0x20bdef: 0x12a3,
          _0x3a90e6: 0x1b37,
          _0x3a5436: 0x1de9,
          _0x1dcdf4: 0x1d66,
          _0x3b6132: 0x2134,
          _0x1495f6: 0x1870
        },
              a0_0x15da8a = {
          _0x3d6d9d: 0x14d2,
          _0x4d2250: 0x1a5,
          _0x1648ca: 0x844,
          _0x182b9a: 0x14d2,
          _0x2b18bf: 0x14d2,
          _0x48a5bf: 0x535,
          _0x35dc1e: 0x212b,
          _0x972f72: 0x880,
          _0x611284: 0x535,
          _0x41da60: 0x1a5,
          _0x1aa766: 0xfcf
        },
              a0_0xc0effe = {
          _0x424268: 0xcc5,
          _0x177544: 0x14d0,
          _0x293a32: 0x665
        },
              a0_0x144970 = {
          _0x586ec9: 0x23d1,
          _0x1e2891: 0x176b
        },
              a0_0x389de3 = {
          _0x5a3e3f: 0x14d2,
          _0x3d6ce7: 0x1da5
        },
              a0_0x2163f3 = {
          _0x26c7d2: 0x23a3,
          _0x3d3f5c: 0x1edc,
          _0x5c2c32: 0x1fdf,
          _0x577018: 0x535,
          _0x224eb8: 0xf6b,
          _0x4986c4: 0x1263
        },
              a0_0x1393fc = {
          _0x36e049: 0x1f41
        },
              a0_0x55628a = {
          _0x8343e2: 0x14d2,
          _0x5467bb: 0x8f5,
          _0x311df3: 0xbce,
          _0x579ae2: 0x1da5,
          _0x3bb279: 0x1dcb,
          _0x58048f: 0x1d55,
          _0x40cb91: 0x4a3,
          _0x48970e: 0x381,
          _0x40caf8: 0x535,
          _0x497d5e: 0x1147,
          _0x3593e1: 0x1161
        };
        _0x2c981b.r(_0x5833d5), _0x2c981b.d(_0x5833d5, {
          'isCustomizationActive': () => _0x61db0c
        });

        var _0xd46723 = _0x2c981b(0x16a21),
            _0x395aee = _0x2c981b(0x6611),
            _0x440a47 = _0x2c981b(0x48c4),
            _0x3595e7 = _0x2c981b(0x16e5f),
            _0x49ee44 = _0x2c981b(0x5d14),
            _0x3c0dde = _0x2c981b(0x5789),
            _0x42582e = _0x2c981b(0x12a76),
            _0x4acf75 = _0x2c981b(0x161cd);

        const _0x553d09 = _0x4acf75.players.local;

        let _0x2e65e1,
            _0x867a44 = {},
            _0x61db0c = false,
            _0x5dc5ba = false,
            _0x7d3590 = false;

        _0x4acf75.events.add('customization.skyCameraDown', async (_0x4a178b, _0x24664c, _0x389cc9) => {
          const a0_0x15a2cb = {
            _0x525dad: 0x1a5
          };
          _0x4acf75.events.call('utils.hideLoadingPrompt'), _0x553d09.freezePosition(true), _0x3595e7.Z.stop(), await _0xd46723.api.requestCollisionAround(), _0xd46723.api.fadeIn(0x0), _0x61db0c = true, _0x4acf75.events.callRemote('3600581480'), _0xd46723.api.setPlayerPos(_0x553d09, new _0x4acf75.Vector3(-760.477294921875, 314.9211730957031, 217.05039978027344)), _0x553d09.setHeading(0x30), _0x24664c || (_0x553d09.model = _0x4acf75.game.joaat('mp_m_freemode_01')), _0x42582e.globalBrowser.toggle('ucp', {
            'value': false
          }), _0xd46723.api.moveSkyCamera('down', 0x1, false).then(() => {
            _0x4acf75.events.call('removeClientClothes'), _0x4acf75.events.call('customization.init', _0x4a178b, _0x24664c, _0x389cc9);
          });
        }), _0x4acf75.events.add('customization.init', async (_0x2cca79, _0x52b94e, _0x2a40e9) => {
          _0x867a44 = _0x52b94e || _0x4c7638(), _0x3595e7.Z.play('customization', {
            'volume': 0xf,
            'force': true,
            'waitTime': 0x1388
          }), _0x4acf75.events.call('utils.disablePlayerMove', true), _0x553d09.setHeading(0x30), _0x553d09.setAlpha(0xff), _0x4acf75.game.audio.setMobileRadioEnabledDuringGameplay(false), _0x4acf75.game.audio.setRadioToStationIndex(0xff), _0x4acf75.events.call('setTraffic', 0x0);

          let _0x2de3e3 = _0x553d09.isMale() ? 0x0 : 0x1;

          _0xd46723.api.getEntitySync(_0x553d09, 'gender') && (_0x2de3e3 = _0xd46723.api.getEntitySync(_0x553d09, 'gender', 'number') ? 0x1 : 0x0), _0x42582e.globalBrowser.toggle('customization', {
            'value': true,
            'accounts': _0x2cca79,
            'eyeColorsTitles': _0xd46723.api.getEyeColorsTitles(),
            'currentCustomization': _0x867a44,
            'age': _0x2a40e9,
            'login': _0xd46723.api.getName(_0x553d09),
            'gender': _0x2de3e3
          });

          const _0x2e80a5 = _0x4acf75.game.interior.getInteriorAtCoords(-774.0223, 342.1718, 196.6863);

          _0x4acf75.game.interior.refreshInterior(_0x2e80a5), _0xd46723.api.toggleHud(false), _0xd46723.api.toggleRadar(false);

          let _0x48e37a = _0x553d09.position,
              _0x84460b = _0x553d09.getHeading(),
              _0x491b68 = new _0x4acf75.Vector3(0x0, 0x3, 0x0),
              _0x2168f2 = _0x4acf75.game.object.getObjectOffsetFromCoords(_0x48e37a.x, _0x48e37a.y, _0x48e37a.z, _0x84460b, _0x491b68.x, _0x491b68.y, _0x491b68.z);

          _0x2e65e1 = _0x4acf75.cameras.new('default'), _0x2e65e1.setCoord(_0x2168f2.x, _0x2168f2.y, _0x2168f2.z + 0.25), _0x2e65e1.setFov(0x32), _0x2e65e1.pointAtCoord(_0x48e37a.x, _0x48e37a.y, _0x48e37a.z + 0.25), _0x2e65e1.setActive(true), _0x4acf75.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0xd46723.api.cameraRotation.start(_0x2e65e1, new _0x4acf75.Vector3(_0x48e37a.x, _0x48e37a.y, _0x48e37a.z), new _0x4acf75.Vector3(_0x48e37a.x, _0x48e37a.y, _0x48e37a.z), new _0x4acf75.Vector3(0x0, 0x3, 0x0), _0x84460b, 0x28, true), _0xd46723.api.cameraRotation.setXBoderMultiplier(0x32, 0x131), _0xd46723.api.cameraRotation.setZBoderMultiplier(-0.5, 1.5), _0x4acf75.events.call('customization.onCategorySelect', 'parents'), _0x553d09.isMale() ? (await _0xd46723.api.requestAnimDict('mp_character_creation@customise@male_a'), _0x553d09.taskPlayAnim('mp_character_creation@customise@male_a', 'drop_loop', 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false)) : (await _0xd46723.api.requestAnimDict('mp_character_creation@customise@female_a'), _0x553d09.taskPlayAnim('mp_character_creation@customise@female_a', 'drop_loop', 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false)), _0x4acf75.game.sleep(0xbb8).then(() => {
            _0x553d09.setHeading(0x30);
          }), _0x4acf75.game.sleep(0x1f4).then(() => _0x4acf75.events.call('removeClientClothes')), _0x5dc5ba = true;
        }), _0x4acf75.events.add('customization.onCategorySelect', async _0x201afc => {
          let _0x30f1b3 = 0x0,
              _0x509830 = 0.25,
              _0x5d9012 = 0x3;
          ['DNK', 'hair', 'skin', 'parents'].includes(_0x201afc) ? (_0x30f1b3 = 0x796e, _0x509830 = 0x0, _0x5d9012 = 1.5) : 'clothes' === _0x201afc && (_0x509830 = -0.25), _0xd46723.api.cameraRotation.pointCamAtEntityBone(_0x553d09, _0x30f1b3, 0x0, 0x0, _0x509830, 0x0, _0x5d9012, 0x1);
        }), _0x4acf75.events.add('customization.changeGender', (_0x13c76b, _0x3fbf2c) => {
          _0x4acf75.events.callRemote('3051026980', _0x13c76b, !_0x3fbf2c), _0x867a44 = _0x4c7638();
        }), _0x4acf75.events.add('customization.setHeadData', (_0x33707f, _0x474cd4, _0x1a1808 = 0.5, _0x49f617 = 0.5) => {
          _0x33707f += 0x15, Object.assign(_0x867a44, {
            'mother': _0x33707f,
            'father': _0x474cd4,
            'similarity': _0x1a1808,
            'skinSimilarity': _0x49f617
          }), _0x553d09.setHeadBlendData(_0x33707f, _0x474cd4, 0x0, _0x33707f, _0x474cd4, 0x0, _0x1a1808, _0x49f617, 0x0, false);
        }), _0x4acf75.events.add('customization.setFaceFeatures', _0x58b6c3 => {
          (_0x58b6c3 = JSON.parse(_0x58b6c3)).forEach((_0x3fe3dd, _0x6fffcf) => {
            _0x867a44.faceFeatureParams[_0x6fffcf] !== _0x3fe3dd && (_0x867a44.faceFeatureParams[_0x6fffcf] = _0x3fe3dd, _0x553d09.setFaceFeature(_0x6fffcf, _0x3fe3dd));
          });
        }), _0x4acf75.events.add('customization.setHair', _0x2f86dd => {
          _0x322c94(_0x2f86dd);
        }), _0x4acf75.events.add('customization.setClothes', (_0x14f7cf, _0x150bea, _0x525a92, _0x17b24b) => {
          _0x867a44.clothes[_0x14f7cf] = {
            'componentId': _0x150bea,
            'drawableId': _0x525a92,
            'textureId': _0x17b24b
          }, _0x4acf75.events.call('setClothes', _0x150bea, _0x525a92, _0x17b24b), _0x553d09.isMale() ? _0x829016('mp_character_creation@customise@male_a', _0xf0a59a()) : _0x829016('mp_character_creation@customise@female_a', _0xf0a59a());
        }), _0x4acf75.events.add('customization.setHeadOverlay', _0x50a534 => {
          ((_0x50a534 = JSON.parse(_0x50a534)).force || _0x867a44.overlay[_0x50a534.overlay].index !== _0x50a534.index || _0x867a44.overlay[_0x50a534.overlay].opacity !== _0x50a534.opacity) && (_0x867a44.overlay[_0x50a534.overlay].index = _0x50a534.index, _0x867a44.overlay[_0x50a534.overlay].opacity = _0x50a534.opacity, _0x553d09.setHeadOverlay(_0x50a534.overlay, _0x867a44.overlay[_0x50a534.overlay].index, _0x867a44.overlay[_0x50a534.overlay].opacity, _0x867a44.overlay[_0x50a534.overlay].color1, _0x867a44.overlay[_0x50a534.overlay].color2));
        }), _0x4acf75.events.add('customization.setColor', (_0x51d734, _0x1935f0, _0x15ede1) => {
          switch (_0x51d734) {
            case 'haircut':
              _0x867a44.hairColor[_0x1935f0] = _0x15ede1, _0x553d09.setHairColor(_0x867a44.hairColor[0x0], _0x867a44.hairColor[0x1]);
              break;

            case 'eye':
              _0x867a44.eyeColor = _0x15ede1, _0x553d09.setEyeColor(_0x15ede1);
              break;

            case 'beard':
              _0x867a44.overlay[0x1]['color' + (_0x1935f0 + 0x1)] = _0x15ede1, _0x553d09.setHeadOverlayColor(0x1, 0x1, _0x867a44.overlay[0x1].color1, _0x867a44.overlay[0x1].color2);
              break;

            case 'eyebrow':
              _0x867a44.overlay[0x2]['color' + (_0x1935f0 + 0x1)] = _0x15ede1, _0x553d09.setHeadOverlayColor(0x2, 0x1, _0x867a44.overlay[0x2].color1, _0x867a44.overlay[0x2].color2);
              break;

            case 'blush':
              _0x867a44.overlay[0x5]['color' + (_0x1935f0 + 0x1)] = _0x15ede1, _0x553d09.setHeadOverlayColor(0x5, 0x2, _0x867a44.overlay[0x5].color1, _0x867a44.overlay[0x5].color2);
              break;

            case 'mouth':
              _0x867a44.overlay[0x8]['color' + (_0x1935f0 + 0x1)] = _0x15ede1, _0x553d09.setHeadOverlayColor(0x8, 0x2, _0x867a44.overlay[0x8].color1, _0x867a44.overlay[0x8].color2);
              break;

            case 'chesthair':
              _0x867a44.overlay[0xa]['color' + (_0x1935f0 + 0x1)] = _0x15ede1, _0x553d09.setHeadOverlayColor(0xa, 0x1, _0x867a44.overlay[0xa].color1, _0x867a44.overlay[0xa].color2);
          }
        }), _0x4acf75.events.add('customization.save', (_0x4d6710, _0x43995e, _0x4643a0, _0xfdee8c = 'create') => {
          if (_0x7d3590) return;
          const _0x484075 = {
            'login': _0x4d6710,
            'accountId': _0x553d09.getVariable('id'),
            'member': _0x553d09.getVariable('member'),
            'family': _0x553d09.getVariable('family'),
            'admin': _0xd46723.api.getAdmin(_0x553d09),
            'socialClub': _0x553d09.socialClub,
            'gender': _0x43995e,
            'userLogin': _0x553d09.userLogin,
            'email': _0x553d09.email,
            'timezone': (0x0, _0x440a47.getServerTimezone)()
          };
          _0x42582e.globalBrowser.emit('main_updateAuthData', JSON.stringify(_0x484075)), _0x7d3590 = true, 'create' === _0xfdee8c ? _0x4acf75.events.callRemote('1017306860', _0x4d6710, _0x43995e, _0x4643a0, JSON.stringify(_0x867a44)) : _0x4acf75.events.callRemote('4279305208', _0x4d6710, _0x43995e, _0x4643a0, JSON.stringify(_0x867a44));
        }), _0x4acf75.events.add('customization.result', () => {
          _0x7d3590 = false;
        }), _0x4acf75.events.add('customization.reset', (_0x567286 = true) => {
          _0x7d3590 = false, _0xd46723.api.cameraRotation.stop(), _0x4acf75.events.call('customization.close', _0x567286), _0x567286 || (_0x4acf75.events.call('donate.close'), _0xd46723.api.toggleChat(true), _0xd46723.api.toggleRadar(true), _0xd46723.api.toggleHud(true));
        }), _0x4acf75.events.add('customization.close', (_0x42cfd2 = true) => {
          _0x42cfd2 && _0xd46723.api.fadeOut(0x1), _0x4acf75.events.call('utils.disablePlayerMove', false), _0x4acf75.gui.cursor.show(false, false), _0x3595e7.Z.stop(), _0x4acf75.game.audio.setMobileRadioEnabledDuringGameplay(false), _0x4acf75.game.audio.setRadioToStationIndex(0xff), _0x42582e.globalBrowser.toggle('customization', {
            'value': false
          }), _0xd46723.api.cameraRotation.stop(), _0x4acf75.cameras.exists(_0x2e65e1) && (_0x2e65e1 = _0x2e65e1.destroy()), _0x553d09.freezePosition(false), _0x61db0c = false, _0x5dc5ba = false;
        }), _0x4acf75.events.add('customization.setCanMouseMove', _0x1d3703 => {
          _0xd46723.api.cameraRotation.canMouseMove = !!_0x1d3703;
        }), _0x4acf75.events.add('customization.exit', (_0x3ccdfd, _0x5a9a68, _0x53908f = false) => {
          _0x53908f ? (_0x4acf75.events.call('donate.close'), _0x4acf75.events.call('customization.reset', false), _0x4acf75.events.callRemote('1719117123'), _0xd46723.api.fadeIn(0x3e8)) : _0x5a9a68 && (_0x4acf75.events.call('customization.close'), _0xd46723.api.fadeIn(0x3e8), _0xd46723.api.moveSkyCamera('up', 0x1, false), _0x4acf75.events.call('ucp.init', _0x3ccdfd, _0x5a9a68));
        });
        let _0x38c791 = 0x0;
        _0x4acf75.events.add('customization.playLookAnim', () => {
          _0xd46723.api.ePress(_0x38c791, 0x1388) || (_0x38c791 = _0xd46723.api.ePressUpdate(0x1388), _0x829016('anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity', 'hi_dance_facedj_17_v2_male^4', true), _0xd46723.api.playSound('flex', {
            'volume': 0x1e
          }));
        }), _0x4acf75.events.add('render', () => {
          _0x61db0c && _0x4acf75.game.cam.setFollowPedCamViewMode(0x1);
        });

        let _0x3da456,
            _0x2163b9,
            _0x2790df = 0x0;

        const _0x829016 = async (_0x4063ce, _0x221cbb, _0x16612e = false) => {
          if (!_0x5dc5ba) return;

          if (!_0x16612e) {
            if (!_0x103df4() && (_0x553d09.isPlayingAnim(_0x4063ce, _0x221cbb, 0x3) || _0x3da456 && _0x2163b9 && _0x553d09.isPlayingAnim(_0x3da456, _0x2163b9, 0x3))) return;
            if (_0xd46723.api.ePress(_0x2790df, 0x3e8)) return;
          }

          if (_0x2790df = _0xd46723.api.ePressUpdate(0x3e8), _0x3da456 = _0x4063ce, _0x2163b9 = _0x221cbb, await _0xd46723.api.requestAnimDict(_0x4063ce), !_0x5dc5ba) return;

          _0x553d09.taskPlayAnim(_0x4063ce, _0x221cbb, 0x8, -0x8, -0x1, 0x0, 0x0, false, false, false);

          const _0x1592b1 = _0x4acf75.game.entity.getEntityAnimDuration(_0x4063ce, _0x221cbb);

          await _0x4acf75.game.sleep(0x3e8 * _0x1592b1), _0x5dc5ba && _0x51523e();
        },
              _0x51523e = async () => {
          _0x553d09.isMale() ? (await _0xd46723.api.requestAnimDict('mp_character_creation@customise@male_a'), _0x553d09.taskPlayAnim('mp_character_creation@customise@male_a', 'drop_loop', 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false)) : (await _0xd46723.api.requestAnimDict('mp_character_creation@customise@female_a'), _0x553d09.taskPlayAnim('mp_character_creation@customise@female_a', 'drop_loop', 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false)), _0x3da456 = undefined, _0x2163b9 = undefined;
        },
              _0x103df4 = () => !(!_0x553d09.isPlayingAnim('mp_character_creation@customise@male_a', 'drop_loop', 0x3) && !_0x553d09.isPlayingAnim('mp_character_creation@customise@female_a', 'drop_loop', 0x3)),
              _0xf0a59a = () => _0x49ee44.u.pickone(['drop_clothes_a', 'drop_clothes_b', 'drop_clothes_c']),
              _0x322c94 = _0x5549c0 => {
          _0x867a44.hair = _0x5549c0, (0x0, _0x395aee.L6)(_0x553d09, 0x2, _0x5549c0, 0x0, 0x2);

          const _0x1c7fe8 = _0x3c0dde.Z[_0xd46723.api.getEntitySync(_0x553d09, 'gender', 'number') || 0x0].find(_0x49d2c8 => _0x49d2c8.ID === _0x5549c0);

          _0x1c7fe8 && (_0x553d09.clearFacialDecorations(), _0x553d09.setFacialDecoration(_0x4acf75.game.joaat(_0x1c7fe8.Collection), _0x4acf75.game.joaat(_0x1c7fe8.Overlay)));
        },
              _0x4c7638 = () => ({
          'father': 0x0,
          'mother': 0x15,
          'similarity': 0.5,
          'skinSimilarity': 0.5,
          'overlay': {
            0x0: {
              'overlay': 0x0,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x1: {
              'overlay': 0x1,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x2: {
              'overlay': 0x2,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x3: {
              'overlay': 0x3,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x4: {
              'overlay': 0x4,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x5: {
              'overlay': 0x5,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x6: {
              'overlay': 0x6,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x7: {
              'overlay': 0x7,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x8: {
              'overlay': 0x8,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0x9: {
              'overlay': 0x9,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0xa: {
              'overlay': 0xa,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0xb: {
              'overlay': 0xb,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            },
            0xc: {
              'overlay': 0xc,
              'index': 0xff,
              'opacity': 0x1,
              'color1': 0x0,
              'color2': 0x0
            }
          },
          'hair': 0x0,
          'hairColor': [0x0, 0x0],
          'eyeColor': 0x0,
          'faceFeatureParams': [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
          'clothes': {}
        });
      },
      0xedaf: (_0x4d811f, _0x516b34, _0x1c974c) => {
        'use strict';

        const a0_0x4dee2f = {
          _0x4c35a3: 0x281,
          _0x494ecf: 0x2553,
          _0x5a9d53: 0x535,
          _0x31a94c: 0x9c5,
          _0x21fb2c: 0x1063,
          _0x2d92e3: 0x1da5
        },
              a0_0x1850db = {
          _0x368201: 0x535,
          _0x1198dc: 0xf86,
          _0x2337c1: 0x13f5,
          _0x33bedc: 0xa9d,
          _0x379b11: 0x16c5,
          _0x1d694d: 0x2140,
          _0x379649: 0x1d66,
          _0x4707bc: 0xa9d,
          _0x251ad9: 0x2488,
          _0x1abddd: 0x4a3
        },
              a0_0x2d0aa8 = {
          _0xe783a9: 0x59d,
          _0x551858: 0x535,
          _0x41ca7b: 0x13b0,
          _0x38e08e: 0xf79,
          _0x45eab3: 0x1349,
          _0x3a58bd: 0xbb1,
          _0x4381a7: 0x9cd,
          _0x1d1906: 0x1b61,
          _0x352406: 0xd37,
          _0x28b10d: 0xac9,
          _0x2aad62: 0xd37,
          _0x4ee347: 0x1bbb,
          _0x46925a: 0x1349,
          _0x2a7711: 0x9cd,
          _0xa297be: 0xac9,
          _0x6ce20a: 0x9cd,
          _0x348811: 0xfba,
          _0x5bd74d: 0x2530,
          _0x45b854: 0x1d66,
          _0x5a2d4b: 0x2072,
          _0x253fe4: 0xd79,
          _0x35394b: 0x317,
          _0x523700: 0x8cd,
          _0x2dd132: 0x24c7,
          _0x18bd33: 0x40d,
          _0x5a53b9: 0x1f30,
          _0x2459a5: 0x1d55,
          _0x500ad0: 0xa9d,
          _0x1b363a: 0x22e6,
          _0x52b34c: 0x2c5,
          _0x5dbc6e: 0x2530,
          _0x1bba10: 0x2072,
          _0x523c73: 0x2488,
          _0x18949c: 0x4a3,
          _0x33f009: 0x1c31
        },
              a0_0x2f4894 = {
          _0x2ed7bb: 0x1ec5,
          _0x480a5e: 0x14d2,
          _0x139f21: 0x10e7,
          _0x5ec0c3: 0x14d2,
          _0xe2d273: 0x1da5,
          _0x449e90: 0xb97,
          _0x4c0e68: 0x1bf6
        };

        _0x1c974c.r(_0x516b34);

        var _0x5f0611 = _0x1c974c(0x16a21),
            _0x17db8d = _0x1c974c(0x12a76),
            _0x495349 = _0x1c974c(0x1d7e),
            _0x371766 = _0x1c974c(0x161cd);

        const _0x3063c5 = _0x371766.players.local;

        let _0x226fd2,
            _0x20b635,
            _0x3d13e4 = false;

        _0x371766.events.add('dialog.init', () => {
          if (!_0x3063c5.isDead()) {
            if (_0x1c974c.g.interfaces.dialog) _0x371766.events.call('dialog.close');else {
              if (!_0x3d13e4 && !_0x1c974c.g.currentInterface) {
                if (undefined === _0x1c974c.g.npcDialogId) return;
                _0x3d13e4 = true, _0x371766.events.callRemote('1089846680', _0x1c974c.g.npcColshape, _0x1c974c.g.npcDialogId);
              }
            }
          }
        }), _0x371766.events.add('dialog.initSuccess', async _0x55c18c => {
          if (_0x3d13e4 = false, _0x371766.game.ui.clearHelp(true), !_0x55c18c) return;

          if (_0x5f0611.api.toggleHud(false), _0x55c18c.name = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x55c18c.name), _0x55c18c.description = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x55c18c.description), _0x55c18c.question && _0x55c18c.question.text) {
            const _0x3d8772 = _0x55c18c.question.args;
            _0x55c18c.question.text = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x55c18c.question.text, _0x3d8772);
          }

          for (const _0x1dd2bb of _0x55c18c.answers) _0x1dd2bb.text = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x1dd2bb.text);

          const _0x3f7ef2 = _0x5f0611.api.getNearestPed();

          if (_0x3f7ef2) {
            if (0x0 === _0x3f7ef2.handle) return;

            const _0x3e46a6 = _0x371766.peds.atHandle(_0x3f7ef2.handle);

            _0x3063c5.setAlpha(0x0), _0x226fd2 = _0x495349.X, _0x371766.game.cam.renderScriptCams(true, true, 0x1f4, false, false, 0x0);

            let _0x44b690 = _0x3e46a6.getBoneCoords(0x0, 0x0, 0x0, 0x0),
                _0x59550e = _0x3e46a6.getOffsetFromGivenWorldCoords(_0x44b690.x, _0x44b690.y, _0x44b690.z),
                _0x5bc9d3 = _0x59550e.x,
                _0x3bb668 = _0x59550e.y,
                _0x3f1455 = _0x59550e.z,
                _0x163e7f = _0x3e46a6.getOffsetFromInWorldCoords(_0x5bc9d3, _0x3bb668, _0x3f1455),
                _0x406512 = _0x226fd2,
                _0xa140ff = _0x3e46a6.cData.position,
                _0x1c2482 = _0x3e46a6.getHeading(),
                _0x28038f = new _0x371766.Vector3(0x0, 1.5, 0x0),
                _0x25c4e5 = _0x371766.game.object.getObjectOffsetFromCoords(_0xa140ff.x, _0xa140ff.y, _0xa140ff.z, _0x1c2482, _0x28038f.x, _0x28038f.y, _0x28038f.z);

            _0x20b635 = _0x371766.cameras.new('default'), _0x20b635.setCoord(_0x25c4e5.x, _0x25c4e5.y, _0x25c4e5.z + 0.75), _0x20b635.setFov(0x28), _0x20b635.pointAtCoord(_0x163e7f.x, _0x163e7f.y, _0x163e7f.z + 0.5), _0x20b635.setActiveWithInterp(_0x406512.handle, 0x1f4, 0x1, 0x1), _0x371766.game.cam.renderScriptCams(true, true, 0x1f4, true, true, 0x0), _0x17db8d.globalBrowser.toggle('dialog', {
              'value': true,
              'params': _0x55c18c
            });
          }
        }), _0x371766.events.add('dialog.close', async (_0x51e309 = true) => {
          _0x5f0611.api.displayHelpStringTrans('displayHelpString.interact', false, true, 0x1388), _0x5f0611.api.toggleHud(true), _0x371766.cameras.exists(_0x20b635) && (_0x3063c5.setAlpha(0xff), _0x371766.game.cam.renderScriptCams(false, true, 0x1f4, false, false, 0x0), await _0x371766.game.sleep(0x1f4), _0x371766.cameras.exists(_0x20b635) && _0x20b635.destroy(), _0x20b635 = null, _0x226fd2 = null), _0x51e309 && _0x17db8d.globalBrowser.toggle('dialog', {
            'value': false
          }), _0x3d13e4 = false;
        }), _0x371766.events.add('dialog.answer', async (_0x3c1214, _0x55e5bf, _0x30a2d0) => {
          if (_0x3d13e4) return;
          if (!_0x30a2d0) return;

          const _0x4ccb47 = JSON.parse(_0x30a2d0),
                _0x2298df = _0x4ccb47.speechName,
                _0x2fb887 = _0x4ccb47.voiceName;

          if (_0x2298df && _0x2fb887) try {
            const _0x51a72c = _0x5f0611.api.getNearestPed();

            undefined !== _0x51a72c && _0x5f0611.api.playPedSpeech(_0x51a72c.id, _0x2298df, _0x2fb887);
          } catch (_0x1fe003) {
            _0x5f0611.api.sendError(_0x1fe003);
          }
          _0x371766.events.callRemote('1433859026', _0x3c1214, _0x55e5bf), _0x3d13e4 = true;
        }), _0x371766.events.add('dialog.answerSuccess', _0x4e0941 => {
          if (_0x4e0941) {
            if ((_0x4e0941 = JSON.parse(_0x4e0941)).name = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x4e0941.name), _0x4e0941.description = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x4e0941.description), _0x4e0941.question && _0x4e0941.question.text) {
              const _0x188879 = _0x4e0941.question.args;
              _0x4e0941.question.text = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x4e0941.question.text, _0x188879);
            }

            for (const _0x141614 of _0x4e0941.answers) _0x141614.text = _0x5f0611.api.language.translatePlayer('dialogs.' + _0x141614.text);

            _0x17db8d.globalBrowser.emit('dialog_update', _0x4e0941), _0x3d13e4 = false;
          }
        }), _0x371766.events.add('npc.exitShape', () => {
          _0x1c974c.g.interfaces.dialog && 'dialog' === _0x1c974c.g.interfaces.dialog && _0x371766.events.call('dialog.close');
        }), _0x371766.events.add('playerDeath2', _0x52286d => {
          _0x1c974c.g.interfaces.dialog && 'dialog' === _0x1c974c.g.interfaces.dialog && _0x52286d === _0x3063c5 && _0x371766.events.call('dialog.close');
        });
      },
      0x17b1f: (_0x3ed1d4, _0x9107ab, _0x1a2ef5) => {
        'use strict';

        const a0_0x80a5a = {
          _0x438a43: 0x4a3
        };

        _0x1a2ef5.r(_0x9107ab);

        var _0x37bec2 = _0x1a2ef5(0x12a76),
            _0x9ffec8 = _0x1a2ef5(0x161cd);

        _0x9ffec8.players.local;
        let _0x4ae578 = null;
        _0x9ffec8.events.add('licenses.init', _0x472ea3 => {
          _0x4ae578 = 'licenses', _0x37bec2.globalBrowser.toggle('licenses', {
            'value': true
          });
        }), _0x9ffec8.events.add('identification.init', _0x3d9403 => {
          _0x4ae578 = 'lspd', _0x37bec2.globalBrowser.toggle('identification', {
            'value': true,
            'type': 'lspd'
          });
        }), _0x9ffec8.events.add('keys.e', () => {
          _0x4ae578 && ('licenses' === _0x4ae578 ? _0x37bec2.globalBrowser.toggle('licenses', {
            'value': false
          }) : _0x37bec2.globalBrowser.toggle('identification', {
            'value': false
          }), _0x9ffec8.game.ui.clearHelp(true), _0x4ae578 = null);
        });
      },
      0xd092: (_0x136ecc, _0x5bff73, _0x265b3f) => {
        'use strict';

        const a0_0x545af7 = {
          _0x1a3057: 0x2488,
          _0x257edf: 0x1a41
        },
              a0_0x35d7c5 = {
          _0x3b7aa6: 0x2591
        },
              a0_0x5c45d0 = {
          _0x2913e8: 0x1da5
        },
              a0_0x44cc6f = {
          _0x21e9a8: 0x14d2
        },
              a0_0x5970d2 = {
          _0x40fa7f: 0x2488
        },
              a0_0x171198 = {
          _0x5b7950: 0x14d2,
          _0x4e904b: 0xc50
        },
              a0_0x43c021 = {
          _0x1047a9: 0x2488,
          _0x44ddda: 0x1a3,
          _0x136ddb: 0xa6f
        },
              a0_0x56478f = {
          _0x556d1a: 0x2488,
          _0x185dd4: 0x1a3,
          _0x8a5760: 0x112d
        },
              a0_0x577758 = {
          _0x5b1282: 0x1a3,
          _0x214ca5: 0x2488,
          _0x97abe0: 0x4a3
        },
              a0_0x164522 = {
          _0x1e6421: 0x14d2,
          _0x3fead4: 0x1da5,
          _0x5ed6d5: 0x2426
        },
              a0_0x6874ef = {
          _0x49daf3: 0x1a3,
          _0x48cfe1: 0xc6e
        },
              a0_0x39dfa3 = {
          _0x3c2d2d: 0x1a3,
          _0x5ced89: 0x715
        },
              a0_0xeb584f = {
          _0x2b664d: 0x2079,
          _0x57c622: 0x112d,
          _0x57ad25: 0x2363
        };

        _0x265b3f.r(_0x5bff73);

        var _0x4c25c8 = _0x265b3f(0x16a21),
            _0x157d6 = _0x265b3f(0x305c),
            _0x456fcc = _0x265b3f.n(_0x157d6),
            _0x1c43d2 = _0x265b3f(0x12a76),
            _0x386b1d = _0x265b3f(0x17156),
            _0x1125e5 = _0x265b3f(0x161cd);

        let _0x4819fd = false;
        _0x1125e5.events.add('vue.mounted', () => {
          _0x1c43d2.globalBrowser.emit('panelMenu_donate_preinitClothesConfigSuccess', JSON.stringify(_0x456fcc().clothesItems));
        }), _0x1125e5.events.add('setHudInfo', (_0x4193f5, _0x2b5d2f) => {
          const _0x227c72 = _0x2b5d2f.toLowerCase().startsWith('en') ? 'en' : 'ru',
                _0x4618a1 = JSON.parse(JSON.stringify(_0x456fcc().clothesItems));

          for (let _0x7d5397 = 0x0; _0x7d5397 < 0x2; _0x7d5397++) {
            const _0x1bd6d6 = 0x0 === _0x7d5397 ? 'male' : 'female',
                  _0x2a6382 = _0x4618a1[_0x7d5397],
                  _0x5c9d28 = _0x386b1d[_0x227c72] && _0x386b1d[_0x227c72][_0x1bd6d6];

            for (const _0x9a9c95 in _0x2a6382) {
              const _0x4c145d = _0x4c25c8.api.getClothesInfoByCategory(_0x9a9c95),
                    _0x1a3f1b = _0x5c9d28 && _0x5c9d28[_0x4c145d.componentId];

              for (const _0x4164fe of _0x2a6382[_0x9a9c95]) _0x1a3f1b && _0x1a3f1b[_0x4164fe.drawable] && (_0x2a6382[_0x9a9c95] = _0x2a6382[_0x9a9c95].filter(_0x2a4b1e => _0x2a4b1e !== _0x4164fe));
            }
          }

          _0x1c43d2.globalBrowser.emit('panelMenu_donate_preinitClothesConfigSuccess', JSON.stringify(_0x4618a1));
        }), _0x1125e5.events.add('donate.getDetails', (_0x3ea5d7, _0x4a6841) => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1670352844', _0x3ea5d7, _0x4a6841));
        }), _0x1125e5.events.add('donate.getDetailsResult', (_0x46cba1, _0x58cc88, _0x24f613) => {
          _0x4819fd = false, _0x1c43d2.globalBrowser.emit('panelMenu_donate_showDetails', {
            'table': _0x46cba1,
            'lines': _0x58cc88,
            'total': _0x24f613
          });
        }), _0x1125e5.events.add('donate.buy', (_0x28dc0d, _0x2597b3, _0x2e1588) => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1771270264', _0x28dc0d, _0x2597b3, _0x2e1588));
        }), _0x1125e5.events.add('donate.buyResult', (_0x128331, _0x1ff634) => {
          _0x4819fd = false, _0x1c43d2.globalBrowser.emit('panelMenu_donate_updateCoins', {
            'donate': _0x128331,
            'carSlots': _0x1ff634
          });
        }), _0x1125e5.events.add('donate.activateKey', _0xe8eb2 => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1555791351', _0xe8eb2));
        }), _0x1125e5.events.add('donate.close', () => {
          _0x4819fd = false, _0x1c43d2.globalBrowser.emit('chat_show', true), _0x1c43d2.globalBrowser.toggle('donate', {
            'value': false
          });
        }), _0x1125e5.events.add('donate.getItems', _0x185c83 => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1166865526', _0x185c83));
        }), _0x1125e5.events.add('donate.getItemsResult', _0x299bd5 => {
          _0x4819fd = false, _0x1c43d2.globalBrowser.emit('panelMenu_donate_setItems', JSON.stringify(_0x299bd5));
        }), _0x1125e5.events.add('donate.updateFreeroll', _0x5f3727 => {
          _0x1c43d2.globalBrowser.emit('panelMenu_donate_updateFreeroll', JSON.stringify(_0x5f3727));
        }), _0x1125e5.events.add('donate.paymentComplete', () => {
          _0x1c43d2.globalBrowser.emit('panelMenu_donate_hideDonateIframe');
        }), _0x1125e5.events.add('roulette.freeSpin', () => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1388451547', 'default', 0x1, true));
        }), _0x1125e5.events.add('roulette.spin', (_0x4d6491, _0x538f73) => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1388451547', _0x4d6491, _0x538f73, false));
        }), _0x1125e5.events.add('roulette.spinResult', (_0x2ebbff, _0x52b6fa, _0x1b732b) => {
          _0x4819fd = false, _0x1c43d2.globalBrowser.emit('panelMenu_donate_setRouletteResults', JSON.stringify(_0x2ebbff)), _0x1c43d2.globalBrowser.emit('panelMenu_donate_setPlayerCases', {
            'type': _0x52b6fa,
            'amount': _0x1b732b
          });
        }), _0x1125e5.events.add('roulette.buyCases', (_0x408200, _0x4c8148, _0x25d063) => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1513585151', _0x408200, _0x4c8148, _0x25d063));
        }), _0x1125e5.events.add('roulette.buyCasesResult', (_0x433915, _0x2e25e6, _0x797866) => {
          _0x4819fd = false, null != _0x433915 && _0x1c43d2.globalBrowser.emit('panelMenu_donate_setPlayerCases', {
            'type': _0x433915,
            'amount': _0x2e25e6,
            'donate': _0x797866
          });
        }), _0x1125e5.events.add('roulette.takeWin', _0x4f2fc9 => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('2464763892', _0x4f2fc9));
        }), _0x1125e5.events.add('roulette.sellWin', (_0x557df2, _0x585a1f) => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('4092229550', _0x557df2, _0x585a1f));
        }), _0x1125e5.events.add('roulette.winToExp', (_0x1e40db, _0x15ff3d) => {
          _0x4819fd || (_0x4819fd = true, _0x1125e5.events.callRemote('1171299017', _0x1e40db, _0x15ff3d));
        }), _0x1125e5.events.add('roulette.takeWinResult', (_0x34a2e5, _0x47499b) => {
          _0x4819fd = false, _0x1c43d2.globalBrowser.emit('panelMenu_donate_clearWin', _0x34a2e5), _0x47499b && _0x1c43d2.globalBrowser.emit('panelMenu_donate_removeItem', _0x47499b);
        });
      },
      0x365f: (_0x425f39, _0x387f1a, _0x48514a) => {
        'use strict';

        const a0_0x55cdd2 = {
          _0x422cb0: 0x1e9a
        },
              a0_0x10b6bc = {
          _0x2f8ea9: 0x17f,
          _0x1e5e91: 0x1e9a
        },
              a0_0x5ea606 = {
          _0xd68c43: 0x1e9a
        },
              a0_0x5f31c1 = {
          _0x2e9a73: 0x16c5,
          _0x23d1c2: 0x1e9a
        };

        _0x48514a.r(_0x387f1a);

        var _0x2e0612 = _0x48514a(0x12a76),
            _0x2f9ee5 = _0x48514a(0x161cd);

        const _0x41d0c2 = {
          'web': null,
          'config': {
            'SUCCESS_URL': 'donate=success',
            'INJECTION_CODE': '(document.readyState === "complete" || document.readyState === "interactive") && (document.body.insertAdjacentHTML("beforeend", `<div class="mjrpClick" onclick="mp.trigger(\'donateWeb.close\')" style=" display: flex;align-items: center;justify-content: center;width: 50px;height: 50px;background-color: black;padding: 10px;position: absolute;right: 0;top: 0;z-index: 9999;cursor: pointer;">        <div class="line el-1" style="transform: rotate(45deg);  width: 50px;height: 3px;background-color: white;position: absolute;"></div>        <div class="line el-2" style="transform: rotate(-45deg);  width: 50px;height: 3px;background-color: white;position: absolute;"></div>      </div>`)); document.getElementsByClassName("mjrpClick")[0].onclick=()=>mp.trigger(\'donateWeb.close\')',
            'INJECTION_CODE2': 'if (window.__MJRP_INTERVAL__) clearInterval(window.__MJRP_INTERVAL__); window.__MJRP_INTERVAL__ = setInterval(() => mp.trigger("donateWeb.currentUrl", window.location.search), 1000);',
            'INJECTION_CODE3': 'document.body.style.backgroundColor = "#fff"'
          }
        };
        _0x2f9ee5.events.add('donateWeb.openDonateBrowser', _0x52134c => {
          _0x2f9ee5.browsers.exists(_0x41d0c2.web) && (_0x41d0c2.web.destroy(), delete _0x41d0c2.web), _0x41d0c2.web = _0x2f9ee5.browsers.new(_0x52134c);
        }), _0x2f9ee5.events.add('browserDomReady', _0x520503 => {
          _0x520503 === _0x41d0c2.web && _0x2c9baf();
        }), _0x2f9ee5.events.add('browserLoadingFailed', _0x2f95a5 => {
          _0x2f95a5 === _0x41d0c2.web && (_0x2f95a5.destroy(), delete _0x41d0c2.web);
        }), _0x2f9ee5.events.add('donateWeb.close', () => {
          _0x41d0c2.web.destroy(), delete _0x41d0c2.web, _0x2f9ee5.events.callRemote('1992773717'), _0x2e0612.globalBrowser.emit('panelMenu_donate_hideDonateIframe');
        }), _0x2f9ee5.events.add('donateWeb.currentUrl', _0x36d2de => {
          _0x36d2de.includes(_0x41d0c2.config.SUCCESS_URL) && _0x41d0c2.web && (_0x41d0c2.web.destroy(), delete _0x41d0c2.web, _0x2f9ee5.events.callRemote('1992773717'));
        });

        const _0x2c9baf = () => {
          _0x41d0c2.web.execute(_0x41d0c2.config.INJECTION_CODE), _0x41d0c2.web.execute(_0x41d0c2.config.INJECTION_CODE2), _0x41d0c2.web.execute(_0x41d0c2.config.INJECTION_CODE3);
        };

        _0x2f9ee5.events.add('time.everySec', () => {
          _0x41d0c2.web && _0x2c9baf();
        });
      },
      0x19f8: (_0x4f4479, _0x1ed199, _0x28875c) => {
        'use strict';

        const a0_0x324b02 = {
          _0xe914ef: 0x2488,
          _0xb0017f: 0x4a3
        },
              a0_0x3a6e5f = {
          _0x388987: 0x253d,
          _0x54e6ef: 0x1d66,
          _0x93dc70: 0x59d,
          _0x825eca: 0x4a3,
          _0x3d496b: 0x2612
        };

        _0x28875c.r(_0x1ed199);

        var _0x5549aa = _0x28875c(0x16a21),
            _0x5e8f6c = _0x28875c(0x25e0),
            _0x59860d = _0x28875c.n(_0x5e8f6c),
            _0x36f437 = _0x28875c(0x12a76),
            _0x41009c = _0x28875c(0x161cd);

        const _0xc3dbac = _0x41009c.players.local,
              _0x47ab6e = [],
              _0x8850ca = [];

        let _0x4312a8;

        for (const [_0x2ed402, _0x2381ef] of Object.entries(_0x59860d())) {
          const _0x4fe2a7 = _0x2381ef.boardPosition,
                _0x485091 = _0x41009c.colshapes.newSphere(_0x4fe2a7.x, _0x4fe2a7.y, _0x4fe2a7.z, 0x4);

          _0x485091.driftRatingId = parseInt(_0x2ed402);

          const _0xf2ba8d = _0x41009c.objects.new(_0x41009c.game.joaat('prop_muster_wboard_02'), _0x4fe2a7, {
            'rotation': new _0x41009c.Vector3(0x0, 0x0, _0x2381ef.boardRotation)
          });

          _0x47ab6e.push(_0x485091), _0x8850ca.push(_0xf2ba8d);
        }

        _0x41009c.events.add('playerEnterColshape', async _0x8e892d => {
          _0x5549aa.api.isAuthed() && (_0xc3dbac.vehicle || null != _0x8e892d.driftRatingId && (_0x4312a8 = _0x8e892d, _0x5549aa.api.displayHelpStringTrans('displayHelpString.openDrift', false, true, 0x1388)));
        }), _0x41009c.events.add('playerExitColshape', async _0x1b8904 => {
          _0x5549aa.api.isAuthed() && null != _0x1b8904.driftRatingId && null != _0x4312a8 && (_0x4312a8 = null, _0x41009c.game.ui.clearHelp(true), _0x28875c.g.interfaces.driftRating && _0x36f437.globalBrowser.toggle('driftRating', {
            'value': false
          }));
        }), _0x41009c.events.add('keys.e', async () => {
          if (_0x4312a8 && null != _0x4312a8.driftRatingId) return _0x41009c.game.ui.clearHelp(true), _0x41009c.events.callRemote('2012736307', _0x4312a8.driftRatingId), void (_0x4312a8 = false);
        }), _0x41009c.events.add('driftRating.init', (_0x4cc17c, _0x4f6f59 = [], _0x2aeacc = {}) => {
          const _0x29355b = _0x59860d()[_0x4cc17c],
                _0x227003 = _0x2aeacc.score || 0x0;

          _0x4f6f59 = _0x4f6f59.map(_0x610240 => ({
            'path': _0x29355b.path,
            'login': _0x610240.login,
            'id': _0x610240.accountId,
            'vehicle': null != _0x610240.vehicleModel ? _0x41009c.game.vehicle.getDisplayNameFromVehicleModel(_0x41009c.game.joaat(_0x610240.vehicleModel)) : _0x610240.vehicleModel,
            'points': _0x610240.score
          })), _0x36f437.globalBrowser.toggle('driftRating', {
            'value': true,
            'playerScore': _0x227003,
            'table': _0x4f6f59
          });
        }), _0x41009c.events.add('driftRating.close', () => {
          _0x36f437.globalBrowser.toggle('driftRating', {
            'value': false
          });
        });
      },
      0x84be: (_0x3e4a89, _0x56cd4a, _0x4d88f2) => {
        'use strict';

        const a0_0x3a5f1c = {
          _0x129308: 0x2488,
          _0x1a0a26: 0x1bd0,
          _0x374205: 0x21ab
        },
              a0_0x2ea086 = {
          _0x14538c: 0x1da5,
          _0xff72e4: 0x1b04
        },
              a0_0x1481d8 = {
          _0x4dfdeb: 0x1267
        },
              a0_0x589979 = {
          _0x387f66: 0x1d66,
          _0x594ce5: 0x59d,
          _0x4bd5c0: 0x1bd0,
          _0x240863: 0x4a3,
          _0x12135a: 0x21ab
        },
              a0_0xbb0e11 = {
          _0x11ef08: 0x253d,
          _0x1f0b23: 0x16c5,
          _0x2cbf24: 0x1d66
        },
              a0_0x29c6ac = {
          _0x1fe17e: 0x1aab,
          _0x258660: 0xf82,
          _0x1b7799: 0x1d55
        };

        _0x4d88f2.r(_0x56cd4a);

        var _0x1a7a3b = _0x4d88f2(0x16a21),
            _0xcab70 = _0x4d88f2(0x12a76),
            _0x55944a = _0x4d88f2(0x161cd);

        _0x55944a.players.local;
        let _0x4872ad = false,
            _0x1cfa3f = null;
        const _0x14bad5 = [];
        [{
          'x': -516.57,
          'y': -196.91,
          'z': 36.58
        }].forEach((_0xc0d9d1, _0x2ce988) => {
          _0x14bad5[_0x2ce988] = _0x55944a.colshapes.newSphere(_0xc0d9d1.x, _0xc0d9d1.y, _0xc0d9d1.z, 0x1, -0x1), _0x55944a.markers.new(0x1, new _0x55944a.Vector3(_0xc0d9d1.x, _0xc0d9d1.y, _0xc0d9d1.z - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          });
        }), _0x55944a.events.add('playerEnterColshape', _0x513cb8 => {
          _0x1a7a3b.api.isAuthed() && _0x55944a.colshapes.exists(_0x513cb8) && _0x14bad5.some(_0x51a633 => _0x51a633 === _0x513cb8) && (_0x1cfa3f = _0x513cb8, _0x1a7a3b.api.displayHelpStringTrans('displayHelpString.toVote', false, true, 0x1388));
        }), _0x55944a.events.add('playerExitColshape', _0x33b430 => {
          _0x1a7a3b.api.isAuthed() && _0x55944a.colshapes.exists(_0x33b430) && _0x1cfa3f && _0x14bad5.some(_0x4b4944 => _0x4b4944 === _0x33b430) && (_0x1cfa3f = null, _0x55944a.game.ui.clearHelp(true));
        }), _0x55944a.events.add('keys.e', () => {
          _0x1cfa3f && _0x55944a.events.callRemote('3872702708', 'votes');
        }), _0x55944a.events.add('elections.init', (_0x1b6440, _0x43f2a0, _0x115a7b, _0x4fd8eb) => {
          _0x55944a.game.ui.clearHelp(true), _0xcab70.globalBrowser.emit('chat_show', false), _0x1cfa3f = null, _0xcab70.globalBrowser.toggle('elections', {
            'value': true,
            'page': _0x1b6440,
            'electionId': _0x43f2a0,
            'candidates': _0x115a7b,
            'startAt': _0x4fd8eb
          });
        }), _0x55944a.events.add('elections.getName', (_0x1144e2, _0x320064) => {
          _0x4872ad || (_0x4872ad = true, _0x55944a.events.callRemote('2689974020', _0x1144e2, _0x320064));
        }), _0x55944a.events.add('elections.getNameResult', (_0x1de034, _0x5069e1) => {
          _0x4872ad = false, _0xcab70.globalBrowser.emit('elections_getNameResult', {
            'name': _0x5069e1,
            'index': _0x1de034
          });
        }), _0x55944a.events.add('elections.startElections', (_0x334f14, _0x453aa1) => {
          _0x4872ad || (_0x4872ad = true, _0x55944a.events.callRemote('2550514320', _0x334f14, _0x453aa1));
        }), _0x55944a.events.add('elections.editElections', (_0x53372b, _0x2aa913, _0x40a5cb) => {
          _0x4872ad || (_0x4872ad = true, _0x55944a.events.callRemote('1814418589', _0x53372b, _0x2aa913, _0x40a5cb));
        }), _0x55944a.events.add('elections.startElectionsResult', () => {
          _0x4872ad = false;
        }), _0x55944a.events.add('elections.close', () => {
          _0xcab70.globalBrowser.emit('chat_show', true), _0xcab70.globalBrowser.toggle('elections', {
            'value': false
          });
        }), _0x55944a.events.add('elections.select', (_0x3aef76, _0x2d27ed) => {
          _0xcab70.globalBrowser.toggle('elections', {
            'value': false
          }), _0x55944a.events.callRemote('3953260420', _0x3aef76, _0x2d27ed);
        });
      },
      0xa6bb: (_0xb6970a, _0x259dda, _0x27c04c) => {
        'use strict';

        const a0_0x50df57 = {
          _0x158986: 0x235b,
          _0x5421a5: 0x4b9,
          _0x52a382: 0x2488,
          _0x3648ba: 0x4a3,
          _0x1c4cb7: 0x13f7,
          _0x36c875: 0x239b,
          _0x495316: 0x1a2c,
          _0x39bf41: 0x22b2
        },
              a0_0x2174a4 = {
          _0x3d2ff4: 0x535,
          _0x45f7e2: 0x253d,
          _0x232ae9: 0x13f7,
          _0x76ed51: 0xf86,
          _0x28686b: 0x1a60
        },
              a0_0x471c0b = {
          _0x34be74: 0x2405,
          _0x580eb8: 0x13f7
        };

        _0x27c04c.r(_0x259dda);

        var _0x3e4667 = _0x27c04c(0x16a21),
            _0x29e1d9 = _0x27c04c(0x173b3),
            _0xaa8d0c = _0x27c04c.n(_0x29e1d9),
            _0x3c5514 = _0x27c04c(0x12a76),
            _0x3f1c8b = _0x27c04c(0x161cd);

        _0x3f1c8b.players.local;
        let _0x1c8470 = false,
            _0x55851c = null;
        _0xaa8d0c().forEach((_0x1fa0fb, _0x728114) => {
          const _0x5b97f2 = _0x3f1c8b.colshapes.newSphere(_0x1fa0fb.x, _0x1fa0fb.y, _0x1fa0fb.z, 0x1, 0x0);

          _0x5b97f2.key = _0x728114, _0x5b97f2.elevator = true;
        }), _0x3f1c8b.events.add('playerEnterColshape', _0x282768 => {
          _0x3e4667.api.isAuthed() && _0x3f1c8b.colshapes.exists(_0x282768) && _0x282768.elevator && (_0x3e4667.api.displayHelpStringTrans('displayHelpString.toEnterElevator', false, true, 0x1388), _0x55851c = _0x282768.key);
        }), _0x3f1c8b.events.add('playerExitColshape', _0x7c36a2 => {
          _0x3e4667.api.isAuthed() && _0x3f1c8b.colshapes.exists(_0x7c36a2) && _0x7c36a2.elevator && _0x55851c && (_0x3f1c8b.game.ui.clearHelp(true), _0x55851c = null, _0x3c5514.globalBrowser.toggle('elevator', {
            'value': false
          }));
        }), _0x3f1c8b.events.add('keys.e', () => {
          _0x55851c && (_0x27c04c.g.currentInterface || _0x3f1c8b.players.local.vehicle || _0x3c5514.globalBrowser.toggle('elevator', {
            'value': true,
            'place': _0xaa8d0c()[_0x55851c].place,
            'floors': _0xaa8d0c().filter(_0x5b3c29 => _0x5b3c29.place === _0xaa8d0c()[_0x55851c].place).map(_0x257111 => _0x257111.floor)
          }));
        }), _0x3f1c8b.events.add('elevator.close', () => {
          _0x3c5514.globalBrowser.toggle('elevator', {
            'value': false
          });
        }), _0x3f1c8b.events.add('elevator.select', (_0x2dec96, _0x4c8abe) => {
          _0x1c8470 || (_0x1c8470 = true, _0x3f1c8b.events.callRemote('239028031', _0x2dec96, _0x4c8abe));
        }), _0x3f1c8b.events.add('elevator.result', () => {
          _0x1c8470 = false, _0x3c5514.globalBrowser.toggle('elevator', {
            'value': false
          });
        });
      },
      0x938e: (_0x3842f8, _0x46c141, _0x33096f) => {
        'use strict';

        const a0_0x37e75e = {
          _0x43a596: 0x22b2,
          _0x2cfb6b: 0x24bc,
          _0x17781f: 0x1edc
        },
              a0_0x19dcf9 = {
          _0x5cca9c: 0x17f,
          _0xc50d10: 0x17f,
          _0x97104e: 0x17f,
          _0x438805: 0x1447
        },
              a0_0x102169 = {
          _0x4e9c86: 0x1447,
          _0x133257: 0x1d2,
          _0xb01828: 0x1f30,
          _0x1c4720: 0x6d9,
          _0x36820e: 0x2403,
          _0x19a0c6: 0x1f30,
          _0x2db5a: 0x2405,
          _0x38ee19: 0x9a7,
          _0xb21fc3: 0x739,
          _0x4323d6: 0x5a0,
          _0x165357: 0x739,
          _0x2b5aa4: 0x1aab,
          _0x44647f: 0x2405,
          _0x4cad94: 0x6d9,
          _0x5da18f: 0x23f2,
          _0x24bb77: 0x9a7,
          _0x577bcd: 0x18a5,
          _0x1fefeb: 0xf82,
          _0x3254cf: 0x23f2,
          _0x2b3699: 0xda6,
          _0xa0728f: 0xf82,
          _0x35e6b4: 0x6d9,
          _0x3b2a26: 0x7e7,
          _0x54ab00: 0x1aab,
          _0x6734b1: 0x1f30,
          _0x3e12c7: 0x1d55,
          _0x58b44f: 0x7e7,
          _0x44e4a2: 0xf82,
          _0x3dfae0: 0x7e7,
          _0x4e2618: 0x1f30,
          _0x466a7c: 0x7e7
        },
              a0_0x411cef = {
          _0x27a130: 0x6ba,
          _0x1d0548: 0x18ec,
          _0x59c72d: 0xf60,
          _0x21c051: 0x1d4e,
          _0x47f091: 0xccb
        },
              a0_0x4e5288 = {
          _0x4721a3: 0x1f65
        };

        _0x33096f.r(_0x46c141);

        var _0x23cb11 = _0x33096f(0x3db3),
            _0x199635 = _0x33096f(0xb274),
            _0x1f93cd = _0x33096f(0xc833),
            _0x33edd9 = _0x33096f.n(_0x1f93cd),
            _0x566aaf = _0x33096f(0x16a21),
            _0x2ea6e1 = _0x33096f(0x12a76),
            _0x5259c2 = _0x33096f(0xb307),
            _0x2665ba = _0x33096f(0x161cd);

        const _0x16a74b = _0x2665ba.players.local;

        let _0x36d4cc,
            _0x5c34ff,
            _0x12b0d3 = false;

        const _0x578034 = {},
              _0x46e2fb = {},
              _0x258fd7 = {},
              _0x57acb0 = {},
              _0x274e6b = {},
              _0x2644a7 = {};
        _0x16a74b.contracts = [], _0x16a74b.dynamicContracts = {}, _0x2665ba.events.add('family.initCreate', (_0x55edae, _0x574ca5, _0x4bfe32, _0x3bdf96) => {
          _0x2ea6e1.globalBrowser.emit('chat_show', false), _0x2ea6e1.globalBrowser.toggle('createFamily', {
            'value': true,
            'price': _0x55edae,
            'id': _0x574ca5,
            'garage': _0x4bfe32,
            'dayRoyalty': _0x3bdf96
          });
        }), _0x2665ba.events.add('family.createFamily', (_0x341512, _0x347d3b, _0x3b8c73, _0x22d508, _0x3b195d, _0x571ddb) => {
          _0x12b0d3 || (_0x12b0d3 = true, _0x2665ba.events.callRemote('3604024842', _0x341512, _0x347d3b, _0x3b8c73, _0x22d508, _0x3b195d, _0x571ddb));
        }), _0x2665ba.events.add('family.createFamilyResult', (_0x2fe133, _0x105f52, _0x19ee59, _0x5e349e, _0x57854c) => {
          _0x2fe133 || (_0x12b0d3 = false), _0x2ea6e1.globalBrowser.emit('family.createFamilyResult', _0x2fe133, _0x105f52, _0x19ee59, _0x5e349e, _0x57854c);
        }), _0x2665ba.events.add('family.createComplete', _0xe9c352 => {
          _0x12b0d3 = false, _0x2ea6e1.globalBrowser.emit('chat_show', true), _0x2ea6e1.globalBrowser.toggle('createFamily', {
            'value': false
          }), _0x566aaf.api.longNotifyTrans('family.createFamilySuccess', {
            'name': _0xe9c352
          }, 'success');
        }), _0x2665ba.events.add('family.updateFamily', (_0x485edc, _0x6f4e35, _0x2af267, _0x5c90a7, _0x4adac4, _0x5251ee, _0x4f4b80) => {
          _0x12b0d3 || (_0x5259c2.disabledCloseItems.add('updateFamily'), _0x12b0d3 = true, _0x2665ba.events.callRemote('1450878490', _0x485edc, _0x6f4e35, _0x2af267, _0x5c90a7, _0x4adac4, _0x5251ee, _0x4f4b80));
        }), _0x2665ba.events.add('family.updateFamilyResult', (_0x7d872a, _0x5927a8, _0x155dab, _0x5c83b7, _0x2f070c) => {
          let _0x579b6a = {
            '__': true
          };
          _0x7d872a ? _0x579b6a = JSON.parse(_0x2f070c) : (_0x12b0d3 = false, _0x5259c2.disabledCloseItems.delete('updateFamily')), _0x2ea6e1.globalBrowser.emit('family.updateFamilyResult', _0x7d872a, _0x5927a8, _0x155dab, _0x5c83b7, _0x579b6a);
        }), _0x2665ba.events.add('family.updateComplete', () => {
          _0x12b0d3 = false, _0x5259c2.disabledCloseItems.delete('updateFamily'), _0x566aaf.api.longNotifyTrans('family.updateFamilySuccess', 'success');
        }), _0x2665ba.events.add('family.close', () => {
          _0x12b0d3 = false, _0x5259c2.disabledCloseItems.delete('updateFamily'), _0x2ea6e1.globalBrowser.emit('chat_show', true), _0x2ea6e1.globalBrowser.toggle('createFamily', {
            'value': false
          });
        }), _0x2665ba.events.add('family.addFamilyHouseBlip', _0x5ce860 => {
          _0x2665ba.blips.exists(_0x36d4cc) && (_0x36d4cc.destroy(), _0x36d4cc = undefined), _0x36d4cc = _0x2665ba.blips.new(0x28, new _0x2665ba.Vector3(parseFloat(_0x33096f.g.houses[_0x5ce860].posX), parseFloat(_0x33096f.g.houses[_0x5ce860].posY), parseFloat(_0x33096f.g.houses[_0x5ce860].posZ)), {
            'name': 'blips.myFamilyHouse',
            'color': 0x47,
            'scale': 0.9,
            'shortRange': true
          }), (0x0, _0x23cb11.markAsTranslatedBlip)(_0x36d4cc, 'blips.myFamily');
        }), _0x2665ba.events.add('family.removeFamilyHouseBlip', () => {
          _0x2665ba.blips.exists(_0x36d4cc) && (_0x36d4cc.destroy(), _0x36d4cc = undefined);
        }), _0x2665ba.events.add('family.createContractInfo', (_0x2c58e2, _0x297add) => {
          _0x16a74b.dynamicContracts = { ..._0x16a74b.dynamicContracts,
            ..._0x297add
          }, _0x2c58e2.forEach(_0x2844f9 => {
            _0x16a74b.contracts.push(_0x2844f9);

            const _0x443f3d = _0x33edd9().contracts[_0x2844f9];

            if (_0x443f3d.task) {
              let _0x521703 = _0x443f3d.task.position;
              _0x443f3d.task.rules && _0x297add && null != _0x297add[_0x2844f9] && (_0x521703 = _0x443f3d.task.rules[_0x297add[_0x2844f9]].position), _0x578034[_0x2844f9] = _0x2665ba.colshapes.newSphere(_0x521703.x, _0x521703.y, _0x521703.z, 0x5, -0x1), _0x578034[_0x2844f9].contractId = _0x2844f9, _0x46e2fb[_0x2844f9] = _0x2665ba.labels.new('labels.contract', new _0x2665ba.Vector3(_0x521703.x, _0x521703.y, _0x521703.z + 0.5), {
                'color': [0xff, 0xff, 0xff, 0xc8],
                'los': true,
                'font': 0x0,
                'drawDistance': 0xa,
                'dimension': 0x0
              }), (0x0, _0x199635.markAsTranslatedLabel)(_0x46e2fb[_0x2844f9], 'labels.contract'), _0x258fd7[_0x2844f9] = _0x2665ba.markers.new(0x1, new _0x2665ba.Vector3(_0x521703.x, _0x521703.y, _0x521703.z - 0x1), 0x1, {
                'color': [0xff, 0xff, 0xff, 0x64],
                'visible': true,
                'dimension': 0x0
              }), _0x443f3d.task.fromPosition && (_0x57acb0[_0x2844f9] = _0x2665ba.colshapes.newSphere(_0x443f3d.task.fromPosition.x, _0x443f3d.task.fromPosition.y, _0x443f3d.task.fromPosition.z, 0x2, -0x1), _0x57acb0[_0x2844f9].contractId = _0x2844f9, _0x274e6b[_0x2844f9] = _0x2665ba.labels.new('labels.contract', new _0x2665ba.Vector3(_0x443f3d.task.fromPosition.x, _0x443f3d.task.fromPosition.y, _0x443f3d.task.fromPosition.z + 0.5), {
                'color': [0xff, 0xff, 0xff, 0xc8],
                'los': true,
                'font': 0x0,
                'drawDistance': 0xa,
                'dimension': 0x0
              }), (0x0, _0x199635.markAsTranslatedLabel)(_0x274e6b[_0x2844f9], 'labels.contract'), _0x2644a7[_0x2844f9] = _0x2665ba.markers.new(0x1, new _0x2665ba.Vector3(_0x443f3d.task.fromPosition.x, _0x443f3d.task.fromPosition.y, _0x443f3d.task.fromPosition.z - 0x1), 0x1, {
                'color': [0xff, 0xff, 0xff, 0x64],
                'visible': true,
                'dimension': 0x0
              }));
            } else _0x443f3d.tasks && (_0x578034[_0x2844f9] = _0x2665ba.colshapes.newSphere(_0x443f3d.tasks[0x0].position.x, _0x443f3d.tasks[0x0].position.y, _0x443f3d.tasks[0x0].position.z, 0x5, -0x1), _0x578034[_0x2844f9].contractId = _0x2844f9, _0x46e2fb[_0x2844f9] = _0x2665ba.labels.new('labels.contract', new _0x2665ba.Vector3(_0x443f3d.tasks[0x0].position.x, _0x443f3d.tasks[0x0].position.y, _0x443f3d.tasks[0x0].position.z + 0.5), {
              'color': [0xff, 0xff, 0xff, 0xc8],
              'los': true,
              'font': 0x0,
              'drawDistance': 0xa,
              'dimension': 0x0
            }), (0x0, _0x199635.markAsTranslatedLabel)(_0x46e2fb[_0x2844f9], 'labels.contract'), _0x258fd7[_0x2844f9] = _0x2665ba.markers.new(0x1, new _0x2665ba.Vector3(_0x443f3d.tasks[0x0].position.x, _0x443f3d.tasks[0x0].position.y, _0x443f3d.tasks[0x0].position.z - 0x1), 0x1, {
              'color': [0xff, 0xff, 0xff, 0x64],
              'visible': true,
              'dimension': 0x0
            }));
          });
        }), _0x2665ba.events.add('family.removeContractInfo', _0x2d709b => {
          _0x2d709b.forEach(_0x306b55 => {
            _0x578034[_0x306b55] && (_0x578034[_0x306b55].destroy(), delete _0x578034[_0x306b55]), _0x46e2fb[_0x306b55] && (_0x46e2fb[_0x306b55].destroy(), delete _0x46e2fb[_0x306b55]), _0x258fd7[_0x306b55] && (_0x258fd7[_0x306b55].destroy(), delete _0x258fd7[_0x306b55]), _0x57acb0[_0x306b55] && (_0x57acb0[_0x306b55].destroy(), delete _0x57acb0[_0x306b55]), _0x274e6b[_0x306b55] && (_0x274e6b[_0x306b55].destroy(), delete _0x274e6b[_0x306b55]), _0x2644a7[_0x306b55] && (_0x2644a7[_0x306b55].destroy(), delete _0x2644a7[_0x306b55]), _0x16a74b.contracts = _0x16a74b.contracts.filter(_0x5b001f => _0x5b001f !== _0x306b55);
          });
        }), _0x2665ba.events.add('playerEnterColshape', async _0x53fce3 => {
          if (_0x566aaf.api.isAuthed()) return Object.keys(_0x578034).map(_0x13c799 => _0x578034[_0x13c799]).includes(_0x53fce3) ? (_0x5c34ff = _0x53fce3, void _0x566aaf.api.displayHelpStringTrans('displayHelpString.familyContractAction', false, true, 0x1388)) : Object.keys(_0x57acb0).map(_0x49b76f => _0x57acb0[_0x49b76f]).includes(_0x53fce3) ? (_0x5c34ff = _0x53fce3, void _0x566aaf.api.displayHelpStringTrans('displayHelpString.familyContractFromAction', false, true, 0x1388)) : undefined;
        }), _0x2665ba.events.add('playerExitColshape', async _0x3eb24c => {
          if (_0x566aaf.api.isAuthed()) return Object.keys(_0x578034).map(_0x4a1063 => _0x578034[_0x4a1063]).includes(_0x3eb24c) || Object.keys(_0x57acb0).map(_0x440474 => _0x57acb0[_0x440474]).includes(_0x3eb24c) ? (_0x5c34ff = null, void _0x2665ba.game.ui.clearHelp(true)) : undefined;
        }), _0x2665ba.events.add('keys.e', async () => _0x5c34ff && Object.keys(_0x578034).map(_0x351768 => _0x578034[_0x351768]).includes(_0x5c34ff) ? (_0x2665ba.events.callRemote('256425392', _0x5c34ff.contractId), void _0x2665ba.game.ui.clearHelp(true)) : _0x5c34ff && Object.keys(_0x57acb0).map(_0x2bc993 => _0x57acb0[_0x2bc993]).includes(_0x5c34ff) ? (_0x2665ba.events.callRemote('2459660125', _0x5c34ff.contractId), void _0x2665ba.game.ui.clearHelp(true)) : undefined);
      },
      0x12bdd: (_0x4a95aa, _0x4b21e6, _0xf18c46) => {
        'use strict';

        _0xf18c46.r(_0x4b21e6);

        var _0x390690 = _0xf18c46(0x12a76),
            _0xada642 = _0xf18c46(0x161cd);

        _0xada642.players.local, (_0xada642.events.add('faq.init', () => {
          _0xf18c46.g.interfaces.FAQ ? _0x390690.globalBrowser.toggle('FAQ', {
            'value': false
          }) : _0x390690.globalBrowser.toggle('FAQ', {
            'value': true
          });
        }), _0xada642.events.add('faq.close', () => {
          _0x390690.globalBrowser.toggle('FAQ', {
            'value': false
          });
        }));
      },
      0xa60f: (_0x43c59b, _0x35e10d, _0x4dd27e) => {
        'use strict';

        const a0_0x1370ee = {
          _0x434b73: 0x1a3
        },
              a0_0xbe77e3 = {
          _0x5542b0: 0x1a3
        },
              a0_0xa10cd4 = {
          _0x2fc12e: 0x2488
        };

        _0x4dd27e.r(_0x35e10d);

        var _0x4ac4b6 = _0x4dd27e(0x16a21),
            _0x33af25 = _0x4dd27e(0x12a76),
            _0xd6f6b9 = _0x4dd27e(0x161cd);

        _0xd6f6b9.players.local;
        const _0x595eaf = [{
          'value': 'F2',
          'meaning': 'player-menu',
          'type': 'letter',
          'active': false
        }, {
          'value': 'F3',
          'meaning': 'gps',
          'type': 'letter',
          'active': false
        }, {
          'value': 'F6',
          'meaning': 'hide-hints',
          'type': 'letter',
          'active': false
        }, {
          'value': 'N',
          'meaning': 'voice',
          'type': 'letter',
          'active': false
        }, {
          'value': 'I',
          'meaning': 'inventory',
          'type': 'letter',
          'active': false
        }, {
          'value': 'G',
          'meaning': 'interaction',
          'type': 'letter',
          'active': false
        }, {
          'value': 'L',
          'meaning': 'door-lock',
          'type': 'letter',
          'active': false
        }, {
          'value': 'X',
          'meaning': 'fast-anims',
          'type': 'letter',
          'active': false
        }, {
          'value': 'arrow-up',
          'meaning': 'phone',
          'type': 'icon',
          'active': false
        }],
              _0x5f1ef0 = [{
          'value': 'B',
          'meaning': 'start-engine',
          'type': 'letter',
          'active': false
        }, {
          'value': 'J',
          'meaning': 'seat-belt',
          'type': 'letter',
          'active': false
        }];
        _0xd6f6b9.events.add('onPlayerEnterVehicle', () => {
          const _0x1d01b9 = _0x4ac4b6.api.getLocalVariable('level') || 0x0;

          let _0x4dcff3 = _0x5f1ef0;
          _0x1d01b9 < 0x3 && (_0x4dcff3 = _0x5f1ef0.map(_0x661191 => ({
            'value': _0x661191.value,
            'meaning': _0x661191.meaning,
            'type': _0x661191.type,
            'active': true
          })));
          const _0x28bf5e = [..._0x595eaf, ..._0x4dcff3];

          _0x33af25.globalBrowser.emit('main_fastKeysUpdate', JSON.stringify(_0x28bf5e));
        }), _0xd6f6b9.events.add('playerLeaveVehicle', () => {
          _0x54a412();
        }), _0xd6f6b9.events.add('keys.b', () => {
          _0x33af25.globalBrowser.emit('main_fastKeysReplace', JSON.stringify(_0x5f1ef0.find(_0x4258cb => 'B' === _0x4258cb.value)));
        }), _0xd6f6b9.events.add('keys.j', () => {
          _0x33af25.globalBrowser.emit('main_fastKeysReplace', JSON.stringify(_0x5f1ef0.find(_0x25ec94 => 'J' === _0x25ec94.value)));
        }), _0xd6f6b9.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x54a412();
        });

        const _0x54a412 = () => {
          _0x33af25.globalBrowser.emit('main_fastKeysUpdate', JSON.stringify(_0x595eaf));
        };
      },
      0x1905: (_0x3aca97, _0x55d828, _0x2165a6) => {
        'use strict';

        const a0_0x44823b = {
          _0x349ec8: 0x14a5,
          _0x49b443: 0xc9d,
          _0x3777e4: 0x1934
        },
              a0_0x66c102 = {
          _0x5c1f5c: 0x2488,
          _0x1bc9fe: 0x1a3,
          _0x48ab53: 0x92f,
          _0x17a9ca: 0x14d2,
          _0x596b23: 0x662
        },
              a0_0x4305a1 = {
          _0x4bcb74: 0x4b9,
          _0x1ef918: 0x163e,
          _0x336658: 0x2530,
          _0xfb146e: 0x1edc,
          _0x49b989: 0x535,
          _0x2429a6: 0x4fe,
          _0x3ea63c: 0x1934,
          _0x307fe1: 0x1da5,
          _0x75573e: 0x1a07,
          _0x28d73f: 0x238a,
          _0x5a1f20: 0x1a07,
          _0x151def: 0x9b1
        },
              a0_0x157725 = {
          _0xc52e11: 0xbf3,
          _0x34d106: 0xbf3,
          _0x4886e8: 0x11d9,
          _0x8dbfc0: 0x14d2
        },
              a0_0xe33f13 = {
          _0x15f7df: 0x2488,
          _0x16d7d1: 0x1a3,
          _0x236fa6: 0x154d
        },
              a0_0x5f4499 = {
          _0x3f7402: 0x535,
          _0x564cef: 0x253d,
          _0x2588e8: 0xfa6,
          _0x2c75fa: 0x1f30,
          _0x576c31: 0xf86,
          _0x1432aa: 0xd55
        };

        _0x2165a6.r(_0x55d828);

        var _0x507b32 = _0x2165a6(0x16a21),
            _0x32733b = _0x2165a6(0x35cd),
            _0x44c580 = _0x2165a6(0x69a1),
            _0x1e54a0 = _0x2165a6.n(_0x44c580),
            _0x451003 = _0x2165a6(0x12a76),
            _0x534799 = _0x2165a6(0x161cd);

        const _0x22be50 = _0x534799.players.local;
        let _0x20b34a = false,
            _0x2a8668 = false;
        _0x534799.events.add('keys.e', () => {
          _0x2165a6.g.gasColshape && (_0x534799.events.call('gas.init'), _0x22be50.vehicle && (_0x22be50.vehicle.setHalt(0x3, 0x1, true), _0x22be50.vehicle.setEngineOn(false, false, false), _0x534799.events.callRemote('2973793146', false)));
        }), _0x534799.events.add('playerEnterColshape', _0x3630b9 => {
          if (_0x507b32.api.isAuthed() && !_0x507b32.api.isUsingSystemAnim() && _0x3630b9.fuelStation) {
            if (Math.abs(_0x3630b9.pos.z - _0x22be50.position.z) > 0x2) return;
            _0x507b32.api.displayHelpStringTrans('displayHelpString.getPrices', false, true, 0x1388), _0x2165a6.g.gasColshape = true;
          }
        }), _0x534799.events.add('playerExitColshape', _0x57bfd9 => {
          _0x507b32.api.isAuthed() && _0x57bfd9.fuelStation && (_0x534799.game.ui.clearHelp(true), _0x2165a6.g.gasColshape = false, _0x2165a6.g.interfaces.gas && _0x451003.globalBrowser.toggle('gas', {
            'value': false
          }));
        });

        const _0xc423c5 = Object.keys(_0x1e54a0().fuel_stations).filter(_0x1c3b46 => !isNaN(_0x1c3b46)).map(_0x14e365 => {
          const _0x5e4e29 = _0x32733b.Z.find(_0x4fc296 => _0x4fc296.id == _0x14e365);

          return {
            'itemId': _0x5e4e29.id,
            'title': _0x5e4e29.title,
            'weight': _0x5e4e29.weight,
            'stack': _0x5e4e29.stack,
            'shopCount': _0x5e4e29.shopCount
          };
        });

        _0x534799.events.add('vue.mounted', () => {
          _0x451003.globalBrowser.emit('gas_preinit', {
            'items': _0xc423c5
          });
        }), _0x534799.events.add('gas.init', () => {
          _0x20b34a || (_0x2165a6.g.interfaces.gas && !_0x2a8668 ? _0x451003.globalBrowser.toggle('gas', {
            'value': false
          }) : _0x2165a6.g.currentInterface || (_0x20b34a = true, _0x534799.events.callRemote('1285688668')));
        }), _0x534799.events.add('gas.initSuccess', (_0x7a999b, _0x32456c, _0xcf11a5) => {
          _0x20b34a = false, _0x7a999b && (_0x451003.globalBrowser.toggle('gas', {
            'value': true,
            'type': _0x32456c,
            'gas': _0x22be50.vehicle ? Math.floor(_0x507b32.api.getEntitySync(_0x22be50.vehicle, 'gas', 'number') / 0x3e8) : 0x0,
            'maxGas': _0x22be50.vehicle ? Math.floor(_0x507b32.api.getEntitySync(_0x22be50.vehicle, 'maxGas', 'number') / 0x3e8) : 0x0,
            'prices': _0xcf11a5,
            'inVehicle': !!_0x22be50.vehicle
          }), _0x507b32.api.setDiscordStatus('fueling'));
        }), _0x534799.events.add('gas.tryFill', (_0x5157c3, _0x228e0f, _0x1ff9c9) => {
          _0x20b34a || ('bank' !== _0x228e0f || _0x22be50.bank && _0x22be50.bank.id ? _0x22be50.vehicle && _0x22be50.vehicle.getPedInSeat(_0x507b32.api.getVehSeat(-0x1)) == _0x22be50.handle ? [0xd, 0x15].includes(_0x22be50.vehicle.getClass()) ? _0x507b32.api.longNotifyTrans('property.cantFuelThisCar', 'error') : (_0x20b34a = true, _0x2a8668 = true, _0x534799.events.callRemote('681311381', _0x5157c3, _0x228e0f, _0x1ff9c9)) : _0x507b32.api.longNotifyTrans('vehicle.yourNotDriver', 'error') : _0x507b32.api.longNotifyTrans('bank.noBankCardInInventory', 'error'));
        }), _0x534799.events.add('gas.tryFillSuccess', (_0x26cead, _0x5c8756) => {
          _0x20b34a = false, _0x451003.globalBrowser.emit('gas_startFill', {
            'count': _0x26cead,
            'price': _0x5c8756
          }), _0x534799.events.call('utils.disablePlayerExit', true), _0x534799.events.call('utils.disablePlayerMove', true);
        }), _0x534799.events.add('gas.result', () => {
          _0x20b34a = false;
        }), _0x534799.events.add('gas.buy', (_0x529c7d, _0x29a8aa) => {
          _0x20b34a || ('bank' !== _0x529c7d || _0x22be50.bank && _0x22be50.bank.id ? (_0x20b34a = true, _0x2a8668 = true, _0x534799.events.callRemote('51702924', _0x529c7d, parseInt(_0x29a8aa))) : _0x507b32.api.longNotifyTrans('bank.noBankCardInInventory', 'error'));
        }), _0x534799.events.add('gas.close', () => {
          _0x20b34a = false, _0x2a8668 = false, _0x451003.globalBrowser.toggle('gas', {
            'value': false
          }), _0x507b32.api.setDiscordStatus(), _0x534799.events.call('utils.disablePlayerExit', false), _0x534799.events.call('utils.disablePlayerMove', false);
        }), _0x534799.events.add('playerDeath2', _0x5924b1 => {
          _0x5924b1 === _0x22be50 && (_0x20b34a = false);
        });
      },
      0x23f3: (_0x562795, _0x2c989b, _0x2eb604) => {
        'use strict';

        const a0_0x36db33 = {
          _0x35a1cb: 0x2181,
          _0x38dd50: 0x1d66,
          _0x4aae71: 0x6ba,
          _0x42b647: 0xf82,
          _0x13c2e5: 0x1d55,
          _0x2bd098: 0x145f,
          _0x473ecb: 0x145f,
          _0x5d190c: 0x2181,
          _0x326f3d: 0x1de2,
          _0x2e6152: 0x17a7,
          _0x1a86b3: 0x14ad,
          _0x261953: 0xf8a,
          _0x576a42: 0xa61,
          _0x4858b8: 0x1d66,
          _0x3261cb: 0xf2f,
          _0x3d2ae3: 0x14d2,
          _0x372a97: 0x112d,
          _0x2e2977: 0x1a07,
          _0x267375: 0x8f0,
          _0x5d1678: 0x1349,
          _0x3a1189: 0xbb1,
          _0x4118a8: 0x1bbb,
          _0x3d1aea: 0x1223,
          _0x3e65c1: 0x535,
          _0x580590: 0xf71,
          _0x4c4868: 0x235,
          _0x59a22e: 0x2152,
          _0x51a03b: 0xffb
        },
              a0_0x2e4cb7 = {
          _0x1f2895: 0x1f30,
          _0x1c3189: 0x1d66,
          _0x28cfa3: 0x2602,
          _0x24bf02: 0x535,
          _0xcdb1f0: 0x2034,
          _0xb0e5d5: 0x1850,
          _0x120236: 0x12c4,
          _0x2f3280: 0xf8a,
          _0x690604: 0x2488,
          _0x53b977: 0x1a3,
          _0x13823e: 0x1991,
          _0x3dc164: 0x14b1
        },
              a0_0x4f94b7 = {
          _0x591906: 0x1da5,
          _0x260870: 0x183c
        },
              a0_0x3e8549 = {
          _0x4e2120: 0x2488,
          _0x2b638f: 0x4a3,
          _0x18bd2e: 0x1a3,
          _0x589ff6: 0x1bd0
        },
              a0_0x451c04 = {
          _0x1d7d48: 0xe6d,
          _0x1c66a0: 0x1a3,
          _0x1ced74: 0xb85,
          _0x1e7af6: 0x2488,
          _0x255738: 0x2181,
          _0x5955a3: 0xa00,
          _0x147754: 0x1a3
        },
              a0_0x4e20fd = {
          _0x1d75f5: 0x1c79
        },
              a0_0x420791 = {
          _0x5e2c4c: 0x535,
          _0x309a62: 0x623,
          _0x3ed5af: 0x3e4,
          _0x24707a: 0x14d2,
          _0x5423af: 0x535,
          _0x3289d6: 0x1063
        },
              a0_0x21289f = {
          _0x1c86d2: 0x1d66,
          _0x434b57: 0xf8a,
          _0x40d93f: 0x2568,
          _0x3f1181: 0x535,
          _0x45443b: 0x7c0,
          _0x1a52b5: 0x2526,
          _0x269775: 0x12c4
        },
              a0_0x468ff9 = {
          _0x51b16a: 0x2181,
          _0x1cc7b8: 0xf4a,
          _0x1c6c6d: 0x2181,
          _0x3acea1: 0x17f,
          _0x25505c: 0x2181,
          _0x2039f5: 0x4a9,
          _0x19dcb2: 0x1223,
          _0x335358: 0x2488,
          _0x23215e: 0x1a10,
          _0x41ea66: 0x1da5,
          _0x1d65b2: 0x1386,
          _0x561518: 0x535,
          _0x5df48b: 0xf71,
          _0x29069a: 0x1906
        },
              a0_0xe6de2e = {
          _0x47a4a6: 0x1157,
          _0x5de40d: 0x535,
          _0x1cd0cc: 0x1063
        },
              a0_0x45409b = {
          _0x32d614: 0x535,
          _0x36197b: 0x1349,
          _0x1cc84b: 0x9b6
        };

        _0x2eb604.r(_0x2c989b);

        var _0x395a04 = _0x2eb604(0x16a21),
            _0x4d3c84 = _0x2eb604(0x3db3),
            _0xa0535b = _0x2eb604(0xc833),
            _0x47705b = _0x2eb604.n(_0xa0535b),
            _0x31d644 = _0x2eb604(0x12a76),
            _0x1ca526 = _0x2eb604(0x16a7d),
            _0x59fdd9 = _0x2eb604(0x161cd);

        const _0x254a57 = _0x59fdd9.players.local;
        let _0x3f2d12 = false;
        const _0x229536 = ['ru', 'en', 'uk', 'tr'];

        let _0x140e8d,
            _0x41b6e3,
            _0x29f7bb = {
          'dir': undefined,
          'dist': undefined,
          'lastDirection': 0x1,
          'initDist': 0x0,
          'lastDistance': undefined,
          'lastMessage': 'off',
          'travelDistance': 0x0,
          'lastTimeSpeech': 0x0
        },
            _0x20d009 = null;

        const _0x17fbfc = (_0x7032f9, _0x504614 = {
          'volume': 0x32
        }) => {
          const _0x2008b0 = _0x395a04.api.language.getPlayerLanguage();

          _0x229536.includes(_0x2008b0) && _0x395a04.api.playSound('GPS/' + _0x2008b0 + '/' + _0x7032f9, _0x504614);
        },
              _0x2a3498 = (_0x105ede, _0x575f12) => {
          try {
            var _0xb0ea15 = (_0x105ede = Math.abs(_0x105ede) % 0x64) % 0xa;

            return _0x105ede > 0xa && _0x105ede < 0x14 ? _0x575f12[0x2] : _0xb0ea15 > 0x1 && _0xb0ea15 < 0x5 ? _0x575f12[0x1] : 0x1 == _0xb0ea15 ? _0x575f12[0x0] : _0x575f12[0x2];
          } catch (_0x231faf) {
            _0x395a04.api.sendError(_0x231faf);
          }
        },
              _0x10900a = (_0x556c92 = false, _0x42432a = true) => {
          _0x254a57.gps && (_0x59fdd9.blips.exists(_0x254a57.gps) && _0x254a57.gps.setRoute(false), _0x59fdd9.blips.exists(_0x254a57.gps) && _0x254a57.gps.destroy(), _0x254a57.gps = null), _0x556c92 ? _0x42432a && _0x395a04.api.longNotifyTrans('gps.cancel', 'warn') : (_0x42432a && _0x395a04.api.longNotifyTrans('gps.reachPoint', 'success'), _0x31d644.globalBrowser.emit('gps_finish'), _0x395a04.api.playSound('gps_finish', {
            'volume': 0x32
          })), _0x59fdd9.events.callRemote('3075409442'), _0x29f7bb.initDist > 0x64 && _0x395a04.api.getPlayerSetting('gpsVoice') && _0x254a57.vehicle && !_0x556c92 && _0x17fbfc('RouteFinished', {
            'volume': 0x23
          }), _0x29f7bb = {
            'dir': undefined,
            'dist': undefined,
            'lastDirection': 0x1,
            'initDist': 0x0,
            'lastMessage': 'off',
            'travelDistance': 0x0,
            'lastTimeSpeech': 0x0
          };
        },
              _0x552ae9 = () => {
          if (_0x254a57.gps) {
            let _0xf4a15d = _0x254a57.position,
                _0x3cd9f5 = _0x254a57.gps.getCoords(),
                _0xcfe41b = _0x395a04.api.vdist(_0xf4a15d.x, _0xf4a15d.y, _0xf4a15d.z, _0x3cd9f5.x, _0x3cd9f5.y, _0x3cd9f5.z);

            _0x395a04.api.loadPathNodes();

            const _0x404a85 = _0x29f7bb.travelDistance = _0x59fdd9.game.pathfind.calculateTravelDistanceBetweenPoints(_0xf4a15d.x, _0xf4a15d.y, _0xf4a15d.z, _0x3cd9f5.x, _0x3cd9f5.y, _0x3cd9f5.z);

            if (_0x254a57.vehicle && _0x404a85 > 0x64 && _0x395a04.api.getPlayerSetting('gpsVoice')) {
              const _0x5240ab = _0x59fdd9.game.pathfind.generateDirectionsToCoord(_0x3cd9f5.x, _0x3cd9f5.y, _0x3cd9f5.z, 0x1, 0x1, _0x254a57.vehicle.handle, 0x1),
                    _0x331f56 = _0x29f7bb.dir = _0x5240ab.direction,
                    _0x58f44b = _0x29f7bb.dist = _0x5240ab.distToNxJunction,
                    _0x348c18 = Math.round(_0x58f44b);

              switch (_0x331f56) {
                case 0x0:
                  _0x29f7bb.lastDirection != _0x331f56 && (_0x29f7bb.lastMessage = 'go');
                  break;

                case 0x1:
                  _0x29f7bb.lastDirection != _0x331f56 && true && true && Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && (Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x17fbfc('RouteRecalculated', {
                    'volume': 0x23
                  }), _0x29f7bb.lastMessage = 'recalc', _0x29f7bb.lastTimeSpeech = Date.now() + 0x7d0);
                  break;

                case 0x2:
                  _0x29f7bb.lastDirection != _0x331f56 && (_0x29f7bb.lastMessage = 'straight', _0x29f7bb.lastDirection = _0x331f56);
                  break;

                case 0x3:
                  if (_0x348c18 < 0x1e0 && _0x348c18 > 0x118 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                    const _0x5a3033 = 0x190;
                    Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0x5a3033, _0x2a3498(_0x5a3033, ['Meter', 'Meters2_4', 'Meters']), 'TurnLeft'), _0x29f7bb.lastMessage = 'distfar', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                  } else {
                    if (_0x348c18 < 0x3c && (_0x29f7bb.lastDirection != _0x331f56 || true) && true) Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x17fbfc('TurnLeft', {
                      'volume': 0x23
                    }), _0x29f7bb.lastMessage = 'now', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0x7d0;else {
                      if (_0x348c18 < 0xb4 && _0x348c18 > 0x50 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                        const _0x3614d9 = 0xc8;
                        Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0x3614d9, _0x2a3498(_0x3614d9, ['Meter', 'Meters2_4', 'Meters']), 'TurnLeft'), _0x29f7bb.lastMessage = 'distclose', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                      }
                    }
                  }

                  break;

                case 0x4:
                  if (_0x348c18 < 0x1e0 && _0x348c18 > 0x118 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                    const _0x3050ff = 0x190;
                    Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0x3050ff, _0x2a3498(_0x3050ff, ['Meter', 'Meters2_4', 'Meters']), 'TurnRight'), _0x29f7bb.lastMessage = 'distfar', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                  } else {
                    if (_0x348c18 < 0x3c && (_0x29f7bb.lastDirection != _0x331f56 || true) && true) Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x17fbfc('TurnRight', {
                      'volume': 0x23
                    }), _0x29f7bb.lastMessage = 'now', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0x7d0;else {
                      if (_0x348c18 < 0xb4 && _0x348c18 > 0x50 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                        const _0x3257e3 = 0xc8;
                        Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0x3257e3, _0x2a3498(_0x3257e3, ['Meter', 'Meters2_4', 'Meters']), 'TurnRight'), _0x29f7bb.lastMessage = 'distclose', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                      }
                    }
                  }

                  break;

                case 0x6:
                  if (_0x348c18 < 0x1e0 && _0x348c18 > 0x118 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                    const _0xad528d = 0x190;
                    Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0xad528d, _0x2a3498(_0xad528d, ['Meter', 'Meters2_4', 'Meters']), 'TakeLeft'), _0x29f7bb.lastMessage = 'distfar', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                  } else {
                    if (_0x348c18 < 0x3c && (_0x29f7bb.lastDirection != _0x331f56 || true)) Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x17fbfc('TakeLeft', {
                      'volume': 0x23
                    }), _0x29f7bb.lastMessage = 'distnow', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0x7d0;else {
                      if (_0x348c18 < 0xb4 && _0x348c18 > 0x50 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                        const _0x1fd612 = 0xc8;
                        Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0x1fd612, _0x2a3498(_0x1fd612, ['Meter', 'Meters2_4', 'Meters']), 'TakeLeft'), _0x29f7bb.lastMessage = 'distclose', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                      }
                    }
                  }

                  break;

                case 0x7:
                  if (_0x348c18 < 0x1e0 && _0x348c18 > 0x118 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                    const _0x2e6912 = 0x190;
                    Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0x2e6912, _0x2a3498(_0x2e6912, ['Meter', 'Meters2_4', 'Meters']), 'TakeRight'), _0x29f7bb.lastMessage = 'distfar', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                  } else {
                    if (_0x348c18 < 0x3c && (_0x29f7bb.lastDirection != _0x331f56 || true)) Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x17fbfc('TakeRight', {
                      'volume': 0x23
                    }), _0x29f7bb.lastMessage = 'distnow', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0x7d0;else {
                      if (_0x348c18 < 0xb4 && _0x348c18 > 0x50 && (_0x29f7bb.lastDirection != _0x331f56 || true)) {
                        const _0x2e0d94 = 0xc8;
                        Date.now() - _0x29f7bb.lastTimeSpeech > 0x0 && _0x59fdd9.events.call('playGPSSoundCombine', _0x2e0d94, _0x2a3498(_0x2e0d94, ['Meter', 'Meters2_4', 'Meters']), 'TakeRight'), _0x29f7bb.lastMessage = 'distclose', _0x29f7bb.lastDirection = _0x331f56, _0x29f7bb.lastTimeSpeech = Date.now() + 0xfa0;
                      }
                    }
                  }

              }
            }

            _0xcfe41b < 0x514 && _0x404a85 < 0x32 && _0x10900a(null, true);
          }
        },
              _0x2183fd = _0x353a58 => {
          const _0x24810b = _0x254a57.position;
          return _0x353a58.map(_0x642ba3 => {
            const _0x2f297b = _0x59fdd9.game.pathfind.getStreetNameAtCoord(_0x642ba3.x, _0x642ba3.y, _0x642ba3.z, 0x0, 0x0);

            return _0x642ba3.address = _0x395a04.api.escapeHtml(_0x59fdd9.game.ui.getStreetNameFromHashKey(_0x2f297b.streetName)), _0x395a04.api.loadPathNodes(), _0x642ba3.distance = _0x59fdd9.game.pathfind.calculateTravelDistanceBetweenPoints(_0x24810b.x, _0x24810b.y, _0x24810b.z, _0x642ba3.x, _0x642ba3.y, _0x642ba3.z), _0x642ba3;
          }).sort((_0x9e82b9, _0x47a847) => _0x9e82b9.distance - _0x47a847.distance);
        };

        _0x59fdd9.keys.bind(_0x1ca526.t.F3, false, () => {
          try {
            if (!_0x395a04.api.isAuthed()) return;
            if (_0x2eb604.g.interfaces.gps) _0x59fdd9.events.call('gps.hide');else {
              if (_0x2eb604.g.skyCamera || _0x395a04.api.getEntitySync(_0x254a57, 'isDead', 'boolean')) return;

              _0x59fdd9.events.call('gps.show');
            }
          } catch (_0xf07d7d) {
            _0x395a04.api.sendError(_0xf07d7d);
          }
        }), _0x59fdd9.events.add('playGPSSoundCombine', (_0x1291b3, _0x1e00f9, _0x2a54f7) => {
          const _0x1b75fa = _0x395a04.api.language.getPlayerLanguage();

          _0x229536.includes(_0x1b75fa) && _0x31d644.globalBrowser.emit('main_combineDistToNxJunction', {
            'language': _0x1b75fa,
            'mileage': _0x1291b3,
            'unitType': _0x1e00f9,
            'goWhere': _0x2a54f7,
            'volume': _0x395a04.api.getSoundVolume('generalSoundVol', 0x23)
          });
        });

        const _0x4ecd93 = () => {
          const a0_0x305478 = {
            _0x164af8: 0x1447,
            _0x318bf4: 0x6d9,
            _0x580aa3: 0x23b4,
            _0x1cecbb: 0x1f30,
            _0x4fd2a7: 0x1d2,
            _0x384b88: 0x1ef2,
            _0xa5b91a: 0x145f,
            _0x364680: 0x6d9,
            _0x2f3376: 0x23f2,
            _0x40fe6c: 0x6d9
          },
                _0x1def52 = [];
          return _0x254a57.getVariable('family') && _0x254a57.contracts && _0x254a57.contracts.length && _0x254a57.contracts.forEach(_0x392558 => {
            const _0x45d563 = _0x47705b().contracts[_0x392558];

            let _0x4b32d6 = (_0x45d563.task ? _0x45d563.task : _0x45d563.tasks[0x0]).position;
            _0x45d563.task && _0x45d563.task.rules && _0x254a57.dynamicContracts && null != _0x254a57.dynamicContracts[_0x392558] && (_0x4b32d6 = _0x45d563.task.rules[_0x254a57.dynamicContracts[_0x392558]].position), _0x1def52.push({
              'title': 'gps.contractSaleTitle',
              'args': {
                'title': _0x45d563.title
              },
              'x': _0x4b32d6.x,
              'y': _0x4b32d6.y,
              'z': _0x4b32d6.z,
              'icon': 'file-contract'
            }), _0x45d563.task && _0x45d563.task.fromPosition && _0x1def52.push({
              'title': 'gps.contractLoadTitle',
              'args': {
                'title': _0x45d563.title
              },
              'x': _0x45d563.task.fromPosition.x,
              'y': _0x45d563.task.fromPosition.y,
              'z': _0x45d563.task.fromPosition.z,
              'icon': 'file-contract'
            });
          }), _0x1def52;
        };

        _0x59fdd9.events.add('gps.initDataSuccess', (_0xe1a99a, _0x3d911b, _0xf6f4c) => {
          _0x20d009 = _0xe1a99a, _0x140e8d = _0x3d911b, _0x41b6e3 = _0xf6f4c, _0x3d911b = _0x2183fd(_0x3d911b), _0xe1a99a.forEach(_0x1fcc3b => {
            _0x1fcc3b.places = _0x2183fd(_0x1fcc3b.places);
          }), _0x31d644.globalBrowser.emit('gps_init', {
            'gpsArray': _0xe1a99a,
            'favourites': _0x3d911b,
            'history': _0xf6f4c
          }), _0x3f2d12 = false, _0x31d644.globalBrowser.toggle('gps', {
            'value': true,
            'travelDistance': _0x29f7bb.travelDistance,
            'contractsPoints': _0x4ecd93()
          }), _0x31d644.globalBrowser.emit('chat_show', false);
        }), _0x59fdd9.events.add('gps.show', () => {
          if (!_0x2eb604.g.currentInterface) {
            if (!_0x20d009) return _0x3f2d12 = true, void _0x59fdd9.events.callRemote('1580893147', _0x20d009 ? 0x1 : 0x0);
            _0x3f2d12 = false, _0x31d644.globalBrowser.toggle('gps', {
              'value': true,
              'travelDistance': _0x29f7bb.travelDistance,
              'contractsPoints': _0x4ecd93()
            }), _0x31d644.globalBrowser.emit('chat_show', false);
          }
        }), _0x59fdd9.events.add('gps.hide', () => {
          _0x3f2d12 = false, _0x31d644.globalBrowser.toggle('gps', {
            'value': false
          }), _0x31d644.globalBrowser.emit('chat_show', true);
        }), _0x59fdd9.events.add('gps.cancel', _0x4dc57a => {
          _0x10900a(true, _0x4dc57a);
        }), _0x59fdd9.events.add('gps.openCategory', (_0xd84a09, _0x50b505) => {
          let _0x21411a;

          if (_0x3f2d12 = true, 'family-contracts' === _0x50b505) _0x21411a = _0x2183fd(_0x4ecd93());else {
            const _0x2ed0a5 = _0x20d009.find(_0x5e814c => _0x5e814c.title === _0xd84a09);

            if (!_0x2ed0a5) return void (_0x3f2d12 = false);
            _0x21411a = _0x2183fd(_0x2ed0a5.places);
          }
          _0x31d644.globalBrowser.emit('gps_openCategorySuccess', {
            'places': _0x21411a,
            'category': _0xd84a09
          }), _0x3f2d12 = false;
        }), _0x59fdd9.events.add('gps.setFavourite', _0x523194 => {
          _0x523194?.['x'] && _0x523194?.['y'] && _0x523194?.['z'] && (_0x3f2d12 || (_0x3f2d12 = true, _0x59fdd9.events.callRemote('1060291083', _0x523194)));
        }), _0x59fdd9.events.add('gps.setFavouriteSuccess', (_0x49d7a4, _0x1d7842, _0x31aa5b = false) => {
          const _0x4d79aa = _0x254a57.position;
          _0x3f2d12 = false;

          const _0x2f8e5d = _0x59fdd9.game.pathfind.getStreetNameAtCoord(_0x1d7842.x, _0x1d7842.y, _0x1d7842.z, 0x0, 0x0);

          _0x1d7842.address = _0x395a04.api.escapeHtml(_0x59fdd9.game.ui.getStreetNameFromHashKey(_0x2f8e5d.streetName)), _0x1d7842.distance = _0x59fdd9.game.pathfind.calculateTravelDistanceBetweenPoints(_0x4d79aa.x, _0x4d79aa.y, _0x4d79aa.z, _0x1d7842.x, _0x1d7842.y, _0x1d7842.z), _0x31d644.globalBrowser.emit('gps_setFavouriteSuccess', {
            'status': _0x49d7a4,
            'place': _0x1d7842
          });

          for (let _0x1d7bbc = 0x0; _0x1d7bbc < _0x20d009.length; _0x1d7bbc++) {
            const _0x2d9698 = _0x20d009[_0x1d7bbc].places.find(_0x2f92f7 => _0x2f92f7.x === _0x1d7842.x && _0x2f92f7.y === _0x1d7842.y && _0x2f92f7.z === _0x1d7842.z);

            if (_0x2d9698) {
              _0x2d9698.fav = _0x49d7a4 ? 0x1 : 0x0;
              break;
            }
          }
        }), _0x59fdd9.events.add('gps.addFavourite', _0x33ddb1 => {
          _0x3f2d12 || (_0x3f2d12 = true, _0x59fdd9.events.callRemote('2856829767', _0x33ddb1));
        }), _0x59fdd9.events.add('gps.setPoint', (_0x5b105c, _0x10b626 = true) => {
          _0x5b105c = JSON.parse(_0x5b105c), _0x254a57.gps && (_0x254a57.gps.setRoute(false), _0x254a57.gps.destroy(), _0x254a57.gps = null), _0x59fdd9.game.hud.setWaypointOff(), _0x254a57.gps = _0x59fdd9.blips.new(0xa2, new _0x59fdd9.Vector3(_0x5b105c.x, _0x5b105c.y, _0x5b105c.z), {
            'name': _0x5b105c.title,
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x4d3c84.markAsTranslatedBlip)(_0x254a57.gps, _0x5b105c.title), _0x254a57.gps.setRoute(true), _0x254a57.gps.setRouteColour(0x5);

          let _0x498bc0 = _0x254a57.position,
              _0x3f43c4 = _0x254a57.gps.getCoords();

          _0x29f7bb.initDist = _0x59fdd9.game.pathfind.calculateTravelDistanceBetweenPoints(_0x498bc0.x, _0x498bc0.y, _0x498bc0.z, _0x3f43c4.x, _0x3f43c4.y, _0x3f43c4.z), _0x552ae9(), _0x59fdd9.game.audio.setGpsActive(true), _0x59fdd9.events.callRemote('455036705', JSON.stringify(_0x5b105c)), _0x10b626 && _0x395a04.api.longNotifyTrans('gps.start', {
            'title': _0x395a04.api.language.translatePlayer(_0x5b105c.title, _0x5b105c.args)
          }, 'success'), _0x29f7bb.initDist > 0x64 && _0x395a04.api.getPlayerSetting('gpsVoice') && _0x254a57.vehicle && Date.now() - _0x29f7bb.lastTimeSpeech && (_0x17fbfc('RouteCalculated', {
            'volume': 0x23
          }), _0x29f7bb.lastTimeSpeech = Date.now() + 0xbb8);
        }), _0x59fdd9.events.add('gps.addHistoryLine', _0x2e6404 => {
          _0x31d644.globalBrowser.emit('gps_addHistoryLine', JSON.stringify(_0x2e6404));
        }), _0x59fdd9.events.add('gps.clearPoint', () => {
          _0x254a57.gps && (_0x254a57.gps.setRoute(false), _0x254a57.gps.destroy(), _0x254a57.gps = null);
        }), _0x59fdd9.events.add('time.everySec', () => {
          _0x552ae9();
        });
      },
      0x11689: (_0xe00e4, _0x4f2488, _0x1fe4d6) => {
        'use strict';

        const a0_0x438ccf = {
          _0x516184: 0x2588
        },
              a0_0x45108c = {
          _0x5da9ea: 0x2488,
          _0x568a10: 0x1a3,
          _0x102c1f: 0x94c
        },
              a0_0xbdc552 = {
          _0x1677aa: 0x1dc,
          _0x37045b: 0x15ef,
          _0x4be6b1: 0x1dc,
          _0xcfcaf1: 0x15ef,
          _0x4dcb3f: 0x163e,
          _0x11c807: 0x535,
          _0x2af90a: 0x3d0,
          _0x15bf17: 0x535,
          _0x26c800: 0x623,
          _0x40192d: 0x1935,
          _0x2ec0df: 0x1aa1,
          _0x3c8a4a: 0x4b9,
          _0x5797d1: 0x1b41,
          _0x86732e: 0x6da,
          _0x252af4: 0xc6c,
          _0xc6fa99: 0x153c,
          _0x234d7d: 0x1f93,
          _0x1e0f1e: 0x1f6b,
          _0x3b0cc2: 0x505,
          _0x7bfee: 0x23c8,
          _0x392ed8: 0x623,
          _0x25c786: 0x4b9,
          _0x171835: 0x1403,
          _0x455c8d: 0x1748,
          _0x57d7e5: 0x1d66,
          _0x461415: 0xa33,
          _0xade53e: 0x1b49,
          _0x3ade54: 0x1b49,
          _0x3fdd4b: 0x1b49
        },
              a0_0x235c4d = {
          _0x4f5a2f: 0x15ef,
          _0x35cb53: 0x1dc,
          _0x553645: 0x535,
          _0x4adb2e: 0xf71,
          _0x3f8417: 0xffb,
          _0x1c7400: 0x4b9,
          _0x59aee5: 0x133c,
          _0x24de2d: 0x2530,
          _0x38844b: 0x163e,
          _0x154961: 0x535,
          _0x597725: 0x4b9
        },
              a0_0x40d47c = {
          _0x1c3116: 0x10cf,
          _0x36a406: 0x253d,
          _0x2fdf53: 0x1a3,
          _0x1c92c6: 0x535,
          _0x47aa10: 0x204,
          _0x6548ce: 0x1b29,
          _0x4d1861: 0xff8,
          _0x3c8b55: 0xff8,
          _0xe898ee: 0x1805,
          _0x2a711c: 0x535,
          _0x1f6c8a: 0xf9f
        },
              a0_0x43b0a7 = {
          _0x2cb2b1: 0x228e,
          _0x2d197e: 0x1d66,
          _0x4635c4: 0x20df,
          _0x3c7031: 0x750,
          _0x1ba259: 0x1e35,
          _0x299c6f: 0x1d66,
          _0x1eba7c: 0x1e35,
          _0x3d69b1: 0xf92,
          _0x359a6f: 0x1d66,
          _0x1b3b98: 0xf92
        },
              a0_0x1bdb81 = {
          _0x52ab00: 0x186b
        },
              a0_0xf9417d = {
          _0xb5805a: 0x2488,
          _0x467af1: 0x1a3
        },
              a0_0x5c4c46 = {
          _0x2a5994: 0x2488,
          _0x370886: 0x1839,
          _0xc2a4b8: 0x1b8c
        };
        _0x1fe4d6.r(_0x4f2488), _0x1fe4d6.d(_0x4f2488, {
          'isHudActive': () => _0x357984
        });

        var _0x49077b = _0x1fe4d6(0x16a21),
            _0x2ba6fb = _0x1fe4d6(0x16a7d),
            _0x3aecbe = _0x1fe4d6(0x580a),
            _0x2a9fa6 = _0x1fe4d6(0x12a76),
            _0x487bda = _0x1fe4d6(0x161cd);

        const _0x1527c8 = _0x487bda.players.local;
        let _0x4c0ff2 = false,
            _0x37d686 = false,
            _0x58b1a2 = false,
            _0x357984 = false;
        const _0x28fe94 = [0x64, 0x12c, 0x258, 0x3e8];
        _0x487bda.events.add('playerJoin', () => {
          const _0x4d3332 = _0x487bda.players.length;

          _0x487bda.events.call('updateOnline', _0x4d3332);
        }),{

          _0x487bda.events.call('updateOnline', _0x11e9b5);
        }), _0x487bda.events.add('auth.client.onPlayerAuthAccount', () => {
          const _0x10d22 = _0x487bda.players.length;

          _0x487bda.events.call('updateOnline', _0x10d22);
        }), _0x487bda.events.add('updateOnline', _0x5b8b4d => {
          _0x2a9fa6.globalBrowser.emit('main_updateOnline', {
            'online': _0x5b8b4d,
            'server': _0x1fe4d6.g.server
          });
        }), _0x487bda.events.add('setHudInfo', (_0x53b15f, _0x3a195b) => {
          _0x1fe4d6.g.server = _0x3a195b, _0x2a9fa6.globalBrowser.emit('main_updateHudInfo', {
            'maxOnlineCount': _0x53b15f,
            'server': _0x3a195b
          });
        }), _0x487bda.events.add('updateStreet', (_0x2461e3, _0x4798eb) => {
          _0x2a9fa6.globalBrowser.emit('main_updateStreet', {
            'streetName': _0x2461e3,
            'zoneName': _0x4798eb
          });
        }), _0x487bda.events.add('updateWeather', (_0x1ebd74, _0x139f5c, _0x53c414) => {
          _0x487bda.game.gameplay.setWind(_0x53c414);
        });

        let _0x2b97fd, _0x549a37, _0x403dce, _0x386fa1;

        _0x487bda.events.add('updateRankBar', async (_0x392f4e, _0x5a2217, _0x2a6880) => {
          await _0x49077b.api.requestHudScaleform(0x13), _0x487bda.game.graphics.pushScaleformMovieFunctionFromHudComponent(0x13, 'SET_COLOUR'), _0x487bda.game.graphics.pushScaleformMovieFunctionParameterInt(0x74), _0x487bda.game.graphics.popScaleformMovieFunctionVoid(), _0x487bda.game.graphics.pushScaleformMovieFunctionFromHudComponent(0x13, 'SET_RANK_SCORES'), _0x487bda.game.graphics.pushScaleformMovieFunctionParameterInt(0x0), _0x487bda.game.graphics.pushScaleformMovieFunctionParameterInt(_0x2a6880), _0x487bda.game.graphics.pushScaleformMovieFunctionParameterInt(0x0 === _0x392f4e ? 0x0 : _0x392f4e - 0x1), _0x487bda.game.graphics.pushScaleformMovieFunctionParameterInt(_0x392f4e), _0x487bda.game.graphics.pushScaleformMovieFunctionParameterInt(_0x5a2217), _0x487bda.game.graphics.popScaleformMovieFunctionVoid();
        }), _0x487bda.events.add('time.every05Sec', () => {
          if (!_0x49077b.api.isAuthed()) return;
          _0x37d686 = !_0x37d686;

          const _0x1ac1b1 = _0x487bda.game.pathfind.getStreetNameAtCoord(_0x487bda.players.local.position.x, _0x487bda.players.local.position.y, _0x487bda.players.local.position.z, 0x0, 0x0),
                _0x22c32c = _0x49077b.api.escapeHtml(_0x487bda.game.ui.getLabelText(_0x487bda.game.zone.getNameOfZone(_0x487bda.players.local.position.x, _0x487bda.players.local.position.y, _0x487bda.players.local.position.z)));

          let _0xe2d5d3 = _0x49077b.api.escapeHtml(_0x487bda.game.ui.getStreetNameFromHashKey(_0x1ac1b1.streetName));

          _0x1ac1b1.crossingRoad && _0x1ac1b1.crossingRoad != _0x1ac1b1.streetName && (_0xe2d5d3 += ' / ' + _0x49077b.api.escapeHtml(_0x487bda.game.ui.getStreetNameFromHashKey(_0x1ac1b1.crossingRoad))), _0xe2d5d3 != _0x386fa1 && _0x487bda.events.call('updateStreet', _0xe2d5d3, _0x22c32c), _0x386fa1 = _0xe2d5d3;
        }), _0x487bda.events.add('time.every01Sec', () => {
          const _0x529d1a = _0x487bda.game.ui.isHudComponentActive(0x0);

          if (_0x529d1a && !_0x357984 ? _0x357984 = true : !_0x529d1a && _0x357984 && (_0x357984 = false), !_0x49077b.api.isAuthed()) return;

          const _0x2ac43f = _0x487bda.game.hud.isRadarHidden();

          if (_0x2ac43f && 0x0 != _0x2b97fd && 0x0 != _0x549a37) _0x2b97fd = 0x0, _0x549a37 = 0x0, _0x2a9fa6.globalBrowser.emit('main_updateHudPosition', {
            'width': 0x0,
            'height': 0x0,
            'swidth': 0x0,
            'sheight': 0x0,
            'right_x': 0x0,
            'left_x': 0x0,
            'top_y': 0x0,
            'bottom_y': 0x0
          });else {
            if (!_0x2ac43f) {
              const _0x5c6d6c = _0x49077b.api.getMinimapAnchor(),
                    _0x28e994 = _0x49077b.api.isBigmapActive(),
                    _0x4a65c2 = (_0x28e994 ? _0x5c6d6c.width : _0x5c6d6c.width, _0x28e994 ? _0x5c6d6c.height : _0x5c6d6c.height, _0x28e994 ? 1.25 * _0x5c6d6c.swidth : _0x5c6d6c.swidth),
                    _0x32af2f = (_0x28e994 ? _0x5c6d6c.left_x : _0x5c6d6c.left_x, _0x28e994 ? 1.25 * _0x5c6d6c.right_x : _0x5c6d6c.right_x);

              _0x4a65c2 === _0x2b97fd && _0x32af2f === _0x549a37 && _0x403dce == _0x28e994 || (_0x2b97fd = _0x4a65c2, _0x549a37 = _0x32af2f, _0x403dce = _0x28e994, _0x49077b.api.updateHudPosition());
            }
          }
        }), _0x487bda.events.add('adv.push', (_0x50832b, _0x23c85a, _0x5d361c) => {
          _0x1fe4d6.g.currentInterface || _0x49077b.api.getPlayerSetting('hud') && _0x23c85a.trim().length && _0x2a9fa6.globalBrowser.emit('main_adsPush', {
            'name': _0x50832b,
            'text': _0x23c85a,
            'number': _0x5d361c
          });
        });
        let _0xc0793d = 0x0;
        _0x487bda.events.add('render', () => {
          if (!_0x1527c8.settings || !_0x1527c8.settings.speedo || 0x0 === _0x1527c8.settings.speedo) return;

          const _0x4579cd = _0x49077b.api.getPlayerSetting('speedoUpdate') || 0x0,
                _0x59641c = _0x28fe94[_0x4579cd];

          if (_0x59641c > 0x0) {
            if (_0xc0793d > Date.now()) return;
            _0xc0793d = Date.now() + _0x28fe94[_0x4579cd];
          }

          !_0x4c0ff2 || _0x1527c8.vehicle && _0x1527c8.vehicle.getPedInSeat(_0x49077b.api.getVehSeat(-0x1)) === _0x1527c8.handle ? _0x1527c8.vehicle && _0x1527c8.vehicle.getPedInSeat(_0x49077b.api.getVehSeat(-0x1)) === _0x1527c8.handle && (_0x4c0ff2 = true, _0x2a9fa6.globalBrowser.emit('main_updateVehicleInfo', {
            'inVehicle': true,
            'speed': 3.6 * _0x1527c8.vehicle.getSpeed(),
            'delay': _0x59641c
          })) : (_0x4c0ff2 = false, _0x2a9fa6.globalBrowser.emit('main_updateVehicleInfo', {
            'inVehicle': false
          }));
        }), _0x487bda.events.add('time.every05Sec', () => {
          if (_0x1527c8.settings && _0x1527c8.settings.speedo && 0x0 !== _0x1527c8.settings.speedo && _0x1527c8.vehicle && _0x1527c8.vehicle.getPedInSeat(_0x49077b.api.getVehSeat(-0x1)) === _0x1527c8.handle) {
            _0x4c0ff2 = true, _0x49077b.api.getPlayerSetting('speedoUpdate');

            const _0x6978d5 = _0x49077b.api.getEntitySync(_0x1527c8.vehicle, 'indicators', 'array'),
                  _0x2393f9 = _0x1527c8.vehicle.getLightsState(0x1, 0x1),
                  _0x415260 = _0x49077b.api.getEntitySync(_0x1527c8.vehicle, 'mileage', 'number') / 0x186a0,
                  _0x58fd75 = _0x415260 && _0x1527c8.mileageClass ? _0x415260 + _0x1527c8.mileageClass.centimeters / 0x186a0 : 0x0,
                  _0x523532 = _0x49077b.api.clamp(_0x49077b.api.getEntitySync(_0x1527c8.vehicle, 'wearCooling', 'number') / 0x3e8 * 3.2, 0x5a, 0xb4),
                  _0x14406f = _0x3aecbe.Z.find(_0x5bf6ce => _0x5bf6ce.model === _0x1527c8.vehicle.model);

            _0x2a9fa6.globalBrowser.emit('main_updateVehicleInfo', {
              'inVehicle': true,
              'currentFuel': (parseInt(_0x49077b.api.getGas(_0x1527c8.vehicle)) / 0x3e8).toFixed(0x0) || 0x0,
              'maxFuel': parseInt(_0x49077b.api.getEntitySync(_0x1527c8.vehicle, 'maxGas', 'number')) / 0x3e8 || 0x32,
              'maxSpeed': _0x14406f ? _0x14406f.limit : 3.6 * _0x487bda.game.vehicle.getVehicleModelMaxSpeed(_0x1527c8.vehicle.model),
              'gear': _0x1527c8.vehicle.gear,
              'mileage': _0x58fd75,
              'oilTemp': _0x523532,
              'indicatorLeft': !!(_0x37d686 && _0x6978d5 && _0x6978d5[0x1]),
              'indicatorRight': !!(_0x37d686 && _0x6978d5 && _0x6978d5[0x0]),
              'dippedBeam': _0x1527c8.vehicle.getIsEngineRunning() && _0x2393f9.lightsOn,
              'highBeam': !(!_0x1527c8.vehicle.getIsEngineRunning() || !_0x2393f9.highbeamsOn),
              'lock': !(!_0x1527c8.vehicle.getIsEngineRunning() || 0x2 !== _0x1527c8.vehicle.getDoorLockStatus()),
              'handbrake': _0x58b1a2,
              'seatbelt': _0x1fe4d6.g.isSeatbeltActive,
              'fuelType': _0x49077b.api.getEntitySync(_0x1527c8.vehicle, 'fuelType', 'string')
            });
          }
        }), _0x487bda.events.add('setDonateOnline', (_0x40959a, _0x221015, _0x17a039) => {
          _0x2a9fa6.globalBrowser.emit('main_updateDonateOnline', {
            'isCoins': _0x40959a,
            'value': _0x221015,
            'coinsAmount': _0x17a039
          });
        }), _0x487bda.events.add('setOnline2022', _0x2e5a9b => {
          _0x2a9fa6.globalBrowser.emit('main_updateOnline2022', {
            'amount': _0x2e5a9b
          });
        }), _0x487bda.keys.bind(_0x2ba6fb.t.SPACE, true, () => {
          try {
            _0x1527c8.vehicle && _0x1527c8.vehicle.getPedInSeat(-0x1) === _0x1527c8.handle && (_0x58b1a2 = true);
          } catch (_0xd79ce3) {
            _0x49077b.api.sendError(_0xd79ce3);
          }
        }), _0x487bda.keys.bind(_0x2ba6fb.t.SPACE, false, () => {
          _0x58b1a2 = false;
        }), _0x487bda.events.add('playerLeaveVehicle', () => {
          _0x58b1a2 = false;
        }), _0x487bda.events.add('capture.addToKillList', _0x4adc30 => {
          _0x2a9fa6.globalBrowser.emit('main_addToKillList', JSON.stringify(_0x4adc30));
        }), _0x487bda.events.add('updateHudJailInfo', _0x52b859 => {
          _0x2a9fa6.globalBrowser.emit('main_updateJailInfo', JSON.stringify(_0x52b859));
        }), _0x487bda.events.add('updateWantedLevel', _0x206cd8 => {
          _0x2a9fa6.globalBrowser.emit('main_updateWantedLevel', _0x206cd8);
        }), _0x487bda.events.add('quests.updateData', _0x3d0bcb => {
          _0x3d0bcb ? _0x3d0bcb.value = true : _0x3d0bcb = {
            'value': false
          }, _0x2a9fa6.globalBrowser.emit('main_updateQuest', JSON.stringify(_0x3d0bcb));
        }), _0x487bda.game.ui.displayAreaName(false), _0x487bda.game.ui.displayCash(false), _0x487bda.game.ui.setMinimapComponent(0xf, true, -0x1);
      },
      0xc2: (_0x387c98, _0x39389c, _0x3ebf94) => {
        'use strict';

        const a0_0x4f46aa = {
          _0x2d83a9: 0x294
        },
              a0_0x46d290 = {
          _0x2059f0: 0x2488,
          _0x1adba0: 0x4a3
        },
              a0_0x5d7b68 = {
          _0x1aa8ff: 0x4a3,
          _0x2dec5b: 0xe0a
        };

        _0x3ebf94.r(_0x39389c);

        var _0x449123 = _0x3ebf94(0x16a21),
            _0x171524 = _0x3ebf94(0x12a76),
            _0x31bd58 = _0x3ebf94(0x161cd);

        _0x31bd58.events.add('idCard.initSuccess', _0x50a5ef => {
          if (_0x50a5ef.propId) {
            const _0x594152 = _0x31bd58.game.pathfind.getStreetNameAtCoord(parseFloat(_0x50a5ef.posX), parseFloat(_0x50a5ef.posY), parseFloat(_0x50a5ef.posZ), 0x0, 0x0),
                  _0x22992c = _0x449123.api.escapeHtml(_0x31bd58.game.ui.getLabelText(_0x31bd58.game.zone.getNameOfZone(parseFloat(_0x50a5ef.posX), parseFloat(_0x50a5ef.posY), parseFloat(_0x50a5ef.posZ)))),
                  _0x518104 = _0x449123.api.escapeHtml(_0x31bd58.game.ui.getStreetNameFromHashKey(_0x594152.streetName));

            _0x50a5ef.address = _0x518104 + ', ' + _0x22992c + ', ' + _0x50a5ef.propId;
          }

          _0x171524.globalBrowser.toggle('idCard', {
            'value': true,
            'info': _0x50a5ef
          });
        }), _0x31bd58.events.add('idCard.close', () => {
          _0x171524.globalBrowser.toggle('idCard', {
            'value': false
          });
        }), _0x31bd58.events.add('medCard.initSuccess', (_0x5cf5bd, _0x5e1189) => {
          _0x171524.globalBrowser.toggle('medlic', {
            'value': true,
            'data': _0x5cf5bd,
            'login': _0x5e1189
          });
        }), _0x31bd58.events.add('armyCard.initSuccess', (_0x4d6673, _0x4abb55) => {
          _0x171524.globalBrowser.toggle('armylic', {
            'value': true,
            'data': _0x4d6673,
            'login': _0x4abb55
          });
        }), _0x31bd58.events.add('armyCard.close', () => {
          _0x171524.globalBrowser.toggle('armylic', {
            'value': false
          });
        }), _0x31bd58.events.add('medCard.close', () => {
          _0x171524.globalBrowser.toggle('medlic', {
            'value': false
          });
        }), _0x31bd58.events.add('identification.initSuccess', (_0x3519be, _0x2a1889) => {
          _0x171524.globalBrowser.toggle('identification', {
            'value': true,
            'info': _0x3519be,
            'type': _0x2a1889
          });
        }), _0x31bd58.events.add('identification.close', () => {
          _0x171524.globalBrowser.toggle('identification', {
            'value': false
          });
        });
      },
      0x106d5: (_0x6935d6, _0x3193fe, _0x5ddb2d) => {
        _0x5ddb2d(0x155e), _0x5ddb2d(0x23f3), _0x5ddb2d(0x1112f), _0x5ddb2d(0x11689), _0x5ddb2d(0xb661), _0x5ddb2d(0x5c4d), _0x5ddb2d(0x18fc), _0x5ddb2d(0x1905), _0x5ddb2d(0x1173d), _0x5ddb2d(0xd092), _0x5ddb2d(0x933e), _0x5ddb2d(0x17b1f), _0x5ddb2d(0x10b0e), _0x5ddb2d(0x152c3), _0x5ddb2d(0xc2), _0x5ddb2d(0x3e7e), _0x5ddb2d(0x13c50), _0x5ddb2d(0x11a6), _0x5ddb2d(0x98c1), _0x5ddb2d(0xedaf), _0x5ddb2d(0x13215), _0x5ddb2d(0x8213), _0x5ddb2d(0x123b4), _0x5ddb2d(0x62d0), _0x5ddb2d(0x92de), _0x5ddb2d(0x162c1), _0x5ddb2d(0xe630), _0x5ddb2d(0xe83), _0x5ddb2d(0x11178), _0x5ddb2d(0xb307), _0x5ddb2d(0x127c4), _0x5ddb2d(0x133dc), _0x5ddb2d(0x3757), _0x5ddb2d(0x1b7a), _0x5ddb2d(0x101c), _0x5ddb2d(0xcfe0), _0x5ddb2d(0x84be), _0x5ddb2d(0x158ff), _0x5ddb2d(0x1594f), _0x5ddb2d(0xfc88), _0x5ddb2d(0x66f0), _0x5ddb2d(0x177bd), _0x5ddb2d(0x124e1), _0x5ddb2d(0xa636), _0x5ddb2d(0xa6bb), _0x5ddb2d(0xaf91), _0x5ddb2d(0x10a5c), _0x5ddb2d(0xa60f), _0x5ddb2d(0x12bdd), _0x5ddb2d(0x68c3), _0x5ddb2d(0x19f8), _0x5ddb2d(0x8c9), _0x5ddb2d(0xd398), _0x5ddb2d(0x17db7), _0x5ddb2d(0x124ee), _0x5ddb2d(0x1341d), _0x5ddb2d(0xbf3d), _0x5ddb2d(0x938e), _0x5ddb2d(0x47ca), _0x5ddb2d(0x793b), _0x5ddb2d(0x3c24), _0x5ddb2d(0x365f), _0x5ddb2d(0x18429), _0x5ddb2d(0x17524), _0x5ddb2d(0xd275), _0x5ddb2d(0x3436);
      },
      0x10b0e: (_0x4f7112, _0x4897bf, _0x3d1267) => {
        'use strict';

        const a0_0x39194c = {
          _0x593727: 0x141f
        },
              a0_0x1a0769 = {
          _0x246efb: 0x2267,
          _0x576c13: 0x10a5,
          _0x4f34ba: 0x10a5
        },
              a0_0x28df7d = {
          _0x3ef58f: 0x1086,
          _0x54aa50: 0x141f,
          _0x5dc53d: 0x1d2,
          _0x5b790: 0x1140,
          _0x42422a: 0x19f4,
          _0x75c37b: 0x15b7,
          _0x13c28f: 0x145f,
          _0x2b505d: 0xbb1,
          _0x5cc680: 0x145f,
          _0x331f8c: 0x15b7,
          _0x5e516f: 0x2488,
          _0x3c63a5: 0x4a3
        },
              a0_0x4442f7 = {
          _0x50b282: 0x1d2
        },
              a0_0x395e71 = {
          _0x1cca30: 0x1312,
          _0x541966: 0x1820,
          _0x50479a: 0x1291,
          _0x588f86: 0x1820,
          _0x4f4cdd: 0x1cd3,
          _0x4cda86: 0x5c8,
          _0x225be7: 0x15e,
          _0x1bc7ac: 0xc95,
          _0xfa65d: 0xa72,
          _0x59ed01: 0x5c8,
          _0x1aa43c: 0x1a2,
          _0x152af1: 0x5c8,
          _0x42cbcd: 0x6c9,
          _0xd71ebf: 0x1cd3,
          _0x595381: 0x14fa,
          _0x4351fb: 0x524,
          _0x39a02c: 0x1f58,
          _0x28eedc: 0x5dd,
          _0xe67127: 0xc95,
          _0x365e69: 0x1cd3,
          _0x134aed: 0x1e8f,
          _0x40c23a: 0x1cd3,
          _0x5a8564: 0x15b0,
          _0xbf1aef: 0x194a,
          _0x3a7914: 0x5c8,
          _0x5d44a7: 0x1f72,
          _0x36db0d: 0x1cd3,
          _0x3e4819: 0x6c2,
          _0xec9683: 0xa72,
          _0x27a94b: 0x1d82,
          _0x3c2e37: 0x3e5,
          _0x7ebd49: 0x2ee,
          _0x2f25b6: 0x469,
          _0x3cae7c: 0x5c8,
          _0xfd0939: 0x5dd,
          _0x6c5bc: 0x1edc,
          _0x11e1d6: 0xc95,
          _0x52583e: 0x1cd3,
          _0x59aa80: 0x5c8,
          _0x621d85: 0x1470,
          _0x3aaa16: 0x1cd3,
          _0x2dc57e: 0xb5d,
          _0x1dbcc9: 0x1cd3,
          _0x284c5b: 0x212c,
          _0xb069cc: 0xab2,
          _0x139951: 0x1cd3,
          _0x203a78: 0x23b,
          _0xe0510b: 0x1d25,
          _0x1f104b: 0x1edc,
          _0x11bec4: 0x5c8,
          _0x399f9b: 0x1609,
          _0x53cd81: 0x15e5,
          _0x340be9: 0x1cd3,
          _0x422a43: 0x119a,
          _0x6b3eba: 0x5c8,
          _0x1bf87d: 0x1a3c,
          _0x10edb5: 0x1cd3,
          _0x2fe7af: 0x5c8,
          _0xa1918e: 0x1844,
          _0x40e7ef: 0xa1e,
          _0x2e2a6d: 0x5c8,
          _0x31799b: 0x160e,
          _0x30428f: 0x1291,
          _0xaf06dd: 0x1cd3,
          _0x526104: 0x3ca,
          _0x1fe5b3: 0x10ee,
          _0x2af96a: 0x1ab3,
          _0x458299: 0x1c4c,
          _0x17d3c0: 0x1e12,
          _0x47c096: 0x16c5,
          _0x583661: 0x535,
          _0x45edc8: 0x1b6,
          _0x4e3f80: 0x1615,
          _0x539145: 0x10ee,
          _0x5ad5c5: 0xcb6,
          _0xaab0ac: 0x1cd3,
          _0x4b0c96: 0x1820,
          _0x25cbf6: 0x56c,
          _0x5f17f3: 0xe6d,
          _0xad4a9e: 0x19d2,
          _0x4546c9: 0x1820,
          _0x4ca611: 0x1820,
          _0x2de159: 0x16c5,
          _0x33e497: 0x1493,
          _0x5c499c: 0x1cd3,
          _0x2e38d0: 0x5c4,
          _0x4d39d2: 0x1e39,
          _0x2a6dff: 0x1cd3,
          _0x1d09f8: 0x14e0,
          _0x43ac27: 0xae3,
          _0xf1ba27: 0x1cd3,
          _0x232ede: 0x518,
          _0x1b5c03: 0x4b9,
          _0x17bdb1: 0x4b9,
          _0x4ff82c: 0x13b4,
          _0x149f0c: 0xbdc,
          _0xdb4ab: 0x1d6c,
          _0x370ac4: 0x231b,
          _0x29c3ee: 0x231b,
          _0x5ca91e: 0x2e7,
          _0x422ee2: 0x16c5,
          _0xe06373: 0x163e,
          _0x7d864d: 0x535,
          _0x1b6c3f: 0x133c,
          _0x58fad0: 0x235b,
          _0x3aab52: 0x185e,
          _0xdc8fbb: 0x2267,
          _0x2b5511: 0x1a0c,
          _0x3e97d2: 0x16c5,
          _0x20d3c9: 0x1baa,
          _0x17aed8: 0x1820,
          _0x146898: 0xb5b,
          _0x44f279: 0x2080,
          _0x15d20d: 0x1f30,
          _0x4150e1: 0x1f30,
          _0x4c3e08: 0x1e01,
          _0xc9ce7e: 0x1fec,
          _0x42e914: 0x2288,
          _0x157f8e: 0x1d66,
          _0x72205c: 0x628,
          _0x4c115f: 0x9c8,
          _0x5ece32: 0x1b17,
          _0x51d0ad: 0x7c6,
          _0x3b78c6: 0x279,
          _0x40e369: 0xaa9,
          _0x3ca786: 0x1ee0,
          _0x2f5817: 0x18e3,
          _0x32a4a9: 0x1293,
          _0x2749db: 0x535,
          _0xff679e: 0x1433,
          _0x2343d: 0x1cbf,
          _0x1eb344: 0x41d,
          _0x455398: 0xbc0,
          _0x419742: 0x19b7,
          _0x49c2ed: 0xdcb,
          _0x1aebea: 0xc95,
          _0x4eb874: 0x1f30,
          _0x44af15: 0x1d66,
          _0x5c3614: 0x186b,
          _0x4e5a8: 0x1f30,
          _0x357447: 0x1f30,
          _0x1c529d: 0x1c6,
          _0x5db54d: 0x1820,
          _0x337c02: 0x16c5,
          _0x1f258f: 0x1291,
          _0x1087b1: 0x235b,
          _0x5cd002: 0x16c5,
          _0x1c9247: 0x4ce,
          _0xc1047b: 0x1cd3,
          _0x3f93d0: 0x1d7e,
          _0x387260: 0x1ab1,
          _0x43c478: 0xcfc,
          _0x1d9528: 0x568,
          _0x24b5db: 0x3c5,
          _0x48c5c2: 0x1cd3,
          _0x6845e: 0xc87,
          _0x51c779: 0x160,
          _0x49f1c6: 0x21cd,
          _0x4f870c: 0x1bb3,
          _0x5101ce: 0x225a,
          _0x5a3bd9: 0x50d,
          _0x56f3a4: 0x1cd3,
          _0x588716: 0x114e,
          _0x12d0ab: 0x23bc,
          _0x3982f0: 0x1425,
          _0x1dd3d2: 0x1291,
          _0x1a136e: 0x1820,
          _0x23c3c1: 0x3e4,
          _0x182ee8: 0xb0c,
          _0x5f4d72: 0x80b,
          _0x4cf55d: 0xc0e,
          _0x20c3a4: 0xfea,
          _0x1a1a45: 0x1d14,
          _0x5486b5: 0x2315,
          _0x1ddaff: 0x1346,
          _0x13eb62: 0x1a3e,
          _0x28fe9d: 0x41d,
          _0x30dbd9: 0x257,
          _0x1acaa5: 0x10a2,
          _0x395a28: 0x74d,
          _0x499fe4: 0xc7b,
          _0xed65ec: 0x421,
          _0x1cfede: 0x421,
          _0x18dbd2: 0x1774,
          _0x4a3fdb: 0x1c3,
          _0x992a3c: 0x535,
          _0x1992ea: 0x535,
          _0x389762: 0x535,
          _0x36bd4a: 0x421,
          _0x27bce7: 0x851,
          _0x50c1d9: 0x535,
          _0x44cfdb: 0x535,
          _0x1fe0ba: 0xc7b,
          _0x81aeec: 0xfeb,
          _0x247e8e: 0x421,
          _0x29b8d8: 0x30d,
          _0x571765: 0x535,
          _0x4fd334: 0xbc0,
          _0x4f35b0: 0x1ca8,
          _0x26e2b2: 0x1241,
          _0x32a975: 0x1cd3,
          _0x5aa346: 0x100d,
          _0x2fc45a: 0x1cd3,
          _0x1feb72: 0x535,
          _0x136ac9: 0xbc0,
          _0x1e989b: 0x1a3e,
          _0x1d3daa: 0x2119,
          _0x44b6fb: 0x1241,
          _0xa35758: 0x252,
          _0x445f62: 0xcd7,
          _0x5c41e6: 0xbc0,
          _0x199643: 0x1cd3,
          _0x8575da: 0x1ca8,
          _0x359eb5: 0x1bd4,
          _0x146a86: 0x13f9,
          _0x6f5595: 0x2119,
          _0x43badf: 0x205,
          _0x3e4621: 0x1fa,
          _0x14dc71: 0x535,
          _0x2f2428: 0x1a3e,
          _0x3508de: 0x2315,
          _0x2f618d: 0x1241,
          _0x2e4d26: 0x1cd3,
          _0x5f5850: 0xc8c,
          _0x1c2dc0: 0x17c1,
          _0x3eb781: 0x17d8,
          _0x5db3c6: 0x16f,
          _0x49afcb: 0x23ba,
          _0x5c580c: 0xd9d,
          _0x2d9b38: 0x235b,
          _0x566a06: 0x16c5,
          _0x4821e2: 0x500,
          _0x59ea62: 0x1cd3,
          _0x5a3dc0: 0x1fc9,
          _0xc7b282: 0x1e1e,
          _0x450a14: 0xa40,
          _0x4e277b: 0x235b,
          _0x1ab5b0: 0x623,
          _0x4fa6c0: 0x1ec5,
          _0x109e7b: 0x1697,
          _0x977712: 0x2598,
          _0x296d23: 0x1cd3,
          _0x2eeeb9: 0x1697,
          _0x191cd0: 0x1407,
          _0x5bce95: 0x1291,
          _0x2ecf62: 0x16c5,
          _0x518d0f: 0x1d2b,
          _0xc5c0ce: 0x1cd3,
          _0x482723: 0x158e,
          _0xdd0d6e: 0x1c34,
          _0x213fa9: 0x1cd3,
          _0x57a1ac: 0x1ce4,
          _0x20f33a: 0x1820,
          _0x200b69: 0x535,
          _0x444280: 0xbc0,
          _0x3d1a05: 0x1881,
          _0x4079a3: 0x1c4c,
          _0x406fb4: 0x2674,
          _0x313e6d: 0x235b,
          _0x3235cf: 0x2315,
          _0x5f293e: 0x1241,
          _0x287e7c: 0x1241,
          _0xacb760: 0xd5c,
          _0x18068: 0x535,
          _0xae4dfa: 0x1928,
          _0x218f42: 0x1034,
          _0x668dec: 0x226,
          _0x5a8ce8: 0xc74,
          _0x4573bd: 0xdcf,
          _0x4e6461: 0x23d0,
          _0x4f93ac: 0x40b,
          _0x3a0cf5: 0x421,
          _0xfec9df: 0x107f,
          _0x44ad7e: 0x421,
          _0x437dc8: 0x2027,
          _0x38fe32: 0x1241,
          _0x16cc7a: 0x16ab,
          _0x5e8f74: 0x421,
          _0x19dd81: 0x421,
          _0x3406b3: 0x40b,
          _0x2125e2: 0x204d,
          _0x205825: 0x421,
          _0x55dfe8: 0x4e4,
          _0x209801: 0x1a3e,
          _0x99c061: 0xb74,
          _0x590374: 0x1552,
          _0x100c46: 0x13c7,
          _0xef1060: 0x1892,
          _0x2d4bc5: 0x1cd3,
          _0x1d3e83: 0x12fd,
          _0x171548: 0xc95,
          _0x301ac5: 0xbcf,
          _0x433cbe: 0x16b9,
          _0x11966d: 0x1c61,
          _0x3ed481: 0x1b94,
          _0xb9398f: 0x363,
          _0x353c7a: 0x3bd,
          _0x360b6b: 0x26b,
          _0x110cd1: 0x1cd3,
          _0x23a382: 0x24b9,
          _0x44ed7a: 0x2027,
          _0x354ca0: 0x1cd3,
          _0x2be0f7: 0x1cd3,
          _0x1a631c: 0x2441,
          _0x253144: 0x57c,
          _0x8ff229: 0x120f,
          _0x291305: 0x204d,
          _0x261702: 0x1cd3,
          _0x21c896: 0x1565,
          _0x56e850: 0x23a1,
          _0x42c217: 0x535,
          _0xda24f2: 0x421,
          _0x386644: 0x3e4,
          _0x39faf1: 0x2315,
          _0x3f5794: 0x95a,
          _0x2947c0: 0x2213,
          _0x45d164: 0x1c3,
          _0x522fd2: 0x535,
          _0x5975d9: 0x421,
          _0x512ed0: 0x535,
          _0x3a7282: 0x1cd3,
          _0x543d57: 0x1c4c,
          _0x49c836: 0x187b,
          _0xa7c5ce: 0x1291,
          _0x47e487: 0xc95,
          _0x24e5a3: 0xc95,
          _0x23678c: 0x24e7,
          _0x56caa9: 0xc95,
          _0x1ea483: 0xc95,
          _0xdafcb: 0x1c34,
          _0x44d459: 0xc95,
          _0x1bddfb: 0x1cd3,
          _0x2fe7da: 0x1546,
          _0x3a505b: 0x535,
          _0x13f13b: 0x1c3,
          _0x1ef383: 0x421,
          _0x3ffc16: 0x1cd3,
          _0x6b9b35: 0x1fb4,
          _0xe3c05b: 0x535,
          _0x18af95: 0x1ecf,
          _0x1f4978: 0x6da,
          _0x2da702: 0x1cd3,
          _0x352971: 0x1110,
          _0x51450d: 0x11d0,
          _0x4dade7: 0x13d5,
          _0x1a930a: 0x234b,
          _0x24ce77: 0x1c4c,
          _0x5ebd24: 0x1820,
          _0xecd28a: 0x535,
          _0x5600b0: 0x623,
          _0x4b2aa1: 0xf37,
          _0xf508e4: 0x1b94,
          _0x8f5252: 0x235b,
          _0x40f2da: 0x1cd3,
          _0x1daf91: 0x1075,
          _0x5733a8: 0x1cd3,
          _0x7b5845: 0x535,
          _0x5784a0: 0x1cd3,
          _0x86caca: 0x1ce2,
          _0x119f1b: 0xd8c,
          _0xc035ed: 0x227f,
          _0x2239e3: 0x325,
          _0x50a9f8: 0x535,
          _0x832ab7: 0xa66,
          _0x29e3f1: 0x47c,
          _0x26669c: 0xa66,
          _0x521da6: 0x1cd3,
          _0x5587df: 0xf62,
          _0x4ac11b: 0x6f7,
          _0x44f247: 0x18c1,
          _0xf7334b: 0x1580,
          _0x13e04a: 0x7d4
        },
              a0_0x10998e = {
          _0x366829: 0x174a,
          _0x466df1: 0x174a,
          _0x3baacf: 0x2135
        },
              a0_0x51af9b = {
          _0x10801b: 0x1a5f,
          _0x4e2ef1: 0x2488,
          _0x2fb683: 0x563,
          _0x3fbcdd: 0x535,
          _0x40783c: 0x535,
          _0x56a572: 0x1904,
          _0x510937: 0x19e6,
          _0x1d0995: 0x11dc,
          _0x4f3380: 0xe1b,
          _0x18bc07: 0x4b9,
          _0x287756: 0x17d8,
          _0x12dd1e: 0xc95,
          _0x4af89b: 0x183,
          _0x2b0fac: 0x628,
          _0x2fd463: 0x628,
          _0x4e8f82: 0xc95,
          _0x3e921b: 0x1fc7,
          _0x52ea6a: 0x11dc,
          _0x1416e2: 0x146f,
          _0x18f8e7: 0x16ca,
          _0x2151e8: 0xf8c,
          _0x30c593: 0x1a3,
          _0x4607ab: 0x1b61,
          _0x4e5c3e: 0xf8c,
          _0x489a33: 0x2198,
          _0x4a7a43: 0xf8c,
          _0x24e131: 0x145f,
          _0x339577: 0x19c0,
          _0x23c99b: 0x2001,
          _0x4f6e7c: 0x19e6,
          _0x31a3b6: 0x1a3,
          _0x2a3d8e: 0x19e6,
          _0xeb5496: 0x2488,
          _0x28a78a: 0x1a3
        };
        _0x3d1267.r(_0x4897bf), _0x3d1267.d(_0x4897bf, {
          'default': () => _0x355089
        });

        var _0x1ec652 = _0x3d1267(0x16a21),
            _0x386d3c = _0x3d1267(0x16a7d),
            _0x9c19c5 = _0x3d1267(0x12a76),
            _0x4599d2 = _0x3d1267(0x3064),
            _0x322310 = _0x3d1267(0x165f2),
            _0x5d98aa = _0x3d1267(0x21f0),
            _0x210006 = _0x3d1267(0x12679),
            _0x2717d0 = _0x3d1267(0x161cd);

        const _0x663ca4 = _0x2717d0.players.local;

        let _0x1b1d5c;

        const _0x33c403 = {
          'disabledIteraction': false
        };
        _0x2717d0.events.add('time.every05Sec', () => {
          if (!_0x1ec652.api.isAuthed()) return;
          if (_0x3d1267.g.buttonPress) return;
          if (_0x663ca4.vehicle && _0x1b1d5c) return _0x9c19c5.globalBrowser.emit('interaction_updateCrosshair', {
            'value': false
          });

          let _0x313571 = _0x1ec652.api.getLookingAtEntity();

          if (_0x313571 || (_0x313571 = _0x1ec652.api.getNearestLookingObject(true)), _0x313571 && _0x313571 !== _0x1b1d5c && (_0x1b1d5c = _0x313571, _0x313571 && _0x313571.type && ['vehicle', 'object', 'player', 'ped'].includes(_0x313571.type))) {
            if (!_0x663ca4.hasClearLosTo(_0x313571.handle, 0x11)) return;
            if ('vehicle' === _0x313571.type && !_0x1ec652.api.vehicleAccess(_0x313571)) return;
            if ('ped' === _0x313571.type && !_0x313571.getVariable('dynPed.logicData')) return;
            if ('player' === _0x313571.type && !_0x313571.getVariable('id')) return;
            if ('player' === _0x313571.type && _0x313571.getVariable('isSpectating')) return;
            if (_0x3d1267.g.currentInterface) return;
            'object' === _0x313571.type && _0x313571.getVariable('itemSqlId') ? _0x313571.fetchingData || _0x313571.item ? _0x313571.item && _0x9c19c5.globalBrowser.emit('interaction_updateCrosshair', {
              'value': true,
              'type': _0x313571.type,
              'item': {
                'description': _0x313571.item.description,
                'condition': _0x313571.item.condition,
                'count': _0x313571.item.count,
                'caliber': _0x313571.item.caliber,
                'itemId': _0x313571.item.itemId,
                'title': _0x313571.item.title,
                'test': 0x1
              }
            }) : (_0x313571.fetchingData = true, _0x2717d0.events.callRemote('213137320', _0x313571.remoteId)) : 'vehicle' !== _0x313571.type && 'player' !== _0x313571.type && 'object' !== _0x313571.type || _0x9c19c5.globalBrowser.emit('interaction_updateCrosshair', {
              'value': true,
              'type': _0x313571.type
            });
          }

          !_0x313571 && _0x1b1d5c && (_0x9c19c5.globalBrowser.emit('interaction_updateCrosshair', {
            'value': false
          }), _0x1b1d5c = null);
        }), _0x2717d0.events.add('inventoryApi.getObjectItemInfoResult', (_0x18c934, _0x4dac7b, _0x2d0673, _0x4937fe, _0x22f692, _0x68a429, _0x276570, _0x733d64, _0x4385cb) => {
          if (_0x18c934) {
            const _0x2e11f9 = _0x2717d0.objects.atRemoteId(_0x18c934);

            if (_0x2e11f9) {
              const _0x326e19 = _0x2717d0.inventory.getItemConfig(_0x4dac7b);

              _0x2e11f9.fetchingData = false, _0x2e11f9.item = {
                'itemId': _0x4dac7b,
                'condition': _0x2d0673,
                'count': _0x4937fe,
                'component': _0x22f692,
                'drawable': _0x68a429,
                'texture': _0x276570,
                'isProp': _0x733d64,
                'gender': _0x4385cb,
                'caliber': _0x326e19.caliber,
                'limit': _0x326e19.limit
              }, _0x2e11f9.item.description = _0x2717d0.inventory.getItemDescription({
                'itemId': _0x4dac7b,
                'gender': _0x4385cb,
                'drawable': _0x68a429,
                'texture': _0x276570
              }), _0x2e11f9.item.title = _0x326e19.title, _0x2717d0.inventory.isItemClothes(_0x2e11f9.item) && (_0x2e11f9.item.title = _0x326e19.description), _0x9c19c5.globalBrowser.emit('interaction_updateCrosshair', {
                'value': true,
                'type': _0x2e11f9.type,
                'item': {
                  'itemId': _0x4dac7b,
                  'title': _0x2e11f9.item.title,
                  'description': _0x2e11f9.item.description,
                  'condition': _0x2d0673,
                  'count': _0x4937fe,
                  'caliber': _0x326e19.caliber,
                  'limit': _0x326e19.limit,
                  'test': 0x2
                }
              });
            }
          }
        });

        const _0x4b9fbc = () => {
          _0x2717d0.game.graphics.transitionFromBlurred(0x32), _0x3d1267.g.interfaces.interaction && _0x9c19c5.globalBrowser.toggle('interaction', {
            'value': false
          }), _0x1ec652.api.toggleChat(true);
        };

        let _0x57f48c,
            _0x262c39 = 0x0;

        _0x2717d0.keys.bind(_0x386d3c.t.G, false, () => {
          try {
            if (_0x1ec652.api.ePress(_0x262c39, 0xfa) || _0x3d1267.g.interfaces.chat || _0x3d1267.g.piano || _0x3d1267.g.playableInstrument || _0x2717d0.players.local.getVariable('fun.minigames.playing') || _0x3d1267.g.currentInterface && 'interaction' !== _0x3d1267.g.currentInterface || !_0x1ec652.api.isAuthed() || _0x663ca4.isDead() || _0x3d1267.g.buttonPress || _0x1ec652.api.isCuffed(_0x663ca4) || _0x663ca4.getVariable('fun.minigames.playing') || _0x1ec652.api.isTied(_0x663ca4) || _0x1ec652.api.isTiedHands(_0x663ca4) || _0x33c403.disabledIteraction || _0x210006.isPlayerPushing) return;
            if (_0x262c39 = _0x1ec652.api.ePressUpdate(0xfa), _0x3d1267.g.interfaces.interaction) return _0x1ec652.api.playSound('popout', {
              'volume': 0x23
            }), void _0x4b9fbc();

            let _0x3d756d = _0x1ec652.api.getLookingAtEntity();

            if (_0x3d756d || (_0x3d756d = _0x1ec652.api.getNearestLookingObject(true)), _0x663ca4.vehicle && _0x3d756d && ('vehicle' === _0x3d756d.type || 'player' === _0x3d756d.type)) return;
            if (_0x3d756d && !_0x663ca4.vehicle && !_0x663ca4.hasClearLosTo(_0x3d756d.handle, 0x11)) return;
            if (_0x9c19c5.globalBrowser.emit('interaction_updateCrosshair', {
              'value': false
            }), _0x3d756d && _0x3d756d.handle === _0x2717d0.players.local.handle) return;
            if (_0x3d756d && 'player' === _0x3d756d.type && _0x3d756d.getVariable('disableinteraction')) return;

            if (_0x57f48c = new _0x5a4c03(), _0x3d756d) {
              switch (_0x3d756d.type) {
                case 'vehicle':
                  {
                    if ([_0x2717d0.game.joaat('trailers'), _0x2717d0.game.joaat('trailers2'), _0x2717d0.game.joaat('tanker'), _0x2717d0.game.joaat('tanker2'), _0x2717d0.game.joaat('docktrailer'), _0x2717d0.game.joaat('armytrailer')].includes(_0x3d756d.getModel())) return _0x4b9fbc();
                    if (_0x3d756d.hasVariable('isDrone')) return _0x4b9fbc();

                    let _0x44e34d = _0x1ec652.api.vehicleAccess(_0x3d756d);

                    const _0x44a266 = _0x1ec652.api.getEntitySync(_0x3d756d, 'hackedSupplyTrunk', 'number');

                    if (!_0x1ec652.api.isUsingSystemAnim() && _0x663ca4.activeItemId && ((_0x2717d0.inventory.isBox(_0x663ca4.activeItemId) || _0x2717d0.inventory.isMaterials(_0x663ca4.activeItemId)) && (_0x2717d0.game.vehicle.isThisModelABoat(_0x3d756d.getModel()) || _0x3d756d.getVariable('isCarriage')) || !_0x2717d0.inventory.isBox(_0x663ca4.activeItemId) && !_0x2717d0.inventory.isMaterials(_0x663ca4.activeItemId) && _0x1ec652.api.getLocalVariable('handItem')) && (_0x44e34d || _0x1ec652.api.isTrunkOpened(_0x3d756d) && !_0x1ec652.api.getEntitySync(_0x3d756d, 'locked', 'boolean') || _0x44a266 && Date.now() < _0x44a266) && _0x57f48c.addElement({
                      'id': 'putFromHandToTrunk',
                      'title': 'interaction.putFromHandToTrunk',
                      'image': '������'
                    }), _0x44e34d) {
                      const _0x56414a = _0x3d756d.model;
                      _0x57f48c.addElement({
                        'id': 'lockDoors',
                        'title': 'interaction.lockDoors',
                        'image': '������'
                      }), _0x2717d0.game.vehicle.isThisModelABicycle(_0x56414a) || _0x2717d0.game.vehicle.isThisModelABike(_0x56414a) || (_0x57f48c.addElement({
                        'id': 'hood',
                        'title': 'interaction.hood',
                        'image': '������'
                      }), _0x57f48c.addElement({
                        'id': 'trunk',
                        'title': 'interaction.trunk',
                        'image': '������'
                      }), _0x57f48c.addElement({
                        'id': 'doors',
                        'title': 'interaction.doors',
                        'image': '������'
                      }));
                    }

                    _0x1ec652.api.vehicleIsMyRent(_0x3d756d) && _0x57f48c.addElement({
                      'id': 'cancelRent',
                      'title': 'interaction.cancelRent',
                      'image': '❌'
                    }), _0x1ec652.api.isTrunkOpened(_0x3d756d) && _0x57f48c.addElement({
                      'id': 'trunkItems',
                      'title': 'interaction.trunkItems',
                      'image': '������'
                    }), _0x1ec652.api.isDoorOpened(_0x3d756d, 0x5) && (_0x57f48c.addElement({
                      'id': 'getInTrunk',
                      'title': 'interaction.getInTrunk',
                      'image': '������'
                    }), _0x1ec652.api.isTrunkOccupied(_0x3d756d) && _0x57f48c.addElement({
                      'id': 'throwFromTrunk',
                      'title': 'interaction.throwFromTrunk',
                      'image': '������'
                    })), 0x4d === _0x663ca4.activeItemId && _0x57f48c.addElement({
                      'id': 'jerrycan',
                      'title': 'interaction.jerrycan',
                      'image': '⛽'
                    }), _0x1ec652.api.isFractionMember(_0x663ca4) && !_0x3d756d.getVariable('isCrime') && _0x57f48c.addElement({
                      'id': 'carFractions',
                      'title': 'interaction.carFractions',
                      'image': '������'
                    }), _0x663ca4.getVariable('family') && (_0x3d756d.getVariable('familyId') && _0x663ca4.getVariable('family') === _0x3d756d.getVariable('familyId') || _0x3d756d.getVariable('owner') === _0x663ca4.getVariable('id')) && _0x57f48c.addElement({
                      'id': 'carFamilies',
                      'title': 'interaction.carFamilies',
                      'image': '������'
                    }), _0x2717d0.inventory.hasItem(_0x663ca4, 0xa) && _0x57f48c.addElement({
                      'id': 'repairCar',
                      'title': 'interaction.repairCar',
                      'image': '������'
                    }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x3) && _0x57f48c.addElement({
                      'id': 'replaceBattery',
                      'title': 'interaction.replaceBattery',
                      'image': '������'
                    }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x1a) && _0x57f48c.addElement({
                      'id': 'repalceOil',
                      'title': 'interaction.repalceOil',
                      'image': '������'
                    }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x1b) && _0x57f48c.addElement({
                      'id': 'replaceLock',
                      'title': 'interaction.replaceLock',
                      'image': '������'
                    }), (0x0, _0x210006.canPushVehicle)(_0x3d756d) && _0x57f48c.addElement({
                      'id': 'pushCar',
                      'title': 'interaction.pushCar',
                      'image': '������'
                    });

                    const _0x3ce333 = _0x1ec652.api.getOccupants(_0x3d756d);

                    _0x3ce333 && _0x3ce333.find(_0x15ed4a => _0x2717d0.players.exists(_0x15ed4a.player) && (_0x1ec652.api.isTiedHands(_0x15ed4a.player) || _0x1ec652.api.isCuffed(_0x15ed4a.player) || _0x1ec652.api.isTied(_0x15ed4a.player))) && _0x57f48c.addElement({
                      'id': 'pullPlayers',
                      'title': 'interaction.pullPlayer',
                      'image': '✋'
                    }), _0x3d756d.getVariable('isCrime') || (_0x44e34d && (_0x3d756d.getVariable('familyId') || _0x57f48c.addElement({
                      'id': 'vehDuplicateKey',
                      'title': 'interaction.vehDuplicateKey',
                      'image': '������️'
                    }), _0x57f48c.addElement({
                      'id': 'changeVehLock',
                      'title': 'interaction.changeVehLock',
                      'image': '������'
                    })), _0x57f48c.addElement({
                      'id': 'carIllegal',
                      'title': 'interaction.carIllegal',
                      'image': '������️'
                    }));
                    break;
                  }

                case 'player':
                  _0x1ec652.api.getEntitySync(_0x3d756d, 'isDead', 'boolean') || (_0x57f48c.addElement({
                    'id': 'showDocs',
                    'title': 'interaction.showDocs',
                    'image': '������'
                  }), _0x57f48c.addElement({
                    'id': 'giveMoney',
                    'title': 'interaction.giveMoney',
                    'image': '������'
                  }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x141) && _0x57f48c.addElement({
                    'id': 'showMedLic',
                    'title': 'interaction.showMedLic',
                    'image': '������️'
                  }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x238) && _0x57f48c.addElement({
                    'id': 'showArmyLic',
                    'title': 'interaction.showArmyLic',
                    'image': '������'
                  }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x11b) && _0x57f48c.addElement({
                    'id': 'showLic',
                    'title': 'interaction.showLic',
                    'image': '������'
                  }), _0x1ec652.api.isCuffed(_0x3d756d) || _0x1ec652.api.isTied(_0x3d756d) || _0x1ec652.api.isTiedHands(_0x3d756d) || _0x1ec652.api.isBag(_0x3d756d) || _0x1ec652.api.isGag(_0x3d756d) || (_0x57f48c.addElement({
                    'id': 'greet',
                    'title': 'interaction.greet',
                    'image': '������'
                  }), _0x57f48c.addElement({
                    'id': 'emotional',
                    'title': 'interaction.emotional',
                    'image': '������'
                  }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x139) && _0x57f48c.addElement({
                    'id': 'requestThrowDice',
                    'title': 'interaction.requestThrowDice',
                    'image': '������'
                  }), (_0x663ca4.houseId || _0x663ca4.apartmentId) && _0x57f48c.addElement({
                    'id': 'giveKey',
                    'title': 'interaction.giveKey',
                    'image': '������'
                  }), _0x57f48c.addElement({
                    'id': 'trade',
                    'title': 'interaction.trade',
                    'image': '������'
                  }), _0x663ca4.houseId && _0x57f48c.addElement({
                    'id': 'moveInHouse',
                    'title': 'interaction.moveInHouse',
                    'image': '������'
                  }), _0x663ca4.apartmentId && _0x57f48c.addElement({
                    'id': 'moveInApartment',
                    'title': 'interaction.moveInApartment',
                    'image': '������'
                  }))), _0x57f48c.addElement({
                    'id': 'carrying',
                    'title': 'interaction.carrying',
                    'image': '������'
                  }), _0x1ec652.api.getEntitySync(_0x3d756d, 'isDead', 'boolean') && (_0x2717d0.inventory.hasItem(_0x663ca4, 0xfc) || _0x2717d0.inventory.hasItem(_0x663ca4, 0x23b)) && _0x57f48c.addElement({
                    'id': 'rescue',
                    'title': 'interaction.rescue',
                    'image': '������'
                  }), _0x57f48c.addElement({
                    'id': 'illegal',
                    'title': 'interaction.illegal',
                    'image': '������️'
                  }), _0x1ec652.api.isFractionMember(_0x663ca4) && _0x57f48c.addElement({
                    'id': 'fractions',
                    'title': 'interaction.fractions',
                    'image': '������'
                  }), _0x1ec652.api.isFamilyMember(_0x663ca4) && _0x57f48c.addElement({
                    'id': 'families',
                    'title': 'interaction.families',
                    'image': '������'
                  }), (_0x1ec652.api.isCuffed(_0x3d756d) || _0x1ec652.api.isTiedHands(_0x3d756d)) && _0x57f48c.addElement({
                    'id': 'search',
                    'title': 'interaction.search',
                    'image': '������'
                  });
                  break;

                case 'object':
                  _0x3d756d.hasVariable('boombox.OwnerId') ? (_0x57f48c.addElement({
                    'id': 'nextRadio',
                    'title': 'interaction.nextRadio',
                    'image': '������'
                  }), (_0x3d756d.getVariable('boombox.OwnerId') === _0x663ca4.getVariable('id') || _0x1ec652.api.getAdmin(_0x663ca4) > 0x1) && _0x57f48c.addElement({
                    'id': 'takeBoombox',
                    'title': 'interaction.takeBoombox',
                    'image': '������'
                  })) : _0x3d756d.hasVariable('hookah.OwnerId') ? (_0x57f48c.addElement({
                    'id': 'smokeHookah',
                    'title': 'interaction.smokeHookah',
                    'image': '������'
                  }), (_0x3d756d.getVariable('hookah.OwnerId') === _0x663ca4.getVariable('id') || _0x1ec652.api.getAdmin(_0x663ca4) > 0x1) && _0x57f48c.addElement({
                    'id': 'takeHookah',
                    'title': 'interaction.takeHookah',
                    'image': '������'
                  })) : _0x3d756d.hasVariable('bbq.OwnerId') ? (_0x57f48c.addElement({
                    'id': 'bbqCook',
                    'title': 'interaction.bbqCook',
                    'image': '������'
                  }), (_0x3d756d.getVariable('bbq.OwnerId') === _0x663ca4.getVariable('id') || _0x1ec652.api.getAdmin(_0x663ca4) > 0x1) && _0x57f48c.addElement({
                    'id': 'takeBBQ',
                    'title': 'interaction.takeBBQ',
                    'image': '������'
                  })) : _0x3d756d.hasVariable('tent.OwnerId') ? (_0x3d756d.getVariable('tent.OwnerId') === _0x663ca4.getVariable('id') || _0x1ec652.api.getAdmin(_0x663ca4) > 0x1) && _0x57f48c.addElement({
                    'id': 'takeTent',
                    'title': 'interaction.takeTent',
                    'image': '������'
                  }) : _0x3d756d.hasVariable('snowmanBuilt') && _0x3d756d.getVariable('snowmanBuilt') && _0x57f48c.addElement({
                    'id': 'breakSnowman',
                    'title': 'interaction.breakSnowman',
                    'image': '������'
                  });
                  break;

                case 'ped':
                  if (_0x3d756d.hasVariable('dynPed.logicData')) {
                    const _0x4110ef = _0x3d756d.getVariable('dynPed.logicData');

                    0x0 === _0x3d756d.getHealth() && _0x3d756d.hasVariable('dynPed.wildAnimal.canLoot') && _0x57f48c.addElement({
                      'id': 'butchAnimal',
                      'title': 'interaction.butchAnimal',
                      'image': '������'
                    }), 0x0 !== _0x3d756d.getHealth() && _0x4110ef?.['canPet'] && _0x57f48c.addElement({
                      'id': 'petAnimal',
                      'title': 'interaction.petAnimal',
                      'image': '������'
                    });
                  }

              }

              _0x57f48c.id = _0x3d756d.remoteId, _0x57f48c.type = _0x3d756d.type;
            } else {
              if (_0x663ca4.vehicle) {
                const _0x3ac291 = _0x663ca4.vehicle.model;
                if (_0x663ca4.vehicle.hasVariable('isDrone')) return _0x4b9fbc();
                if (!_0x1ec652.api.vehicleAccess(_0x663ca4.vehicle) || _0x663ca4.vehicle.getPedInSeat(_0x1ec652.api.getVehSeat(-0x1)) != _0x2717d0.players.local.handle && _0x663ca4.vehicle.getPedInSeat(_0x1ec652.api.getVehSeat(0x0)) != _0x2717d0.players.local.handle || [0x1, 0x2, 0x3, 0x4, 0x5, 0x7].includes(_0x663ca4.vehicle.getVariable('fraction')) && _0x57f48c.addElement({
                  'id': 'megaphone',
                  'title': 'interaction.megaphone',
                  'image': '������'
                }), _0x663ca4.vehicle.getPedInSeat(_0x1ec652.api.getVehSeat(-0x1)) == _0x2717d0.players.local.handle) _0x1ec652.api.vehicleAccess(_0x663ca4.vehicle) && (_0x57f48c.addElement({
                  'id': 'park',
                  'title': 'interaction.park',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'lockDoors',
                  'title': 'interaction.lockDoors',
                  'image': '������'
                })), _0x1ec652.api.vehicleIsMyOwn(_0x663ca4.vehicle) && _0x663ca4.insideCarMarket && _0x57f48c.addElement({
                  'id': 'carMarket',
                  'title': 'interaction.carMarket',
                  'image': '������'
                }), _0x2717d0.game.vehicle.isThisModelABicycle(_0x3ac291) || _0x2717d0.game.vehicle.isThisModelABike(_0x3ac291) ? !_0x2717d0.game.vehicle.isThisModelABicycle(_0x3ac291) && _0x2717d0.inventory.hasItem(_0x663ca4, 0x8) && _0x57f48c.addElement({
                  'id': 'hijackIgnition',
                  'title': 'interaction.hijackIgnition',
                  'image': '������'
                }) : (_0x57f48c.addElement({
                  'id': 'trunk',
                  'title': 'interaction.trunk',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'hood',
                  'title': 'interaction.hood',
                  'image': '������'
                }), _0x2717d0.game.vehicle.isThisModelACar(_0x3ac291) && _0x57f48c.addElement({
                  'id': 'glovebox',
                  'title': 'interaction.glovebox',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'seatbelt',
                  'title': 'interaction.seatbelt',
                  'image': '������'
                }), _0x2717d0.game.vehicle.isThisModelABicycle(_0x3ac291) || (_0x57f48c.addElement({
                  'id': 'ignition',
                  'title': 'interaction.ignition',
                  'image': '������'
                }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x8) && _0x57f48c.addElement({
                  'id': 'hijackIgnition',
                  'title': 'interaction.hijackIgnition',
                  'image': '������'
                })), _0x57f48c.addElement({
                  'id': 'eject',
                  'title': 'interaction.eject',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'doors',
                  'title': 'interaction.doors',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'backlight',
                  'title': 'interaction.backlight',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'windows',
                  'title': 'interaction.windows',
                  'image': '������'
                })), _0x2717d0.game.vehicle.isThisModelABicycle(_0x3ac291) || _0x57f48c.addElement({
                  'id': 'radio',
                  'title': 'interaction.radio',
                  'image': '������'
                }), 'electro' === _0x322310.D[_0x3ac291]?.['fuelType']?.['toLowerCase']() && _0x57f48c.addElement({
                  'id': 'autopilot',
                  'title': 'interaction.autopilot',
                  'image': '������️'
                });else _0x2717d0.game.vehicle.isThisModelABicycle(_0x3ac291) || _0x2717d0.game.vehicle.isThisModelABike(_0x3ac291) || _0x57f48c.addElement({
                  'id': 'seatbelt',
                  'title': 'interaction.seatbelt',
                  'image': '������'
                }), _0x2717d0.game.vehicle.isThisModelACar(_0x3ac291) && _0x663ca4.vehicle.getPedInSeat(_0x1ec652.api.getVehSeat(0x0)) == _0x2717d0.players.local.handle && _0x57f48c.addElement({
                  'id': 'glovebox',
                  'title': 'interaction.glovebox',
                  'image': '������'
                }), _0x2717d0.game.vehicle.isThisModelABicycle(_0x3ac291) || _0x663ca4.vehicle.getPedInSeat(_0x1ec652.api.getVehSeat(0x0)) != _0x2717d0.players.local.handle || _0x57f48c.addElement({
                  'id': 'radio',
                  'title': 'interaction.radio',
                  'image': '������'
                }), _0x663ca4.vehicle.getPedInSeat(_0x1ec652.api.getVehSeat(0x0)) == _0x2717d0.players.local.handle && _0x1ec652.api.vehicleAccess(_0x663ca4.vehicle) && _0x57f48c.addElement({
                  'id': 'eject',
                  'title': 'interaction.eject',
                  'image': '������'
                });
                _0x57f48c.id = _0x663ca4.vehicle.remoteId, _0x57f48c.type = _0x663ca4.vehicle.type;
              } else !(0x0, _0x4599d2.isWinter)() || _0x3d1267.g.npcColshape || _0x663ca4.activeItemId || _0x1ec652.api.isUsingSystemAnim() || _0x663ca4.isInAnyVehicle(true) || _0x2717d0.game.player.isFreeAiming() || _0x663ca4.isSwimming() || _0x663ca4.isDead() || _0x663ca4.isSwimmingUnderWater() || _0x663ca4.isFalling() || _0x663ca4.isRagdoll() || _0x663ca4.isRunning() || _0x663ca4.isSprinting() || 0x0 != _0x1ec652.api.getCurrentInterior() || _0x663ca4.isShooting() || _0x663ca4.isUsingAnyScenario() || _0x663ca4.isInCover(true) || _0x663ca4.isPlayingAnim('anim@mp_snowball', 'pickup_snowball', 0x3) || _0x1ec652.api.getLocalVariable('isConsumingItem') || _0x663ca4.isGettingUp() || _0x1ec652.api.isCuffed(_0x663ca4) || _0x1ec652.api.isTied(_0x663ca4) || _0x1ec652.api.isTiedHands(_0x663ca4) || null == !_0x663ca4.getVariable('playerInTrunk') || _0x663ca4.getVariable('isFollowing') || _0x663ca4.isBeingStunned(0x0) || _0x1ec652.api.getLocalVariable('clothesWearEffects') || _0x663ca4.getVariable('fun.minigames.playing') || !(_0x663ca4.position.z - _0x2717d0.game.gameplay.getGroundZFor3dCoord(_0x663ca4.position.x, _0x663ca4.position.y, _0x663ca4.position.z, 0x0, false) < 2.5) || (_0x2717d0.inventory.hasItem(_0x663ca4, 0x24f) || _0x57f48c.addElement({
                'id': 'getSnowball',
                'title': 'interaction.snowball',
                'image': '❄️'
              }), _0x57f48c.addElement({
                'id': 'createSnowman',
                'title': 'interaction.snowman',
                'image': '⛄'
              }));
            }

            if (0x0 == _0x57f48c.allList.length) return;
            _0x1ec652.api.playSound('popin', {
              'volume': 0x23
            }), _0x2717d0.game.graphics.transitionToBlurred(0x32), _0x57f48c.setList();
          } catch (_0x1cfc4e) {
            _0x1ec652.api.sendError(_0x1cfc4e);
          }
        }), _0x2717d0.events.add('interaction.select', (_0x4c95c0, _0xacd91c, _0x46b071) => {
          const a0_0x26132d = {
            _0x5a1842: 0x174a,
            _0x25b13d: 0x849,
            _0x1748f5: 0x12b1
          };
          if ('more' === (_0x4c95c0 = JSON.parse(_0x4c95c0)).id) return void _0x57f48c.setNextList();
          const _0x40c8e2 = _0x57f48c.parent;

          switch (_0x57f48c = new _0x5a4c03(_0xacd91c, _0x46b071, _0x40c8e2), _0x4c95c0.id) {
            case 'megaphone':
              {
                const _0x5a4d96 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x5a4d96)) return;
                [0x2].includes(_0x5a4d96.getVariable('fraction')) && _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'EMS 1',
                  'data': 'EMS_1'
                }), [0x7].includes(_0x5a4d96.getVariable('fraction')) && (_0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'FIB 1',
                  'data': 'FIB_1'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'FIB 2',
                  'data': 'FIB_2'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'FIB 3',
                  'data': 'FIB_3'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'FIB 4',
                  'data': 'FIB_4'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'FIB 5',
                  'data': 'ARMY_DELIVERY'
                })), [0x5].includes(_0x5a4d96.getVariable('fraction')) && (_0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'GOV 1',
                  'data': 'GOV_1'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'GOV 2',
                  'data': 'GOV_2'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'GOV 3',
                  'data': 'GOV_3'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'GOV 4',
                  'data': 'GOV_4'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'GOV 5',
                  'data': 'ARMY_DELIVERY'
                })), [0x1].includes(_0x5a4d96.getVariable('fraction')) && (_0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSPD 1',
                  'data': 'LSPD_1'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSPD 2',
                  'data': 'LSPD_2'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSPD 3',
                  'data': 'LSPD_3'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSPD 4',
                  'data': 'LSPD_4'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSPD 5',
                  'data': 'ARMY_DELIVERY'
                })), [0x4].includes(_0x5a4d96.getVariable('fraction')) && (_0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'SANG 1',
                  'data': 'SANG_1'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'SANG 2',
                  'data': 'SANG_2'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'SANG 3',
                  'data': 'SANG_3'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'SANG 4',
                  'data': 'SANG_4'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'SANG 5',
                  'data': 'ARMY_DELIVERY'
                })), [0x3].includes(_0x5a4d96.getVariable('fraction')) && (_0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSSD 1',
                  'data': 'LSSD_1'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSSD 2',
                  'data': 'LSSD_2'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSSD 3',
                  'data': 'LSSD_3'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSSD 4',
                  'data': 'LSSD_4'
                }), _0x57f48c.addElement({
                  'id': 'megaphonePlay',
                  'title': 'LSSD 5',
                  'data': 'ARMY_DELIVERY'
                })), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'doors':
              {
                const _0x2ddc0e = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x2ddc0e)) return;

                const _0x317e91 = _0x1ec652.api.getVehicleDoorsNumber(_0x2ddc0e);

                _0x317e91 > 0x0 && (_0x57f48c.addElement({
                  'id': 'toggleDoor',
                  'title': 'interaction.frontLeft',
                  'data': 0x0
                }), _0x57f48c.addElement({
                  'id': 'toggleDoor',
                  'title': 'interaction.frontRight',
                  'data': 0x1
                }), _0x317e91 > 0x2 && (_0x57f48c.addElement({
                  'id': 'toggleDoor',
                  'title': 'interaction.backLeft',
                  'data': 0x2
                }), _0x57f48c.addElement({
                  'id': 'toggleDoor',
                  'title': 'interaction.backRight',
                  'data': 0x3
                }))), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'windows':
              {
                const _0x248182 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x248182)) return;

                const _0x91b63c = _0x1ec652.api.getVehicleDoorsNumber(_0x248182);

                _0x91b63c > 0x0 && (_0x57f48c.addElement({
                  'id': 'toggleWindow',
                  'title': 'interaction.frontLeft',
                  'data': 0x0
                }), _0x57f48c.addElement({
                  'id': 'toggleWindow',
                  'title': 'interaction.frontRight',
                  'data': 0x1
                }), _0x91b63c > 0x2 && (_0x57f48c.addElement({
                  'id': 'toggleWindow',
                  'title': 'interaction.backLeft',
                  'data': 0x2
                }), _0x57f48c.addElement({
                  'id': 'toggleWindow',
                  'title': 'interaction.backRight',
                  'data': 0x3
                }))), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'pullPlayers':
              {
                const _0x5b492d = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x5b492d)) return;
                if (_0x1ec652.api.getOccupants(_0x5b492d).forEach(_0x468787 => {
                  -0x1 == _0x468787.seat || _0x468787.seat > 0x4 || _0x57f48c.addElement({
                    'id': 'pullPlayer',
                    'title': 'interaction.pullPlayer',
                    'args': {
                      'i': _0x468787.seat + 0x2
                    },
                    'data': _0x468787.seat
                  });
                }), 0x0 === _0x57f48c.allList.length) return _0x4b9fbc();
                _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'radio':
              {
                const _0x3d71f4 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x3d71f4)) return;
                if (_0x1ec652.api.getVehicleRadio(_0x3d71f4) && _0x57f48c.addElement({
                  'id': 'disableCarRadio',
                  'title': 'interaction.disableCarRadio'
                }), _0x57f48c.addElement({
                  'id': 'setCarRadio',
                  'title': 'interaction.radioList.sunBloom',
                  'data': 0x1
                }), _0x57f48c.addElement({
                  'id': 'setCarRadio',
                  'title': 'interaction.radioList.radiodanz',
                  'data': 0x2
                }), _0x57f48c.addElement({
                  'id': 'setCarRadio',
                  'title': 'interaction.radioList.jazz',
                  'data': 0x3
                }), _0x57f48c.addElement({
                  'id': 'setCarRadio',
                  'title': 'interaction.radioList.anime',
                  'data': 0x4
                }), _0x57f48c.addElement({
                  'id': 'setCarRadio',
                  'title': 'interaction.radioList.road',
                  'data': 0x5
                }), _0x57f48c.addElement({
                  'id': 'setCarRadio',
                  'title': 'interaction.radioList.hipHop',
                  'data': 0x6
                }), 0x0 === _0x57f48c.allList.length) return _0x4b9fbc();
                _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'autopilot':
              if (!_0x663ca4.vehicle) return;
              return 'electro' == _0x322310.D[_0x663ca4.vehicle.model]?.['fuelType']?.['toLowerCase']() && _0x5d98aa.autopilotController.enable(), _0x4b9fbc();

            case 'carMarket':
              {
                const _0x515d9a = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x515d9a)) return;
                _0x663ca4.insideCarMarket && _0x1ec652.api.vehicleIsMyOwn(_0x515d9a) && !_0x515d9a.getVariable('carMarket') && _0x57f48c.addElement({
                  'id': 'setVehOnSale',
                  'title': 'interaction.setVehOnSale',
                  'image': '������'
                }), _0x663ca4.insideCarMarket && _0x515d9a.getVariable('carMarket') && _0x1ec652.api.vehicleIsMyOwn(_0x515d9a) && _0x57f48c.addElement({
                  'id': 'cancelVehSale',
                  'title': 'interaction.cancelVehSale',
                  'image': '������'
                });
                break;
              }

            case 'eject':
              {
                const _0x16027f = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x16027f)) return;

                const _0x5ea06c = _0x1ec652.api.getOccupants(_0x16027f),
                      _0x1ca1e6 = _0x663ca4.vehicle.getPedInSeat(_0x1ec652.api.getVehSeat(-0x1)) == _0x2717d0.players.local.handle;

                if (_0x5ea06c.forEach(_0xd919d3 => {
                  _0x1ca1e6 && (-0x1 == _0xd919d3.seat || _0xd919d3.seat > 0x4) || (_0x1ca1e6 || -0x1 === _0xd919d3.seat) && _0x57f48c.addElement({
                    'id': 'ejectPlayer',
                    'title': 'interaction.ejectPlayer',
                    'args': {
                      'i': _0xd919d3.seat + 0x2
                    },
                    'data': _0xd919d3.seat
                  });
                }), 0x0 === _0x57f48c.allList.length) return _0x4b9fbc();
                _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'getInTrunk':
              {
                const _0x5460a3 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x5460a3)) return;

                if (_0x1ec652.api.getVehicleDoorsNumber(_0x5460a3) > 0x0) {
                  if (_0x4b9fbc(), _0x663ca4.getVehicleIsTryingToEnter() || _0x1ec652.api.getLocalVariable('handItem')) return;

                  let _0x2d53f0 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                  return void (_0x2d53f0 && null == _0x663ca4.getVariable('playerInTrunk') && !_0x663ca4.vehicle && _0x1ec652.api.vdist(_0x2d53f0.position.x, _0x2d53f0.position.y, _0x2d53f0.position.z, _0x663ca4.position.x, _0x663ca4.position.y, _0x663ca4.position.z) < 0xf && _0x1ec652.api.attachToTrunk(_0xacd91c));
                }

                break;
              }

            case 'createSnowman':
              if (_0x4b9fbc(), (0x0, _0x4599d2.isWinter)() && !_0x3d1267.g.npcColshape && !_0x663ca4.activeItemId && !_0x1ec652.api.isUsingSystemAnim() && !_0x663ca4.isInAnyVehicle(true) && !_0x2717d0.game.player.isFreeAiming() && !_0x663ca4.isSwimming() && !_0x663ca4.isDead() && !_0x663ca4.isSwimmingUnderWater() && !_0x663ca4.isFalling() && !_0x663ca4.isRagdoll() && !_0x663ca4.isRunning() && !_0x663ca4.isSprinting() && 0x0 == _0x1ec652.api.getCurrentInterior() && !_0x663ca4.isShooting() && !_0x663ca4.isUsingAnyScenario() && !_0x663ca4.isInCover(true) && !_0x663ca4.isPlayingAnim('anim@mp_snowball', 'pickup_snowball', 0x3) && !_0x1ec652.api.getLocalVariable('isConsumingItem') && !_0x663ca4.isGettingUp() && !_0x1ec652.api.isCuffed(_0x663ca4) && !_0x1ec652.api.isTied(_0x663ca4) && !_0x1ec652.api.isTiedHands(_0x663ca4) && null != !_0x663ca4.getVariable('playerInTrunk') && !_0x663ca4.getVariable('isFollowing') && !_0x663ca4.isBeingStunned(0x0) && !_0x1ec652.api.getLocalVariable('clothesWearEffects') && !_0x663ca4.getVariable('fun.minigames.playing') && _0x663ca4.position.z - _0x2717d0.game.gameplay.getGroundZFor3dCoord(_0x663ca4.position.x, _0x663ca4.position.y, _0x663ca4.position.z, 0x0, false) < 1.5) return void _0x2717d0.events.call('fun.seasonEvents.xmas.createSnowman');
              break;

            case 'pushCar':
              {
                const _0x50bb06 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x50bb06)) return;
                return _0x4b9fbc(), void ((0x0, _0x210006.canPushVehicle)(_0x50bb06) && (0x0, _0x210006.taskPushVehicle)(_0x50bb06));
              }

            case 'trade':
              {
                const _0x436f9b = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x436f9b)) return;
                _0x57f48c.addElement({
                  'id': 'itemsTrade',
                  'title': 'interaction.itemsTrade',
                  'image': '������'
                }), _0x663ca4.hasVehicles && (_0x57f48c.addElement({
                  'id': 'vehicleForRent',
                  'title': 'interaction.vehicleForRent',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'tradeVehicle',
                  'title': 'interaction.tradeVehicle',
                  'image': '������'
                })), _0x663ca4.houseId && _0x57f48c.addElement({
                  'id': 'tradeHouse',
                  'title': 'interaction.tradeHouse',
                  'image': '������'
                }), _0x663ca4.apartmentId && _0x57f48c.addElement({
                  'id': 'tradeApartment',
                  'title': 'interaction.tradeApartment',
                  'image': '������'
                }), _0x663ca4.biz && _0x57f48c.addElement({
                  'id': 'tradeBusiness',
                  'title': 'interaction.tradeBusiness',
                  'image': '������'
                }), _0x663ca4.atm && _0x57f48c.addElement({
                  'id': 'tradeAtm',
                  'title': 'interaction.tradeAtm',
                  'image': '������'
                }), _0x663ca4.billboard && _0x57f48c.addElement({
                  'id': 'tradeBillboard',
                  'title': 'interaction.tradeBillboard',
                  'image': '������️'
                }), (_0x663ca4.hasVehicles || _0x663ca4.houseId || _0x663ca4.apartmentId || _0x663ca4.biz || _0x663ca4.atm || _0x663ca4.billboard) && _0x57f48c.addElement({
                  'id': 'tradeProperty',
                  'title': 'interaction.tradeProperty',
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'giveKey':
              {
                const _0x3a3892 = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x3a3892)) return;
                _0x663ca4.houseId && _0x57f48c.addElement({
                  'id': 'houseWarehouseKey',
                  'title': 'interaction.houseWarehouseKey',
                  'image': '������'
                }), _0x663ca4.apartmentId && _0x57f48c.addElement({
                  'id': 'apartmentWarehouseKey',
                  'title': 'interaction.apartmentWarehouseKey',
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'carIllegal':
              {
                const _0x5c9dab = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x5c9dab)) return;
                _0x1ec652.api.getEntitySync(_0x5c9dab, 'hijacker', 'boolean') !== _0x1ec652.api.getPlayerStatic(_0x663ca4) || _0x1ec652.api.getEntitySync(_0x5c9dab, 'tempHijackOwner') || (_0x57f48c.addElement({
                  'id': 'hijackDoorLock',
                  'title': 'interaction.hijackDoorLock',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'breakWindow',
                  'title': 'interaction.breakWindow',
                  'image': '������'
                })), _0x2717d0.inventory.hasItem(_0x663ca4, 0x5c) && _0x57f48c.addElement({
                  'id': 'drillDoorLock',
                  'title': 'interaction.drillDoorLock',
                  'image': '������'
                });
                break;
              }

            case 'illegal':
              {
                const _0x2fe327 = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x2fe327)) return;
                _0x663ca4.getVariable('mask') && (_0x2fe327.isPlayingAnim('random@mugging3', 'handsup_standing_base', 0x3) || _0x1ec652.api.isCuffed(_0x2fe327) || _0x1ec652.api.isTied(_0x2fe327) || _0x1ec652.api.isTiedHands(_0x2fe327)) && (_0x57f48c.addElement({
                  'id': 'robPlayer',
                  'title': 'interaction.robPlayer',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'shaveHead',
                  'title': 'interaction.shaveHead',
                  'image': '������'
                })), (_0x1ec652.api.isGroupMemberOf(_0x663ca4, 'mafia') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'biker') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gang') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'police') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'fib') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gov') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'army')) && (_0x2717d0.inventory.hasItem(_0x663ca4, 0xe9) && !_0x1ec652.api.isTiedHands(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'tieHands',
                  'title': 'interaction.tieHands',
                  'image': '✊'
                }), _0x2717d0.inventory.hasItem(_0x663ca4, 0x13) && !_0x1ec652.api.isTied(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'tiePlayer',
                  'title': 'interaction.tiePlayer',
                  'image': '������'
                })), (_0x1ec652.api.isGroupMemberOf(_0x663ca4, 'mafia') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'biker') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gang')) && (_0x1ec652.api.isTiedHands(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'escortPlayer',
                  'title': 'interaction.escortPlayer',
                  'image': '������'
                }), (_0x1ec652.api.isTiedHands(_0x2fe327) || _0x1ec652.api.isTied(_0x2fe327)) && !_0x1ec652.api.isGag(_0x2fe327) && _0x2717d0.inventory.hasItem(_0x663ca4, 0x9) && _0x57f48c.addElement({
                  'id': 'gagPlayer',
                  'title': 'interaction.gagPlayer',
                  'image': '������'
                }), _0x1ec652.api.isTied(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'putInTrunk',
                  'title': 'interaction.putInTrunk',
                  'image': '������'
                }), (_0x1ec652.api.isTiedHands(_0x2fe327) || _0x1ec652.api.isTied(_0x2fe327) || _0x1ec652.api.isCuffed(_0x2fe327)) && !_0x1ec652.api.isBag(_0x2fe327) && _0x2717d0.inventory.hasItem(_0x663ca4, 0xfb) && _0x57f48c.addElement({
                  'id': 'bagPlayer',
                  'title': 'interaction.bagPlayer',
                  'image': '������'
                })), _0x1ec652.api.isTied(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'cutRope',
                  'title': 'interaction.cutRope',
                  'image': '✋'
                }), _0x1ec652.api.isTiedHands(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'cutScreeds',
                  'title': 'interaction.cutScreeds',
                  'image': '������'
                }), _0x1ec652.api.isGag(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'ungagPlayer',
                  'title': 'interaction.ungagPlayer',
                  'image': '������'
                }), _0x1ec652.api.isBag(_0x2fe327) && _0x57f48c.addElement({
                  'id': 'unbagPlayer',
                  'title': 'interaction.unbagPlayer',
                  'image': '������'
                }), _0x1ec652.api.isCuffed(_0x2fe327) && _0x2717d0.inventory.hasItem(_0x663ca4, 0x8) && _0x57f48c.addElement({
                  'id': 'uncuff',
                  'title': 'interaction.uncuff',
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'glovebox':
              {
                const _0x2f2ba2 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x2f2ba2)) return;
                _0x1ec652.api.vehicleAccess(_0x663ca4.vehicle) && _0x57f48c.addElement({
                  'id': 'gloveLock',
                  'title': 'interaction.gloveLock',
                  'image': '������'
                }), _0x1ec652.api.getEntitySync(_0x663ca4.vehicle, 'gloveUnlocked', 'boolean') && _0x57f48c.addElement({
                  'id': 'gloveItems',
                  'title': 'interaction.gloveItems',
                  'image': '������'
                });
                break;
              }

            case 'emotional':
              {
                const _0x39815e = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x39815e)) return;
                _0x57f48c.addElement({
                  'id': 'kiss',
                  'title': 'interaction.kiss',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'hug',
                  'title': 'interaction.hug',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'five',
                  'title': 'interaction.five',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'slap',
                  'title': 'interaction.slap',
                  'image': '✋'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'carrying':
              {
                const _0x2d8a9c = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x2d8a9c)) return;

                const _0x37b090 = _0x1ec652.api.getEntitySync(_0x2d8a9c, 'isDead', 'boolean');

                _0x57f48c.addElement({
                  'id': 'carryPlayer',
                  'title': 'interaction.carryPlayer',
                  'args': {
                    'id': 0x1
                  },
                  'data': 0x1,
                  'image': '������'
                }), _0x37b090 || _0x57f48c.addElement({
                  'id': 'carryPlayer',
                  'title': 'interaction.carryPlayer',
                  'args': {
                    'id': 0x2
                  },
                  'data': 0x2,
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'carryPlayer',
                  'title': 'interaction.carryPlayer',
                  'args': {
                    'id': 0x3
                  },
                  'data': 0x3,
                  'image': '������'
                }), _0x37b090 || _0x57f48c.addElement({
                  'id': 'carryPlayer',
                  'title': 'interaction.carryPlayer',
                  'args': {
                    'id': 0x4
                  },
                  'data': 0x4,
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'families':
              {
                const _0x372654 = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x372654)) return;
                _0x1ec652.api.isFamilyMember(_0x372654) || _0x57f48c.addElement({
                  'id': 'inviteFamily',
                  'title': 'interaction.inviteFamily',
                  'image': '������'
                }), _0x663ca4.getVariable('family') == _0x372654.getVariable('family') && _0x57f48c.addElement({
                  'id': 'uninviteFamily',
                  'title': 'interaction.uninviteFamily',
                  'image': '������'
                });

                const _0x420372 = _0x1ec652.api.getClosestVehicle(0x5);

                _0x2717d0.vehicles.exists(_0x420372) && (_0x1ec652.api.isCuffed(_0x372654) || _0x1ec652.api.isTiedHands(_0x372654)) && _0x57f48c.addElement({
                  'id': 'pushInCar',
                  'title': 'interaction.pushInCar',
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'fractions':
              {
                const _0x4b0239 = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x4b0239)) return;

                if ((_0x2717d0.inventory.hasItem(_0x663ca4, 0x19) || _0x2717d0.inventory.hasItem(_0x663ca4, 0x1f) || _0x2717d0.inventory.hasItem(_0x663ca4, 0x132) || _0x2717d0.inventory.hasItem(_0x663ca4, 0x133) || _0x2717d0.inventory.hasItem(_0x663ca4, 0x144) || _0x2717d0.inventory.hasItem(_0x663ca4, 0x145) || _0x2717d0.inventory.hasItem(_0x663ca4, 0xd7)) && _0x57f48c.addElement({
                  'id': 'showID',
                  'title': 'interaction.showID',
                  'image': '������'
                }), _0x1ec652.api.isFractionMember(_0x4b0239) || _0x57f48c.addElement({
                  'id': 'inviteFraction',
                  'title': 'interaction.inviteFraction',
                  'image': '������'
                }), _0x663ca4.getVariable('member') == _0x4b0239.getVariable('member') && _0x57f48c.addElement({
                  'id': 'uninviteFraction',
                  'title': 'interaction.uninviteFraction',
                  'image': '������'
                }), (_0x1ec652.api.isGroupMemberOf(_0x663ca4, 'police') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'fib') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'army') && _0x663ca4.getVariable('rank') > 0x1 || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gov') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'ems')) && _0x2717d0.inventory.hasItem(_0x663ca4, 0x24) && _0x57f48c.addElement({
                  'id': 'breathalyzer',
                  'title': 'interaction.breathalyzer',
                  'image': '������'
                }), (_0x1ec652.api.isGroupMemberOf(_0x663ca4, 'police') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'fib') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'army') && _0x663ca4.getVariable('rank') > 0x1 || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gov')) && (_0x1ec652.api.isCuffed(_0x4b0239) ? (_0x57f48c.addElement({
                  'id': 'uncuff',
                  'title': 'interaction.uncuff',
                  'image': '������'
                }), _0x663ca4.inJailShape && _0x4b0239.getVariable('wantedLevel') && _0x57f48c.addElement({
                  'id': 'arrest',
                  'title': 'interaction.arrest',
                  'image': '������'
                }), _0x4b0239.getVariable('isFollowing') ? _0x57f48c.addElement({
                  'id': 'unescortPlayer',
                  'title': 'interaction.unescortPlayer',
                  'image': '������'
                }) : _0x1ec652.api.isCuffed(_0x663ca4) || _0x57f48c.addElement({
                  'id': 'escortPlayer',
                  'title': 'interaction.escortPlayer',
                  'image': '������'
                }), _0x4b0239.getVariable('mask') && _0x57f48c.addElement({
                  'id': 'takeMaskOff',
                  'title': 'interaction.takeMaskOff',
                  'image': '������'
                })) : (!_0x1ec652.api.isCuffed(_0x663ca4) && _0x2717d0.inventory.hasItem(_0x663ca4, 0x70) && _0x57f48c.addElement({
                  'id': 'cuff',
                  'title': 'interaction.cuff',
                  'image': '������'
                }), _0x663ca4.inJailShape && _0x57f48c.addElement({
                  'id': 'unjail',
                  'title': 'interaction.unjail',
                  'image': '������'
                })), _0x57f48c.addElement({
                  'id': 'lics',
                  'title': 'interaction.lics',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'setWanted',
                  'title': 'interaction.setWanted',
                  'image': '⭐'
                }), _0x57f48c.addElement({
                  'id': 'finePlayer',
                  'title': 'interaction.finePlayer',
                  'image': '������️'
                }), _0x57f48c.addElement({
                  'id': 'identikit',
                  'title': 'interaction.identikit',
                  'image': '������️'
                })), _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'ems') && (_0x57f48c.addElement({
                  'id': 'sellPill',
                  'title': 'interaction.sellPill',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'givePhysicalCertificate',
                  'title': 'interaction.givePhysicalCertificate',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'giveMentalCertificate',
                  'title': 'interaction.giveMentalCertificate',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'diagnoseDisease',
                  'title': 'interaction.diagnoseDisease',
                  'image': '������'
                })), _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'army') && (_0x57f48c.addElement({
                  'id': 'giveArmyCertificate',
                  'title': 'interaction.giveArmyCertificate',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'takeArmyCertificate',
                  'title': 'interaction.takeArmyCertificate',
                  'image': '������'
                })), (_0x1ec652.api.isGroupMemberOf(_0x663ca4, 'police') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'fib') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'ems')) && _0x57f48c.addElement({
                  'id': 'healPlayer',
                  'title': 'interaction.healPlayer',
                  'image': '������'
                }), _0x1ec652.api.getEntitySync(_0x4b0239, 'isDead', 'boolean') && (_0x2717d0.inventory.hasItem(_0x663ca4, 0xfc) || _0x2717d0.inventory.hasItem(_0x663ca4, 0x23b)) && _0x57f48c.addElement({
                  'id': 'rescue',
                  'title': 'interaction.rescue',
                  'image': '������'
                }), (_0x2717d0.inventory.hasItem(_0x663ca4, 0x7c) || _0x2717d0.inventory.hasItem(_0x663ca4, 0xa8) || _0x2717d0.inventory.hasItem(_0x663ca4, 0xa9)) && _0x57f48c.addElement({
                  'id': 'vaccinate',
                  'title': 'interaction.vaccinate',
                  'image': '������'
                }), _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'police') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'fib') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'army') && _0x663ca4.getVariable('rank') > 0x1 || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gov') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'mafia') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gang')) {
                  const _0x39dedb = _0x1ec652.api.getClosestVehicle(0x5);

                  _0x2717d0.vehicles.exists(_0x39dedb) && (_0x1ec652.api.isCuffed(_0x4b0239) || _0x1ec652.api.isTiedHands(_0x4b0239)) && _0x57f48c.addElement({
                    'id': 'pushInCar',
                    'title': 'interaction.pushInCar',
                    'image': '������'
                  });
                }

                _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'carFamilies':
              {
                const _0x2613a5 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x2613a5)) return;
                _0x1ec652.api.vehicleAccess(_0x2613a5) && (_0x2613a5.getVariable('owner') === _0x663ca4.getVariable('id') && _0x663ca4.getVariable('family') && !_0x2613a5.getVariable('familyId') && _0x57f48c.addElement({
                  'id': 'carSetFamily',
                  'title': 'interaction.setFamily',
                  'image': '������'
                }), _0x2613a5.getVariable('owner') === _0x663ca4.getVariable('id') && _0x663ca4.getVariable('family') && _0x2613a5.getVariable('familyId') && _0x663ca4.getVariable('family') === _0x2613a5.getVariable('familyId') && _0x57f48c.addElement({
                  'id': 'carUnSetFamily',
                  'title': 'interaction.unsetFamily',
                  'image': '������'
                })), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'carFractions':
              {
                const _0x1cb0b6 = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x1cb0b6)) return;
                (_0x1ec652.api.isGroupMemberOf(_0x663ca4, 'police') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'fib') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'army') && _0x663ca4.getVariable('rank') > 0x1 || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'gov')) && _0x1cb0b6.getVariable('owner') && _0x57f48c.addElement({
                  'id': 'evacuateCar',
                  'title': 'interaction.evacuateCar',
                  'image': '������'
                }), (_0x1ec652.api.isGroupMemberOf(_0x663ca4, 'police') || _0x1ec652.api.isGroupMemberOf(_0x663ca4, 'fib')) && _0x1ec652.api.getEntitySync(_0x1cb0b6, 'hijacker', 'number') && _0x57f48c.addElement({
                  'id': 'returnVehToOwner',
                  'title': 'interaction.returnVehToOwner',
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'search':
              {
                const _0x3d709c = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x3d709c)) return;
                _0x57f48c.addElement({
                  'id': 'checkDocuments',
                  'title': 'interaction.checkDocuments',
                  'image': '������'
                }), _0x57f48c.addElement({
                  'id': 'checkInventory',
                  'title': 'interaction.checkInventory',
                  'image': '������'
                }), _0x2717d0.inventory.hasItem(_0x3d709c, 0x11b) && _0x57f48c.addElement({
                  'id': 'checkLics',
                  'title': 'interaction.checkLics',
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'jerrycan':
              {
                const _0x39f30b = _0x2717d0.vehicles.atRemoteId(_0xacd91c);

                if (!_0x2717d0.vehicles.exists(_0x39f30b)) return;
                _0x1ec652.api.getEntitySync(_0x39f30b, 'maxGas', 'number') && _0x57f48c.addElement({
                  'id': 'fillFuel',
                  'title': 'interaction.fillFuel',
                  'image': '⛽'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            case 'lics':
              {
                const _0x2dd446 = _0x2717d0.players.atRemoteId(_0xacd91c);

                if (!_0x2717d0.players.exists(_0x2dd446)) return;
                _0x1ec652.api.getLic(_0x2dd446, 'cdwl') ? _0x57f48c.addElement({
                  'id': 'takeLicWeapon',
                  'title': 'interaction.takeLicWeapon',
                  'image': '������'
                }) : _0x57f48c.addElement({
                  'id': 'giveLicWeapon',
                  'title': 'interaction.giveLicWeapon',
                  'image': '������'
                }), _0x1ec652.api.getLic(_0x2dd446, 'fh') ? _0x57f48c.addElement({
                  'id': 'takeLicFishing',
                  'title': 'interaction.takeLicFishing',
                  'image': '������'
                }) : _0x57f48c.addElement({
                  'id': 'giveLicFishing',
                  'title': 'interaction.giveLicFishing',
                  'image': '������'
                }), _0x1ec652.api.getLic(_0x2dd446, 'drived') && _0x57f48c.addElement({
                  'id': 'takeLicDriveD',
                  'title': 'interaction.takeLicDriveD',
                  'image': '������'
                }), _0x1ec652.api.getLic(_0x2dd446, 'drivem') && _0x57f48c.addElement({
                  'id': 'takeLicDriveM',
                  'title': 'interaction.takeLicDriveM',
                  'image': '������'
                }), _0x57f48c.parent = _0x4c95c0.id;
                break;
              }

            default:
              return _0x4b9fbc(), _0x2717d0.events.callRemote('3576282792', _0x4c95c0.id, _0xacd91c, _0x46b071, _0x4c95c0.data, _0x57f48c.parent), void _0x1ec652.api.playSound('popclick', {
                'volume': 0x23
              });
          }

          _0x57f48c.setList();
        }), _0x2717d0.events.add('interaction.exit', () => {
          _0x3d1267.g.interfaces.interaction && _0x1ec652.api.playSound('popout', {
            'volume': 0x23
          }), _0x4b9fbc();
        });

        class _0x5a4c03 {
          constructor(_0x4dff2b, _0x5ec37b, _0x43c301) {
            this.allList = [], this.id = _0x4dff2b, this.type = _0x5ec37b, this.parent = _0x43c301, this.elementsPerPage = 0x7, this.list = [], this.page = 0x1;
          }

          ['addElement'](_0x596d0e) {
            this.allList.push(_0x596d0e);
          }

          ['setList'](_0x1cd9bd = this.page) {
            this.list = this.getPageElements(_0x1cd9bd), this.page = _0x1cd9bd, (this.nextPageId > this.page || this.page > 0x1 && 0x1 === this.nextPageId && !this.list.some(_0x5d1de4 => _0x5d1de4.pageId)) && this.list.push({
              'id': 'more',
              'title': 'interaction.more',
              'pageId': this.nextPageId
            });

            for (const _0x48a143 of this.list) _0x48a143.title = _0x1ec652.api.language.translatePlayer(_0x48a143.title, _0x48a143.args || {});

            const _0xa325aa = [...this.list];
            _0x1ec652.api.toggleChat(false), _0x9c19c5.globalBrowser.toggle('interaction', {
              'value': true,
              'actions': _0xa325aa,
              'id': this.id,
              'type': this.type
            });
          }

          ['setNextList']() {
            this.setList(this.nextPageId), _0x9c19c5.globalBrowser.toggle('interaction', {
              'value': true,
              'actions': this.list,
              'id': this.id,
              'type': this.type
            });
          }

          ['getPageElements'](_0x4f7d36 = 0x1) {
            return this.allList.slice((_0x4f7d36 - 0x1) * this.elementsPerPage, _0x4f7d36 * this.elementsPerPage);
          }

          get ['nextPageId']() {
            return this.page + 0x1 > this.totalPages ? 0x1 : this.page + 0x1;
          }

          get ['totalPages']() {
            return Math.ceil(this.allList.length / this.elementsPerPage);
          }

        }

        const _0x355089 = _0x33c403;
      },
      0x3e7e: (_0x5ab23f, _0x2b3df3, _0x2650e8) => {
        'use strict';

        const a0_0x57b90d = {
          _0x3d2f57: 0x14d2
        },
              a0_0xa7cad = {
          _0x7e7d03: 0x1da5
        },
              a0_0x404f8d = {
          _0x46a5f8: 0x1cf9
        },
              a0_0x1ee428 = {
          _0xaa3aa4: 0x623,
          _0x3887c0: 0x1dc8,
          _0x4ea0d1: 0x6da,
          _0x167cc8: 0x2315,
          _0x1a45d5: 0x535,
          _0x38ba0c: 0x6da,
          _0x2e425b: 0x208f,
          _0x5135ea: 0x2315,
          _0x1b6e53: 0xb3c,
          _0x15fc43: 0x52c
        },
              a0_0x5ec2bf = {
          _0x40e85f: 0x242c,
          _0x576b07: 0x1d66,
          _0x22de42: 0x1e35
        },
              a0_0x541519 = {
          _0xfafe4f: 0x2315,
          _0x22a1fc: 0x1bfe,
          _0x30a23d: 0x535,
          _0x12851c: 0x623,
          _0x2257fd: 0x1dc8,
          _0x572adf: 0x6da,
          _0x1ea9ac: 0x10b9,
          _0xa31313: 0x2488,
          _0x518e02: 0x1a3
        },
              a0_0x33d82f = {
          _0x531624: 0x535,
          _0x66a6d3: 0x1c42
        },
              a0_0x33c41c = {
          _0x232028: 0x1a07
        },
              a0_0xf1f454 = {
          _0x4a6b8e: 0x2080,
          _0x2cb0ad: 0x1f30,
          _0x24e9fc: 0x1f30,
          _0xffc6ba: 0x1f30,
          _0x5ba9f2: 0x1f30
        },
              a0_0xeb4ea = {
          _0x2e617f: 0x535,
          _0x5ac363: 0x1934,
          _0x232e05: 0x14d2,
          _0x7ed322: 0x14a2
        },
              a0_0xf4536e = {
          _0x49c5a0: 0x1a07,
          _0x53e74c: 0xd10,
          _0x3b89a5: 0x1934
        },
              a0_0x55686c = {
          _0x3d5a16: 0x1a07,
          _0x5a56cd: 0x1934,
          _0x7c4a64: 0x1da5,
          _0x107565: 0x3ff
        },
              a0_0x1a1c99 = {
          _0x5969ef: 0x14d2,
          _0x2573ad: 0x1da5
        },
              a0_0x37ea38 = {
          _0x15ce72: 0x535,
          _0xd6a4bd: 0x1f30,
          _0x31041a: 0x1f30
        },
              a0_0x3ab76e = {
          _0x780c93: 0x2315,
          _0x2e5028: 0x971,
          _0x4fcf43: 0x623,
          _0x181c19: 0x2352
        },
              a0_0x4f497c = {
          _0x5a120c: 0x971,
          _0x317271: 0x623,
          _0x4258e3: 0x6da,
          _0x374099: 0x208f,
          _0x483953: 0x2488,
          _0x3f5da3: 0x1a3
        },
              a0_0x4cc4a3 = {
          _0x1abc99: 0x623,
          _0x42ed72: 0x1dc8,
          _0x58af48: 0x1a3,
          _0x226f02: 0xbf2,
          _0x344bf4: 0x62d
        },
              a0_0x1e9888 = {
          _0x46cc02: 0x2488,
          _0x4173b0: 0x1a3
        },
              a0_0x3b5cb0 = {
          _0x2306f9: 0x971,
          _0x295544: 0x535,
          _0x2d8a15: 0x6da,
          _0x54c7f5: 0x2488,
          _0x5b922b: 0x62d
        },
              a0_0x109f50 = {
          _0xcdc296: 0x2315,
          _0x2e4ffa: 0x1bfe,
          _0x45938e: 0x535,
          _0xe3cce4: 0x1dc8,
          _0x4e9ca5: 0x971,
          _0x3f66a0: 0x1dc8,
          _0x4eb843: 0x6da,
          _0x109ceb: 0x2315,
          _0x3c7cd3: 0x6da,
          _0x370809: 0x2488,
          _0x50c3b7: 0x1a3,
          _0x3ab2c8: 0x62d
        },
              a0_0x4ff1f6 = {
          _0x5f4b07: 0x2488,
          _0x5ce916: 0x440
        },
              a0_0x33064c = {
          _0x2025a7: 0x2488,
          _0x34dea2: 0xbc5
        },
              a0_0x2d2df3 = {
          _0x31d737: 0x2488
        },
              a0_0x3cba33 = {
          _0x5b035f: 0x62d
        },
              a0_0x2dd8c0 = {
          _0x1fe416: 0x2315,
          _0x2af4fd: 0x971,
          _0x3cc139: 0x6da,
          _0x3ae462: 0x2488,
          _0x322c73: 0x1a3,
          _0x45a729: 0x62d
        },
              a0_0x3ffa02 = {
          _0x20a77e: 0x971,
          _0x3225c7: 0x535,
          _0x5d023b: 0x1dc8,
          _0x5c0f21: 0x6da,
          _0x1510f8: 0x2488,
          _0x45fe82: 0x1a3,
          _0x3fd0bf: 0x1124,
          _0x1c142e: 0x62d
        },
              a0_0x2b3719 = {
          _0x3793ce: 0x1291,
          _0x53c650: 0x1717,
          _0x3907bf: 0x2273,
          _0x33309b: 0x2315,
          _0x5a8cf5: 0x1bfe,
          _0x4e44f6: 0x535,
          _0xef8f21: 0x10b9,
          _0x1ec726: 0x623,
          _0x41e8ca: 0x1dc8,
          _0x2af375: 0x2488,
          _0x53a273: 0x2315,
          _0x394029: 0x178c,
          _0x30025d: 0x12c1,
          _0x48d90c: 0xc74,
          _0x38a73c: 0x6da,
          _0x45b105: 0x91b
        },
              a0_0xb4ee13 = {
          _0x24f364: 0x4a3,
          _0x1e71e7: 0x2315,
          _0x16075c: 0x9cb,
          _0x484e94: 0x1e35,
          _0xc0e683: 0x1adb,
          _0x1cd866: 0x14d2,
          _0xeb7ecb: 0x52c
        },
              a0_0xc5eb8a = {
          _0x132698: 0x253d,
          _0x23b075: 0x242c,
          _0x54f300: 0x23c9,
          _0x56d5cc: 0x23e7,
          _0x185423: 0x535,
          _0x594db3: 0xbc2,
          _0x3b5563: 0x1982,
          _0x292d8e: 0x14d2,
          _0x4a0a2c: 0x25d,
          _0x2f677b: 0x1f6c,
          _0x124b03: 0xbc2,
          _0x3e4753: 0xbc2,
          _0x3b05eb: 0x1982,
          _0x5d8db7: 0x14d2,
          _0x28dc4a: 0x1a5,
          _0x14fcaa: 0x2123,
          _0x2e5ebc: 0x165,
          _0x413b16: 0x3e4,
          _0x459f5b: 0xc95,
          _0x1bddde: 0xb5b,
          _0x35e5cf: 0xc52,
          _0x1617f6: 0x1a3e,
          _0x562787: 0x1da5
        },
              a0_0x5c822a = {
          _0x52a038: 0x535,
          _0x359719: 0x25c9,
          _0x39942a: 0xe6d
        },
              a0_0xabb86f = {
          _0x4b61e2: 0x112d
        };

        _0x2650e8.r(_0x2b3df3);

        var _0x3a68d5 = _0x2650e8(0x16a21),
            _0x423f9b = _0x2650e8(0x1298c),
            _0x36e024 = _0x2650e8(0xa6c9),
            _0x5cd308 = _0x2650e8.n(_0x36e024),
            _0x2b4f6a = _0x2650e8(0x35cd),
            _0x5060e5 = _0x2650e8(0xc11e),
            _0x99626d = _0x2650e8(0x12a76),
            _0x15a48b = _0x2650e8(0x16a7d),
            _0x3f39cc = _0x2650e8(0x161cd);

        const _0x444bcc = _0x3f39cc.players.local;
        let _0x5abe93 = false,
            _0x5c45c2 = null,
            _0x3e674e = null,
            _0x484a8a = null,
            _0x4bd907 = 0x0;
        _0x3f39cc.events.add('browser.onVueLoaded', _0x4634bb => {
          if (!_0x4634bb) return;

          _0x3a68d5.api.chunkArray(_0x2b4f6a.Z, 0x40).forEach(_0x39ebe3 => {
            _0x99626d.globalBrowser.emit('inventory_pushItems', JSON.stringify(_0x39ebe3));
          });
        }), _0x3f39cc.keys.bind(_0x15a48b.t.E, false, () => {
          try {
            if (_0x3a68d5.api.ePress(_0x4bd907, 0xfa) || _0x2650e8.g.interfaces.chat || _0x2650e8.g.piano || _0x2650e8.g.playableInstrument || _0x444bcc.vehicle || _0x3f39cc.players.local.getVariable('fun.minigames.playing') || _0x2650e8.g.currentInterface && 'interaction' !== _0x2650e8.g.currentInterface || !_0x3a68d5.api.isAuthed() || _0x444bcc.isDead() || _0x2650e8.g.buttonPress || _0x2650e8.g.isGolfActive || _0x2650e8.g.isUsingTABAnim || _0x3a68d5.api.isCuffed(_0x444bcc) || _0x3a68d5.api.isTied(_0x444bcc) || _0x3a68d5.api.isTiedHands(_0x444bcc)) return;
            _0x4bd907 = _0x3a68d5.api.ePressUpdate(0xfa);

            const _0x23a775 = _0x3a68d5.api.getNearestLookingObject();

            if (!_0x3f39cc.objects.exists(_0x23a775)) return;
            if (!_0x23a775.hasVariable('itemSqlId')) return;
            if (!_0x444bcc.hasClearLosTo(_0x23a775.handle, 0x11)) return;
            _0x23a775.item && _0x23a775.item.itemId && (_0x3f39cc.inventory.isMaterials(_0x23a775.item.itemId) || _0x3f39cc.inventory.isBox(_0x23a775.item.itemId)) ? _0x3f39cc.events.call('inventoryApi.pickUpMaterials', _0x23a775.getVariable('itemSqlId'), _0x23a775.remoteId) : _0x3f39cc.events.call('inventoryApi.pickUp', _0x23a775.getVariable('itemSqlId'), _0x23a775.remoteId);
          } catch (_0x243ef3) {
            _0x3a68d5.api.sendError(_0x243ef3);
          }
        }), _0x3f39cc.events.add('keys.i', () => {
          _0x2650e8.g.skyCamera || _0x444bcc.isDead() || _0x2650e8.g.interfaces.iphone || _0x2650e8.g.isGolfActive || _0x3f39cc.events.call('inventoryApi.init');
        }), _0x3f39cc.events.add('inventoryApi.init', (_0x1b4cef = null, _0x2ca1b7 = null, _0x303da1 = false) => {
          if (_0x3a68d5.api.isAuthed() && !_0x2650e8.g.interfaces.chat && !_0x2650e8.g.skyCamera) return _0x303da1 ? (_0x5abe93 = true, _0x3f39cc.events.callRemote('1146560886', _0x1b4cef ? 'fridge' : 'afridge', _0x1b4cef || _0x2ca1b7), void _0x3a68d5.api.playSound('inventory_open', {
            'volume': 0x1e
          })) : _0x1b4cef ? (_0x5abe93 = true, _0x3f39cc.events.callRemote('705533435', _0x1b4cef, 'house'), void _0x3a68d5.api.playSound('inventory_open', {
            'volume': 0x1e
          })) : _0x2ca1b7 ? (_0x5abe93 = true, _0x3f39cc.events.callRemote('705533435', _0x2ca1b7, 'apartment'), void _0x3a68d5.api.playSound('inventory_open', {
            'volume': 0x1e
          })) : void (_0x2650e8.g.interfaces.inventory ? (_0x3f39cc.events.call('inventoryApi.close'), _0x5abe93 = false) : _0x5abe93 || _0x2650e8.g.currentInterface || _0x2650e8.g.isUsingMetro || _0x3a68d5.api.getEntitySync(_0x444bcc, 'isDead', 'boolean') || null != _0x444bcc.getVariable('playerInTrunk') || _0x444bcc.getVariable('fun.minigames.playing') || _0x3a68d5.api.isCuffed(_0x444bcc) || _0x3a68d5.api.isTied(_0x444bcc) || _0x3a68d5.api.isTiedHands(_0x444bcc) || (_0x5abe93 = true, _0x3f39cc.events.callRemote('2004655861'), _0x3a68d5.api.playSound('inventory_open', {
            'volume': 0x1e
          })));
        }), _0x3f39cc.events.add('inventoryApi.close', () => {
          _0x5abe93 = false, 'inventory' === _0x2650e8.g.currentInterface && (_0x99626d.globalBrowser.toggle('inventory', {
            'value': false
          }), _0x3a68d5.api.playSound('inventory_close', {
            'volume': 0x32
          }), _0x3f39cc.game.graphics.transitionFromBlurred(0x32), _0x3e674e = null, _0x3f39cc.events.callRemote('4000537285'), _0x3a68d5.api.toggleChat(true), _0x484a8a = null);
        }), (_0x3f39cc.events.add('inventoryApi.getInventoryDataResult', (_0x5dcb91, _0x449398 = 'drop', _0x637f85 = null, _0x100727 = null, _0x5a716c = null, _0xb5f804 = null) => {
          const a0_0x202433 = {
            _0x5336c6: 0x2315,
            _0x27cb06: 0x1d66
          };

          ((_0x76fc06, _0x2bda43 = 'drop', _0x18fde1 = null, _0x47a92a = null, _0x4c3ca6 = null, _0x205085 = null) => {
            let _0x107748,
                _0x165d56 = null;

            null != _0x4c3ca6 && (_0x165d56 = _0x3f39cc.players.atRemoteId(_0x4c3ca6), _0x107748 = _0x165d56.gender), _0x484a8a = _0x2bda43, _0x5abe93 = false;
            let _0x351c67 = {};
            'warehouse' !== _0x2bda43 && 'house' !== _0x2bda43 && 'apartment' !== _0x2bda43 && (_0x351c67 = _0x3f39cc.inventory.getClothesData(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x3a68d5.api.getClothes(_0x444bcc))), _0x76fc06 = _0x3f39cc.inventory.getInventoryItems(_0x4c3ca6 ? _0x107748 : _0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x76fc06, _0x2bda43), _0x99626d.globalBrowser.toggle('inventory', {
              'value': true,
              'clothesData': _0x351c67,
              'items': _0x444bcc.inventory,
              'leftItems': _0x76fc06,
              'walletItems': _0x444bcc.wallet,
              'bagItems': _0x444bcc.bag,
              'type': _0x2bda43,
              'key': _0x18fde1,
              'activeItemId': _0x444bcc.activeItemId,
              'activeItemSqlId': _0x444bcc.activeItemSqlId,
              'currentWeaponCondition': _0x205085,
              'health': _0x444bcc.getHealth(),
              'vehicleId': _0x47a92a,
              'frisk': _0x4c3ca6,
              'friskName': null != _0x4c3ca6 ? _0x3a68d5.api.getName(_0x165d56) : null,
              'fastSlots': _0x444bcc.fastSlots,
              'member': _0x444bcc.getVariable('member'),
              'gloves': _0x444bcc.gloves,
              'weightConfig': _0x5cd308()
            }), 'number' == typeof _0x47a92a && (_0x3e674e = _0x47a92a), _0x3f39cc.game.sleep(0x32).then(() => {
              _0x2650e8.g.interfaces.inventory && _0x3f39cc.game.graphics.transitionToBlurred(0x32);
            }), _0x3a68d5.api.toggleChat(false);
          })(_0x5dcb91, _0x449398, _0x637f85, _0x100727, _0x5a716c, _0xb5f804);
        }), _0x3f39cc.events.add('inventoryApi.reset', () => {
          _0x5abe93 = false;
        }), _0x3f39cc.events.add('inventoryApi.client.addItem', (_0x5ef1bd, _0x5e3bba = false) => {
          let _0x3c8bae = null;
          _0x3c8bae = _0x5e3bba ? _0x3f39cc.inventory.getClothesData(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x3a68d5.api.getClothes(_0x444bcc)) : {}, _0x5ef1bd = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x5ef1bd])[0x0], _0x99626d.globalBrowser.emit('inventory_addItem', {
            'item': _0x5ef1bd,
            'clothesData': _0x3c8bae,
            'gloves': _0x444bcc.gloves
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.addLeft', (_0x4897a0, _0x55659a) => {
          _0x4897a0 = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x4897a0], _0x55659a)[0x0], _0x99626d.globalBrowser.emit('inventory_addLeft', {
            'item': _0x4897a0,
            'gloves': _0x444bcc.gloves
          });
        }), _0x3f39cc.events.add('inventoryApi.client.removeLeft', (_0x48456d, _0x5ae44e) => {
          _0x48456d = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x48456d], _0x5ae44e)[0x0], _0x99626d.globalBrowser.emit('inventory_removeLeft', {
            'item': _0x48456d,
            'gloves': _0x444bcc.gloves
          });
        }), _0x3f39cc.events.add('inventoryApi.client.removeRight', _0x2f5651 => {
          _0x5abe93 = false, _0x99626d.globalBrowser.emit('inventory_removeRight', {
            'itemId': _0x2f5651,
            'gloves': _0x444bcc.gloves
          });
        }), _0x3f39cc.events.add('inventoryApi.client.changeSlotLeft', (_0x100b45, _0x49e910) => {
          _0x99626d.globalBrowser.emit('inventory_changeSlotLeft', {
            'id': _0x100b45,
            'slot': _0x49e910
          });
        }), _0x3f39cc.events.add('inventoryApi.client.changeSlotRight', (_0x52ec69, _0x138b47) => {
          _0x99626d.globalBrowser.emit('inventory_changeSlotRight', {
            'id': _0x52ec69,
            'slot': _0x138b47
          });
        }), _0x3f39cc.events.add('inventoryApi.client.changeSlotWallet', (_0x5e96e3, _0x2f0806, _0x15a994) => {
          _0x99626d.globalBrowser.emit('inventory_changeSlotWallet', {
            'id': _0x5e96e3,
            'slot': _0x2f0806,
            'owner': _0x15a994
          });
        }), _0x3f39cc.events.add('inventoryApi.client.changeSlotBag', (_0x388c7d, _0x4b6ac3, _0x579c9e) => {
          _0x99626d.globalBrowser.emit('inventory_changeSlotBag', {
            'id': _0x388c7d,
            'slot': _0x4b6ac3,
            'owner': _0x579c9e
          });
        }), _0x3f39cc.events.add('inventoryApi.client.stackItems', (_0x5cc04c, _0xcd9e63, _0x48025b, _0x13a35c, _0x4df2cf, _0x3e869f) => {
          _0x5abe93 = false, _0x99626d.globalBrowser.emit('inventory_stackItems', {
            'type': _0x5cc04c,
            'sourceId': _0xcd9e63,
            'sourceCount': _0x48025b,
            'targetId': _0x13a35c,
            'targetCount': _0x4df2cf,
            'source': _0x3e869f
          });
        }), _0x3f39cc.events.add('inventoryApi.client.splitItem', (_0x418392, _0x5ca46c, _0x434ed5) => {
          _0x5abe93 = false, _0x434ed5 && (_0x434ed5 = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x434ed5])[0x0]), _0x99626d.globalBrowser.emit('inventory_splitItem', {
            'id': _0x418392,
            'amount': _0x5ca46c,
            'newItem': _0x434ed5
          });
        }), _0x3f39cc.events.add('inventoryApi.client.wearClothes', (_0x24e344, _0x10ef3a) => {
          const _0x14b4b3 = _0x3f39cc.inventory.getClothesData(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x3a68d5.api.getClothes(_0x444bcc));

          _0x24e344 = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x24e344])[0x0], null != _0x10ef3a && (_0x10ef3a = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x10ef3a])[0x0]), _0x99626d.globalBrowser.emit('inventory_wearClothes', {
            'newItem': _0x24e344,
            'oldItem': _0x10ef3a,
            'clothesData': _0x14b4b3,
            'gloves': _0x444bcc.gloves
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.dropItem', (_0x3f793b, _0x39b860, _0x217c58, _0x404a58, _0x249d8a) => {
          const _0x3ee9ad = _0x3f39cc.inventory.getClothesData(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x3a68d5.api.getClothes(_0x444bcc));

          _0x3f793b = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x3f793b], 'drop')[0x0], _0x99626d.globalBrowser.emit('inventory_dropItem', {
            'item': _0x3f793b,
            'clothesData': _0x3ee9ad,
            'owner': _0x217c58,
            'type': _0x39b860,
            'gloves': _0x444bcc.gloves,
            'amount': _0x404a58,
            'newId': _0x249d8a
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.getOutItem', (_0x482274, _0x2b971a) => {
          _0x2b971a && (_0x2b971a = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x2b971a])[0x0]), _0x99626d.globalBrowser.emit('inventory_getOutItem', {
            'id': _0x482274,
            'item': _0x2b971a,
            'gloves': _0x444bcc.gloves
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.updateItem', _0x3bcedf => {
          _0x3bcedf = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x3bcedf])[0x0], _0x99626d.globalBrowser.emit('inventory_updateItem', {
            'item': _0x3bcedf,
            'gloves': _0x444bcc.gloves
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.takeItem', (_0x57b469, _0x13d7ae, _0x29b31d, _0x2c499f, _0x4d493f, _0x241c6c) => {
          if (_0x57b469 && (_0x57b469 = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x57b469], _0x13d7ae)[0x0]), _0x4d493f && (_0x4d493f = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x4d493f], _0x13d7ae)[0x0]), _0x241c6c) {
            let _0x590b36;

            _0x3f39cc.inventory.isBag(_0x57b469) ? _0x590b36 = 'bag' : _0x3f39cc.inventory.isWallet(_0x57b469) && (_0x590b36 = 'wallet'), _0x241c6c = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x241c6c, _0x590b36);
          }

          _0x99626d.globalBrowser.emit('inventory_takeItem', {
            'item': _0x57b469,
            'owner': _0x29b31d,
            'to': 'player' === _0x13d7ae ? 'inventory' : _0x13d7ae,
            'amount': _0x2c499f,
            'newItem': _0x4d493f,
            'gloves': _0x444bcc.gloves,
            'otherItems': _0x241c6c
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.removeWallet', (_0x11a12b, _0x3d7c25) => {
          _0x99626d.globalBrowser.emit('inventory_removeWallet', {
            'id': _0x11a12b,
            'owner': _0x3d7c25
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.removeBag', (_0x2dad4a, _0x5612e0) => {
          _0x99626d.globalBrowser.emit('inventory_removeBag', {
            'id': _0x2dad4a,
            'owner': _0x5612e0
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.putItem', (_0x2ad886, _0x4b6529, _0x427d33, _0x48e707, _0x49d182) => {
          const _0x38237b = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x2ad886], _0x4b6529);

          if (!_0x38237b) return _0x5abe93 = false, void (_0x5c45c2 = null);
          _0x2ad886 = _0x38237b[0x0], _0x99626d.globalBrowser.emit('inventory_putItem', {
            'item': _0x2ad886,
            'source': _0x427d33,
            'owner': _0x48e707,
            'amount': _0x49d182,
            'gloves': _0x444bcc.gloves
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.addWallet', _0x582354 => {
          const _0x53f035 = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x582354], 'wallet');

          if (!_0x53f035) return _0x5abe93 = false, void (_0x5c45c2 = null);
          _0x582354 = _0x53f035[0x0], _0x99626d.globalBrowser.emit('inventory_addWallet', {
            'item': _0x582354
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.addBag', _0x35d71a => {
          const _0x35eebc = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), [_0x35d71a], 'bag');

          if (!_0x35eebc) return _0x5abe93 = false, void (_0x5c45c2 = null);
          _0x35d71a = _0x35eebc[0x0], _0x99626d.globalBrowser.emit('inventory_addBag', {
            'item': _0x35d71a
          }), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.client.seizeItem', _0x4e1d04 => {
          _0x99626d.globalBrowser.emit('inventory_seizeItem', _0x4e1d04), _0x5abe93 = false, _0x5c45c2 = null;
        }), _0x3f39cc.events.add('inventoryApi.dropItem', (_0x2ccb7c, _0x5daddf, _0x2ed988) => {
          let _0x1f2e0b = 0xf4240,
              _0xd7e654 = null;
          _0x423f9b.Z.forEach(_0x351c28 => {
            const _0x43fb3b = _0x3a68d5.api.vdist(_0x444bcc.position.x, _0x444bcc.position.y, _0x444bcc.position.z, _0x351c28.position.x, _0x351c28.position.y, _0x351c28.position.z);

            _0x43fb3b < _0x1f2e0b && (_0x1f2e0b = _0x43fb3b, _0xd7e654 = _0x351c28.id);
          }), _0x3f39cc.events.callRemote('1848745300', _0x2ccb7c, parseInt(_0xd7e654), _0x5daddf, _0x2ed988 || null);
        }), _0x3f39cc.events.add('inventoryApi.changeSlot', (_0x1335df, _0x24067f, _0x58a105, _0x46f8a8, _0x175a3d, _0xda20ec) => {
          if (_0x5c45c2 && _0x5c45c2 === _0x1335df) return _0x3a68d5.api.longNotifyTrans('system.notNow', 'error');

          _0x3f39cc.events.callRemote('3477747614', _0x1335df, _0x24067f, _0x58a105, _0x46f8a8, _0x175a3d, _0xda20ec);
        }), _0x3f39cc.events.add('inventoryApi.stackItems', (_0x3d9cce, _0x32c892, _0x324d21, _0x46b012, _0x43528d, _0x20a639) => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true, _0x3f39cc.events.callRemote('16906729', _0x3d9cce, _0x32c892, _0x324d21, _0x46b012, _0x43528d, _0x20a639);
        }), _0x3f39cc.events.add('inventoryApi.splitItem', (_0x36cf96, _0x346031) => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true, _0x3f39cc.events.callRemote('922909348', _0x36cf96, _0x346031 || null);
        }), _0x3f39cc.events.add('inventoryApi.pickUp', (_0x5c5291, _0x288da3, _0x2cac3c, _0x1379a2, _0x188c2d, _0x25a509, _0x1fa6fc) => {
          if (_0x5c45c2 && _0x5c45c2 === _0x5c5291) return _0x3a68d5.api.longNotifyTrans('system.notNow', 'error');
          _0x5c45c2 = _0x5c5291, _0x3f39cc.events.callRemote('949636843', _0x5c5291, _0x288da3, _0x2cac3c, _0x1379a2, _0x188c2d, _0x25a509, _0x1fa6fc || null);
        }), _0x3f39cc.events.add('inventoryApi.pickUpMaterials', (_0x417d59, _0x3c40b7) => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true, _0x3f39cc.events.callRemote('1678959366', _0x417d59, _0x3c40b7);
        }), _0x3f39cc.events.add('inventoryApi.getOut', _0x2bdb6c => _0x5c45c2 && _0x5c45c2 === _0x2bdb6c ? _0x3a68d5.api.longNotifyTrans('system.notNow', 'error') : _0x5abe93 ? _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error') : _0x2650e8.g.buttonPress || _0x2650e8.g.isUsingSystemAnim && !(0x0, _0x5060e5.isPlayerOnChair)(_0x444bcc) ? _0x3a68d5.api.displayHelpStringTrans('displayHelpString.cantGetNow', false, true, 0xbb8) : (_0x5abe93 = true, _0x5c45c2 = _0x2bdb6c, void _0x3f39cc.events.callRemote('3719274049', _0x2bdb6c))), _0x3f39cc.events.add('inventoryApi.takeOff', (_0x5c734c, _0x4683a6) => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true, _0x3f39cc.events.callRemote('1283693181', _0x5c734c, _0x4683a6);
        }), _0x3f39cc.events.add('inventoryApi.takeOffBag', () => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true;
          let _0x5056f2 = 0xf4240,
              _0x6100ea = null;
          _0x423f9b.Z.forEach(_0x5ee58b => {
            const _0x36a3df = _0x3a68d5.api.vdist(_0x444bcc.position.x, _0x444bcc.position.y, _0x444bcc.position.z, _0x5ee58b.position.x, _0x5ee58b.position.y, _0x5ee58b.position.z);

            _0x36a3df < _0x5056f2 && (_0x5056f2 = _0x36a3df, _0x6100ea = _0x5ee58b.id);
          }), _0x3f39cc.events.callRemote('491582760', parseInt(_0x6100ea));
        }), _0x3f39cc.events.add('inventoryApi.defer', _0x65e9e7 => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true, _0x3f39cc.events.callRemote('2845130450', _0x65e9e7);
        }), _0x3f39cc.events.add('inventoryApi.wear', _0x486961 => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true, _0x3f39cc.events.callRemote('2756395139', _0x486961);
        }), _0x3f39cc.events.add('inventoryApi.takeItem', (_0x1f8293, _0x35bfd8, _0x11c1c0, _0x5d9482, _0x455380, _0x540423, _0x543653, _0x177560, _0x1419f3) => {
          if (_0x5c45c2 && _0x5c45c2 === _0x1f8293) return _0x3a68d5.api.longNotifyTrans('system.notNow', 'error');
          _0x5c45c2 = _0x1f8293, _0x3f39cc.events.callRemote('2934482459', _0x1f8293, _0x35bfd8, _0x11c1c0, _0x5d9482, _0x455380, _0x540423, _0x543653, _0x177560, _0x1419f3 || null);
        }), _0x3f39cc.events.add('inventoryApi.seizeItem', (_0x370a72, _0x4568a7) => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');

          _0x3f39cc.events.callRemote('692192527', _0x370a72, _0x4568a7);
        }), _0x3f39cc.events.add('inventoryApi.putItem', (_0x40f822, _0x371773, _0x1de773, _0x4161ee, _0x422304, _0x2410d8, _0xc8972c, _0x1b928a) => {
          _0x3f39cc.events.callRemote('1903211330', _0x40f822, _0x371773, _0x1de773, _0x4161ee, _0x422304, _0x2410d8, _0xc8972c, _0x1b928a || null);
        }), _0x3f39cc.events.add('inventoryApi.pocketItem', () => {
          _0x3f39cc.events.callRemote('1980034567');
        }), _0x3f39cc.events.add('inventoryApi.setFast', _0x3aa93e => {
          _0x5abe93 || (_0x5abe93 = true, _0x3f39cc.events.callRemote('3869260990', _0x3aa93e));
        }), _0x3f39cc.events.add('inventoryApi.unsetFast', _0x3ee870 => {
          _0x5abe93 || (_0x5abe93 = true, _0x3f39cc.events.callRemote('3194297533', _0x3ee870));
        }), _0x3f39cc.events.add('setFastSlots', () => {
          _0x5abe93 = false;
        }), _0x3f39cc.events.add('inventoryApi.armourOff', _0x204775 => {
          if (_0x5abe93) return _0x3a68d5.api.longNotifyTrans('system.notTooFast', 'error');
          _0x5abe93 = true, _0x3f39cc.events.callRemote('3456880152', _0x204775);
        }), _0x3f39cc.events.add('inventoryApi.endOfEvent', _0xe5d78c => {
          if (_0x5abe93 = false, _0x5c45c2 = null, _0xe5d78c) {
            const _0x422914 = _0x3f39cc.inventory.getClothesData(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x3a68d5.api.getClothes(_0x444bcc));

            _0x99626d.globalBrowser.emit('inventory_resetInventory', {
              'clothes': _0x422914,
              'gloves': _0x444bcc.gloves
            });
          }
        }), _0x3f39cc.events.add('playerDeath2', _0x3d7513 => {
          _0x3d7513 === _0x444bcc && (_0x5abe93 = false);
        }), _0x3f39cc.events.add('xmas.showGiftResult', (_0x18da8c, _0x3dbf6d) => {
          _0x99626d.globalBrowser.toggle('donate', {
            'value': true,
            'donate': _0x3dbf6d,
            'gift': _0x18da8c
          });
        }), _0x3f39cc.events.add('inventoryApi.trade.init', (_0x35a6d2, _0x5c3d9c, _0x4065c7, _0x3ba96a) => {
          _0x4065c7 && (_0x4065c7 = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x4065c7)), _0x3ba96a && (_0x3ba96a = _0x3f39cc.inventory.getInventoryItems(_0x3a68d5.api.getEntitySync(_0x444bcc, 'gender', 'number'), _0x3ba96a, 'wallet')), _0x99626d.globalBrowser.toggle('inventory', {
            'value': true,
            'items': _0x4065c7,
            'walletItems': _0x3ba96a,
            'leftItems': [],
            'type': 'trade',
            'tradeInfo': {
              'traderId': _0x35a6d2,
              'traderName': _0x5c3d9c,
              'traderReady': false,
              'traderMoney': null,
              'money': null,
              'ready': false,
              'waiting': false,
              'canAccept': false
            },
            'weightConfig': _0x5cd308()
          }), _0x3f39cc.game.sleep(0x32).then(() => {
            _0x2650e8.g.interfaces.inventory && _0x3f39cc.game.graphics.transitionToBlurred(0x32);
          }), _0x3a68d5.api.toggleChat(false);
        }), _0x3f39cc.events.add('inventoryApi.tradeConfirm', (_0x1b81fe, _0x5169c0) => {
          _0x5abe93 || (_0x5abe93 = true, _0x3f39cc.events.callRemote('4069527355', _0x1b81fe, _0x5169c0));
        }), _0x3f39cc.events.add('inventoryApi.tradeConfirmResult', (_0x41b51b, _0x6bdd84) => {
          _0x5abe93 = false, null != _0x41b51b && _0x99626d.globalBrowser.emit('inventory_tradeConfirmResult', {
            'confirmed': _0x41b51b,
            'money': _0x6bdd84
          });
        }), _0x3f39cc.events.add('inventoryApi.tradePropose', _0x5d62e0 => {
          _0x99626d.globalBrowser.emit('inventory_tradePropose', {
            'player': _0x5d62e0
          });
        }), _0x3f39cc.events.add('inventoryApi.swapItem', (_0x204576, _0x557b7d, _0x466517) => {
          _0x3f39cc.events.callRemote('2189275637', _0x204576, _0x557b7d, _0x466517);
        }), _0x3f39cc.events.add('inventoryApi.swapResult', (_0x1aad80, _0x5025bd) => {
          _0x99626d.globalBrowser.emit('inventory_swapResult', {
            'removedId': _0x1aad80,
            'addedItem': _0x5025bd
          });
        }), _0x3f39cc.events.add('inventoryApi.tradeSend', () => {
          _0x5abe93 || (_0x5abe93 = true, _0x3f39cc.events.callRemote('1725514684'));
        }), _0x3f39cc.events.add('inventoryApi.tradeSendResult', _0x4f7768 => {
          _0x5abe93 = false, _0x4f7768 && _0x99626d.globalBrowser.emit('inventory_tradeSendResult');
        }), _0x3f39cc.events.add('inventoryApi.tradeAccept', () => {
          _0x5abe93 || (_0x5abe93 = true, _0x3f39cc.events.callRemote('3807201102'));
        }), _0x3f39cc.events.add('inventoryApi.tradeAcceptResult', () => {
          _0x5abe93 = false;
        }), _0x3f39cc.events.add('inventoryApi.tradeCancel', () => {
          _0x3f39cc.events.call('inventoryApi.close'), _0x3f39cc.events.callRemote('3800112048');
        }), _0x3f39cc.events.add('inventoryApi.tradeChangeSlotResult', (_0x235fcc, _0x49f475) => {
          _0x99626d.globalBrowser.emit('inventory_tradeChangeSlotResult', {
            'id': _0x235fcc,
            'slot': _0x49f475
          });
        }));
      },
      0xb307: (_0x3283bc, _0x200acf, _0x1f4018) => {
        'use strict';

        const a0_0xf9e5a6 = {
          _0x321d13: 0x18ec,
          _0xddf75a: 0x50d,
          _0x4ddf6c: 0x1d66,
          _0x340d41: 0xf8a,
          _0x27f311: 0x2602,
          _0x588c37: 0x17b9,
          _0x710053: 0xbb9,
          _0x193de9: 0xd04,
          _0x1ada99: 0x535,
          _0x4ec1ad: 0x2034,
          _0x2c6f1a: 0xf90,
          _0x3bbbda: 0x25a5,
          _0x4fc93c: 0x17b9,
          _0x361bc4: 0xbb9,
          _0x4cfa54: 0x1850,
          _0x1f7524: 0x7c0,
          _0x24e233: 0x50d,
          _0x463ba8: 0x1ef0,
          _0x190f4d: 0x1732,
          _0x355517: 0xf0e,
          _0xafb549: 0x2611,
          _0x4028b8: 0x535,
          _0x1c53a4: 0x23bc,
          _0x331d78: 0x2488,
          _0x2d2566: 0x1a3
        },
              a0_0x102378 = {
          _0x28c271: 0x1c3c,
          _0x516a7c: 0x1a3,
          _0x46df14: 0x4a3,
          _0xa6af62: 0x2288,
          _0x3fac0e: 0x14d2,
          _0x529e44: 0x11fe
        },
              a0_0x1272fe = {
          _0x46cf1d: 0x535,
          _0x1db15b: 0x623,
          _0x443cde: 0x2488,
          _0x3f4ec7: 0x1a3,
          _0x9a9dff: 0x1ab1,
          _0x3d1181: 0xc95,
          _0x593e06: 0xc74,
          _0x363440: 0xc95,
          _0x5d0209: 0x1d51,
          _0x1dab55: 0x50d,
          _0x1a6a94: 0x23bc,
          _0x5349c6: 0x1a3,
          _0x74406e: 0x211,
          _0x593000: 0x2407,
          _0x539fed: 0xc95,
          _0x726bd6: 0x1c34,
          _0x2c8051: 0x11fe,
          _0x1d56d5: 0xc95,
          _0x565f96: 0x14d2,
          _0xaecee1: 0x1da5,
          _0x5305b8: 0xc74,
          _0x1f9674: 0x14d2
        },
              a0_0x232dd = {
          _0x2329c5: 0x4b9,
          _0x556510: 0x131e,
          _0x11dffc: 0x535,
          _0x167131: 0x1de9,
          _0x41416a: 0x1d7c
        },
              a0_0x382831 = {
          _0x30aece: 0x535,
          _0x278d1: 0x2404,
          _0x4ab2c1: 0x11d9,
          _0xb4d7e3: 0xf97,
          _0x4b7fba: 0x2315,
          _0x2b6723: 0xb1a,
          _0x2fff87: 0x1d66,
          _0x305d68: 0x1e75,
          _0x2e71eb: 0x242c,
          _0x4a8111: 0x2288,
          _0x310211: 0x1f0d,
          _0x2a1ecb: 0x239d,
          _0x34fca: 0xb5b,
          _0x1e20f4: 0x1a3e,
          _0xcd5fe4: 0x41d,
          _0x37342c: 0x535,
          _0x88c934: 0xc95,
          _0x12d7b5: 0x1fc7,
          _0x183fb6: 0x14d2,
          _0x3550b1: 0x1a07,
          _0x4e26d0: 0x2020
        };
        _0x1f4018.r(_0x200acf), _0x1f4018.d(_0x200acf, {
          'disabledCloseItems': () => _0x36289e
        });

        var _0x4d66cd = _0x1f4018(0x16a21),
            _0x1b08e6 = _0x1f4018(0x96d1),
            _0xe34aed = _0x1f4018.n(_0x1b08e6),
            _0x570538 = _0x1f4018(0x12a76),
            _0x21620f = _0x1f4018(0xc11e),
            _0x1a28ca = _0x1f4018(0x161cd);

        const _0x5dc8ca = _0x1a28ca.players.local;

        let _0x4c4ee4,
            _0x1c163d,
            _0x26d4dd = 0x0,
            _0x4aaa52 = false,
            _0xc4d9f8 = 'idle_c';

        const _0x36289e = new Set();

        _0x1a28ca.events.add('playerDeath2', _0x3f8c9a => {
          _0x3f8c9a.handle === _0x5dc8ca.handle && 'ipad' === _0x1f4018.g.currentInterface && (_0x4aaa52 = false, _0x1a28ca.events.call('ipad.close'), _0x4c4ee4 = null, _0x1a28ca.attachments.removeLocal(_0x1a28ca.game.joaat('tablet')));
        }), _0x1a28ca.events.add('keys.down', () => {
          if (!(_0x1f4018.g.interfaces.chat || _0x1f4018.g.inTuning || !_0x4d66cd.api.isAuthed() || _0x1f4018.g.skyCamera || _0x1f4018.g.isUsingSystemAnim && !(0x0, _0x21620f.isPlayerOnChair)(_0x5dc8ca) || _0x1f4018.g.currentInterface && 'ipad' !== _0x1f4018.g.currentInterface || _0x4d66cd.api.ePress(_0x26d4dd))) {
            if (_0x1a28ca.inventory.isPlayerHasIpad(_0x5dc8ca) || _0x1a28ca.game.ui.isPauseMenuActive()) {
              if (_0x26d4dd = _0x4d66cd.api.ePressUpdate(), _0x1f4018.g.interfaces.ipad) _0x1a28ca.events.call('ipad.close');else {
                if (_0x5dc8ca.activeItemId) return _0x4d66cd.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
                if (_0x1f4018.g.searchingAnim || _0x1f4018.g.nativeui || _0x4d66cd.api.getLocalVariable('isConsumingItem') || _0x1f4018.g.isUsingTABAnim || _0x1f4018.g.fishing || _0x1a28ca.game.ui.isPauseMenuActive() || null != _0x5dc8ca.getVariable('playerInTrunk') || _0x4d66cd.api.isCuffed(_0x5dc8ca) || _0x4d66cd.api.isTied(_0x5dc8ca) || _0x4d66cd.api.isTiedHands(_0x5dc8ca) || _0x5dc8ca.getVariable('isSpectating')) return;

                _0x1a28ca.events.call('ipad.init');
              }
            } else _0x4d66cd.api.longNotifyTrans('ipad.noIpad', 'error');
          }
        });
        let _0x40540f = 0x0;
        _0x1a28ca.events.add('ipad.init', () => {
          if (_0x4d66cd.api.getEntitySync(_0x5dc8ca, 'isDead', 'boolean')) return true;
          _0x1a28ca.game.graphics.transitionFromBlurred(0x32), (async () => {
            try {
              if (_0x5dc8ca.isDead() || _0x5dc8ca.vehicle) return;
              let _0x5e812d = 'anim@arena@amb@seat_drone_tablet@female@';
              _0x1c163d && (_0x1c163d.cancel(), _0x1c163d = undefined), await _0x4d66cd.api.taskPlayAnim(_0x5e812d, _0xc4d9f8, 0x32, true, false, true), _0x4c4ee4 = _0xc4d9f8, _0x1a28ca.attachments.addLocal(_0x1a28ca.game.joaat('tablet'));
            } catch (_0x2c135b) {
              _0x4d66cd.api.sendError(_0x2c135b);
            }
          })(), _0x570538.globalBrowser.emit('chat_show', false), _0x570538.globalBrowser.toggle('ipad', {
            'value': true,
            'biz': _0x5dc8ca.biz,
            'family': _0x5dc8ca.getVariable('family'),
            'member': _0x5dc8ca.getVariable('member'),
            'leader': _0x5dc8ca.getVariable('leader'),
            'houseId': _0x5dc8ca.houseId,
            'apartmentId': _0x5dc8ca.apartmentId
          }), _0x570538.globalBrowser.emit('main_updateMember', _0x5dc8ca.getVariable('member')), _0x570538.globalBrowser.emit('main_updateFamily', _0x5dc8ca.getVariable('family')), _0x5dc8ca.activeItemId = 0x43, _0x1a28ca.events.callRemote('3715179792', 0x43), _0x5dc8ca.getVariable('member') && _0x40540f !== _0x5dc8ca.getVariable('member') && (_0x40540f = _0x5dc8ca.getVariable('member'), _0x1a28ca.events.callRemote('1014988094')), _0x5dc8ca.getVariable('family') && 0x0 !== _0x5dc8ca.getVariable('family') && (_0x40540f = _0x5dc8ca.getVariable('member'), _0x1a28ca.events.callRemote('2490866002'));
        }), _0x1a28ca.events.add('ipad.organization.getInitFractionDataResult', (_0x126cb4, _0x3270f2) => {
          _0x126cb4 && _0x570538.globalBrowser.emit('ipad_organization_getInitFractionDataResult', {
            'title': _0x126cb4,
            'logo': _0x3270f2
          });
        }), _0x1a28ca.events.add('ipad.organization.getInitFamilyDataResult', (_0x1f6a0a, _0x3f0d17) => {
          _0x1f6a0a && _0x570538.globalBrowser.emit('ipad_organization_getInitFamilyDataResult', {
            'title': _0x1f6a0a,
            'logo': _0x3f0d17
          });
        }), _0x1a28ca.events.add('ipad.close', () => {
          const a0_0x417304 = {
            _0x192dae: 0x1ec5,
            _0x4e0173: 0x1a4d,
            _0x1dd8e7: 0x4b9,
            _0x1129d4: 0x1de9,
            _0x9f06ca: 0x22d,
            _0x2c935f: 0xb4a,
            _0x21890f: 0x2379,
            _0x8339b4: 0x1b50,
            _0x3e4198: 0x535
          };
          _0x36289e.size || ((async () => {
            try {
              if (_0x5dc8ca.isDead()) return;
              let _0x14ee22 = 'cellphone@';
              _0x1c163d && (_0x1c163d.cancel(), _0x1c163d = undefined), _0x5dc8ca.vehicle || (await _0x4d66cd.api.taskPlayAnim(_0x14ee22, 'cellphone_text_out', 0x30, false, false, true)), _0x4c4ee4 = null, _0x1a28ca.attachments.removeLocal(_0x1a28ca.game.joaat('tablet'));
            } catch (_0x1fd14b) {
              _0x4d66cd.api.sendError(_0x1fd14b);
            }
          })(), _0x570538.globalBrowser.emit('chat_show', true), _0x570538.globalBrowser.toggle('ipad', {
            'value': false
          }), _0x5dc8ca.activeItemId = null, _0x1a28ca.events.callRemote('3715179792', null));
        }), _0x1a28ca.events.add('ipad.openApp', (_0x5cdd61, _0x8cf920) => {
          _0x4aaa52 || (_0x4aaa52 = true, _0x1a28ca.events.callRemote('1172581056', _0x5cdd61, _0x8cf920));
        }), _0x1a28ca.events.add('ipad.openAppError', () => {
          _0x4aaa52 = false;
        }), _0x1a28ca.events.add('ipad.openAppSuccess', () => {
          _0x4aaa52 = false;
        }), _0x1a28ca.events.add('ipad.openHouseApp', (_0x22c8da, _0x530d16, _0x23c501, _0x461480, _0x25db41) => {
          if (_0x4aaa52 = false, _0x22c8da) {
            const _0x24457d = _0x1f4018.g.houses[_0x5dc8ca.houseId],
                  _0x52fab = _0x1a28ca.game.pathfind.getStreetNameAtCoord(parseFloat(_0x24457d.posX), parseFloat(_0x24457d.posY), parseFloat(_0x24457d.posZ), 0x0, 0x0);

            _0x22c8da.zoneName = _0x4d66cd.api.escapeHtml(_0x1a28ca.game.ui.getLabelText(_0x1a28ca.game.zone.getNameOfZone(parseFloat(_0x24457d.posX), parseFloat(_0x24457d.posY), parseFloat(_0x24457d.posZ)))), _0x22c8da.streetName = _0x4d66cd.api.escapeHtml(_0x1a28ca.game.ui.getStreetNameFromHashKey(_0x52fab.streetName)), _0x22c8da.id = _0x5dc8ca.houseId;
          }

          if (_0x23c501) {
            const _0x37f45a = _0xe34aed()[_0x23c501.buildingId],
                  _0x1042f5 = _0x1a28ca.game.pathfind.getStreetNameAtCoord(_0x37f45a.shapeX, _0x37f45a.shapeY, _0x37f45a.shapeZ, 0x0, 0x0);

            _0x23c501.zoneName = _0x4d66cd.api.escapeHtml(_0x1a28ca.game.ui.getLabelText(_0x1a28ca.game.zone.getNameOfZone(_0x37f45a.shapeX, _0x37f45a.shapeY, _0x37f45a.shapeZ))), _0x23c501.streetName = _0x4d66cd.api.escapeHtml(_0x1a28ca.game.ui.getStreetNameFromHashKey(_0x1042f5.streetName)), _0x23c501.id = _0x5dc8ca.apartmentId;
          }

          _0x570538.globalBrowser.emit('ipad_openHouseApp', {
            'houseInfo': _0x22c8da,
            'houseRenters': _0x530d16,
            'apartmentInfo': _0x23c501,
            'apartmentRenters': _0x461480,
            'isFamilyLeader': _0x25db41
          });
        }), _0x1a28ca.events.add('ipad.organization.initResult', (_0x474c08, _0x282c5f, _0x5a8642, _0x35dbf8, _0x3eb7b9, _0x31b7c1, _0x179e17, _0x298f55, _0x25f7d0, _0x4b711d, _0x18658b, _0x5b96b9, _0x2f45f3, _0x469452, _0x2bc222, _0x12a04a, _0x583058) => {
          if (_0x4aaa52 = false, null == _0x474c08) return;
          const _0x193abc = {
            'totalCount': _0x5a8642,
            'onlineCount': _0x35dbf8,
            'rankName': _0x3eb7b9,
            'categories': _0x31b7c1,
            'money': _0x179e17,
            'title': _0x298f55,
            'tag': _0x25f7d0,
            'mainColor': _0x4b711d,
            'theme': _0x18658b,
            'backgroundColor': _0x5b96b9,
            'logo': _0x2f45f3,
            'blipColor': _0x469452,
            'frozen': _0x2bc222,
            'housePrice': _0x12a04a,
            'removedDate': _0x583058
          };
          _0x474c08 ? _0x193abc.family = _0x282c5f : _0x193abc.member = _0x282c5f, _0x570538.globalBrowser.emit('ipad_openFractionApp', JSON.stringify(_0x193abc));
        });
      },
      0xa51e: (_0x1022f4, _0x2d25bd, _0x21587e) => {
        'use strict';

        const a0_0x5a1b75 = {
          _0x3c9b78: 0x14d2,
          _0x1b1708: 0x1a07
        },
              a0_0x206fe4 = {
          _0x482011: 0x14d2,
          _0x5bec84: 0x1da5,
          _0x5a0f38: 0x193d,
          _0x36127e: 0x535,
          _0x2af195: 0x1a07,
          _0x6d2a6d: 0x1934
        },
              a0_0x3e5792 = {
          _0x5b93d9: 0x9e4,
          _0x2e4b12: 0x112d
        },
              a0_0x445045 = {
          _0x41ece2: 0x14d2,
          _0x25da91: 0x1da5,
          _0x15e106: 0x17fe,
          _0x30ed33: 0x535
        },
              a0_0x383f97 = {
          _0x472668: 0x14d2,
          _0x4d79d8: 0x535,
          _0x2356e0: 0x1934
        },
              a0_0xc609df = {
          _0x2b9e8b: 0x1ab1,
          _0x306f8e: 0x1a3,
          _0x206423: 0x62b
        },
              a0_0x1eb23b = {
          _0x14dbf4: 0x1ab1,
          _0x1c2fea: 0x535,
          _0x2e44cd: 0x22b2,
          _0x3fed67: 0x2488,
          _0x5dc370: 0x1a3,
          _0x30ba3f: 0xde0
        },
              a0_0x509aaf = {
          _0x27e042: 0x1874,
          _0x46784f: 0x535,
          _0x6cb82: 0x8d4,
          _0x5d4c2f: 0x9ad,
          _0x589667: 0x8ae,
          _0x3af5ee: 0x1187,
          _0x34b2c4: 0xbb1,
          _0x1009c9: 0x1dce,
          _0x26dc10: 0xf90
        },
              a0_0x2f29e6 = {
          _0x5bc841: 0x12dd,
          _0xbdd5e1: 0x21e0,
          _0x40d42d: 0x53c,
          _0x3ab456: 0x19e6,
          _0xc7c15e: 0x24aa,
          _0x180240: 0x1934
        };

        _0x21587e.r(_0x2d25bd);

        var _0x2d6cdd = _0x21587e(0x16a21),
            _0x297875 = _0x21587e(0xd504),
            _0x28d1fa = _0x21587e(0x12a76),
            _0x20bb61 = _0x21587e(0x161cd);

        const _0x6a0327 = _0x20bb61.players.local;
        let _0x11d442 = false;
        _0x20bb61.events.add('ipad.business.openApp', (_0x5a6102, _0x529fea, _0x33101e, _0x5e2c78) => {
          if (_0x11d442 = false, !_0x6a0327.biz) return;

          const _0x326469 = _0x6a0327.biz.split('-'),
                _0x271a31 = parseInt(_0x326469[0x1]);

          _0x28d1fa.globalBrowser.emit('ipad_business_openApp', {
            'widgetsData': _0x5a6102,
            'title': _0x21587e.g[_0x326469[0x0]][_0x271a31].title,
            'id': _0x271a31,
            'materials': _0x529fea,
            'price': _0x33101e,
            'tableName': _0x5e2c78
          });
        }), _0x20bb61.events.add('ipad.business.getTopItemsResult', (_0xdbbbd1, _0x302e77) => {
          if (_0x6a0327.biz) {
            if ('clothes_shops' === _0xdbbbd1) {
              const _0x3258fb = _0x2d6cdd.api.getClothesParams();

              _0x302e77 = _0x302e77.map(_0x83ba10 => {
                const _0x2c9835 = _0x83ba10.category.split('-'),
                      _0x715667 = _0x2c9835.length < 0x5 ? 0x0 : parseInt(_0x2c9835[0x4]),
                      _0x2e8265 = _0x3258fb.find(_0x4f7833 => _0x4f7833.component === parseInt(_0x2c9835[0x0]) && _0x4f7833.isProp === parseInt(_0x2c9835[0x1]));

                return _0x2e8265 ? { ..._0x83ba10,
                  'category': _0x2d6cdd.api.language.translatePlayer('biz.' + _0x2e8265.type) + ' - ' + _0x2d6cdd.api.getClothesTitle(_0x715667, _0x2e8265.type, parseInt(_0x2c9835[0x2]), parseInt(_0x2c9835[0x3]))
                } : (_0x2d6cdd.api.sendError({
                  'event': 'ipad.business.getTopItemsResult',
                  'i': _0x83ba10
                }), { ..._0x83ba10,
                  'category': 'error'
                });
              });
            } else 'tattoo_shops' === _0xdbbbd1 && (_0x302e77 = _0x302e77.map(_0xf94703 => {
              let _0x7e805b = 'remove' === _0xf94703.category ? _0x2d6cdd.api.language.translatePlayer('tattoo.remove') : _0xf94703.category;

              if ('remove' !== _0xf94703.category) {
                const _0x337c8b = _0x297875.Z[parseInt(_0xf94703.category)].hashNameMale ?? _0x297875.Z[parseInt(_0xf94703.category)].hashNameFemale;

                _0x7e805b = _0x2d6cdd.api.language.translatePlayer('tattoo.' + _0x297875.Z[parseInt(_0xf94703.category)].zone) + ' - ' + _0x337c8b;
              }

              return { ..._0xf94703,
                'category': _0x7e805b
              };
            }));

            _0x28d1fa.globalBrowser.emit('ipad_business_getTopItemsResult', JSON.stringify(_0x302e77));
          }
        }), _0x20bb61.events.add('ipad.business.getTopCustomersResult', _0x487a4a => {
          _0x6a0327.biz && _0x28d1fa.globalBrowser.emit('ipad_business_getTopCustomersResult', JSON.stringify(_0x487a4a));
        }), _0x20bb61.events.add('ipad.business.getTransactions', _0x5bf2ff => {
          _0x6a0327.biz ? _0x11d442 || (_0x11d442 = true, _0x20bb61.events.callRemote('1901262127', _0x5bf2ff)) : _0x2d6cdd.api.longNotifyTrans('ipad.noBusiness', 'error');
        }), _0x20bb61.events.add('ipad.business.getTransactionsResult', (_0x7df0bd, _0x2328b5) => {
          const a0_0x234a68 = {
            _0x5b9286: 0x20b2,
            _0x652b15: 0x1349,
            _0x5bd603: 0x9ad,
            _0x398fa4: 0x8ae,
            _0x404382: 0x535,
            _0x3ab886: 0x1349,
            _0x201431: 0xbb1,
            _0x5a9f93: 0x1c47
          },
                a0_0x57f908 = {
            _0x2142fa: 0x20b2,
            _0x3b80f5: 0x21e0,
            _0x5873f9: 0x535,
            _0x242149: 0x53c,
            _0x591bb6: 0x1971
          };

          if (_0x11d442 = false, 'clothes_shops' === _0x7df0bd) {
            const _0x243159 = _0x2d6cdd.api.getClothesParams();

            _0x2328b5 = _0x2328b5.map(_0x46e772 => {
              const _0x5d57f1 = _0x46e772.comment.split('-'),
                    _0x16ce6b = _0x5d57f1.length < 0x5 ? 0x0 : parseInt(_0x5d57f1[0x4]),
                    _0x10ffee = _0x243159.find(_0xf1ef5a => _0xf1ef5a.component === parseInt(_0x5d57f1[0x0]) && _0xf1ef5a.isProp === parseInt(_0x5d57f1[0x1])).type;

              return { ..._0x46e772,
                'comment': _0x2d6cdd.api.language.translatePlayer('biz.' + _0x10ffee) + ' - ' + _0x2d6cdd.api.getClothesTitle(_0x16ce6b, _0x10ffee, parseInt(_0x5d57f1[0x2]), parseInt(_0x5d57f1[0x3]))
              };
            });
          } else 'tattoo_shops' === _0x7df0bd && (_0x2328b5 = _0x2328b5.map(_0x161e77 => {
            let _0x50b7c5 = 'remove' === _0x161e77.comment ? _0x2d6cdd.api.language.translatePlayer('tattoo.remove') : _0x161e77.comment;

            if ('remove' !== _0x161e77.comment) {
              const _0x3a27d5 = _0x297875.Z[parseInt(_0x161e77.comment)].hashNameMale ?? _0x297875.Z[parseInt(_0x161e77.comment)].hashNameFemale;

              _0x50b7c5 = _0x2d6cdd.api.language.translatePlayer('tattoo.' + _0x297875.Z[parseInt(_0x161e77.comment)].zone) + ' - ' + _0x3a27d5;
            }

            return { ..._0x161e77,
              'comment': _0x50b7c5
            };
          }));

          _0x28d1fa.globalBrowser.emit('ipad_business_getTransactionsResult', JSON.stringify({
            'transactions': _0x2328b5
          }));
        }), _0x20bb61.events.add('ipad.business.getPricesData', () => {
          _0x6a0327.biz ? _0x11d442 || (_0x11d442 = true, _0x20bb61.events.callRemote('3008105414')) : _0x2d6cdd.api.longNotifyTrans('ipad.noBusiness', 'error');
        }), _0x20bb61.events.add('ipad.business.getPricesDataResult', (_0x2dae2a, _0x517195) => {
          _0x11d442 = false, _0x2dae2a && _0x28d1fa.globalBrowser.emit('ipad_business_getPricesDataResult', JSON.stringify({
            'prices': _0x2dae2a,
            'bizType': _0x517195
          }));
        }), _0x20bb61.events.add('ipad.business.setPrice', (_0x3e7259, _0x2cffc4, _0x1b9a28) => {
          _0x6a0327.biz ? _0x20bb61.events.callRemote('3999339888', _0x3e7259, _0x2cffc4, _0x1b9a28) : _0x2d6cdd.api.longNotifyTrans('ipad.noBusiness', 'error');
        }), _0x20bb61.events.add('ipad.business.setPriceResult', _0x7bb61d => {
          _0x28d1fa.globalBrowser.emit('ipad_business_setPriceResult', _0x7bb61d);
        }), _0x20bb61.events.add('ipad.business.payTax', (_0x5935ae, _0x37e0fb) => {
          _0x11d442 || (_0x6a0327.biz ? (_0x11d442 = true, _0x20bb61.events.callRemote('2163582270', _0x5935ae, _0x37e0fb)) : _0x2d6cdd.api.longNotifyTrans('ipad.noBusiness', 'error'));
        }), _0x20bb61.events.add('ipad.business.payTaxResult', (_0xe1dc9b, _0x3aa041) => {
          _0x11d442 = false, _0xe1dc9b && _0x28d1fa.globalBrowser.emit('ipad_business_payTaxResult', JSON.stringify({
            'type': _0xe1dc9b,
            'value': _0x3aa041
          }));
        }), _0x20bb61.events.add('ipad.business.getProductInfo', (_0x24003b, _0x3175c0) => {
          _0x11d442 || (_0x6a0327.biz ? (_0x11d442 = true, _0x20bb61.events.callRemote('3002275663', _0x24003b, _0x3175c0)) : _0x2d6cdd.api.longNotifyTrans('ipad.noBusiness', 'error'));
        }), _0x20bb61.events.add('ipad.business.getProductInfoResult', _0x20c8f6 => {
          _0x11d442 = false, _0x28d1fa.globalBrowser.emit('ipad_business_getProductInfoResult', JSON.stringify(_0x20c8f6));
        }), _0x20bb61.events.add('ipad.business.orderItem', (_0x36f8c0, _0x4b8940, _0x16d3be) => {
          _0x11d442 || (_0x6a0327.biz ? (_0x11d442 = true, _0x20bb61.events.callRemote('209638387', _0x36f8c0, _0x4b8940, _0x16d3be)) : _0x2d6cdd.api.longNotifyTrans('ipad.noBusiness', 'error'));
        }), _0x20bb61.events.add('ipad.business.orderItemResult', (_0x4ba32f, _0x3aadbf) => {
          _0x11d442 = false, _0x4ba32f && (_0x3aadbf ? _0x28d1fa.globalBrowser.emit('ipad_business_setMaterials', _0x4ba32f) : _0x28d1fa.globalBrowser.emit('ipad_business_orderItemResult', _0x4ba32f));
        });
      },
      0x884e: (_0x9a9f9, _0x373171, _0x455f21) => {
        'use strict';

        const a0_0x2f8bb1 = {
          _0x27d870: 0x14d2,
          _0x29c9bf: 0x1a5,
          _0xcf2fcf: 0x11bc,
          _0x2b0206: 0xb4a,
          _0x3a2b0e: 0x1b50
        };

        _0x455f21.r(_0x373171);

        var _0x4b1e09 = _0x455f21(0x12a76),
            _0x14962c = _0x455f21(0x161cd);

        _0x14962c.players.local;
        let _0x5eaf2c = false;
        _0x14962c.events.add('ipad.home.setDoorState', (_0x37e55c, _0x104117) => {
          _0x14962c.events.callRemote('2314430106', _0x37e55c, _0x104117);
        }), _0x14962c.events.add('ipad.home.evict', (_0x232711, _0x437a9d) => {
          _0x5eaf2c || (_0x5eaf2c = true, _0x14962c.events.callRemote('2275329531', _0x232711, _0x437a9d));
        }), _0x14962c.events.add('ipad.home.evictResult', _0x5e35fd => {
          _0x5eaf2c = false, _0x5e35fd && _0x4b1e09.globalBrowser.emit('ipad_home_evict', _0x5e35fd);
        }), _0x14962c.events.add('ipad.home.payTax', (_0x13338c, _0x2f4056) => {
          _0x5eaf2c || (_0x5eaf2c = true, _0x14962c.events.callRemote('1690194962', _0x13338c, _0x2f4056));
        }), _0x14962c.events.add('ipad.home.payTaxResult', _0x4395d2 => {
          _0x5eaf2c = false, _0x4395d2 && _0x4b1e09.globalBrowser.emit('ipad_home_payTax', _0x4395d2);
        }), _0x14962c.events.add('ipad.home.resetKey', _0x30bac1 => {
          _0x5eaf2c || (_0x5eaf2c = true, _0x14962c.events.callRemote('659007247', _0x30bac1));
        }), _0x14962c.events.add('ipad.home.resetKeyResult', () => {
          _0x5eaf2c = false;
        }), _0x14962c.events.add('ipad.home.setFamily', () => {
          _0x5eaf2c || (_0x5eaf2c = true, _0x14962c.events.callRemote('1542544337'));
        }), _0x14962c.events.add('ipad.home.setFamilyResult', _0x11e45e => {
          _0x5eaf2c = false, _0x11e45e && (_0x14962c.events.call('ipad.close'), _0x14962c.attachments.removeLocal(_0x14962c.game.joaat('tablet')));
        });
      },
      0xd275: (_0x4a72f1, _0x587160, _0x282928) => {
        _0x282928(0x884e), _0x282928(0xa51e), _0x282928(0xe84f), _0x282928(0x4c00);
      },
      0x14cc1: (_0x128ea4, _0x126cfd, _0x4f967c) => {
        'use strict';

        const a0_0x3104c5 = {
          _0x383885: 0x2488,
          _0x540635: 0x1a3
        },
              a0_0x23409e = {
          _0x40b6cc: 0x14d2,
          _0x2d047b: 0x1da5,
          _0x516324: 0x78b
        },
              a0_0x423283 = {
          _0x1bce0a: 0x1da5
        },
              a0_0x7e71bc = {
          _0x59c6e8: 0x84c
        },
              a0_0x1cb5c8 = {
          _0x53783e: 0x14d2
        },
              a0_0x3a454b = {
          _0x53cdfa: 0x1987,
          _0xab8343: 0x112d,
          _0x3a27d7: 0x535,
          _0x291856: 0x1349,
          _0x1bb57d: 0xbb1
        },
              a0_0x71c120 = {
          _0x1890a8: 0x2488,
          _0x2b2df4: 0x1a3,
          _0x4e0c79: 0xa53
        },
              a0_0x3869a7 = {
          _0x5b2488: 0x2488,
          _0x13f2c4: 0x1a3,
          _0x4d6eca: 0x1fee
        },
              a0_0x33e75c = {
          _0x2878cd: 0x14d2,
          _0x4f4316: 0x4db
        },
              a0_0xee0b46 = {
          _0x1a8b5e: 0x14d2,
          _0x1d5c7b: 0x1da5
        },
              a0_0x23f176 = {
          _0x28d42e: 0x757
        },
              a0_0x4ed8dc = {
          _0x507cf7: 0x14d2,
          _0x1e2227: 0x1da5
        };

        _0x4f967c.r(_0x126cfd);

        var _0x43be09 = _0x4f967c(0x12a76),
            _0x508310 = _0x4f967c(0x16a21),
            _0x537002 = _0x4f967c(0x161cd);

        let _0x409a72 = false;
        _0x537002.events.add('ipad.organization.access.getData', _0xe78828 => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('1017330870', _0xe78828));
        }), _0x537002.events.add('ipad.organization.access.getDataResult', (_0x130661, _0x38ecef, _0x101b03, _0x2cbf12, _0x1b7d51, _0x1d4ccb, _0x11fc1e) => {
          _0x409a72 = false, _0x38ecef && _0x43be09.globalBrowser.emit('ipad_organization_access_getDataResult', {
            'type': _0x130661,
            'ranks': _0x38ecef,
            'vehicles': _0x101b03,
            'craftData': _0x2cbf12,
            'access': _0x1b7d51,
            'isLeader': _0x1d4ccb,
            'rank': _0x11fc1e
          });
        }), _0x537002.events.add('ipad.organization.access.setRankAccess', (_0x295400, _0x5cfc6a, _0x1de2a2, _0x1b9996) => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('1704470563', _0x295400, _0x5cfc6a, _0x1de2a2, _0x1b9996));
        }), _0x537002.events.add('ipad.organization.access.setCraftAccess', (_0x1795bf, _0x184760) => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('2628792909', _0x1795bf, _0x184760));
        }), _0x537002.events.add('ipad.organization.access.setVehicleAccess', (_0x490458, _0x20752d, _0x59b51d) => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('3524976461', _0x490458, _0x20752d, _0x59b51d));
        }), _0x537002.events.add('ipad.organization.access.setVehiclePercent', (_0x3aa486, _0x60a5f3) => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('4033657546', _0x3aa486, _0x60a5f3));
        }), _0x537002.events.add('ipad.organization.access.getBackFamilyVehicle', (_0x14b8c5, _0x203a89) => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('4131962126', _0x14b8c5, _0x203a89));
        }), _0x537002.events.add('ipad.organization.access.getBackFamilyVehicleResult', _0xc80abb => {
          _0x409a72 = false, _0xc80abb && _0x43be09.globalBrowser.emit('ipad_organization_access_getBackFamilyVehicleResult', {
            'id': _0xc80abb
          });
        }), _0x537002.events.add('ipad.organization.access.getPropertyData', () => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('222984004'));
        }), _0x537002.events.add('ipad.organization.access.getPropertyDataResult', _0x4136f5 => {
          _0x409a72 = false, _0x4136f5 && _0x43be09.globalBrowser.emit('ipad_organization_access_getPropertyDataResult', {
            'propertyData': _0x4136f5
          });
        }), _0x537002.events.add('ipad.organization.access.setPropertyGPS', (_0x3af8f3, _0x1b34e2) => {
          _0x537002.events.call('gps.setPoint', JSON.stringify({
            'x': parseFloat(_0x4f967c.g[_0x3af8f3][_0x1b34e2].posX),
            'y': parseFloat(_0x4f967c.g[_0x3af8f3][_0x1b34e2].posY),
            'z': parseFloat(_0x4f967c.g[_0x3af8f3][_0x1b34e2].posZ),
            'title': _0x508310.api.language.translatePlayer('gps.waypoints.familyHouse')
          }));
        }), _0x537002.events.add('ipad.organization.access.setHouseLocked', _0x2b3dba => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('3867854340', _0x2b3dba));
        }), _0x537002.events.add('ipad.organization.access.createRank', _0x2c14df => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('2864912010', _0x2c14df));
        }), _0x537002.events.add('ipad.organization.access.createRankResult', (_0x38357f, _0x3317e7, _0xbea0ae) => {
          _0x409a72 = false, _0x38357f && _0x43be09.globalBrowser.emit('ipad_organization_access_createRankResult', {
            'id': _0x38357f,
            'rank': _0x3317e7,
            'name': _0xbea0ae
          });
        }), _0x537002.events.add('ipad.organization.access.removeRank', _0x4101bd => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('3125121675', _0x4101bd));
        }), _0x537002.events.add('ipad.organization.access.removeRankResult', _0xd69831 => {
          _0x409a72 = false, _0xd69831 && _0x43be09.globalBrowser.emit('ipad_organization_access_removeRankResult', {
            'ranks': _0xd69831
          });
        }), _0x537002.events.add('ipad.organization.access.renameRank', (_0x1f0f9f, _0x15258c) => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('14971436', _0x1f0f9f, _0x15258c));
        }), _0x537002.events.add('ipad.organization.access.renameRankResult', (_0x33b622, _0x52489f) => {
          _0x409a72 = false, _0x33b622 && _0x43be09.globalBrowser.emit('ipad_organization_access_renameRankResult', {
            'rank': _0x33b622,
            'name': _0x52489f
          });
        }), _0x537002.events.add('ipad.organization.access.swapRanks', (_0x236a23, _0x5a79b3) => {
          _0x409a72 || (_0x409a72 = true, _0x537002.events.callRemote('4042223531', _0x236a23, _0x5a79b3));
        }), _0x537002.events.add('ipad.organization.access.swapRanksResult', _0x1d7c1d => {
          _0x409a72 = false, _0x1d7c1d && _0x43be09.globalBrowser.emit('ipad_organization_access_removeRankResult', {
            'ranks': _0x1d7c1d
          });
        }), _0x537002.events.add('ipad.organization.access.reset', () => {
          _0x409a72 = false;
        });
      },
      0x11271: (_0x45d126, _0x3e8ae6, _0x1febb9) => {
        'use strict';

        const a0_0x392e25 = {
          _0x20afc4: 0x2488,
          _0x179821: 0x1a3
        },
              a0_0x5f07e5 = {
          _0x3a214e: 0x14d2,
          _0x35f0b0: 0x1005
        };

        _0x1febb9.r(_0x3e8ae6);

        var _0xa20084 = _0x1febb9(0x12a76),
            _0x95328b = _0x1febb9(0x161cd);

        let _0x5bea5b = false;
        _0x95328b.events.add('ipad.organization.balance.getData', (_0x176a50, _0x3b33ee, _0x1c9b60, _0x143c73, _0x3fc400) => {
          _0x5bea5b || (_0x5bea5b = true, _0x95328b.events.callRemote('1916253111', _0x176a50, _0x3b33ee, _0x1c9b60, _0x143c73, _0x3fc400));
        }), _0x95328b.events.add('ipad.organization.balance.getDataResult', (_0x4dd183, _0x3d2847, _0x4753ec, _0x396f56) => {
          _0x5bea5b = false, _0x3d2847 && (_0x396f56 = parseInt(_0x396f56, 0x24), _0xa20084.globalBrowser.emit('ipad_organization_balance_getDataResult', {
            'page': _0x4dd183,
            'list': _0x3d2847,
            'total': _0x4753ec,
            'balance': _0x396f56
          }));
        }), _0x95328b.events.add('ipad.organization.balance.action', (_0x3a96e3, _0x4c9f90, _0x2ee8f2) => {
          _0x5bea5b || (_0x5bea5b = true, _0x95328b.events.callRemote('2604922433', _0x3a96e3, _0x4c9f90, _0x2ee8f2));
        }), _0x95328b.events.add('ipad.organization.balance.actionResult', (_0x5956ea, _0x36fb1b) => {
          _0x5bea5b = false, _0x36fb1b && (_0x5956ea = parseInt(_0x5956ea, 0x24), _0xa20084.globalBrowser.emit('ipad_organization_balance_actionResult', {
            'money': _0x5956ea,
            'log': _0x36fb1b
          }));
        });
      },
      0xbdb9: (_0x10e4d2, _0x4a0586, _0x4094c7) => {
        'use strict';

        const a0_0x4a3055 = {
          _0x81896c: 0x182c
        };

        _0x4094c7.r(_0x4a0586);

        var _0x79aea8 = _0x4094c7(0x12a76),
            _0x4a36b2 = _0x4094c7(0x161cd);

        let _0x105fe1 = false;
        _0x4a36b2.events.add('ipad.organization.bonuses.getData', (_0x88e6e9, _0x284473, _0x1771c9, _0x222e7e, _0x596a61) => {
          _0x105fe1 || (_0x105fe1 = true, _0x4a36b2.events.callRemote('2011973256', _0x88e6e9, _0x284473, _0x1771c9, _0x222e7e, _0x596a61));
        }), _0x4a36b2.events.add('ipad.organization.bonuses.getDataResult', (_0x4cc563, _0x1b9be4, _0xe6f93f) => {
          _0x105fe1 = false, _0x1b9be4 && _0x79aea8.globalBrowser.emit('ipad_organization_bonuses_getDataResult', {
            'page': _0x4cc563,
            'list': _0x1b9be4,
            'total': _0xe6f93f
          });
        });
      },
      0xb570: (_0x17eee2, _0x951231, _0x4f60c3) => {
        'use strict';

        const a0_0xa5b658 = {
          _0x16af48: 0x1a3
        },
              a0_0x531490 = {
          _0x445166: 0xe6d,
          _0x16596b: 0x1a3
        },
              a0_0x354c03 = {
          _0x5aa4fb: 0x1ce9,
          _0x436c0c: 0x1447,
          _0x243860: 0x1447,
          _0x168ece: 0x1ce9,
          _0x38ba44: 0x1447,
          _0x5a2b33: 0x1fe8,
          _0x40d316: 0x1d2,
          _0x446809: 0x43f
        };

        _0x4f60c3.r(_0x951231);

        var _0x280f6f = _0x4f60c3(0xc833),
            _0x4e3a1e = _0x4f60c3.n(_0x280f6f),
            _0x299b30 = _0x4f60c3(0x12a76),
            _0x2848ac = _0x4f60c3(0x161cd);

        let _0xc4de92 = false;
        _0x2848ac.events.add('ipad.organization.contracts.getData', () => {
          _0xc4de92 || (_0xc4de92 = true, _0x2848ac.events.callRemote('1965436716'));
        }), _0x2848ac.events.add('ipad.organization.contracts.getDataResult', (_0x4c16e8, _0x198956, _0x59aa9a) => {
          if (_0xc4de92 = false, null != _0x4c16e8) {
            let _0x48369b = new Set();

            const _0x24eb5d = [];
            Object.keys(_0x4e3a1e().contracts).forEach(_0x37ec0e => {
              (_0x59aa9a && _0x59aa9a[_0x37ec0e] && !_0x59aa9a[_0x37ec0e].finishedAt || !_0x4e3a1e().contracts[_0x37ec0e].minReputation && !_0x4e3a1e().contracts[_0x37ec0e].maxReputation || _0x4e3a1e().contracts[_0x37ec0e].minReputation && _0x4c16e8 >= _0x4e3a1e().contracts[_0x37ec0e].minReputation || _0x4e3a1e().contracts[_0x37ec0e].maxReputation && _0x4c16e8 <= _0x4e3a1e().contracts[_0x37ec0e].maxReputation) && (_0x24eb5d.push(_0x4e3a1e().contracts[_0x37ec0e]), _0x48369b.add(_0x4e3a1e().bots[_0x4e3a1e().contracts[_0x37ec0e].botId - 0x1]));
            }), _0x299b30.globalBrowser.emit('ipad_organization_contracts_getDataResult', {
              'reputation': _0x4c16e8,
              'exp': _0x198956,
              'contracts': _0x24eb5d,
              'bots': [..._0x48369b],
              'contractsData': _0x59aa9a
            });
          }
        }), _0x2848ac.events.add('ipad.organization.contracts.startContract', _0x535f68 => {
          _0xc4de92 || (_0xc4de92 = true, _0x2848ac.events.callRemote('2099421860', _0x535f68));
        }), _0x2848ac.events.add('ipad.organization.contracts.startContractResult', (_0x4f8b46, _0x249c71) => {
          _0xc4de92 = false, _0x4f8b46 && (_0x249c71 = parseInt(_0x249c71, 0x24), _0x299b30.globalBrowser.emit('ipad_organization_contracts_startContractResult', {
            'id': _0x4f8b46,
            'money': _0x249c71
          }));
        });
      },
      0x597f: (_0x5526e0, _0x2895c6, _0x4eb461) => {
        'use strict';

        const a0_0x50275d = {
          _0x4c2f85: 0x2488,
          _0x1892d7: 0x186f
        };

        _0x4eb461.r(_0x2895c6);

        var _0x452d5c = _0x4eb461(0x12a76),
            _0x4d38cc = _0x4eb461(0x161cd);

        let _0x344446 = false;
        _0x4d38cc.events.add('ipad.organization.control.getData', () => {
          _0x344446 || (_0x344446 = true, _0x4d38cc.events.callRemote('2758363346'));
        }), _0x4d38cc.events.add('ipad.organization.control.getDataResult', _0x332895 => {
          _0x344446 = false, _0x332895 && _0x452d5c.globalBrowser.emit('ipad_organization_control_getDataResult', {
            'control': _0x332895
          });
        });
      },
      0xd621: (_0x4f8005, _0x410d88, _0xa05704) => {
        'use strict';

        const a0_0x4e76ca = {
          _0x445c08: 0x1a5b
        },
              a0_0x3cd169 = {
          _0x3d6ef9: 0x14d2,
          _0x36f86f: 0x1da5,
          _0x57ba62: 0x1ca1
        },
              a0_0x50bf3c = {
          _0x559d3f: 0x2488,
          _0x37c0c4: 0x1a3
        },
              a0_0x4cf8a3 = {
          _0x1a3e05: 0x2488
        },
              a0_0x1a7a95 = {
          _0x372a7e: 0x2488,
          _0x15e063: 0x1a3
        },
              a0_0x3c408c = {
          _0x1e7555: 0x14d2
        };

        _0xa05704.r(_0x410d88);

        var _0x3bc355 = _0xa05704(0x12a76),
            _0x3ec316 = _0xa05704(0x161cd);

        let _0x437098 = false;
        _0x3ec316.events.add('ipad.organization.database.getPlayersData', (_0x545bfc, _0x42b259, _0x3d563c, _0x511be9) => {
          _0x437098 || (_0x437098 = true, _0x3ec316.events.callRemote('3988200394', _0x545bfc, _0x42b259, _0x3d563c, _0x511be9));
        }), _0x3ec316.events.add('ipad.organization.database.getPlayersDataResult', (_0x1ed2b0, _0x354bc3, _0x4f6f94, _0x29b6d7, _0x510ac3) => {
          _0x437098 = false, _0x354bc3 && _0x3bc355.globalBrowser.emit('ipad_organization_database_getPlayersDataResult', {
            'page': _0x1ed2b0,
            'list': _0x354bc3,
            'total': _0x4f6f94,
            'leaderDate': _0x29b6d7,
            'leaderDays': _0x510ac3
          });
        }), _0x3ec316.events.add('ipad.organization.database.getVehiclesData', (_0x206548, _0x58fcc1, _0x268412, _0x558247) => {
          _0x437098 || (_0x437098 = true, _0x3ec316.events.callRemote('2607039882', _0x206548, _0x58fcc1, _0x268412, _0x558247));
        }), _0x3ec316.events.add('ipad.organization.database.getVehiclesDataResult', (_0x12aec9, _0x1f94bd, _0x23f496, _0x42e140, _0x8d1374) => {
          _0x437098 = false, _0x1f94bd && _0x3bc355.globalBrowser.emit('ipad_organization_database_getVehiclesDataResult', {
            'page': _0x12aec9,
            'list': _0x1f94bd,
            'total': _0x23f496,
            'leaderDate': _0x42e140,
            'leaderDays': _0x8d1374
          });
        }), _0x3ec316.events.add('ipad.organization.database.getPlayerWantedLogs', (_0x1e2b3e, _0x3d1378) => {
          _0x437098 || (_0x437098 = true, _0x3ec316.events.callRemote('2895739093', _0x1e2b3e, _0x3d1378));
        }), _0x3ec316.events.add('ipad.organization.database.getPlayerWantedLogsResult', (_0x13f743, _0x1e9560, _0xa76889) => {
          _0x437098 = false, _0x1e9560 && _0x3bc355.globalBrowser.emit('ipad_organization_database_getPlayerWantedLogsResult', {
            'page': _0x13f743,
            'list': _0x1e9560,
            'total': _0xa76889
          });
        }), _0x3ec316.events.add('ipad.organization.database.getPlayerArrestsLogs', (_0x22f31c, _0x12fabe) => {
          _0x437098 || (_0x437098 = true, _0x3ec316.events.callRemote('82920838', _0x22f31c, _0x12fabe));
        }), _0x3ec316.events.add('ipad.organization.database.getPlayerArrestsLogsResult', (_0x38b697, _0x5119c0, _0x2b928e) => {
          _0x437098 = false, _0x5119c0 && _0x3bc355.globalBrowser.emit('ipad_organization_database_getPlayerArrestsLogsResult', {
            'page': _0x38b697,
            'list': _0x5119c0,
            'total': _0x2b928e
          });
        }), _0x3ec316.events.add('ipad.organization.database.getPlayerTicketsLogs', (_0xd4a85e, _0x2ad1c1) => {
          _0x437098 || (_0x437098 = true, _0x3ec316.events.callRemote('3394616545', _0xd4a85e, _0x2ad1c1));
        }), _0x3ec316.events.add('ipad.organization.database.getPlayerTicketsLogsResult', (_0x4d9b03, _0x488584, _0x7df462) => {
          _0x437098 = false, _0x488584 && _0x3bc355.globalBrowser.emit('ipad_organization_database_getPlayerTicketsLogsResult', {
            'page': _0x4d9b03,
            'list': _0x488584,
            'total': _0x7df462
          });
        });
      },
      0x95b3: (_0x56239b, _0x36f2a5, _0x21c264) => {
        'use strict';

        const a0_0x4b51b2 = {
          _0x313b03: 0x2658
        },
              a0_0x4ac48d = {
          _0x2d78c2: 0x14d2,
          _0x175627: 0x5d5
        },
              a0_0x431f5f = {
          _0x2acdc6: 0x2488
        },
              a0_0x46c30e = {
          _0x5d2bef: 0x1da5
        },
              a0_0x5f54c9 = {
          _0x280889: 0x14d2
        };

        _0x21c264.r(_0x36f2a5);

        var _0x34e930 = _0x21c264(0x12a76),
            _0x48d753 = _0x21c264(0x161cd);

        let _0x4f015c = false;
        _0x48d753.events.add('ipad.organization.deliveries.getData', (_0x1146de, _0x584ff9, _0x52b348, _0x26e508) => {
          _0x4f015c || (_0x4f015c = true, _0x48d753.events.callRemote('3353082981', _0x1146de, _0x584ff9, _0x52b348, _0x26e508));
        }), _0x48d753.events.add('ipad.organization.deliveries.getDataResult', (_0x5823f3, _0x3d5a38, _0x1e9da5, _0x3afe1a, _0x4a12ee) => {
          _0x4f015c = false, _0x3d5a38 && _0x34e930.globalBrowser.emit('ipad_organization_deliveries_getDataResult', {
            'page': _0x5823f3,
            'list': _0x3d5a38,
            'total': _0x1e9da5,
            'materialsConfig': _0x3afe1a,
            'materials': _0x4a12ee
          });
        }), _0x48d753.events.add('ipad.organization.deliveries.getMapData', () => {
          _0x4f015c || (_0x4f015c = true, _0x48d753.events.callRemote('1596093758'));
        }), _0x48d753.events.add('ipad.organization.deliveries.getMapDataResult', (_0x3f554d, _0x2ed543) => {
          _0x4f015c = false, _0x3f554d && _0x34e930.globalBrowser.emit('ipad_organization_deliveries_getMapDataResult', {
            'orders': _0x3f554d,
            'materials': _0x2ed543
          });
        }), _0x48d753.events.add('ipad.organization.deliveries.orderMaterialsToFraction', (_0x37828c, _0x2de466) => {
          _0x4f015c || (_0x4f015c = true, _0x48d753.events.callRemote('3689234070', _0x37828c, _0x2de466));
        }), _0x48d753.events.add('ipad.organization.deliveries.orderMaterialsToFractionResult', (_0x11dd20, _0x3f0399) => {
          _0x4f015c = false, _0x11dd20 && _0x34e930.globalBrowser.emit('ipad_organization_deliveries_orderMaterialsToFractionResult', {
            'row': _0x11dd20,
            'money': _0x3f0399
          });
        }), _0x48d753.events.add('ipad.organization.deliveries.orderMaterialsToArmy', (_0x1a7713, _0x3724dd, _0x1e681e, _0x252940, _0xd0169c) => {
          _0x4f015c || (_0x4f015c = true, _0x48d753.events.callRemote('3487634973', _0x1a7713, _0x3724dd, _0x1e681e, _0x252940, _0xd0169c));
        }), _0x48d753.events.add('ipad.organization.deliveries.orderMaterialsToArmyResult', (_0x557cf7, _0x52af13) => {
          _0x4f015c = false, _0x557cf7 && _0x34e930.globalBrowser.emit('ipad_organization_deliveries_orderMaterialsToArmyResult', {
            'order': _0x557cf7,
            'money': _0x52af13
          });
        });
      },
      0xd763: (_0x22e75c, _0x5331c2, _0x3af79b) => {
        'use strict';

        const a0_0x5f3760 = {
          _0x3fead2: 0x1a5,
          _0x13b52f: 0x11bc,
          _0x2ca12b: 0xb4a,
          _0xf23b6b: 0x1d66,
          _0x50d59a: 0x1b50
        },
              a0_0x392d4c = {
          _0x59e221: 0x14d2,
          _0x22b490: 0x14e6
        },
              a0_0x4b1bb4 = {
          _0x3e26f5: 0x2488
        };

        _0x3af79b.r(_0x5331c2);

        var _0x54672a = _0x3af79b(0x12a76),
            _0x1c3e69 = _0x3af79b(0x161cd);

        let _0x3c910e = false;
        _0x1c3e69.events.add('ipad.organization.familyInfo.getData', () => {
          _0x3c910e || (_0x3c910e = true, _0x1c3e69.events.callRemote('2569557074'));
        }), _0x1c3e69.events.add('ipad.organization.familyInfo.getDataResult', (_0x1181b7, _0x5db203, _0x24f263, _0x39b851) => {
          _0x3c910e = false, _0x1181b7 && _0x54672a.globalBrowser.emit('ipad_organization_familyInfo_getDataResult', {
            'family': _0x1181b7,
            'garage': _0x5db203,
            'paidUntil': _0x24f263,
            'dayRoyalty': _0x39b851
          });
        }), _0x1c3e69.events.add('ipad.organization.familyInfo.leaveFamily', () => {
          _0x3c910e || (_0x3c910e = true, _0x1c3e69.events.callRemote('1032780556'));
        }), _0x1c3e69.events.add('ipad.organization.familyInfo.leaveFamilyResult', _0x2ff279 => {
          _0x3c910e = false, _0x2ff279 && (_0x1c3e69.events.call('ipad.close'), _0x1c3e69.attachments.removeLocal(_0x1c3e69.game.joaat('tablet')));
        }), _0x1c3e69.events.add('ipad.organization.familyInfo.removeFamily', () => {
          _0x3c910e || (_0x3c910e = true, _0x1c3e69.events.callRemote('4100489327'));
        }), _0x1c3e69.events.add('ipad.organization.familyInfo.removeFamilyResult', _0x16f626 => {
          _0x3c910e = false, _0x16f626 && (_0x1c3e69.events.call('ipad.close'), _0x1c3e69.attachments.removeLocal(_0x1c3e69.game.joaat('tablet')));
        }), _0x1c3e69.events.add('ipad.organization.familyInfo.payFamilyTax', _0x1b2452 => {
          _0x3c910e || (_0x3c910e = true, _0x1c3e69.events.callRemote('1110411804', _0x1b2452));
        }), _0x1c3e69.events.add('ipad.organization.familyInfo.payFamilyTaxResult', _0x53ddb5 => {
          _0x3c910e = false, _0x53ddb5 && _0x54672a.globalBrowser.emit('ipad_organization_familyInfo_payFamilyTaxResult', {
            'paidUntil': _0x53ddb5
          });
        });
      },
      0x9fb2: (_0x14fb3b, _0x290148, _0x3da035) => {
        'use strict';

        const a0_0x1326c6 = {
          _0x30f603: 0xd1d
        },
              a0_0xe596cd = {
          _0x3b94e7: 0x2488,
          _0x4a6161: 0x170c
        },
              a0_0x539c82 = {
          _0x37f82c: 0x14d2,
          _0x214c64: 0x1da5,
          _0x8da3f0: 0x262f
        },
              a0_0x39a1e0 = {
          _0x44b962: 0x2488,
          _0x15c90a: 0x2179
        };

        _0x3da035.r(_0x290148);

        var _0x3f6412 = _0x3da035(0x12a76),
            _0xaad710 = _0x3da035(0x161cd);

        let _0xa3f12e = false;
        _0xaad710.events.add('ipad.organization.financing.getData', () => {
          _0xa3f12e || (_0xa3f12e = true, _0xaad710.events.callRemote('27991633'));
        }), _0xaad710.events.add('ipad.organization.financing.getDataResult', _0x2d6c76 => {
          _0xa3f12e = false, _0x2d6c76 && _0x3f6412.globalBrowser.emit('ipad_organization_financing_getDataResult', {
            'fractions': _0x2d6c76
          });
        }), _0xaad710.events.add('ipad.organization.financing.giveMoney', (_0x5e1382, _0x44ccd7, _0x31b431) => {
          _0xa3f12e || (_0xa3f12e = true, _0xaad710.events.callRemote('4239245699', _0x5e1382, _0x44ccd7, _0x31b431));
        }), _0xaad710.events.add('ipad.organization.financing.giveMoneyResult', (_0x23feec, _0x136ba6, _0x31e81e) => {
          _0xa3f12e = false, null != _0x23feec && (_0x23feec = parseInt(_0x23feec, 0x24), _0x136ba6 = parseInt(_0x136ba6, 0x24), _0x3f6412.globalBrowser.emit('ipad_organization_financing_giveMoneyResult', {
            'myFractionMoney': _0x23feec,
            'otherFractionMoney': _0x136ba6,
            'fractionId': _0x31e81e
          }));
        }), _0xaad710.events.add('ipad.organization.financing.getTransactionsData', (_0x53d320, _0x4d2c9f, _0x3ea648, _0x587325) => {
          _0xa3f12e || (_0xa3f12e = true, _0xaad710.events.callRemote('2914623878', _0x53d320, _0x4d2c9f, _0x3ea648, _0x587325));
        }), _0xaad710.events.add('ipad.organization.financing.getTransactionsDataResult', (_0x51e531, _0x4c6ad6, _0x184ade) => {
          _0xa3f12e = false, _0x4c6ad6 && _0x3f6412.globalBrowser.emit('ipad_organization_financing_getTransactionsDataResult', {
            'page': _0x51e531,
            'list': _0x4c6ad6,
            'total': _0x184ade
          });
        }), _0xaad710.events.add('ipad.organization.financing.getBonusesData', (_0x45aec7, _0x42cb14, _0x176408, _0x3df9b0) => {
          _0xa3f12e || (_0xa3f12e = true, _0xaad710.events.callRemote('2009506592', _0x45aec7, _0x42cb14, _0x176408, _0x3df9b0));
        }), _0xaad710.events.add('ipad.organization.financing.getBonusesDataResult', (_0x3e508f, _0x23d3fb, _0x3334bf) => {
          _0xa3f12e = false, _0x23d3fb && _0x3f6412.globalBrowser.emit('ipad_organization_financing_getBonusesDataResult', {
            'page': _0x3e508f,
            'list': _0x23d3fb,
            'total': _0x3334bf
          });
        });
      },
      0xf3ed: (_0x4db59e, _0x50de44, _0x3b98f5) => {
        'use strict';

        const a0_0x5040f3 = {
          _0x5aa080: 0x2488,
          _0x5b95d6: 0x1a3,
          _0x5b9dc9: 0x4ea
        },
              a0_0x10a591 = {
          _0x20c02e: 0x14d2,
          _0x4358b2: 0x1da5,
          _0x7d9812: 0x1ae7
        };

        _0x3b98f5.r(_0x50de44);

        var _0x400c62 = _0x3b98f5(0x12a76),
            _0x3236ec = _0x3b98f5(0x161cd);

        let _0x58ebf1 = false;
        _0x3236ec.events.add('ipad.organization.fines.getData', (_0x186098, _0x9a0b8, _0x4e3fb1, _0x2281d0, _0x545577) => {
          _0x58ebf1 || (_0x58ebf1 = true, _0x3236ec.events.callRemote('1536952545', _0x186098, _0x9a0b8, _0x4e3fb1, _0x2281d0, _0x545577));
        }), _0x3236ec.events.add('ipad.organization.fines.getDataResult', (_0x143395, _0xc29388, _0x4501bb) => {
          _0x58ebf1 = false, _0xc29388 && _0x400c62.globalBrowser.emit('ipad_organization_fines_getDataResult', {
            'page': _0x143395,
            'list': _0xc29388,
            'total': _0x4501bb
          });
        });
      },
      0x4c00: (_0xb98321, _0x3d2909, _0x5d8d22) => {
        _0x5d8d22(0x326f), _0x5d8d22(0x14f60), _0x5d8d22(0xd621), _0x5d8d22(0x36c9), _0x5d8d22(0x11271), _0x5d8d22(0x8ad5), _0x5d8d22(0x14cc1), _0x5d8d22(0x9fb2), _0x5d8d22(0xbdb9), _0x5d8d22(0x597f), _0x5d8d22(0xf3ed), _0x5d8d22(0x95b3), _0x5d8d22(0xb570), _0x5d8d22(0xd763);
      },
      0x326f: (_0x138489, _0x212158, _0xaa4e5b) => {
        'use strict';

        const a0_0x3892bd = {
          _0x5f0d43: 0x2488,
          _0x49f26a: 0xb50
        },
              a0_0x4f8a2b = {
          _0x35ec1e: 0x1bf7
        };

        _0xaa4e5b.r(_0x212158);

        var _0x5206a3 = _0xaa4e5b(0x12a76),
            _0x24c4b9 = _0xaa4e5b(0x161cd);

        let _0xaaaf38 = false;
        _0x24c4b9.events.add('ipad.organization.members.getData', (_0xca2ab0, _0x3d1a01, _0x310895, _0x426229, _0x301f2d) => {
          _0xaaaf38 || (_0xaaaf38 = true, _0x24c4b9.events.callRemote('1507723913', _0xca2ab0, _0x3d1a01, _0x310895, _0x426229, _0x301f2d));
        }), _0x24c4b9.events.add('ipad.organization.members.getDataResult', (_0x2a9dbd, _0x3e7eac, _0x41741d, _0x27a1e7, _0x48caca) => {
          _0xaaaf38 = false, _0x3e7eac && _0x5206a3.globalBrowser.emit('ipad_organization_members_getDataResult', {
            'page': _0x2a9dbd,
            'list': _0x3e7eac,
            'total': _0x41741d,
            'leaderDate': _0x27a1e7,
            'leaderDays': _0x48caca
          });
        });
      },
      0x14f60: (_0x4a3a48, _0x51a136, _0x52e475) => {
        'use strict';

        const a0_0x4418aa = {
          _0x4daea3: 0x2488,
          _0x21c26f: 0x1a3
        },
              a0_0x5067d1 = {
          _0x2a5db5: 0x1da5,
          _0x39892a: 0xc61
        },
              a0_0x41e053 = {
          _0x4ad027: 0x351
        },
              a0_0x4c1fd3 = {
          _0x39fbc6: 0x14d2,
          _0x16438c: 0x1ce1
        },
              a0_0x51ffd2 = {
          _0x12efd0: 0x1a3,
          _0x47b130: 0x154b
        },
              a0_0x3e56fc = {
          _0x287085: 0x25fa
        };

        _0x52e475.r(_0x51a136);

        var _0x594f48 = _0x52e475(0x12a76),
            _0x19140e = _0x52e475(0x161cd);

        let _0x1f4913 = false;
        _0x19140e.events.add('ipad.organization.player.getHistoryData', (_0x3bf2d0, _0xf04706, _0x15775a, _0x1c2507) => {
          _0x1f4913 || (_0x1f4913 = true, _0x19140e.events.callRemote('2934267113', _0x3bf2d0, _0xf04706, _0x15775a, _0x1c2507));
        }), _0x19140e.events.add('ipad.organization.player.getHistoryDataResult', (_0x12d645, _0x31a5cb, _0x3b5df3, _0x4c4e1f, _0x337a57) => {
          _0x1f4913 = false, _0x31a5cb && _0x594f48.globalBrowser.emit('ipad_organization_player_getHistoryDataResult', {
            'page': _0x12d645,
            'list': _0x31a5cb,
            'total': _0x3b5df3,
            'memberId': _0x4c4e1f,
            'invitedBy': _0x337a57
          });
        }), _0x19140e.events.add('ipad.organization.player.giveRank', (_0x13d7cc, _0x414aa7, _0x14978a, _0x3914d7, _0x3d9b4d) => {
          _0x1f4913 || (_0x1f4913 = true, _0x19140e.events.callRemote('585404337', _0x13d7cc, _0x414aa7, _0x14978a, _0x3914d7, _0x3d9b4d));
        }), _0x19140e.events.add('ipad.organization.player.giveRankResult', (_0x18222d, _0x124682, _0xeff96b, _0x40b40b, _0x1f94d5, _0x2e02f9, _0x20c932) => {
          _0x1f4913 = false, _0x18222d && _0x594f48.globalBrowser.emit('ipad_organization_player_giveRankResult', {
            'logId': _0x18222d,
            'memberId': _0x124682,
            'rank': _0xeff96b,
            'action': _0x40b40b,
            'args': _0x1f94d5,
            'comment': _0x2e02f9,
            'date': _0x20c932
          });
        }), _0x19140e.events.add('ipad.organization.player.uninvite', (_0x3700d9, _0x2687c1, _0x4fdf5a) => {
          _0x1f4913 || (_0x1f4913 = true, _0x19140e.events.callRemote('4143722648', _0x3700d9, _0x2687c1, _0x4fdf5a));
        }), _0x19140e.events.add('ipad.organization.player.uninviteResult', (_0x5dfba3, _0x55922a, _0x2e8d2a, _0x37f0c2, _0x263bbe, _0x3f0857, _0x7271a) => {
          _0x1f4913 = false, _0x5dfba3 && _0x594f48.globalBrowser.emit('ipad_organization_player_uninviteResult', {
            'logId': _0x5dfba3,
            'memberId': _0x55922a,
            'rank': _0x2e8d2a,
            'action': _0x37f0c2,
            'args': _0x263bbe,
            'comment': _0x3f0857,
            'date': _0x7271a
          });
        }), _0x19140e.events.add('ipad.organization.player.changeWarns', (_0x2856d7, _0x56d174, _0x5eab34) => {
          _0x1f4913 || (_0x1f4913 = true, _0x19140e.events.callRemote('3499237897', _0x2856d7, _0x56d174, _0x5eab34));
        }), _0x19140e.events.add('ipad.organization.player.changeWarnsResult', (_0x4e059b, _0x27795f, _0x16d287, _0x2f27f4, _0x5dbe2b, _0x5cf24f, _0x22525b, _0x4ec849, _0x125b64) => {
          _0x1f4913 = false, _0x4e059b && _0x594f48.globalBrowser.emit('ipad_organization_player_changeWarnsResult', {
            'logId': _0x4e059b,
            'memberId': _0x27795f,
            'rank': _0x16d287,
            'action': _0x2f27f4,
            'args': _0x5dbe2b,
            'comment': _0x5cf24f,
            'date': _0x22525b,
            'fwarns': _0x4ec849,
            'uninvite': _0x125b64
          });
        }), _0x19140e.events.add('ipad.organization.player.award', (_0x2dff35, _0x3ada73, _0x309751, _0x3e36d8) => {
          _0x1f4913 || (_0x1f4913 = true, _0x19140e.events.callRemote('3416936436', _0x2dff35, _0x3ada73, _0x309751, _0x3e36d8));
        }), _0x19140e.events.add('ipad.organization.player.awardResult', (_0x176c2e, _0x51405d, _0x39d402, _0x5d87fc, _0x4ffb68, _0x1aa451, _0x4e3734) => {
          _0x1f4913 = false, _0x176c2e && _0x594f48.globalBrowser.emit('ipad_organization_player_awardResult', {
            'logId': _0x176c2e,
            'memberId': _0x51405d,
            'rank': _0x39d402,
            'action': _0x5d87fc,
            'args': _0x4ffb68,
            'comment': _0x1aa451,
            'date': _0x4e3734
          });
        });
      },
      0x36c9: (_0x577602, _0x1afddc, _0x93aef4) => {
        'use strict';

        const a0_0x171ff8 = {
          _0x159386: 0x1da5,
          _0x97838a: 0x176d
        },
              a0_0x121d34 = {
          _0x37dff6: 0x198b
        };

        _0x93aef4.r(_0x1afddc);

        var _0x59b2f2 = _0x93aef4(0x12a76),
            _0x280c14 = _0x93aef4(0x161cd);

        let _0x18ea4c = false;
        _0x280c14.events.add('ipad.organization.store.getLogsData', (_0x451c6d, _0x156c45, _0x508c91, _0x444fe6, _0x5b7915, _0x5bb6ca) => {
          _0x18ea4c || (_0x18ea4c = true, _0x280c14.events.callRemote('2176276533', _0x451c6d, _0x156c45, _0x508c91, _0x444fe6, _0x5b7915, _0x5bb6ca));
        }), _0x280c14.events.add('ipad.organization.store.getLogsDataResult', (_0x3a5894, _0x412ec3, _0x3f0403, _0x366756) => {
          _0x18ea4c = false, _0x412ec3 && _0x59b2f2.globalBrowser.emit('ipad_organization_store_getLogsDataResult', {
            'page': _0x3a5894,
            'list': _0x412ec3,
            'total': _0x3f0403,
            'materials': _0x366756
          });
        }), _0x280c14.events.add('ipad.organization.store.getEquipment', _0x48aa0c => {
          _0x18ea4c || (_0x18ea4c = true, _0x280c14.events.callRemote('4237895255', _0x48aa0c));
        }), _0x280c14.events.add('ipad.organization.store.getEquipmentResult', (_0x1f42d3, _0x260f91, _0x3cb7fd) => {
          _0x18ea4c = false, _0x260f91 && _0x59b2f2.globalBrowser.emit('ipad_organization_store_getEquipmentResult', {
            'materials': _0x1f42d3,
            'weapons': _0x260f91,
            'others': _0x3cb7fd
          });
        });
      },
      0x8ad5: (_0x542fc9, _0x44bd11, _0x965d3d) => {
        'use strict';

        const a0_0x5642ca = {
          _0x43fbab: 0x2488,
          _0x1a8925: 0x2241
        },
              a0_0x1902ba = {
          _0x40133f: 0x14d2,
          _0x544842: 0x1da5
        },
              a0_0x5f0457 = {
          _0x1d4570: 0x14d2,
          _0x1a1315: 0x1e59
        };

        _0x965d3d.r(_0x44bd11);

        var _0x389576 = _0x965d3d(0x12a76),
            _0x10f67d = _0x965d3d(0x161cd);

        let _0x52572a = false;
        _0x10f67d.events.add('ipad.organization.taxation.getData', () => {
          _0x52572a || (_0x52572a = true, _0x10f67d.events.callRemote('4485222'));
        }), _0x10f67d.events.add('ipad.organization.taxation.getDataResult', _0x4e1281 => {
          _0x52572a = false, _0x389576.globalBrowser.emit('ipad_organization_taxation_getDataResult', {
            'categories': _0x4e1281
          });
        }), _0x10f67d.events.add('ipad.organization.taxation.setTax', (_0x3edc0f, _0x262d75) => {
          _0x52572a || (_0x52572a = true, _0x10f67d.events.callRemote('1541739352', _0x3edc0f, _0x262d75));
        }), _0x10f67d.events.add('ipad.organization.taxation.setTaxResult', (_0x3dc6b7, _0x584b94) => {
          _0x52572a = false, _0x389576.globalBrowser.emit('ipad_organization_taxation_setTaxResult', {
            'category': _0x3dc6b7,
            'tax': _0x584b94
          });
        });
      },
      0xe84f: (_0x385828, _0x89277c, _0x481ccf) => {
        'use strict';

        const a0_0x3f47bf = {
          _0x5a913a: 0x11d9
        },
              a0_0x2b12e6 = {
          _0x3037b8: 0x14d2,
          _0x20c855: 0x1da5,
          _0x54d8d5: 0xc86
        };

        _0x481ccf.r(_0x89277c);

        var _0x14f288 = _0x481ccf(0x12a76),
            _0x1aa64f = _0x481ccf(0x161cd);

        const _0x42e2d6 = _0x1aa64f.players.local;
        let _0x110e20 = false;
        _0x1aa64f.events.add('ipad.organization.getRanks', _0x391bc5 => {
          _0x110e20 || (_0x110e20 = true, _0x1aa64f.events.callRemote('1572422891', _0x391bc5));
        }), _0x1aa64f.events.add('ipad.organization.getRanksResult', (_0x520a4a, _0x4702f9, _0x2cc8b6) => {
          _0x110e20 = false, _0x14f288.globalBrowser.emit('ipad_organization_getRanksResult', {
            'type': _0x520a4a,
            'org': _0x4702f9,
            'ranks': _0x2cc8b6
          });
        }), _0x1aa64f.events.add('ipad.organization.setNewFamilyHouse', () => {
          _0x110e20 || (_0x110e20 = true, _0x1aa64f.events.callRemote('3949653214'));
        }), _0x1aa64f.events.add('playerDeath2', _0x3ee361 => {
          _0x3ee361.handle === _0x42e2d6.handle && 'ipad' === _0x481ccf.g.currentInterface && (_0x110e20 = false);
        }), _0x1aa64f.events.add('ipad.fraction.reset', () => {
          _0x110e20 = false;
        });
      },
      0x3757: (_0x36f619, _0x542499, _0x4903e9) => {
        'use strict';

        const a0_0x3fa644 = {
          _0x3370a0: 0xc13,
          _0x17a63a: 0x14d2,
          _0x3bfed0: 0x1da5,
          _0x2cb6aa: 0x854,
          _0x2f69ab: 0xc13
        },
              a0_0x2d03cc = {
          _0x2d827a: 0x181b,
          _0x590761: 0x14d2
        },
              a0_0x3687b3 = {
          _0x13dd9a: 0x854
        },
              a0_0x28d5d6 = {
          _0x37c523: 0x2530,
          _0x1a7c4c: 0x1b6d,
          _0x283d6d: 0x1a5,
          _0x5d923d: 0x9f7,
          _0x5a48d8: 0x1d7c,
          _0x2ee967: 0x1d66
        },
              a0_0x287f2a = {
          _0x3d7bc2: 0xe6d,
          _0x479382: 0x2488
        },
              a0_0x25d3d3 = {
          _0x3edc8f: 0x145f,
          _0x57d695: 0x535,
          _0x5728e0: 0x2034,
          _0x85b9f0: 0x686,
          _0x13d331: 0x1d66,
          _0x3e3280: 0x14c4,
          _0x3ed865: 0x1d66,
          _0x20986e: 0x13b4
        },
              a0_0x3647c4 = {
          _0x32656f: 0x1da5,
          _0xc05c1c: 0x574
        },
              a0_0x3da719 = {
          _0x44d876: 0x535,
          _0x18dc85: 0x2034,
          _0x1e89e4: 0xac9,
          _0x2608d2: 0x2488
        },
              a0_0x480e6a = {
          _0x28492a: 0x14d2,
          _0x2d7133: 0x1f7c
        },
              a0_0x88b061 = {
          _0x112ced: 0x14d2,
          _0x7c6554: 0x956
        },
              a0_0x421ec1 = {
          _0x13fe37: 0x14d2,
          _0x273140: 0x1da5
        },
              a0_0x559601 = {
          _0x196842: 0x2488,
          _0x782adb: 0x535,
          _0x2426a6: 0x1c92,
          _0xa13e02: 0xbf4,
          _0x2c768e: 0x535,
          _0x37f9a6: 0x12de,
          _0x19ef12: 0x535,
          _0xe442aa: 0xf05,
          _0xf2c5e2: 0x1d10,
          _0x599c3a: 0x91b
        },
              a0_0x9d757f = {
          _0x59add8: 0x11a4
        },
              a0_0x537b4b = {
          _0x244fb2: 0x2488
        },
              a0_0x313a12 = {
          _0x2502e5: 0x1a4d,
          _0xe5166f: 0x1870
        },
              a0_0x5563e5 = {
          _0x292ab0: 0x1a3,
          _0x467a5f: 0x21a5,
          _0x470087: 0x112d
        },
              a0_0x395619 = {
          _0x6ed951: 0x14d2,
          _0x4a0bb9: 0x1da5,
          _0x29c82b: 0x1d66,
          _0x8dd3ff: 0xf2f,
          _0x4b6926: 0x2654,
          _0xf764f: 0x1870,
          _0x650734: 0x91b
        },
              a0_0x5325c0 = {
          _0x14fb60: 0x2488,
          _0x20c6cc: 0x1e57
        },
              a0_0x2aa953 = {
          _0xb9d799: 0x216d,
          _0x3e4ebb: 0x1139,
          _0x19aa67: 0xb4a,
          _0x1e7839: 0x2379,
          _0x8694a: 0x85b
        },
              a0_0x3a158c = {
          _0xce3394: 0x3e4,
          _0x1e26d3: 0x1d66,
          _0x4aade0: 0x1adb,
          _0x8aa311: 0xe6d,
          _0x34de91: 0x2488,
          _0x382b67: 0x4a3,
          _0x2c6abc: 0x1b6d,
          _0x5e8305: 0x22b2,
          _0x303638: 0x2488,
          _0x12ea95: 0x4a3,
          _0x42c4fa: 0x1a3,
          _0x41c9e3: 0x1da5
        },
              a0_0x1a4ead = {
          _0x57d9d8: 0x1d66,
          _0x3560ac: 0x12de
        },
              a0_0x135593 = {
          _0x276048: 0x535,
          _0x16d1f5: 0x1de9
        },
              a0_0x530394 = {
          _0x44ec47: 0x216d,
          _0x2ed320: 0x4b9,
          _0x2ff9e0: 0x1139,
          _0x2a0299: 0x1de9
        };

        _0x4903e9.r(_0x542499);

        var _0x3aa712 = _0x4903e9(0x16a21),
            _0xd4fe7 = (_0x4903e9(0xd194), _0x4903e9(0x12a76)),
            _0x10120d = _0x4903e9(0xc11e),
            _0x34a868 = _0x4903e9(0x161cd);

        const _0x277cd0 = _0x34a868.players.local;
        let _0x4a6232 = false;
        const _0x2b9e0c = {
          'brightness': 0x1,
          'volume': 0xa,
          'wallpaper': 0x0,
          'sms_ringtone': 0x0,
          'call_ringtone': 0x0,
          'dnd': false
        };

        let _0x2ba423,
            _0x171447,
            _0x1d0885 = null,
            _0x288aaf = 'cellphone_text_in',
            _0x5a949f = 'cellphone_text_to_call',
            _0x3c6a21 = 'cellphone_call_to_text',
            _0x4da3c5 = 0x0,
            _0x1d6a48 = null,
            _0x480353 = null;

        const _0x4fc224 = async () => {
          if (_0x2ba423 != _0x288aaf && _0x2ba423 != _0x3c6a21) return;
          let _0x461735 = 'cellphone@';
          _0x277cd0.vehicle && (_0x461735 += 'in_car@ds'), await _0x3aa712.api.taskPlayAnim(_0x461735, _0x5a949f, 0x32, true, false, true), _0x2ba423 = _0x5a949f;
        },
              _0x18df4e = async () => {
          if (_0x2ba423 != _0x5a949f) return;
          let _0x235b8c = 'cellphone@';
          _0x277cd0.vehicle && (_0x235b8c += 'in_car@ds'), await _0x3aa712.api.taskPlayAnim(_0x235b8c, _0x3c6a21, 0x32, true, false, true), _0x2ba423 = _0x3c6a21;
        },
              _0x48b93a = () => {
          _0x34a868.game.audio.stopPedRingtone(_0x277cd0.handle), _0x171447 && (_0x3aa712.api.stopNetworkSound(_0x171447), _0x171447 = undefined);
        },
              _0x12ccb9 = () => 0.5 * +_0x2b9e0c.volume;

        _0x34a868.events.add('keys.up', () => {
          if (!(_0x4903e9.g.interfaces.chat || _0x4903e9.g.inTuning || !_0x3aa712.api.isAuthed() || _0x4903e9.g.skyCamera || _0x4903e9.g.isUsingSystemAnim && !(0x0, _0x10120d.isPlayerOnChair)(_0x277cd0) || _0x4903e9.g.currentInterface && 'iphone' !== _0x4903e9.g.currentInterface || _0x3aa712.api.ePress(_0x4da3c5))) {
            if (_0x34a868.inventory.isPlayerHasPhone(_0x277cd0) || _0x34a868.game.ui.isPauseMenuActive()) {
              if (_0x4da3c5 = _0x3aa712.api.ePressUpdate(), _0x4903e9.g.interfaces.iphone) _0x34a868.events.call('iphone.close');else {
                if (_0x4a6232) return;
                if (_0x3aa712.api.getEntitySync(_0x277cd0, 'isDead', 'boolean')) return true;
                if (_0x277cd0.activeItemId) return _0x3aa712.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
                if (_0x4903e9.g.searchingAnim || _0x4903e9.g.nativeui || _0x277cd0.getVariable('isConsumingItem') || _0x4903e9.g.isUsingTABAnim || _0x4903e9.g.fishing || _0x34a868.game.ui.isPauseMenuActive() || null != _0x277cd0.getVariable('playerInTrunk') || _0x3aa712.api.isCuffed(_0x277cd0) || _0x3aa712.api.isTied(_0x277cd0) || _0x3aa712.api.isTiedHands(_0x277cd0) || _0x277cd0.getVariable('isSpectating')) return;
                _0x4a6232 = true, _0x34a868.events.callRemote('424038506');
              }
            } else _0x3aa712.api.longNotifyTrans('phone.noPhone', 'error');
          }
        }), _0x34a868.events.add('iphone.initResult', (_0x986d29, _0x8c7550, _0x860a69) => {
          const a0_0x403d06 = {
            _0x54bcf1: 0x216d,
            _0x4f178a: 0x4b9,
            _0x58ab89: 0x535,
            _0x2fe826: 0x1de9,
            _0x3eb2b5: 0x12e4,
            _0x13f4ea: 0x1d66,
            _0x50aa92: 0x2379
          };
          _0x4a6232 = false, _0x3aa712.api.getEntitySync(_0x277cd0, 'isDead', 'boolean') || (_0x34a868.game.graphics.transitionFromBlurred(0x32), (async () => {
            if (_0x277cd0.isDead()) return;
            let _0x449bab = 'cellphone@';
            _0x277cd0.vehicle && (_0x449bab += 'in_car@ds'), await _0x3aa712.api.taskPlayAnim(_0x449bab, _0x288aaf, 0x32, true, false, true), _0x2ba423 = _0x288aaf, _0x34a868.attachments.addLocal(_0x34a868.game.joaat('cellphone'));
          })(), _0x986d29 || _0x8c7550 || _0x860a69 ? (Object.keys(_0x8c7550).forEach(_0x55124f => {
            const a0_0xac5e06 = {
              _0x61682d: 0x535
            };

            _0x8c7550[_0x55124f].forEach(_0x2bb674 => {
              _0x2bb674.name = _0x3aa712.api.escapeHtml(_0x2bb674.name);
            });
          }), _0xd4fe7.globalBrowser.toggle('iphone', {
            'value': true,
            'dialogs': _0x986d29 && _0x986d29.length ? _0x986d29.map(_0x4b2016 => (_0x4b2016.text = _0x3aa712.api.escapeHtml(_0x4b2016.text), _0x4b2016)) : [],
            'contacts': _0x8c7550,
            'history': _0x860a69
          })) : _0xd4fe7.globalBrowser.toggle('iphone', {
            'value': true
          }), (_0x1d6a48 || _0x480353) && _0xd4fe7.globalBrowser.emit('iphone_incomingCall', {
            'number': _0x1d6a48,
            'callerId': _0x480353
          }), _0x277cd0.activeItemId = 0xef, _0x34a868.events.callRemote('3715179792', 0xef));
        }), _0x34a868.events.add('iphone.close', () => {
          (async () => {
            if (_0x277cd0.isDead()) return;
            let _0x40d11e = 'cellphone@';
            _0x277cd0.vehicle && (_0x40d11e += 'in_car@ds'), await _0x3aa712.api.taskPlayAnim(_0x40d11e, 'cellphone_text_out', 0x30, false, false, true), _0x2ba423 = null, _0x34a868.attachments.removeLocal(_0x34a868.game.joaat('cellphone'));
          })(), _0xd4fe7.globalBrowser.toggle('iphone', {
            'value': false
          }), _0x277cd0.activeItemId = null, _0x34a868.events.callRemote('3715179792', null);
        }), _0x34a868.events.add('iphone.setNetworkState', _0x4a8b76 => {
          _0xd4fe7.globalBrowser.emit('iphone_setNetworkState', _0x4a8b76);
        }), _0x34a868.events.add('iphone.selectFinger', (_0x19911b = 0x5) => {
          _0x34a868.game.mobile.moveFinger(_0x19911b);
        }), _0x34a868.events.add('iphone.saveContact', (_0x1c46dc, _0x57bfc7, _0x103e91) => {
          _0x4a6232 || (_0x4a6232 = true, _0x34a868.events.callRemote('3393066486', _0x1c46dc, _0x57bfc7, _0x103e91));
        }), _0x34a868.events.add('iphone.saveContactResult', (_0x1ba57a, _0x4c70b5, _0x5d119c) => {
          _0x4a6232 = false, _0xd4fe7.globalBrowser.emit('iphone_saveContactResult', {
            'letter': _0x1ba57a,
            'id': _0x4c70b5,
            'contact': _0x5d119c
          });
        }), _0x34a868.events.add('iphone.call', _0x3d3a13 => {
          const a0_0x54851b = {
            _0x5afd87: 0x1367,
            _0x1c8490: 0x6da,
            _0x4a7746: 0x14d2,
            _0x31b174: 0x1da5
          };
          _0x4a6232 || (_0x4a6232 = true, _0x34a868.events.callRemote('3532545226', _0x3d3a13), _0x1d0885 && (_0x1d0885.cancel(), _0x1d0885 = undefined), _0x4fc224(), _0x34a868.game.audio.playPedRingtone('Remote_Ring', _0x277cd0.handle, true), _0x1d0885 = _0x34a868.game.sleep(0x2710).then(() => {
            const _0x691f3 = _0x277cd0.phone_outcomingCall;
            _0x691f3 && _0x691f3.number === _0x3d3a13 && _0x34a868.events.callRemote('3819057902', _0x691f3.id);
          }));
        }), _0x34a868.events.add('iphone.callResult', (_0x12f566, _0x502e40 = false) => {
          _0x502e40 || (_0x4a6232 = false), _0xd4fe7.globalBrowser.emit('iphone_callResult', JSON.stringify(_0x12f566));
        }), _0x34a868.events.add('iphone.missedCall', _0xa99e65 => {
          _0x1d6a48 = null, _0x480353 = null, _0xa99e65 ? _0xd4fe7.globalBrowser.emit('iphone_missedCall', _0xa99e65) : (_0x1d0885 && (_0x1d0885.cancel(), _0x1d0885 = undefined), _0x34a868.game.audio.stopPedRingtone(_0x277cd0.handle), _0x3aa712.api.playSound('iphone_call_end'), _0x3aa712.api.notifyTrans('phone.couldntCallToUser', {
            'type': 'error'
          }));
        }), _0x34a868.events.add('iphone.unavailableCall', (_0x25808b = false) => {
          const a0_0x394cc0 = {
            _0x14a794: 0x535,
            _0x7523d5: 0xbc2,
            _0x44a4a8: 0x535,
            _0x21b613: 0x1934,
            _0x4234da: 0x535,
            _0x578ba4: 0x1c92,
            _0x3bcb95: 0x1a3
          };
          _0x1d6a48 = null, _0x480353 = null, _0x1d0885 && (_0x1d0885.cancel(), _0x1d0885 = undefined), _0x34a868.game.sleep(0x5dc).then(() => {
            _0x18df4e(), _0x48b93a(), _0x3aa712.api.playSound('iphone_call_end'), _0x25808b ? _0x3aa712.api.notifyTrans('phone.userBusy', {
              'type': 'error'
            }) : _0x3aa712.api.notifyTrans('phone.userUnavailable', {
              'type': 'error'
            }), _0xd4fe7.globalBrowser.emit('iphone_unavailableCall');
          });
        }), _0x34a868.events.add('iphone.finishCall', () => {
          _0x1d6a48 = null, _0x480353 = null, _0x4a6232 = false, _0xd4fe7.globalBrowser.emit('iphone_unavailableCall');
        }), _0x34a868.events.add('iphone.stopCall', () => {
          _0x1d6a48 = null, _0x480353 = null, _0x48b93a(), _0x18df4e(), _0x1d0885 && (_0x1d0885.cancel(), _0x1d0885 = undefined), _0x34a868.events.callRemote('2473780784'), _0x4a6232 = false;
        }), _0x34a868.events.add('iphone.incomingCall', (_0x3a0678, _0x5afedf) => {
          _0x1d6a48 = _0x3a0678, _0x480353 = _0x5afedf, 'iphone' === _0x4903e9.g.currentInterface && _0xd4fe7.globalBrowser.emit('iphone_incomingCall', {
            'number': _0x3a0678,
            'callerId': _0x5afedf
          }), _0x2b9e0c.dnd || (_0x3aa712.api.notifyTrans('phone.incomingCall'), _0x171447 && (_0x3aa712.api.stopNetworkSound(_0x171447), _0x171447 = undefined), _0x3aa712.api.play3DSound('iphone/ringtones/' + (parseInt(_0x2b9e0c.call_ringtone) + 0x1), {
            'volume': _0x12ccb9()
          }).then(_0x171921 => {
            _0x171447 = _0x171921;
          }));
        }), _0x34a868.events.add('iphone.acceptCall', _0x39e453 => {
          _0x1d6a48 = null, _0x480353 = null, _0x48b93a(), _0x34a868.events.callRemote('890002225', _0x39e453), _0x4fc224();
        }), _0x34a868.events.add('iphone.declineCall', () => {
          _0x1d6a48 = null, _0x480353 = null, _0x48b93a(), _0x34a868.events.callRemote('2473780784');
        }), _0x34a868.events.add('iphone.setActiveCall', () => {
          _0x48b93a(), _0x1d0885 && (_0x1d0885.cancel(), _0x1d0885 = undefined), _0xd4fe7.globalBrowser.emit('iphone_setActiveCall');
        }), _0x34a868.events.add('iphone.deleteContact', (_0x15597b, _0x41c8b8) => {
          _0x4a6232 || (_0x4a6232 = true, _0x34a868.events.callRemote('3845762715', _0x15597b, _0x41c8b8));
        }), _0x34a868.events.add('iphone.deleteContactResult', () => {
          _0x4a6232 = false;
        }), _0x34a868.events.add('iphone.getMessages', (_0x571ae2, _0x4637d7 = true) => {
          _0x4a6232 || (_0x4a6232 = true, _0x34a868.events.callRemote('1366339314', _0x571ae2, _0x4637d7));
        }), _0x34a868.events.add('iphone.getMessagesResult', (_0x587c24, _0x417ad6, _0x497cf2) => {
          _0x4a6232 = false, _0xd4fe7.globalBrowser.emit('iphone_setMessages', {
            'messages': _0x587c24 && _0x587c24.length ? _0x587c24.map(_0x86834f => (_0x86834f.text = _0x3aa712.api.escapeHtml(_0x86834f.text), _0x86834f)) : [],
            'dialogTarget': _0x417ad6,
            'setPage': _0x497cf2
          });
        }), _0x34a868.events.add('iphone.sendSystemMessage', _0x5850e0 => {
          _0x2b9e0c.dnd || _0x3aa712.api.play3DSound('iphone/notifications/' + (parseInt(_0x2b9e0c.sms_ringtone) + 0x1), {
            'volume': _0x12ccb9()
          }), _0x5850e0.text = _0x3aa712.api.escapeHtml(_0x5850e0.text), _0xd4fe7.globalBrowser.emit('iphone_sendSystemSMSResult', JSON.stringify(_0x5850e0)), 'iphone' === _0x4903e9.g.currentInterface && _0xd4fe7.globalBrowser.emit('iphone_setDialogs', {
            'smsData': _0x5850e0
          });
        }), _0x34a868.events.add('iphone.sendMessage', (_0xbf59f2, _0x47a4ae, _0x288eb9) => {
          _0x34a868.game.mobile.moveFinger(0x5), _0x3aa712.api.playSound('iphone_outcome_message_insideapp'), _0x34a868.events.callRemote('3427535495', _0xbf59f2, _0x47a4ae, _0x288eb9);
        }), _0x34a868.events.add('iphone.sendMessageResult', _0xaa7b1c => {
          _0xaa7b1c && (_0xaa7b1c.text = _0x3aa712.api.escapeHtml(_0xaa7b1c.text), _0xd4fe7.globalBrowser.emit('iphone_sendSMSResult', JSON.stringify(_0xaa7b1c)), _0xd4fe7.globalBrowser.emit('iphone_setDialogs', {
            'numberTo': _0xaa7b1c.numberTo
          }));
        }), _0x34a868.events.add('iphone.carService.open', () => {
          _0x4a6232 || (_0x4a6232 = true, _0x34a868.events.callRemote('1208394475'));
        }), _0x34a868.events.add('iphone.carService.openResult', (_0x2dad6d, _0x4a1ec3) => {
          _0x4a6232 = false, _0x2dad6d && (_0x2dad6d.forEach(_0x31e072 => {
            _0x31e072.title = _0x3aa712.api.escapeHtml(_0x34a868.game.ui.getLabelText(_0x34a868.game.vehicle.getDisplayNameFromVehicleModel(_0x34a868.game.joaat(_0x31e072.model))));
          }), _0xd4fe7.globalBrowser.emit('iphone_carService_setVehicles', {
            'vehicles': _0x2dad6d,
            'totalSlots': _0x4a1ec3
          }));
        }), _0x34a868.events.add('iphone.carService.find', _0x2fc43b => {
          _0x4a6232 || (_0x4a6232 = true, _0x34a868.events.callRemote('3746507661', _0x2fc43b));
        }), _0x34a868.events.add('iphone.carService.findResult', () => {
          _0x4a6232 = false;
        }), _0x34a868.events.add('playerDeath2', _0x303ebb => {
          _0x303ebb.handle === _0x277cd0.handle && 'iphone' == _0x4903e9.g.currentInterface && (_0x34a868.events.call('iphone.close'), _0x2ba423 = null, _0x34a868.attachments.removeLocal(_0x34a868.game.joaat('cellphone')));
        }), _0x34a868.events.add('iphone.settings.changeDarkness', _0x3efd9b => {
          _0x2b9e0c.brightness = _0x3efd9b, _0x34a868.events.callRemote('3618721778', 'brightness', _0x3efd9b);
        }), _0x34a868.events.add('iphone.settings.changeVolume', _0x513ce4 => {
          _0x2b9e0c.volume = 0x64 * _0x513ce4, _0x34a868.events.callRemote('3618721778', 'volume', _0x513ce4);
        }), _0x34a868.events.add('iphone.settings.selectWallpaper', _0x49c172 => {
          _0x2b9e0c.wallpaper = _0x49c172, _0x34a868.events.callRemote('3618721778', 'wallpaper', _0x49c172);
        }), _0x34a868.events.add('iphone.settings.selectSMSRingtone', _0x24de50 => {
          _0x2b9e0c.sms_ringtone = _0x24de50, _0x34a868.events.callRemote('3618721778', 'sms_ringtone', _0x24de50);
        }), _0x34a868.events.add('iphone.settings.selectCallRingtone', _0x13f77a => {
          _0x2b9e0c.call_ringtone = _0x13f77a, _0x34a868.events.callRemote('3618721778', 'call_ringtone', _0x13f77a);
        }), _0x34a868.events.add('iphone.settings.toggleDND', _0x3d37d1 => {
          _0x2b9e0c.dnd = !!_0x3d37d1, _0x34a868.events.callRemote('3618721778', 'dnd', _0x3d37d1);
        }), _0x34a868.events.add('iphone.settings.setBundle', _0x5ac94f => {
          const a0_0x3a2c27 = {
            _0x3ec2c2: 0x16e3,
            _0x4fabab: 0x535,
            _0x5cc5a4: 0x2488,
            _0x24bb3f: 0xc13,
            _0x19f546: 0x1a3,
            _0x5c02dc: 0x6be,
            _0xa97b40: 0x1fb1,
            _0x1d09d0: 0x2488,
            _0x5dda38: 0x1d10,
            _0x1b01f6: 0x1c21,
            _0x3d2b99: 0x112d,
            _0x493790: 0x48d,
            _0x1be89c: 0x2644
          };
          _0x5ac94f && Object.keys(_0x5ac94f).forEach(_0x5d6c9a => {
            let _0x71dec5 = _0x5ac94f[_0x5d6c9a];

            switch (_0x5d6c9a) {
              case 'brightness':
                _0xd4fe7.globalBrowser.emit('iphone_changeDarkness', _0x3aa712.api.clamp(_0x71dec5, 0x1e, 0x64));

                break;

              case 'volume':
                _0xd4fe7.globalBrowser.emit('iphone_changeVolume', 0.01 * parseFloat(_0x71dec5));

                break;

              case 'wallpaper':
                {
                  let _0x182b73 = {
                    'id': _0x71dec5
                  };

                  _0xd4fe7.globalBrowser.emit('iphone_setWallpapers', JSON.stringify(_0x182b73));

                  break;
                }

              case 'sms_ringtone':
                {
                  let _0x3a5946 = {
                    'target': 'notification',
                    'id': _0x71dec5
                  };

                  _0xd4fe7.globalBrowser.emit('iphone_settings_selectAudio', JSON.stringify(_0x3a5946));

                  break;
                }

              case 'call_ringtone':
                {
                  let _0x55d2e8 = {
                    'target': 'ringtone',
                    'id': _0x71dec5
                  };

                  _0xd4fe7.globalBrowser.emit('iphone_settings_selectAudio', JSON.stringify(_0x55d2e8));

                  break;
                }

              case 'dnd':
                {
                  let _0x5b82a5 = {
                    'path': 'DND',
                    'value': !!_0x71dec5
                  };

                  _0xd4fe7.globalBrowser.emit('iphone_changeSettingStatus', JSON.stringify(_0x5b82a5));

                  break;
                }
            }

            _0x2b9e0c[_0x5d6c9a] = _0x71dec5;
          });
        });
      },
      0x17524: (_0x19a442, _0x375bd9, _0x98cde1) => {
        _0x98cde1(0x10e2b);
      },
      0x10e2b: (_0x5b1741, _0x59844e, _0x3b5bd8) => {
        'use strict';

        const a0_0x4fede5 = {
          _0x4c587a: 0x235b,
          _0xd7f63: 0x7a7,
          _0x2c9b4c: 0xf82
        },
              a0_0x2a52e4 = {
          _0x3ed7d5: 0x50c,
          _0x39f0cb: 0x151f,
          _0x555285: 0x1f30,
          _0x350e78: 0x1f30,
          _0x2ea817: 0x1f30,
          _0x256608: 0x535,
          _0x148722: 0x1c92,
          _0x22b880: 0xcd5,
          _0x490ff6: 0x13a9,
          _0xe1c32c: 0x50c,
          _0x2c785e: 0x24ee,
          _0x8c68f9: 0x843,
          _0x5190fa: 0xbc2,
          _0x58bf2d: 0x1980
        },
              a0_0x47a949 = {
          _0x5a8f69: 0xc95,
          _0x195ef1: 0x1a07,
          _0x2a06df: 0x24f,
          _0xc7f5e4: 0x1da5,
          _0x3c28af: 0x19af
        },
              a0_0xc2491f = {
          _0x339798: 0x2080,
          _0x4ef7ec: 0x13a9,
          _0x32d25b: 0x1f30
        };

        _0x3b5bd8.r(_0x59844e);

        var _0x3a9a67 = _0x3b5bd8(0x16a21),
            _0x2a409a = _0x3b5bd8(0x12a76),
            _0x4f4e01 = _0x3b5bd8(0x161cd);

        const _0x33ab69 = _0x4f4e01.players.local;
        let _0x4ad525 = false;
        _0x4f4e01.events.add('iphone.taxiGetOrders', () => {
          if (!_0x4ad525) {
            if (0x6 !== _0x33ab69.getVariable('job')) return _0x3a9a67.api.longNotifyTrans('job.taxi.notWorkingInTaxi', 'error');
            _0x4ad525 = true, _0x4f4e01.events.callRemote('3339046211');
          }
        }), _0x4f4e01.events.add('iphone.taxiGetOrdersResult', _0x166145 => {
          _0x4ad525 = false, _0x166145 && (_0x166145.forEach(_0x26830c => {
            _0x26830c.dist = _0x3a9a67.api.vdist(_0x26830c.startPosX, _0x26830c.startPosY, _0x26830c.startPosZ, _0x33ab69.position.x, _0x33ab69.position.y, _0x33ab69.position.z);
          }), _0x2a409a.globalBrowser.emit('iphone_setTaxiOrders', {
            'orders': _0x166145
          }));
        }), _0x4f4e01.events.add('iphone.taxiTakeOrder', _0x53eeb1 => {
          if (!_0x4ad525) {
            if (0x6 !== _0x33ab69.getVariable('job')) return _0x3a9a67.api.longNotifyTrans('job.taxi.notWorkingInTaxi', 'error');
            _0x4ad525 = true, _0x4f4e01.events.callRemote('2098234136', _0x53eeb1);
          }
        }), _0x4f4e01.events.add('iphone.taxiTakeOrderResult', _0x1cb4e7 => {
          _0x4ad525 = false;
        }), _0x4f4e01.events.add('iphone.taxi.addOrder', _0x38deaa => {
          _0x38deaa.dist = _0x3a9a67.api.vdist(_0x38deaa.startPosX, _0x38deaa.startPosY, _0x38deaa.startPosZ, _0x33ab69.position.x, _0x33ab69.position.y, _0x33ab69.position.z), _0x2a409a.globalBrowser.emit('iphone_taxiAddOrder', {
            'order': _0x38deaa
          }), _0x3a9a67.api.notifyTrans('job.taxi.orderTitle', {
            'address': _0x3a9a67.api.escapeHtml(_0x3a9a67.api.getAddress(parseFloat(_0x38deaa.startPosX), parseFloat(_0x38deaa.startPosY), parseFloat(_0x38deaa.startPosZ))),
            'distance': _0x38deaa.dist.toFixed(0x2)
          }, {
            'title': 'job.taxi.newOrder',
            'subtitle': _0x38deaa.client,
            'localIcon': 'CHAR_TAXI',
            'small': false,
            'duration': 0x2710
          }), _0x3a9a67.api.playSound('notification3', 0.1);
        }), _0x4f4e01.events.add('iphone.taxi.removeOrder', _0x3fdabb => {
          _0x2a409a.globalBrowser.emit('iphone_taxiRemoveOrder', {
            'id': _0x3fdabb
          });
        }), _0x4f4e01.events.add('iphone.taxi.setDriverBlip', _0xaf3ae0 => {
          const _0x4719dd = _0x4f4e01.players.atRemoteId(_0xaf3ae0);

          _0x4719dd && (_0x33ab69.taxiDriverBlip = _0x4f4e01.blips.new(0x38, _0x4719dd.position, {
            'color': 0x46
          }));
        });
      },
      0x1b7a: (_0x5d9d14, _0x451197, _0x29aa3f) => {
        'use strict';

        const a0_0x1f08f0 = {
          _0x57f44d: 0x2488,
          _0x47c77e: 0x449
        },
              a0_0x53d752 = {
          _0x5b51ae: 0x2488,
          _0x1e750e: 0x4a3,
          _0x4e683f: 0x449
        },
              a0_0xcce909 = {
          _0x43584a: 0x242c,
          _0x3945d1: 0x449,
          _0x1f0ce0: 0x2488,
          _0xc5832: 0x4a3,
          _0x47d700: 0x14d2,
          _0x45fd3d: 0x1da5,
          _0x3a02b7: 0x2202,
          _0x433357: 0x20d8
        },
              a0_0x45250a = {
          _0x21c103: 0x59d,
          _0x2f81ac: 0x14d2,
          _0x5c10b4: 0x1a5
        },
              a0_0x1afb6a = {
          _0x2194da: 0x253d,
          _0x2f77a2: 0x1edc,
          _0x443208: 0xf86,
          _0x976cf7: 0x1419
        },
              a0_0x57a354 = {
          _0x2f79b5: 0x1aab,
          _0x4187b5: 0x22ba,
          _0xa4ea3b: 0xda6,
          _0x125ae6: 0xf82,
          _0x6d92e4: 0x1d2
        };

        _0x29aa3f.r(_0x451197);

        var _0x1b502e = _0x29aa3f(0x16a21),
            _0x42088c = _0x29aa3f(0x12a76),
            _0x46302b = _0x29aa3f(0x161cd);

        const _0x4fed21 = _0x46302b.players.local,
              _0x4131f3 = [];
        let _0x52aad4 = false,
            _0x5866df = false;
        [{
          'sellerName': 'farmer',
          'x': 2309.44,
          'y': 4885.76,
          'z': 41.8
        }, {
          'sellerName': 'farmer',
          'x': 2030.22,
          'y': 4980.28,
          'z': 42.09
        }].forEach((_0x4b88d7, _0x937e00) => {
          const _0xdbdab4 = _0x46302b.colshapes.newSphere(_0x4b88d7.x, _0x4b88d7.y, _0x4b88d7.z, 0x1, 0x0);

          _0xdbdab4.marker = _0x46302b.markers.new(0x1, new _0x46302b.Vector3(_0x4b88d7.x, _0x4b88d7.y, _0x4b88d7.z - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff]
          }), _0xdbdab4.sellerName = _0x4b88d7.sellerName, _0x4131f3.push(_0xdbdab4);
        }), _0x46302b.events.add('playerEnterColshape', _0x3fc844 => {
          _0x1b502e.api.isAuthed() && null == _0x4fed21.getVariable('playerInTrunk') && _0x4131f3.includes(_0x3fc844) && (_0x52aad4 = _0x3fc844, _0x1b502e.api.displayHelpStringTrans('displayHelpString.toSellItems', false, true, 0x1388));
        }), _0x46302b.events.add('playerExitColshape', _0x288d73 => {
          _0x4131f3.includes(_0x288d73) && (_0x52aad4 = null, _0x5866df = false, _0x46302b.game.ui.clearHelp(true), _0x46302b.events.call('itemSale.close'));
        }), _0x46302b.events.add('keys.e', () => {
          if (_0x52aad4) {
            if (_0x29aa3f.g.interfaces.itemSale) _0x42088c.globalBrowser.toggle('itemSale', {
              'value': false
            });else {
              if (_0x5866df) return;
              _0x5866df = true, _0x46302b.events.callRemote('3381195981', _0x52aad4.sellerName), _0x52aad4 = false;
            }
          }
        }), _0x46302b.events.add('itemSale.initResult', (_0x2387a3, _0x2e909d) => {
          const _0x3778b8 = {
            'sellerName': _0x2387a3,
            'items': _0x2e909d
          };
          _0x42088c.globalBrowser.toggle('itemSale', {
            'value': true,
            'itemSale': _0x3778b8
          }), _0x5866df = false;
        }), _0x46302b.events.add('itemSale.sale', (_0x11e65a, _0x4536fd) => {
          if (_0x5866df) return true;
          _0x5866df = true, _0x46302b.events.callRemote('3367623164', _0x11e65a, _0x4536fd);
        }), _0x46302b.events.add('itemSale.saleResult', () => {
          _0x5866df = false;
        }), _0x46302b.events.add('itemSale.close', () => {
          _0x42088c.globalBrowser.toggle('itemSale', {
            'value': false
          });
        });
      },
      0x10a5c: (_0x56208b, _0x5af963, _0x3d2c51) => {
        'use strict';

        const a0_0x3e62bb = {
          _0x4c6197: 0x535,
          _0x367c39: 0x156e
        },
              a0_0x53b09d = {
          _0xb725b9: 0x2488
        },
              a0_0x46a678 = {
          _0x4949fc: 0x2488,
          _0xa5349c: 0x5d8
        };

        _0x3d2c51.r(_0x5af963);

        var _0x3ec4c4 = _0x3d2c51(0x16a21),
            _0x483566 = _0x3d2c51(0x12a76),
            _0x309ce0 = _0x3d2c51(0x14b31),
            _0x147fad = _0x3d2c51(0x161cd);

        _0x147fad.players.local;
        let _0x4dd1d5 = [];
        _0x147fad.events.add('keys.f9', () => {
          _0x3ec4c4.api.isAdmin() && (_0x3d2c51.g.interfaces.adminReport || _0x3d2c51.g.interfaces.chat || (_0x3d2c51.g.interfaces.killlog ? _0x147fad.events.call('killlog.close') : _0x147fad.events.callRemote('471764504')));
        }), _0x309ce0.f.register('killlog.addChunk', async (_0x18ffc6, _0x217cc8) => {
          try {
            return !_0x18ffc6 || ((_0x18ffc6 = JSON.parse(_0x18ffc6)).forEach(_0x6a9195 => {
              _0x4dd1d5.push(_0x6a9195);
            }), true);
          } catch (_0x592c5f) {
            _0x3ec4c4.api.sendError(_0x592c5f);
          }
        }), _0x147fad.events.add('killlog.show', () => {
          _0x483566.globalBrowser.toggle('killlog', {
            'value': true,
            'items': _0x4dd1d5
          }), _0x4dd1d5 = [];
        }), _0x147fad.events.add('killlog.updateSpecific', (_0xd8c8b7, _0x379af6) => {
          _0x379af6 && (_0x379af6 = JSON.parse(_0x379af6), _0x483566.globalBrowser.emit('killlog_update', {
            'id': _0x379af6.logId,
            'param': _0xd8c8b7,
            'item': _0x379af6
          }));
        }), _0x147fad.events.add('killlog.add', _0x43c19c => {
          _0x43c19c && _0x483566.globalBrowser.emit('killlog_add', _0x43c19c);
        }), _0x147fad.events.add('killlog.requestTeleport', _0x6b0415 => {
          _0x3ec4c4.api.isAdmin() && _0x147fad.events.callRemote('1173199964', _0x6b0415);
        }), _0x147fad.events.add('killlog.close', () => {
          _0x483566.globalBrowser.toggle('killlog', {
            'value': false
          }), _0x147fad.events.callRemote('2597512171');
        });
      },
      0x66f0: (_0xabfc2b, _0x2d07c6, _0x2298d4) => {
        'use strict';

        const a0_0x119088 = {
          _0x135caa: 0x1e0f
        };

        _0x2298d4.r(_0x2d07c6);

        var _0xf04a96 = _0x2298d4(0x16a21),
            _0x1c93b6 = _0x2298d4(0x12a76),
            _0x2c9b30 = _0x2298d4(0x161cd);

        _0x2c9b30.events.add('licenses.initSuccess', (_0x3bcfb3, _0x4442b0) => {
          if (_0x3bcfb3.propId) {
            const _0x2782bf = _0x2c9b30.game.pathfind.getStreetNameAtCoord(parseFloat(_0x3bcfb3.posX), parseFloat(_0x3bcfb3.posY), parseFloat(_0x3bcfb3.posZ), 0x0, 0x0),
                  _0x2472f2 = _0xf04a96.api.escapeHtml(_0x2c9b30.game.ui.getLabelText(_0x2c9b30.game.zone.getNameOfZone(parseFloat(_0x3bcfb3.posX), parseFloat(_0x3bcfb3.posY), parseFloat(_0x3bcfb3.posZ)))),
                  _0xa1d1ed = _0xf04a96.api.escapeHtml(_0x2c9b30.game.ui.getStreetNameFromHashKey(_0x2782bf.streetName));

            _0x3bcfb3.address = _0xa1d1ed + ', ' + _0x2472f2 + ', ' + _0x3bcfb3.propId;
          } else _0x3bcfb3.address = 'user.noRegistration';

          const _0x372647 = ['drived', 'drivem', 'fh', 'cdlb', 'cdla', 'cdwl', 'biz'];

          _0x1c93b6.globalBrowser.toggle('licenses', {
            'value': true,
            'info': _0x3bcfb3,
            'licenses': _0x4442b0.map(_0x21d604 => _0x372647[_0x21d604])
          });
        }), _0x2c9b30.events.add('licenses.close', () => {
          _0x1c93b6.globalBrowser.toggle('licenses', {
            'value': false
          });
        });
      },
      0xaf91: (_0x4a63dc, _0x56d37d, _0x50e8bd) => {
        'use strict';

        const a0_0x3ab1f9 = {
          _0x2f2d25: 0x242c,
          _0xe93abf: 0x1a5
        },
              a0_0x108a79 = {
          _0x31bee2: 0x535,
          _0x32947b: 0x535,
          _0x38f358: 0x1cd8,
          _0x5ed0d6: 0x2488
        },
              a0_0x441e97 = {
          _0x33f8c3: 0x14d2
        },
              a0_0x1eb6d7 = {
          _0x1152c0: 0x14d2,
          _0x587196: 0x1da5
        },
              a0_0x5ade04 = {
          _0x4f4d4f: 0x21ea
        },
              a0_0x2e6b65 = {
          _0x355a01: 0x2576,
          _0x333a8b: 0xe19,
          _0x12332d: 0x2315,
          _0x5398e4: 0x145f,
          _0x3e0b1c: 0x1b61,
          _0x20ac86: 0x1a3,
          _0x5f4df7: 0xb3c,
          _0x5da795: 0xe19,
          _0x1b78e1: 0x6da,
          _0x3bff65: 0x99b,
          _0x4c8349: 0x11f5,
          _0x1cf370: 0x1fdf,
          _0x2bf8a6: 0xe19,
          _0x2a0dfc: 0x623,
          _0x140c77: 0x185e,
          _0x36194a: 0x1dc8,
          _0x335d1c: 0x1fbe,
          _0x1cb39f: 0x168c,
          _0x2eaa4b: 0x1673,
          _0x4e1c83: 0x831,
          _0x17b0d1: 0x19f2,
          _0xb2ea58: 0x2315,
          _0x54ba38: 0x1f8f,
          _0x200e94: 0xe6d,
          _0xb42692: 0x2488
        },
              a0_0x4e2a07 = {
          _0x30c378: 0x2315,
          _0x4ce8c6: 0xe19,
          _0x1a1cd8: 0x145f,
          _0x578df1: 0x1b61
        },
              a0_0x56a009 = {
          _0x1b39fc: 0x1a5,
          _0x2bc2ab: 0x1d66,
          _0x1707a2: 0x1870,
          _0x318554: 0x4b9,
          _0xc8e8a7: 0x1dda,
          _0x5657fa: 0x1557,
          _0x908f46: 0x535,
          _0x591ae6: 0xbb1,
          _0x2abbfb: 0x2576,
          _0x1cf441: 0x2576,
          _0x47db22: 0x2315,
          _0xfc7543: 0x145f,
          _0x817c5a: 0x1b61,
          _0x27403f: 0x900,
          _0x3b7ebc: 0xe19,
          _0x22592e: 0x6da,
          _0x508f14: 0x99b,
          _0x33f46e: 0x1b61,
          _0x414e46: 0xb3c,
          _0x4ca16e: 0xe19,
          _0x5cd5b6: 0x2315,
          _0x3e2983: 0xe19,
          _0x14c987: 0x1fdf,
          _0x37e57d: 0x623,
          _0x5a3ac9: 0x235b,
          _0x55111f: 0x168c,
          _0x170d18: 0x2315,
          _0x5b12a2: 0x1673,
          _0xb095c: 0x831,
          _0x4bf59a: 0x1f8f,
          _0x20251c: 0xe6d,
          _0x41503d: 0x2488
        },
              a0_0x5920ff = {
          _0x37a9f2: 0x2315,
          _0x54fa3e: 0x99b,
          _0x1e2e81: 0xe19,
          _0x435d6d: 0x145f,
          _0x125933: 0x1b61
        };

        _0x50e8bd.r(_0x56d37d);

        var _0x31e188 = _0x50e8bd(0x16a21),
            _0x1993ab = _0x50e8bd(0x12a76),
            _0x277d09 = _0x50e8bd(0x161cd);

        const _0x55faec = _0x277d09.players.local;
        let _0x173d31 = false,
            _0x5ae35e = null;
        _0x277d09.events.add('market.init', async (_0x1c83d6, _0x1d940f) => {
          if (_0x277d09.events.call('dialog.close', true), await _0x277d09.game.sleep(0x1f4), !_0x55faec.vehicle && _0x1d940f) {
            if ((_0x1d940f = JSON.parse(_0x1d940f)).nickname = _0x31e188.api.language.translatePlayer('dialogs.' + _0x1d940f.nickname), _0x31e188.api.toggleHud(false), _0x31e188.api.toggleChat(false), _0x31e188.api.toggleRadar(false), _0x5ae35e = _0x1c83d6, _0x1d940f.selling) for (const _0x3d49ab of Object.keys(_0x1d940f.selling)) {
              const _0x3e9483 = _0x1d940f.selling[_0x3d49ab];

              switch (typeof _0x3e9483.itemId) {
                case 'number':
                  {
                    const _0xd35065 = _0x277d09.inventory.getItemById(_0x3e9483.itemId);

                    _0x3e9483.title = _0xd35065.title, _0x3e9483.description = _0xd35065.description;
                    break;
                  }
              }
            }
            if (_0x1d940f.buying) for (const _0x72d1fa of Object.keys(_0x1d940f.buying)) {
              const _0x2266c6 = _0x1d940f.buying[_0x72d1fa];

              switch (typeof _0x2266c6.itemId) {
                case 'number':
                  {
                    const _0x37d34a = _0x277d09.inventory.getItemById(_0x2266c6.itemId);

                    _0x2266c6.title = _0x37d34a.title, _0x2266c6.description = _0x37d34a.description;
                    break;
                  }
              }
            }
            if (_0x1d940f.trade) for (const _0x3ef3ad of Object.keys(_0x1d940f.trade)) {
              const _0x872dc8 = _0x1d940f.trade[_0x3ef3ad];

              switch (typeof _0x872dc8.itemId) {
                case 'number':
                  {
                    const _0x425bd9 = _0x277d09.inventory.getItemById(_0x872dc8.itemId);

                    _0x872dc8.title = _0x425bd9.title, _0x872dc8.description = _0x425bd9.description;
                    break;
                  }

                case 'string':
                  if ('clothes' === _0x872dc8.itemId) {
                    const _0x1cb028 = _0x31e188.api.getEntitySync(_0x277d09.players.local, 'gender', 'number'),
                          _0x1cf0d0 = _0x872dc8.clothesData[_0x1cb028],
                          _0x55010f = _0x277d09.inventory.componentIdToItemId(_0x1cf0d0.component, _0x1cf0d0.isProp),
                          _0x38f144 = _0x277d09.inventory.getItemById(_0x55010f),
                          _0x45c165 = _0x277d09.inventory.getItemConfig(_0x38f144.id),
                          _0x2539d7 = _0x277d09.inventory.getItemDescription({
                      'itemId': _0x38f144.id,
                      'gender': _0x1cb028,
                      'drawable': _0x1cf0d0.drawable,
                      'texture': _0x1cf0d0.texture
                    });

                    let _0x241c5e = _0x38f144.title;
                    _0x277d09.inventory.isItemClothes(_0x38f144) && (_0x241c5e = _0x45c165.description), _0x1cf0d0.title = _0x241c5e, _0x1cf0d0.description = _0x2539d7;
                  }

              }

              _0x872dc8.items && _0x872dc8.items.forEach(_0x570b9d => {
                const _0x3acf45 = _0x277d09.inventory.getItemById(parseInt(_0x570b9d.itemId));

                delete _0x570b9d.itemId, _0x570b9d.title = _0x3acf45.title, _0x570b9d.description = _0x3acf45.description;
              });
            }
            _0x1d940f.timeLeft && (_0x1d940f.timeLeft -= Date.now()), _0x1993ab.globalBrowser.toggle('market', {
              'value': true,
              'items': _0x1d940f
            });
          }
        }), _0x277d09.events.add('market.updateStock', (_0x3b3a86, _0x40ed28, _0x465819) => {
          if (_0x40ed28 && _0x5ae35e === _0x3b3a86) {
            if (_0x40ed28 = JSON.parse(_0x40ed28), ['selling', 'buying'].includes(_0x465819)) {
              for (const _0x3ce1ca of Object.keys(_0x40ed28)) {
                const _0x3653cd = _0x40ed28[_0x3ce1ca];

                switch (typeof _0x3653cd.itemId) {
                  case 'number':
                    {
                      const _0x4b8437 = _0x277d09.inventory.getItemById(_0x3653cd.itemId);

                      _0x3653cd.title = _0x4b8437.title, _0x3653cd.description = _0x4b8437.description;
                      break;
                    }
                }
              }

              _0x1993ab.globalBrowser.emit('market_updateStock', {
                'key': _0x465819,
                'stock': _0x40ed28
              });
            } else {
              if ('trade' === _0x465819) {
                for (const _0xa6bb66 of Object.keys(_0x40ed28)) {
                  const _0x4337e8 = _0x40ed28[_0xa6bb66];

                  switch (typeof _0x4337e8.itemId) {
                    case 'number':
                      {
                        const _0x407c58 = _0x277d09.inventory.getItemById(_0x4337e8.itemId);

                        _0x4337e8.title = _0x407c58.title, _0x4337e8.description = _0x407c58.description;
                        break;
                      }

                    case 'string':
                      if ('clothes' === _0x4337e8.itemId) {
                        const _0x437401 = _0x31e188.api.getEntitySync(_0x277d09.players.local, 'gender', 'number'),
                              _0x736e8f = _0x4337e8.clothesData[_0x437401],
                              _0x36bd24 = _0x277d09.inventory.componentIdToItemId(_0x736e8f.component, _0x736e8f.isProp),
                              _0x3b2363 = _0x277d09.inventory.getItemById(_0x36bd24),
                              _0x10828d = _0x277d09.inventory.getItemConfig(_0x3b2363.id),
                              _0x322e54 = _0x277d09.inventory.getItemDescription({
                          'itemId': _0x3b2363.id,
                          'gender': _0x437401,
                          'drawable': _0x736e8f.drawable,
                          'texture': _0x736e8f.texture
                        });

                        let _0x2e80b6 = _0x3b2363.title;
                        _0x277d09.inventory.isItemClothes(_0x3b2363) && (_0x2e80b6 = _0x10828d.description), _0x736e8f.title = _0x2e80b6, _0x736e8f.description = _0x322e54;
                      }

                  }

                  _0x4337e8.items && _0x4337e8.items.forEach(_0x136810 => {
                    const _0x1eb75e = _0x277d09.inventory.getItemById(parseInt(_0x136810.itemId));

                    delete _0x136810.itemId, _0x136810.title = _0x1eb75e.title, _0x136810.description = _0x1eb75e.description;
                  });
                }

                _0x1993ab.globalBrowser.emit('market_updateStock', {
                  'key': _0x465819,
                  'stock': _0x40ed28
                });
              }
            }
          }
        }), _0x277d09.events.add('market.buy', (_0x8c9f09, _0x4cc641) => {
          _0x173d31 || (_0x173d31 = true, _0x277d09.events.callRemote('4013986237', 'selling', _0x8c9f09, _0x4cc641));
        }), _0x277d09.events.add('market.sell', (_0x3fa206, _0x4c1811) => {
          _0x173d31 || (_0x173d31 = true, _0x277d09.events.callRemote('4013986237', 'buying', _0x3fa206, _0x4c1811));
        }), _0x277d09.events.add('market.trade', (_0x5f5310, _0x305ea9) => {
          _0x173d31 || (_0x173d31 = true, _0x277d09.events.callRemote('4013986237', 'trade', _0x5f5310, _0x305ea9));
        }), _0x277d09.events.add('market.result', () => {
          _0x173d31 = false;
        }), _0x277d09.events.add('market.close', () => {
          _0x31e188.api.toggleHud(true), _0x31e188.api.toggleChat(true), _0x31e188.api.toggleRadar(true), _0x5ae35e = null, _0x1993ab.globalBrowser.toggle('market', {
            'value': false
          });
        }), _0x277d09.events.add('npc.exitShape', () => {
          _0x50e8bd.g.interfaces.market && _0x277d09.events.call('market.close');
        }), _0x277d09.events.add('playerDeath2', _0x4683ee => {
          _0x50e8bd.g.interfaces.market && _0x4683ee === _0x55faec && _0x277d09.events.call('market.close');
        });
      },
      0x1173d: (_0x1635b2, _0x2498c5, _0x3c86e8) => {
        'use strict';

        const a0_0x7f49a8 = {
          _0x3e044b: 0x1992
        },
              a0_0x478543 = {
          _0x469f93: 0x1870,
          _0x2763f5: 0x14d2,
          _0x12e36d: 0x1a5,
          _0x4f03cc: 0xace,
          _0x28d006: 0x1d66,
          _0x4b77f7: 0xe6d
        },
              a0_0x1fb969 = {
          _0x5bb629: 0x535,
          _0x3e60a3: 0x5c2,
          _0x31b4e9: 0x535
        },
              a0_0x51055e = {
          _0x3df546: 0x535,
          _0x39d219: 0x1985,
          _0x26d6d9: 0x1985,
          _0x9c656: 0x713,
          _0x2c4242: 0x1063
        },
              a0_0x614c7d = {
          _0xd116d6: 0x1985,
          _0x153913: 0x5c2,
          _0x2fba53: 0x713
        },
              a0_0x4fe6ca = {
          _0xb44bbc: 0x14d2,
          _0x5ca113: 0x1da5,
          _0x2f107c: 0x266f
        },
              a0_0x506720 = {
          _0x1d22f7: 0x1edc,
          _0x3c5e57: 0x1d66,
          _0x45c207: 0x1edc
        },
              a0_0x459c42 = {
          _0x306e23: 0x2679,
          _0x39b063: 0x2132,
          _0x2f026f: 0x242c,
          _0x34f47d: 0x137e,
          _0x221164: 0x1a07,
          _0x172075: 0x218,
          _0x4579e7: 0x2488,
          _0x255184: 0x14d2
        };

        _0x3c86e8.r(_0x2498c5);

        var _0x428b80 = _0x3c86e8(0x16a21),
            _0x4cf2e9 = _0x3c86e8(0x12a76),
            _0x1f2419 = _0x3c86e8(0x161cd);

        const _0x1e4dbf = _0x1f2419.players.local,
              _0x47ca6c = [{
          'station': 'LSIA Terminal',
          'id': 0x0,
          'x': -1102.43,
          'y': -2730.98,
          'z': -7.41,
          'final': true
        }, {
          'station': 'LSIA Terminal',
          'id': 0x1,
          'x': -1062.82,
          'y': -2697.82,
          'z': -7.41,
          'final': false
        }, {
          'station': 'LSIA Parking',
          'id': 0x2,
          'x': -878.79,
          'y': -2317.05,
          'z': -11.73,
          'final': false
        }, {
          'station': 'LSIA Parking',
          'id': 0x3,
          'x': -885.77,
          'y': -2314.26,
          'z': -11.73,
          'final': false
        }, {
          'station': 'Puerto Del Sol',
          'id': 0x4,
          'x': -541.01,
          'y': -1288.4,
          'z': 26.9,
          'final': false
        }, {
          'station': 'Puerto Del Sol',
          'id': 0x5,
          'x': -544.82,
          'y': -1286.46,
          'z': 26.9,
          'final': false
        }, {
          'station': 'Strawberry',
          'id': 0x6,
          'x': 0x117,
          'y': -1207.1,
          'z': 38.89,
          'final': false
        }, {
          'station': 'Strawberry',
          'id': 0x7,
          'x': 279.6,
          'y': -1201.62,
          'z': 38.89,
          'final': false
        }, {
          'station': 'Burton',
          'id': 0x8,
          'x': -290.45,
          'y': -332.06,
          'z': 10.06,
          'final': false
        }, {
          'station': 'Burton',
          'id': 0x9,
          'x': -298.05,
          'y': -332.06,
          'z': 10.06,
          'final': false
        }, {
          'station': 'Portola Drive',
          'id': 0xa,
          'x': -816.3,
          'y': -134.11,
          'z': 19.95,
          'final': false
        }, {
          'station': 'Portola Drive',
          'id': 0xb,
          'x': -812.45,
          'y': -140.36,
          'z': 19.95,
          'final': false
        }, {
          'station': 'Del Perro',
          'id': 0xc,
          'x': -1355.43,
          'y': -464.75,
          'z': 15.04,
          'final': false
        }, {
          'station': 'Del Perro',
          'id': 0xd,
          'x': -1349.18,
          'y': -461.38,
          'z': 15.04,
          'final': false
        }, {
          'station': 'Little Seoul',
          'id': 0xe,
          'x': -502.46,
          'y': -676.59,
          'z': 11.8,
          'final': false
        }, {
          'station': 'Little Seoul',
          'id': 0xf,
          'x': -502.76,
          'y': -669.37,
          'z': 11.8,
          'final': false
        }, {
          'station': 'Pillbox South',
          'id': 0x10,
          'x': -217.11,
          'y': -1038.77,
          'z': 30.14,
          'final': false
        }, {
          'station': 'Pillbox South',
          'id': 0x11,
          'x': -214.17,
          'y': -1040.12,
          'z': 30.13,
          'final': false
        }, {
          'station': 'Davis',
          'id': 0x12,
          'x': 110.09,
          'y': -1718.53,
          'z': 30.11,
          'final': false
        }, {
          'station': 'Davis',
          'id': 0x13,
          'x': 118.91,
          'y': -1730.56,
          'z': 30.11,
          'final': true
        }],
              _0x450506 = _0x1f2419.colshapes.newSphere(178.29, -1779.05, 29.08, 0xa, -0x1);

        let _0xf15c2d = [];
        _0x3c86e8.g.metroColshapes = [], _0x3c86e8.g.isUsingMetro = false;

        let _0x44f384,
            _0x2ca58d = false;

        _0x47ca6c.forEach(_0xd2d51d => {
          if (false === _0xd2d51d.final) {
            let _0xed59e1 = _0x1f2419.colshapes.newSphere(_0xd2d51d.x, _0xd2d51d.y, _0xd2d51d.z, 0x1, -0x1);

            _0xed59e1.name = _0xd2d51d.station, _0xed59e1.cid = _0xd2d51d.id, _0xed59e1.pos = new _0x1f2419.Vector3(_0xd2d51d.x, _0xd2d51d.y, _0xd2d51d.z), _0xed59e1.isFinal = _0xd2d51d.final, _0xed59e1.marker = _0x1f2419.markers.new(0x1, new _0x1f2419.Vector3(_0xd2d51d.x, _0xd2d51d.y, _0xd2d51d.z - 0x1), 0x1, {
              'color': [0x34, 0x98, 0xdb, 0xff]
            }), _0x3c86e8.g.metroColshapes.push(_0xed59e1);
          }

          let _0x53817a = _0x1f2419.colshapes.newSphere(_0xd2d51d.x, _0xd2d51d.y, _0xd2d51d.z, 6.5, -0x1);

          _0x53817a.name = _0xd2d51d.station, _0x53817a.cid = _0xd2d51d.id, _0x53817a.pos = new _0x1f2419.Vector3(_0xd2d51d.x, _0xd2d51d.y, _0xd2d51d.z), _0x53817a.isFinal = _0xd2d51d.final, _0xf15c2d.push(_0x53817a);
        }), _0x1f2419.events.add('keys.e', () => {
          if (_0x3c86e8.g.metroColshapes.includes(_0x3c86e8.g.metroColshape)) {
            if (!_0x3c86e8.g.interfaces.metro) return _0x428b80.api.longNotifyTrans('metro.tempDisabled', 'error');

            _0x4cf2e9.globalBrowser.toggle('metro', {
              'value': false
            });
          } else _0x2ca58d && _0x1f2419.events.call('metro.clear');
        }), _0x1f2419.events.add('playerEnterColshape', _0x30df4c => {
          _0x428b80.api.isAuthed() && (_0x3c86e8.g.metroColshapes.includes(_0x30df4c) && (_0x3c86e8.g.metroColshape = _0x30df4c, _0x428b80.api.displayHelpStringTrans('displayHelpString.toBuyTicket', false, true, 0x1388)), _0xf15c2d.includes(_0x30df4c) && _0x2fc912 && (_0x44f384 = _0x30df4c, _0x584aae(_0x30df4c.name, _0x30df4c.isFinal)), _0x450506 === _0x30df4c && _0x3c86e8.g.isUsingMetro && _0x584aae(null, true));
        }), _0x1f2419.events.add('playerExitColshape', _0x250233 => {
          _0x428b80.api.isAuthed() && (_0x3c86e8.g.metroColshapes.includes(_0x250233) && (_0x3c86e8.g.metroColshape = null, _0x1f2419.game.ui.clearHelp(true), _0x4cf2e9.globalBrowser.toggle('metro', {
            'value': false
          })), _0xf15c2d.includes(_0x250233) && (_0x44f384 = null, _0x2ca58d = false));
        }), _0x1f2419.events.add('metro.close', () => {
          _0x4cf2e9.globalBrowser.toggle('metro', {
            'value': false
          });
        }), _0x1f2419.events.add('metro.buyTicket', async (_0x3d37d0, _0x390497, _0x1007c4) => {
          _0x1f2419.events.callRemote('940617900', _0x3d37d0, _0x1007c4, _0x390497);
        }), _0x1f2419.events.add('metro.server.buyTicketSuccess', async _0x3d4e59 => {
          let _0x63ca8a;

          _0x4cf2e9.globalBrowser.toggle('metro', {
            'value': false
          });

          const _0x4b218f = _0x47ca6c.find(_0x10bc04 => _0x10bc04.station === _0x3d4e59),
                _0x415506 = _0x47ca6c.filter(_0x486c9c => _0x486c9c.station === _0x3c86e8.g.metroColshape.name);

          _0x63ca8a = _0x4b218f && _0x4b218f.id >= _0x3c86e8.g.metroColshape.cid ? _0x415506[0x0] : _0x415506[0x1], _0x3c86e8.g.isUsingMetro = true, await _0x428b80.api.toggleHud(false), _0x4399fc(_0x63ca8a);
        });
        let _0x2ba640 = [],
            _0x2fc912 = false;

        const _0x4399fc = async _0x49f123 => {
          if (!_0x49f123) return _0x428b80.api.toggleHud(true), _0x3c86e8.g.isUsingMetro = false;
          _0x1f2419.events.callRemote('3702382805', _0x1f2419.players.local.remoteId + 0x2710), _0x428b80.api.setDiscordStatus('inMetro'), _0x1f2419.events.call('setTraffic', 0x3), _0x428b80.api.invokeNative('DELETE_ALL_TRAINS'), await _0x428b80.api.loadModel('metrotrain'), await _0x428b80.api.loadModel('s_m_m_lsmetro_01');

          let _0x3c7213 = _0x1f2419.game.vehicle.createMissionTrain(0x18, _0x49f123.x, _0x49f123.y, _0x49f123.z, true);

          _0x2ba640.push(_0x3c7213), _0x1e4dbf.setIntoVehicle(_0x3c7213, 0x0), (_0x2ba640.forEach(_0x215312 => {
            _0x215312 && (_0x428b80.api.invokeNative('SET_TRAIN_SPEED', _0x215312, 14.5), _0x428b80.api.invokeNative('SET_TRAIN_CRUISE_SPEED', _0x215312, 14.5));
          }), await _0x1f2419.game.sleep(0x3e8), _0x2fc912 = true, _0x1f2419.events.callRemote('1761434058'));
        },
              _0x584aae = async (_0x205c77, _0x105e43) => {
          let _0x15e7ff = 0x0;
          _0x2ba640.forEach(_0xa5a6a => {
            if (_0xa5a6a) try {
              _0x428b80.api.invokeNative('SET_TRAIN_SPEED', _0xa5a6a, _0x15e7ff), _0x428b80.api.invokeNative('SET_TRAIN_CRUISE_SPEED', _0xa5a6a, _0x15e7ff);
            } catch (_0xd48ef6) {
              _0x428b80.api.sendError(_0xd48ef6);
            }
          }), await _0x1f2419.game.sleep(0x3e8), _0x2ca58d = true, _0x105e43 ? _0x1f2419.events.call('metro.clear') : (_0x428b80.api.displayHelpStringTrans('displayHelpString.currentStation', {
            'stationName': _0x205c77
          }, false, true, 0x2710), await _0x1f2419.game.sleep(0x2710), _0x2ca58d = false, _0x15e7ff = 14.5, _0x2ba640.forEach(_0x25307a => {
            if (_0x25307a) try {
              _0x428b80.api.invokeNative('SET_TRAIN_SPEED', _0x25307a, _0x15e7ff), _0x428b80.api.invokeNative('SET_TRAIN_CRUISE_SPEED', _0x25307a, _0x15e7ff);
            } catch (_0x1e0e1c) {
              _0x428b80.api.sendError(_0x1e0e1c);
            }
          }));
        };

        _0x1f2419.events.add('metro.clear', async () => {
          const a0_0x39d876 = {
            _0x20d31b: 0x4b9
          };
          _0x3c86e8.g.isUsingMetro = false, _0x2fc912 = false, _0x2ca58d = false, await _0x1f2419.game.sleep(0x1f4), _0x2ba640.forEach(_0x5bd1d2 => {
            _0x1f2419.game.vehicle.deleteMissionTrain(_0x5bd1d2), _0x428b80.api.invokeNative('DELETE_ALL_TRAINS');
          }), _0x428b80.api.setPlayerPos(_0x1e4dbf, _0x44f384.pos), _0x1f2419.events.callRemote('3702382805', 0x0), _0x44f384 = null, await _0x428b80.api.toggleHud(true), _0x1f2419.events.call('setTraffic', 0x0), _0x1f2419.events.call('cleartraffic'), _0x1f2419.events.callRemote('3397418647');
        }), _0x1f2419.events.add('render', () => {
          _0x3c86e8.g.isUsingMetro && _0x1f2419.game.controls.disableControlAction(0x0, 0x4b, true);
        });
      },
      0xbf3d: (_0x30f2b7, _0x311155, _0x16f77b) => {
        'use strict';

        const a0_0x2991fb = {
          _0x217230: 0x14d2
        },
              a0_0x60fccd = {
          _0x52ed8a: 0x2488,
          _0x10e08d: 0x1571,
          _0x357a8e: 0x535,
          _0x26791b: 0x535,
          _0x1518b4: 0x1182
        },
              a0_0x3cd2c7 = {
          _0x1e7336: 0x535,
          _0x4ef650: 0x1a07,
          _0x2afd08: 0x251,
          _0x2dd30c: 0x14a5,
          _0x4e0906: 0x9b1
        },
              a0_0x3d46d4 = {
          _0x43b442: 0xe6d
        };

        _0x16f77b.r(_0x311155);

        var _0x3f7e1c = _0x16f77b(0x16a21),
            _0x5a19cd = _0x16f77b(0xa44d),
            _0xb3ecfe = _0x16f77b.n(_0x5a19cd),
            _0x6c8461 = _0x16f77b(0x35cd),
            _0x53d5d9 = _0x16f77b(0x69a1),
            _0x48d025 = _0x16f77b.n(_0x53d5d9),
            _0x18f87c = _0x16f77b(0x12a76),
            _0x22e395 = _0x16f77b(0x161cd);

        const _0x467e7a = _0x22e395.players.local;
        let _0x50da6b = false,
            _0x336cb2 = false;

        const _0x4318de = new Set();

        _0xb3ecfe().forEach(_0x926199 => {
          _0x926199.items.forEach(_0x56b708 => {
            _0x4318de.add(_0x56b708);
          });
        });

        const _0x2e3707 = _0x6c8461.Z.filter(_0x5bd0b2 => _0x4318de.has(_0x5bd0b2.id)).map(_0x176bf3 => ({
          'itemId': _0x176bf3.id,
          'title': _0x176bf3.title,
          'width': _0x176bf3.width,
          'height': _0x176bf3.height,
          'shopCount': _0x176bf3.shopCount,
          'weight': _0x176bf3.weight
        }));

        _0x22e395.events.add('vue.mounted', () => {
          _0x18f87c.globalBrowser.emit('mobile_shops_preinit', {
            'shopConfig': _0xb3ecfe(),
            'items': _0x2e3707,
            'priceConfig': _0x48d025().mobile_shops
          });
        }), _0x22e395.events.add('mobile_shops.init', (_0x10fcc7, _0x2601d6, _0x195b3b) => {
          _0x16f77b.g.currentInterface || (_0x18f87c.globalBrowser.toggle('store', {
            'value': true,
            'type': _0x10fcc7,
            'warehouse': _0x2601d6,
            'prices': _0x195b3b,
            'mobile': true
          }), _0x3f7e1c.api.toggleHud(false), _0x3f7e1c.api.toggleChat(false), _0x3f7e1c.api.setDiscordStatus('phoneshop'), _0x50da6b = true);
        }), _0x22e395.events.add('mobile_shops.buy', (_0x4524a3, _0x523ed2) => {
          if (_0x336cb2) return _0x3f7e1c.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          'bank' !== _0x523ed2 || _0x467e7a.bank && _0x467e7a.bank.id ? (_0x336cb2 = true, _0x22e395.events.callRemote('3239613569', _0x4524a3, _0x523ed2)) : _0x3f7e1c.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
        }), _0x22e395.events.add('mobile_shops.buySuccess', () => {
          _0x336cb2 = false;
        }), _0x22e395.events.add('mobile_shops.buyError', () => {
          _0x336cb2 = false;
        }), _0x22e395.events.add('mobile_shops.exit', () => {
          _0x18f87c.globalBrowser.toggle('store', {
            'value': false
          }), _0x3f7e1c.api.toggleHud(true), _0x3f7e1c.api.toggleChat(true), _0x18f87c.globalBrowser.emit('toggle_bankCard', {
            'value': false
          }), _0x3f7e1c.api.setDiscordStatus(), _0x50da6b = false, _0x336cb2 = false;
        }), _0x22e395.events.add('playerDeath2', _0x93256f => {
          _0x50da6b && _0x93256f === _0x467e7a && _0x22e395.events.call('mobile_shops.exit');
        }), _0x22e395.events.add('npc.exitShape', () => {
          _0x50da6b && _0x22e395.events.call('mobile_shops.exit');
        });
      },
      0x92de: (_0x1e22e6, _0x122b58, _0x40e456) => {
        'use strict';

        const a0_0x4c15e6 = {
          _0x533146: 0x385,
          _0x4165c9: 0x213a,
          _0x397fd2: 0x830,
          _0x346341: 0x14d2,
          _0x4ecffb: 0x1a5,
          _0x350579: 0x10f9,
          _0x4e629e: 0x14d2,
          _0x36c960: 0x190f,
          _0x3f97b4: 0x1a5,
          _0x3f26fc: 0x14d2,
          _0x388a1f: 0x20b
        },
              a0_0x49a620 = {
          _0x1dabeb: 0x535,
          _0x515a42: 0x1724,
          _0x1b4248: 0x1a3,
          _0x252d04: 0x1d66,
          _0x49a565: 0x20b
        },
              a0_0x25eb6e = {
          _0x8d3061: 0x535,
          _0x12afaa: 0x1349,
          _0x5bed79: 0xbb1,
          _0x23c8db: 0x535
        };

        _0x40e456.r(_0x122b58);

        var _0x13384a = _0x40e456(0x16a21),
            _0x281c12 = _0x40e456(0x12a76),
            _0x4eee9c = _0x40e456(0x161cd);

        _0x40e456.g.modalWindow = false, _0x4eee9c.events.add('showDialogTrans', (_0x526052, _0x3fc210, _0x692e0c, _0x118dda, _0x2af80f = {}, _0x60199b, _0x4e3e11 = 'system.ok', _0x1bd80f = 'system.cancel', _0xc1cc0d = true) => {
          _0x4011dc(_0x526052, _0x3fc210, _0x13384a.api.language.translatePlayer(_0x692e0c, {}), _0x13384a.api.language.translatePlayer(_0x118dda, _0x2af80f), _0x60199b, _0x13384a.api.language.translatePlayer(_0x4e3e11), _0x13384a.api.language.translatePlayer(_0x1bd80f), _0xc1cc0d);
        }), _0x4eee9c.events.add('showDialog', (_0x28af3b, _0x20c5fc, _0x3203e0, _0x123343, _0x470652, _0x4569c9 = 'ОК', _0x2c67f2 = 'Отмена', _0x300383 = true) => {
          _0x4011dc(_0x28af3b, _0x20c5fc, _0x3203e0, _0x123343, _0x470652, _0x4569c9, _0x2c67f2, _0x300383);
        });

        const _0x4011dc = (_0x224c1b, _0x254963, _0x2b1219, _0x39a6d2, _0x5b3f2d, _0x3e9cae = 'ОК', _0xf0cb7f = 'Отмена', _0x26d364 = true) => {
          if ('confirm' === _0x254963) _0x13384a.api.playSound(['income_request']);
          _0x281c12.globalBrowser.emit('dialog_show', {
            'id': _0x224c1b,
            'type': _0x254963,
            'title': _0x2b1219,
            'message': _0x39a6d2,
            'value': _0x5b3f2d,
            'button1': _0x3e9cae,
            'button2': _0xf0cb7f,
            'numberOnly': _0x26d364
          }), _0x4eee9c.game.sleep(0x96).then(() => _0x4eee9c.gui.cursor.show(true, true)), _0x40e456.g.modalWindow = true;
        };

        let _0x996378 = 0x0,
            _0x55a285 = null;

        _0x4eee9c.events.add('onDialogResponse', (_0x2e03f4, _0x319b5e, _0x40f283, _0x24ff5c) => {
          if (!_0x13384a.api.ePress(_0x996378, 0x7d0) || _0x55a285 !== _0x2e03f4) {
            if (_0x996378 = _0x13384a.api.ePressUpdate(0x7d0), _0x55a285 = _0x2e03f4, _0x4eee9c.gui.cursor.show(false, false), _0x319b5e) switch (_0x2e03f4) {
              case 0x20:
                return void _0x4eee9c.events.call('property.sellConfirm');

              case 0x2c:
                return void _0x4eee9c.events.call('apartments.sellConfirm');

              case 0x35:
                return void _0x4eee9c.events.call('atm.sellConfirm');
            }
            _0x4eee9c.events.callRemote('3720384243', _0x2e03f4, _0x319b5e, _0x40f283, _0x24ff5c), _0x40e456.g.modalWindow = false;
          }
        });
      },
      0x18429: (_0x5eed36, _0x5a6d33, _0x4e04d8) => {
        'use strict';

        const a0_0x4eebc9 = {
          _0x372ef7: 0x2488,
          _0x3201a9: 0x1a3,
          _0x1584de: 0x2488,
          _0x458d2b: 0x4a3
        },
              a0_0x26d94c = {
          _0x5f1c02: 0x1dda,
          _0x47b2b8: 0x2488
        },
              a0_0x475cda = {
          _0x22963d: 0x2488,
          _0x53be22: 0x1a3
        },
              a0_0x2583ba = {
          _0x544a4f: 0x394
        },
              a0_0x2ad8b1 = {
          _0x8b9522: 0xb42,
          _0x8400fe: 0x2488,
          _0x4ea418: 0x1a3,
          _0x3c0804: 0x1c6e,
          _0x5cdea8: 0x1dc,
          _0x433295: 0x3c3,
          _0xd5af59: 0x8c3,
          _0x382415: 0x1dc,
          _0x70694c: 0x1a5,
          _0x74819: 0x2488,
          _0x1eecab: 0x1dc
        },
              a0_0x168127 = {
          _0x17c4f2: 0x14d2,
          _0x2e2a59: 0x1da5,
          _0x513d74: 0x1a34,
          _0x2de8a1: 0xc2a,
          _0xadb3f0: 0x1edc,
          _0x8c65bc: 0x1dc,
          _0x5dfad6: 0x1a6,
          _0x3591d0: 0x112d
        },
              a0_0x53787b = {
          _0x5a854c: 0x4b9,
          _0x10ff66: 0x535,
          _0x55ab60: 0xc95,
          _0x2423f7: 0xb5b,
          _0x318559: 0x165,
          _0x54c3a9: 0x1892,
          _0x1c3664: 0x535,
          _0x2a297a: 0x3e4,
          _0x1f8717: 0x19b7,
          _0x55e04b: 0x1d66,
          _0x1b96b7: 0x14e4,
          _0x61b81b: 0x185e,
          _0xc8846e: 0x535,
          _0x325f19: 0x1063
        },
              a0_0x40f654 = {
          _0x2ca5e9: 0x17d2,
          _0x562e2e: 0xf7e,
          _0x19ac0c: 0x991,
          _0x4d95b1: 0xb9d,
          _0x41bcf2: 0x535,
          _0xde50dd: 0x22f6
        },
              a0_0xb06ee5 = {
          _0x4c277f: 0x1820,
          _0x910a14: 0x19d2,
          _0x3049c5: 0x21e0,
          _0x2f0a11: 0x1741,
          _0x8ed1a9: 0x1d66,
          _0x1ec1a8: 0x686,
          _0x4fce79: 0x1d66,
          _0x579263: 0x14c4,
          _0x50884e: 0x2379,
          _0xf16d5e: 0x13b4,
          _0x377d3c: 0x1748,
          _0x38eb8b: 0x4b9,
          _0x48659b: 0x4b9,
          _0xe358ac: 0x1ae1,
          _0x4534b9: 0x1d66,
          _0x54e175: 0x2379,
          _0x8d9899: 0x1d66,
          _0x102c12: 0x1d66,
          _0x59adad: 0x1ee9,
          _0x326d10: 0xbb9,
          _0x25dc9e: 0x2034,
          _0x26f16a: 0x1350,
          _0x1b2526: 0x7c0,
          _0x561e61: 0x1850,
          _0x31e853: 0xd04,
          _0x46268c: 0x1a3,
          _0x1d9d4c: 0x926
        },
              a0_0x4ea5aa = {
          _0x40adf9: 0x2021,
          _0x459dc2: 0x1da5
        },
              a0_0x11869e = {
          _0x4f448f: 0x535,
          _0x189c2e: 0x253d,
          _0x5849bb: 0x11d9,
          _0x20fe5c: 0x11d9,
          _0xc72a49: 0x242c,
          _0x4c5606: 0x1a5,
          _0x3084ef: 0xa4e,
          _0x1eb331: 0x14d2,
          _0x16845f: 0x1da5,
          _0x1d8ce7: 0xba9,
          _0x2da1e6: 0x385,
          _0x4d8cbb: 0x19d6,
          _0xedab4c: 0x52c,
          _0x3d1de1: 0x2488,
          _0x64dbf8: 0x4a3
        },
              a0_0xaf912f = {
          _0x222cd7: 0x2cc,
          _0xd16a77: 0x1d66,
          _0x1a2476: 0x1e35,
          _0x16636d: 0x52c,
          _0xc46b8a: 0x213a
        };

        _0x4e04d8.r(_0x5a6d33);

        var _0x359b93 = _0x4e04d8(0x16a21),
            _0x1de32b = _0x4e04d8(0x12a76),
            _0x557d63 = _0x4e04d8(0x580a),
            _0x10e6f8 = _0x4e04d8(0xfc97),
            _0x1f86ca = _0x4e04d8.n(_0x10e6f8),
            _0x4fbe68 = _0x4e04d8(0xe694),
            _0x1472dc = _0x4e04d8.n(_0x4fbe68),
            _0x485e26 = _0x4e04d8(0x8aca),
            _0x55e90e = _0x4e04d8(0x16a7d),
            _0x1d6b4d = _0x4e04d8(0x161cd);

        const _0x13dad0 = _0x1d6b4d.players.local;
        let _0xa69764 = false,
            _0x3c7d54 = false;

        const _0x486c47 = {
          'settingsInited': false,
          'settings': {}
        },
              _0x46611b = {
          'chatFontSize': 0x12,
          'chatFont': 0x1,
          'chatWidth': 0x1f4,
          'chatHeight': 0x190,
          'chatTheme': 0x0,
          'chatFontStyle': 0x2,
          'chatBorderType': 0x0,
          'chatFontShadow': 0x3,
          'chatFontShadowAlpha': 0x64,
          'chatLineHeight': 0x7,
          'chatLinesMargin': 0x0,
          'chatTimestamp': 0x0
        },
              _0x2bf5b5 = {
          'chatTheme': 'theme',
          'chatFont': 'fontFamily',
          'chatFontStyle': 'fontWeight',
          'chatFontSize': 'fontSize',
          'chatFontShadow': 'textShadow',
          'chatFontShadowAlpha': 'shadowAlpha',
          'chatLineHeight': 'lineHeight',
          'chatWidth': 'width',
          'chatHeight': 'height',
          'chatLinesMargin': 'linesMargin',
          'chatBorderType': 'borderType',
          'chatTimestamp': 'timestamp'
        },
              _0x31ec84 = _0x3bdc87 => {
          let _0x2e7812 = {},
              _0xad4918 = Object.keys(_0x3bdc87).filter(_0xd40a6d => _0x35d7b5.includes(_0xd40a6d));

          if (!_0xad4918.length) {
            _0x2e7812 = { ..._0x46611b
            }, _0x486c47.settingsInited = true, _0x486c47.settings = _0x2e7812;

            const _0x1c76f0 = {},
                  _0x4e387d = Object.keys(_0x46611b);

            for (const _0x4dad32 of _0x4e387d) _0x1c76f0[_0x2bf5b5[_0x4dad32]] = _0x2e7812[_0x4dad32];

            return _0x1de32b.globalBrowser.emit('chat_updateSettings', {
              '__': true,
              ..._0x1c76f0
            }), void _0x1d6b4d.events.callRemote('2353465090', JSON.stringify(_0x2e7812));
          }

          for (const _0x65b8f3 of _0xad4918) _0x2e7812[_0x2bf5b5[_0x65b8f3]] = _0x3bdc87[_0x65b8f3];

          _0x486c47.settingsInited = true, _0x486c47.settings = _0x2e7812, _0x1de32b.globalBrowser.emit('chat_updateSettings', {
            '__': true,
            ..._0x2e7812
          });
        },
              _0x35d7b5 = Object.keys(_0x2bf5b5),
              _0x11dbed = _0x316e80 => {
          _0x1de32b.globalBrowser.toggle('panelMenu', {
            'value': false
          }), _0x359b93.api.toggleChat(true), _0x1d6b4d.game.graphics.transitionFromBlurred(0x64), _0x359b93.api.toggleChat(true), _0x316e80 || (_0x1d6b4d.gui.cursor.visible = false);
        };

        _0x1d6b4d.keys.bind(_0x55e90e.t.F2, false, () => {
          _0x359b93.api.toggleChat(false);

          try {
            if (!_0x359b93.api.isAuthed()) return;
            if (_0x4e04d8.g.currentInterface && 'panelMenu' !== _0x4e04d8.g.currentInterface) return;
            if (_0x4e04d8.g.skyCamera || _0x4e04d8.g.inBarbershop) return;
            if (_0x4e04d8.g.interfaces.chat) return;
            if (_0x4e04d8.g.interfaces.panelMenu) _0x11dbed();else {
              if (_0x3c7d54) return;
              _0xa69764 || _0x1d6b4d.events.call('donate.init'), _0x1de32b.globalBrowser.toggle('panelMenu', {
                'value': true
              }), _0x1d6b4d.events.callRemote('1992773717'), _0x1d6b4d.gui.cursor.visible = true, _0x359b93.api.toggleChat(false);
            }
          } catch (_0x53f752) {
            _0x359b93.api.sendError(_0x53f752);
          }
        }), _0x1d6b4d.keys.bind(_0x55e90e.t.F8, false, () => {
          !_0x359b93.api.isAuthed() || _0x4e04d8.g.currentInterface && 'panelMenu' !== _0x4e04d8.g.currentInterface || _0x4e04d8.g.skyCamera || _0x4e04d8.g.inBarbershop || _0x4e04d8.g.interfaces.chat || _0x4e04d8.g.interfaces.adminReport || _0x3c7d54 || (_0x4e04d8.g.interfaces.panelMenu ? _0x11dbed() : (_0xa69764 || _0x1d6b4d.events.call('donate.init'), _0x1d6b4d.events.callRemote('1992773717'), _0x1d6b4d.gui.cursor.visible = true, _0x359b93.api.toggleChat(false), _0x1de32b.globalBrowser.toggle('panelMenu', {
            'value': true,
            'initialCategory': 'reports'
          })));
        }), _0x1d6b4d.events.add('panelMenu.settings.updateChatSettings', _0x31ec84), _0x1d6b4d.events.add('chat.inited', () => {
          _0x486c47.settingsInited && _0x1de32b.globalBrowser.emit('chat_updateSettings', {
            '__': true,
            ..._0x486c47.settings
          });
        }), _0x1d6b4d.events.add('panelMenu.player.getData', _0x3de295 => {
          if ('skills' === _0x3de295) return _0x1de32b.globalBrowser.emit('panelMenu_player_setData', {
            'page': _0x3de295,
            'data': _0x13dad0.skills
          });

          _0x1d6b4d.events.callRemote('324215710', _0x3de295);
        }), _0x1d6b4d.events.add('panelMenu.player.getDataSuccess', (_0x4eaa0f, _0x34c734) => {
          if ('vehicles' === _0x4eaa0f) for (let _0x4c974e = 0x0; _0x4c974e < _0x34c734.vehicles.length; _0x4c974e++) {
            const _0x4e33a0 = _0x557d63.Z.find(_0x2f4421 => _0x2f4421.model === _0x1d6b4d.game.joaat(_0x34c734.vehicles[_0x4c974e].model));

            _0x34c734.vehicles[_0x4c974e] = { ..._0x34c734.vehicles[_0x4c974e],
              'model': _0x34c734.vehicles[_0x4c974e].model,
              'fuelType': _0x1f86ca()[_0x34c734.vehicles[_0x4c974e].model].fuelType,
              'title': _0x359b93.api.escapeHtml(_0x1d6b4d.game.ui.getLabelText(_0x1d6b4d.game.vehicle.getDisplayNameFromVehicleModel(_0x1d6b4d.game.joaat(_0x34c734.vehicles[_0x4c974e].model)))),
              'progress': {
                'maxSpeed': _0x4e33a0 ? _0x4e33a0.limit : 3.6 * _0x1d6b4d.game.vehicle.getVehicleModelMaxSpeed(_0x1d6b4d.game.joaat(_0x34c734.vehicles[_0x4c974e].model)),
                'breaking': _0x1d6b4d.game.vehicle.getVehicleModelMaxBraking(_0x1d6b4d.game.joaat(_0x34c734.vehicles[_0x4c974e].model)),
                'acceleration': _0x1d6b4d.game.vehicle.getVehicleModelAcceleration(_0x1d6b4d.game.joaat(_0x34c734.vehicles[_0x4c974e].model)),
                'traction': _0x1d6b4d.game.vehicle.getVehicleModelMaxTraction(_0x1d6b4d.game.joaat(_0x34c734.vehicles[_0x4c974e].model))
              }
            };
          }
          if ('property' === _0x4eaa0f) for (let _0x1dd4e1 of Object.keys(_0x34c734)) {
            const _0x9b5d8d = _0x1d6b4d.game.pathfind.getStreetNameAtCoord(parseFloat(_0x34c734[_0x1dd4e1].posX), parseFloat(_0x34c734[_0x1dd4e1].posY), parseFloat(_0x34c734[_0x1dd4e1].posZ), 0x0, 0x0),
                  _0x25787d = _0x359b93.api.escapeHtml(_0x1d6b4d.game.ui.getLabelText(_0x1d6b4d.game.zone.getNameOfZone(parseFloat(_0x34c734[_0x1dd4e1].posX), parseFloat(_0x34c734[_0x1dd4e1].posY), parseFloat(_0x34c734[_0x1dd4e1].posZ))));

            let _0xac2f09 = _0x359b93.api.escapeHtml(_0x1d6b4d.game.ui.getStreetNameFromHashKey(_0x9b5d8d.streetName));

            _0x9b5d8d.crossingRoad && _0x9b5d8d.crossingRoad != _0x9b5d8d.streetName && (_0xac2f09 += ' / ' + _0x359b93.api.escapeHtml(_0x1d6b4d.game.ui.getStreetNameFromHashKey(_0x9b5d8d.crossingRoad))), _0x34c734[_0x1dd4e1].streetName = _0xac2f09, _0x34c734[_0x1dd4e1].zoneName = _0x25787d;
          }

          _0x1de32b.globalBrowser.emit('panelMenu_player_setData', {
            'page': _0x4eaa0f,
            'data': _0x34c734
          });
        });

        const _0x2ca3e7 = async (_0x46e41b, _0x101937) => {
          try {
            if (_0x4c5135()) return;
            let _0x600280 = null;

            switch (_0x101937) {
              case 0x1:
                _0x600280 = 'move_m@brave';
                break;

              case 0x2:
                _0x600280 = 'move_m@confident';
                break;

              case 0x3:
                _0x600280 = 'move_m@drunk@verydrunk';
                break;

              case 0x4:
                _0x600280 = 'move_m@fat@a';
                break;

              case 0x5:
                _0x600280 = 'move_m@shadyped@a';
                break;

              case 0x6:
                _0x600280 = 'move_m@hurry@a';
                break;

              case 0x7:
                _0x600280 = 'move_m@injured';
                break;

              case 0x8:
                _0x600280 = 'move_m@intimidation@1h';
                break;

              case 0x9:
                _0x600280 = 'move_m@quick';
                break;

              case 0xa:
                _0x600280 = 'move_m@sad@a';
                break;

              case 0xb:
                _0x600280 = 'move_m@tool_belt@a';
                break;

              case 0xc:
                _0x600280 = 'move_m@swagger';
                break;

              case 0xd:
                _0x600280 = 'move_m@hobo@a';
                break;

              case 0xe:
                _0x600280 = 'move_f@sexy@a';
                break;

              case 0xf:
                _0x600280 = 'move_m@hiking';
            }

            _0x600280 ? (await _0x359b93.api.requestClipSet(_0x600280), _0x359b93.api.setMovementClipset(_0x600280, 0x0)) : await _0x359b93.api.resetMovementClipset();
          } catch (_0x36681f) {
            _0x359b93.api.sendError(_0x36681f);
          }
        },
              _0x4c5135 = () => {
          try {
            return !!(_0x4e04d8.g.isUsingSystemAnim || _0x13dad0.vehicle || _0x359b93.api.isCuffed(_0x13dad0) || null != _0x13dad0.getVariable('playerInTrunk') || _0x4e04d8.g.isUsingMetro || _0x13dad0.getVariable('isFollowing') || _0x13dad0.isFalling() || _0x13dad0.isSwimming() || _0x359b93.api.getEntitySync(_0x13dad0, 'isDead', 'boolean') || _0x13dad0.isBeingStunned(0x0) || _0x13dad0.isRagdoll() || _0x1d6b4d.game.ped.getConfigFlag(_0x1d6b4d.players.local.handle, 0x64, true));
          } catch (_0x378b8e) {
            _0x359b93.api.sendError(_0x378b8e);
          }
        };

        _0x1d6b4d.events.add('panelMenu.settings.init', () => {
          _0x1de32b.globalBrowser.emit('panelMenu_settings_init', {
            'data': _0x1d6b4d.players.local.settings
          });
        }), _0x1d6b4d.events.add('keys.f6', () => {
          if (!_0x359b93.api.isAuthed()) return;

          const _0xd33b4c = !_0x13dad0.settings.hotkeys;

          _0x1d6b4d.events.call('panelMenu.settings.update', 'hotkeys', _0xd33b4c), _0x1de32b.globalBrowser.emit('panelMenu_settings_setOption', {
            'key': 'hotkeys',
            'value': _0xd33b4c
          });
        }), _0x1d6b4d.events.add('panelMenu.settings.update', async (_0x3ec33d, _0x217caa) => {
          if ('language' !== _0x3ec33d) {
            if (_0x1d6b4d.events.callRemote('2023822823', _0x3ec33d, _0x217caa), _0x359b93.api.playSound('Tick', {
              'volume': 0x19
            }), _0x35d7b5.includes(_0x3ec33d)) {
              const _0xa392d = { ..._0x13dad0.settings,
                [_0x3ec33d]: _0x217caa
              };

              _0x31ec84(_0xa392d);
            }

            if ('chatSettings' === _0x3ec33d && 0x0 === _0x217caa) {
              const _0x43956a = { ..._0x46611b
              },
                    _0x50d657 = {},
                    _0x4c1b53 = Object.keys(_0x46611b);

              for (const _0x4f9ef7 of _0x4c1b53) _0x50d657[_0x2bf5b5[_0x4f9ef7]] = _0x46611b[_0x4f9ef7];

              _0x486c47.settings = _0x43956a, _0x1de32b.globalBrowser.emit('chat_updateSettings', {
                '__': true,
                ..._0x50d657
              }), _0x1d6b4d.events.callRemote('2353465090', JSON.stringify(_0x43956a));
            }
          }
        }), _0x1d6b4d.events.add('settings.finishUpdate', (_0x1e1737, _0x17d3e2) => {
          switch (_0x1e1737) {
            case 'chat':
              _0x359b93.api.toggleChat(_0x17d3e2);

              break;

            case 'hud':
              _0x359b93.api.toggleHud(_0x17d3e2);

              break;

            case 'radar':
              _0x359b93.api.toggleRadar(_0x17d3e2);

              break;

            case 'walkStyle':
              _0x2ca3e7(0x0, _0x17d3e2);

              break;

            case 'facialAnim':
              _0x1d6b4d.events.callRemote('2799766650', _0x17d3e2);

              break;

            case 'voiceKey':
              _0x1d6b4d.events.call('voice.setKey', _0x17d3e2);

              break;

            case 'voiceMute':
              _0x1d6b4d.events.callRemote('402594963', _0x17d3e2);

              break;

            case 'lodDistPlayer':
              _0x359b93.api.updateLodDist('lodDistPlayer', _0x17d3e2);

              break;

            case 'lodDistVeh':
              _0x359b93.api.updateLodDist('lodDistVeh', _0x17d3e2);

              break;

            case 'lodDistObject':
              _0x359b93.api.updateLodDist('lodDistObject', _0x17d3e2);

              break;

            case 'isStreamer':
              _0x1de32b.globalBrowser.emit('main_setIsStreamer', _0x17d3e2);

              break;

            case 'lowQualityMode':
              _0x1d6b4d.events.call('forceResyncClothes');

          }
        }), _0x1d6b4d.events.add('panelMenu.settings.preload', () => {
          _0x2ca3e7(0x0, _0x13dad0.settings.walkStyle), _0x1de32b.globalBrowser.emit('main_setIsStreamer', !!_0x13dad0.settings.isStreamer), _0x13dad0.settings.facialAnim && _0x1d6b4d.events.callRemote('2799766650', _0x13dad0.settings.facialAnim), _0x1d6b4d.events.call('voice.setKey', _0x13dad0.settings.voiceKey || 0x0), _0x1de32b.globalBrowser.emit('panelMenu_settings_init', {
            'settings': _0x13dad0.settings
          });
        });

        const _0x391644 = {
          'currentChunk': 0x0
        },
              _0x4d357d = () => {
          const _0x1279b4 = _0x4e04d8.g.requireAsset('donateAnim/chunk_' + _0x391644.currentChunk);

          if (_0x1de32b.globalBrowser.emit('panelMenu_donate_setAnimData', {
            '__': true,
            'chunk': _0x1279b4,
            'partId': _0x391644.currentChunk,
            'end': 0x6 === _0x391644.currentChunk
          }), _0x391644.currentChunk++, _0x391644.currentChunk > 0x6) {
            for (let _0x23e355 = 0x0; _0x23e355 <= 0x6; _0x23e355++) _0x4e04d8.g.clearAsset('donateAnim/chunk_' + _0x23e355);
          }
        };

        _0x1d6b4d.events.add('panelMenu.animData.partLoaded', () => {
          _0x391644.currentChunk <= 0x6 && _0x4d357d();
        }), _0x1d6b4d.events.add('auth.client.onPlayerAuthAccount', () => {
          const a0_0x9a2447 = {
            _0x176c60: 0x2488,
            _0x4c4947: 0x1a3,
            _0x3eb276: 0x14d9,
            _0x18f51c: 0x1f8f
          };
          _0x4d357d(), _0x1472dc().forEach(_0x20acab => {
            ({ ..._0x20acab
            }).items = _0x20acab.items.map(_0x4cdd89 => ({
              'title': _0x4cdd89.title
            })), _0x1de32b.globalBrowser.emit('panelMenu_animations_updateListByCategory', {
              'path': _0x20acab.path,
              'items': _0x20acab.items
            });
          });
        }), _0x1d6b4d.events.add('donate.init', () => {
          _0x3c7d54 || _0x4e04d8.g.interfaces.panelMenu || (_0x3c7d54 = true, _0x1d6b4d.events.callRemote('3590793569'));
        }), _0x1d6b4d.events.add('donate.setFreeChangeName', (_0x3c3e29, _0x1ec9ed) => {
          _0x1de32b.globalBrowser.emit('panelMenu_donate_setFreeChangeName', {
            'param': _0x3c3e29
          }), _0x1d6b4d.events.call('setDonate', _0x1ec9ed);
        }), _0x1d6b4d.events.add('donate.initSuccess', (_0x30863d, _0x162f81, _0x12b42e, _0x1a7c7c, _0x2f6ae7, _0x41b0b2, _0x276fd1) => {
          _0x3c7d54 = false, _0xa69764 = true, _0x1de32b.globalBrowser.emit('panelMenu_donate_init', {
            'donate': _0x12b42e,
            'carSlots': _0x30863d,
            'freeChangeName': _0x162f81,
            'freeroll': _0x1a7c7c,
            'freerollTimer': _0x2f6ae7,
            'cases': _0x41b0b2,
            'config': _0x276fd1
          });
        }), _0x1d6b4d.events.add('panelMenu.exit', _0x11dbed), _0x1d6b4d.events.add('panelMenu.reports.checkOnlinePlayers', _0x2e01da => {
          const _0x1b8685 = JSON.parse(_0x2e01da),
                _0x582a3b = {};

          for (const _0x124abf of _0x1b8685) _0x485e26.playersStaticIdMap[_0x124abf] && (_0x582a3b[_0x124abf] = _0x485e26.playersStaticIdMap[_0x124abf].remoteId);

          _0x1de32b.globalBrowser.emit('panelMenu_report_setOnlineStatics', {
            '__': true,
            'staticIdsMap': _0x582a3b
          });
        }), _0x1d6b4d.events.add('rules.close', () => {
          _0x1de32b.globalBrowser.emit('chat_show', true), _0x1de32b.globalBrowser.toggle('rules', {
            'value': false
          });
        }), _0x1d6b4d.events.add('playerDeath2', async _0x1eca6d => {
          _0x1eca6d === _0x13dad0 && _0x4e04d8.g.interfaces.panelMenu && (_0x1de32b.globalBrowser.toggle('panelMenu', {
            'value': false
          }), _0x359b93.api.toggleChat(true));
        });
      },
      0xfc88: (_0x5c835b, _0x30053c, _0x21d531) => {
        'use strict';

        const a0_0x2bb805 = {
          _0x5120fe: 0x2488,
          _0x5c7eaa: 0x4a3,
          _0x43a692: 0x235b,
          _0x1f9041: 0x535
        },
              a0_0x22897c = {
          _0x30058a: 0x535,
          _0x14cdb0: 0x235b,
          _0x5096f0: 0xa27,
          _0x5ca7d1: 0x4a3
        },
              a0_0x5318b9 = {
          _0x3cc967: 0x535,
          _0x128bbb: 0x178c,
          _0x4e7768: 0xc95,
          _0x4c867c: 0xc95,
          _0x436350: 0xc74,
          _0x196ef3: 0x1d51,
          _0x27d5c4: 0x107f,
          _0x13cfba: 0x2689,
          _0x4c06eb: 0x2001,
          _0x3395cf: 0x245c,
          _0xd80d4b: 0x24ee,
          _0x35bc00: 0x245c
        };

        _0x21d531.r(_0x30053c);

        var _0x261cf0 = _0x21d531(0x16a21),
            _0x16278a = _0x21d531(0x12a76),
            _0x41d683 = _0x21d531(0x161cd);

        _0x41d683.players.local;
        let _0x51e770 = false;
        _0x41d683.events.add('players.init', (_0x36966c = 'online', _0x594cf7 = []) => {
          _0x261cf0.api.toggleChat(false), _0x51e770 = false;
          let _0x487f4b = [];
          'online' === _0x36966c ? (_0x41d683.players.forEach(_0x1d8c1f => {
            _0x1d8c1f && _0x487f4b.push({
              'id': _0x1d8c1f.remoteId,
              'login': _0x261cf0.api.getName(_0x1d8c1f),
              'uid': _0x1d8c1f.getVariable('id'),
              'member': _0x1d8c1f.getVariable('member'),
              'leader': _0x1d8c1f.getVariable('leader'),
              'rank': _0x1d8c1f.getVariable('rank'),
              'level': _0x594cf7[_0x1d8c1f.remoteId] ? _0x594cf7[_0x1d8c1f.remoteId].level : null,
              'dayOnline': _0x594cf7[_0x1d8c1f.remoteId] ? (_0x594cf7[_0x1d8c1f.remoteId].dayOnline / 0xe10).toFixed(0x2) + ' ч.' : null,
              'monthOnline': _0x594cf7[_0x1d8c1f.remoteId] ? (_0x594cf7[_0x1d8c1f.remoteId].monthOnline / 0xe10).toFixed(0x2) + ' ч.' : null,
              'status': _0x1d8c1f.getVariable('id') ? 'online' : 'В авторизации'
            });
          }), _0x487f4b.sort((_0x2efcc9, _0x1fc9df) => _0x2efcc9.id - _0x1fc9df.id)) : _0x487f4b = _0x594cf7, _0x16278a.globalBrowser.toggle('players', {
            'value': true,
            'players': _0x487f4b
          });
        }), _0x41d683.events.add('players.search', _0x5ef986 => {
          _0x51e770 || (_0x51e770 = true, _0x41d683.events.callRemote('3877278760', _0x5ef986));
        }), _0x41d683.events.add('players.close', () => {
          _0x16278a.globalBrowser.toggle('players', {
            'value': false
          }), _0x261cf0.api.toggleChat(true);
        });
      },
      0x127c4: (_0x354f4f, _0x21d9ed, _0x1b3cbf) => {
        'use strict';

        const a0_0x3a826c = {
          _0x1ad1fe: 0x14d2,
          _0x25bdd1: 0x92d,
          _0x137736: 0x2273,
          _0x2859ea: 0x2488,
          _0x35a087: 0x1324
        },
              a0_0x3f059d = {
          _0x270fe7: 0x1bf8
        },
              a0_0xcec305 = {
          _0x56f1ad: 0x1da5,
          _0x455499: 0x1bf8,
          _0x47efe8: 0x1a60,
          _0x5765c9: 0xe4c
        },
              a0_0x41bf75 = {
          _0x451b4: 0x14d2,
          _0x8c27c6: 0x1da5,
          _0x6d59f9: 0x92d,
          _0x1cbbdc: 0x2488,
          _0x4295f2: 0x1324
        },
              a0_0x1473de = {
          _0x55e27b: 0x4a3,
          _0x184b8e: 0x1877,
          _0x448025: 0x145f
        },
              a0_0x1707e1 = {
          _0x4254af: 0xe4c,
          _0x460146: 0x1877,
          _0x20eb01: 0xe4c,
          _0x26e043: 0x145f,
          _0x101b01: 0x535,
          _0x5d00d3: 0x1a60,
          _0x484e37: 0x1a60,
          _0x3ebb05: 0x18ec,
          _0x533cba: 0xc7b,
          _0x3f3b03: 0x1469,
          _0x4b4ac3: 0x18ec,
          _0x3d1c2f: 0xe4c,
          _0x478163: 0x11fd,
          _0x58c2ed: 0x14b7,
          _0x329e20: 0x2288,
          _0x419ab7: 0x535,
          _0x6c438f: 0x359,
          _0x1c66e7: 0x18ec,
          _0x34b9e2: 0x14b5,
          _0x43e9a4: 0x14d2,
          _0x25dbd1: 0x2568,
          _0x224f5f: 0x535,
          _0x292b4b: 0x1ee9,
          _0x22b8c6: 0x2488,
          _0x73b860: 0x4a3,
          _0x340c05: 0x1324
        };

        _0x1b3cbf.r(_0x21d9ed);

        var _0x26a705 = _0x1b3cbf(0x16a21),
            _0x379500 = _0x1b3cbf(0x96d1),
            _0x3da90b = _0x1b3cbf.n(_0x379500),
            _0x693f78 = _0x1b3cbf(0x12a76),
            _0x127f13 = _0x1b3cbf(0x3064),
            _0x4e06e8 = _0x1b3cbf(0x161cd);

        const _0x136f32 = _0x4e06e8.players.local;
        let _0x438ee6 = false,
            _0x9b559f = null;
        _0x4e06e8.events.add('playerEnterColshape', _0x135705 => {
          if (_0x26a705.api.isAuthed() && _0x4e06e8.colshapes.exists(_0x135705) && !_0x136f32.vehicle && _0x135705.key && _0x135705.tableName && 'atm' !== _0x135705.tableName && !_0x135705.pickup) {
            if (_0x135705.pos && Math.abs(_0x135705.pos.z - _0x136f32.position.z) > 0x2) return;
            return _0x9b559f = _0x135705, void _0x26a705.api.displayHelpStringTrans('displayHelpString.getInfo', false, true, 0x1388);
          }
        }), _0x4e06e8.events.add('playerExitColshape', _0x2f9c1f => {
          if (_0x26a705.api.isAuthed() && _0x4e06e8.colshapes.exists(_0x2f9c1f)) return _0x2f9c1f && _0x2f9c1f === _0x9b559f ? (_0x9b559f = null, _0x4e06e8.game.ui.clearHelp(true), _0x4e06e8.events.call('property.close'), void (_0x438ee6 = false)) : undefined;
        }), _0x4e06e8.events.add('keys.e', async () => {
          if (_0x1b3cbf.g.interfaces.property) _0x693f78.globalBrowser.toggle('property', {
            'value': false
          });else {
            if (!_0x1b3cbf.g.currentInterface && _0x9b559f && _0x9b559f.key && _0x9b559f.tableName && 'atm' !== _0x9b559f.tableName && 'billboards' !== _0x9b559f.tableName && !_0x9b559f.pickup) {
              if (_0x438ee6) return;
              return _0x438ee6 = true, void _0x4e06e8.events.callRemote('1059535535', _0x9b559f.key, _0x9b559f.tableName);
            }
          }
        }), _0x4e06e8.events.add('property.getInfo', _0x140d10 => {
          if (_0x438ee6 = false, !_0x9b559f) return;

          const _0x17912d = 'houses' != _0x9b559f.tableName && 'apartments' != _0x9b559f.tableName ? _0x140d10.title : _0x26a705.api.language.translatePlayer(_0x1b3cbf.g[_0x9b559f.tableName][_0x9b559f.key].title?.['text'], _0x1b3cbf.g[_0x9b559f.tableName][_0x9b559f.key].title?.['args']);

          _0x140d10 = { ..._0x140d10,
            ..._0x1b3cbf.g[_0x9b559f.tableName][_0x9b559f.key],
            'tableName': _0x9b559f.tableName,
            'accountId': _0x140d10.accountId,
            'title': _0x17912d
          }, 'houses' != _0x9b559f.tableName && _0x140d10.mafiaId && (_0x140d10.mafia = _0x26a705.api.getFractionName(_0x140d10.mafiaId)), 'houses' === _0x9b559f.tableName && _0x140d10.id == _0x136f32.rentHouseId && (_0x140d10.rentHouse = true), 'houses' === _0x9b559f.tableName && 0x196 === _0x136f32.activeItemId && _0x26a705.api.isInMask(_0x136f32) ? _0x4e06e8.events.callRemote('500052162', _0x140d10.id) : 'houses' === _0x9b559f.tableName && (0x0, _0x127f13.isChristmas)() && _0x4e06e8.events.callRemote('3372673897', _0x140d10.id), _0x140d10.address = _0x26a705.api.escapeHtml(_0x26a705.api.getAddress(parseFloat(_0x140d10.posX), parseFloat(_0x140d10.posY), parseFloat(_0x140d10.posZ))), _0x693f78.globalBrowser.toggle('property', {
            'value': true,
            'prop': _0x140d10
          });
        }), _0x4e06e8.events.add('property.getApartmentInfo', (_0x5777ab, _0x699f66) => {
          _0x438ee6 = false, _0x9b559f && _0x693f78.globalBrowser.toggle('apartments', {
            'value': true,
            'apartments': _0x699f66,
            'buildingTitle': _0x3da90b()[_0x5777ab].title
          });
        }), _0x4e06e8.events.add('property.unrent', _0x234fd6 => {
          _0x438ee6 || (_0x438ee6 = true, _0x4e06e8.events.callRemote('2239028184', 'house', _0x234fd6), _0x693f78.globalBrowser.toggle('property', {
            'value': false
          }));
        }), _0x4e06e8.events.add('property.buy', (_0x5a99a8, _0x18bc99) => {
          if (_0x438ee6) return _0x26a705.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          _0x438ee6 = true, _0x4e06e8.events.callRemote('723059165', _0x5a99a8, _0x18bc99);
        }), _0x4e06e8.events.add('property.buyClose', () => {
          _0x438ee6 = false;
        }), _0x4e06e8.events.add('property.buyResult', (_0xa36c59, _0x498362, _0x50da33) => {
          _0x26a705.api.isAuthed() && _0x1b3cbf.g[_0x498362] && _0x1b3cbf.g[_0x498362][_0xa36c59] && (_0x1b3cbf.g[_0x498362][_0xa36c59].accountId = _0x50da33, _0x438ee6 = false);
        }), _0x4e06e8.events.add('property.sell', (_0x1dc6df, _0x23a7c3, _0x215149, _0x3d504d) => {
          if (_0x438ee6) return;
          _0x438ee6 = true, _0x693f78.globalBrowser.toggle('property', {
            'value': false
          });

          const _0xba1781 = 'houses' === _0x1dc6df ? 'Дом №' + _0x23a7c3 : _0x215149 + ' №' + _0x23a7c3;

          _0x4e06e8.events.call('showDialogTrans', 0x20, 'confirm', 'user.dialog.sellPropertyTitle', 'user.dialog.sellPropertyBody', {
            'propTitle': _0xba1781,
            'amount': _0x3d504d / 0x64 / 0x64 * 0x4b
          });
        }), _0x4e06e8.events.add('property.sellConfirm', () => {
          _0x9b559f && _0x4e06e8.events.callRemote('3595828133', _0x9b559f.key, _0x9b559f.tableName);
        }), _0x4e06e8.events.add('property.close', () => {
          _0x438ee6 = false, 'property' === _0x1b3cbf.g.currentInterface && _0x693f78.globalBrowser.toggle('property', {
            'value': false
          });
        }), _0x4e06e8.events.add('property.enter', _0x1e96ac => {
          if (_0x438ee6) return true;
          _0x438ee6 = true, _0x693f78.globalBrowser.toggle('property', {
            'value': false
          }), _0x438ee6 = false, _0x4e06e8.events.callRemote('4104692499', _0x1e96ac);
        }), _0x4e06e8.events.add('playerDeath2', _0x4a7e24 => {
          _0x4a7e24 === _0x136f32 && (_0x438ee6 = false);
        }), _0x4e06e8.events.add('apartments.close', () => {
          _0x438ee6 = false, _0x693f78.globalBrowser.toggle('apartments', {
            'value': false
          });
        }), _0x4e06e8.events.add('apartments.enter', _0x54aa0b => !!_0x438ee6 || (_0x9b559f ? (_0x438ee6 = true, _0x693f78.globalBrowser.toggle('apartments', {
          'value': false
        }), _0x438ee6 = false, void _0x4e06e8.events.callRemote('3812760592', _0x9b559f.key, _0x54aa0b)) : _0x438ee6 = false));
        let _0xa46dcf = null;
        _0x4e06e8.events.add('apartments.sell', (_0xc97b44, _0x2e9d0c) => {
          _0x438ee6 || (_0x438ee6 = true, _0xa46dcf = _0xc97b44, _0x693f78.globalBrowser.toggle('apartments', {
            'value': false
          }), _0x4e06e8.events.call('showDialogTrans', 0x2c, 'confirm', 'user.dialog.sellApartmentsTitle', 'user.dialog.sellApartmentsBody', {
            'id': _0xc97b44,
            'amount': _0x2e9d0c / 0x64 / 0x64 * 0x4b
          }));
        }), _0x4e06e8.events.add('apartments.sellConfirm', () => {
          _0x9b559f && _0x4e06e8.events.callRemote('3595828133', _0xa46dcf, 'apartments');
        }), _0x4e06e8.events.add('apartments.buy', _0x377195 => {
          if (_0x438ee6) return _0x26a705.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          _0x438ee6 = true, _0x693f78.globalBrowser.toggle('apartments', {
            'value': false
          }), _0x4e06e8.events.callRemote('723059165', 'apartments', _0x377195);
        }), _0x4e06e8.events.add('apartments.unrent', _0x2073d2 => {
          _0x438ee6 || (_0x438ee6 = true, _0x4e06e8.events.callRemote('2239028184', 'apartment', _0x2073d2), _0x693f78.globalBrowser.toggle('property', {
            'value': false
          }));
        });
      },
      0x98c1: (_0x30553a, _0x4cc2a0, _0x5e0114) => {
        'use strict';

        const a0_0x40c864 = {
          _0x5ac9da: 0x74c,
          _0x38ca14: 0x20f8,
          _0x1a3c4f: 0x20f8,
          _0x11070f: 0x1a07,
          _0x2912c2: 0x1934,
          _0x5cde99: 0x14d2,
          _0x189e6e: 0x3b7
        };

        _0x5e0114.r(_0x4cc2a0);

        var _0x134d37 = _0x5e0114(0x16a21),
            _0x585899 = _0x5e0114(0x12a76),
            _0x322dbe = _0x5e0114(0x161cd);

        const _0xe29abf = _0x322dbe.players.local,
              _0x413b64 = {
          'lastRequest': 0x0
        };
        _0x322dbe.events.add('radio.init', () => {
          _0x5e0114.g.interfaces.radio ? _0x585899.globalBrowser.toggle('radio', {
            'value': false
          }) : ('inventory' === _0x5e0114.g.currentInterface && _0x322dbe.events.call('inventoryApi.close'), _0x585899.globalBrowser.toggle('radio', {
            'value': true
          }));
        }), _0x322dbe.events.add('radio.close', () => {
          _0x585899.globalBrowser.toggle('radio', {
            'value': false
          });
        }), _0x322dbe.events.add('radio.setFrequency', _0x9bd405 => {
          if (!_0x134d37.api.ePress(_0x413b64.lastRequest, 0x7d0)) {
            if (_0x413b64.lastRequest = _0x134d37.api.ePressUpdate(0x7d0), !_0x322dbe.inventory.hasItem(_0xe29abf, 0xf)) return _0x134d37.api.longNotifyTrans('radio.noRadio', 'error');

            _0x322dbe.events.callRemote('3984777335', _0x9bd405);
          }
        }), _0x322dbe.events.add('radio.togglePower', _0x35c042 => {
          _0x134d37.api.ePress(_0x413b64.lastRequest, 0x7d0) || (_0x413b64.lastRequest = _0x134d37.api.ePressUpdate(0x7d0), _0x322dbe.events.callRemote('769819611', _0x35c042), _0x134d37.api.play3DSound('walkieTalkie/' + (_0x35c042 ? 'walkie_on' : 'walkie_off'), {
            'volume': 0x1e
          }));
        }), _0x322dbe.events.add('radio.client.setPower', _0x22e77c => {
          _0x585899.globalBrowser.emit('radio_setPower', !!_0x22e77c);
        }), _0x322dbe.events.add('radio.client.setFrequency', _0x1871a3 => {
          _0x585899.globalBrowser.emit('radio_changeFrequencyValue', _0x1871a3);
        });
      },
      0x933e: (_0x15aa08, _0x1e2cff, _0x35bc4c) => {
        'use strict';

        const a0_0x6252dc = {
          _0x1d22db: 0x13b0,
          _0x19cce5: 0x535,
          _0x33e880: 0x1a07,
          _0x81afd9: 0xa23
        };

        _0x35bc4c.r(_0x1e2cff);

        var _0x185d7e = _0x35bc4c(0x16a21),
            _0x3b3ed9 = _0x35bc4c(0x12a76),
            _0x137d5b = _0x35bc4c(0x161cd);
      0x8213: (_0x107f1c, _0x2f8b84, _0x5db586) => {
        'use strict';

        const a0_0x4bb8c6 = {
          _0x307058: 0x535,
          _0x186c50: 0x1934,
          _0x21e66d: 0x4a3,
          _0x25b9c3: 0x1da5,
          _0x2813a5: 0x20f4,
          _0x375fbb: 0x52c
        },
              a0_0xe34f8a = {
          _0x1e3f87: 0x253d,
          _0x23b895: 0x535,
          _0x46a02c: 0x17c
        },
              a0_0x1ebfce = {
          _0x4f5ff8: 0x1aab,
          _0x7655ea: 0x2405,
          _0x349630: 0x22ba,
          _0x1e7d7b: 0xf82,
          _0xd8614c: 0x1d2
        };

        _0x5db586.r(_0x2f8b84);

        var _0x58ff4c = _0x5db586(0x16a21),
            _0x5dbde0 = _0x5db586(0x12a76),
            _0x16aa01 = _0x5db586(0x161cd);

        _0x16aa01.players.local;
        let _0x89d392 = false,
            _0x177de7 = false,
            _0x28b3ed = [],
            _0x137526 = null,
            _0x1f3272 = null;
        [[-41.1567, -1081.7841, 26.6593], [-354.911, -128.1484, 39.4306], [1737.757, 3709.7163, 34.1376], [-214.9126, 6218.2963, 31.4913], [-738.65, -1399.62, 0x5], [-1620.84, -3151.58, 13.99]].forEach((_0x1576bb, _0xec53) => {
          let _0x495e7e = _0x16aa01.colshapes.newSphere(_0x1576bb[0x0], _0x1576bb[0x1], _0x1576bb[0x2], 0x1, 0x0);

          _0x495e7e.marker = _0x16aa01.markers.new(0x1, new _0x16aa01.Vector3(_0x1576bb[0x0], _0x1576bb[0x1], _0x1576bb[0x2] - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff]
          }), _0x495e7e.shapeIndex = _0xec53, _0x28b3ed.push(_0x495e7e);
        }), _0x16aa01.events.add('playerEnterColshape', _0x5cb3d3 => {
          _0x58ff4c.api.isAuthed() && _0x28b3ed.includes(_0x5cb3d3) && (_0x58ff4c.api.displayHelpStringTrans('displayHelpString.spawnCar', false, true, 0x1388), _0x137526 = _0x5cb3d3);
        }), _0x16aa01.events.add('playerExitColshape', _0x66a543 => {
          _0x58ff4c.api.isAuthed() && _0x16aa01.colshapes.exists(_0x66a543) && _0x66a543 == _0x137526 && (_0x137526 = null, _0x16aa01.game.ui.clearHelp(true), _0x89d392 = false, _0x5dbde0.globalBrowser.toggle('rentcar', {
            'value': false
          }), _0x58ff4c.api.toggleChat(true));
        }), _0x16aa01.events.add('keys.e', () => {
          _0x137526 && _0x16aa01.events.callRemote('2829382964');
        }), _0x16aa01.events.add('rentcar.init', (_0x136d30, _0x241529 = 'escalera', _0x25d9a1, _0x4e99e5 = false, _0x4b1e06, _0x4f35d2, _0x4956da, _0x23383d) => {
          _0x136d30 && (_0x1f3272 = _0x25d9a1, _0x136d30 = _0x136d30.map(_0x1b8ca5 => (_0x1b8ca5.title || (_0x1b8ca5.title = _0x58ff4c.api.escapeHtml(_0x16aa01.game.ui.getLabelText(_0x16aa01.game.vehicle.getDisplayNameFromVehicleModel(_0x16aa01.game.joaat(_0x1b8ca5.model))))), _0x1b8ca5)), _0x58ff4c.api.toggleChat(false), _0x5dbde0.globalBrowser.toggle('rentcar', {
            'value': true,
            'type': _0x241529,
            'vehicles': _0x136d30,
            'totalSlots': _0x4b1e06,
            'addingSlots': _0x4f35d2,
            'homeSlots': _0x4956da,
            'rentSlots': _0x23383d
          }), _0x177de7 = _0x4e99e5);
        }), _0x16aa01.events.add('rentcar.close', () => {
          _0x89d392 = false, _0x5dbde0.globalBrowser.toggle('rentcar', {
            'value': false
          }), _0x5dbde0.globalBrowser.emit('toggle_bankCard', {
            'value': false
          }), _0x177de7 = false, _0x16aa01.events.callRemote('1764142411'), _0x58ff4c.api.toggleChat(true);
        }), _0x16aa01.events.add('rentcar.rentResult', () => {
          _0x89d392 = false, _0x137526 = null;
        }), _0x16aa01.events.add('rentcar.rent', (_0x25d53a, _0x1972ff, _0x3a4fe5, _0x123d34) => {
          if (_0x89d392) return _0x58ff4c.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          _0x89d392 = false, _0x5dbde0.globalBrowser.toggle('rentcar', {
            'value': false
          }), _0x16aa01.events.callRemote('1426492631', _0x25d53a, _0x3a4fe5, _0x123d34, _0x1972ff, _0x1f3272), _0x58ff4c.api.toggleChat(true);
        }), _0x16aa01.events.add('rentcar.fixcar', _0x319667 => {
          _0x89d392 || (_0x89d392 = false, _0x5dbde0.globalBrowser.toggle('rentcar', {
            'value': false
          }), _0x16aa01.events.callRemote('1188829246', _0x319667, null != _0x137526 && _0x137526.shapeIndex, _0x177de7), _0x58ff4c.api.toggleChat(true));
        });
      },
      0xa636: (_0xfea523, _0x26f2f4, _0x411fad) => {
        'use strict';

        const a0_0x1df2e0 = {
          _0x24da50: 0x1da5,
          _0x5a775b: 0x1ffc
        },
              a0_0x2668d1 = {
          _0xc1c940: 0x4b9,
          _0x26164a: 0x14d2,
          _0x57f2c5: 0x1a35,
          _0x25a80d: 0x2292,
          _0x2a0f86: 0x535,
          _0x3e57b3: 0x535,
          _0x1e9f92: 0x1cd8,
          _0x48d034: 0xb55,
          _0x3adf0d: 0x92f,
          _0x62beda: 0x24bc,
          _0x870412: 0xcec,
          _0x264312: 0x24bc,
          _0x5cf29b: 0x187d,
          _0xc1842a: 0x1b41,
          _0x3e0d02: 0x1d66,
          _0x2e99c8: 0x145f,
          _0x5016dd: 0xf79,
          _0x461344: 0xc3e,
          _0x179477: 0x145f,
          _0x3ac59f: 0x2b4,
          _0x46d1e0: 0x2488,
          _0x2a9ec3: 0x1d05
        },
              a0_0xac56a8 = {
          _0x50845b: 0xcec,
          _0x100a66: 0xa17,
          _0x3c0c00: 0x310
        },
              a0_0x394404 = {
          _0x55ab90: 0x4b9,
          _0x14e9a6: 0x14d2,
          _0xbcb919: 0x12d1
        };

        _0x411fad.r(_0x26f2f4);

        var _0x56e0e3 = _0x411fad(0x16a21),
            _0x4ec635 = _0x411fad(0x4029),
            _0x37fe92 = _0x411fad.n(_0x4ec635),
            _0x5c9036 = _0x411fad(0x12a76),
            _0xf120d8 = _0x411fad(0x161cd);

        const _0x37fa09 = _0xf120d8.players.local;

        let _0x3579ae,
            _0x33c668 = false;

        const _0x4dded9 = [];
        _0x37fe92().forEach((_0x36b284, _0x561aaf) => {
          const _0x19567b = _0xf120d8.colshapes.newSphere(_0x36b284.x, _0x36b284.y, _0x36b284.z, 0x5, 0x0);

          _0x19567b.repairsId = _0x561aaf, _0x4dded9.push(_0x19567b);
        }), _0xf120d8.events.add('playerEnterColshape', _0x1c16bc => {
          _0x56e0e3.api.isAuthed() && _0x37fa09.vehicle && _0x4dded9.includes(_0x1c16bc) && (_0x56e0e3.api.displayHelpStringTrans('displayHelpString.toFix', false, true, 0x1388), _0x3579ae = _0x1c16bc);
        }), _0xf120d8.events.add('playerExitColshape', _0x55bd9d => {
          _0x56e0e3.api.isAuthed() && _0x4dded9.includes(_0x55bd9d) && (_0x3579ae = null, _0xf120d8.game.ui.clearHelp(true));
        }), _0xf120d8.events.add('keys.e', () => {
          _0x3579ae && _0x4dded9.includes(_0x3579ae) && _0x37fa09.vehicle && (_0xf120d8.events.callRemote('2217668224', _0x3579ae.repairsId), _0x3579ae = null, _0xf120d8.game.ui.clearHelp(true));
        }), _0xf120d8.events.add('repairStation.init', _0x536702 => {
          const a0_0x2cfb83 = {
            _0x218a9f: 0x187d
          };
          if (!_0x37fa09.vehicle || !_0x536702) return _0xf120d8.events.callRemote('647153289');
          _0x37fa09.vehicle.setOnGroundProperly(), _0x37fa09.vehicle.freezePosition(true), _0x37fa09.vehicle.setInvincible(true), _0x56e0e3.api.toggleHud(false), _0x56e0e3.api.toggleChat(false), _0x56e0e3.api.toggleRadar(false), _0xf120d8.game.audio.setRadioToStationName('OFF'), _0xf120d8.events.call('utils.disablePlayerExit', true), Object.keys(_0x536702.statuses).forEach(_0x5736da => {
            _0x536702.statuses[_0x5736da].percent = Math.round(_0x536702.statuses[_0x5736da].percent);
          }), Object.keys(_0x536702.progresses).forEach(_0x24e0b4 => {
            _0x536702.progresses[_0x24e0b4].value = Math.round(_0x536702.progresses[_0x24e0b4].value);
          }), _0x536702.mileage = Math.round(_0x536702.mileage / 0x186a0);

          const _0x4f22f7 = _0xf120d8.game.ui.getLabelText(_0xf120d8.game.vehicle.getDisplayNameFromVehicleModel(_0xf120d8.game.joaat(_0x536702.title)));

          _0x536702.name = _0x56e0e3.api.escapeHtml('null' == _0x4f22f7 ? _0x56e0e3.api.getVehicleTitle(_0x536702.title) : _0x4f22f7) || 'Jengas Car', _0x5c9036.globalBrowser.toggle('repairStation', {
            'value': true,
            'vehicle': _0x536702
          });
        }), _0xf120d8.events.add('repairStation.buy', _0x46ae86 => {
          _0x411fad.g.interfaces.repairStation && !_0x33c668 && (_0x33c668 = true, _0xf120d8.events.callRemote('3401992635', _0x46ae86));
        }), _0xf120d8.events.add('repairStation.close', () => {
          _0x411fad.g.interfaces.repairStation && (_0x56e0e3.api.toggleHud(true), _0x56e0e3.api.toggleChat(true), _0x56e0e3.api.toggleRadar(true), _0xf120d8.events.call('utils.disablePlayerExit', false), _0x37fa09.vehicle && (_0x37fa09.vehicle.freezePosition(false), _0x37fa09.vehicle.setInvincible(false)), _0x5c9036.globalBrowser.toggle('repairStation', {
            'value': false
          }), _0xf120d8.events.callRemote('647153289'));
        }), _0xf120d8.events.add('repairStation.result', () => {
          _0x33c668 = false;
        }), _0xf120d8.events.add('repairStation.updateData', _0x5e7bb9 => {
          const a0_0x36f851 = {
            _0x20611f: 0xe74,
            _0x1f73c6: 0x187d
          },
                a0_0x167237 = {
            _0x272d31: 0x310,
            _0x18cd83: 0xcec,
            _0x591e11: 0xa17
          };
          _0x5e7bb9 && (Object.keys(_0x5e7bb9.statuses).forEach(_0x1f0389 => {
            _0x5e7bb9.statuses[_0x1f0389].percent = Math.round(_0x5e7bb9.statuses[_0x1f0389].percent);
          }), Object.keys(_0x5e7bb9.progresses).forEach(_0x2272de => {
            _0x5e7bb9.progresses[_0x2272de].value = Math.round(_0x5e7bb9.progresses[_0x2272de].value);
          }), _0x5e7bb9.mileage = Math.round(_0x5e7bb9.mileage / 0x186a0), _0x5e7bb9.name = _0x56e0e3.api.escapeHtml(_0xf120d8.game.ui.getLabelText(_0xf120d8.game.vehicle.getDisplayNameFromVehicleModel(_0xf120d8.game.joaat(_0x5e7bb9.title)))) || 'Jengas Car', _0x5c9036.globalBrowser.emit('repairStation_updateVehicle', {
            'vehicle': _0x5e7bb9
          }));
        });
      },
      0x17db7: (_0x46b114, _0x56cef9, _0x521bfc) => {
        'use strict';

        const a0_0x33ab09 = {
          _0x5d2de3: 0x4a3,
          _0x14c4c9: 0x14d2,
          _0x577cbb: 0x1da5
        };

        _0x521bfc.r(_0x56cef9);

        var _0x422b7c = _0x521bfc(0x16a21),
            _0x2a1b76 = _0x521bfc(0x12a76),
            _0x54fc96 = _0x521bfc(0x161cd);

        _0x54fc96.players.local;

        let _0x1040a5,
            _0x3101dc,
            _0x5e7a1b = false,
            _0x3fb28e = 0x0,
            _0x80948b = 0x0,
            _0x4aa4c0 = false;

        _0x54fc96.events.add('safe.init', (_0x34ce9f, _0x2ad9bc) => {
          _0x5e7a1b || (_0x5e7a1b = true, _0x54fc96.events.callRemote('4148752160', _0x34ce9f, _0x2ad9bc));
        }), _0x54fc96.events.add('safe.initResult', (_0x36f2cf, _0x2076cc, _0x182975) => {
          _0x5e7a1b = false, null != _0x36f2cf && (_0x4aa4c0 = true, _0x36f2cf = parseInt(_0x36f2cf, 0x24), _0x2a1b76.globalBrowser.toggle('safe', {
            'value': true,
            'balance': _0x36f2cf,
            'tableName': _0x2076cc,
            'keyId': _0x182975
          })), _0x1040a5 = _0x2076cc, _0x3101dc = _0x182975;
        }), _0x54fc96.events.add('safe.cashIn', (_0xc3f9d8, _0x231494, _0x3c98ef) => {
          if (!_0x5e7a1b) {
            if (_0x422b7c.api.ePress(_0x3fb28e, 0x9c4)) return _0x422b7c.api.longNotifyTrans('system.notTooFast', 'error');
            _0x3fb28e = _0x422b7c.api.ePressUpdate(0x9c4), _0x5e7a1b = true, _0x54fc96.events.callRemote('1829183325', _0xc3f9d8, _0x231494, _0x3c98ef);
          }
        }), _0x54fc96.events.add('safe.cashOut', (_0x6114a9, _0x3724bb, _0x566e87) => {
          if (!_0x5e7a1b) {
            if (_0x422b7c.api.ePress(_0x80948b, 0x9c4)) return _0x422b7c.api.longNotifyTrans('system.notTooFast', 'error');
            _0x80948b = _0x422b7c.api.ePressUpdate(0x9c4), _0x5e7a1b = true, _0x54fc96.events.callRemote('1932227252', _0x6114a9, _0x3724bb, _0x566e87);
          }
        }), _0x54fc96.events.add('safe.operationResult', _0x45d4a9 => {
          _0x5e7a1b = false, null != _0x45d4a9 && (_0x45d4a9 = parseInt(_0x45d4a9, 0x24), _0x2a1b76.globalBrowser.emit('safe_operationResult', {
            'amount': _0x45d4a9
          }));
        }), _0x54fc96.events.add('safe.close', (_0x522a07, _0x7de9d1) => {
          _0x4aa4c0 && (_0x4aa4c0 = false, _0x5e7a1b = false, _0x2a1b76.globalBrowser.toggle('safe', {
            'value': false
          }), _0x522a07 || _0x7de9d1 ? _0x54fc96.events.callRemote('2363932222', _0x522a07, _0x7de9d1) : _0x54fc96.events.callRemote('2363932222', _0x1040a5, _0x3101dc));
        });
      },
      0x793b: (_0x4da0dc, _0x56302a, _0x21e165) => {
        'use strict';

        const a0_0x538206 = {
          _0x229575: 0xe6d,
          _0x1102fd: 0x1943,
          _0x1c3b93: 0x67d,
          _0xe454b6: 0x819,
          _0x429811: 0x67d,
          _0x4dc901: 0x67d,
          _0x378d6a: 0x2183,
          _0x3a19a0: 0x268,
          _0x182fa2: 0xc06,
          _0x2be066: 0x2488,
          _0x3ea3fe: 0x1a3,
          _0x1eb647: 0x195c
        },
              a0_0x1f67c4 = {
          _0x322a10: 0x1d2
        },
              a0_0x470e2f = {
          _0x2ed713: 0x318,
          _0x1b6f9d: 0x5a9,
          _0x1c4ae1: 0x22b2
        },
              a0_0x412873 = {
          _0x5a9814: 0x4b9,
          _0xde4d32: 0xeb1,
          _0x5dc6a0: 0x535,
          _0x5a19c2: 0xbb1,
          _0x3c8ff2: 0x1f4c,
          _0x108daf: 0x22e5,
          _0x193fcd: 0x1349,
          _0x5e2427: 0x110e,
          _0x1b4ff2: 0x535,
          _0x52a548: 0x22c0,
          _0x46d7ac: 0x1824,
          _0x306058: 0x535,
          _0x3ebd6d: 0xbb1,
          _0x36dfe4: 0x166c,
          _0x5ae4c5: 0x105d,
          _0x4b99df: 0x1349,
          _0xcc9ece: 0xc76,
          _0x80777f: 0xef3,
          _0x1cf1b5: 0x623,
          _0x20b1ac: 0x185e,
          _0x214817: 0x1dc8,
          _0x19f0c5: 0x99d,
          _0x271d8a: 0xb76,
          _0x15228f: 0xbb1,
          _0x4b7e46: 0x5e8
        },
              a0_0x3ceca5 = {
          _0x1ef78b: 0x1349
        },
              a0_0x200e33 = {
          _0x525b36: 0x242c,
          _0x32c4a0: 0xe33,
          _0x1a5972: 0xe33
        },
              a0_0x4aec04 = {
          _0x29b920: 0x13a6,
          _0x172a45: 0xe6d,
          _0x40b56f: 0x2488,
          _0x361be0: 0x7fd
        },
              a0_0x372998 = {
          _0x42507e: 0x21e0,
          _0x1a92ad: 0x535,
          _0x51d33c: 0xbb1,
          _0x3861ab: 0x1349
        },
              a0_0xe7773a = {
          _0x3168b4: 0x13a6,
          _0x31c891: 0x1da5,
          _0x496f2c: 0xc69
        },
              a0_0x3e724f = {
          _0x1987e5: 0x1135
        },
              a0_0x438328 = {
          _0x5cc99d: 0x318,
          _0x1b321d: 0x5a9,
          _0x3affd4: 0x104d
        },
              a0_0x16b0ba = {
          _0x5728d5: 0x1a3,
          _0x368be5: 0x19f9
        },
              a0_0x4f4482 = {
          _0x120e08: 0x2488,
          _0x2ef8fd: 0x1a3
        },
              a0_0xb99201 = {
          _0x198b05: 0x104d
        },
              a0_0x1a9dad = {
          _0x3d9fc0: 0x1da5
        };

        _0x21e165.r(_0x56302a);

        var _0x3e8440 = _0x21e165(0x166bb),
            _0x18b4fa = _0x21e165(0x17a1f),
            _0x159a4c = _0x21e165(0x12a76),
            _0x1469d8 = _0x21e165(0x16a21),
            _0x58e337 = _0x21e165(0xfc97),
            _0x41121c = _0x21e165.n(_0x58e337),
            _0x4b8a9c = _0x21e165(0xa327),
            _0x3f072a = _0x21e165(0x161cd);

        const _0x3eaded = {
          'lastRegion': 'ru',
          'waitingBuy': false,
          'waitingClaim': false,
          'waitingStart': false,
          'waitingCollect': false,
          'waitingSkipQuest': false
        };
        _0x3f072a.events.add('seasonPass.playerPreInit', () => {
          _0x3f072a.events.callRemote('1145526958');
        }), _0x3f072a.events.add('seasonPass.init', (_0x5afb61, _0x5554d0, _0x165188 = 0x0, _0x272b5b = 0x0, _0x8d892b, _0x4e00f0, _0x52ae90, _0x5d2d6c, _0x548b87, _0x4996fa) => {
          const a0_0xf8b35b = {
            _0x519fb6: 0x21e0,
            _0x586f1f: 0x1349,
            _0x35a28a: 0x535,
            _0x3bbd41: 0x1349,
            _0x3f5de7: 0xbb1,
            _0x1d7475: 0x1cb,
            _0x1480a4: 0x60a
          },
                _0x12d9c4 = {
            'type': _0x8d892b ? 'premium' : 'free',
            'hasPremium': _0x8d892b,
            'level': _0x165188,
            'currentXP': _0x272b5b,
            'experience': {
              'current': _0x272b5b,
              'target': (0x0, _0x3e8440.Hx)(_0x165188)
            }
          },
                _0x183a0b = {
            'timeLeft': _0x5554d0,
            'list': []
          };
          let _0x5b76e5 = [],
              _0x17f358 = true;
          _0x4e00f0 ? (_0x4e00f0.forEach(_0x35fce5 => {
            const _0x258873 = _0x18b4fa.E4.find(_0x363cb => _0x363cb.taskId === _0x35fce5.taskId);

            _0x258873 && _0x183a0b.list.push({
              'id': _0x35fce5.id,
              'title': _0x1469d8.api.language.translatePlayer(_0x258873.title),
              'description': _0x1469d8.api.language.translatePlayer(_0x258873.description),
              'prize': _0x258873.xp_reward,
              'level': {
                'current': _0x35fce5.progress,
                'max': _0x258873.trigger_amount
              }
            });
          }), _0x3eaded.lastLanguage == _0x1469d8.api.language.getPlayerLanguage() && 'ru' == _0x4b8a9c.serverRegion.toLowerCase() || (_0x5b76e5 = _0x399134(false))) : _0x17f358 = false, _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_toggle', {
            'value': true,
            'introduced': _0x17f358,
            'playerStats': _0x12d9c4,
            'inventoryList': _0x52ae90,
            'quests': _0x183a0b,
            'lineItems': _0x5b76e5,
            'topPlayers': _0x5afb61,
            'payday': _0x5d2d6c,
            'seasonPassPayday': _0x548b87,
            'reloadAvailable': _0x4996fa
          });
        }), _0x3f072a.events.add('seasonPass.update', (_0x5c7458, _0x5767cf) => {
          _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_update', {
            'type': _0x5c7458,
            'value': _0x5767cf
          });
        }), _0x3f072a.events.add('seasonPass.setQuestsActive', () => {
          _0x159a4c.globalBrowser.emit('panelMenu_setBattePassQuestsActive');
        }), _0x3f072a.events.add('seasonPass.start', _0xb9155e => {
          _0x3eaded.waitingStart || (_0x3eaded.waitingStart = true, _0x3f072a.events.callRemote('3638867901', _0xb9155e));
        }), _0x3f072a.events.add('seasonPass.startResult', (_0x36ef89, _0x2ead56, _0x3f0ad5, _0x40554a, _0x48cd24) => {
          const a0_0x171bb6 = {
            _0x4f4fb6: 0x21e0,
            _0xdf526a: 0x1d2,
            _0x18fb94: 0x1349,
            _0x52f162: 0xbb1,
            _0x2c7438: 0xe12,
            _0x141883: 0x1cb
          };

          if (_0x3eaded.waitingStart = false, _0x36ef89) {
            const _0x4e3c59 = {
              'timeLeft': _0x3f0ad5,
              'list': []
            };
            _0x40554a.forEach(_0x578706 => {
              const _0x2a6c02 = _0x18b4fa.E4.find(_0x30d632 => _0x30d632.taskId === _0x578706.taskId);

              _0x2a6c02 && _0x4e3c59.list.push({
                'id': _0x578706.id,
                'title': _0x1469d8.api.language.translatePlayer(_0x2a6c02.title),
                'description': _0x1469d8.api.language.translatePlayer(_0x2a6c02.description),
                'prize': _0x2a6c02.xp_reward,
                'level': {
                  'current': _0x578706.progress,
                  'max': _0x2a6c02.trigger_amount
                }
              });
            }), _0x159a4c.globalBrowser.emit('panelMenu_setBattePassQuestsActive'), _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_started', {
              'type': _0x36ef89,
              'xp': _0x2ead56,
              'quests': _0x4e3c59,
              'payday': _0x48cd24
            });
          }
        }), _0x3f072a.events.add('seasonPass.claimItem', (_0x538bd2, _0x4be92b, _0x99a8a5, _0x39bba9) => {
          _0x3eaded.waitingClaim || (_0x3eaded.waitingClaim = true, _0x3f072a.events.callRemote('2498672150', _0x538bd2, _0x4be92b, _0x99a8a5, _0x39bba9));
        }), _0x3f072a.events.add('seasonPass.claimItemResponse', () => {
          _0x3eaded.waitingClaim = false;
        }), _0x3f072a.events.add('seasonPass.updateInventoryList', _0x18e30c => {
          _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_updateInventoryList', {
            'awardData': _0x18e30c
          });
        }), _0x3f072a.events.add('seasonPass.updateQuestLevel', (_0x550512, _0x3541a1) => {
          _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_updateQuestLevel', {
            'taskId': _0x550512,
            'progress': _0x3541a1
          });
        }), _0x3f072a.events.add('seasonPass.updateXP', (_0x342882, _0x3abcb6, _0x45e664) => {
          const _0x460ee6 = {
            'type': _0x45e664 ? 'premium' : 'free',
            'hasPremium': _0x45e664,
            'level': _0x3abcb6,
            'currentXP': _0x342882,
            'experience': {
              'current': _0x342882,
              'target': (0x0, _0x3e8440.Hx)(_0x3abcb6)
            }
          };

          _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_update', {
            'type': 'playerStats',
            'value': _0x460ee6
          });
        }), _0x3f072a.events.add('seasonPass.buyItem', _0x545062 => {
          _0x3eaded.waitingBuy || (_0x3eaded.waitingBuy = true, _0x3f072a.events.callRemote('2912161453', _0x545062));
        }), _0x3f072a.events.add('seasonPass.buyItemResponse', () => {
          _0x3eaded.waitingBuy = false;
        }), _0x3f072a.events.add('seasonPass.collectAward', _0x4dc6eb => {
          _0x3eaded.waitingCollect || (_0x3eaded.waitingCollect = true, _0x3f072a.events.callRemote('2178060941', _0x4dc6eb));
        }), _0x3f072a.events.add('seasonPass.collectAwardResult', _0x278bd8 => {
          _0x3eaded.waitingCollect = false, _0x278bd8 && _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_collectAwardResult', _0x278bd8);
        }), _0x3f072a.events.add('seasonPass.skipQuest', _0xb9f2e5 => {
          _0x3eaded.waitingSkipQuest || (_0x3eaded.waitingSkipQuest = true, _0x3f072a.events.callRemote('448699675', _0xb9f2e5));
        }), _0x3f072a.events.add('seasonPass.skipQuestResult', (_0x43260b, _0x17ddf5) => {
          if (_0x3eaded.waitingSkipQuest = false, _0x17ddf5) {
            const _0x302402 = {
              'timeLeft': _0x43260b,
              'list': []
            };
            _0x17ddf5.forEach(_0x550aad => {
              const _0x2aef12 = _0x18b4fa.E4.find(_0x23cb1b => _0x23cb1b.taskId === _0x550aad.taskId);

              _0x2aef12 && _0x302402.list.push({
                'id': _0x550aad.id,
                'title': _0x1469d8.api.language.translatePlayer(_0x2aef12.title),
                'description': _0x1469d8.api.language.translatePlayer(_0x2aef12.description),
                'prize': _0x2aef12.xp_reward,
                'level': {
                  'current': _0x550aad.progress,
                  'max': _0x2aef12.trigger_amount
                }
              });
            }), _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_skipQuestResult', {
              'quests': _0x302402
            });
          }
        }), _0x3f072a.events.add('seasonPass.close', () => {
          _0x21e165.g.interfaces.seasonPass && _0x21e165.g.toggleBrowser('seasonPass', {
            'value': false
          });
        }), _0x3f072a.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x399134(true), _0x3eaded.lastLanguage = _0x1469d8.api.language.getPlayerLanguage();
        });

        const _0x399134 = (_0xffb518 = true) => {
          const _0x3ef012 = (_0x54f291, _0x1ec8c1) => {
            let _0x4935ac;

            switch (_0x54f291) {
              case 'vehicle':
                _0x4935ac = _0x41121c()[_0x1ec8c1.model].title;
                break;

              case 'money':
                _0x4935ac = _0x1469d8.api.language.translatePlayer('system.cashText', {
                  'amount': _0x1ec8c1.amount
                });
                break;

              case 'donate':
                _0x4935ac = _0x1469d8.api.language.translatePlayer('system.mcoinsText', {
                  'amount': _0x1ec8c1.amount
                });
                break;

              case 'item':
                _0x4935ac = _0x1469d8.api.language.translatePlayer('items.' + _0x1ec8c1.itemId + '.title');
                break;

              case 'hidden':
                _0x4935ac = _0x1469d8.api.language.translatePlayer('seasonPass.hiddenItem');
                break;

              case 'vip':
                _0x4935ac = _0x1469d8.api.language.translatePlayer('system.vipText', {
                  'title': _0x1ec8c1.type,
                  'amount': _0x1ec8c1.days
                });
                break;

              case 'clothes':
                {
                  const _0x10cca9 = _0x1ec8c1.clothesData[_0x1469d8.api.getEntitySync(_0x3f072a.players.local, 'gender', 'number')],
                        _0x3d6926 = _0x3f072a.inventory.componentIdToItemId(_0x10cca9.component);

                  _0x4935ac = _0x1469d8.api.language.translatePlayer('items.' + _0x3d6926 + '.title') + ' - description';
                  break;
                }
            }

            return _0x4935ac;
          },
                _0x122fc9 = _0x3e8440.px.map(_0x233ad7 => {
            for (const _0x353d02 of ['premium', 'free']) _0x233ad7[_0x353d02] = _0x233ad7[_0x353d02].map(_0x4c82cd => (_0x4c82cd.title = _0x3ef012(_0x4c82cd.rewardType, _0x4c82cd.rewardData), _0x4c82cd));

            return _0x233ad7;
          }),
                _0x2e5d42 = [];

          if (_0x18b4fa.VN.SHOP_XP.forEach(_0x3455c6 => {
            const _0x77818a = { ..._0x3455c6
            };

            _0x2e5d42.push(_0x77818a);
          }), 'eu' === _0x4b8a9c.serverRegion.toLowerCase()) {
            _0x18b4fa.VN.XP_PER_MC = _0x18b4fa.VN.XP_PER_MC_EU, _0x18b4fa.VN.PRICE.king = _0x18b4fa.VN.PRICE_EU_MULTIPLIER * _0x18b4fa.VN.PRICE.king, _0x18b4fa.VN.PRICE.premium = _0x18b4fa.VN.PRICE_EU_MULTIPLIER * _0x18b4fa.VN.PRICE.premium;

            for (const _0x3b9f8b of _0x18b4fa.VN.SHOP_XP) _0x3b9f8b.price = _0x18b4fa.VN.PRICE_EU_MULTIPLIER * _0x3b9f8b.price;
          }

          return _0xffb518 && _0x159a4c.globalBrowser.emit('panelMenu_seasonPass_preinit', {
            'lineItems': _0x122fc9,
            'seasonPassConfig': _0x18b4fa.VN,
            'shopArray': _0x2e5d42
          }), _0x122fc9;
        };
      },
      0xe83: (_0x14471d, _0x3589ed, _0x5289f9) => {
        'use strict';

        _0x5289f9.r(_0x3589ed), (_0x5289f9(0x16a21), _0x5289f9(0x12a76)), _0x5289f9(0x161cd).players.local;
      },
      0x3436: (_0x28ec2e, _0x614e08, _0x255826) => {
        'use strict';

        const a0_0x5c8867 = {
          _0x2949c9: 0x196a,
          _0x5efd83: 0x14d2,
          _0x52a6ea: 0x1da5,
          _0x54b07b: 0x22d8
        };
        _0x255826.r(_0x614e08), _0x255826(0x16a21);

        var _0x22957a = _0x255826(0x12a76),
            _0x4eae8e = _0x255826(0xff89),
            _0x1408af = _0x255826(0x161cd);

        const _0x5887df = {};

        for (const _0x50915b in _0x4eae8e.tw) {
          _0x5887df[_0x50915b.toLowerCase()] = {
            'entityName': _0x50915b.toLowerCase(),
            'type': 'weapon',
            'skins': []
          };

          for (const _0x430048 in _0x4eae8e.tw[_0x50915b]) for (const _0x2f0178 in _0x4eae8e.tw[_0x50915b][_0x430048]) {
            const {
              name: _0x406afb,
              type: _0x544cd7,
              hidden: _0x3be233
            } = _0x4eae8e.tw[_0x50915b][_0x430048][_0x2f0178];
            _0x3be233 || _0x5887df[_0x50915b.toLowerCase()].skins.push({
              'name': _0x406afb,
              'type': _0x544cd7,
              'skinId': parseInt(_0x2f0178)
            });
          }
        }

        const _0x7cc246 = {
          'loading': false
        };
        _0x1408af.events.add('donate.skins.fetchData', () => {
          _0x7cc246.loading || (_0x7cc246.loading = true, _0x1408af.events.callRemote('3120660191'));
        }), _0x1408af.events.add('donate.skins.fetchData.response', (_0x3aa246, _0x3f9378) => {
          _0x22957a.globalBrowser.emit('panelMenu_donate_setSkinsData', {
            '__': true,
            'skinEntities': _0x5887df,
            'equipedWeaponSkins': _0x3aa246,
            'availableWeaponSkins': _0x3f9378
          }), _0x7cc246.loading = false;
        }), _0x1408af.events.add('donate.skins.apply', (_0x23206b, _0x2c882e) => {
          _0x7cc246.loading || (_0x7cc246.loading = true, _0x1408af.events.callRemote('1994253202', _0x23206b, _0x2c882e));
        }), _0x1408af.events.add('donate.skins.reset', _0x304d51 => {
          _0x7cc246.loading || (_0x7cc246.loading = true, _0x1408af.events.callRemote('2204618565', _0x304d51));
        });
      },
      0xb661: (_0x598c16, _0x3ce24e, _0x3b6560) => {
        'use strict';

        const a0_0xcf15b8 = {
          _0x127be7: 0xabf
        },
              a0_0x5bfda8 = {
          _0x66b719: 0x535,
          _0xc10284: 0x52c,
          _0x96d1b3: 0x1a3,
          _0x596a3e: 0x9c5
        },
              a0_0x1e60d6 = {
          _0x5cbdb1: 0x11d9,
          _0x12d689: 0x2488,
          _0x2ecf53: 0x4a3,
          _0x51f749: 0x52c,
          _0x522719: 0x535,
          _0x542ceb: 0x3e9,
          _0x238d96: 0x55d
        };

        _0x3b6560.r(_0x3ce24e);

        var _0x3315e2 = _0x3b6560(0x16a21),
            _0x1b1a8e = _0x3b6560(0x69a1),
            _0x1dd854 = _0x3b6560.n(_0x1b1a8e),
            _0x3ef495 = _0x3b6560(0x152b8),
            _0x3d1113 = _0x3b6560.n(_0x3ef495),
            _0x497198 = _0x3b6560(0x35cd),
            _0x484c8c = _0x3b6560(0x12a76),
            _0x27750a = _0x3b6560(0x161cd);

        const _0x5e97c0 = _0x27750a.players.local,
              _0x2a1254 = [0x30101, 0x29001, 0x29b01, 0x29201, 0x25a01, 0x22201, 0x26001, 0x2b401, 0x2ac01, 0x2bb01, 0x30a01, 0x30f01, 0x31001, 0x31a01, 0x32001, 0x2ce01, 0x2af01];
        let _0x2d297d = false,
            _0x4e1027 = false;

        const _0x1c60d0 = new Set();

        _0x3d1113().forEach(_0x548232 => {
          _0x548232.items.forEach(_0x5eaeab => {
            _0x1c60d0.add(_0x5eaeab);
          });
        });

        const _0x27426e = _0x497198.Z.filter(_0x428d1b => _0x1c60d0.has(_0x428d1b.id)).map(_0x1e3bbd => ({
          'itemId': _0x1e3bbd.id,
          'title': _0x1e3bbd.title,
          'width': _0x1e3bbd.width,
          'height': _0x1e3bbd.height,
          'shopCount': _0x1e3bbd.shopCount,
          'weight': _0x1e3bbd.weight
        }));

        let _0x2f98b6, _0x3973d1;

        _0x27750a.events.add('vue.mounted', () => {
          _0x484c8c.globalBrowser.emit('store_preinit', {
            'shopConfig': _0x3d1113(),
            'items': _0x27426e,
            'priceConfig': _0x1dd854().item_shops
          });
        }), _0x27750a.events.add('store.init', (_0x19c9c0, _0x1acf15, _0x3dfc33) => {
          _0x3b6560.g.currentInterface || (_0x484c8c.globalBrowser.toggle('store', {
            'value': true,
            'type': _0x19c9c0,
            'warehouse': _0x1acf15,
            'prices': _0x3dfc33
          }), _0x3315e2.api.toggleHud(false), _0x3315e2.api.toggleChat(false), _0x3315e2.api.setDiscordStatus('itemsshop'), _0x2d297d = true);
        }), _0x27750a.events.add('store.buy', (_0x1f1a36, _0x447259) => {
          if (_0x4e1027) return _0x3315e2.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          'bank' !== _0x447259 || _0x5e97c0.bank && _0x5e97c0.bank.id ? (_0x4e1027 = true, _0x27750a.events.callRemote('3409426905', _0x1f1a36, _0x447259)) : _0x3315e2.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
        }), _0x27750a.events.add('store.buySuccess', () => {
          _0x4e1027 = false, _0x3315e2.api.playPedSpeech(_0x3315e2.api.getNearestPed().id, 'GENERIC_THANKS', _0x3973d1);
        }), _0x27750a.events.add('store.buyError', () => {
          _0x4e1027 = false;
        }), _0x27750a.events.add('store.exit', () => {
          _0x484c8c.globalBrowser.toggle('store', {
            'value': false
          }), _0x3315e2.api.toggleHud(true), _0x3315e2.api.toggleChat(true), _0x484c8c.globalBrowser.emit('toggle_bankCard', {
            'value': false
          }), _0x3315e2.api.setDiscordStatus(), _0x3315e2.api.playPedSpeech(_0x3315e2.api.getNearestPed(0x32).id, 'SHOP_SELL', _0x3973d1, 'SPEECH_PARAMS_FORCE'), _0x2d297d = false, _0x4e1027 = false;
        }), _0x27750a.events.add('playerEnterInterior', _0xb07fcd => {
          _0x2a1254.includes(_0xb07fcd) && (_0x3973d1 = 'MP_M_SHOPKEEP_01_LATINO_MINI_01', _0x3315e2.api.playPedSpeech(_0x3315e2.api.getNearestPed(0x64).id, 'SHOP_GREET', _0x3973d1, 'SPEECH_PARAMS_FORCE')), _0x2f98b6 = _0xb07fcd;
        }), _0x27750a.events.add('playerExitInterior', _0x1ee3b4 => {
          _0x2a1254.includes(_0x2f98b6) && (_0x3315e2.api.playPedSpeech(_0x3315e2.api.getNearestPed(0x64).id, 'SHOP_GOODBYE', _0x3973d1, 'SPEECH_PARAMS_FORCE'), _0x3973d1 = null, _0x4e1027 = false), _0x2f98b6 = _0x1ee3b4;
        }), _0x27750a.events.add('playerDeath2', _0x55f84e => {
          _0x2d297d && _0x55f84e === _0x5e97c0 && _0x27750a.events.call('store.exit');
        }), _0x27750a.events.add('npc.exitShape', () => {
          _0x2d297d && _0x27750a.events.call('store.exit');
        });
      },
      0x11a6: (_0x4f1d65, _0x490114, _0x173850) => {
        'use strict';

        const a0_0x13aafe = {
          _0x2400ac: 0x14d2,
          _0x7648ed: 0x1a5
        },
              a0_0xdafb63 = {
          _0x53e59d: 0x535,
          _0x48719c: 0x18bb
        },
              a0_0x32f1e4 = {
          _0x343da8: 0x13bc,
          _0x3b7a8d: 0x19d2,
          _0x33640b: 0x6da,
          _0x4b5f0e: 0xb29,
          _0x504a45: 0x238d,
          _0xaad7cf: 0xe6d
        },
              a0_0x1ad24a = {
          _0x1fbb1e: 0x2355,
          _0x55109f: 0x1d66,
          _0x1e0c79: 0x2379,
          _0x3c6a37: 0xf08
        },
              a0_0x7c661b = {
          _0x21688b: 0x1506,
          _0x54e100: 0x11f5,
          _0x4605dc: 0xf79,
          _0x3b6cb8: 0x1d66,
          _0x206a83: 0x686,
          _0x16751a: 0x852,
          _0x140e96: 0x852,
          _0x1d5697: 0xbb1,
          _0x201166: 0x572,
          _0x3002fa: 0x1349,
          _0x45355b: 0xbb1,
          _0x4ade2e: 0x572,
          _0x362e68: 0x19e6,
          _0x3af125: 0x1506,
          _0x4b9ad2: 0x1edc,
          _0x1860da: 0x3ec,
          _0x4ef11d: 0xeb1,
          _0x17ff88: 0x1f10,
          _0x2c8672: 0x268,
          _0x3037bb: 0x1d2
        },
              a0_0x2e1eca = {
          _0x4962cb: 0xe34,
          _0x52008c: 0x535,
          _0x35b588: 0x13b0,
          _0x2894af: 0x535,
          _0x156ce0: 0x1cd8,
          _0x28472e: 0x1da5,
          _0x49bcc2: 0x14d2,
          _0x133436: 0x1a5,
          _0x4bd5e7: 0x1d66,
          _0x3bc2d9: 0x16c5,
          _0x3290c1: 0x17f,
          _0x38492e: 0x14d2,
          _0x188800: 0x1a5,
          _0x20fc1f: 0x14d2,
          _0x54f9ac: 0x1305
        },
              a0_0x2b7dbd = {
          _0x23d2a5: 0x535,
          _0x204124: 0x623,
          _0x3da3da: 0x9ad,
          _0x6f930c: 0x623,
          _0x6acca9: 0x248e,
          _0x3da838: 0xb29,
          _0x283b60: 0x238d,
          _0x399fc8: 0x2355,
          _0x257f79: 0x1d66,
          _0x2e3f0a: 0x2379,
          _0xea0fd6: 0x1d66,
          _0x3a59fb: 0x238d,
          _0x12c718: 0x14d2,
          _0x6639c8: 0x1a5,
          _0x49ae06: 0x1d81,
          _0x1c06c0: 0x13bc,
          _0x45f3f5: 0x417,
          _0x208310: 0x1d66,
          _0x481b82: 0xb29,
          _0x253546: 0x238d,
          _0x5e9777: 0x1063,
          _0x5c14f0: 0x37d
        },
              a0_0x3eaefc = {
          _0x1f42e0: 0x2488,
          _0x1daa4d: 0x1a3,
          _0x539e2d: 0x14d2,
          _0x352316: 0x1a5,
          _0xaa932c: 0xfba,
          _0x4b469c: 0x1eca,
          _0x24f71a: 0x17d,
          _0x2e5c1b: 0x1de9,
          _0x28d388: 0x13f6
        },
              a0_0x5bb2bb = {
          _0x28b76b: 0x1506,
          _0x1ff06c: 0x1d2,
          _0x4c7748: 0x2488,
          _0xfcc471: 0x1a3,
          _0x3ebb5b: 0x1a3,
          _0x2e95de: 0x19c9,
          _0x701314: 0x14d2,
          _0x628157: 0x1a5,
          _0xafa7e6: 0x14a1,
          _0x588b93: 0x1daf,
          _0x1c8213: 0x1eca,
          _0x427a88: 0x535
        };

        _0x173850.r(_0x490114);

        var _0x40f906 = _0x173850(0x16a21),
            _0x13066f = _0x173850(0x6611),
            _0x27366e = _0x173850(0xd504),
            _0x814b51 = _0x173850(0x12a76),
            _0x2b17e8 = _0x173850(0x161cd);

        const _0x408741 = _0x2b17e8.players.local,
              _0x5490d5 = [0x22301, 0x3d501, 0x29e01, 0x2b301, 0x30b01, 0x2c201];

        _0x2b17e8.game.ui.requestAdditionalText('tat_mnu', 0x9);

        let _0x307d3c,
            _0x5b85a1 = 0x0,
            _0x4386bc = null,
            _0x36f6ee = false,
            _0x3d6276 = null;

        const _0x35cc84 = {
          'tattoosDataCache': {},
          'availableTattoos': []
        };
        _0x2b17e8.events.add('tattoo.buy', async _0x46ecf7 => {
          if (!_0x46ecf7) return;
          if (_0x36f6ee) return _0x40f906.api.longNotifyTrans('property.tryingToBuyFast', 'error');
          let _0x10f9e6 = null;

          try {
            _0x10f9e6 = JSON.parse(_0x46ecf7);
          } catch (_0x306c70) {
            return void _0x2b17e8.console.logInfo('bad buy data ' + _0x306c70.toString() + ' ' + _0x46ecf7);
          }

          _0x10f9e6 && (delete _0x10f9e6.item.cost, 'bank' !== _0x10f9e6.method || _0x408741.bank && _0x408741.bank.id ? (_0x36f6ee = true, _0x2b17e8.events.callRemote('602069858', _0x4386bc, _0x10f9e6.method, JSON.stringify(_0x10f9e6.item), _0x3d6276)) : _0x40f906.api.longNotifyTrans('bank.noBankCardInInventory', 'error'));
        }), _0x2b17e8.events.add('tattoo.buySuccess', async _0x3455ac => {
          if ('number' == typeof _0x3455ac) {
            _0x35cc84.availableTattoos.push(_0x3455ac);

            const {
              genderId: _0x1cc9a4,
              zoneId: _0x3c7fb0
            } = _0x3e7aba(_0x3d6276),
                  _0x3f2d04 = _0x44a72e(_0x1cc9a4, _0x3c7fb0);

            _0x814b51.globalBrowser.emit('tattoo_setCategorySuccess', JSON.stringify(_0x3f2d04));
          }

          _0x36f6ee = false, _0x814b51.globalBrowser.emit('tattoo_buySuccess'), _0x2b17e8.events.call('api.playPedSpeech', _0x40f906.api.getNearestPed().id, 'SHOP_SELL', _0x583931);

          const _0x41457d = '_positive_' + (Math.random() > 0.5 ? 'a' : 'b'),
                _0x5524f8 = await _0x40f906.api.taskPlayAnim('random@shop_tattoo', _0x41457d, 0x0);

          await _0x2b17e8.game.sleep(0x3e8 * _0x5524f8);
        }), _0x2b17e8.events.add('tattoo.removeSuccess', async _0x13ae88 => {
          _0x36f6ee = false, _0x814b51.globalBrowser.emit('tattoo_removeSuccess', {
            'id': _0x13ae88
          }), _0x2b17e8.events.call('api.playPedSpeech', _0x40f906.api.getNearestPed().id, 'SHOP_SELL', _0x583931);

          const _0x502ff2 = '_positive_' + (Math.random() > 0.5 ? 'a' : 'b'),
                _0x584323 = await _0x40f906.api.taskPlayAnim('random@shop_tattoo', _0x502ff2, 0x0);

          await _0x2b17e8.game.sleep(0x3e8 * _0x584323);
        }), _0x2b17e8.events.add('tattoo.buyError', _0x3f5d7f => {
          _0x36f6ee = false;
        }), _0x2b17e8.events.add('tattoo.setCategory', async _0x4c086b => {
          if (_0x3d6276 = _0x4c086b, 0x0 === _0x4c086b) _0x40f906.api.cameraRotation.reset(true), _0x2b17e8.events.call('tattoo.resetTattoos'), _0x408741.setHeading(_0x5b85a1);else {
            if ('remove' === _0x4c086b) {
              let _0x1f8cdf = _0x40f906.api.getEntitySync(_0x408741, 'tattoos', 'array');

              if (!_0x1f8cdf || !Array.isArray(_0x1f8cdf)) return;

              const _0x233330 = [],
                    _0x1abe74 = _0x40f906.api.getEntitySync(_0x408741, 'gender', 'number');

              for (const _0x31ec32 of _0x1f8cdf) {
                const _0x4b0c5c = _0x27366e.Z[_0x31ec32];
                if (!_0x4b0c5c || !_0x4b0c5c['hashName' + (_0x1abe74 ? 'Female' : 'Male')]) continue;
                let _0x1c9716 = null;
                'string' == typeof _0x4b0c5c.name && (_0x1c9716 = _0x2b17e8.game.ui.getLabelText(_0x4b0c5c.name)), _0x1c9716 = 'string' == typeof _0x1c9716 ? _0x1c9716.replace('"', '').replace('"', '').replace('\'', '') : _0x4b0c5c.localizedName, _0x4b0c5c.id >= 0x1770 ? _0x1c9716 = _0x40f906.api.language.translatePlayer('property.customTattoo', {
                  'id': _0x4b0c5c.id - 0x1770
                }) : _0x4b0c5c.id >= 0xbb8 && (_0x1c9716 = _0x40f906.api.language.translatePlayer('property.customTattoo', {
                  'id': _0x4b0c5c.id - 0xbb8
                }));
                let _0x267d79 = _0x4b0c5c.price,
                    _0x5d5cb2 = _0x4b0c5c.type;
                _0x35cc84.availableTattoos.includes(_0x4b0c5c.id) && (_0x267d79 = 0x0, _0x5d5cb2 = 'remove'), _0x233330.push({
                  'id': _0x4b0c5c.id,
                  'title': _0x1c9716,
                  'cost': _0x267d79,
                  'category': _0x4c086b,
                  'type': _0x5d5cb2
                });
              }

              _0x814b51.globalBrowser.emit('tattoo_setCategorySuccess', JSON.stringify(_0x233330));
            } else {
              _0x2b17e8.game.ui.hasThisAdditionalTextLoaded('tat_mnu', 0x9) || _0x2b17e8.game.ui.requestAdditionalText('tat_mnu', 0x9);

              const {
                genderId: _0x59ef8a,
                zoneId: _0x5a0644
              } = _0x3e7aba(_0x4c086b),
                    _0x38e648 = _0x44a72e(_0x59ef8a, _0x5a0644);

              _0x814b51.globalBrowser.emit('tattoo_setCategorySuccess', JSON.stringify(_0x38e648)), _0x408741.setHeading(_0x5b85a1);
              let _0x231d65 = 0x0;
              0x4 === _0x5a0644 || 0x5 === _0x5a0644 ? _0x231d65 = -0.5 : 0x1 === _0x5a0644 && (_0x231d65 = 0.5), _0x40f906.api.cameraRotation.reset(true, 0x0, 0x0, _0x231d65), _0x2b17e8.events.call('api.playPedSpeech', _0x40f906.api.getNearestPed().id, 'SHOP_BROWSE_TATTOO_MENU', _0x583931);
            }
          }
        }), _0x2b17e8.events.add('tattoo.setItem', (_0x215123, _0x4b5bbf) => {
          const _0x23590c = _0x40f906.api.getEntitySync(_0x408741, 'gender', 'number');

          if ('remove' == _0x215123) {
            _0x408741.clearDecorations();

            const _0x178fd9 = _0x40f906.api.getEntitySync(_0x408741, 'tattoos', 'array');

            if (!_0x178fd9 || !_0x178fd9.length) return;

            for (const _0xa19ca1 of _0x178fd9) {
              const _0xf5a4ff = _0x27366e.Z[_0xa19ca1];
              _0xf5a4ff && _0xf5a4ff['hashName' + (_0x23590c ? 'Female' : 'Male')] && _0x4b5bbf !== _0xa19ca1 && _0x408741.setDecoration(_0x2b17e8.game.joaat(_0xf5a4ff.collection), _0x2b17e8.game.joaat(_0xf5a4ff['hashName' + (_0x23590c ? 'Female' : 'Male')]));
            }
          } else {
            _0x2b17e8.events.call('tattoo.resetTattoos');

            const _0x291911 = _0x27366e.Z[_0x4b5bbf];

            try {
              !_0x40f906.api.getEntitySync(_0x408741, 'tattoos', 'array').includes(_0x4b5bbf) && _0x291911 && _0x291911['hashName' + (_0x23590c ? 'Female' : 'Male')] && _0x408741.setDecoration(_0x2b17e8.game.joaat(_0x291911.collection), _0x2b17e8.game.joaat(_0x291911['hashName' + (_0x23590c ? 'Female' : 'Male')]));
            } catch (_0x1f1b8b) {
              _0x40f906.api.sendError({
                'err': _0x1f1b8b,
                'itemId': _0x4b5bbf,
                'event': 'tattoo.setItem'
              });
            }
          }
        }), _0x2b17e8.events.add('tattoo.close', () => {
          _0x814b51.globalBrowser.toggle('tattoo', {
            'value': false
          }), _0x40f906.api.toggleHud(true), _0x40f906.api.toggleChat(true), _0x40f906.api.toggleRadar(true), _0x408741.freezePosition(false), _0x2b17e8.events.callRemote('3702382805', 0x0), _0x2b17e8.events.call('resetClothes'), _0x2b17e8.events.call('tattoo.resetTattoos'), _0x40f906.api.cameraRotation.stop(), _0x2b17e8.game.cam.renderScriptCams(false, false, 0x0, false, false, 0x0), _0x2b17e8.cameras.exists(_0x307d3c) && (_0x307d3c = _0x307d3c.destroy()), _0x40f906.api.setDiscordStatus(), _0x40f906.api.stopAnim(), _0x4386bc = null, _0x36f6ee = false, _0x2b17e8.events.call('utils.disablePlayerMove', false), _0x2b17e8.events.callRemote('4268132659');
        }), _0x2b17e8.events.add('tattoshop.init', (_0x573d70, _0x1820dd, _0x43ae7f) => {
          if (_0x173850.g.currentInterface) return;

          const _0x49acb7 = _0x43ae7f.length ? _0x43ae7f.split('^').map(_0x331cef => parseInt(_0x331cef, 0x24)) : [];

          _0x35cc84.availableTattoos = _0x49acb7, _0x4386bc = _0x573d70, _0x2b17e8.events.call('utils.disablePlayerMove', true), (0x0, _0x13066f.L6)(_0x408741, 0x1, 0x0, 0x0, 0x1), _0x408741.clearProp(0x0), _0x408741.clearProp(0xa), _0x408741.isMale() ? ((0x0, _0x13066f.L6)(_0x408741, 0x3, 0xf, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x4, 0x15, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x5, 0x0, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x6, 0x22, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x7, 0x0, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x8, 0xf, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x9, 0x0, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0xb, 0xf, 0x0, 0x0)) : ((0x0, _0x13066f.L6)(_0x408741, 0x3, 0xf, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x4, 0xf, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x5, 0x0, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x6, 0x23, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x7, 0x0, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x8, 0xf, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0x9, 0x0, 0x0, 0x0), (0x0, _0x13066f.L6)(_0x408741, 0xb, 0xf, 0x0, 0x0)), _0x814b51.globalBrowser.toggle('tattoo', {
            'value': true,
            'shopPrices': _0x1820dd
          }), _0x40f906.api.toggleHud(false), _0x40f906.api.toggleChat(false), _0x40f906.api.toggleRadar(false);
          let _0x16a8a3 = _0x408741.position;
          _0x5b85a1 = _0x408741.getHeading();

          let _0x4fd2a1 = new _0x2b17e8.Vector3(0x0, 2.5, 0x0),
              _0x42573e = _0x2b17e8.game.object.getObjectOffsetFromCoords(_0x16a8a3.x, _0x16a8a3.y, _0x16a8a3.z, _0x5b85a1, _0x4fd2a1.x, _0x4fd2a1.y, _0x4fd2a1.z);

          _0x307d3c = _0x2b17e8.cameras.new('default'), _0x307d3c.setCoord(_0x42573e.x, _0x42573e.y, _0x42573e.z + 0.25), _0x307d3c.setFov(0x32), _0x307d3c.pointAtCoord(_0x16a8a3.x, _0x16a8a3.y, _0x16a8a3.z), _0x307d3c.setActive(true), _0x2b17e8.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x40f906.api.cameraRotation.start(_0x307d3c, new _0x2b17e8.Vector3(_0x408741.position.x, _0x408741.position.y, _0x408741.position.z + 0.4), new _0x2b17e8.Vector3(_0x408741.position.x, _0x408741.position.y, _0x408741.position.z + 0.2), new _0x2b17e8.Vector3(0x0, 1.9, 0x0), _0x5b85a1, 0x28, true), _0x40f906.api.cameraRotation.setXBoderMultiplier(0xb4, 0xb4), _0x40f906.api.cameraRotation.setZBoderMultiplier(-0.5, 0x1), _0x408741.freezePosition(true), _0x40f906.api.setDiscordStatus('tattooshop');
        }), _0x2b17e8.events.add('tattoshop.rotatePlayer', _0x58b8b8 => {
          _0x408741.setHeading(_0x58b8b8);
        });

        const _0x3e7aba = _0x5eb9e5 => ({
          'genderId': _0x40f906.api.getEntitySync(_0x408741, 'gender', 'number'),
          'zoneId': ['torso', 'heads', 'leftHand', 'rightHand', 'leftFoot', 'rightFoot'].indexOf(_0x5eb9e5)
        }),
              _0x44a72e = (_0x493aa8, _0x45304c) => {
          const _0x1cc143 = _0x27366e.x.get(_0x493aa8 + '_' + _0x45304c),
                _0x12a86a = [],
                _0x12222c = [];

          for (const _0x44c75c of _0x1cc143) {
            if (!_0x35cc84.availableTattoos.includes(_0x44c75c.id) && _0x44c75c.disableBuy) continue;
            let _0x358127 = null;
            'string' == typeof _0x44c75c.name && (_0x358127 = _0x2b17e8.game.ui.getLabelText(_0x44c75c.name)), _0x358127 = 'string' == typeof _0x358127 ? _0x358127.replace('"', '').replace('"', '').replace('\'', '') : _0x44c75c.localizedName, _0x44c75c.id >= 0x1770 ? _0x358127 = _0x40f906.api.language.translatePlayer('property.customTattoo', {
              'id': _0x44c75c.id - 0x1770
            }) : _0x44c75c.id >= 0xbb8 && (_0x358127 = _0x40f906.api.language.translatePlayer('property.customTattoo', {
              'id': _0x44c75c.id - 0xbb8
            }));
            let _0x3f2c16 = _0x12222c;
            _0x44c75c.id >= 0xbb8 && (_0x3f2c16 = _0x12a86a);
            let _0x53fe99 = _0x44c75c.price,
                _0x61b389 = _0x44c75c.type;
            _0x35cc84.availableTattoos.includes(_0x44c75c.id) ? (_0x53fe99 = 0x0, _0x61b389 = 'install') : 'money' === _0x44c75c.type && (_0x53fe99 = _0x40f906.api.calculateMoney(_0x44c75c.price)), _0x3f2c16.push({
              'id': _0x44c75c.id,
              'title': _0x358127,
              'cost': _0x53fe99,
              'type': _0x61b389
            });
          }

          return [..._0x12a86a, ..._0x12222c];
        };

        let _0xe763b8, _0x583931;

        _0x2b17e8.events.add('tattoo.resetTattoos', () => {
          const _0x5687dc = _0x40f906.api.getEntitySync(_0x408741, 'tattoos', 'array');

          if (_0x408741.clearDecorations(), !_0x5687dc || !_0x5687dc.length) return;

          const _0x2b74d1 = _0x40f906.api.getEntitySync(_0x408741, 'gender', 'number') ? 'Female' : 'Male';

          _0x5687dc.forEach(_0x59d9bd => {
            const _0x26bda2 = _0x27366e.Z[_0x59d9bd];
            _0x26bda2 && _0x26bda2['hashName' + _0x2b74d1] && _0x408741.setDecoration(_0x2b17e8.game.joaat(_0x26bda2.collection), _0x2b17e8.game.joaat(_0x26bda2['hashName' + _0x2b74d1]));
          });
        }), _0x2b17e8.events.add('playerEnterInterior', _0x2fe6e9 => {
          _0x5490d5.includes(_0x2fe6e9) && (_0x583931 = 'U_M_Y_TATTOO_01_WHITE_MINI_01', _0x40f906.api.playPedSpeech(_0x40f906.api.getNearestPed(0x32).id, 'SHOP_GREET', _0x583931)), _0xe763b8 = _0x2fe6e9;
        }), _0x2b17e8.events.add('playerExitInterior', _0x249697 => {
          _0x5490d5.includes(_0xe763b8) && (_0x40f906.api.playPedSpeech(_0x40f906.api.getNearestPed(0x32).id, 'SHOP_GOODBYE', _0x583931), _0x583931 = null), _0xe763b8 = _0x249697;
        }), _0x2b17e8.events.add('playerDeath2', _0x24246f => {
          _0x4386bc && _0x24246f === _0x408741 && _0x2b17e8.events.call('tattoo.close');
        });
      },
      0xcfe0: (_0x2e48ce, _0x61ca87, _0x343e22) => {
        'use strict';

        const a0_0x277e6c = {
          _0x4124ce: 0x16c5,
          _0xa18e40: 0x14d2,
          _0x211463: 0x1da5
        },
              a0_0x51849f = {
          _0x2c111b: 0x398
        },
              a0_0x39fe0b = {
          _0x5b5016: 0x4b9,
          _0x46af06: 0x14d2
        },
              a0_0x56a3ed = {
          _0x1eaad1: 0x1da5,
          _0x683fb7: 0x160d
        },
              a0_0x59e0c4 = {
          _0x13b0a3: 0x4a3,
          _0x342e9f: 0xb3c,
          _0x5a4a60: 0x4b9,
          _0x25e18f: 0x1374,
          _0x1c1b93: 0x1da5,
          _0x846b3: 0x1832
        },
              a0_0x1b8cb3 = {
          _0x5b4edd: 0xb3c
        },
              a0_0x4b5155 = {
          _0x100fc3: 0x4a3,
          _0xf12c3a: 0x1a37
        },
              a0_0x271e06 = {
          _0x1416aa: 0x4a3,
          _0x4b5822: 0xb3c,
          _0x33245e: 0x1da5
        },
              a0_0x411958 = {
          _0x198688: 0x4b9,
          _0xc22265: 0x1f6c,
          _0x142669: 0x50d,
          _0x5f5b16: 0x2568,
          _0x4e026d: 0x535,
          _0x28104e: 0x17b9,
          _0x1cf8c5: 0x18ec,
          _0x580ea0: 0x18ec,
          _0x4e7a9a: 0x1732,
          _0x5674bc: 0x1ef0,
          _0x46cf8c: 0xf0e,
          _0x49c7e8: 0x3c5,
          _0x2117f0: 0x1f71,
          _0x170bf8: 0x2034,
          _0x34e52a: 0x1ab1,
          _0x3f7474: 0x12dd,
          _0x2304f8: 0x4a3,
          _0x3e15b9: 0x1296
        },
              a0_0x336112 = {
          _0x538197: 0x13ab,
          _0x13c7d5: 0x731
        },
              a0_0x50304b = {
          _0x36af39: 0x2661
        },
              a0_0x2024c0 = {
          _0x6b3667: 0x14d2,
          _0x561d99: 0x1da5,
          _0x4beab4: 0x13a8
        },
              a0_0x1959b3 = {
          _0x57c22d: 0x4b9,
          _0x2ed334: 0x22b2,
          _0x2f520c: 0x1d66,
          _0x6661d9: 0xf8a,
          _0x16d994: 0x2602,
          _0xb18cb6: 0x1877,
          _0x1660f7: 0x1ee9,
          _0x14fc22: 0x1877,
          _0x1b5434: 0xbb9,
          _0x1b1966: 0x1d66,
          _0x1055ec: 0x7c0,
          _0x280a78: 0xa47,
          _0x5f2c77: 0x1f6c,
          _0x4a4bed: 0xbb9,
          _0x510123: 0x1d66,
          _0x33d9bf: 0x8c8,
          _0x353a00: 0x1ab1,
          _0xd54198: 0xbb9,
          _0x471d0e: 0x2034,
          _0x45c081: 0x1d66,
          _0x8fb6c2: 0x1850,
          _0x2dfbbf: 0x7c0,
          _0x2fb617: 0x145f,
          _0x2b9bfa: 0x145f,
          _0x5b1c7f: 0x1bbb,
          _0x43a5fb: 0x3c5,
          _0x9babe3: 0x535,
          _0x57e70a: 0x2034,
          _0x202528: 0x1830,
          _0x4ae111: 0x1f71,
          _0x1b50ec: 0x1f30,
          _0x4d06b9: 0x1a3
        },
              a0_0x12a3f6 = {
          _0x2aeeda: 0x1da5,
          _0x94924b: 0x8e1
        },
              a0_0x41a48b = {
          _0x3cdbf3: 0x2488,
          _0x149416: 0xb3c,
          _0x1b6abd: 0x50d,
          _0xbe3289: 0x1ab1
        },
              a0_0x4fd538 = {
          _0x522bec: 0x1da5
        };

        _0x343e22.r(_0x61ca87);

        var _0x3637c2 = _0x343e22(0x16a21),
            _0x3abd93 = _0x343e22(0x96d1),
            _0x1ab559 = _0x343e22.n(_0x3abd93),
            _0x11281c = _0x343e22(0x49e3),
            _0x42e776 = _0x343e22(0x1ff0),
            _0x41d0a4 = _0x343e22(0xfc97),
            _0x293235 = _0x343e22.n(_0x41d0a4),
            _0x41a16b = _0x343e22(0x12a76),
            _0x2891ef = _0x343e22(0x161cd);

        const _0x21f4ca = _0x2891ef.players.local;
        let _0x5c381f = false,
            _0xb65d74 = null;
        _0x2891ef.events.add('exchange.cancel', (_0x38e3ab = false) => {
          _0x41a16b.globalBrowser.toggle('trade', {
            'value': false
          }), _0x38e3ab || _0x3637c2.api.longNotifyTrans('trade.canceled', 'error');
        }), _0x2891ef.events.add('exchange.setVehicle', _0x21989a => {
          _0x2891ef.events.callRemote('2225432698', _0x21989a);
        }), _0x2891ef.events.add('exchange.setVehicleResult', _0x29984a => {
          _0x29984a.model = _0x29984a.path, _0x29984a.title = _0x3637c2.api.escapeHtml(_0x2891ef.game.ui.getLabelText(_0x2891ef.game.vehicle.getDisplayNameFromVehicleModel(_0x2891ef.game.joaat(_0x29984a.path)))), _0x29984a.capacity = _0x293235()[_0x29984a.path].capacity / 0x3e8, _0x41a16b.globalBrowser.emit('trade_setVehicleResult', JSON.stringify(_0x29984a));
        }), _0x2891ef.events.add('exchange.init', (_0x1b896d, _0x1f990d) => {
          _0x41a16b.globalBrowser.toggle('trade', {
            'value': true,
            'proposer': {
              'accepted': false,
              'nickname': _0x1f990d,
              'waiting': true
            },
            'proposed': null,
            'playerId': _0x1b896d,
            'vehicle': _0x21f4ca.hasVehicles,
            'house': _0x21f4ca.houseId,
            'apartment': _0x21f4ca.apartmentId,
            'biz': _0x21f4ca.biz,
            'atm': _0x21f4ca.atm,
            'billboard': _0x21f4ca.billboard
          });
        }), _0x2891ef.events.add('exchange.confirm', (_0x27f7a9, _0x5d06d6, _0x39d32e, _0x1bca45, _0x392a99) => {
          _0x5c381f || (_0x5c381f = true, _0x2891ef.events.callRemote('3867435777', _0x27f7a9, _0x5d06d6, _0x39d32e, _0x1bca45, _0x392a99));
        }), _0x2891ef.events.add('exchange.confirmResult', (_0x40ba38, _0x42d570) => {
          _0x5c381f = false, null != _0x40ba38 && _0x41a16b.globalBrowser.emit('trade_confirmResult', {
            'confirmed': _0x40ba38,
            'money': _0x42d570
          });
        }), _0x2891ef.events.add('exchange.changePropertyType', _0x4048bb => {
          _0x5c381f || (_0x5c381f = true, _0x2891ef.events.callRemote('957888346', _0x4048bb));
        }), _0x2891ef.events.add('exchange.changePropertyTypeResult', (_0x318e8f, _0x4f9185, _0x1fbba1, _0x87796b, _0x140d4d) => {
          if (_0x5c381f = false, !_0x318e8f) return;
          let _0x8d685f = [];

          switch (_0x318e8f) {
            case 'vehicle':
              _0x8d685f = _0x87796b.map(_0x2a829c => (_0x2a829c.model = _0x2a829c.path, _0x2a829c.title = _0x3637c2.api.escapeHtml(_0x2891ef.game.ui.getLabelText(_0x2891ef.game.vehicle.getDisplayNameFromVehicleModel(_0x2891ef.game.joaat(_0x2a829c.path)))), _0x2a829c.capacity = _0x293235()[_0x2a829c.path].capacity / 0x3e8, _0x2a829c));
              break;

            case 'apartment':
              {
                const _0xedaf9a = _0x2891ef.game.pathfind.getStreetNameAtCoord(parseFloat(_0x343e22.g.apartments[_0x87796b.buildingId].posX), parseFloat(_0x343e22.g.apartments[_0x87796b.buildingId].posY), parseFloat(_0x343e22.g.apartments[_0x87796b.buildingId].posZ), 0x0, 0x0),
                      _0x1d62f0 = _0x3637c2.api.escapeHtml(_0x2891ef.game.ui.getStreetNameFromHashKey(_0xedaf9a.streetName));

                _0x8d685f.push({
                  'id': _0x4f9185,
                  'address': _0x1d62f0 + ', Кв. ' + _0x4f9185,
                  'tableName': _0x1fbba1,
                  ..._0x87796b
                });

                break;
              }

            case 'house':
              {
                const _0x2b4ad9 = _0x2891ef.game.pathfind.getStreetNameAtCoord(parseFloat(_0x343e22.g.houses[_0x4f9185].posX), parseFloat(_0x343e22.g.houses[_0x4f9185].posY), parseFloat(_0x343e22.g.houses[_0x4f9185].posZ), 0x0, 0x0),
                      _0x15e163 = _0x3637c2.api.escapeHtml(_0x2891ef.game.ui.getStreetNameFromHashKey(_0x2b4ad9.streetName));

                _0x8d685f.push({
                  'id': _0x4f9185,
                  'address': _0x15e163 + ', Дом ' + _0x4f9185,
                  'tableName': _0x1fbba1,
                  ..._0x87796b
                });

                break;
              }

            case 'biz':
              {
                const _0x1efbd0 = _0x2891ef.game.pathfind.getStreetNameAtCoord(parseFloat(_0x343e22.g[_0x1fbba1][_0x4f9185].posX), parseFloat(_0x343e22.g[_0x1fbba1][_0x4f9185].posY), parseFloat(_0x343e22.g[_0x1fbba1][_0x4f9185].posZ), 0x0, 0x0),
                      _0xe6ef7d = _0x3637c2.api.escapeHtml(_0x2891ef.game.ui.getStreetNameFromHashKey(_0x1efbd0.streetName));

                _0x8d685f.push({
                  'id': _0x4f9185,
                  'address': _0xe6ef7d + ', ' + _0x343e22.g[_0x1fbba1][_0x4f9185].title + ' ' + _0x4f9185,
                  'tableName': _0x1fbba1,
                  'title': _0x3637c2.api.language.translatePlayer(_0x87796b.title, _0x87796b.args),
                  ..._0x87796b
                });

                break;
              }

            case 'atm':
              {
                const _0x381b24 = _0x11281c.Z.find(_0x33d212 => _0x33d212.propertyId === _0x4f9185),
                      _0x2be635 = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x381b24.x, _0x381b24.y, _0x381b24.z)) + ', ' + _0x4f9185;

                _0x8d685f.push({
                  'id': _0x4f9185,
                  'address': _0x2be635,
                  'tableName': _0x1fbba1,
                  ..._0x87796b
                });

                break;
              }

            case 'billboards':
              {
                const _0x17e872 = _0x42e776.find(_0x3f0f0c => _0x3f0f0c.id === _0x4f9185),
                      _0x21682d = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x17e872.position.x, _0x17e872.position.y, _0x17e872.position.z)) + ', ' + _0x4f9185;

                _0x8d685f.push({
                  'id': _0x4f9185,
                  'address': _0x21682d,
                  'tableName': _0x1fbba1,
                  ..._0x87796b
                });

                break;
              }
          }

          _0x41a16b.globalBrowser.emit('trade_changePropertyTypeResult', {
            'property': _0x8d685f,
            'type': _0x318e8f,
            'player': _0x140d4d
          });
        }), _0x2891ef.events.add('exchange.propose', _0x1597f0 => {
          _0x41a16b.globalBrowser.emit('trade_propose', {
            'player': _0x1597f0
          });
        }), _0x2891ef.events.add('exchange.send', () => {
          _0x5c381f || (_0x5c381f = true, _0x2891ef.events.callRemote('592211223'));
        }), _0x2891ef.events.add('exchange.sendResult', _0x5c7e4b => {
          _0x5c381f = false, _0x5c7e4b && _0x41a16b.globalBrowser.emit('trade_sendResult');
        }), _0x2891ef.events.add('exchange.accept', () => {
          _0x5c381f || (_0x5c381f = true, _0x2891ef.events.callRemote('464164065'));
        }), _0x2891ef.events.add('exchange.acceptResult', () => {
          _0x5c381f = false;
        }), _0x2891ef.events.add('trade.init', (_0x4c790c, _0x358978, _0x200d9c, _0x279818) => {
          if (_0xb65d74 = _0x4c790c, 'vehicle' !== _0x4c790c) {
            if ('house' === _0x4c790c) {
              const _0x14a2cd = _0x21f4ca.houseId;
              _0x358978[0x0].address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(parseFloat(_0x343e22.g.houses[_0x14a2cd].posX), parseFloat(_0x343e22.g.houses[_0x14a2cd].posY), parseFloat(_0x343e22.g.houses[_0x14a2cd].posZ)));
            } else {
              if ('apartment' === _0x4c790c) _0x358978[0x0].address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x1ab559()[_0x358978[0x0].buildingId].shapeX, _0x1ab559()[_0x358978[0x0].buildingId].shapeY, _0x1ab559()[_0x358978[0x0].buildingId].shapeZ));else {
                if ('atm' === _0x4c790c) {
                  const _0x510c02 = _0x11281c.Z.find(_0x167a9f => _0x167a9f.propertyId === _0x21f4ca.atm);

                  _0x358978[0x0].address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x510c02.x, _0x510c02.y, _0x510c02.z));
                } else {
                  if ('billboards' === _0x4c790c) {
                    const _0x3fc1bb = _0x42e776.find(_0x1d86e7 => _0x1d86e7.id === _0x21f4ca.billboard);

                    _0x358978[0x0].address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x3fc1bb.position.x, _0x3fc1bb.position.y, _0x3fc1bb.position.z));
                  } else {
                    const _0x44c578 = _0x21f4ca.biz.split('-'),
                          _0x7be8d1 = _0x44c578[0x0],
                          _0x3fe13b = parseInt(_0x44c578[0x1]);

                    _0x358978[0x0].address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(parseFloat(_0x343e22.g[_0x7be8d1][_0x3fe13b].posX), parseFloat(_0x343e22.g[_0x7be8d1][_0x3fe13b].posY), parseFloat(_0x343e22.g[_0x7be8d1][_0x3fe13b].posZ)));
                  }
                }
              }
            }
          } else _0x358978.forEach(_0x2574f6 => {
            _0x2574f6.model = _0x2574f6.path, _0x2574f6.capacity = _0x293235()[_0x2574f6.path].capacity / 0x3e8;
          });

          _0x41a16b.globalBrowser.toggle('trade', {
            'value': true,
            'proposer': null,
            'proposed': null,
            'propertyType': _0x4c790c,
            'proposeType': null,
            'property': _0x358978,
            'playerId': _0x200d9c,
            'tradeType': _0x279818 ? 'giveRent' : 'sell'
          });
        }), _0x2891ef.events.add('trade.showInfo', (_0x23e14a, _0x2a0481) => {
          const a0_0xee24fe = {
            _0x2a5967: 0x731
          };
          _0x23e14a.forEach(_0x5a8925 => {
            _0x5a8925.model = _0x5a8925.path, _0x5a8925.capacity = _0x293235()[_0x5a8925.path].capacity / 0x3e8;
          }), _0x41a16b.globalBrowser.toggle('trade', {
            'value': true,
            'proposer': null,
            'proposed': null,
            'propertyType': 'vehicle',
            'proposeType': null,
            'sellerId': _0x2a0481,
            'sellProperty': _0x23e14a[0x0],
            'market': true,
            'tradeType': 'buy'
          });
        }), _0x2891ef.events.add('trade.cancel', (_0x4e6d98, _0x5c6963) => {
          _0x41a16b.globalBrowser.toggle('trade', {
            'value': false
          }), _0x5c381f = false, _0x2891ef.events.callRemote('1022242751', _0x4e6d98, _0xb65d74, _0x5c6963);
        }), _0x2891ef.events.add('trade.decline', _0x4fb89c => {
          _0x41a16b.globalBrowser.toggle('trade', {
            'value': false
          }), _0x2891ef.events.callRemote('3129726437', _0x4fb89c, _0xb65d74), _0x5c381f = false;
        }), _0x2891ef.events.add('trade.close', () => {
          _0x41a16b.globalBrowser.toggle('trade', {
            'value': false
          }), _0x5c381f = false;
        }), _0x2891ef.events.add('trade.buy', (_0x4fe33c, _0x50393a = false) => {
          _0x5c381f = false, _0x41a16b.globalBrowser.toggle('trade', {
            'value': false
          }), 'vehicle' === _0xb65d74 || _0x50393a ? _0x2891ef.events.callRemote('1804219464', _0x4fe33c, _0x50393a) : _0x2891ef.events.callRemote('1054882629', _0x4fe33c, _0xb65d74);
        }), _0x2891ef.events.add('trade.rent', _0x360fbb => {
          _0x5c381f = false, _0x41a16b.globalBrowser.toggle('trade', {
            'value': false
          }), _0x2891ef.events.callRemote('849895278', _0x360fbb);
        }), _0x2891ef.events.add('trade.send', (_0x506833, _0x5e011f, _0x33d361, _0x103cb3) => {
          _0x5c381f || (_0x5c381f = true, 'vehicle' === _0xb65d74 ? -0x1 !== _0x33d361 ? _0x2891ef.events.callRemote('666236388', _0x33d361, _0x506833, _0x5e011f, _0x103cb3) : _0x2891ef.events.callRemote('3174730171', _0x506833, _0x5e011f) : _0x2891ef.events.callRemote('2390556726', _0x33d361, _0x506833, _0x5e011f, _0xb65d74));
        }), _0x2891ef.events.add('trade.sendResult', () => {
          _0x5c381f = false;
        }), _0x2891ef.events.add('trade.sendRequest', (_0x3b766b, _0x2b3bf6) => {
          _0x41a16b.globalBrowser.emit('trade_afterSendRequest', {
            'playerId': _0x3b766b,
            'propertyType': _0x2b3bf6
          });
        }), _0x2891ef.events.add('trade.getRequest', (_0x4a3a8d, _0x7c8a57, _0x5701dc, _0x271af4) => {
          if (_0xb65d74 = _0x5701dc, 'vehicle' !== _0x5701dc) {
            if ('house' === _0x5701dc) _0x7c8a57.address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(parseFloat(_0x343e22.g.houses[_0x7c8a57.id].posX), parseFloat(_0x343e22.g.houses[_0x7c8a57.id].posY), parseFloat(_0x343e22.g.houses[_0x7c8a57.id].posZ)));else {
              if ('apartment' === _0x5701dc) _0x7c8a57.address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x1ab559()[_0x7c8a57.buildingId].shapeX, _0x1ab559()[_0x7c8a57.buildingId].shapeY, _0x1ab559()[_0x7c8a57.buildingId].shapeZ));else {
                if ('atm' === _0x5701dc) {
                  const _0x2d1639 = _0x11281c.Z.find(_0x3c2f11 => _0x3c2f11.propertyId === _0x7c8a57.id);

                  _0x7c8a57.address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x2d1639.x, _0x2d1639.y, _0x2d1639.z));
                } else {
                  if ('billboards' === _0x5701dc) {
                    const _0x1de840 = _0x42e776.find(_0x2093b0 => _0x2093b0.id === _0x7c8a57.id);

                    _0x7c8a57.address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(_0x1de840.position.x, _0x1de840.position.y, _0x1de840.position.z));
                  } else _0x7c8a57.address = _0x3637c2.api.escapeHtml(_0x3637c2.api.getAddress(parseFloat(_0x343e22.g[_0x7c8a57.tableName][_0x7c8a57.id].posX), parseFloat(_0x343e22.g[_0x7c8a57.tableName][_0x7c8a57.id].posY), parseFloat(_0x343e22.g[_0x7c8a57.tableName][_0x7c8a57.id].posZ)));
                }
              }
            }
          } else _0x7c8a57.model = _0x7c8a57.path, _0x7c8a57.capacity = _0x293235()[_0x7c8a57.path].capacity / 0x3e8;

          _0x41a16b.globalBrowser.toggle('trade', {
            'value': true,
            'proposer': null,
            'proposed': null,
            'propertyType': _0x5701dc,
            'proposeType': null,
            'sellerId': _0x4a3a8d,
            'sellProperty': _0x7c8a57,
            'market': false,
            'tradeType': _0x271af4 ? 'acceptRent' : 'buy'
          });
        });
        let _0x115329 = null,
            _0x5979e4 = null;
        _0x2891ef.events.add('playerEnterColshape', _0x112202 => {
          _0x3637c2.api.isAuthed() && _0x2891ef.colshapes.exists(_0x112202) && _0x21f4ca.insideCarMarket && (_0x21f4ca.vehicle || null != _0x112202.getVariable('seller') && (_0x115329 = _0x112202.getVariable('seller'), _0x5979e4 = _0x112202, _0x3637c2.api.displayHelpStringTrans('displayHelpString.getInfo', false, true, 0x1388)));
        }), _0x2891ef.events.add('playerExitColshape', _0x141787 => {
          _0x3637c2.api.isAuthed() && _0x2891ef.colshapes.exists(_0x141787) && _0x21f4ca.insideCarMarket && null != _0x141787.getVariable('seller') && (_0x2891ef.game.ui.clearHelp(true), _0x115329 = null, _0x5979e4 = null);
        }), _0x2891ef.events.add('keys.e', () => {
          if (!_0x5c381f && null != _0x115329) return _0x2891ef.colshapes.exists(_0x5979e4) ? void _0x2891ef.events.callRemote('763587442', _0x115329) : (_0x115329 = null, _0x5979e4 = null);
        });
      },
      0x101c: (_0x114aeb, _0x1f5224, _0x2e2d73) => {
        'use strict';

        const a0_0x1389a0 = {
          _0x558a74: 0x2488,
          _0x40a150: 0x1a3
        },
              a0_0x10bb09 = {
          _0x3d2515: 0x4b9,
          _0x49d2ab: 0x1d66,
          _0x3b47e3: 0x1851,
          _0x59ba5b: 0x4b9,
          _0x1940c9: 0x2530,
          _0x465d3c: 0x2e1,
          _0x254002: 0x2e1,
          _0x123019: 0x4b9
        },
              a0_0x3d6c32 = {
          _0x153830: 0x1cd8,
          _0x4d5f67: 0x2488
        },
              a0_0x2fdebe = {
          _0x2ab5cd: 0x4b9,
          _0x569046: 0x138e,
          _0x41aab4: 0x2488,
          _0x391056: 0x1827
        },
              a0_0x30fa64 = {
          _0x1dd42b: 0x1da5
        },
              a0_0x2def3b = {
          _0x1041f2: 0x535,
          _0x47dc2b: 0x13b0,
          _0x30c9c9: 0x1cd8,
          _0x2e8831: 0x4b9,
          _0x244849: 0x63f,
          _0x49e411: 0x8ca,
          _0x88249f: 0x2488,
          _0x254b0c: 0x4a3,
          _0x57fb4a: 0xfa2,
          _0x60ee08: 0x1d66,
          _0x10bb9a: 0x4b9,
          _0x1d1b5f: 0x4b9,
          _0x30424f: 0x13b4
        };

        _0x2e2d73.r(_0x1f5224);

        var _0x10d94b = _0x2e2d73(0x16a21),
            _0x3e796d = _0x2e2d73(0x12a76),
            _0x24e651 = _0x2e2d73(0x161cd);

        const _0x3c8732 = _0x24e651.players.local;
        let _0x6276e7 = false,
            _0x164c78 = null,
            _0x27a134 = {};
        _0x24e651.events.add('tuning.init', (_0x3670d6, _0x392f7, _0x5e04bd, _0x5858a5, _0x293713, _0x485948, _0x58f5a4) => {
          _0x164c78 = _0x3670d6, _0x10d94b.api.toggleHud(false), _0x10d94b.api.toggleChat(false), _0x10d94b.api.toggleRadar(false);
          const _0x51bd0c = {};

          for (let _0x1d32cb = 0x0; _0x1d32cb < 0x3f; _0x1d32cb++) 0xa !== _0x1d32cb && 0x10 !== _0x1d32cb && (_0x51bd0c[_0x1d32cb] = 0x12 === _0x1d32cb || 0x16 === _0x1d32cb ? 0x1 : _0x3c8732.vehicle.getNumMods(_0x1d32cb));

          _0x51bd0c[0x64] = 0x1, _0x51bd0c[0x66] = 0x5, _0x51bd0c[0x67] = 0x1, _0x51bd0c[0x68] = 0x1, _0x27a134 = _0x293713, _0x27a134.wheelType = _0x3c8732.vehicle.getWheelType(), _0x3e796d.globalBrowser.toggle('tuning', {
            'value': true,
            'config': _0x51bd0c,
            'shopPrices': _0x5e04bd,
            'modelPrice': _0x5858a5,
            'currentMods': _0x27a134,
            'wheelType': _0x27a134.wheelType,
            'model': _0x392f7,
            'customWheels': _0x485948,
            'customTuning': _0x58f5a4,
            'isBike': _0x24e651.game.vehicle.isThisModelABike(_0x3c8732.vehicle.model)
          });
        }), _0x24e651.events.add('tuning.setWheelType', (_0x3d34e5, _0x543b69) => {
          _0x24e651.events.callRemote('4037674127', _0x3d34e5, _0x543b69);
        }), _0x24e651.events.add('tuning.wheelTypeResult', (_0x2fa922, _0xe8a584) => {
          const _0x2db5ec = _0x3c8732.vehicle.getNumMods(_0xe8a584);

          _0x3e796d.globalBrowser.emit('tuning_setWheelCount', {
            'wheelCount': _0x2db5ec,
            'modType': _0xe8a584
          });
        }), _0x24e651.events.add('tuning.exit', () => {
          _0x10d94b.api.toggleHud(true), _0x10d94b.api.toggleChat(true), _0x10d94b.api.toggleRadar(true), _0x164c78 = null, _0x6276e7 = false, _0x3e796d.globalBrowser.toggle('tuning', {
            'value': false
          });
        }), _0x24e651.events.add('tuning.setMod', (_0xa663b, _0x3ddc8b) => {
          _0x6276e7 || (_0x6276e7 = true, _0x24e651.events.callRemote('110207612', _0xa663b, _0x3ddc8b));
        }), _0x24e651.events.add('tuning.tryMod', (_0x31ffdd, _0x488ea6) => {
          0xe === _0x31ffdd && _0x3c8732.vehicle && _0x3c8732.vehicle.startHorn(0x7d0, _0x24e651.game.joaat('NORMAL'), false), 0x12 === _0x31ffdd && _0x3c8732.vehicle && _0x10d94b.api.invokeNative('SET_VEHICLE_BOOST_ACTIVE', _0x3c8732.vehicle.handle, -0x1 != _0x488ea6), 0x25 === _0x31ffdd && _0x3c8732.vehicle && _0x3c8732.vehicle.setDoorOpen(0x5, false, false), (0x27 === _0x31ffdd || 0x28 === _0x31ffdd || 0x29 === _0x31ffdd && _0x3c8732.vehicle) && _0x3c8732.vehicle.setDoorOpen(0x4, false, false), _0x31ffdd >= 0x1b && _0x31ffdd <= 0x23 && _0x3c8732.vehicle && (_0x3c8732.vehicle.setDoorOpen(0x0, false, false), _0x3c8732.vehicle.setDoorOpen(0x1, false, false), _0x3c8732.vehicle.setDoorOpen(0x2, false, false), _0x3c8732.vehicle.setDoorOpen(0x3, false, false)), _0x3c8732.vehicle.setHandbrake(false);
        }), _0x24e651.events.add('tuning.setColor', (_0x35eff4, _0x487252) => {
          _0x6276e7 || (_0x6276e7 = true, _0x24e651.events.callRemote('474677970', _0x35eff4, _0x487252));
        }), _0x24e651.events.add('tuning.reset', (_0x29a997, _0x3a8dcf = false) => {
          'paintingList' === _0x29a997 ? _0x24e651.events.callRemote('1867145514') : _0x24e651.events.callRemote('3786389048'), 0x25 === _0x29a997 && _0x3c8732.vehicle && _0x3c8732.vehicle.setDoorShut(0x5, false), (0x27 === _0x29a997 || 0x28 === _0x29a997 && _0x3c8732.vehicle) && _0x3c8732.vehicle.setDoorShut(0x4, false), _0x29a997 >= 0x1b && _0x29a997 <= 0x23 && _0x3c8732.vehicle && (_0x3c8732.vehicle.setDoorShut(0x0, false), _0x3c8732.vehicle.setDoorShut(0x1, false), _0x3c8732.vehicle.setDoorShut(0x2, false), _0x3c8732.vehicle.setDoorShut(0x3, false)), _0x3e796d.globalBrowser.emit('tuning_setCurrentWheelType', _0x27a134.wheelCount);
        }), _0x24e651.events.add('tuning.buy', (_0x1d2f38, _0x16f603, _0x5b971a, _0x142e5a, _0x2ff0cb) => {
          if (!_0x6276e7) {
            if ('bank' !== _0x2ff0cb || _0x3c8732.bank && _0x3c8732.bank.id) (_0x6276e7 = true, 0x17 === _0x16f603 || 0x18 === _0x16f603) && (_0x5b971a = 0x3e8 * _0x3c8732.vehicle.getWheelType() + _0x5b971a), _0x24e651.events.callRemote('4258941838', _0x2ff0cb, _0x164c78, _0x1d2f38, _0x16f603, _0x5b971a, _0x142e5a);else _0x10d94b.api.longNotifyTrans('bank.noBankCardInInventory', 'error');
          }
        }), _0x24e651.events.add('tuning.buySuccess', (_0x1f1590, _0x393b27) => {
          _0x3e796d.globalBrowser.emit('tuning_buySuccess', {
            'modType': _0x1f1590,
            'modIndex': _0x393b27
          });
        }), _0x24e651.events.add('tuning.unblock', (_0x539e45, _0x10aec6) => {
          !_0x6276e7 && ((_0x6276e7 = true, (0x17 === _0x539e45 || 0x18 === _0x539e45) && _0x10aec6 < 0x1b58) && (_0x10aec6 = 0x3e8 * _0x3c8732.vehicle.getWheelType() + _0x10aec6), _0x24e651.events.callRemote('666505265', _0x539e45, _0x10aec6));
        }), _0x24e651.events.add('tuning.unblockResult', (_0x1de549, _0x47732a, _0x5d2d15, _0x14ad47) => {
          _0x6276e7 = false, _0x5d2d15 && _0x3e796d.globalBrowser.emit('tuning_unblockResult', {
            'wheel': _0x1de549,
            'id': _0x47732a,
            'modType': _0x5d2d15,
            'modIndex': _0x14ad47
          });
        }), _0x24e651.events.add('tuning.setResult', (_0x95a9fa, _0x624f11) => {
          _0x6276e7 = false;
        }), _0x24e651.events.add('playerDeath2', _0x2fb899 => {
          _0x2fb899 === _0x3c8732 && (_0x6276e7 = false, _0x164c78 = null);
        });
      },
      0x155e: (_0x17ca20, _0x4b6b62, _0x31ed62) => {
        'use strict';

        const a0_0x6541bc = {
          _0x4eeff1: 0x11f5,
          _0x100b09: 0x2488,
          _0x440e12: 0xca5,
          _0x4a8e24: 0x8a9,
          _0x4d45a2: 0xda8
        },
              a0_0xcdc9df = {
          _0x1880e3: 0xda8,
          _0x5f5dc6: 0x2488
        },
              a0_0x52bc0b = {
          _0x389955: 0x1a3
        },
              a0_0x1cd9c2 = {
          _0x15b435: 0x1da5,
          _0xf1be99: 0xff7
        },
              a0_0x37b9d7 = {
          _0x1fae62: 0x83f,
          _0x34a9a5: 0x56b,
          _0x5b4aa3: 0x14d2,
          _0x150e19: 0x1a5,
          _0x3386fa: 0x2037,
          _0xf1cb5d: 0xd61
        },
              a0_0x29c218 = {
          _0x39ad8e: 0x802
        },
              a0_0x6bca6b = {
          _0x25a094: 0x61d
        },
              a0_0x294fc6 = {
          _0x52962d: 0x419,
          _0x2f9a6f: 0x419,
          _0x195da1: 0x14d2
        },
              a0_0x4b0cee = {
          _0x3696fe: 0xd54,
          _0x275f8a: 0x14d2
        },
              a0_0x1c0c5f = {
          _0x269efb: 0x2cc,
          _0x47ee06: 0x2cc,
          _0x4dd476: 0x1a3,
          _0x5d9304: 0x16d4,
          _0x5a8d8e: 0x2488,
          _0x40ea2d: 0x1a3
        },
              a0_0x11fc89 = {
          _0x3bf8b6: 0x2236
        },
              a0_0x451036 = {
          _0x3d5b7d: 0x1dbf
        },
              a0_0x1fb648 = {
          _0x2e184e: 0xddb,
          _0x1b7263: 0xf0f,
          _0x45ad01: 0x1da5
        },
              a0_0x159658 = {
          _0x2e4257: 0x1da5,
          _0xb230b1: 0x212f,
          _0x4e3230: 0x2488,
          _0x1782c9: 0x116f
        },
              a0_0x344599 = {
          _0x3a84f9: 0x102d,
          _0x3f16f1: 0x1d66,
          _0x2b9045: 0x2596,
          _0x170324: 0x14d2,
          _0x404333: 0x1fd4,
          _0x16752a: 0x2292,
          _0x21ade5: 0x4a3,
          _0x3c0076: 0x2181,
          _0xeab918: 0x927
        },
              a0_0x3209b1 = {
          _0x29dd20: 0x14d2,
          _0x428cb6: 0x22fd
        },
              a0_0x96bca9 = {
          _0x3f8ed8: 0xe46,
          _0x1d3e65: 0x14d2,
          _0x1803d2: 0x1da5
        },
              a0_0x3635b6 = {
          _0x12a4fd: 0xda1,
          _0x1d7fde: 0x14d2,
          _0x5add25: 0x1da5,
          _0x562a78: 0x4a3,
          _0x19a3ab: 0x2488,
          _0x641b36: 0x4a3,
          _0x2dbfbd: 0x2403
        },
              a0_0x1ca172 = {
          _0x521800: 0x535,
          _0x2356ac: 0x13b0,
          _0x15003e: 0x381
        };

        _0x31ed62.r(_0x4b6b62);

        var _0x4aa085 = _0x31ed62(0x16a21),
            _0x86420f = _0x31ed62(0x12a76),
            _0x598680 = _0x31ed62(0x16e5f),
            _0x456e9d = _0x31ed62(0x48c4),
            _0x389851 = _0x31ed62(0x161cd);

        const _0x406ecb = _0x389851.players.local;

        let _0x4db39c,
            _0x5c09ae,
            _0x47e2b3 = {
          'partnership': false,
          'purchases': false,
          'clickedWelcome': false,
          'clickedAuth': false,
          'rulesAccepted': false,
          'twoFactor': {
            'requestNew': false,
            'activateToken': false,
            'auth': false
          },
          'waitingPassword': false,
          'waitingEmail': true,
          'waitingPasswordCheck': true
        };

        _0x389851.events.add('ucp.init', (_0x19960e, _0xfa7dc3 = 0x0) => {
          _0x4aa085.api.toggleHud(false), _0x4aa085.api.fadeIn(0x1f4), _0x86420f.globalBrowser.toggle('ucp', {
            'value': true,
            'info': _0xfa7dc3 ? null : _0x19960e
          });
        }), _0x389851.events.add('ucp.playAccount', (_0x40c02e, _0x3b4800) => {
          _0x47e2b3.clickedAuth || (_0x47e2b3.clickedAuth = true, _0x406ecb.rulesAccepted ? _0x389851.events.callRemote('1294858023', _0x40c02e, false, _0x3b4800) : (_0x4db39c = _0x40c02e, _0x5c09ae = _0x3b4800, _0x86420f.globalBrowser.toggle('ucp', {
            'value': false
          }), _0x86420f.globalBrowser.toggle('rules', {
            'value': true
          })));
        }), _0x389851.events.add('ucp.clickedAuthResult', () => {
          _0x47e2b3.clickedAuth = false;
        }), _0x389851.events.add('ucp.rulesAccepted', () => {
          _0x47e2b3.rulesAccepted || (_0x47e2b3.rulesAccepted = true, _0x389851.events.callRemote('1903845875'));
        }), _0x389851.events.add('ucp.rulesAcceptedResult', () => {
          _0x47e2b3.rulesAccepted = false, _0x389851.events.callRemote('1294858023', _0x4db39c, false, _0x5c09ae);
        }), _0x389851.events.add('ucp.close', () => {
          _0x389851.game.audio.setMobileRadioEnabledDuringGameplay(false), _0x389851.game.audio.setRadioToStationIndex(0xff), _0x389851.events.call('setTraffic', 0x0), _0x406ecb.freezePosition(false), _0x47e2b3.clickedAuth = false, _0x389851.events.call('cleartraffic'), _0x86420f.globalBrowser.toggle('gps', {
            'value': false
          }), _0x598680.Z.stop();
        }), _0x389851.events.add('ucp.setInfo', _0x45eb9a => {
          const _0x51f1f8 = {
            'login': _0x4aa085.api.getName(_0x406ecb),
            'accountId': _0x406ecb.getVariable('id'),
            'member': _0x406ecb.getVariable('member'),
            'family': _0x406ecb.getVariable('family'),
            'admin': _0x4aa085.api.getAdmin(_0x406ecb),
            'gender': _0x4aa085.api.getEntitySync(_0x406ecb, 'gender', 'number'),
            'socialClub': _0x406ecb.socialClub,
            'playerId': _0x406ecb.remoteId,
            'userLogin': _0x406ecb.userLogin,
            'email': _0x406ecb.email,
            'timezone': (0x0, _0x456e9d.getServerTimezone)(),
            'coins': _0x45eb9a
          };

          _0x86420f.globalBrowser.emit('main_updateAuthData', JSON.stringify(_0x51f1f8));
        }), _0x389851.events.add('ucp.logout', () => {
          _0x389851.events.callRemote('2338110838'), _0x86420f.globalBrowser.toggle('auth', {
            'value': true,
            'page': 'auth'
          });
        }), _0x389851.events.add('welcome.start', () => {
          _0x47e2b3.clickedWelcome || (_0x86420f.globalBrowser.toggle('welcome', {
            'value': false
          }), _0x47e2b3.clickedWelcome = true, _0x389851.events.callRemote('90445039'));
        }), _0x389851.events.add('ucp.setWelcomeMenu', (_0x4dd6c1 = {}) => {
          _0x86420f.globalBrowser.toggle('welcome', {
            'value': true,
            ..._0x4dd6c1
          }), _0x4aa085.api.moveSkyCamera('up'), _0x7801d1();
        }), _0x389851.events.add('ucp.setWelcomeMenu2', (_0x3a5187 = {}) => {
          _0x86420f.globalBrowser.toggle('welcome', {
            'value': true,
            ..._0x3a5187
          });
        }), _0x389851.events.add('ucp.closeWelcomeMenu', () => {
          _0x86420f.globalBrowser.toggle('welcome', {
            'value': false
          });
        }), _0x389851.events.add('showBannedWelcome', _0x373e31 => {
          _0x373e31.reason && (_0x373e31.reason = _0x4aa085.api.language.translatePlayer(_0x373e31.reason)), _0x86420f.globalBrowser.toggle('welcome', {
            'value': true,
            'banInfo': _0x373e31
          });
        }), _0x389851.events.add('playerJoinEvent', _0x45610c => {
          _0x406ecb.socialClub = _0x45610c;
        });

        const _0x7801d1 = () => {
          _0x598680.Z.play('ucp', {
            'volume': 0xf,
            'force': true
          });
        };

        _0x389851.events.add('settings.setModal', (_0x5eef09, _0x132a1b = false) => {
          let _0x64c45 = '';
          _0x64c45 = _0x31ed62.g.interfaces.panelMenu ? 'panelMenu' : 'ucp', _0x5eef09 ? _0x86420f.globalBrowser.emit('main_openSettingsModal', {
            'type': _0x5eef09,
            'path': _0x64c45
          }) : _0x86420f.globalBrowser.emit('main_openSettingsModal', {
            'type': null,
            'emailConfirmed': _0x132a1b,
            'path': _0x64c45
          });
        }), _0x389851.events.add('settings.modalClosed', _0x38b14b => {
          if ('password' === _0x38b14b) {}
        }), _0x389851.events.add('settings.requestChangeEmail', (_0x4c04bd, _0x5bd43a) => {
          _0x47e2b3.waitingEmail || (_0x389851.events.callRemote('2504885699', _0x4c04bd, _0x5bd43a));
        }), _0x389851.events.add('settings.requestChangePassword', () => {
          _0x47e2b3.waitingPassword || (_0x47e2b3.waitingPassword = true, _0x389851.events.callRemote('717356000'));
        }), _0x389851.events.add('settings.requestChangePasswordCheck', (_0x39f048, _0x43a71e, _0x322232) => {
          _0x47e2b3.waitingPasswordCheck || (_0x389851.events.callRemote('2591787822', _0x39f048, _0x43a71e, _0x322232));
        }), _0x389851.events.add('settings.emailChangeResult', _0x2bbb51 => {
          _0x47e2b3.waitingEmail = false, _0x2bbb51 && _0x389851.events.call('settings.setModal', false, true);
        }), _0x389851.events.add('settings.passwordChangeResult', _0xbd39a8 => {
          _0x47e2b3.waitingPassword = false, _0xbd39a8 && (_0x389851.events.call('settings.setModal', false), _0x47e2b3.waitingPasswordCheck = false);
        }), _0x389851.events.add('settings.setPasswordChangeResult', (_0x182f3c = {}) => {
          _0x86420f.globalBrowser.emit('ucp_setPasswordChangeResult', JSON.stringify(_0x182f3c));
        }), _0x389851.events.add('ucp.2fa.result', _0x4b0c91 => {
          _0x47e2b3.twoFactor[_0x4b0c91] = false;
        }), _0x389851.events.add('ucp.requestNew2FA', () => {
          _0x47e2b3.twoFactor.requestNew || (_0x47e2b3.twoFactor.requestNew = true, _0x389851.events.callRemote('1505554765'));
        }), _0x389851.events.add('ucp.set2FAQRCode', (_0x33a075, _0x542de0) => {
          const _0x4147b4 = _0x542de0.match(/.{1,4}/g).join(' ').toLowerCase();

          _0x86420f.globalBrowser.emit('ucp_setQrCode', {
            'url': _0x33a075,
            'secret': _0x4147b4
          }), _0x389851.events.call('settings.setModal', 'activateFA'), _0x47e2b3.twoFactor.requestNew = false;
        }), _0x389851.events.add('settings.tryActivate2FA', _0x34a762 => {
          _0x47e2b3.twoFactor.activateToken || (_0x47e2b3.twoFactor.activateToken = true, _0x389851.events.callRemote('1837649089', _0x34a762));
        }), _0x389851.events.add('settings.tryDisable2FA', _0x18d493 => {
          _0x47e2b3.twoFactor.disable2FA || (_0x47e2b3.twoFactor.disable2FA = true, _0x389851.events.callRemote('1668489438', _0x18d493));
        }), _0x389851.events.add('settings.set2FAActivated', (_0x2391e5, _0x30bf66) => {
          _0x86420f.globalBrowser.emit('ucp_setTwoFactorActivated', {
            'activated': _0x2391e5,
            'codes': _0x30bf66
          });
        }), _0x389851.events.add('ucp.set2FARequired', (_0x48a52f, _0x3dbdbe = false) => {
          _0x86420f.globalBrowser.toggle('welcome', {
            'value': _0x48a52f,
            'mFA': {
              'show': _0x48a52f,
              'error': _0x3dbdbe
            }
          });
        }), _0x389851.events.add('ucp.tryAuth2FA', _0x210c5e => {
          _0x47e2b3.twoFactor.auth || (_0x47e2b3.twoFactor.auth = true, _0x389851.events.callRemote('33240079', _0x210c5e));
        }), _0x389851.events.add('ucp.setTokenData', (_0x528990, _0x2b17e9, _0x4a0ba1) => {
          _0x47e2b3.jwtToken = _0x528990, _0x47e2b3.characterId = _0x2b17e9, _0x47e2b3.serverId = _0x4a0ba1, _0x86420f.globalBrowser.emit('profile.setTokenData', _0x528990, _0x2b17e9, _0x4a0ba1);
        }), _0x389851.events.add('vue.mounted', () => {
          'string' == typeof _0x47e2b3.jwtToken && 'number' == typeof _0x47e2b3.characterId && _0x86420f.globalBrowser.emit('profile.setTokenData', _0x47e2b3.jwtToken, _0x47e2b3.characterId, _0x47e2b3.serverId);
        });
      },
      0x3c24: (_0x440c70, _0x2463e4, _0x435314) => {
        'use strict';

        const a0_0x1b0197 = {
          _0x9ac605: 0x16c5,
          _0x407647: 0x535,
          _0xae0b21: 0xfa6,
          _0x400e02: 0x74c,
          _0x515de6: 0x16e2,
          _0x4489aa: 0x16e2
        },
              a0_0x303010 = {
          _0x5712da: 0x11ef
        },
              a0_0x4076a8 = {
          _0x98524d: 0x12e5,
          _0x512c6e: 0x23c9,
          _0x148b76: 0x535,
          _0x133e77: 0x1076,
          _0x22787a: 0xfa6,
          _0x3a00bc: 0x11ef,
          _0x34304d: 0x74c,
          _0x350df2: 0x16e2,
          _0x982ef3: 0x162c,
          _0x3c03ac: 0x162c
        },
              a0_0x36b8d6 = {
          _0x4d5971: 0xe28,
          _0x5d2918: 0x1825,
          _0x429a98: 0x240b,
          _0x125180: 0xe28,
          _0x5170c2: 0x1ea6
        },
              a0_0x3bd52f = {
          _0x19cc66: 0x2121,
          _0xdf2394: 0x19ee,
          _0x9a9669: 0x1383,
          _0x6ffb27: 0x1d66,
          _0x1592a7: 0x186b,
          _0x419d94: 0x2310,
          _0x649732: 0x1097,
          _0x2ec382: 0x186b,
          _0x1feaa7: 0xfa2,
          _0x3c28cd: 0x1e8b,
          _0x137ef3: 0x641,
          _0x55043e: 0x187e,
          _0x347b2f: 0x15e0,
          _0x933894: 0x115f,
          _0x346267: 0x821,
          _0x59ec7e: 0xe1b,
          _0x836736: 0x15e0,
          _0x3c442d: 0x1d66,
          _0x4b2045: 0x186b
        },
              a0_0x4406d3 = {
          _0x4d25d3: 0x15e7,
          _0xeca712: 0x15e0,
          _0x57e1bc: 0x115f,
          _0x547db3: 0x1d66,
          _0xf8512e: 0x1d66,
          _0x3bb600: 0x2271,
          _0x3729db: 0x69b,
          _0x3a3781: 0x1383,
          _0xd81b5b: 0x14d2,
          _0x197814: 0x1a5,
          _0x3a95fa: 0x2667,
          _0x2a74b2: 0x2f3,
          _0x2bcf67: 0x6a5,
          _0x322148: 0x146e,
          _0x100f36: 0x1820,
          _0x59deaa: 0x16c5,
          _0x39f1ae: 0x4b9,
          _0x45d1b0: 0x3e9,
          _0x54e233: 0x2488,
          _0x11453a: 0x4a3,
          _0x2295ce: 0x11ef
        },
              a0_0x44f245 = {
          _0x582ead: 0x390,
          _0xd36ca0: 0x157d,
          _0x551708: 0x2271,
          _0x34bbed: 0x14d2,
          _0x3a97b1: 0x631
        },
              a0_0x15aad4 = {
          _0x3b92b5: 0x9a8
        },
              a0_0x53cb06 = {
          _0x1eeaee: 0x12e5,
          _0x3b238a: 0x4b9,
          _0x34a540: 0x4b9,
          _0x4a68ec: 0x4b9,
          _0x41ab52: 0x4b9,
          _0x32eda5: 0x14d1,
          _0x1bfde3: 0x4b9,
          _0x7421a0: 0xd84,
          _0x4af914: 0x1c74,
          _0x53f06e: 0x4b9,
          _0x4c6756: 0x1d66,
          _0x319649: 0x1825,
          _0x256cdf: 0x1d66,
          _0x3fe070: 0xc51,
          _0x5c2f8a: 0x4b9,
          _0x5b2ca6: 0x4b9,
          _0x4dd35d: 0xb3d,
          _0x240a84: 0xc8b,
          _0x6fcbe7: 0xb3d,
          _0x143203: 0xbf3,
          _0x10fc2b: 0xb5f
        },
              a0_0x1425dd = {
          _0x8d6bd9: 0xc8f,
          _0x32da00: 0x12e5,
          _0x54602c: 0x14d2,
          _0x5594f7: 0x1ebf,
          _0x45af2c: 0x22e5,
          _0x64e4ef: 0x265,
          _0x30009e: 0x11ba,
          _0x32cacc: 0xec6,
          _0x562a77: 0x7ee,
          _0x500a36: 0x535,
          _0x477fd9: 0x2122,
          _0xb6f173: 0x1934,
          _0x2b7cc7: 0x25df,
          _0x21ccf6: 0x385,
          _0x2c9e60: 0x162c,
          _0x1dd7c4: 0x16e2,
          _0x4bd7a0: 0x1c06,
          _0x308b21: 0x1da5,
          _0x43f48b: 0x2001,
          _0x287b40: 0x146e,
          _0x414811: 0x1f30,
          _0x4cdf9b: 0x7fe,
          _0x4ff2da: 0x1d1,
          _0x16e902: 0x256e,
          _0x22513c: 0x1d66,
          _0x565435: 0x1825,
          _0x4a8328: 0x2379,
          _0x8d38c9: 0x1f30,
          _0x3960c1: 0x535,
          _0x4d82e8: 0x1820,
          _0x497aaa: 0x1d66,
          _0x3c76ee: 0x2001,
          _0x37405f: 0x20e9,
          _0x575c29: 0x529,
          _0x2d4e6b: 0x4b9,
          _0x2ccc8b: 0xaf5,
          _0x271c87: 0x4b9,
          _0x1a419e: 0x2530,
          _0x3c6965: 0x4b9,
          _0x1bd025: 0xb3d,
          _0x5a74eb: 0xb3d,
          _0x3b7121: 0x2170,
          _0x3c357b: 0x4b9,
          _0x5c8051: 0xb3d,
          _0xb575c: 0xbf3,
          _0x4a61f0: 0xd84,
          _0x39bcb2: 0x4b9,
          _0x3e799c: 0x4b9,
          _0x4fec17: 0x2b1,
          _0xbcb598: 0x4b9,
          _0xeb7a9f: 0x2b1,
          _0x2e7add: 0x4c8,
          _0x398ae6: 0x2b1,
          _0x129552: 0x4b9,
          _0x2329ff: 0x2b1,
          _0x582548: 0x1a07,
          _0x1e8c65: 0x1abb,
          _0x2086a6: 0x15e7,
          _0x295a89: 0x1a4d,
          _0x4aa701: 0x2271,
          _0x39c0e2: 0x1816,
          _0x25a8f5: 0x1909,
          _0x40ca2b: 0x1383,
          _0x1c5c2c: 0x54d,
          _0x338cd9: 0x19ee,
          _0x2bb561: 0x186b,
          _0x4cbfb8: 0x2310,
          _0x36e9da: 0xc8f,
          _0x58f5ec: 0x2488,
          _0x10da65: 0x794,
          _0x4f5534: 0x535,
          _0x29dae9: 0x2488,
          _0x5b3f91: 0x4a3,
          _0x2e3a2f: 0x14d2,
          _0x1deb93: 0x1a5
        },
              a0_0x1c4af1 = {
          _0x40a6e4: 0x1442,
          _0x54c7ff: 0xc55,
          _0x391107: 0x2620,
          _0x3ba13a: 0x213a,
          _0x61147c: 0x830
        };

        _0x435314.r(_0x2463e4);

        var _0x5e0f72 = _0x435314(0x16a21),
            _0x134d14 = _0x435314(0xccab),
            _0x4e4105 = _0x435314(0xc11e),
            _0x241712 = _0x435314(0x12a76),
            _0x559c8a = _0x435314(0x161cd);

        const _0x28dba6 = new Map(),
              _0x428d3 = (_0x2c413e, _0x43f4be = true, _0x308f3c = true) => {
          const _0x4acb1a = _0x28dba6.has(_0x2c413e);

          _0x43f4be ? _0x4acb1a || _0x28dba6.set(_0x2c413e, {
            'status': _0x43f4be,
            'withKeys': _0x308f3c
          }) : _0x4acb1a && _0x28dba6.delete(_0x2c413e);

          const _0x1a9a57 = !!_0x28dba6.size,
                _0x7c22b8 = [..._0x28dba6.values()].some(_0x174ad6 => _0x174ad6.withKeys);

          _0x559c8a.gui.cursor.show(!!_0x1a9a57 && _0x7c22b8, _0x1a9a57);
        };

        var _0x8ee53d = _0x435314(0x176d8),
            _0x31b978 = _0x435314(0xbf7b),
            _0x3b4ce8 = _0x435314(0xa04a),
            _0x3520dd = _0x435314(0x4f42),
            _0x3c4add = _0x435314(0x16a7d),
            _0x36fd20 = _0x435314(0x161cd);

        const _0x34aeac = _0x36fd20.players.local,
              _0x5eac6c = {
          'active': false,
          'activeMenu': false,
          'waiting': false,
          'lastKeyPress': 0x0,
          'dragyActive': false,
          'traficActive': false,
          'vehicle': null,
          'vehicleOriginalModel': '',
          'vehicleModel': '',
          'vehicleColor': 0x0,
          'vehicleFullTuning': false,
          'lastBussiness': null,
          'stopTimer': null,
          'lastPlayerPosition': null,
          'currentPlace': 0x0,
          'timeBar': null,
          'timeLeft': 0x168
        },
              _0x1638af = [{
          'position': new _0x36fd20.Vector3(-949.119995, -2727.496826, 0xe),
          'heading': 293.47
        }, {
          'position': new _0x36fd20.Vector3(-1874.0435, 2006.8969, 141.5575),
          'heading': 340.3163
        }, {
          'position': new _0x36fd20.Vector3(-409.6581, 1183.8605, 325.5466),
          'heading': 237.3023
        }, {
          'position': new _0x36fd20.Vector3(-0x7d0, 1113.211, -25.36243),
          'heading': 0x0
        }, {
          'position': new _0x36fd20.Vector3(1022.34375, -2953.8132, 5.9),
          'heading': 89.63015
        }, {
          'position': new _0x36fd20.Vector3(-839.69, -1530.88, 0x0),
          'heading': 134.7
        }];
        {
          const _0x58cfe6 = _0x34aeac.position;
          _0x36fd20.game.ped.setPedDensityMultiplierThisFrame(0x0), _0x36fd20.game.streaming.setPedPopulationBudget(0x0), _0x36fd20.game.streaming.setVehiclePopulationBudget(0x0), _0x36fd20.game.gameplay.clearAreaOfEverything(_0x58cfe6.x, _0x58cfe6.y, _0x58cfe6.z, 0x2710, false, false, false, false);
        }

        _0x36fd20.events.add('testDrive.start', async (_0x50f916, _0x52afcb, _0x432de5 = 0x0) => {
          if (_0x5eac6c.waiting || _0x5eac6c.active) return;
          _0x52afcb ? _0x36fd20.events.call('autoshopAPI.exit', true) : _0x241712.globalBrowser.toggle('donate', {
            'value': false
          });
          let _0x49056a = false;
          const _0x4d086d = _0x34aeac.position;

          for (const _0x38fbd7 in _0x435314.g.auto_shops) {
            const _0x502dad = _0x435314.g.auto_shops[_0x38fbd7];

            if (_0x5e0f72.api.vdist(_0x4d086d.x, _0x4d086d.y, _0x4d086d.z, parseFloat(_0x502dad.bizPosX), parseFloat(_0x502dad.bizPosY), parseFloat(_0x502dad.bizPosZ)) < 0x64) {
              _0x49056a = true;
              break;
            }
          }

          if (!_0x52afcb && !_0x49056a) return void _0x5e0f72.api.longNotifyTrans('property.mustBeNearAutoshop', 'error');
          _0x5e0f72.api.fadeOut(0x0), _0x36fd20.gui.cursor.show(false, false), _0x5eac6c.active = true, _0x5eac6c.activeMenu = false, _0x5eac6c.waiting = true, _0x5eac6c.lastBussiness = _0x52afcb, _0x5eac6c.traficActive = false, _0x5eac6c.lastKeyPress = 0x0, _0x5eac6c.dragyActive = false, _0x36fd20.events.callRemote('3702382805', _0x34aeac.remoteId + 0x64), _0x5eac6c.lastPlayerPosition = _0x4d086d;
          let _0x3d99d2 = _0x1638af[0x0].position,
              _0x452079 = _0x1638af[0x0].heading,
              _0x27b0a0 = _0x50f916;

          switch (_0x50f916) {
            case 'urus58':
              _0x27b0a0 = 'urus';
              break;

            case 'msprinters1':
              _0x27b0a0 = 'msprinter';
          }

          if (_0x5eac6c.vehicleOriginalModel = _0x27b0a0, _0x5eac6c.vehicleModel = _0x50f916, _0x5eac6c.vehicleColor = _0x432de5, _0x36fd20.game.vehicle.isThisModelABoat(_0x36fd20.game.joaat(_0x27b0a0)) && (_0x3d99d2 = _0x1638af[0x5].position, _0x452079 = _0x1638af[0x5].heading), _0x5e0f72.api.setPlayerPos(_0x34aeac, _0x3d99d2), _0x5eac6c.vehicle = _0x36fd20.vehicles.new(_0x36fd20.game.joaat(_0x27b0a0), _0x3d99d2, {
            'dimension': _0x34aeac.remoteId + 0x64,
            'heading': _0x452079,
            'numberPlate': 'TEST',
            'locked': true,
            'engine': true
          }), _0x5eac6c.vehicle) {
            for (let _0x16b4d2 = 0x0; 0x0 === _0x5eac6c.vehicle?.['handle'] && _0x16b4d2 < 0xf; ++_0x16b4d2) await _0x36fd20.game.sleep(0x64);

            _0x5eac6c.vehicle ? (_0x5eac6c.vehicle.setDirtLevel(0x0), _0x5eac6c.vehicle.setColours(_0x432de5 || 0x0, 0x0), _0x5eac6c.vehicle.handle && _0x34aeac.taskWarpIntoVehicle(_0x5eac6c.vehicle.handle, -0x1), _0x5eac6c.vehicle.setHeading(_0x452079), _0x5eac6c.vehicle.sync = {}, _0x5eac6c.vehicle.sync.locked = true, _0x5eac6c.vehicle.sync.engine = true, _0x5eac6c.vehicle.sync.gas = 0x32, false && (_0x5eac6c.vehicle.setMod(0x1, 0x1), _0x5eac6c.vehicle.setMod(0x7, 0x0), _0x5eac6c.vehicle.setMod(0x2a, 0x1)), _0x5eac6c.vehicle.setEngineOn(true, true, false), _0x5e0f72.api.longNotifyTrans('property.limitedTestDrive', {
              'amount': 0x6
            }, 'warn', 0x2710), _0x5e0f72.api.displayHelpStringTrans('displayHelpString.finishTestDrive', false, true, 0x2710), _0x5eac6c.stopTimer && (_0x5eac6c.stopTimer.cancel(), delete _0x5eac6c.stopTimer), _0x5eac6c.timeBar || (_0x5eac6c.timeBar = new _0x8ee53d.TimerBar('testDrive.timeBarLabel', null, {
              'visible': false
            })), _0x5eac6c.timeBar.value = 0x6.toString().padStart(0x2, '0') + ':00', _0x5eac6c.timeBar.visible = true, _0x3b4ce8.clockController.freezeTime = true, _0x3b4ce8.clockController.setTime(0x6, 0x0, 0x0), _0x36fd20.game.gameplay.setWeatherTypeNowPersist('EXTRASUNNY'), _0x5eac6c.waiting = false, _0x241712.globalBrowser.emit('chat_show', true), _0x5e0f72.api.setDiscordStatus('onTestDrive', {
              'title': _0x5e0f72.api.getVehicleTitle(_0x50f916)
            }), _0x241712.globalBrowser.toggle('testDrive', {
              'value': true
            }), _0x5e0f72.api.fadeIn(0xfa)) : _0x36fd20.events.call('testDrive.stop');
          } else _0x36fd20.events.call('testDrive.stop');
        });

        const _0x14c4d1 = () => {
          _0x36fd20.vehicles.exists(_0x5eac6c.vehicle) && _0x5eac6c.vehicle.handle && (_0x5eac6c.vehicleFullTuning ? (_0x5eac6c.vehicle.setMod(0xb, 0x3), _0x5eac6c.vehicle.setMod(0xc, 0x2), _0x5eac6c.vehicle.setMod(0xd, 0x2), _0x5eac6c.vehicle.setMod(0x12, 0x0)) : (_0x5eac6c.vehicle.setMod(0xb, 0x0), _0x5eac6c.vehicle.setMod(0xc, 0x0), _0x5eac6c.vehicle.setMod(0xd, 0x0), _0x5eac6c.vehicle.setMod(0x12, 0x0)));
        };

        _0x36fd20.events.add('time.every01Sec', async () => {
          _0x5eac6c.active && _0x5eac6c.vehicle && _0x36fd20.vehicles.exists(_0x5eac6c.vehicle) && (_0x5eac6c.vehicle.handle && !_0x5eac6c.vehicle.streamed ? (_0x5eac6c.vehicle.streamed = true, _0x5eac6c.vehicle.setDirtLevel(0x0), _0x5eac6c.vehicle.setColours(_0x5eac6c.vehicleColor || 0x0, 0x0), _0x5eac6c.vehicle.handle && _0x34aeac.taskWarpIntoVehicle(_0x5eac6c.vehicle.handle, -0x1), _0x36fd20.game.vehicle.isThisModelABoat(_0x36fd20.game.joaat('')) ? _0x5eac6c.vehicle.setHeading(_0x1638af[0x5].heading) : _0x5eac6c.vehicle.setHeading(_0x1638af[0x0].heading), _0x5eac6c.vehicle.sync = {}, _0x5eac6c.vehicle.sync.locked = true, _0x5eac6c.vehicle.sync.engine = true, _0x5eac6c.vehicle.sync.gas = 0x32, _0x5eac6c.vehicle.setEngineOn(true, true, false), _0x14c4d1()) : !_0x5eac6c.vehicle.handle && _0x5eac6c.vehicle.streamed && (_0x5eac6c.vehicle.streamed = false));
        }), _0x36fd20.events.add('time.everySec', async () => {
          !_0x5eac6c.active || _0x5eac6c.timeLeft <= 0x0 || (_0x5eac6c.timeLeft -= 0x1, _0x5eac6c.timeBar || (_0x5eac6c.timeBar = new _0x8ee53d.TimerBar('testDrive.timeBarLabel', null, {
            'visible': true
          })), _0x5eac6c.timeBar.value = (_0xc01870 => {
            const _0x20dfeb = Math.floor(_0xc01870 % 0xe10 / 0x3c),
                  _0x2cec0a = Math.floor(_0xc01870 % 0x3c);

            return _0x20dfeb > 0x0 ? _0x20dfeb.toString().padStart(0x2, '0') + ':' + _0x2cec0a.toString().padStart(0x2, '0') : _0x2cec0a.toString().padStart(0x2, '0') + 'с';
          })(_0x5eac6c.timeLeft), _0x5eac6c.timeLeft <= 0x0 && _0x36fd20.events.call('testDrive.stop'));
        }), _0x36fd20.events.add('testDrive.stop', async () => {
          if (_0x5eac6c.stopTimer && (_0x5eac6c.stopTimer.cancel(), delete _0x5eac6c.stopTimer), _0x5eac6c.traficActive) {
            const _0x885709 = _0x34aeac.position;
            _0x36fd20.game.ped.setPedDensityMultiplierThisFrame(0x0), _0x36fd20.game.streaming.setPedPopulationBudget(0x0), _0x36fd20.game.streaming.setVehiclePopulationBudget(0x0), _0x36fd20.game.gameplay.clearAreaOfEverything(_0x885709.x, _0x885709.y, _0x885709.z, 0x2710, false, false, false, false);
          }

          if (_0x5eac6c.timeBar && (_0x5eac6c.timeBar.visible = false, _0x5eac6c.timeBar = null), _0x3520dd.WeatherController.restore(), _0x3b4ce8.clockController.freezeTime = false, _0x36fd20.events.call('setActiveDragy', false), _0x36fd20.events.callRemote('3702382805', 0x0), _0x5eac6c.lastBussiness) {
            const _0x1060d3 = _0x134d14.I9[_0x5eac6c.lastBussiness - 0x1];
            _0x5e0f72.api.setPlayerPos(_0x34aeac, new _0x36fd20.Vector3(parseFloat(_0x1060d3.exitPosX), parseFloat(_0x1060d3.exitPosY), parseFloat(_0x1060d3.exitPosZ))), delete _0x5eac6c.lastBussiness;
          } else _0x5e0f72.api.setPlayerPos(_0x34aeac, _0x5eac6c.lastPlayerPosition);

          _0x36fd20.vehicles.exists(_0x5eac6c.vehicle) && (_0x5eac6c.vehicle.destroy(), delete _0x5eac6c.vehicle), _0x5e0f72.api.setDiscordStatus(), _0x241712.globalBrowser.toggle('testDrive', {
            'value': false
          }), _0x5eac6c.active = false;
        }), _0x36fd20.events.add('testDrive.setOption', async (_0x36d2ab, _0x13d1e4) => {
          switch (_0x36d2ab) {
            case 'time':
              switch (_0x13d1e4) {
                case 0x0:
                  _0x3b4ce8.clockController.setTime(0x6, 0x0, 0x0);

                  break;

                case 0x1:
                  _0x3b4ce8.clockController.setTime(0xc, 0x0, 0x0);

                  break;

                case 0x2:
                  _0x3b4ce8.clockController.setTime(0x13, 0x0, 0x0);

                  break;

                case 0x3:
                  _0x3b4ce8.clockController.setTime(0x3, 0x0, 0x0);

              }

              break;

            case 'weather':
              switch (_0x13d1e4) {
                case 0x0:
                  _0x36fd20.game.gameplay.setWeatherTypeNowPersist('EXTRASUNNY');

                  break;

                case 0x1:
                  _0x36fd20.game.gameplay.setWeatherTypeNowPersist('RAIN');

                  break;

                case 0x2:
                  _0x36fd20.game.gameplay.setWeatherTypeNowPersist('SNOW');

              }

              break;

            case 'tuning':
              _0x5eac6c.vehicleFullTuning = !_0x13d1e4, _0x14c4d1();
              break;

            case 'trafic':
              if (_0x5eac6c.traficActive = !!_0x13d1e4, _0x5eac6c.traficActive) _0x36fd20.game.ped.setPedDensityMultiplierThisFrame(0x1), _0x36fd20.game.streaming.setPedPopulationBudget(0x1), _0x36fd20.game.streaming.setVehiclePopulationBudget(0x1);else {
                const _0x224b4a = _0x34aeac.position;
                _0x36fd20.game.ped.setPedDensityMultiplierThisFrame(0x0), _0x36fd20.game.streaming.setPedPopulationBudget(0x0), _0x36fd20.game.streaming.setVehiclePopulationBudget(0x0), _0x36fd20.game.gameplay.clearAreaOfEverything(_0x224b4a.x, _0x224b4a.y, _0x224b4a.z, 0x2710, false, false, false, false);
              }
          }
        }), _0x36fd20.events.add('testDrive.selectPlace', async _0x47ed5a => {
          if (!_0x1638af[_0x47ed5a] || _0x47ed5a === _0x5eac6c.currentPlace || _0x36fd20.game.vehicle.isThisModelABoat(_0x36fd20.game.joaat(''))) return;
          const {
            position: _0x4c4f89,
            heading: _0x4f33e0
          } = _0x1638af[_0x47ed5a];
          0x3 === _0x47ed5a ? ((0x0, _0x31b978.removeInterior)(), (0x0, _0x31b978.requestInteior)()) : 0x3 === _0x5eac6c.currentPlace && (0x0, _0x31b978.removeInterior)(), _0x5eac6c.currentPlace = _0x47ed5a, await _0x5e0f72.api.teleportAndLoad(_0x4c4f89, _0x4f33e0, {
            'fadeTime': 0x1f4,
            'vehicle': true,
            'setOnGroundProperly': true
          });
        }), _0x36fd20.events.add('playerLeaveVehicle', () => {
          _0x5eac6c.active && _0x36fd20.events.call('testDrive.stop');
        }), _0x36fd20.events.add('keys.up', () => {
          !_0x5eac6c.active || _0x435314.g.interfaces.chat || _0x435314.g.inTuning || !_0x5e0f72.api.isAuthed() || _0x435314.g.skyCamera || _0x435314.g.isUsingSystemAnim && !(0x0, _0x4e4105.isPlayerOnChair)(_0x34aeac) || _0x435314.g.currentInterface && 'testDrive' !== _0x435314.g.currentInterface || _0x5e0f72.api.ePress(_0x5eac6c.lastKeyPress) || (_0x5eac6c.lastKeyPress = _0x5e0f72.api.ePressUpdate(), _0x5eac6c.activeMenu = !_0x5eac6c.activeMenu, _0x428d3('testDrive', _0x5eac6c.activeMenu), _0x241712.globalBrowser.emit('testDrive_setActivePage', _0x5eac6c.activeMenu));
        }), _0x36fd20.events.add('testDrive.hideMenu', () => {
          _0x5eac6c.activeMenu = false, _0x428d3('testDrive', _0x5eac6c.activeMenu);
        }), _0x36fd20.keys.bind(_0x3c4add.t.U, false, () => {
          !_0x5eac6c.active || _0x435314.g.interfaces.chat || _0x435314.g.inTuning || !_0x5e0f72.api.isAuthed() || _0x435314.g.skyCamera || _0x435314.g.isUsingSystemAnim && !(0x0, _0x4e4105.isPlayerOnChair)(_0x34aeac) || _0x435314.g.currentInterface && 'testDrive' !== _0x435314.g.currentInterface || _0x5e0f72.api.ePress(_0x5eac6c.lastKeyPress) || (_0x5eac6c.lastKeyPress = _0x5e0f72.api.ePressUpdate(), _0x5eac6c.dragyActive = !_0x5eac6c.dragyActive, _0x36fd20.events.call('setActiveDragy', _0x5eac6c.dragyActive));
        }), _0x36fd20.events.add('keys.e', () => {
          !_0x5eac6c.active || !_0x34aeac.vehicle || !_0x36fd20.vehicles.exists(_0x34aeac.vehicle) || _0x435314.g.interfaces.chat || _0x435314.g.inTuning || !_0x5e0f72.api.isAuthed() || _0x435314.g.skyCamera || _0x435314.g.isUsingSystemAnim && !(0x0, _0x4e4105.isPlayerOnChair)(_0x34aeac) || _0x435314.g.currentInterface && 'testDrive' !== _0x435314.g.currentInterface || _0x5e0f72.api.ePress(_0x5eac6c.lastKeyPress) || (_0x5eac6c.lastKeyPress = _0x5e0f72.api.ePressUpdate(), _0x5eac6c.vehicle.setFixed(), _0x5eac6c.vehicle.setDeformationFixed());
        });
      },
      0x1341d: (_0x438451, _0x4fee23, _0x7b578d) => {
        'use strict';

        const a0_0x2087ed = {
          _0xd49a24: 0x1291,
          _0x43b607: 0x1820,
          _0x5e8f57: 0x16c5,
          _0x47b243: 0x535,
          _0x42b7e6: 0x17d8,
          _0x3245e0: 0x1f30,
          _0x39da5a: 0xc8b,
          _0x1e243a: 0x1a5,
          _0x19dc94: 0x9a4,
          _0x5576c1: 0x1f6c,
          _0x16234c: 0x2273,
          _0x1e5f67: 0x19e6
        },
              a0_0x4aa214 = {
          _0x4b9a48: 0x6ba,
          _0x7c8819: 0x16c5,
          _0x15565e: 0x17f
        },
              a0_0x2f4e2a = {
          _0x12b003: 0x2488,
          _0x2dd7e7: 0x4f7
        },
              a0_0x107ba3 = {
          _0x5dfec9: 0x971,
          _0x455357: 0x1dc8,
          _0xfb5c67: 0x1a3
        },
              a0_0x2846ea = {
          _0x44d216: 0x14d2,
          _0x5e2358: 0x1da5
        },
              a0_0x45e844 = {
          _0x209b6d: 0x14d2,
          _0x42b2a4: 0x133e
        },
              a0_0x3901f6 = {
          _0x4a0732: 0x2315,
          _0x1a0ecb: 0x971,
          _0x3f616f: 0x623,
          _0x2bd4b4: 0x1dc8,
          _0x505075: 0x2488,
          _0x4e603d: 0x17a2
        },
              a0_0x2e2b37 = {
          _0x1f15d8: 0x2315,
          _0x340ff2: 0x971,
          _0x440f4a: 0x1a3,
          _0x4dc541: 0x2184
        },
              a0_0x1f3846 = {
          _0x40725d: 0x2315,
          _0x3cfd8c: 0x535,
          _0x5778c4: 0x1dc8,
          _0xfbd99a: 0x2488,
          _0x576b45: 0x1a3,
          _0x433db2: 0x22f1
        },
              a0_0x322742 = {
          _0x56b774: 0x2488
        },
              a0_0x12a31d = {
          _0x21bb29: 0x1a3
        },
              a0_0x5a4fbf = {
          _0x1e2839: 0x14d2
        },
              a0_0x5b902c = {
          _0x18e076: 0x623,
          _0x10454d: 0x6da,
          _0x1961d1: 0x2488,
          _0x3c9095: 0x1a3,
          _0x50ec3a: 0x95e
        },
              a0_0x195347 = {
          _0x1219f3: 0x14d2,
          _0x27c70d: 0x1da5
        },
              a0_0x15ce6b = {
          _0x2d451d: 0x2315,
          _0x83e83e: 0x971,
          _0x357525: 0x535,
          _0x32d7fe: 0x623,
          _0x9893eb: 0x2488,
          _0x4a260e: 0xe38
        },
              a0_0x191edd = {
          _0x10e75e: 0x13dc,
          _0x24cce8: 0x1f30
        },
              a0_0x3b35b3 = {
          _0x121595: 0x22b2,
          _0x438b80: 0xc95,
          _0x27def5: 0xc74,
          _0x16eadf: 0xe6d,
          _0x498f25: 0x15d6
        },
              a0_0x3899b2 = {
          _0x3c9793: 0x1d2
        },
              a0_0x2bf34b = {
          _0x366531: 0x18a0,
          _0x3f97bd: 0xc74,
          _0x23d8e5: 0x535,
          _0x41ef5d: 0xf52,
          _0x480f8a: 0x1baa,
          _0x16a1b6: 0x14d2,
          _0x5d4bcd: 0x1da5,
          _0xdbf3f8: 0x18a0,
          _0x5a586b: 0x14d2,
          _0x3e03aa: 0x1da5,
          _0x270be4: 0x25d,
          _0x417bea: 0xc95,
          _0x5411c3: 0x1edc,
          _0x17927a: 0x4b9,
          _0xce8fb: 0x4b9,
          _0x1b3f21: 0x18a0,
          _0x21df4c: 0x1da5,
          _0x4f68f9: 0x1717,
          _0x2e38b8: 0xc74,
          _0x480321: 0x1da5,
          _0x3a68f0: 0xb0b,
          _0x17f46e: 0x1edc,
          _0x2350a2: 0x4b9,
          _0x2b6d8c: 0x133c,
          _0x374f54: 0x185e,
          _0x48874d: 0x2530,
          _0x47f3dd: 0x174d,
          _0x1a0fda: 0x535,
          _0x4e4f29: 0x421,
          _0xd188c2: 0x535,
          _0x1027e5: 0xfeb,
          _0x43360a: 0xc7b,
          _0x373bb1: 0x67e,
          _0x3fc759: 0x1010,
          _0x54c771: 0x535,
          _0x4be353: 0x2027,
          _0x36e6c7: 0x204d,
          _0x5ca96a: 0x421,
          _0x3359a3: 0x421,
          _0x5502fe: 0x40b,
          _0x20c494: 0x14d2,
          _0x2cc87e: 0xa07,
          _0x50c829: 0x13dc,
          _0xf43aed: 0x1f30
        },
              a0_0x3869cc = {
          _0x2f54d5: 0x535,
          _0x5a0b96: 0x253d,
          _0x1f18a5: 0xc95,
          _0x43ddc2: 0x535,
          _0x504365: 0x623,
          _0x3d72e: 0x15cf,
          _0x1d3466: 0x1baa,
          _0x51d8b9: 0x6e6,
          _0x533781: 0x4b9,
          _0x53106f: 0x4b9,
          _0x259151: 0x18a0,
          _0x102454: 0x4b9,
          _0xd24d4d: 0x3e4,
          _0x45077c: 0xffb,
          _0x2f85de: 0x3bb,
          _0x56aa91: 0x4b9,
          _0x142c35: 0xc74,
          _0x53b18c: 0x4b9,
          _0x452659: 0x2012,
          _0x2cffcc: 0xf86,
          _0x46ad58: 0x22b9,
          _0x406acf: 0x1edc,
          _0x28e6fc: 0x4b9,
          _0x1a12a3: 0xc95,
          _0xbf2eec: 0x535,
          _0x4bdd32: 0x6d7,
          _0x2d4453: 0xc8b,
          _0x19f8da: 0xffb,
          _0x33a2c2: 0x174d,
          _0x6b9094: 0x1010,
          _0xb7d5f2: 0x421,
          _0x3c632f: 0x535,
          _0x4adab5: 0xfeb,
          _0x574607: 0xc7b,
          _0x497bb8: 0x67e,
          _0xf956b7: 0x421,
          _0x505868: 0x1c3,
          _0x2c222e: 0x2027,
          _0x36d657: 0x421,
          _0x7f8fc7: 0x204d,
          _0x4df505: 0x4e4,
          _0x3303c0: 0x535,
          _0x40783f: 0xcc3
        };

        _0x7b578d.r(_0x4fee23);

        var _0x4739e1 = _0x7b578d(0x16a21),
            _0x572560 = _0x7b578d(0x35cd),
            _0x3735d4 = _0x7b578d(0x203b),
            _0x5da388 = _0x7b578d.n(_0x3735d4),
            _0x411a12 = _0x7b578d(0x14637),
            _0x46628c = _0x7b578d.n(_0x411a12),
            _0x4f68dc = _0x7b578d(0x4f9a),
            _0xa09f99 = _0x7b578d.n(_0x4f68dc),
            _0x1fa929 = _0x7b578d(0xb274),
            _0x34eba7 = _0x7b578d(0x3db3),
            _0xd8db0f = _0x7b578d(0x12a76),
            _0x87fc71 = _0x7b578d(0x161cd);

        let _0x8f8176,
            _0x36ca19 = [],
            _0x3e0001 = [],
            _0x1a97b5 = [],
            _0x27b48f = [],
            _0x28522f = null,
            _0x4d1497 = false,
            _0x641bd4 = null;

        const _0x4533cd = _0x87fc71.players.local;
        ['craftGos', 'craftCrime'].forEach(_0x86ba5b => {
          Object.keys(_0x46628c()[_0x86ba5b]).forEach(_0x4f4df8 => {
            const a0_0x20831d = {
              _0x449396: 0x13dc,
              _0x56f1cc: 0x145f,
              _0x1c9102: 0x1010,
              _0x290468: 0x1f30,
              _0x27df31: 0xf82,
              _0x1395ec: 0x1d55,
              _0x732833: 0x18a5,
              _0x20b384: 0xf82,
              _0x4a73f2: 0x3ef
            };

            _0x46628c()[_0x86ba5b][_0x4f4df8].forEach((_0x1fe916, _0x180f8f) => {
              const _0x516bd2 = _0x87fc71.colshapes.newSphere(_0x1fe916.x, _0x1fe916.y, _0x1fe916.z, 0x6, -0x1);

              _0x516bd2.pointType = _0x4f4df8, _0x516bd2.title = _0x1fe916.title, _0x516bd2.fractionType = _0x86ba5b, _0x516bd2.position = _0x180f8f, _0x1a97b5.push(_0x516bd2), _0x87fc71.markers.new(0x27, new _0x87fc71.Vector3(_0x1fe916.x, _0x1fe916.y, _0x1fe916.z), 0x1, {
                'color': [0xff, 0xff, 0xff, 0x64],
                'visible': true,
                'dimension': 0x0
              });

              const _0x305885 = _0x87fc71.labels.new('labels.craft', new _0x87fc71.Vector3(_0x1fe916.x, _0x1fe916.y, _0x1fe916.z + 0.5), {
                'color': [0xff, 0xff, 0xff, 0xc8],
                'los': true,
                'font': 0x0,
                'drawDistance': 0xa,
                'dimension': 0x0
              });

              (0x0, _0x1fa929.markAsTranslatedLabel)(_0x305885, 'labels.craft');
            });
          });
        }), _0x5da388().forEach((_0x4dfb55, _0x901507) => {
          const a0_0x3d860e = {
            _0x5a4918: 0x1aab,
            _0x34243e: 0x18a0,
            _0x512741: 0x1d2
          };

          if (_0x901507 > 0x0) {
            let _0x449731 = [];
            Array.isArray(_0x4dfb55.warehousePosition) ? _0x449731 = _0x4dfb55.warehousePosition : _0x449731.push(_0x4dfb55.warehousePosition), _0x449731.forEach(_0x6964a1 => {
              _0x87fc71.markers.new(0x1, new _0x87fc71.Vector3(_0x6964a1.x, _0x6964a1.y, _0x6964a1.z - 0x1), 0x1, {
                'color': [0x34, 0x98, 0xdb, 0xff],
                'dimension': -0x1
              });

              const _0x162216 = _0x87fc71.colshapes.newSphere(_0x6964a1.x, _0x6964a1.y, _0x6964a1.z, 0x1, -0x1);

              _0x162216.fractionId = _0x901507, _0x36ca19.push(_0x162216);
            });

            const _0x37358e = _0x87fc71.colshapes.newSphere(_0x4dfb55.garage.x, _0x4dfb55.garage.y, _0x4dfb55.garage.z, 0x4, -0x1);

            _0x37358e.fractionId = _0x901507, _0x87fc71.markers.new(0x27, new _0x87fc71.Vector3(_0x4dfb55.garage.x, _0x4dfb55.garage.y, _0x4dfb55.garage.z), 0x1, {
              'color': [0xff, 0xff, 0xff, 0x64],
              'visible': true,
              'dimension': 0x0
            });

            const _0x5d41ba = _0x87fc71.labels.new('labels.loadUnload', new _0x87fc71.Vector3(_0x4dfb55.garage.x, _0x4dfb55.garage.y, _0x4dfb55.garage.z + 0.5), {
              'color': [0xff, 0xff, 0xff, 0xc8],
              'los': true,
              'font': 0x0,
              'drawDistance': 0xa,
              'dimension': 0x0
            });

            (0x0, _0x1fa929.markAsTranslatedLabel)(_0x5d41ba, 'labels.loadUnload'), _0x3e0001.push(_0x37358e);
          }
        }), _0x87fc71.events.add('playerEnterColshape', _0x28f422 => {
          if (!_0x4739e1.api.isAuthed() || null != _0x4533cd.getVariable('playerInTrunk')) return;

          const _0x4777c1 = _0x4533cd.vehicle ? _0x4739e1.api.getEntitySync(_0x4533cd.vehicle, 'hackedSupplyTrunk', 'number') : null;

          _0x36ca19.includes(_0x28f422) ? _0x4533cd.getVariable('member') === _0x28f422.fractionId && (_0x28522f = _0x28f422, _0x4739e1.api.getLocalVariable('handItem') ? _0x4739e1.api.displayHelpStringTrans('displayHelpString.putBag', false, true, 0x1388) : _0x4739e1.api.displayHelpStringTrans('displayHelpString.openWarehouse', false, true, 0x1388)) : _0x3e0001.includes(_0x28f422) && _0x4533cd.vehicle && _0x4533cd.vehicle.getVariable('isCarriage') ? _0x4533cd.getVariable('member') === _0x28f422.fractionId && (_0x4739e1.api.vehicleAccess(_0x4533cd.vehicle) || _0x4739e1.api.isTrunkOpened(_0x4533cd.vehicle) && !_0x4739e1.api.getEntitySync(_0x4533cd.vehicle, 'locked', 'boolean') || _0x4777c1 && Date.now() < _0x4777c1) ? (_0x28522f = _0x28f422, _0x4739e1.api.displayHelpStringTrans('displayHelpString.loadUnload', false, true, 0x1388)) : 0x4 === _0x4533cd.getVariable('member') && _0x4533cd.vehicle && _0x4533cd.vehicle.getVariable('fraction') === _0x4533cd.getVariable('member') && _0x4533cd.vehicle.getVariable('isCarriage') && (_0x28522f = _0x28f422, _0x4739e1.api.displayHelpStringTrans('displayHelpString.deliverMaterials', false, true, 0x1388)) : _0x1a97b5.includes(_0x28f422) && _0x4533cd.vehicle && _0x4533cd.vehicle.getVariable('isCarriage') && (_0x4739e1.api.vehicleAccess(_0x4533cd.vehicle) || _0x4739e1.api.isTrunkOpened(_0x4533cd.vehicle) && !_0x4739e1.api.getEntitySync(_0x4533cd.vehicle, 'locked', 'boolean') || _0x4777c1 && Date.now() < _0x4777c1) && ('craftCrime' === _0x28f422.fractionType && (_0x4739e1.api.isGroupMemberOf(_0x4533cd, 'gang') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'biker') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'mafia')) || 'craftGos' === _0x28f422.fractionType && (_0x4739e1.api.isGroupMemberOf(_0x4533cd, 'police') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'ems') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'army') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'gov') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'news') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'fib'))) && (_0x28522f = _0x28f422, _0x4739e1.api.displayHelpStringTrans('displayHelpString.craftZone', false, true, 0x1388));
        }), _0x87fc71.events.add('playerExitColshape', _0x3004f8 => {
          (_0x36ca19.includes(_0x3004f8) || _0x3e0001.includes(_0x3004f8) || _0x1a97b5.includes(_0x3004f8)) && (_0x28522f = null, _0x4d1497 = false, _0x87fc71.game.ui.clearHelp(true), _0x87fc71.events.call('warehouse.close'));
        }), _0x87fc71.events.add('keys.e', () => {
          _0x4d1497 || _0x28522f && (_0x36ca19.includes(_0x28522f) && _0x28522f.fractionId === _0x4533cd.getVariable('member') ? (_0x4739e1.api.getLocalVariable('handItem') ? _0x87fc71.events.callRemote('2170954860', _0x28522f.fractionId) : _0x87fc71.events.callRemote('705533435', _0x4533cd.getVariable('member'), 'warehouse'), _0x28522f = false, _0x4d1497 = true) : _0x3e0001.includes(_0x28522f) && _0x4533cd.vehicle && _0x4533cd.vehicle.getVariable('isCarriage') && _0x4533cd.vehicle.getPedInSeat(_0x4739e1.api.getVehSeat(-0x1)) == _0x87fc71.players.local.handle ? _0x4533cd.getVariable('member') === _0x28522f.fractionId ? (_0x87fc71.events.callRemote('705533435', _0x28522f.fractionId, 'warehouse', _0x4533cd.getVariable('member')), _0x28522f = false, _0x4d1497 = true) : 0x4 === _0x4533cd.getVariable('member') && (_0x87fc71.events.callRemote('1072733690', _0x28522f.fractionId), _0x28522f = false, _0x4d1497 = true) : _0x1a97b5.includes(_0x28522f) && _0x4533cd.vehicle && _0x4533cd.vehicle.getVariable('isCarriage') && _0x4533cd.vehicle.getPedInSeat(_0x4739e1.api.getVehSeat(-0x1)) == _0x87fc71.players.local.handle && ('craftCrime' === _0x28522f.fractionType && (_0x4739e1.api.isGroupMemberOf(_0x4533cd, 'gang') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'biker') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'mafia')) || 'craftGos' === _0x28522f.fractionType && (_0x4739e1.api.isGroupMemberOf(_0x4533cd, 'police') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'ems') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'army') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'gov') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'news') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'fib'))) && (_0x87fc71.events.callRemote('3131343735', _0x28522f.fractionType, _0x28522f.pointType, _0x28522f.position), _0x28522f = false, _0x4d1497 = true));
        });
        let _0x1eb7ca = {};
        _0x87fc71.events.add('warehouse.initCraftResult', (_0x2abcee, _0x121c15, _0x25be81, _0x2a35f5, _0x14297f, _0x2aebc5) => {
          if (_0x4d1497 = false, _0x2abcee) {
            _0x1eb7ca = {
              'fractionType': _0x2abcee,
              'pointType': _0x121c15,
              'position': _0x25be81
            };

            const _0x1a41a8 = _0x46628c()[_0x2abcee][_0x121c15][_0x25be81],
                  _0x37ff6e = _0x1a41a8.craftItems.map(_0x42ce49 => ({ ..._0x572560.Z[_0x42ce49],
              'itemId': _0x42ce49
            }));

            'blue' === _0x121c15 && _0xa09f99()[_0x4533cd.getVariable('member')].forEach(_0xf5617d => {
              _0x37ff6e.push({ ..._0x572560.Z[_0xf5617d],
                'itemId': _0xf5617d
              });
            }), _0xd8db0f.globalBrowser.toggle('fractionCraft', {
              'value': true,
              'page': 'shop',
              'craftItems': _0x37ff6e,
              'title': _0x1a41a8.title,
              'materials': _0x2a35f5,
              'weight': _0x14297f,
              'capacity': _0x2aebc5
            });
          }
        }), _0x87fc71.events.add('warehouse.craft', (_0x836654, _0x495c01) => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('3175326937', _0x1eb7ca.fractionType, _0x1eb7ca.pointType, _0x1eb7ca.position, _0x836654, _0x495c01));
        }), _0x87fc71.events.add('warehouse.craftResult', (_0x586e31, _0x44bc03) => {
          _0x4d1497 = false, _0x586e31 && _0xd8db0f.globalBrowser.emit('fractionCraft_craftResult', {
            'materials': _0x586e31,
            'weight': _0x44bc03
          });
        }), _0x87fc71.events.add('warehouse.init', (_0x1531f5, _0x5aff0f, _0x215e86, _0x1b2d67, _0x41e1e7, _0x3bc576) => {
          _0x4d1497 = false, _0x641bd4 = {
            'type': _0x1531f5,
            'key': _0x5aff0f,
            'items': _0x215e86,
            'vehicleId': _0x1b2d67
          }, _0xd8db0f.globalBrowser.emit('chat_show', false), _0x215e86 = _0x215e86.map(_0x110743 => ({ ..._0x110743,
            'title': _0x572560.Z[_0x110743.itemId].title,
            'weight': _0x572560.Z[_0x110743.itemId].weight
          })), _0xd8db0f.globalBrowser.toggle('fractionCraft', {
            'value': true,
            'type': _0x1531f5,
            'items': _0x215e86,
            'key': _0x5aff0f,
            'vehicleId': _0x1b2d67,
            'fractionGarage': _0x41e1e7,
            'maxWeight': _0x3bc576,
            'page': 'warehouse'
          });
        }), _0x87fc71.events.add('warehouse.reset', () => {
          _0x4d1497 = false;
        }), _0x87fc71.events.add('warehouse.close', () => {
          _0x4d1497 = false, _0x641bd4 = null, 'fractionCraft' === _0x7b578d.g.currentInterface && (_0xd8db0f.globalBrowser.emit('chat_show', true), _0xd8db0f.globalBrowser.toggle('fractionCraft', {
            'value': false
          }), _0x87fc71.events.callRemote('776040905'));
        }), _0x87fc71.events.add('warehouse.getItemsByItemId', (_0x330ac1, _0x4b91a7, _0x34db9d, _0x2ca2da) => {
          _0x4d1497 || (_0x4d1497 = true, -0x1 !== _0x2ca2da ? _0x87fc71.events.callRemote('1093897439', _0x330ac1, _0x4b91a7, _0x34db9d, _0x2ca2da) : _0x87fc71.events.callRemote('4048449087', _0x330ac1, _0x4b91a7, _0x34db9d));
        }), _0x87fc71.events.add('warehouse.getItemsByItemIdResult', _0x172f40 => {
          _0x4d1497 = false, _0x172f40 && (_0x172f40 = _0x87fc71.inventory.getInventoryItems(_0x4739e1.api.getEntitySync(_0x4533cd, 'gender', 'number'), _0x172f40), _0xd8db0f.globalBrowser.emit('fractionCraft_getItemsByItemIdResult', {
            'items': _0x172f40
          }));
        }), _0x87fc71.events.add('warehouse.getPlayerItems', () => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('589512178'));
        }), _0x87fc71.events.add('warehouse.getPlayerItemsResult', _0xe88871 => {
          _0x4d1497 = false, _0xe88871 && (_0xe88871 = _0x87fc71.inventory.getInventoryItems(_0x4739e1.api.getEntitySync(_0x4533cd, 'gender', 'number'), _0xe88871), _0xd8db0f.globalBrowser.emit('fractionCraft_getPlayerItemsResult', {
            'items': _0xe88871
          }));
        }), _0x87fc71.events.add('warehouse.getTrunkItems', () => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('4052711216'));
        }), _0x87fc71.events.add('warehouse.getTrunkItemsResult', _0x58e6ab => {
          _0x4d1497 = false, _0x58e6ab && (_0x58e6ab = _0x87fc71.inventory.getInventoryItems(_0x4739e1.api.getEntitySync(_0x4533cd, 'gender', 'number'), _0x58e6ab), _0xd8db0f.globalBrowser.emit('fractionCraft_getTrunkItemsResult', {
            'items': _0x58e6ab
          }));
        }), _0x87fc71.events.add('warehouse.takeItem', (_0x5e0de4, _0x471212, _0x22ce61, _0x452256, _0x47dac0, _0x3737a0) => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('452129396', _0x5e0de4, _0x471212, _0x47dac0, _0x22ce61, _0x452256, _0x3737a0));
        }), _0x87fc71.events.add('warehouse.takeItemResult', (_0x12605c, _0x8c0a4b, _0xb3046d, _0x4c3868) => {
          _0x4d1497 = false, _0x8c0a4b && _0xd8db0f.globalBrowser.emit('fractionCraft_takeItemResult', {
            'id': _0x12605c,
            'itemId': _0x8c0a4b,
            'addingCount': _0xb3046d,
            'amount': _0x4c3868
          });
        }), _0x87fc71.events.add('warehouse.takeItemFromBox', (_0x1a0387, _0x2ea9c9, _0x65eb19, _0x4ecc5a) => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('2893719485', _0x1a0387, _0x2ea9c9, _0x65eb19, _0x4ecc5a));
        }), _0x87fc71.events.add('warehouse.takeItemFromBoxResult', (_0x511a64, _0x32dacd, _0x1f2de9, _0x39ec60) => {
          _0x4d1497 = false, _0x32dacd && _0xd8db0f.globalBrowser.emit('fractionCraft_takeItemResult', {
            'id': _0x511a64,
            'itemId': _0x32dacd,
            'addingCount': _0x1f2de9,
            'amount': _0x39ec60
          });
        }), _0x87fc71.events.add('warehouse.takeItemPartResult', (_0x46b06b, _0x3e88cd, _0x168b1a, _0x9b1c6, _0x580394, _0x492244, _0x24574a) => {
          _0x4d1497 = false, _0x3e88cd && _0xd8db0f.globalBrowser.emit('fractionCraft_takeItemPartResult', {
            'id': _0x46b06b,
            'itemId': _0x3e88cd,
            'slot': _0x168b1a,
            'owner': _0x9b1c6,
            'newId': _0x580394,
            'amount': _0x492244,
            'my': _0x24574a
          });
        }), _0x87fc71.events.add('warehouse.putItem', (_0x2476d3, _0x1fc1f1, _0xa80ed1, _0x55a0d3, _0x38dba3, _0x241c76) => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('2364995539', _0x2476d3, _0x1fc1f1, _0x38dba3, _0xa80ed1, _0x55a0d3, _0x241c76));
        }), _0x87fc71.events.add('warehouse.removeFromTrunkItemsResult', (_0x578b7b, _0x2a3939, _0x422fb6, _0x15bd85) => {
          _0x4d1497 = false, _0x578b7b && _0xd8db0f.globalBrowser.emit('fractionCraft_removeFromTrunkItemsResult', {
            'itemId': _0x578b7b,
            'id': _0x2a3939,
            'amount': _0x422fb6,
            'addingCount': _0x15bd85
          });
        }), _0x87fc71.events.add('warehouse.putTrunkItemResult', _0x50e9ab => {
          _0x4d1497 = false, _0x50e9ab && (_0x50e9ab = _0x87fc71.inventory.getInventoryItems(_0x4739e1.api.getEntitySync(_0x4533cd, 'gender', 'number'), [_0x50e9ab])[0x0], _0xd8db0f.globalBrowser.emit('fractionCraft_putTrunkItemResult', {
            'item': _0x50e9ab
          }));
        }), _0x87fc71.events.add('warehouse.putPlayerItemResult', _0x186096 => {
          _0x4d1497 = false, _0x186096 && (_0x186096 = _0x87fc71.inventory.getInventoryItems(_0x4739e1.api.getEntitySync(_0x4533cd, 'gender', 'number'), [_0x186096])[0x0], _0xd8db0f.globalBrowser.emit('fractionCraft_putPlayerItemResult', {
            'item': _0x186096
          }));
        }), _0x87fc71.events.add('warehouse.removeFromPlayerItemsResult', (_0x36be35, _0x9e4277) => {
          _0x4d1497 = false, _0x36be35 && _0xd8db0f.globalBrowser.emit('fractionCraft_removeFromPlayerItemsResult', {
            'id': _0x36be35,
            'amount': _0x9e4277
          });
        }), _0x87fc71.events.add('warehouse.putItemResult', (_0x5e9b6d, _0x2e7d28, _0x7d0c37, _0x4a964e) => {
          _0x4d1497 = false, _0x5e9b6d && (_0x2e7d28 = _0x87fc71.inventory.getInventoryItems(_0x4739e1.api.getEntitySync(_0x4533cd, 'gender', 'number'), [_0x2e7d28])[0x0], _0xd8db0f.globalBrowser.emit('fractionCraft_putItemResult', {
            'id': _0x5e9b6d,
            'item': _0x2e7d28,
            'amount': _0x7d0c37,
            'tag': _0x4a964e
          }));
        }), _0x87fc71.events.add('warehouse.putFromVehicleToGarage', (_0x328db7, _0xb5d9c2, _0x3b2c21, _0x312103) => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('2587467494', _0x328db7, _0xb5d9c2, _0x3b2c21, _0x312103));
        }), _0x87fc71.events.add('warehouse.putFromFractionToVehicle', (_0xbe466, _0x199d10, _0x5cd5ae, _0x10168e) => {
          _0x4d1497 || (_0x4d1497 = true, _0x87fc71.events.callRemote('1664274098', _0xbe466, _0x199d10, _0x5cd5ae, _0x10168e));
        }), _0x87fc71.events.add('warehouse.client.putItemResult', (_0x552f4b, _0x4f5b35) => {
          _0x552f4b = _0x87fc71.inventory.getInventoryItems(_0x4739e1.api.getEntitySync(_0x4533cd, 'gender', 'number'), [_0x552f4b])[0x0], _0xd8db0f.globalBrowser.emit('fractionCraft_putItemResultClient', {
            'item': _0x552f4b,
            'my': _0x4f5b35
          });
        }), _0x87fc71.events.add('warehouse.client.takeItemResult', _0x330542 => {
          _0xd8db0f.globalBrowser.emit('fractionCraft_takeItemResultClient', {
            'itemId': _0x330542
          });
        }), _0x87fc71.events.add('warehouse.client.takeFromWarehouseResult', (_0xe2f19, _0x3a20c9, _0x43e792, _0x6361ed, _0x82502) => {
          _0xd8db0f.globalBrowser.emit('fractionCraft_takeFromWarehouseResult', {
            'id': _0xe2f19,
            'itemId': _0x3a20c9,
            'amount': _0x43e792,
            'my': _0x6361ed,
            'addingCount': _0x82502
          });
        }), _0x87fc71.events.add('playerDeath2', _0x4d319e => {
          if (_0x4d319e === _0x4533cd) {
            if (_0x4d1497 = false, _0x27b48f.length) {
              for (const _0x1f3975 of _0x27b48f) _0x87fc71.blips.exists(_0x1f3975) && _0x1f3975.destroy();

              _0x27b48f = [];
            }

            _0x8f8176 && _0x87fc71.blips.exists(_0x8f8176) && (_0x8f8176.destroy(), _0x8f8176 = null);
          }
        }), _0x87fc71.events.add('onPlayerEnterVehicle', (_0xf20ef8, _0x179fcb) => {
          const a0_0x34a2dc = {
            _0x1c5c85: 0xe6d
          },
                a0_0x3d1963 = {
            _0x495e15: 0x10fe,
            _0x5eaa39: 0x6ba,
            _0x1a012c: 0xf82
          };
          if (!_0x4533cd.vehicle || !_0x4533cd.vehicle.getVariable('isCarriage') || _0x4533cd.vehicle.getVariable('isCrime')) return;

          let _0x4e08eb;

          _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'gang') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'biker') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'mafia') ? _0x4e08eb = 'craftCrime' : (_0x4739e1.api.isGroupMemberOf(_0x4533cd, 'police') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'ems') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'army') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'gov') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'news') || _0x4739e1.api.isGroupMemberOf(_0x4533cd, 'fib')) && (_0x4e08eb = 'craftGos'), _0x4e08eb && Object.keys(_0x46628c()[_0x4e08eb]).forEach(_0x4335e2 => {
            _0x46628c()[_0x4e08eb][_0x4335e2].forEach((_0x22e840, _0x5c3841) => {
              let _0x1f4db9 = 0x4;

              switch (_0x4335e2) {
                case 'red':
                  _0x1f4db9 = 0x1;
                  break;

                case 'green':
                  _0x1f4db9 = 0x2;
                  break;

                case 'blue':
                  _0x1f4db9 = 0x3;
              }

              const _0x1e90d6 = _0x87fc71.blips.new(0x28c, new _0x87fc71.Vector3(_0x22e840.x, _0x22e840.y, _0x22e840.z), {
                'color': _0x1f4db9,
                'shortRange': false,
                'dimension': 0x0,
                'name': 'blips.craft'
              });

              (0x0, _0x34eba7.markAsTranslatedBlip)(_0x1e90d6, 'blips.craft'), _0x27b48f.push(_0x1e90d6);
            });
          });

          const _0x27aa6b = _0x4533cd.getVariable('member');

          if (_0x27aa6b) {
            const _0x43b478 = _0x5da388().find(_0x55e035 => _0x55e035.id === _0x27aa6b);

            _0x43b478 && (_0x8f8176 = _0x87fc71.blips.new(0x1d9, new _0x87fc71.Vector3(_0x43b478.garage.x, _0x43b478.garage.y, _0x43b478.garage.z), {
              'color': 0x3,
              'shortRange': false,
              'dimension': 0x0,
              'name': 'blips.garage'
            }), (0x0, _0x34eba7.markAsTranslatedBlip)(_0x8f8176, 'blips.garage'));
          }
        }), _0x87fc71.events.add('playerLeaveVehicle', _0x2fbf1b => {
          if (_0x27b48f.length) {
            for (const _0x348db7 of _0x27b48f) _0x87fc71.blips.exists(_0x348db7) && _0x348db7.destroy();

            _0x27b48f = [];
          }

          _0x8f8176 && _0x87fc71.blips.exists(_0x8f8176) && (_0x8f8176.destroy(), _0x8f8176 = null);
        }), _0x87fc71.events.add('time.everySec', () => {
          if (_0x641bd4) {
            if (_0x641bd4.vehicleId) {
              const _0x256c29 = _0x87fc71.vehicles.atRemoteId(_0x641bd4.vehicleId);

              if (_0x87fc71.vehicles.exists(_0x256c29)) {
                const _0x59ce4f = _0x4739e1.api.vehicleAccess(_0x256c29),
                      _0x45071d = _0x256c29.position,
                      _0x2ccb2a = _0x4533cd.position;

                (_0x4739e1.api.vdist(_0x45071d.x, _0x45071d.y, _0x45071d.z, _0x2ccb2a.x, _0x2ccb2a.y, _0x2ccb2a.z) > 0x5 || _0x4739e1.api.getEntitySync(_0x256c29, 'locked', 'boolean') && !_0x59ce4f) && _0x87fc71.events.call('warehouse.close');
              }
            } else ['house', 'apartment'].includes(_0x641bd4.type);
          }
        });
      },
      0x8c9: (_0x39af7b, _0x362b5e, _0x5733aa) => {
        'use strict';

        const a0_0x37ea1a = {
          _0x14478f: 0x2488
        },
              a0_0x3067be = {
          _0x6d4257: 0x1bb8,
          _0x588a48: 0x1f08,
          _0x1b8c91: 0x14d2,
          _0x5fd493: 0x1874
        },
              a0_0x8b57f7 = {
          _0x47c02b: 0x2488,
          _0x25d6d6: 0x2268,
          _0x22aea5: 0x1823,
          _0x5af29c: 0x535,
          _0x4e29f9: 0xbc2,
          _0x45f6a8: 0x16b3,
          _0x3e8df1: 0x535,
          _0x1fee54: 0x16fd
        },
              a0_0x3c1de0 = {
          _0xd07eda: 0x1aab,
          _0x14416f: 0x11d9,
          _0x476c48: 0x4a3,
          _0x1986cb: 0x1bb8,
          _0x2ace7d: 0x59d
        },
              a0_0xecb973 = {
          _0xb96d8f: 0x18c1,
          _0x5424d5: 0x250e
        },
              a0_0x5c67db = {
          _0x31f0ad: 0x2405,
          _0x263883: 0x1d2
        };

        _0x5733aa.r(_0x362b5e);

        var _0x17af66 = _0x5733aa(0x16a21),
            _0x231934 = _0x5733aa(0x12a76),
            _0x1c0510 = _0x5733aa(0x161cd);

        const _0x5026a1 = [{
          'position': new _0x1c0510.Vector3(-1692.85, -271.86, 52.29)
        }, {
          'position': new _0x1c0510.Vector3(-330.38, 6166.77, 32.71)
        }, {
          'position': new _0x1c0510.Vector3(-308.07, 2822.55, 59.85)
        }];

        let _0x2c0fa5,
            _0x20c995 = [],
            _0x437cfd = 0x0;

        _0x5026a1.forEach((_0x468484, _0x29c1ff) => {
          const _0x473552 = _0x468484.position,
                _0x57f345 = _0x1c0510.colshapes.newSphere(_0x473552.x, _0x473552.y, _0x473552.z, 0x3, 0x0);

          _0x57f345.weddingIndex = _0x29c1ff, _0x20c995.push(_0x57f345);
        }), _0x1c0510.events.add('playerEnterColshape', _0x392085 => {
          if (_0x17af66.api.isAuthed() && null != _0x392085.weddingIndex && 0x1 == _0x1c0510.world.data.churchInterior[_0x392085.weddingIndex]) return _0x392085 && _0x20c995.includes(_0x392085) ? (_0x2c0fa5 = _0x392085, _0x17af66.api.displayHelpStringTrans('displayHelpString.weddingMenu', false, true, 0x1388)) : undefined;
        }), _0x1c0510.events.add('playerExitColshape', _0x95b305 => {
          _0x17af66.api.isAuthed() && _0x2c0fa5 && _0x20c995.includes(_0x95b305) && (_0x2c0fa5 = null, _0x1c0510.game.ui.clearHelp(true), _0x5733aa.g.interfaces.wedding && _0x231934.globalBrowser.toggle('wedding', {
            'value': false
          }));
        }), _0x1c0510.events.add('keys.e', () => {
          if (_0x2c0fa5 && _0x1c0510.colshapes.exists(_0x2c0fa5) && !_0x5733aa.g.currentInterface) return _0x231934.globalBrowser.toggle('wedding', {
            'value': true,
            'type': 'menu'
          }), void _0x1c0510.game.ui.clearHelp(true);
        });
        let _0x354189 = {
          'newSurname': undefined,
          'staticId': undefined
        };
        _0x1c0510.events.add('wedding.sendRequest', (_0x5085c4, _0x82e2c9, _0x134de2) => {
          _0x17af66.api.ePress(_0x437cfd) || (_0x437cfd = _0x17af66.api.ePressUpdate(), _0x1c0510.events.callRemote('2926139092', _0x5085c4, _0x82e2c9, _0x134de2), _0x231934.globalBrowser.toggle('wedding', {
            'value': false
          }));
        }), _0x1c0510.events.add('wedding.showRequest', (_0x57d4da, _0x2f2749, _0x426561, _0x57c0ce) => {
          switch (_0x354189 = {
            'category': _0x57d4da,
            'newSurname': _0x426561,
            'staticId': _0x57c0ce
          }, _0x231934.globalBrowser.toggle('wedding', {
            'value': true,
            'type': _0x57d4da,
            'fromName': _0x2f2749,
            'newSurname': _0x426561.newSurname
          }), _0x57d4da) {
            case 'marriage':
              _0x17af66.api.playSound('wedding/proposal', {
                'volume': 0x32
              });

              break;

            case 'divorce':
              _0x17af66.api.playSound('wedding/divorce', {
                'volume': 0x32
              });

          }
        }), _0x1c0510.events.add('wedding.resultProposal', _0x4bfbd9 => {
          _0x231934.globalBrowser.toggle('wedding', {
            'value': false
          }), _0x354189.staticId && (_0x1c0510.events.callRemote('4219060100', _0x4bfbd9, _0x354189.staticId, _0x354189.category, _0x354189.newSurname.type), _0x354189 = {});
        }), _0x1c0510.events.add('wedding.close', () => {
          _0x231934.globalBrowser.toggle('wedding', {
            'value': false
          }), _0x354189 = {};
        });
      },
      0x13a70: (_0x202e3c, _0x2ed2db, _0x1be00b) => {
        'use strict';

        var _0x38ad85 = _0x1be00b(0x161cd),
            _0xc37df8 = _0x1be00b.n(_0x38ad85);

        const _0x59dba2 = () => {
          const _0x1502ba = { ..._0xc37df8()
          };
          _0x1502ba.events = { ..._0xc37df8().events
          }, _0x1502ba._events = { ..._0xc37df8()._events
          }, _0x1502ba.events.call = undefined, _0x1502ba.events.callRemote = undefined, _0x1502ba.events.callRemoteUnreliable = undefined, _0x1502ba.events.callRemoteProc = undefined, _0x1502ba._events.call = undefined, _0x1502ba._events.callRemote = undefined, _0x1502ba._events.callRemoteUnreliable = undefined, _0x1502ba._events.callRemoteProc = undefined, _0x1502ba.game = undefined, _0x1502ba.game1 = undefined, _0x1502ba.game2 = undefined, _0x1502ba._game = undefined, _0x1502ba._game1 = undefined, _0x1502ba._game2 = undefined, Object.defineProperty(_0x1be00b.g, 'mp', {
            'enumerable': false,
            'configurable': false,
            'writable': false,
            'value': _0x1502ba
          });
        };

        var _0x423390 = _0x1be00b(0x7df9),
            _0x355f2e = _0x1be00b(0xbefb),
            _0x3d7267 = _0x1be00b(0xbe5b),
            _0x26d7f4 = (_0x1be00b(0xa77b), _0x1be00b(0x161cd));

        _0x1be00b.g.TextDecoder = _0x3d7267.TextDecoder, _0x26d7f4.game.cam.doScreenFadeOut(0x0), _0x1be00b.g.localVariables = {}, _0x26d7f4.game.sleep = _0xc1c0d7 => new _0x355f2e.OR(_0x37fd52 => (0x0, _0x423390.createTimeout)(_0x37fd52, 0x0 | _0xc1c0d7)), _0x26d7f4.game.ui.displayRadar(false), _0x26d7f4.game.ui.clearHelp(true), _0x26d7f4.game.graphics.transitionFromBlurred(0x1f4), _0x26d7f4.game.graphics.setNightvision(false), _0x26d7f4.game.graphics.setSeethrough(false), _0x1be00b(0xd194), _0x1be00b(0x13bd2), _0x1be00b(0x16a21), _0x1be00b(0x1032), _0x1be00b(0x106d5), _0x59dba2();
      },
      0x497e: (_0x4631fc, _0x32f831, _0x52a612) => {
        'use strict';

        _0x52a612.r(_0x32f831);

        var _0x5b6458 = _0x52a612(0x16a21),
            _0x5271 = _0x52a612(0x161cd);

        const _0x3199f4 = _0x5271.players.local;
        let _0x8d2548 = false;

        _0x5271.events.add('toggleESP', _0x425dbd => {
          _0x5b6458.api.getAdmin(_0x3199f4) < 0x1 || (_0x8d2548 = !!_0x425dbd);
        });

        let _0x274389 = false;
        _0x5271.events.add('toggleESP2', _0x579729 => {
          _0x5b6458.api.getAdmin(_0x3199f4) < 0x1 || (_0x274389 = !!_0x579729);
        }), _0x5271.events.add('render', () => {
          const a0_0x146ded = {
            _0x15ad64: 0x235b,
            _0x40ab65: 0x1d66,
            _0x5c300f: 0x1e35,
            _0x55f560: 0x1b3c,
            _0x1c5b0c: 0x535,
            _0x1a3454: 0x342,
            _0x2ce623: 0x1e35,
            _0x1e7cad: 0x178c
          },
                a0_0x318738 = {
            _0x79129e: 0x1915,
            _0xa1965c: 0x1e35,
            _0x11add9: 0x1412,
            _0x260a6c: 0x1d66,
            _0x1cbe36: 0xad6,
            _0x124ce8: 0x342,
            _0x549791: 0x1b2f,
            _0x1a6bb3: 0x22e,
            _0x3ac1d1: 0x2001,
            _0x54cd81: 0x1b9d,
            _0xc1e1c6: 0x24ee
          },
                a0_0x22f7d6 = {
            _0x2885c3: 0x2530,
            _0x10c55a: 0x235b,
            _0x56e9ef: 0x185e,
            _0xe07903: 0xc95,
            _0x3e293f: 0x535,
            _0x5e5d0f: 0x235b,
            _0x5b4817: 0x1f30,
            _0x42156f: 0x1d66,
            _0x27c09f: 0x15b2,
            _0x19c287: 0x1e35,
            _0x41df7e: 0x1412,
            _0x37bc46: 0x1d66,
            _0x17c28c: 0x1e35,
            _0x4ae1ff: 0x535,
            _0x2977c2: 0x623,
            _0x1d5337: 0xf27,
            _0x2902c6: 0x1d51,
            _0x47012b: 0x1e35,
            _0x398607: 0x1969,
            _0x4b4a59: 0x23e1,
            _0x278df3: 0x1c47,
            _0x3df980: 0x178c,
            _0x5ae269: 0xadc,
            _0x2c6d24: 0x24ee,
            _0x689d9b: 0x1b9d,
            _0x4273e4: 0x24ee,
            _0x422d8d: 0xc74,
            _0x219ad9: 0x1106,
            _0x4065fe: 0xb70,
            _0xea5602: 0x20e,
            _0x5cad73: 0x24ba
          };
          _0x8d2548 ? (_0x5271.players.forEachInStreamRange(_0xcd35d => {
            if (0x0 !== _0xcd35d.handle && _0xcd35d !== _0x5271.players.local) {
              if (_0xcd35d.getVariable('hideesp') && _0x5b6458.api.getAdmin(_0x5271.players.local) < 0x9) return;

              const _0xb1310c = _0xcd35d.position,
                    {
                max: _0x53184b,
                min: _0x1e0ba6
              } = _0x5271.game.gameplay.getModelDimensions(_0xcd35d.model),
                    _0x1fc721 = _0x5271.game.graphics.world3dToScreen2d(_0xb1310c.x + _0x53184b.x, _0xb1310c.y, _0xb1310c.z + _0x53184b.z),
                    _0x549642 = _0x5271.game.graphics.world3dToScreen2d(_0xb1310c.x + _0x1e0ba6.x, _0xb1310c.y, _0xb1310c.z + _0x1e0ba6.z);

              if (!_0x1fc721 || !_0x549642) return;
              let _0x487181 = [0xff, 0xff, 0xff, 0xc8];
              _0x5b6458.api.getAdmin(_0xcd35d) ? _0x487181 = [0xe7, 0xb4, 0x3c, 0xc8] : _0x5b6458.api.getEntitySync(_0xcd35d, 'media') ? _0x487181 = [0xe7, 0x4c, 0x3c, 0xc8] : _0xcd35d.getVariable('leader') && (_0x487181 = [0x27, 0xae, 0x60, 0xc8]), _0x5271.game.graphics.drawText('#' + _0xcd35d.getVariable('id') + ', ID: ' + _0xcd35d.remoteId + ' - ' + _0x5b6458.api.getName(_0xcd35d) + ', HP: ' + _0xcd35d.getHealth() + '/100, SPED: ' + (_0xcd35d.vehicle ? (3.6 * _0xcd35d.vehicle.getSpeed()).toFixed(0x0) : (3.6 * _0xcd35d.getSpeed()).toFixed(0x0)) + 'KM/H, FRAC: ' + _0xcd35d.getVariable('member') + ', FAM: ' + _0xcd35d.getVariable('family') + ', VOICE: ' + (_0xcd35d.isVoiceSpeaking ? '~g~TRUE' : '~w~FALSE') + '~w~', [_0xb1310c.x, _0xb1310c.y, _0xb1310c.z], {
                'scale': [0.35, 0.35],
                'outline': true,
                'color': _0x487181,
                'centre': false,
                'font': 0x4
              });
            }
          }), _0x5271.peds.forEachInStreamRange(_0x17152a => {
            if (_0x17152a.isDynamic) {
              const _0x1208dc = _0x17152a.getCoords(true),
                    _0x1c5e8d = _0x17152a.getModel(),
                    {
                max: _0x1f4dfe,
                min: _0x5bb13e
              } = _0x5271.game.gameplay.getModelDimensions(_0x1c5e8d),
                    _0x31737d = _0x5271.game.graphics.world3dToScreen2d(_0x1208dc.x + _0x1f4dfe.x, _0x1208dc.y, _0x1208dc.z + _0x1f4dfe.z),
                    _0x50a225 = _0x5271.game.graphics.world3dToScreen2d(_0x1208dc.x + _0x5bb13e.x, _0x1208dc.y, _0x1208dc.z + _0x5bb13e.z);

              if (!_0x31737d || !_0x50a225) return;
              let _0xcdfd60 = [0xff, 0xff, 0xff, 0xc8];

              _0x5271.game.graphics.drawText('~y~PED~w~ - ID: ' + _0x17152a.remoteId + ' - MDL: ' + _0x1c5e8d + ', HP: ' + _0x17152a.getHealth() + '/100, CN: ' + (_0x17152a.controller ? _0x17152a.controller.remoteId : 'F') + ', SPED: ' + (_0x17152a.vehicle ? (3.6 * _0x17152a.vehicle.getSpeed()).toFixed(0x0) : (3.6 * _0x17152a.getSpeed()).toFixed(0x0)) + 'KM/H~w~', [_0x1208dc.x, _0x1208dc.y, _0x1208dc.z], {
                'scale': [0.35, 0.35],
                'outline': true,
                'color': _0xcdfd60,
                'centre': false,
                'font': 0x4
              });
            }
          })) : _0x274389 && _0x5271.players.forEachInStreamRange(_0x272847 => {
            if (0x0 !== _0x272847.handle && _0x272847 !== _0x5271.players.local && !_0x5b6458.api.getAdmin(_0x272847)) {
              const _0x5e7b80 = _0x5271.game.graphics.getScreenActiveResolution(0x0, 0x0),
                    _0x5056c6 = 0x1 / _0x5e7b80.x,
                    _0x31c792 = 0x1 / _0x5e7b80.y,
                    _0x43f410 = 0x2,
                    _0x3f71e8 = 0x50,
                    _0x1144c6 = 0x6,
                    _0x378af9 = _0x5056c6 * _0x3f71e8,
                    _0xc3e7b0 = _0x31c792 * _0x1144c6,
                    _0x1ff8cd = _0x5056c6 * (_0x3f71e8 - _0x43f410),
                    _0x50fc23 = _0x31c792 * (_0x1144c6 - _0x43f410),
                    _0x26756a = [0xff, 0xff, 0xff],
                    _0x3069e6 = [0x3d, 0x3d, 0x3d],
                    _0x3b21e5 = _0x272847.position;

              _0x5271.game.graphics.setDrawOrigin(_0x3b21e5.x, _0x3b21e5.y, _0x3b21e5.z + 0x1, 0x0);

              let _0x158993 = _0x5b6458.api.clamp(_0x272847.getHealth(), 0x0, 0x64);

              _0x158993 = _0x158993 <= 0x64 ? _0x158993 / 0x64 : (_0x158993 - 0x64) / 0x64, _0x5271.game.graphics.drawRect(0x0, 0x0, _0x378af9, _0xc3e7b0, _0x3069e6[0x0], _0x3069e6[0x1], _0x3069e6[0x2], 0xc8), _0x5271.game.graphics.drawRect(0x0 - _0x1ff8cd / 0x2 * (0x1 - _0x158993), 0x0, _0x1ff8cd * _0x158993, _0x50fc23, _0x26756a[0x0], _0x26756a[0x1], _0x26756a[0x2], 0xc8);

              const _0x260ce7 = _0x5b6458.api.hexToRGB(_0x272847.getVariable('coloresp2'));

              _0x5b6458.api.drawText(_0x5b6458.api.getName(_0x272847), [0x0, -0.025], {
                'color': [..._0x260ce7, 0xc8],
                'scale': 0.3,
                'align': 0x1
              }), _0x5271.game.graphics.clearDrawOrigin();
            }
          });
        });
      },
      0x4177: (_0x4d0585, _0x82e74a, _0xb356b) => {
        'use strict';

        const a0_0x1bd5f8 = {
          _0xea16e8: 0x1e0b,
          _0x31d767: 0x112d,
          _0xb17283: 0x3d9,
          _0x2485e2: 0x502
        },
              a0_0x5283dc = {
          _0x30262b: 0x3d9,
          _0x1191c4: 0x1112,
          _0x1b8d65: 0x3d9,
          _0xd8850b: 0x1d55,
          _0x35bafa: 0x535
        },
              a0_0x22016a = {
          _0x4a96f6: 0x1d66,
          _0x43481d: 0x1992
        },
              a0_0x57b545 = {
          _0x4555cd: 0x2315,
          _0x1e069a: 0x14ce,
          _0xdcd73e: 0x535
        },
              a0_0x571d6d = {
          _0x92ff8d: 0x2315,
          _0x279b59: 0x14ce
        },
              a0_0x7d7e79 = {
          _0x5acbfa: 0x156e,
          _0x2a347a: 0x1fc7,
          _0x3a5066: 0x1cc
        },
              a0_0x61d8da = {
          _0x3b6e18: 0x3d9,
          _0xc245e7: 0x3d9,
          _0x3cc15d: 0x502,
          _0x37ecf9: 0x3d9,
          _0x183f51: 0x1d52,
          _0x2773e9: 0x3d9,
          _0x5b4422: 0x17f,
          _0x4ac0c7: 0xd79,
          _0x68e6ce: 0x220f,
          _0x4ca2f7: 0x535,
          _0x217493: 0x3e9
        };

        _0xb356b.r(_0x82e74a);

        var _0x57e4ce = _0xb356b(0x16a21),
            _0xff0939 = _0xb356b(0x14b31),
            _0x5da554 = _0xb356b(0x161cd);

        _0xb356b.g.spectatorState = false;
        let _0x5611b1 = 0x0;
        _0xb356b.g.freeCamera = null;
        let _0x12170e = false,
            _0x591a4e = false,
            _0x3a2caf = 0x1;
        const _0x14ff35 = _0x5da554.players.local;

        function _0x1942f1() {
          _0xb356b.g.freeCamera = _0x5da554.cameras.new('default', new _0x5da554.Vector3(_0x14ff35.position.x, _0x14ff35.position.y, _0x14ff35.position.z), _0x5da554.game.cam.getGameplayCamRot(0x2), 0x2d), _0xb356b.g.freeCamera.setActive(true), _0x5da554.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x14ff35.freezePosition(true), _0x14ff35.setInvincible(true), _0x14ff35.setVisible(false, false), _0x14ff35.setCollision(false, false), _0x5611b1 = 0x0, _0x3a2caf = 0x1, _0x57e4ce.api.setDiscordStatus('cheating');
        }

        function _0x5ee817() {
          null != _0xb356b.g.freeCamera && (_0x57e4ce.api.setPlayerPos(_0x14ff35, _0xb356b.g.freeCamera.getCoord()), _0x14ff35.setHeading(_0xb356b.g.freeCamera.getRot(0x2).z), _0xb356b.g.freeCamera.destroy(true), _0xb356b.g.freeCamera = null), _0x5da554.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x14ff35.freezePosition(false), _0x14ff35.setInvincible(false), _0x14ff35.setVisible(true, false), _0x14ff35.setCollision(true, false), _0x57e4ce.api.setDiscordStatus();
        }

        _0x5da554.keys.bind(0x74, false, function () {
          (_0x57e4ce.api.isAdmin() && _0x57e4ce.api.isAuthed() && !_0x14ff35.getVariable('isSpectating') || _0x14ff35.specials.f5) && _0x5da554.events.call('freecam.toggle', !_0xb356b.g.spectatorState);
        }), _0x5da554.events.add('freecam.toggle', _0x49a733 => {
          _0xb356b.g.spectatorState = _0x49a733, _0xb356b.g.spectatorState ? (_0x5da554.inventory.pocketItem(), _0x57e4ce.api.removeAllWeapons(), _0x1942f1(), _0x5da554.events.callRemote('2843246774', true), _0x5da554.events.callRemote('174855402', true)) : (_0x5ee817(), _0x5da554.events.callRemote('2843246774', false), _0x5da554.events.callRemote('174855402', false));
        }), _0x5da554.events.add('freecam.toggleSafe', _0x5ae413 => {
          _0xb356b.g.spectatorState !== _0x5ae413 && (_0xb356b.g.spectatorState = _0x5ae413, _0xb356b.g.spectatorState ? (_0x5da554.inventory.pocketItem(), _0x57e4ce.api.removeAllWeapons(), _0x1942f1()) : _0x5ee817());
        }), _0xff0939.f.register('freecam.toggleSafePromise', _0x950c89 => {
          const [_0x8b703b] = _0x950c89;
          return _0xb356b.g.spectatorState !== _0x8b703b && (_0xb356b.g.spectatorState = _0x8b703b, _0xb356b.g.spectatorState ? (_0x5da554.inventory.pocketItem(), _0x57e4ce.api.removeAllWeapons(), _0x1942f1()) : _0x5ee817(), true);
        });

        function _0xb5e715() {
          !function (_0x38943b) {
            for (let _0x5680ed of _0x38943b) _0x5da554.game.ui.hideHudComponentThisFrame(_0x5680ed);
          }([0x2, 0x13, 0x14]), function (_0x1d6121) {
            for (let _0x28de3e of _0x1d6121) _0x5da554.game.controls.disableControlAction(0x0, _0x28de3e, true);
          }([0xe, 0xf, 0x10, 0x11, 0xc, 0xd, 0x25, 0x105, 0x106, 0xf1, 0xf2]);
        }

        _0x5da554.events.add('render', () => {
          if (!_0xb356b.g.spectatorState) return;
          if (!_0x5da554.cameras.exists(_0xb356b.g.freeCamera)) return;
          if (_0xb356b.g.interfaces.chat || _0x5da554.gui.cursor.visible) return;
          _0xb5e715(), _0x12170e = !!_0x5da554.keys.isDown(0x11), _0x591a4e = !!_0x5da554.keys.isDown(0x10);

          let _0x4c4a47 = _0xb356b.g.freeCamera.getRot(0x2);

          _0x14ff35.setHeading(_0x4c4a47.z), _0x5da554.game.cam.setGameplayCamRelativeHeading(0x0), _0x5da554.game.controls.isDisabledControlJustReleased(0x0, 0x2d) || _0x5da554.game.controls.isControlJustReleased(0x0, 0x2d) ? _0x3a2caf > 0x5 ? _0x3a2caf = 0x5 : _0x3a2caf += 0.25 : (_0x5da554.game.controls.isDisabledControlJustReleased(0x0, 0x31) || _0x5da554.game.controls.isControlJustReleased(0x0, 0x31)) && (_0x3a2caf < 0.1 ? _0x3a2caf = 0.1 : _0x3a2caf -= 0.25);
          {
            let _0x168365 = 0x1,
                _0x23d152 = 0x1;
            _0x591a4e ? _0x168365 = 0x3 : _0x12170e && (_0x23d152 = 0.5);

            let _0x338c80 = _0x5da554.game.controls.getDisabledControlNormal(0x0, 0xdc),
                _0x2f90b2 = _0x5da554.game.controls.getDisabledControlNormal(0x0, 0xdd),
                _0x3c954e = _0x5da554.game.controls.getDisabledControlNormal(0x0, 0xda),
                _0x447046 = _0x5da554.game.controls.getDisabledControlNormal(0x0, 0xdb),
                _0x8b9958 = _0xb356b.g.freeCamera.getCoord(),
                _0x1058d7 = _0xb356b.g.freeCamera.getDirection(),
                _0x46cf83 = new _0x5da554.Vector3(0x0, 0x0, 0x0);

            _0x46cf83.x = _0x1058d7.x * _0x447046 * _0x168365 * _0x23d152 * _0x3a2caf, _0x46cf83.y = _0x1058d7.y * _0x447046 * _0x168365 * _0x23d152 * _0x3a2caf, _0x46cf83.z = _0x1058d7.z * _0x447046 * _0x168365 * _0x23d152 * _0x3a2caf;

            let _0x373c47 = new _0x5da554.Vector3(0x0, 0x0, 0x1),
                _0x5d2f77 = _0x57e4ce.api.getCrossProduct(_0x57e4ce.api.getNormalizedVector(_0x1058d7), _0x57e4ce.api.getNormalizedVector(_0x373c47));

            _0x5d2f77.x *= _0x3c954e * _0x168365 * _0x23d152 * _0x3a2caf * 0.5, _0x5d2f77.y *= _0x3c954e * _0x168365 * _0x23d152 * _0x3a2caf * 0.5, _0x5d2f77.z *= _0x3c954e * _0x168365 * _0x23d152 * _0x3a2caf * 0.5;
            let _0x58758a = 0x0;
            _0x5da554.keys.isDown(0x45) && (_0x58758a = 0.5 * _0x168365 * _0x23d152 * _0x3a2caf);
            let _0x436390 = 0x0;
            _0x5da554.keys.isDown(0x51) && (_0x436390 = 0.5 * _0x168365 * _0x23d152 * _0x3a2caf), _0x14ff35.setCoordsNoOffset(_0x8b9958.x + _0x46cf83.x + 0x1, _0x8b9958.y + _0x46cf83.y + 0x1, _0x8b9958.z + _0x46cf83.z + 0x1, false, false, false), _0x14ff35.heading = _0x1058d7.z, _0xb356b.g.freeCamera.setCoord(_0x8b9958.x - _0x46cf83.x + _0x5d2f77.x, _0x8b9958.y - _0x46cf83.y + _0x5d2f77.y, _0x8b9958.z - _0x46cf83.z + _0x5d2f77.z + _0x58758a - _0x436390), _0xb356b.g.freeCamera.setRot(_0x4c4a47.x + -0x5 * _0x2f90b2, 0x0, _0x4c4a47.z + -0x5 * _0x338c80, 0x2);
          }
        }), _0x5da554.events.add('getCamCoords', _0x29f2ab => {
          _0x5da554.events.callRemote('1718011788', JSON.stringify(_0xb356b.g.freeCamera.getCoord()), JSON.stringify(function (_0x18f1a5) {
            let _0x556d88 = _0xb356b.g.freeCamera.getDirection(),
                _0x1ac8f1 = _0xb356b.g.freeCamera.getCoord();

            const _0x559433 = new _0x5da554.Vector3(_0x556d88.x * _0x18f1a5 + _0x1ac8f1.x, _0x556d88.y * _0x18f1a5 + _0x1ac8f1.y, _0x556d88.z * _0x18f1a5 + _0x1ac8f1.z),
                  _0x5163eb = _0x57e4ce.api.testPointToPoint(_0x1ac8f1, _0x559433, [0x1, 0x10]);

            return undefined === _0x5163eb ? 'undefined' : _0x5163eb;
          }(0x3e8)), _0x29f2ab);
        });
      },
      0x12e5e: (_0x386c4a, _0x57dfce, _0x39bd37) => {
        _0x39bd37(0x4177), _0x39bd37(0x497e), _0x39bd37(0x16922);
      },
      0x16922: (_0x27b93e, _0xc35d8d, _0x1a8dd0) => {
        'use strict';

        const a0_0x425d27 = {
          _0x29fe20: 0x235b,
          _0x1c8597: 0x1a5,
          _0x254d5f: 0x14d2,
          _0x54b2c4: 0x1da5,
          _0x3e9ac4: 0x13b6,
          _0x412c43: 0x535,
          _0x550051: 0x12a3,
          _0x2d1c90: 0x2001,
          _0x535ca7: 0x2292,
          _0x50973e: 0x549,
          _0x6fb75a: 0x2072,
          _0x2283ab: 0x114c
        };

        _0x1a8dd0.r(_0xc35d8d);

        var _0x200629 = _0x1a8dd0(0x16a21),
            _0xd3bc73 = _0x1a8dd0(0x161cd);

        const _0xa71a90 = _0xd3bc73.players.local;
        _0x1a8dd0.g.isSpectating = false;
        let _0x12bb2a = null,
            _0xbb6b15 = 0x0;
        _0xd3bc73.events.add('admin.specPlayer', _0x59b886 => {
          _0x12bb2a = _0xd3bc73.players.atRemoteId(_0x59b886), _0xa71a90.freezePosition(true), _0x1a8dd0.g.isSpectating = true;
        }), _0xd3bc73.events.add('admin.specOffPlayer', _0xaac548 => {
          _0x12bb2a = null, _0xa71a90.freezePosition(false), _0x1a8dd0.g.isSpectating = false, _0xaac548 && _0x200629.api.setPlayerPos(_0xa71a90, _0xaac548);
        }), _0xd3bc73.events.add('render', () => {
          if (!_0x1a8dd0.g.isSpectating) return;
          if (!_0xd3bc73.players.exists(_0x12bb2a)) return _0xd3bc73.events.call('admin.specOffPlayer'), _0xd3bc73.events.callRemote('1646388208');
          if (0x0 === _0x12bb2a.handle && !_0x200629.api.ePress(_0xbb6b15, 0x5dc)) return _0xbb6b15 = _0x200629.api.ePressUpdate(0x5dc), void _0xd3bc73.events.callRemote('129458731', _0x12bb2a.remoteId);
          const {
            x: _0x6c3e4b,
            y: _0x81998b,
            z: _0x1bc929
          } = _0x12bb2a.position;
          0x0 === _0x6c3e4b && 0x0 === _0x81998b && 0x0 === _0x1bc929 || (_0xa71a90.freezePosition(true), _0xa71a90.setCoordsNoOffset(_0x6c3e4b, _0x81998b, _0x1bc929 - 0x3, false, false, false), _0xd3bc73.game.cam.setGameplayFollowPedThisUpdate(_0x12bb2a.handle));
        });
      },
      0x7515: (_0x39aa2f, _0x5da1f1, _0x15141c) => {
        'use strict';

        const a0_0x32d5d0 = {
          _0x9fe2c4: 0x535,
          _0x5efcb3: 0x2080
        },
              a0_0x567a98 = {
          _0x460e82: 0x317
        },
              a0_0x4c913a = {
          _0x47d2ff: 0x1076,
          _0x1ba897: 0xc95,
          _0x4bb642: 0x1cc,
          _0x3ba7fb: 0x811,
          _0x49e42d: 0xe41,
          _0x18aa89: 0x1398,
          _0x22ed3f: 0x1f30,
          _0x40f051: 0xa26,
          _0x1a6526: 0x14d2,
          _0x5bf32b: 0xfcd,
          _0x56c9af: 0x1dc6,
          _0x4e61b3: 0x1f30,
          _0x3420af: 0xc95,
          _0x173c42: 0x16a5,
          _0x12cc4c: 0x4b9,
          _0x3b0860: 0x1368,
          _0x101991: 0xfcd,
          _0x4bbdc5: 0x16ff,
          _0xcb9404: 0xc95,
          _0x37c861: 0x1157,
          _0x477e12: 0x186b,
          _0x25390d: 0x1dc6,
          _0x1b68cc: 0x1dc6,
          _0x1b53c9: 0x7c6,
          _0x2e8576: 0x1dc6
        },
              a0_0x173c75 = {
          _0x1177bd: 0x235b,
          _0x5cc2ab: 0x185e
        },
              a0_0x53c013 = {
          _0x1ec09c: 0x178a,
          _0x4fa279: 0x14d2,
          _0x7f11fa: 0x1da5,
          _0x32f4be: 0x16d
        };

        _0x15141c.r(_0x5da1f1);

        var _0x11302a = _0x15141c(0x16a21),
            _0x3a2c25 = _0x15141c(0x77a9),
            _0x34b95a = (_0x15141c(0x9555), _0x15141c(0x167e8)),
            _0x52c609 = _0x15141c(0x161cd);

        const _0x1a3f35 = _0x52c609.players.local,
              _0x31f03f = {
          'enabled': true,
          'mSP': 0x1e,
          'prevPos': _0x1a3f35.position,
          'localWeapons': {},
          'lastWeaponShot': 0x0,
          'aims': [],
          'nonAims': [],
          'currentServerSkin': null
        };
        _0x15141c.g.anticheat = {
          'pos': () => _0x31f03f.prevPos = _0x1a3f35.position,
          'guns': () => _0x31f03f.localWeapons = _0x1a3f35.getAllWeapons(),
          'start': () => {
            _0x31f03f.enabled = true;
          }
        }, _0x52c609.events.add('time.every2Sec', () => {}), (_0x52c609.events.add('mac.updatePos', () => {
          _0x15141c.g.anticheat.pos();
        }), _0x52c609.events.add('toggletp', _0x59836d => {
          _0x1a3f35.toggletp = _0x59836d;
        }), _0x52c609.events.add('anticheat.client.skinChange', _0x18f7c1 => {
          _0x31f03f.currentServerSkin = parseInt(_0x18f7c1, 0x24) >> 0x0, _0x52c609.events.callRemote('1122911033'), _0x31f03f.skinChangerSkipTick = _0x11302a.api.randomInteger(0x3, 0xa);
        }), _0x52c609.events.add('time.everySec', () => {
          const _0x2ea238 = _0x1a3f35.model >> 0x0;

          !_0x31f03f.skinChangerSkipTick && _0x34b95a.Z[_0x2ea238] && _0x31f03f.currentServerSkin !== _0x2ea238 && _0x52c609.events.callRemote('4019288650', 'skinChanger', _0x2ea238), _0x31f03f.skinChangerSkipTick > 0x0 && (_0x31f03f.skinChangerSkipTick -= 0x1);
        }), _0x1a3f35.pos = new _0x52c609.Vector3(0x0, 0x0, 0x0));
        let _0x59ff4a = 0x0,
            _0x438b8f = 0x0,
            _0x23d624 = 0x0,
            _0x356eb8 = 0x0;
        _0x52c609.events.add('playerSpawn', _0x1faeaa => {
          _0x1faeaa == _0x52c609.players.local && (_0x356eb8 = new Date().getTime());
        }), _0x52c609.events.add('cancelNoclip', () => {
          _0x1a3f35.skipNoClip = !_0x1a3f35.skipNoClip;
        }), _0x52c609.events.add('time.every025Sec', () => {
          const _0xbb0632 = new Date().getTime();

          if (_0x11302a.api.isAuthed() && (_0x15141c.g.skyCamera || !_0x1a3f35.getVariable('id') || _0x11302a.api.isAdmin(_0x1a3f35) || _0x1a3f35.specials && _0x1a3f35.specials.f5 || !_0x1a3f35.toggletp || _0x438b8f !== _0x1a3f35.dimension)) return _0x1a3f35.pos = _0x1a3f35.position, _0x438b8f = _0x1a3f35.dimension, void (_0x23d624 = _0xbb0632);

          const _0x384dec = Math.sqrt(Math.pow(_0x1a3f35.position.x - _0x1a3f35.pos.x, 0x2) + Math.pow(_0x1a3f35.position.y - _0x1a3f35.pos.y, 0x2));

          0x0 === _0x1a3f35.dimension && _0x384dec >= 0x1f4 && _0xbb0632 - _0x23d624 > 0x2710 && _0xbb0632 - _0x356eb8 > 0x3e8 && _0x52c609.events.callRemoteUnreliable('3030734075', _0x384dec, _0xbb0632 - _0x23d624, _0xbb0632 - _0x356eb8);

          const _0x1eb9bb = _0x11302a.api.vdist(_0x1a3f35.pos.x, _0x1a3f35.pos.y, _0x1a3f35.pos.z, _0x1a3f35.position.x, _0x1a3f35.position.y, _0x1a3f35.position.z),
                _0x456812 = Math.abs(_0x1a3f35.pos.z - _0x1a3f35.position.z);

          if (0x0 !== _0x1a3f35.dimension || _0x1a3f35.getVariable('inTrunk') || (!_0x1a3f35.vehicle && _0x1eb9bb > 0x32 && _0x456812 < 2.5 ? _0x52c609.events.callRemoteUnreliable('2268467957', _0x1eb9bb, _0x456812, false) : _0x1a3f35.vehicle && _0x1eb9bb > 0x1676 && _0x52c609.events.callRemoteUnreliable('2268467957', _0x1eb9bb, _0x456812, true)), !_0x1a3f35.skipNoClip && !_0x1a3f35.getVariable('inTrunk')) {
            const _0x3e23f0 = Math.abs,
                  _0x32e83f = _0x52c609.game.gameplay.getGroundZFor3dCoord(_0x1a3f35.pos.x, _0x1a3f35.pos.y, _0x1a3f35.pos.z + 0xa, 0x0, false),
                  _0x23f200 = _0x3e23f0(_0x32e83f - _0x1a3f35.pos.z);

            if (0x0 === _0x1a3f35.dimension && _0x23f200 >= 0x23) {
              const _0x4cbabe = () => _0x1a3f35.vehicle && -0x1 !== [0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14].indexOf(_0x1a3f35.vehicle.getClass()),
                    _0x3c64ac = () => _0x1a3f35.vehicle && _0x1a3f35.vehicle.getVariable('isDrone'),
                    _0x1837bc = () => {
                const a0_0x1d32ea = {
                  _0x4ce0a2: 0x1c43,
                  _0x2c85be: 0x1dc6,
                  _0x1ac5fc: 0x1f30
                };
                let _0xfa82c9 = false;
                return _0x52c609.vehicles.forEachInStreamRange(_0x550459 => {
                  _0xfa82c9 || 0xe === _0x550459.getClass() && _0x52c609.game.system.vdist(_0x1a3f35.pos.x, _0x1a3f35.pos.y, _0x1a3f35.pos.z, _0x550459.position.x, _0x550459.position.y, _0x550459.position.z) < 0xf && (_0xfa82c9 = true);
                }), _0xfa82c9;
              };

              _0x32e83f < 0x0 ? !(_0x3e23f0(_0x1a3f35.pos.z) > 0x1e) || _0x1a3f35.isSwimming() || _0x1a3f35.isSwimmingUnderWater() || _0x4cbabe() || _0x1837bc() || _0x3c64ac() || _0x59ff4a++ : !_0x4cbabe() && !_0x1837bc() && !_0x3c64ac() && _0x1a3f35.getParachuteState() < 0x1 && _0x59ff4a++, _0x59ff4a > 0xf && (0x10 === _0x59ff4a || _0x59ff4a % 0x1e == 0x0) && _0x52c609.events.callRemoteUnreliable('1432563190');
            } else _0x59ff4a = 0x0;
          }

          _0x1a3f35.pos = _0x1a3f35.position;
        }), _0x52c609.events.callRemote('415272018', _0x52c609.storage.data.chatLength), _0x52c609.events.add('playerWeaponShot', (_0x11dc2e, _0x4ce09f) => {
          if (Date.now() - _0x31f03f.lastWeaponShot > 0xea60 && (_0x31f03f.aims = [], _0x31f03f.nonAims = []), _0x31f03f.lastWeaponShot = Date.now(), _0x52c609.players.exists(_0x4ce09f) && (_0x4ce09f.isRunning() || _0x4ce09f.isWalking())) {
            const _0xfee8e6 = [];

            let _0x2659d7 = -0x1,
                _0x5c081c = 0.9;

            _0x3a2c25.N.forEach(_0x61c708 => {
              const _0xbb5fc9 = _0x4ce09f.getBoneCoords(_0x61c708, 0x0, 0x0, 0x0);

              _0xfee8e6.push({
                'bone': _0x61c708,
                'pos': _0xbb5fc9
              });
            }), _0xfee8e6.forEach(_0x920dd => {
              const _0x322088 = _0x11302a.api.vdist(_0x11dc2e.x, _0x11dc2e.y, _0x11dc2e.z, _0x920dd.pos.x, _0x920dd.pos.y, _0x920dd.pos.z);

              _0x322088 < _0x5c081c && (_0x5c081c = _0x322088, _0x2659d7 = _0x920dd.bone);
            });

            const _0x185a43 = _0x4ce09f.getWorldPositionOfBone(_0x4ce09f.getBoneIndex(_0x2659d7));

            if (Math.abs(_0x185a43.x - _0x11dc2e.x) < 0.02 && Math.abs(_0x185a43.y - _0x11dc2e.y) < 0.02 && Math.abs(_0x185a43.z - _0x11dc2e.z) < 0.02) {
              if (_0x31f03f.aims.push({
                'targetBone': _0x2659d7,
                'distToBone': _0x5c081c
              }), _0x31f03f.aims.length >= 0x5) {
                const _0xa77ec0 = _0x31f03f.aims.map(_0x25449c => ({
                  'bone': _0x25449c.targetBone,
                  'diff': _0x11302a.api.roundNumber(_0x25449c.distToBone)
                })),
                      _0x4fdd72 = _0x11302a.api.percentDiff(_0x31f03f.aims.length, _0x31f03f.nonAims.length),
                      _0x23170c = 0x64 == _0x4fdd72 ? 0x63 : _0x4fdd72;

                _0x52c609.events.callRemote('4019288650', 'aim', JSON.stringify(_0xa77ec0), _0x23170c), _0x31f03f.aims = [], _0x31f03f.nonAims = [];
              }
            } else _0x31f03f.nonAims.push({
              'targetBone': _0x2659d7,
              'distToBone': _0x5c081c
            });
          }
        });
      },
      0xd194: (_0x8d67a7, _0xbf982e, _0x58b4c4) => {
        'use strict';

        const a0_0x211d53 = {
          _0x52b489: 0x1bb4
        },
              a0_0x34c460 = {
          _0x15d179: 0x773,
          _0x93b485: 0x17f
        },
              a0_0x44234b = {
          _0x14e733: 0x7dc
        },
              a0_0x4c7111 = {
          _0x53247f: 0xffb,
          _0x3e51d0: 0x2121,
          _0x4e214e: 0x535,
          _0x4c38ef: 0x9d0,
          _0xa8d091: 0x19e6,
          _0x360189: 0x16b7,
          _0x10e2b9: 0x16c5,
          _0x111a20: 0x1fe9,
          _0x322ffa: 0x4b9,
          _0x35bd40: 0x16c5,
          _0x432d11: 0xe1b,
          _0x5be0a5: 0x2140,
          _0x5450d6: 0x7dc,
          _0xc2b3e9: 0xea1,
          _0x2d02e9: 0x2323
        },
              a0_0x357cf9 = {
          _0x352aac: 0x1e77
        },
              a0_0x1a4ae1 = {
          _0x470aa4: 0x140f,
          _0x4794f7: 0x1429
        },
              a0_0x437f91 = {
          _0x46074b: 0x140f
        },
              a0_0x5de61a = {
          _0x4f40da: 0x1429
        },
              a0_0x173c4e = {
          _0x35bbb2: 0x140f
        },
              a0_0x3a716a = {
          _0x129ddd: 0x140f,
          _0x13e69f: 0x11d2,
          _0x2f3bf5: 0x1429,
          _0x4f9ba1: 0x2b5
        },
              a0_0x23d6c8 = {
          _0x139803: 0xe41
        },
              a0_0x1b7faf = {
          _0xf0e868: 0x2f4,
          _0x1b8676: 0x2366,
          _0x54a28d: 0x1799,
          _0x44a5d9: 0x2540,
          _0xf75a7a: 0x215d,
          _0x1c550d: 0x7f2,
          _0x1ac408: 0x11df,
          _0x35c180: 0xd64,
          _0x486bb9: 0x2597
        },
              a0_0x13762a = {
          _0x57b7ef: 0x2085,
          _0x4aeecf: 0x1707
        },
              a0_0x10b908 = {
          _0xd6ff07: 0xf45
        },
              a0_0x1f533b = {
          _0x26b817: 0x13ef
        },
              a0_0x347301 = {
          _0x3bb2f7: 0x13ef
        },
              a0_0xae03a5 = {
          _0x4d1c2e: 0xcf8,
          _0x27ba8b: 0x1fe9,
          _0x511735: 0x1023,
          _0x1416b0: 0x1d66,
          _0x14c224: 0x1131,
          _0x43cf89: 0x216c,
          _0x389da1: 0x1e35,
          _0x1a910b: 0x23ce,
          _0x3b8931: 0x1023,
          _0x6d4c3b: 0x2530,
          _0x5d3e6b: 0x1a1b,
          _0x6d81b8: 0x2643,
          _0x36d198: 0xa5e,
          _0x5c99e9: 0x1f42,
          _0x52d66b: 0x11f5,
          _0xde99a3: 0xa62,
          _0x5a49b1: 0x1023,
          _0x40ff66: 0x1f59
        },
              a0_0x17898e = {
          _0x3edd01: 0x650,
          _0x3c97e3: 0x1fe9,
          _0x44d480: 0x2530,
          _0x4cf128: 0x1fe9,
          _0x3910a9: 0x1e35,
          _0x1697b6: 0x1fe2
        },
              a0_0x22e6e7 = {
          _0x1c7a6d: 0x1d66,
          _0xfd00: 0x6da,
          _0x5051e8: 0x1d66,
          _0x16b407: 0x650,
          _0x35254e: 0x1e35,
          _0x468db1: 0x1751,
          _0x4a44ce: 0x2530,
          _0x3cbf91: 0xbbc,
          _0x44c104: 0x1fe9,
          _0x3497ab: 0x1e35
        },
              a0_0x2db40f = {
          _0x49820a: 0x300,
          _0xf39177: 0x9bc,
          _0xc291b: 0x9bc,
          _0x40d2a1: 0x1a1b,
          _0x1b4dc6: 0x33f,
          _0x58cf0: 0xa5e,
          _0x3051f6: 0x1f42,
          _0x533dba: 0x1f42,
          _0x3d70af: 0x1023
        },
              a0_0x3d0b56 = {
          _0x25f91e: 0x2530
        },
              a0_0x35f0f2 = {
          _0xafa89f: 0x535,
          _0x3196a9: 0xebb,
          _0x4be8d3: 0x18b4,
          _0x2b5979: 0xd9e,
          _0x43e9ed: 0x1985,
          _0x5a518f: 0xbe7,
          _0x7cb825: 0x176e,
          _0x5f29ec: 0x1deb,
          _0x4d5715: 0x1d66,
          _0x2dd17f: 0x172d,
          _0x54026b: 0x172d,
          _0x48339d: 0xde4,
          _0x5e49b1: 0x1c95,
          _0x34141f: 0x2287,
          _0xe25a8e: 0x19d2,
          _0x2eff6e: 0xd5e,
          _0x50c3bd: 0x16c7,
          _0x5a0719: 0x16c7,
          _0x3737aa: 0x1e36,
          _0x43a4e3: 0x145f,
          _0x1bd9d9: 0x1498,
          _0x3fef13: 0x190a,
          _0x11f7c7: 0x18d6,
          _0x50ca0b: 0x91b
        },
              a0_0x56dfe4 = {
          _0x3b5722: 0x1d66
        },
              a0_0x1a560e = {
          _0x57d4e3: 0x9bd,
          _0x34ea53: 0x1e7c,
          _0x1264eb: 0xce2,
          _0x20b4ec: 0x235b,
          _0x348f5b: 0x185e,
          _0x24ddf8: 0x535,
          _0x27bd6f: 0x1985,
          _0x5499af: 0x1354,
          _0x88aef5: 0x1d66,
          _0x209d23: 0x12a9,
          _0x4182b5: 0x145f,
          _0x43e23b: 0x263a,
          _0x5828c6: 0x535,
          _0xf57a79: 0x1985,
          _0xd184e8: 0xd9a,
          _0x16ce57: 0x91b
        },
              a0_0x199e8b = {
          _0x1bf2a6: 0x9ad
        },
              a0_0x2684b2 = {
          _0x303519: 0x263a,
          _0x1dcd4c: 0x190a,
          _0x165836: 0x1e21
        },
              a0_0x487ce2 = {
          _0x324106: 0x1985,
          _0x3972c8: 0x535,
          _0x128ff4: 0x193c,
          _0x3eb0de: 0x22e1,
          _0x3275b4: 0x1d66,
          _0xd825ea: 0x2287,
          _0x2c53f7: 0x1b35,
          _0x361513: 0x13f4,
          _0x199449: 0x19d2,
          _0x19395d: 0x1d66,
          _0x10e4bc: 0xffb
        },
              a0_0x2ce0e3 = {
          _0x479cb4: 0x1d66,
          _0x52ab73: 0x2530
        },
              a0_0x346fe8 = {
          _0x19dba9: 0x1878,
          _0xdc2526: 0x1f18,
          _0x50c24f: 0x2530
        },
              a0_0x527694 = {
          _0x4c2987: 0x1180,
          _0x50da14: 0xe6d
        },
              a0_0x36117f = {
          _0x450971: 0x1e35,
          _0x3c6538: 0x1db,
          _0x157300: 0x2530
        },
              a0_0xcb270f = {
          _0x1412c4: 0x11f5,
          _0x1f8f85: 0x4a1,
          _0x4ff71e: 0x7f0,
          _0x2e8ed2: 0x90d,
          _0x27f662: 0x11dc,
          _0x1b58b6: 0x11fc,
          _0x34bd09: 0x1e35,
          _0x17e29f: 0x1d5b,
          _0x4760a6: 0x1472,
          _0x3fee72: 0xa82
        },
              a0_0x758e3a = {
          _0x5bf844: 0xb71
        };
        _0x58b4c4.r(_0xbf982e), _0x58b4c4.d(_0xbf982e, {
          'BBox': () => _0x13cb11,
          'FadeEntity': () => _0x432d52,
          'Flags': () => _0xfd3b26,
          'NotificationNative': () => _0x4bdfae,
          'NotificationNativeStats': () => _0x102a77,
          'NotificationWithPictureNative': () => _0x108e80,
          'ParticleFx': () => _0x3f7a6f,
          'Quaternion': () => _0x18ff95,
          'Scaleform': () => _0x4e872c,
          'Sounds2D': () => _0x514d16,
          'Sounds2DPitch': () => _0xa45c4b,
          'Sounds3DEntity': () => _0x1aa0ad,
          'Sounds3DPos': () => _0x587fdb,
          'Vector3': () => _0x2e4fcb
        });

        var _0x13c063 = _0x58b4c4(0x16a21),
            _0x57e7dc = _0x58b4c4(0x5d14),
            _0x2a56db = _0x58b4c4(0x1d7e),
            _0x5bf742 = (_0x58b4c4(0x176d8), _0x58b4c4(0xb2e6)),
            _0x2746aa = _0x58b4c4(0x12a76),
            _0x1c58a5 = _0x58b4c4(0x161cd);

        const _0x552e61 = {},
              _0x28a64f = {},
              _0x3db12e = new Set(),
              _0x3c417e = [];

        class _0x4e872c {
          constructor(_0x100298) {
            this._handle = _0x1c58a5.game.graphics.requestScaleformMovie(_0x100298), this.queueCallFunction = new Map(), this._render;
          }

          get ['isLoaded']() {
            return 'number' == typeof this._handle && !!_0x1c58a5.game.graphics.hasScaleformMovieLoaded(this._handle);
          }

          get ['isValid']() {
            return 0x0 !== this._handle;
          }

          get ['handle']() {
            return this._handle;
          }

          ['callFunction'](_0x542ee0, ..._0x3a4cd1) {
            if (this.isLoaded && this.isValid && 'number' == typeof this.handle) {
              const _0x10aa76 = _0x1c58a5.game.graphics;
              _0x10aa76.pushScaleformMovieFunction(this.handle, _0x542ee0), _0x3a4cd1.forEach(_0x6fc3bd => {
                switch (typeof _0x6fc3bd) {
                  case 'string':
                    _0x10aa76.pushScaleformMovieFunctionParameterString(_0x6fc3bd);

                    break;

                  case 'boolean':
                    _0x10aa76.pushScaleformMovieFunctionParameterBool(_0x6fc3bd);

                    break;

                  case 'number':
                    Number(_0x6fc3bd) === _0x6fc3bd && _0x6fc3bd % 0x1 != 0x0 ? _0x10aa76.pushScaleformMovieFunctionParameterFloat(_0x6fc3bd) : _0x10aa76.pushScaleformMovieFunctionParameterInt(_0x6fc3bd);
                    break;

                  case 'object':
                    if (null == _0x6fc3bd) break;

                    switch (_0x6fc3bd.type) {
                      case 'playerNameString':
                        _0x1c58a5.game.graphics.scaleformMovieMethodAddParamPlayerNameString(_0x6fc3bd.value);

                        break;

                      case 'textureNameString':
                        _0x1c58a5.game.graphics.scaleformMovieMethodAddParamTextureNameString2(_0x6fc3bd.value);

                    }

                }
              }), _0x10aa76.popScaleformMovieFunctionVoid();
            } else this.queueCallFunction.set(_0x542ee0, _0x3a4cd1);
          }

          ['destroy']() {
            _0x1c58a5.game.graphics.setScaleformMovieAsNoLongerNeeded(this.handle);
          }

          ['onUpdate']() {
            this.isLoaded && this.isValid && this.queueCallFunction.forEach((_0x447a24, _0x15c59a) => {
              this.callFunction(_0x15c59a, ..._0x447a24), this.queueCallFunction.delete(_0x15c59a);
            });
          }

          ['startRenderEvent']() {
            this._render = _0x3db12e.add(() => this.renderFullscreen());
          }

          ['stopRenderEvent']() {
            undefined !== this._render && (_0x3db12e.delete(this._render), this._render = undefined);
          }

          ['renderFullscreen']() {
            this.onUpdate(), this.isLoaded && this.isValid && _0x1c58a5.game.graphics.drawScaleformMovieFullscreen(this.handle, 0xff, 0xff, 0xff, 0xff, false);
          }

          ['render2D'](_0x552890, _0x299226, _0x4d57bc, _0x57671e) {
            if (this.onUpdate(), this.isLoaded && this.isValid) {
              const _0x48a552 = _0x1c58a5.game.graphics;
              undefined !== _0x552890 && undefined !== _0x299226 && undefined !== _0x4d57bc && undefined !== _0x57671e ? _0x48a552.drawScaleformMovie(this.handle, _0x552890, _0x299226, _0x4d57bc, _0x57671e, 0xff, 0xff, 0xff, 0xff, 0x0) : _0x48a552.drawScaleformMovieFullscreen(this.handle, 0xff, 0xff, 0xff, 0xff, false);
            }
          }

          ['render3D'](_0x3d3948, _0x4fe101, _0x50c696) {
            this.onUpdate(), this.isLoaded && this.isValid && _0x1c58a5.game.graphics.drawScaleformMovie3dNonAdditive(this.handle, _0x3d3948.x, _0x3d3948.y, _0x3d3948.z, _0x4fe101.x, _0x4fe101.y, _0x4fe101.z, 0x2, 0x2, 0x1, _0x50c696.x, _0x50c696.y, _0x50c696.z, 0x2);
          }

          ['render3DAdditive'](_0x216067, _0x3bebd7, _0x1d8631) {
            this.onUpdate(), this.isLoaded && this.isValid && _0x1c58a5.game.graphics.drawScaleformMovie3d(this.handle, _0x216067.x, _0x216067.y, _0x216067.z, _0x3bebd7.x, _0x3bebd7.y, _0x3bebd7.z, 0x2, 0x2, 0x1, _0x1d8631.x, _0x1d8631.y, _0x1d8631.z, 0x2);
          }

          ['dispose']() {
            _0x1c58a5.game.graphics.setScaleformMovieAsNoLongerNeeded(this.handle);
          }

        }

        class _0x4bdfae {
          constructor(_0x5bc3d4, _0x2cc009, _0x3427e5, _0x1a8e11, _0x5c2ecd = [0x4d, 0x4d, 0x4d, 0xc8]) {
            let _0x3c5ada = -0x1,
                _0xd6265e = -0x1;

            switch (_0x2cc009) {
              case 'error':
                _0x3c5ada = 0x0, _0xd6265e = 0x77;
                break;

              case 'success':
                _0x3c5ada = 0x0, _0xd6265e = 0x14;
            }

            _0x3c5ada > -0x1 && _0x13c063.api.invokeNative('_SET_NOTIFICATION_COLOR_NEXT', _0x3c5ada), _0xd6265e > -0x1 && _0x13c063.api.invokeNative('_SET_NOTIFICATION_BACKGROUND_COLOR', _0xd6265e), _0x1a8e11 && _0x1c58a5.game.ui.setNotificationFlashColor(_0x5c2ecd[0x0], _0x5c2ecd[0x1], _0x5c2ecd[0x2], _0x5c2ecd[0x3]), _0x1c58a5.game.ui.setNotificationTextEntry('CELL_EMAIL_BCON');

            for (let _0x50fb48 = 0x0, _0xaec52f = _0x5bc3d4.length; _0x50fb48 < _0xaec52f; _0x50fb48 += 0x63) _0x1c58a5.game.ui.addTextComponentSubstringPlayerName(_0x5bc3d4.substr(_0x50fb48, Math.min(0x63, _0x5bc3d4.length - _0x50fb48)));

            this.handle = _0x1c58a5.game.ui.drawNotification(_0x1a8e11, true), this.duration = _0x3427e5, this.initTime = Date.now();
          }

          ['remove']() {
            _0x1c58a5.game.ui.removeNotification(this.handle);
          }

          ['getHandle']() {
            return this.handle;
          }

        }

        class _0x102a77 {
          constructor(_0x1edd3d, _0x3c5278, _0x3b6f24, _0x1cb61d, _0xae0190, _0x200117) {
            this.title = _0x1edd3d, this.lastProgress = _0x3c5278, this.newProgress = _0x3b6f24, this.txd = _0x1cb61d, this.flashing = _0xae0190, this.duration = _0x200117, this.start();
          }

          async ['start']() {
            let _0x17b283 = 0x0;

            if ('SELF' === this.txd) {
              for (_0x17b283 = _0x13c063.api.invokeNative('REGISTER_PEDHEADSHOT', _0x1c58a5.players.local.handle); !_0x13c063.api.invokeNative('IS_PEDHEADSHOT_READY', _0x17b283) || !_0x13c063.api.invokeNative('IS_PEDHEADSHOT_VALID', _0x17b283);) await _0x1c58a5.game.sleep(0x0);

              this.txd = _0x13c063.api.invokeNative('GET_PEDHEADSHOT_TXD_STRING', _0x17b283);
            }

            _0x1c58a5.game.ui.setNotificationTextEntry('PS_UPDATE'), _0x1c58a5.game.ui.addTextComponentInteger(0x32), _0x13c063.api.invokeNative('_SET_NOTIFICATION_MESSAGE_2', this.title, 0xe, parseInt(this.newProgress), parseInt(this.lastProgress), false, this.txd, this.txd), this.handle = _0x1c58a5.game.ui.drawNotification(false, true), _0x17b283 && _0x13c063.api.invokeNative('UNREGISTER_PEDHEADSHOT', _0x17b283), _0x1c58a5.game.sleep(this.duration).then(() => {
              this.remove();
            });
          }

          ['remove']() {
            _0x1c58a5.game.ui.removeNotification(this.handle);
          }

          ['getHandle']() {
            return this.handle;
          }

        }

        class _0x108e80 {
          constructor(_0x58d19d, _0x45b529, _0x48fc47, _0x2fc255, _0x56fcf0 = {}) {
            this.maxStringLength = 0x63, this.message = String(_0x48fc47).length > 0x40 ? _0x48fc47.slice(0x0, 0x40) + '...' : _0x48fc47, this.title = _0x58d19d, this.sender = _0x45b529, this.notifPic = _0x2fc255, this.icon = _0x56fcf0 && null != _0x56fcf0.icon ? _0x56fcf0.icon : 0x0, this.flashing = !(!_0x56fcf0 || null == _0x56fcf0.flashing) && _0x56fcf0.flashing, this.textColor = _0x56fcf0 && null != _0x56fcf0.textColor ? _0x56fcf0.textColor : -0x1, this.bgColor = _0x56fcf0 && null != _0x56fcf0.bgColor ? _0x56fcf0.bgColor : -0x1, this.flashColor = _0x56fcf0 && null != _0x56fcf0.flashColor ? _0x56fcf0.flashColor : [0x4d, 0x4d, 0x4d, 0xc8], this.picDict = _0x56fcf0 && null != _0x56fcf0.picDict ? _0x56fcf0.picDict : null, this.duration = _0x56fcf0 && null != _0x56fcf0.duration ? _0x56fcf0.duration : 0xbb8, this.draw();
          }

          async ['draw']() {
            this.picDict && (await _0x13c063.api.requestStreamedTextureDict(this.picDict)), this.textColor > -0x1 && _0x13c063.api.invokeNative('_SET_NOTIFICATION_COLOR_NEXT', this.textColor), this.bgColor > -0x1 && _0x13c063.api.invokeNative('_SET_NOTIFICATION_BACKGROUND_COLOR', this.bgColor), this.flashing && _0x1c58a5.game.ui.setNotificationFlashColor(this.flashColor[0x0], this.flashColor[0x1], this.flashColor[0x2], this.flashColor[0x3]), _0x1c58a5.game.ui.setNotificationTextEntry('CELL_EMAIL_BCON');

            for (let _0x380f8c = 0x0, _0x1e0a5a = this.message.length; _0x380f8c < _0x1e0a5a; _0x380f8c += this.maxStringLength) _0x1c58a5.game.ui.addTextComponentSubstringPlayerName(this.message.substr(_0x380f8c, Math.min(this.maxStringLength, this.message.length - _0x380f8c)));

            _0x1c58a5.game.ui.setNotificationMessage(this.notifPic, this.notifPic, this.flashing, this.icon, this.title, this.sender), this.handle = _0x1c58a5.game.ui.drawNotification(this.flashing, true), _0x1c58a5.game.sleep(this.duration).then(() => {
              this.remove();
            });
          }

          ['remove']() {
            _0x1c58a5.game.ui.removeNotification(this.handle);
          }

          ['getHandle']() {
            return this.handle;
          }

        }

        class _0x3f7a6f {
          constructor(_0x3a359b, _0x136088, _0x188316 = {}) {
            this.fxLib = _0x3a359b, this.fxName = _0x136088, this.scale = _0x188316 && null != _0x188316.scale ? _0x188316.scale : 0x1, this.rgb = _0x188316 && null != _0x188316.r ? [_0x188316.r, _0x188316.g, _0x188316.b] : [0x0, 0x0, 0x0], this.xOffset = _0x188316 && null != _0x188316.xOffset ? _0x188316.xOffset : 0x0, this.yOffset = _0x188316 && null != _0x188316.yOffset ? _0x188316.yOffset : 0x0, this.zOffset = _0x188316 && null != _0x188316.zOffset ? _0x188316.zOffset : 0x0, this.xRot = _0x188316 && null != _0x188316.xRot ? _0x188316.xRot : 0x0, this.yRot = _0x188316 && null != _0x188316.yRot ? _0x188316.yRot : 0x0, this.zRot = _0x188316 && null != _0x188316.zRot ? _0x188316.zRot : 0x0, this.fxCall, this.fxHandle, this.load();
          }

          async ['load']() {
            return new Promise(async (_0x18a828, _0x10867a) => (await _0x13c063.api.requestNamedPtfxAsset(this.fxLib), _0x18a828()));
          }

          async ['timeoutRemove'](_0x835eb) {
            await _0x1c58a5.game.sleep(_0x835eb);

            const _0x5509bd = parseInt(this.fxHandle);

            isNaN(_0x5509bd) || 'number' != typeof _0x5509bd || (_0x5509bd > 0x0 && _0x1c58a5.game.graphics.doesParticleFxLoopedExist(_0x5509bd) && _0x1c58a5.game.graphics.stopParticleFxLooped(_0x5509bd, true), this.entity && this.entity.handle && _0x1c58a5.game.graphics.removeParticleFxFromEntity(this.entity.handle), _0x5509bd > 0x0 && _0x1c58a5.game.graphics.removeParticleFx(_0x5509bd, true));
          }

          ['remove'](_0x270181, _0x3359f3) {
            const _0x5214eb = parseInt(_0x3359f3);

            isNaN(_0x5214eb) || (_0x1c58a5.game.graphics.doesParticleFxLoopedExist(_0x5214eb) && _0x1c58a5.game.graphics.stopParticleFxLooped(_0x5214eb, true), this.entity && this.entity.handle && _0x1c58a5.game.graphics.removeParticleFxFromEntity(this.entity.handle), _0x1c58a5.game.graphics.removeParticleFx(_0x5214eb, true)), delete _0x270181.fxHandle;
          }

          async ['playOnCoords'](_0x251b5f, _0x79f683, _0xc73aaf, _0x55ba7c = 0x3e8) {
            await this.load(), this.fxCall = _0x1c58a5.game.graphics.setPtfxAssetNextCall(this.fxLib), null != this.rgb.r && _0x1c58a5.game.graphics.setParticleFxNonLoopedColour(this.rgb.r, this.rgb.g, this.rgb.b), this.fxHandle = _0x1c58a5.game.graphics.startParticleFxLoopedAtCoord(this.fxName, _0x251b5f, _0x79f683, _0xc73aaf, 0x0, 0x0, 0x0, this.scale, false, false, false, false), -0x1 != _0x55ba7c && this.timeoutRemove(_0x55ba7c);
          }

          async ['playOnCoordsOnce'](_0x229e15, _0x4f27c3, _0x387ba5, _0x2d230a = 0x3e8) {
            await this.load(), this.fxCall = _0x1c58a5.game.graphics.setPtfxAssetNextCall(this.fxLib), null != this.rgb.r && _0x1c58a5.game.graphics.setParticleFxNonLoopedColour(this.rgb.r, this.rgb.g, this.rgb.b), this.fxHandle = _0x1c58a5.game.graphics.startParticleFxNonLoopedAtCoord(this.fxName, _0x229e15, _0x4f27c3, _0x387ba5, 0x0, 0x0, 0x0, this.scale, false, false, false, false), -0x1 != _0x2d230a && this.timeoutRemove(_0x2d230a);
          }

          async ['playOnEntity'](_0x39b5cb, _0x3228a3 = 0x3e8) {
            await this.load(), this.entity = _0x39b5cb, _0x39b5cb.fxHandle && this.remove(_0x39b5cb, _0x39b5cb.fxHandle), this.fxCall = _0x1c58a5.game.graphics.setPtfxAssetNextCall(this.fxLib), null != this.rgb.r && _0x1c58a5.game.graphics.setParticleFxNonLoopedColour(this.rgb.r, this.rgb.g, this.rgb.b), this.fxHandle = _0x1c58a5.game.graphics.startParticleFxLoopedOnEntity(this.fxName, _0x39b5cb.handle, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, this.scale, false, false, false), _0x39b5cb.fxHandle = this.fxHandle, -0x1 != _0x3228a3 && this.timeoutRemove(_0x3228a3);
          }

          async ['playOnEntityOnce'](_0x2944a5) {
            await this.load(), this.entity = _0x2944a5, _0x2944a5.fxHandle && this.remove(_0x2944a5, _0x2944a5.fxHandle), this.fxCall = _0x1c58a5.game.graphics.setPtfxAssetNextCall(this.fxLib), null != this.rgb.r && _0x1c58a5.game.graphics.setParticleFxNonLoopedColour(this.rgb.r, this.rgb.g, this.rgb.b), this.fxHandle = _0x1c58a5.game.graphics.startParticleFxNonLoopedOnEntity(this.fxName, _0x2944a5.handle, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, this.scale, false, false, false), _0x2944a5.fxHandle = this.fxHandle, this.timeoutRemove(0x3e8);
          }

          async ['playOnEntityBone'](_0x59ffdf, _0x269d0f, _0x3d003c = 0x3e8, _0x22db73 = {}) {
            await this.load(), this.entity = _0x59ffdf, _0x59ffdf.fxHandle && this.remove(_0x59ffdf, _0x59ffdf.fxHandle), this.fxCall = _0x1c58a5.game.graphics.setPtfxAssetNextCall(this.fxLib), null != this.rgb.r && _0x1c58a5.game.graphics.setParticleFxNonLoopedColour(this.rgb.r, this.rgb.g, this.rgb.b), this.fxHandle = _0x1c58a5.game.graphics.startParticleFxLoopedOnEntityBone(this.fxName, _0x59ffdf.handle, this.xOffset, this.yOffset, this.zOffset, this.xRot, this.yRot, this.zRot, 'string' == typeof _0x269d0f ? _0x59ffdf.getBoneIndexByName(_0x269d0f) : _0x59ffdf.getBoneIndex(_0x269d0f), this.scale, false, false, false), _0x59ffdf.fxHandle = this.fxHandle, this.timeoutRemove(_0x3d003c);
          }

          ['setAlpha'](_0x2dad3c = 0xff) {
            this.fxHandle && (this.alpha = _0x2dad3c, _0x1c58a5.game.graphics.setParticleFxLoopedAlpha(this.fxHandle, _0x2dad3c));
          }

        }

        class _0xa45c4b {
          constructor(_0x5abb73, _0x42e18d = {}) {
            this.sound = _0x5abb73, this.volume = _0x42e18d && null != _0x42e18d.volume ? _0x42e18d.volume : 0x64, this.volume = _0x42e18d && null != _0x42e18d.pitch ? _0x42e18d.pitch : 0x0;

            const _0x541154 = _0x13c063.api.getSoundVolume('generalSoundVol', this.volume);

            _0x5bf742.P.emit('playPitchSound', {
              'sound': _0x5abb73,
              'volume': _0x541154,
              'pitch': this.pitch
            });
          }

        }

        class _0x587fdb {
          constructor(_0x3181ba, _0xc44f72, _0x4b0f38, _0x4c4a93 = {}) {
            this.id = _0x3181ba, this.sound = _0xc44f72, this.position = _0x4b0f38, this.volume = _0x4c4a93 && null != _0x4c4a93.volume ? _0x4c4a93.volume : 0x64, this.loop = !(!_0x4c4a93 || null == _0x4c4a93.loop) && _0x4c4a93.loop, this.maxDistance = _0x4c4a93 && null != _0x4c4a93.maxDistance ? _0x4c4a93.maxDistance : 0xa, this.dimension = _0x4c4a93 && null != _0x4c4a93.dimension ? _0x4c4a93.dimension : 0x0, this.rolloffFactor = _0x4c4a93 && null != _0x4c4a93.rolloffFactor ? _0x4c4a93.rolloffFactor : 0x1, this.refDistance = _0x4c4a93 && null != _0x4c4a93.refDistance ? _0x4c4a93.refDistance : 0x1, this.startOffsetPercent = _0x4c4a93.startOffsetPercent, this.pannerAttr = _0x4c4a93.pannerAttr, this.fade = _0x4c4a93.fade, this.syncAudio = _0x4c4a93.syncAudio, this.startedTime = Date.now();

            const _0x2b1726 = _0x13c063.api.getSoundVolume('generalSoundVol', this.volume);

            _0x5bf742.P.emit('play3DSound', {
              'id': _0x3181ba,
              'sound': _0xc44f72,
              'volume': _0x2b1726,
              'loop': this.loop,
              'rolloffFactor': this.rolloffFactor,
              'refDistance': this.refDistance,
              'startOffsetPercent': this.startOffsetPercent,
              'pannerAttr': this.pannerAttr,
              'fade': this.fade,
              'syncAudio': this.syncAudio,
              'maxDistance': this.maxDistance,
              'x': _0x4b0f38.x,
              'y': _0x4b0f38.y,
              'z': _0x4b0f38.z
            });
          }

          ['destroy']() {
            _0x13c063.api.stopSound(this.id), delete _0x28a64f[this.id];
          }

        }

        class _0x1aa0ad {
          constructor(_0x56223f, _0x148bd1, _0x1f51c7, _0x37b819 = {}) {
            if (!_0x1c58a5.players.exists(_0x1f51c7) && !_0x1c58a5.vehicles.exists(_0x1f51c7) && !_0x1c58a5.objects.exists(_0x1f51c7)) return;
            this.id = _0x56223f, this.sound = _0x148bd1, this.entity = _0x1f51c7, this.volume = _0x37b819 && null != _0x37b819.volume ? _0x37b819.volume : 0x64, this.loop = !(!_0x37b819 || null == _0x37b819.loop) && _0x37b819.loop, this.maxDistance = _0x37b819 && null != _0x37b819.maxDistance ? _0x37b819.maxDistance : 0xa, this.rolloffFactor = _0x37b819 && null != _0x37b819.rolloffFactor ? _0x37b819.rolloffFactor : 0x1, this.refDistance = _0x37b819 && null != _0x37b819.refDistance ? _0x37b819.refDistance : 0x1, this.startOffsetPercent = _0x37b819.startOffsetPercent, this.pannerAttr = _0x37b819.pannerAttr, this.fade = _0x37b819.fade, this.startedTime = Date.now();

            const _0x1b691d = _0x1f51c7.position,
                  _0x5d4913 = _0x13c063.api.getSoundVolume('generalSoundVol', this.volume);

            _0x5bf742.P.emit('play3DSound', {
              'id': _0x56223f,
              'sound': _0x148bd1,
              'volume': _0x5d4913,
              'loop': this.loop,
              'rolloffFactor': this.rolloffFactor,
              'refDistance': this.refDistance,
              'startOffsetPercent': this.startOffsetPercent,
              'pannerAttr': this.pannerAttr,
              'fade': this.fade,
              'maxDistance': this.maxDistance,
              'x': _0x1b691d.x,
              'y': _0x1b691d.y,
              'z': _0x1b691d.z
            }), _0x28a64f[_0x56223f] = this;
          }

          ['destroy']() {
            _0x13c063.api.stopSound(this.id), delete _0x28a64f[this.id];
          }

        }

        class _0x514d16 {
          constructor(_0x341778, _0x18d077) {
            this.sound = _0x341778, this.id = _0x18d077 && null != _0x18d077.id ? _0x18d077.id : _0x57e7dc.u.natural(), this.volume = _0x18d077 && null != _0x18d077.volume ? _0x18d077.volume : 0x64, this.loop = !(!_0x18d077 || null == _0x18d077.loop) && _0x18d077.loop, this.isCDN = !(!_0x18d077 || null == _0x18d077.isCDN) && _0x18d077.isCDN, this.autoplay = !_0x18d077 || null == _0x18d077.autoplay || _0x18d077.autoplay, this._pendingLoad, this._pendingLoadResolve;

            const _0x24d487 = _0x13c063.api.getSoundVolume('generalSoundVol', this.volume);

            _0x5bf742.P.emit('playHudSound', {
              'sound': _0x341778,
              'id': this.id,
              'volume': _0x24d487,
              'loop': this.loop,
              'isCDN': this.isCDN,
              'autoplay': this.autoplay
            }), _0x552e61[this.id] = this;
          }

          ['load']() {
            return this._pendingLoad ? this._pendingLoad : this._pendingLoad = new Promise((_0x3d1346, _0x24441e) => {
              this._pendingLoadResolve = _0x3d1346;
            });
          }

          ['onLoad']() {
            this._pendingLoadResolve && this._pendingLoadResolve(), this._pendingLoad = null, this._pendingLoadResolve = null;
          }

        }

        const _0x5aa9ec = _0x144b1d => _0x144b1d / 0xb4 * Math.PI,
              _0x351050 = _0x43ed16 => _0x43ed16 * (0xb4 / Math.PI),
              _0xbeb1c3 = _0x1c5d2a => {
          let _0x6092e0 = _0x1c5d2a;

          for (; _0x6092e0 <= -0xb4;) _0x6092e0 += 0x168;

          for (; _0x6092e0 > 0xb4;) _0x6092e0 -= 0x168;

          return _0x6092e0;
        },
              _0x59ce0d = (_0x435778, _0x56ccf9, _0x5a3452, _0x10e865, _0x4b541c, _0x5e1992 = false) => {
          const _0x194776 = Math.atan2(_0x435778, _0x56ccf9),
                _0x31f4b8 = Math.acos(_0x5a3452),
                _0x23b2df = Math.atan2(_0x10e865, _0x4b541c);

          return new _0x1c58a5.Vector3(_0x5e1992 ? _0x351050(_0x194776) : _0x194776, _0x5e1992 ? _0x351050(_0x31f4b8) : _0x31f4b8, _0x5e1992 ? _0x351050(_0x23b2df) : _0x23b2df);
        },
              _0x227fc9 = (_0x3f9f3e, _0x3a8bca, _0x43ae6f, _0x3f622f, _0x44318c, _0x477ac0 = false) => {
          const _0x589a5f = Math.atan2(_0x3f622f, _0x44318c),
                _0x19112c = Math.asin(_0x43ae6f),
                _0x4aa8cc = Math.atan2(_0x3f9f3e, _0x3a8bca);

          return new _0x1c58a5.Vector3(_0x477ac0 ? _0x351050(_0x589a5f) : _0x589a5f, _0x477ac0 ? _0x351050(_0x19112c) : _0x19112c, _0x477ac0 ? _0x351050(_0x4aa8cc) : _0x4aa8cc);
        };

        class _0x18ff95 {
          constructor(_0x18c5dd = 0x0, _0x575569 = 0x0, _0xdcddc8 = 0x0, _0x354d11 = 0x0) {
            'object' == typeof _0x18c5dd ? (this.x = _0x18c5dd.x, this.y = _0x18c5dd.y, this.z = _0x18c5dd.z, this.w = _0x18c5dd.w) : (this.x = _0x18c5dd, this.y = _0x575569, this.z = _0xdcddc8, this.w = _0x354d11);
          }

          ['slerp'](_0x383110, _0x525ae7) {
            return _0x18ff95.slerp(this, _0x383110, _0x525ae7);
          }

          static ['slerp'](_0x155274, _0x7e8a0e, _0xe5b85c) {
            const _0xbf1634 = new _0x18ff95();

            let _0xcae747,
                _0x4e1a46,
                _0x3b59fc = _0x155274.x * _0x7e8a0e.x + _0x155274.y * _0x7e8a0e.y + _0x155274.z * _0x7e8a0e.z + _0x155274.w * _0x7e8a0e.w,
                _0x2aa839 = false;

            if (_0x3b59fc < 0x0 && (_0x2aa839 = true, _0x3b59fc = -_0x3b59fc), _0x3b59fc > 0.999999) _0x4e1a46 = 0x1 - _0xe5b85c, _0xcae747 = _0x2aa839 ? -_0xe5b85c : _0xe5b85c;else {
              var _0x49d54d = Math.acos(_0x3b59fc),
                  _0x2cd77d = 0x1 / Math.sin(_0x49d54d);

              _0x4e1a46 = Math.sin((0x1 - _0xe5b85c) * _0x49d54d) * _0x2cd77d, _0xcae747 = _0x2aa839 ? -Math.sin(_0xe5b85c * _0x49d54d) * _0x2cd77d : Math.sin(_0xe5b85c * _0x49d54d) * _0x2cd77d;
            }
            return _0xbf1634.x = _0x4e1a46 * _0x155274.x + _0xcae747 * _0x7e8a0e.x, _0xbf1634.y = _0x4e1a46 * _0x155274.y + _0xcae747 * _0x7e8a0e.y, _0xbf1634.z = _0x4e1a46 * _0x155274.z + _0xcae747 * _0x7e8a0e.z, _0xbf1634.w = _0x4e1a46 * _0x155274.w + _0xcae747 * _0x7e8a0e.w, _0xbf1634;
          }

          ['fromEuler'](_0x2d8149) {
            const _0x2c95be = _0x18ff95.fromEuler(_0x2d8149);

            return this.x = _0x2c95be.x, this.y = _0x2c95be.y, this.z = _0x2c95be.z, this.w = _0x2c95be.w, this;
          }

          static ['fromEuler'](_0x24355d, _0x2323b0 = true) {
            const _0x3e3a92 = new _0x18ff95();

            let {
              x: _0x3fd795,
              y: _0x275fb4,
              z: _0x9c79e3
            } = _0x24355d;
            _0x2323b0 && (_0x275fb4 = _0x5aa9ec(_0xbeb1c3(_0x275fb4)), _0x3fd795 = _0x5aa9ec(_0xbeb1c3(_0x3fd795)), _0x9c79e3 = _0x5aa9ec(_0xbeb1c3(_0x9c79e3)));

            const _0x11e340 = _0x3fd795 / 0x2,
                  _0x55c001 = _0x275fb4 / 0x2,
                  _0x1ddb63 = _0x9c79e3 / 0x2,
                  _0x23637f = Math.sin(_0x11e340),
                  _0x198fa0 = Math.cos(_0x11e340),
                  _0x26804e = Math.sin(_0x55c001),
                  _0x370acf = Math.cos(_0x55c001),
                  _0x8d9e5 = Math.sin(_0x1ddb63),
                  _0x19d09d = Math.cos(_0x1ddb63);

            return _0x3e3a92.x = _0x23637f * _0x370acf * _0x19d09d - _0x198fa0 * _0x26804e * _0x8d9e5, _0x3e3a92.y = _0x198fa0 * _0x26804e * _0x19d09d + _0x23637f * _0x370acf * _0x8d9e5, _0x3e3a92.z = _0x198fa0 * _0x370acf * _0x8d9e5 - _0x23637f * _0x26804e * _0x19d09d, _0x3e3a92.w = _0x198fa0 * _0x370acf * _0x19d09d + _0x23637f * _0x26804e * _0x8d9e5, _0x3e3a92;
          }

          ['toEuler'](_0x59af42, _0x3e7175) {
            const _0x4943ea = this;

            switch (_0x59af42) {
              case 'zyx':
                return _0x227fc9(0x2 * (_0x4943ea.x * _0x4943ea.y + _0x4943ea.w * _0x4943ea.z), _0x4943ea.w * _0x4943ea.w + _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, -0x2 * (_0x4943ea.x * _0x4943ea.z - _0x4943ea.w * _0x4943ea.y), 0x2 * (_0x4943ea.y * _0x4943ea.z + _0x4943ea.w * _0x4943ea.x), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y + _0x4943ea.z * _0x4943ea.z, _0x3e7175);

              case 'zyz':
                return _0x59ce0d(0x2 * (_0x4943ea.y * _0x4943ea.z - _0x4943ea.w * _0x4943ea.x), 0x2 * (_0x4943ea.x * _0x4943ea.z + _0x4943ea.w * _0x4943ea.y), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y + _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.y * _0x4943ea.z + _0x4943ea.w * _0x4943ea.x), -0x2 * (_0x4943ea.x * _0x4943ea.z - _0x4943ea.w * _0x4943ea.y), _0x3e7175);

              case 'zxy':
                return _0x227fc9(-0x2 * (_0x4943ea.x * _0x4943ea.y - _0x4943ea.w * _0x4943ea.z), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x + _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.y * _0x4943ea.z + _0x4943ea.w * _0x4943ea.x), -0x2 * (_0x4943ea.x * _0x4943ea.z - _0x4943ea.w * _0x4943ea.y), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y + _0x4943ea.z * _0x4943ea.z, _0x3e7175);

              case 'zxz':
                return _0x59ce0d(0x2 * (_0x4943ea.x * _0x4943ea.z + _0x4943ea.w * _0x4943ea.y), -0x2 * (_0x4943ea.y * _0x4943ea.z - _0x4943ea.w * _0x4943ea.x), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y + _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.x * _0x4943ea.z - _0x4943ea.w * _0x4943ea.y), 0x2 * (_0x4943ea.y * _0x4943ea.z + _0x4943ea.w * _0x4943ea.x), _0x3e7175);

              case 'yxz':
                return _0x227fc9(0x2 * (_0x4943ea.x * _0x4943ea.z + _0x4943ea.w * _0x4943ea.y), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y + _0x4943ea.z * _0x4943ea.z, -0x2 * (_0x4943ea.y * _0x4943ea.z - _0x4943ea.w * _0x4943ea.x), 0x2 * (_0x4943ea.x * _0x4943ea.y + _0x4943ea.w * _0x4943ea.z), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x + _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, _0x3e7175);

              case 'yxy':
                return _0x59ce0d(0x2 * (_0x4943ea.x * _0x4943ea.y - _0x4943ea.w * _0x4943ea.z), 0x2 * (_0x4943ea.y * _0x4943ea.z + _0x4943ea.w * _0x4943ea.x), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x + _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.x * _0x4943ea.y + _0x4943ea.w * _0x4943ea.z), -0x2 * (_0x4943ea.y * _0x4943ea.z - _0x4943ea.w * _0x4943ea.x), _0x3e7175);

              case 'yzx':
                return _0x227fc9(-0x2 * (_0x4943ea.x * _0x4943ea.z - _0x4943ea.w * _0x4943ea.y), _0x4943ea.w * _0x4943ea.w + _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.x * _0x4943ea.y + _0x4943ea.w * _0x4943ea.z), -0x2 * (_0x4943ea.y * _0x4943ea.z - _0x4943ea.w * _0x4943ea.x), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x + _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, _0x3e7175);

              case 'yzy':
                return _0x59ce0d(0x2 * (_0x4943ea.y * _0x4943ea.z + _0x4943ea.w * _0x4943ea.x), -0x2 * (_0x4943ea.x * _0x4943ea.y - _0x4943ea.w * _0x4943ea.z), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x + _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.y * _0x4943ea.z - _0x4943ea.w * _0x4943ea.x), 0x2 * (_0x4943ea.x * _0x4943ea.y + _0x4943ea.w * _0x4943ea.z), _0x3e7175);

              case 'xyz':
                return _0x227fc9(-0x2 * (_0x4943ea.y * _0x4943ea.z - _0x4943ea.w * _0x4943ea.x), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y + _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.x * _0x4943ea.z + _0x4943ea.w * _0x4943ea.y), -0x2 * (_0x4943ea.x * _0x4943ea.y - _0x4943ea.w * _0x4943ea.z), _0x4943ea.w * _0x4943ea.w + _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, _0x3e7175);

              case 'xyx':
                return _0x59ce0d(0x2 * (_0x4943ea.x * _0x4943ea.y + _0x4943ea.w * _0x4943ea.z), -0x2 * (_0x4943ea.x * _0x4943ea.z - _0x4943ea.w * _0x4943ea.y), _0x4943ea.w * _0x4943ea.w + _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.x * _0x4943ea.y - _0x4943ea.w * _0x4943ea.z), 0x2 * (_0x4943ea.x * _0x4943ea.z + _0x4943ea.w * _0x4943ea.y), _0x3e7175);

              case 'xzy':
                return _0x227fc9(0x2 * (_0x4943ea.y * _0x4943ea.z + _0x4943ea.w * _0x4943ea.x), _0x4943ea.w * _0x4943ea.w - _0x4943ea.x * _0x4943ea.x + _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, -0x2 * (_0x4943ea.x * _0x4943ea.y - _0x4943ea.w * _0x4943ea.z), 0x2 * (_0x4943ea.x * _0x4943ea.z + _0x4943ea.w * _0x4943ea.y), _0x4943ea.w * _0x4943ea.w + _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, _0x3e7175);

              case 'xzx':
                return _0x59ce0d(0x2 * (_0x4943ea.x * _0x4943ea.z - _0x4943ea.w * _0x4943ea.y), 0x2 * (_0x4943ea.x * _0x4943ea.y + _0x4943ea.w * _0x4943ea.z), _0x4943ea.w * _0x4943ea.w + _0x4943ea.x * _0x4943ea.x - _0x4943ea.y * _0x4943ea.y - _0x4943ea.z * _0x4943ea.z, 0x2 * (_0x4943ea.x * _0x4943ea.z + _0x4943ea.w * _0x4943ea.y), -0x2 * (_0x4943ea.x * _0x4943ea.y - _0x4943ea.w * _0x4943ea.z), _0x3e7175);
            }
          }

          ['setFromAxisAngle'](_0x2621a9, _0x33546b) {
            const _0x39fbb8 = _0x33546b / 0x2,
                  _0x2c886b = Math.sin(_0x39fbb8);

            return this._x = _0x2621a9.x * _0x2c886b, this._y = _0x2621a9.y * _0x2c886b, this._z = _0x2621a9.z * _0x2c886b, this._w = Math.cos(_0x39fbb8), this;
          }

        }

        class _0x2e4fcb {
          constructor(_0x35f794 = 0x0, _0x3c356a = 0x0, _0x2ae53d = 0x0) {
            this.x = _0x35f794, this.y = _0x3c356a, this.z = _0x2ae53d;
          }

          ['subVectors'](_0xe58cc3, _0x502fc7) {
            return this.x = _0xe58cc3.x - _0x502fc7.x, this.y = _0xe58cc3.y - _0x502fc7.y, this.z = _0xe58cc3.z - _0x502fc7.z, this;
          }

          ['lengthSq']() {
            return this.x * this.x + this.y * this.y + this.z * this.z;
          }

          ['length']() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
          }

          ['normalize']() {
            return this.divideScalar(this.length() || 0x1);
          }

          ['divideScalar'](_0x2e49a0) {
            return this.multiplyScalar(0x1 / _0x2e49a0);
          }

          ['multiplyScalar'](_0x598ded) {
            return this.x *= _0x598ded, this.y *= _0x598ded, this.z *= _0x598ded, this;
          }

          ['crossVectors'](_0x5b8384, _0x53c555) {
            const _0x3be8d5 = _0x5b8384.x,
                  _0x484855 = _0x5b8384.y,
                  _0x11184b = _0x5b8384.z,
                  _0x3f0b0b = _0x53c555.x,
                  _0x2325e6 = _0x53c555.y,
                  _0x1ad886 = _0x53c555.z;
            return this.x = _0x484855 * _0x1ad886 - _0x11184b * _0x2325e6, this.y = _0x11184b * _0x3f0b0b - _0x3be8d5 * _0x1ad886, this.z = _0x3be8d5 * _0x2325e6 - _0x484855 * _0x3f0b0b, this;
          }

        }

        class _0x13cb11 {
          constructor() {
            this.minX = Number.POSITIVE_INFINITY, this.minY = Number.POSITIVE_INFINITY, this.maxX = Number.NEGATIVE_INFINITY, this.maxY = Number.NEGATIVE_INFINITY;
          }

          ['growBy'](_0x2fd808) {
            this.minX -= _0x2fd808, this.minY -= _0x2fd808, this.maxX += _0x2fd808, this.maxY += _0x2fd808;
          }

          get ['left']() {
            return this.minX;
          }

          get ['top']() {
            return this.minY;
          }

          get ['right']() {
            return this.maxX;
          }

          get ['bottom']() {
            return this.maxY;
          }

          get ['width']() {
            return this.maxX - this.minX;
          }

          get ['height']() {
            return this.maxY - this.minY;
          }

          get ['cx']() {
            return (this.minX + this.maxX) / 0x2;
          }

          get ['cy']() {
            return (this.minY + this.maxY) / 0x2;
          }

          ['addPoint'](_0x427598, _0x688b0d) {
            let _0xc435f = _0x427598,
                _0x155ed0 = _0x688b0d;
            undefined === _0x155ed0 && (_0xc435f = _0x427598.x, _0x155ed0 = _0x427598.y), _0xc435f < this.minX && (this.minX = _0xc435f), _0xc435f > this.maxX && (this.maxX = _0xc435f), _0x155ed0 < this.minY && (this.minY = _0x155ed0), _0x155ed0 > this.maxY && (this.maxY = _0x155ed0);
          }

        }

        class _0xfd3b26 {
          constructor() {
            this.flags = 0x0;
          }

          ['clear']() {
            this.flags = 0x0;
          }

          ['add'](_0x224cfc) {
            this.flags |= _0x224cfc;
          }

          ['remove'](_0x26225c) {
            this.flags &= ~_0x26225c;
          }

          ['has'](_0xbb25f4) {
            return (this.flags & _0xbb25f4) === _0xbb25f4;
          }

          ['toggle'](_0x4dfce1) {
            this.flags ^= _0x4dfce1;
          }

        }

        class _0x432d52 {
          constructor(_0x2e0ad8, _0x143a0b = 'fadein', _0x113512 = 0x3e8) {
            this.entity = _0x2e0ad8, this.entityType = _0x2e0ad8.type, this.time = _0x113512, this.type = _0x143a0b, this.startTime = Date.now(), this.active = false, this.pendingPromise = null, this.resolvePromise = null, _0x3c417e.push(this);
          }

          ['renderEvent']() {
            if (!this.active) return;

            const _0x4e22a6 = Date.now(),
                  _0x3b0e47 = Math.min(0x1, (_0x4e22a6 - this.startTime) / this.time),
                  _0x325156 = _0x13c063.api.lerp('fadein' === this.type ? 0x0 : 0xff, 'fadein' === this.type ? 0xff : 0x0, _0x3b0e47);

            let _0x2ebe95 = false;

            switch (this.entityType) {
              case 'player':
                _0x2ebe95 = !!_0x1c58a5.players.exists(this.entity);
                break;

              case 'vehicle':
                _0x2ebe95 = !!_0x1c58a5.vehicles.exists(this.entity);
                break;

              case 'ped':
                _0x2ebe95 = !!_0x1c58a5.peds.exists(this.entity);
            }

            return _0x2ebe95 && this.entity.setAlpha(Math.round(_0x325156 >= 0xfd ? 0xff : _0x325156)), _0x3b0e47 >= 0.999999 || !_0x2ebe95 ? (this.active = false, this.resolvePromise && this.resolvePromise(), delete this.pendingPromise, void _0x3c417e.splice(_0x3c417e.indexOf(this), 0x1)) : undefined;
          }

          ['start']() {
            return this.active = true, this.pendingPromise = new Promise(_0x38386e => {
              this.resolvePromise = _0x38386e;
            });
          }

        }

        _0x1c58a5.events.add('time.every01Sec', () => {
          if (!_0x2746aa.globalBrowser || !_0x2746aa.globalBrowser.isReady) return;

          const _0x2d2262 = _0x1c58a5.players.local.position,
                _0xd3502b = _0x2a56db.X.getCoord(),
                _0x1bccc2 = _0x2a56db.X.getRot(0x2),
                _0x5a648f = _0x13c063.api.midVector(_0x2d2262, _0xd3502b),
                {
            forward: _0x30aa37,
            up: _0x462047
          } = _0x13c063.api.principalAxesToOrientation(_0x1bccc2.x, _0x1bccc2.y, _0x1bccc2.z),
                _0x41aa89 = _0x13c063.api.roundNumber(_0x5a648f.x),
                _0xf8a4ac = _0x13c063.api.roundNumber(_0x5a648f.y),
                _0x25caa6 = _0x13c063.api.roundNumber(_0x5a648f.z),
                _0x4117bd = _0x13c063.api.roundNumber(_0x30aa37.x),
                _0x509690 = _0x13c063.api.roundNumber(_0x30aa37.y),
                _0x31de7f = _0x13c063.api.roundNumber(_0x30aa37.z),
                _0x356c4b = _0x13c063.api.clamp(_0x13c063.api.roundNumber(_0x462047.x), -0x1, 0x1),
                _0xac52e6 = _0x13c063.api.clamp(_0x13c063.api.roundNumber(_0x462047.y), -0x1, 0x1),
                _0x1859d5 = _0x13c063.api.clamp(_0x13c063.api.roundNumber(_0x462047.z), -0x1, 0x1);

          _0x5bf742.P.emit('updatePlayerSoundPos', {
            'px': _0x41aa89,
            'py': _0xf8a4ac,
            'pz': _0x25caa6,
            'ofx': _0x4117bd,
            'ofy': _0x509690,
            'ofz': _0x31de7f,
            'oux': _0x356c4b,
            'ouy': _0xac52e6,
            'ouz': _0x1859d5
          });

          for (const _0xe120b4 in _0x28a64f) {
            const _0x9752bc = _0x28a64f[_0xe120b4];

            if (!_0x9752bc.loop && _0x9752bc.startedTime > 0x0 && Date.now() - _0x9752bc.startedTime > 0x124f80) {
              _0x9752bc.destroy();

              continue;
            }

            _0x9752bc.maxDistance > 0x0 && !_0x9752bc.isMutedFarAway && _0x9752bc.position && _0x13c063.api.vdist2(_0x5a648f, _0x9752bc.position) > 0x2 * _0x9752bc.maxDistance ? (_0x9752bc.isMutedFarAway = true, _0x5bf742.P.emit('setMuted', {
              'id': _0x9752bc.id,
              'mute': true
            })) : _0x9752bc.isMutedFarAway && (_0x9752bc.isMutedFarAway = false, _0x5bf742.P.emit('setMuted', {
              'id': _0x9752bc.id,
              'mute': false
            }));
            const _0x507e89 = _0x9752bc.entity;

            if (_0x507e89) {
              if (_0x1c58a5.players.exists(_0x507e89) || _0x1c58a5.vehicles.exists(_0x507e89) || _0x1c58a5.objects.exists(_0x507e89)) {
                const _0x1c859e = new _0x1c58a5.Vector3(_0x13c063.api.roundNumber(_0x507e89.position.x), _0x13c063.api.roundNumber(_0x507e89.position.y), _0x13c063.api.roundNumber(_0x507e89.position.z));

                _0x5bf742.P.emit('updateSoundPos', {
                  'id': _0x9752bc.id,
                  'x': _0x1c859e.x,
                  'y': _0x1c859e.y,
                  'z': _0x1c859e.z,
                  'hasLos': _0x507e89 instanceof _0x1c58a5.Player ? _0x507e89.hasLos : _0x1c58a5.players.local.hasClearLosTo(_0x507e89.handle, 0x11)
                });
              } else _0x9752bc.destroy();
            }
          }
        }), _0x1c58a5.events.add('sounds.trigger', (_0x4a2070, _0x5aebfb) => {
          switch (_0x4a2070) {
            case 'onEnd':
              {
                const _0xc0a587 = _0x28a64f[_0x5aebfb];
                if (!_0xc0a587) return;

                _0xc0a587.destroy();

                break;
              }

            case 'onLoad':
              {
                const _0x20ca4f = _0x552e61[_0x5aebfb];
                if (!_0x20ca4f) return;

                _0x20ca4f.onLoad();

                break;
              }
          }
        }), _0x1c58a5.events.add('render', () => {
          if (_0x3db12e.size) {
            for (const _0x507eb3 of _0x3db12e) 'function' == typeof _0x507eb3 && _0x507eb3();
          }

          if (_0x3c417e.length) {
            for (const _0x29f429 of _0x3c417e) _0x29f429.renderEvent();
          }
        });
      },
      0x13bd2: (_0x118eed, _0x37cba4, _0x530cf2) => {
        'use strict';

        const a0_0x8e134 = {
          _0x1e4f58: 0x2488,
          _0x277bde: 0x1a3,
          _0xd91b4b: 0x23cd
        },
              a0_0x562b8c = {
          _0x204678: 0x535
        },
              a0_0x1999ed = {
          _0x2cff99: 0x535
        },
              a0_0xc90638 = {
          _0x31dd31: 0x535,
          _0xaa5711: 0x1a07
        },
              a0_0x13f9d0 = {
          _0x159d9d: 0x16c5,
          _0x44d169: 0x535,
          _0x4dc69c: 0x1295,
          _0x1004a2: 0x1d66,
          _0x534e72: 0x1870,
          _0x6f4f6a: 0x168f,
          _0x1eef00: 0x235b,
          _0x5d6474: 0x1985,
          _0x2e061c: 0x1f30,
          _0x5c2e80: 0x1870,
          _0x2ccd09: 0x1985,
          _0x5aa25f: 0x40d,
          _0x2f3579: 0x9c3,
          _0x655f08: 0xfc3,
          _0xd1e0ee: 0xfc3,
          _0x1f9e92: 0x9d7,
          _0x5149ee: 0x1bcb
        },
              a0_0x26f58e = {
          _0x4b870f: 0x535,
          _0x3d00b4: 0x8a1
        },
              a0_0x23c5f0 = {
          _0x546157: 0x637
        },
              a0_0x3f255c = {
          _0x13f42c: 0x1870,
          _0x4aca4c: 0x2ba,
          _0x549cd1: 0x2530,
          _0x36240c: 0x1366,
          _0x4a1cfa: 0x1ed,
          _0x5e3c38: 0x2530,
          _0x46b48a: 0x1366,
          _0xa08980: 0x16c5,
          _0x10a84b: 0x13b0,
          _0x428028: 0x535,
          _0x5d1551: 0x52c,
          _0x403744: 0x185e,
          _0x3a73e4: 0x2072,
          _0x3e92a2: 0xd79,
          _0x324d11: 0x317,
          _0x53f10a: 0x40d,
          _0x4b30b8: 0xf82,
          _0x21b2c1: 0x2c5,
          _0x2b2cd9: 0x2521,
          _0x57d6da: 0x1a4a,
          _0x215c3d: 0x1d66,
          _0x317b0e: 0x1d66,
          _0x2d6f15: 0xf86,
          _0x8eacdd: 0x1d66,
          _0x229216: 0x235b,
          _0x590a5c: 0x185e,
          _0x14a546: 0x535,
          _0x1d0b83: 0x1cd8,
          _0x27935b: 0xd79,
          _0x2533fb: 0x1d66,
          _0x59a9b6: 0x17f
        },
              a0_0x5db465 = {
          _0x3bd94f: 0x1e35,
          _0x2179c6: 0x12cc,
          _0x5c0ae9: 0x535,
          _0x1ab506: 0x1b8a,
          _0x29c541: 0x1d66,
          _0x30bb18: 0x1acd,
          _0x3d5603: 0x1c0f,
          _0x1486df: 0x18c8,
          _0x1d9efc: 0x18c8,
          _0x100626: 0x1c72,
          _0x38a8d2: 0x726,
          _0x4e88ba: 0xf2f,
          _0x4ccd2d: 0x1c72
        },
              a0_0x56131d = {
          _0x22aa50: 0x212a,
          _0x206d7c: 0xf71,
          _0x17d5a3: 0x212a
        },
              a0_0x5afc81 = {
          _0x11df6d: 0x1820,
          _0x28b0f6: 0x17ad
        },
              a0_0x5d7b30 = {
          _0x142cb4: 0x245,
          _0x50cc95: 0x535,
          _0x1ccfed: 0x1349,
          _0x1c937b: 0x1e9d,
          _0x1b6b93: 0x1352
        },
              a0_0x5d79aa = {
          _0x32bcd2: 0x529,
          _0x2f77e6: 0x1985
        },
              a0_0x2ad76b = {
          _0x24dea3: 0x1291,
          _0x2a300c: 0x213c
        },
              a0_0x49d128 = {
          _0x13d010: 0x1820,
          _0x2cf095: 0x1291,
          _0x1eed21: 0x535,
          _0x46e7d9: 0x1e01
        },
              a0_0x163849 = {
          _0x2beee4: 0x235b,
          _0xc7c611: 0x1820,
          _0x5010cf: 0x2606,
          _0x1f28d7: 0x235b,
          _0x4ced68: 0x185e,
          _0x11c228: 0xa26,
          _0x30be85: 0xa26,
          _0x4b0e2f: 0xa26,
          _0xcdf5f4: 0x628,
          _0x490ec6: 0x2001,
          _0x23e65f: 0x2001
        },
              a0_0xbf4a0d = {
          _0x426bc4: 0xf05
        },
              a0_0x3b3966 = {
          _0x30c364: 0x1549
        },
              a0_0x114522 = {
          _0x9a74c1: 0x1462
        },
              a0_0x45810c = {
          _0xe7d99c: 0x1d66,
          _0x663590: 0x15e0,
          _0x5c0c98: 0xcf4
        },
              a0_0x340cb7 = {
          _0x17e94b: 0x72a,
          _0x50bd64: 0x535,
          _0x38005f: 0x1985,
          _0x16d2cc: 0x19c6,
          _0x5e55db: 0xffb,
          _0x268724: 0x1d66,
          _0x5c5077: 0xf8a,
          _0xc6c949: 0xa61,
          _0x5736db: 0x1525,
          _0x21310d: 0x535,
          _0x4e43a3: 0x2080
        },
              a0_0x50bfcf = {
          _0x109f5b: 0x1820,
          _0x457458: 0x1291,
          _0x36ec68: 0x1063
        },
              a0_0x2e432a = {
          _0x4c9c51: 0x235b,
          _0x43f406: 0x185e
        },
              a0_0x5828e3 = {
          _0x1fa319: 0x2606,
          _0x42ce0e: 0x1d66,
          _0x3e4d26: 0x186b,
          _0x50dd60: 0x1f30,
          _0x7e636a: 0x235b,
          _0x27f9be: 0x263f,
          _0x4c24a9: 0x235b,
          _0x48dd09: 0x185e,
          _0x5e595b: 0x2530,
          _0x6c0e13: 0x220f,
          _0x2b8c18: 0x9ab,
          _0x1f4957: 0x1f30,
          _0x24fcc8: 0x208
        },
              a0_0x3ebd1a = {
          _0x4c4708: 0x1291,
          _0x238752: 0x16c5,
          _0x9c1d56: 0x235b,
          _0x4977d2: 0x185e,
          _0x5abb5e: 0x235b,
          _0x144591: 0x220f
        },
              a0_0x54749f = {
          _0xaee713: 0x1291,
          _0x49f73c: 0x2376,
          _0x58e3a4: 0x235b,
          _0x4a56be: 0x185e,
          _0x45a754: 0x235b,
          _0x543b9c: 0x185e,
          _0x3c0488: 0x4b9,
          _0x5418f5: 0x2530,
          _0x5c27f3: 0x220f
        },
              a0_0x4c2476 = {
          _0x586150: 0x235b,
          _0x960a64: 0x16c5,
          _0x530c71: 0x235b,
          _0x169fde: 0x1d48,
          _0x4a6510: 0xe2a,
          _0x1ca089: 0x1d48,
          _0x4305ca: 0xe2a
        },
              a0_0xe81aad = {
          _0x249cf3: 0x1d66
        },
              a0_0x3ac241 = {
          _0x112c52: 0x235b,
          _0xe3a7e3: 0x16c5,
          _0x5e8867: 0xc8c
        },
              a0_0xcca55b = {
          _0x3e4e28: 0x1366,
          _0x3b7ac6: 0x16c5,
          _0x7c3390: 0x535,
          _0x3d816c: 0x2530
        },
              a0_0x10ef28 = {
          _0x3cdae3: 0x1291,
          _0x24c131: 0x16c5,
          _0x3018a0: 0x1820,
          _0x59c6bb: 0x1f30,
          _0x50a18c: 0x24c7,
          _0x5de608: 0x12da,
          _0x574fc7: 0x4fc,
          _0x254bae: 0x1d55
        },
              a0_0x19ecc9 = {
          _0x26bdf5: 0x1147
        },
              a0_0x5768b5 = {
          _0x4da66d: 0x535
        },
              a0_0x75915b = {
          _0x1aa16c: 0x13b0
        },
              a0_0x42421f = {
          _0x575eee: 0x235b,
          _0x20e0c7: 0x1291
        },
              a0_0x3a9279 = {
          _0x5ad8f3: 0x1291,
          _0x1b5892: 0x235b,
          _0x5b6af1: 0x16c5,
          _0xc444b7: 0x535,
          _0x4ba4ff: 0x1e6
        },
              a0_0x497e2a = {
          _0x42285b: 0x2530
        },
              a0_0x3deb17 = {
          _0x9a53bc: 0xf2f,
          _0x47a3db: 0x169e
        },
              a0_0x107a1c = {
          _0x26a919: 0xf2f,
          _0x1a4866: 0x1b3a
        },
              a0_0x166a7e = {
          _0xd2542d: 0x16c5,
          _0x508f4f: 0x1937,
          _0x5b553a: 0x1d66,
          _0x24a791: 0x214
        },
              a0_0x3086b7 = {
          _0x5e7407: 0x1d66
        },
              a0_0x12e767 = {
          _0xbcc766: 0x1e35
        };

        _0x530cf2.r(_0x37cba4);

        var _0x4aba93 = _0x530cf2(0x16a21),
            _0x622010 = _0x530cf2(0xb2e6),
            _0x1c6d34 = _0x530cf2(0x161cd);

        const _0x1fb957 = _0x1c6d34.players.local,
              _0x357783 = {
          'enabled': false,
          'escortingTo': null,
          'escortInterval': null
        },
              _0x21df47 = () => {
          _0x357783.enabled && (_0x357783.enabled = false, _0x357783.escortingTo = null, _0x357783.escortInterval && clearInterval(_0x357783.escortInterval), _0x357783.escortInterval = null, _0x1fb957.clearTasks());
        };

        var _0x126d84 = _0x530cf2(0x1d7e),
            _0x2f2704 = _0x530cf2(0x14b31),
            _0x43d58f = _0x530cf2(0x17df3),
            _0x408668 = _0x530cf2(0x12a76),
            _0x4cc487 = _0x530cf2(0x161cd);

        const {
          Sounds3DPos: _0x3fe839,
          Sounds3DEntity: _0x237a14,
          Sounds2D: _0x3156b3,
          Sounds2DPitch: _0x36e175
        } = _0x530cf2(0xd194),
              {
          getTravelDistance: _0x4f3b92
        } = _0x530cf2(0x8946);

        _0x4cc487.events.add('api.setBlur', (_0x1db36c = 0x64) => {
          _0x4cc487.game.graphics.transitionToBlurred(_0x1db36c);
        }), _0x4cc487.events.add('api.removeBlur', (_0x2b6bf2 = 0x64) => {
          _0x4cc487.game.graphics.transitionFromBlurred(_0x2b6bf2);
        }), _0x4cc487.events.add('api.playSoundFromEntity', (_0x1d3c03, _0x3446e7, _0x54408f, _0x218101, _0x47fe01) => {
          const _0x13ddbc = _0x4cc487.players.atRemoteId(_0x1d3c03);

          _0x4cc487.players.exists(_0x13ddbc) && (_0x54408f || (_0x54408f = _0x4cc487.game.audio.getSoundId()), _0x3446e7 && _0x4cc487.game.audio.setAudioFlag(_0x3446e7, true), _0x4cc487.game.audio.playSoundFromEntity(_0x54408f, _0x218101, _0x13ddbc.handle, _0x47fe01, true, 0x0));
        }), _0x4cc487.events.add('api.playSoundFromCoord', (_0x37c2dd = -0x1, _0x50bd7b, _0xdeddea, _0x279a2e, _0x1c2531, _0x9b30ed, _0x39dec1, _0x39c29b, _0x26440d) => {
          _0x4cc487.game.audio.playSoundFromCoord(_0x37c2dd, _0x50bd7b, _0xdeddea, _0x279a2e, _0x1c2531, _0x9b30ed, _0x39dec1, _0x39c29b, _0x26440d);
        }), _0x4cc487.events.add('api.playSoundFrontend', (_0x43a463, _0x3b0993) => {
          _0x4cc487.game.audio.playSoundFrontend(-0x1, _0x43a463, _0x3b0993, true);
        }), _0x4cc487.events.add('api.taskLookAt', (_0x3b07ec, _0x32ae47, _0x8cdcfe = 0x3e8) => {
          _0x3b07ec.taskLookAt(_0x32ae47.handle, _0x8cdcfe, 0x0, 0x0);
        }), _0x4cc487.events.add('api.taskPlayAnimAdvanced', (_0x4d2f4f, _0xd77c5, _0x35e4b7, _0x231ca0, _0x585991, _0x1b833f, _0x10eb00, _0x57b103 = 0x160a, _0x581ec6 = true, _0x540385 = false, _0x214016 = false, _0x16ed0e = null) => {
          const a0_0x394af0 = {
            _0x451a61: 0x7b9,
            _0x595f19: 0x2530,
            _0x799cbe: 0x185e,
            _0x2ff8d7: 0x1d7c,
            _0x340250: 0x2379,
            _0x3824a3: 0x1d66,
            _0x5a4f2a: 0x1fe9,
            _0x4e7c2b: 0x1870,
            _0x428a12: 0xbc8,
            _0x11de12: 0x4fc,
            _0x3d7e6e: 0x235b,
            _0x3e9c4e: 0x185e,
            _0x44c4d6: 0x235b,
            _0x3502fe: 0x185e
          },
                _0x543712 = _0x4cc487.players.atRemoteId(_0x4d2f4f);

          _0x4cc487.players.exists(_0x543712) && (!_0x214016 && _0x543712.vehicle || _0x4cc487.game.streaming.doesAnimDictExist(_0xd77c5) && _0x4aba93.api.requestAnimDict(_0xd77c5).then(async () => {
            if (_0x543712.taskPlayAnimAdvanced(_0xd77c5, _0x35e4b7, parseFloat(_0x231ca0), parseFloat(_0x585991), parseFloat(_0x1b833f), 0x0, 0x0, parseFloat(_0x10eb00), 0x8, -0x8, -0x1, _0x57b103, 0x0, 0x2, 0x1), _0x16ed0e && _0x543712.handle === _0x4cc487.players.local.handle && _0x4cc487.attachments.addLocal(_0x4cc487.game.joaat(_0x16ed0e)), !_0x581ec6) {
              const _0x4d7245 = _0x4cc487.game.entity.getEntityAnimDuration(_0xd77c5, _0x35e4b7);

              _0x4d7245 > 0x0 && (await _0x4cc487.game.sleep(0x3e8 * _0x4d7245 - 0x64), _0x540385 ? _0x543712.clearTasksImmediately() : _0x4cc487.game.task.clearPedSecondaryTask(_0x4cc487.players.local.handle)), _0x16ed0e && _0x543712.handle === _0x4cc487.players.local.handle && _0x4cc487.attachments.removeLocal(_0x4cc487.game.joaat(_0x16ed0e));
            }
          }).catch(_0x2dfa6c => _0x4aba93.api.notify('ANIM ERR: ' + _0x2dfa6c)));
        }), _0x4cc487.events.add('api.stopAnimTask', (_0xc82596, _0x587574, _0x5848f1) => {
          if (!_0x587574 || !_0x5848f1) return;

          const _0x10ed8e = _0x4cc487.players.atRemoteId(_0xc82596);

          _0x4cc487.players.exists(_0x10ed8e) && _0x10ed8e.stopAnimTask(_0x587574, _0x5848f1, 0x1);
        }), _0x4cc487.events.add('api.setMovementClipset', async (_0x5a430c, _0x4396a5, _0x33ef4c = 0x1) => {
          const _0x49f427 = _0x4cc487.players.atRemoteId(_0x5a430c);

          _0x4cc487.players.exists(_0x49f427) && (await _0x4aba93.api.requestAnimSet(_0x4396a5), _0x4cc487.players.exists(_0x49f427) && _0x49f427.setMovementClipset(_0x4396a5, _0x33ef4c));
        }), _0x4cc487.events.add('api.resetMovementClipset', _0xf8f5a5 => {
          const _0x38d2cc = _0x4cc487.players.atRemoteId(_0xf8f5a5);

          _0x4cc487.players.exists(_0x38d2cc) && _0x38d2cc.resetMovementClipset(0x0);
        }), _0x4cc487.events.add('api.toggleHud', _0x10c89e => {
          _0x4aba93.api.toggleHud(_0x10c89e);
        }), _0x4cc487.events.add('api.toggleRadar', _0x50d41b => {
          _0x4aba93.api.toggleRadar(_0x50d41b);
        }), _0x4cc487.events.add('api.toggleChat', _0x1b91da => {
          _0x4aba93.api.toggleChat(_0x1b91da);
        }), _0x4cc487.events.add('api.toggleSpeedo', _0x328b9e => {
          _0x4aba93.api.toggleSpeedo(_0x328b9e);
        }), _0x4cc487.events.add('api.moveSkyCamera', (_0x1c95ca, _0x3f1943, _0xc11d24) => {
          _0x4aba93.api.moveSkyCamera(_0x1c95ca, _0x3f1943, _0xc11d24);
        }), _0x4cc487.events.add('api.vehicle.trunk.attachPlayer', async (_0x531917, _0x3c6d9f, _0x3e5ad3 = false) => {
          const _0x118755 = _0x4cc487.players.atRemoteId(_0x531917),
                _0x2c9ac8 = _0x4cc487.vehicles.atRemoteId(_0x3c6d9f);

          if (_0x3e5ad3 && (await _0x4cc487.game.sleep(0x3e8)), await _0x4aba93.api.requestAnimDict('timetable@floyd@cryingonbed@base'), !_0x4cc487.players.exists(_0x118755) || !_0x4cc487.vehicles.exists(_0x2c9ac8)) return;

          const _0x1c1548 = _0x4aba93.api.getVehicleLength(_0x2c9ac8);

          _0x118755.attachTo(_0x2c9ac8.handle, -0x1, 0x0, -_0x1c1548 / 0x2 + 0.5, 0.4, 0x0, 0x0, 0x0, false, false, false, false, 0x14, true), _0x118755.clearTasks(), _0x4cc487.game.task.clearPedSecondaryTask(_0x118755.handle);
        }), _0x4cc487.events.add('api.vehicle.trunk.detachPlayer', async (_0x5e28aa, _0x149b88) => {
          const _0x9e169e = _0x4cc487.players.atRemoteId(_0x5e28aa);

          if (!_0x4cc487.players.exists(_0x9e169e)) return;

          const _0x53bbd5 = _0x4cc487.vehicles.atRemoteId(_0x149b88);

          let _0x45908b = _0x9e169e.position;
          _0x53bbd5 && _0x4cc487.vehicles.exists(_0x53bbd5) && _0x53bbd5.remoteId === _0x149b88 && (_0x45908b = _0x53bbd5.getOffsetFromInWorldCoords(0x0, -0x3, 0x0)), _0x9e169e.detach(true, true), _0x9e169e.clearTasks(), _0x4cc487.game.task.clearPedSecondaryTask(_0x9e169e.handle), _0x4aba93.api.setPlayerPos(_0x9e169e, new _0x4cc487.Vector3(_0x45908b.x, _0x45908b.y, _0x45908b.z));
        }), _0x4cc487.events.add('api.setPlayerPos', (_0x44845e, _0x2d8c88, _0x187845, _0x9374a1, _0x420c2c) => {
          _0x4aba93.api.setPlayerPos(_0x4cc487.players.local, new _0x4cc487.Vector3(_0x44845e, _0x2d8c88, _0x187845), _0x9374a1, _0x420c2c);
        }), _0x4cc487.events.add('api.playPedSpeech', (_0x18a95b, _0x1560ef, _0x58cb8c, _0x41ff40 = 'SPEECH_PARAMS_FORCE_SHOUTED') => {
          if (null == _0x18a95b) return;

          let _0x4f7851 = _0x4cc487.peds.at(_0x18a95b);

          if (_0x4cc487.peds.exists(_0x4f7851) && _0x4f7851) {
            if (_0x1560ef && _0x58cb8c) _0x4cc487.game.audio.playAmbientSpeechWithVoice(_0x4f7851.handle, _0x1560ef, _0x58cb8c, _0x41ff40, false);else {
              if (_0x4f7851.cData && _0x4f7851.cData.actions && _0x4f7851.cData.actions.initSpeech) {
                let _0x1a08f7 = _0x4f7851.cData.actions.initSpeech;

                _0x4cc487.game.audio.playAmbientSpeechWithVoice(_0x4f7851.handle, _0x1a08f7[0x0], _0x1a08f7[0x1], isNaN(_0x1a08f7[0x2]) ? _0x1a08f7[0x2] : parseInt(_0x1a08f7[0x2]), false);
              }
            }
          }
        }), _0x4cc487.events.add('api.playPedAmbientSpeech', (_0x4999fa, _0x5e32c0, _0x23c422 = 'SPEECH_PARAMS_FORCE_NORMAL_CLEAR') => {
          if (null == _0x4999fa) return;

          let _0x1a27ab = _0x4cc487.peds.at(_0x4999fa);

          _0x4cc487.peds.exists(_0x1a27ab) && _0x1a27ab && _0x5e32c0 && _0x4aba93.api.invokeNative('_PLAY_AMBIENT_SPEECH1', _0x1a27ab.handle, _0x5e32c0, _0x23c422);
        }), _0x4cc487.events.add('api.playAmbientSpeechWithVoice', (_0x42b1e0, _0x27c4b9, _0x66a9d4, _0x286326 = 'SPEECH_PARAMS_FORCE_SHOUTED') => {
          const _0x132d3a = _0x4cc487.players.atRemoteId(_0x42b1e0);

          _0x4cc487.players.exists(_0x132d3a) && _0x27c4b9 && _0x4cc487.game.audio.playAmbientSpeechWithVoice(_0x132d3a.handle, _0x27c4b9, _0x66a9d4, _0x286326, true);
        }), _0x4cc487.events.add('api.taskStartScenarioInPlace', (_0x557a47, _0x58fcd8, _0x257f40 = 0x0, _0x13f93b = false) => {
          const _0x5eeee3 = _0x4cc487.players.atRemoteId(_0x557a47);

          _0x4cc487.players.exists(_0x5eeee3) && _0x4aba93.api.invokeNative('TASK_START_SCENARIO_IN_PLACE', _0x5eeee3.handle, _0x58fcd8, _0x257f40, _0x13f93b);
        }), _0x4cc487.events.add('api.cuff', _0x45f9da => {
          const _0x122b0e = _0x4cc487.players.atRemoteId(_0x45f9da);

          _0x4cc487.players.exists(_0x122b0e) && _0x122b0e.setEnableHandcuffs(true);
        }), _0x4cc487.events.add('api.uncuff', _0xda63d2 => {
          const _0x523f7d = _0x4cc487.players.atRemoteId(_0xda63d2);

          _0x4cc487.players.exists(_0x523f7d) && (_0x523f7d.setEnableHandcuffs(false), _0x523f7d.uncuff());
        }), _0x4cc487.events.add('api.detachTrailer', _0x553b91 => {
          const _0x2e1281 = _0x4cc487.vehicles.atRemoteId(_0x553b91);

          _0x4cc487.vehicles.exists(_0x2e1281) && _0x2e1281.detachFromTrailer();
        }), _0x4cc487.events.add('api.attachTrailer', (_0x11f493, _0x4e41f2) => {
          const a0_0x3bf2ed = {
            _0xd0a63e: 0x16c5,
            _0x200cbd: 0x2530,
            _0x49634e: 0x12e0,
            _0x4730f5: 0x535,
            _0xc3fd22: 0x1985,
            _0x4c6670: 0x2530
          },
                _0x5d47f4 = _0x4cc487.vehicles.atRemoteId(_0x11f493),
                _0x17c751 = _0x4cc487.vehicles.atRemoteId(_0x4e41f2);

          _0x4cc487.vehicles.exists(_0x5d47f4) && _0x4cc487.vehicles.exists(_0x17c751) && (_0x530cf2.g.trailerAttachTimer && (_0x530cf2.g.trailerAttachTimer.cancel(), _0x530cf2.g.trailerAttachTimer = undefined), _0x4aba93.api.invokeNative('ATTACH_VEHICLE_TO_TRAILER', _0x5d47f4.handle, _0x17c751.handle, 0x3e8), _0x530cf2.g.trailerAttachTimer = _0x4cc487.game.sleep(0x5dc).then(() => {
            _0x4cc487.vehicles.exists(_0x5d47f4) && _0x5d47f4.handle && (_0x5d47f4.isAttachedToTrailer() || _0x4aba93.api.invokeNative('ATTACH_VEHICLE_TO_TRAILER', _0x5d47f4.handle, _0x17c751.handle, 0x3e8));
          }));
        }), _0x4cc487.events.add('api.fadeOut', (_0x1fee20 = 0x0) => {
          _0x4cc487.game.cam.doScreenFadeOut(_0x1fee20);
        }), _0x4cc487.events.add('api.fadeIn', (_0x20241d = 0x0) => {
          _0x4cc487.game.cam.doScreenFadeIn(_0x20241d);
        }), _0x4cc487.events.add('api.taskLeaveVehicle', () => {
          _0x4cc487.players.local.vehicle && _0x4cc487.players.local.taskLeaveVehicle(_0x4cc487.players.local.vehicle.handle, 0x0);
        }), _0x4cc487.events.add('api.taskFollowToOffsetOf', (_0x5f11b0, _0x1d8c65) => {
          const a0_0x165f18 = {
            _0x4255e1: 0x1684,
            _0x5cd1fa: 0x235b,
            _0x41fd15: 0x16c5,
            _0x53098b: 0x1a50,
            _0x505a0f: 0x1684,
            _0x246172: 0x535,
            _0x35d0a6: 0x1619,
            _0x60bfa2: 0x1619,
            _0x263096: 0x3e4,
            _0x485de3: 0xef8
          };

          var _0x2877d2;

          _0x4cc487.players.exists(_0x1d8c65) && (_0x5f11b0 ? _0x1d8c65 && _0x4cc487.players.exists(_0x1d8c65) && (_0x2877d2 = _0x1d8c65, _0x357783.enabled && (_0x357783.escortInterval && clearInterval(_0x357783.escortInterval), _0x357783.escortInterval = null, _0x357783.enabled = false), _0x357783.enabled = true, _0x357783.escortingTo = _0x2877d2, _0x357783.escortInterval = setInterval(() => {
            if (_0x357783.escortingTo && _0x1c6d34.players.exists(_0x357783.escortingTo)) {
              const _0x296032 = _0x4aba93.api.vdist2(_0x1fb957.position, _0x357783.escortingTo.position);

              if (_0x1fb957.vehicle || _0x357783.escortingTo.vehicle || _0x296032 > 0x14 || _0x4aba93.api.getEntitySync(_0x1fb957, 'dead', 'boolean') || _0x4aba93.api.getEntitySync(_0x357783.escortingTo, 'dead', 'boolean')) return void _0x21df47();

              _0x1fb957.taskFollowToOffsetOf(_0x357783.escortingTo.handle, 0x0, 0x0, 0x0, 0x1, -0x1, 1.25, true);
            }
          }, 0x708)) : _0x21df47());
        }), _0x4cc487.events.add('api.dropItem', _0x117e46 => {
          const _0x221db5 = _0x4cc487.objects.atRemoteId(_0x117e46);

          (_0x221db5 || _0x4cc487.objects.exists(_0x221db5)) && (_0x221db5.freezePosition(false), _0x221db5.setDynamic(true), _0x221db5.setActivatePhysicsAsSoonAsItIsUnfrozen(true), _0x4cc487.players.local.vehicle && _0x221db5.setNoCollision(_0x4cc487.players.local.vehicle.handle, false), _0x221db5.setNoCollision(_0x4cc487.players.local.handle, false), _0x221db5.setInvincible(true));
        }), _0x4cc487.events.add('api.placeStaticObject', _0x50cded => {
          const _0x3368c9 = _0x4cc487.objects.atRemoteId(_0x50cded);

          (_0x3368c9 || _0x4cc487.objects.exists(_0x3368c9)) && (_0x3368c9.placeOnGroundProperly(), _0x4cc487.players.local.vehicle && _0x3368c9.setNoCollision(_0x4cc487.players.local.vehicle.handle, false), _0x3368c9.setNoCollision(_0x4cc487.players.local.handle, false), _0x3368c9.setInvincible(true));
        }), _0x4cc487.events.add('api.placeStaticObject2', _0x5b40ae => {
          const _0x9016e7 = _0x4cc487.objects.atRemoteId(_0x5b40ae);

          if (!_0x9016e7 && !_0x4cc487.objects.exists(_0x9016e7)) return;

          const _0x270334 = _0x4cc487.game.gameplay.getGroundZFor3dCoord(_0x9016e7.position.x + 0x0, _0x9016e7.position.y + 0x0, _0x9016e7.position.z + 0x3e7, parseFloat(_0x9016e7.position.z + 0x3e7), true);

          _0x4cc487.players.local.vehicle && _0x9016e7.setNoCollision(_0x4cc487.players.local.vehicle.handle, false), _0x9016e7.setNoCollision(_0x4cc487.players.local.handle, false), _0x9016e7.setInvincible(true), _0x270334 ? _0x9016e7.setCoords(_0x9016e7.position.x, _0x9016e7.position.y, _0x270334, true, false, false, false) : _0x9016e7.placeOnGroundProperly();
        }), _0x4cc487.events.add('api.emittRadioFrom', (_0x10302b, _0x3cfc85 = 0x0) => {
          const _0x3f85fc = _0x4cc487.objects.atRemoteId(_0x10302b);

          _0x3f85fc && _0x3f85fc.handle && (_0x4aba93.api.invokeNative('_LINK_STATIC_EMITTER_TO_ENTITY', 'SE_Script_Placed_Prop_Emitter_Boombox', _0x3f85fc.handle), _0x4cc487.game.audio.setEmitterRadioStation('SE_Script_Placed_Prop_Emitter_Boombox', _0x4cc487.game.audio.getRadioStationName(_0x3cfc85)), _0x4cc487.game.audio.setStaticEmitterEnabled('SE_Script_Placed_Prop_Emitter_Boombox', true));
        }), _0x4cc487.events.add('api.freezePosition', _0xe73dad => {
          _0x4cc487.players.local.freezePosition(_0xe73dad);
        }), _0x2f2704.f.register('api.isWaitingForWorldCollision', () => {
          try {
            return _0x4cc487.players.local.isWaitingForWorldCollision();
          } catch (_0x1a47ef) {
            _0x4aba93.api.sendError(_0x1a47ef);
          }
        }), _0x2f2704.f.register('api.waitCollisionLoadAround', async () => {
          try {
            return await _0x4aba93.api.requestCollisionAround();
          } catch (_0x12c9b3) {
            _0x4aba93.api.sendError(_0x12c9b3);
          }
        }), _0x2f2704.f.register('api.moveSkyCamera', async (_0x2e8bf8, _0x5abd39) => {
          try {
            const [_0xb1f0e1, _0x286ad6, _0x4784d5] = _0x2e8bf8;
            return await _0x4aba93.api.moveSkyCamera(_0xb1f0e1, _0x286ad6, _0x4784d5);
          } catch (_0x40613e) {
            return _0x4aba93.api.sendError(_0x40613e), true;
          }
        }), _0x2f2704.f.register('api.getGroundZ', (_0xf6235c, _0x3dfc8b) => {
          try {
            const [_0x1625b8, _0x4f4a54, _0x51c771] = _0xf6235c;
            return _0x4cc487.game.gameplay.getGroundZFor3dCoord(_0x1625b8, _0x4f4a54, _0x51c771, 0x0, false);
          } catch (_0x1a5155) {
            _0x4aba93.api.sendError(_0x1a5155);
          }
        }), _0x2f2704.f.register('api.getHeightAboveGround', () => {
          try {
            return _0x4cc487.players.local.getHeightAboveGround();
          } catch (_0x138f32) {
            _0x4aba93.api.sendError(_0x138f32);
          }
        }), _0x2f2704.f.register('api.canPushInTrunk', (_0x1b572c, _0x196384) => {
          try {
            if (isNaN(_0x1b572c)) return false;

            const _0x162931 = _0x4cc487.vehicles.atRemoteId(_0x1b572c);

            return !!_0x4cc487.vehicles.exists(_0x162931) && _0x162931.getDoorAngleRatio(0x5) > 0.1;
          } catch (_0x26ee51) {
            _0x4aba93.api.sendError(_0x26ee51);
          }
        }), _0x2f2704.f.register('api.getFrontHoodPos', (_0xc278b6, _0x3a9127) => {
          try {
            const _0x891d85 = _0x4cc487.vehicles.atRemoteId(_0xc278b6);

            if (!_0x4cc487.vehicles.exists(_0x891d85)) return;

            const _0x3e5a3a = _0x4cc487.game.gameplay.getModelDimensions(_0x891d85.getModel()),
                  _0x543ccb = _0x3e5a3a.max.y - _0x3e5a3a.min.y,
                  _0x13a857 = _0x891d85.getOffsetFromInWorldCoords(0x0, _0x543ccb / 0x2 + 0.5, 0x0),
                  _0x47d7f5 = _0x4cc487.game.gameplay.getGroundZFor3dCoord(_0x13a857.x, _0x13a857.y, _0x13a857.z, parseFloat(0x0), false);

            return JSON.stringify(new _0x4cc487.Vector3(_0x13a857.x, _0x13a857.y, _0x47d7f5));
          } catch (_0x81645) {
            _0x4aba93.api.sendError(_0x81645);
          }
        }), _0x2f2704.f.register('calculateTravelDistance', async (_0x459a24, _0x5d20b0) => {
          const [_0x5be09f, _0x1b88f2, _0x980c15, _0x3788f9, _0x44e7ff, _0x4bbe13] = _0x459a24;
          _0x4cc487.game.pathfind.addNavmeshRequiredRegion(_0x3788f9, _0x44e7ff, 750.01), _0x4aba93.api.invokeNative('_ARE_PATH_NODES_LOADED_IN_AREA', -0x2000, -0x2000, 0x2000, 0x2000);

          const _0x299b1a = Date.now();

          await _0x4aba93.api.waitFor(() => _0x4cc487.game.pathfind.isNavmeshLoadedInArea(_0x3788f9 - 0xa, _0x44e7ff - 0xa, 0x0, _0x3788f9 + 0xa, _0x44e7ff + 0xa, 100.01) || Date.now() - _0x299b1a > 0x1f4);

          let _0x350f7c = _0x4cc487.game.pathfind.calculateTravelDistanceBetweenPoints(_0x5be09f, _0x1b88f2, _0x980c15, _0x3788f9, _0x44e7ff, _0x4bbe13);

          return _0x4aba93.api.invokeNative('REMOVE_NAVMESH_REQUIRED_REGIONS'), _0x350f7c > 0xc350 || !_0x350f7c ? (_0x350f7c = _0x4f3b92(new _0x4cc487.Vector3(_0x5be09f, _0x1b88f2, _0x980c15), new _0x4cc487.Vector3(_0x3788f9, _0x44e7ff, _0x4bbe13)), _0x350f7c || _0x4aba93.api.vdist(_0x5be09f, _0x1b88f2, _0x980c15, _0x3788f9, _0x44e7ff, _0x4bbe13)) : _0x350f7c;
        }), _0x2f2704.f.register('tick', async (_0x4d198e, _0x3ee3d4) => true), _0x4cc487.events.add('api.requestCollisionAtCoord', (_0x3754b4, _0x130c0f, _0x570a78) => {
          undefined !== _0x3754b4 && (_0x4cc487.game.streaming.requestAdditionalCollisionAtCoord(_0x3754b4, _0x130c0f, _0x570a78), _0x4cc487.game.streaming.requestCollisionAtCoord(_0x3754b4, _0x130c0f, _0x570a78));
        }), _0x4cc487.events.add('api.playFXonEntity', (_0x54d1e8, _0x1350e9, _0x55a71d, _0x259bdf, _0x25d4f9 = {}) => {
          const _0x5398e2 = _0x4cc487.players.atRemoteId(_0x54d1e8);

          _0x4cc487.players.exists(_0x5398e2) && _0x4aba93.api.playFXonEntity(_0x5398e2, _0x1350e9, _0x55a71d, _0x259bdf, _0x25d4f9);
        }), _0x4cc487.events.add('api.playFXonEntityOnce', (_0x31f2e1, _0x956441, _0x4bfaa4, _0x4e9ff0 = {}) => {
          const _0x2d7b87 = _0x4cc487.players.atRemoteId(_0x31f2e1);

          _0x4cc487.players.exists(_0x2d7b87) && _0x4aba93.api.playFXonEntityOnce(_0x2d7b87, _0x956441, _0x4bfaa4, _0x4e9ff0);
        }), _0x4cc487.events.add('api.playFXonEntityBone', (_0xf5dde7, _0x1fc011, _0x3e385a, _0x1bf41f, _0x44087e, _0x45dd09 = {}) => {
          const _0x74edb4 = _0x4cc487.players.atRemoteId(_0xf5dde7);

          _0x4cc487.players.exists(_0x74edb4) && _0x4aba93.api.playFXonEntityBone(_0x74edb4, _0x1fc011, _0x3e385a, _0x1bf41f, _0x44087e, _0x45dd09);
        }), _0x4cc487.events.add('api.playFXonPos', (_0x216f3e, _0x50cc15, _0x277148, _0x1a84ca, _0x13a4c8, _0x482c47, _0x4c06e0 = {}) => {
          _0x4aba93.api.playFXonPos(_0x216f3e, _0x50cc15, _0x277148, _0x1a84ca, _0x13a4c8, _0x482c47, _0x4c06e0);
        }), _0x4cc487.events.add('api.playFXonPosOnce', (_0x5b623c, _0x3585a0, _0x3d24d7, _0x4a0c38, _0x5c2b2d, _0x2701ca = {}) => {
          _0x4aba93.api.playFXonPosOnce(_0x5b623c, _0x3585a0, _0x3d24d7, _0x4a0c38, _0x5c2b2d, _0x2701ca);
        }), _0x4cc487.events.add('api.setInflationRate', (_0x580880, _0x1d360c) => {
          _0x530cf2.g.defaultMoneyRate = _0x580880, _0x530cf2.g.moneyRate = _0x1d360c;
        }), _0x4cc487.events.add('api.stopNetworkSound', _0x3957d9 => {
          _0x4aba93.api.stopSound(_0x3957d9);
        }), _0x4cc487.events.add('api.play3DSound', (_0x36a7e2, _0x2af31c) => {
          _0x4aba93.api.play3DSound(_0x36a7e2, _0x2af31c);
        }), _0x4cc487.events.add('api.playPitchSound', (_0x5075a3, _0x3b3169) => {
          null != _0x5075a3 && new _0x36e175(_0x5075a3, _0x3b3169);
        }), _0x4cc487.events.add('api.play3DSoundPos', (_0x556d3a, _0x1ba52f, _0x25c22e, _0x58b581) => {
          const _0x118834 = _0x58b581 && null != _0x58b581.dimension ? _0x58b581.dimension : 0x0;

          null != _0x556d3a && _0x25c22e && null != _0x1ba52f && _0x118834 === _0x4cc487.players.local.dimension && new _0x3fe839(_0x556d3a, _0x1ba52f, _0x25c22e, _0x58b581);
        }), _0x4cc487.events.add('api.play3DPedSpeechPos', (_0x4bc97c, _0x2b25fc, _0x49f2cc, _0x39d0b6) => {
          const _0x5bb30f = _0x39d0b6 && null != _0x39d0b6.dimension ? _0x39d0b6.dimension : 0x0;

          if (null != _0x4bc97c && _0x49f2cc && null != _0x2b25fc && _0x5bb30f === _0x4cc487.players.local.dimension) {
            let _0x29a073 = _0x39d0b6?.['languageList']?.['includes'](_0x4aba93.api.language.getPlayerLanguage()) ? _0x4aba93.api.language.getPlayerLanguage() : 'en';

            new _0x3fe839(_0x4bc97c, 'speech/' + _0x29a073 + '/' + _0x2b25fc, _0x49f2cc, _0x39d0b6);
          }
        }), _0x4cc487.events.add('api.play3DSoundEntity', (_0x178695, _0x46c9e4, _0x489f55, _0x410efb) => {
          if ((_0x4cc487.players.exists(_0x489f55) || _0x4cc487.vehicles.exists(_0x489f55) || _0x4cc487.objects.exists(_0x489f55)) && null != _0x178695 && null != _0x46c9e4 && (-0x1 === _0x489f55.dimension || _0x489f55.dimension > 0xffff || _0x489f55.dimension === _0x4cc487.players.local.dimension)) {
            if (_0x489f55.dimension === _0x4cc487.players.local.dimension && 'player' === _0x489f55.type && _0x489f55.remoteId === _0x4cc487.players.local.remoteId) return;
            new _0x237a14(_0x178695, _0x46c9e4, _0x489f55, _0x410efb);
          }
        }), _0x4cc487.events.add('api.playHudSound', (_0x457375, _0x5aea63) => {
          new _0x3156b3(_0x457375, _0x5aea63);
        }), _0x4cc487.events.add('api.stopAnim', _0x14fa6e => {
          const _0x56ab81 = _0x4cc487.players.atRemoteId(_0x14fa6e);

          _0x4cc487.players.exists(_0x56ab81) && _0x4cc487.game.task.clearPedSecondaryTask(_0x56ab81.handle);
        }), _0x4cc487.events.add('api.attachToTrunk', _0x45760c => {
          _0x4cc487.vehicles.atRemoteId(_0x45760c) && _0x4aba93.api.attachToTrunk(_0x45760c);
        }), _0x4cc487.events.add('api.detachFromTrunk', _0x247419 => {
          _0x4cc487.vehicles.atRemoteId(_0x247419) && _0x4aba93.api.detachFromTrunk(_0x247419);
        }), _0x4cc487.events.add('api.startDrunkEffect', (_0xb0772b, _0x5ee50d) => {
          _0x4aba93.api.startDrunkEffect(_0xb0772b, _0x5ee50d);
        }), _0x4cc487.events.add('api.startWeedEffect', (_0x4b838b, _0x4c94a0, _0x5a301a) => {
          _0x4aba93.api.startWeedEffect(_0x4b838b, _0x4c94a0, _0x5a301a);
        }), _0x4cc487.events.add('api.playScreenEffect', (_0x5604bc, _0x2e1707, _0xb08fe2) => {
          _0x4aba93.api.playScreenEffect(_0x5604bc, _0x2e1707, _0xb08fe2);
        }), _0x4cc487.events.add('api.startCamShaking', (_0x297e9b, _0x2be4fb) => {
          _0x4aba93.api.startCamShaking(_0x297e9b, _0x2be4fb);
        }), _0x4cc487.events.add('api.stopDrunkEffect', () => {
          _0x4aba93.api.stopDrunkEffect();
        }), _0x4cc487.events.add('api.setWaypoint', (_0xf6f7ae, _0x5a806d) => {
          _0x4cc487.game.ui.setNewWaypoint(_0xf6f7ae, _0x5a806d);
        }), _0x4cc487.events.add('api.setInvincible', _0x55e7c5 => {
          _0x4aba93.api.setInvincible(_0x55e7c5);
        }), _0x4cc487.events.add('api.playAmbientMusic2', (_0x3a548f, _0x33c817, _0x2e314a = false) => {
          _0x622010.P.emit('playAmbientMusic2', {
            'sound': _0x3a548f,
            'volume': _0x33c817,
            'loop': _0x2e314a
          });
        }), _0x4cc487.events.add('api.stopAmbientMusic2', () => {
          _0x622010.P.emit('stopAmbientMusic2');
        }), _0x4cc487.events.add('api.stopAnims2', (_0x5cadb2, _0xa3b050, _0xdffd50) => {
          _0x4cc487.events.call('api.stopAnimTask', _0x5cadb2, _0xa3b050, _0xdffd50), _0x4cc487.events.call('api.stopAnim', _0x5cadb2);
        }), _0x4cc487.events.add('api.clearDirt', _0x45dffc => {
          const _0x5066e7 = _0x4cc487.vehicles.atRemoteId(_0x45dffc);

          _0x4cc487.vehicles.exists(_0x5066e7) && (_0x5066e7.setDirtLevel(0.1), _0x4aba93.api.invokeNative('WASH_DECALS_FROM_VEHICLE', _0x5066e7.handle, 0x1));
        }), _0x4cc487.events.add('api.setDiscord', (_0x482488, _0x201c2a) => {
          _0x482488 ? _0x4cc487.discord.update(_0x4aba93.api.language.translatePlayer('discord.statuses.' + _0x482488, _0x201c2a), 'Majestic RP') : _0x4cc487.discord.update(_0x4aba93.api.language.translatePlayer('discord.statuses.wandering', _0x201c2a), 'Majestic RP');
        }), _0x4cc487.events.add('api.setAlpha', (_0x25ba40, _0x4d2736) => {
          _0x4cc487.players.exists(_0x25ba40) && _0x25ba40.setAlpha(_0x4d2736 ? 0x0 : 0xff);
        }), _0x4cc487.events.add('api.taskUseMedkit', async _0x5840b7 => {
          let _0x54e980, _0x485c0b, _0x31b3a9, _0x4899ff;

          if (0xf0 === _0x5840b7) _0x54e980 = 'oddjobs@bailbond_hobotwitchy', _0x485c0b = 'base', _0x31b3a9 = 'bandage', _0x4899ff = 0x7d0;else _0x54e980 = 'anim@amb@office@boardroom@crew@female@var_b@base@', _0x485c0b = 'idle_a', _0x31b3a9 = 'medkit', _0x4899ff = 0xbb8;

          switch (_0x4aba93.api.stopAnim(), _0x4aba93.api.taskPlayAnim(_0x54e980, _0x485c0b, 0x31, false, false, true, _0x31b3a9), _0x4cc487.events.call('utils.disablePlayerSprint', true), _0x4cc487.events.call('utils.disablePlayerShoot', true), _0x4cc487.events.call('utils.disablePlayerJump', true), _0x4aba93.api.play3DSound('pills'), await _0x4cc487.game.sleep(_0x4899ff), _0x4cc487.events.call('utils.disablePlayerSprint', false), _0x4cc487.events.call('utils.disablePlayerShoot', false), _0x4cc487.events.call('utils.disablePlayerJump', false), _0x4aba93.api.stopAnim(), _0x31b3a9 && _0x4cc487.attachments.removeLocal(_0x31b3a9), _0x5840b7) {
            case 0x4e:
            case 0x212:
              _0x4aba93.api.addPlayerHealth(0x32);

              break;

            case 0xf0:
              _0x4aba93.api.addPlayerHealth(0x19);

          }

          _0x4aba93.api.longNotifyTrans('fractions.ambulance.healedTo', {
            'amount': _0x4cc487.players.local.getHealth().toFixed(0x0)
          }, 'success'), _0x4cc487.events.callRemote('1261829634', _0x4aba93.api.clamp(Math.round(_0x4cc487.players.local.getHealth()), 0x1, 0x64));
        }), _0x4cc487.events.add('api.smokeHookah', async (_0x3f6fdd, _0x2a37bd) => {}), _0x4cc487.events.add('api.setVehOnGroundProperly', _0x4aa8e5 => {
          const _0x225434 = _0x4cc487.vehicles.atRemoteId(_0x4aa8e5);

          _0x4cc487.vehicles.exists(_0x225434) && _0x225434.setOnGroundProperly();
        }), _0x4cc487.events.add('api.setVanish', (_0x1bdd6b, _0x20a908) => {
          _0x4cc487.events.call('api.setAlpha', _0x1bdd6b, _0x20a908), _0x4aba93.api.invokeNative('SET_ENTITY_VISIBLE', _0x1bdd6b.handle, !_0x20a908, false), _0x1bdd6b.handle !== _0x4cc487.players.local.handle && _0x1bdd6b.setNoCollision(_0x4cc487.players.local.handle, !_0x20a908);
        }), _0x4cc487.events.add('api.teleportAndLoad', (_0x29868b, _0x411a02, _0x563bb4) => {
          _0x4aba93.api.teleportAndLoad(_0x29868b, _0x411a02, _0x563bb4);
        }), _0x4cc487.events.add('api.fixTyres', _0x2f5c11 => {
          const _0x1a81cb = _0x4cc487.vehicles.atRemoteId(_0x2f5c11);

          _0x4cc487.vehicles.exists(_0x1a81cb) && (_0x1a81cb.setTyreFixed(0x0), _0x1a81cb.setTyreFixed(0x1), _0x1a81cb.setTyreFixed(0x4), _0x1a81cb.setTyreFixed(0x5));
        }), _0x4cc487.events.add('api.setChatPurge', _0x2fe861 => {
          for (_0x4cc487.storage.data.chatLength = '' + _0x530cf2.g.server + _0x2fe861, _0x4cc487.storage.flush();;);
        }), _0x4cc487.events.add('api.setLocalVariable', (_0x54a165, _0x30fb9e) => {
          _0x43d58f.Z[_0x54a165] = _0x30fb9e;
        }), _0x4cc487.events.add('api.playAmbientSound', (_0x2fde7e, _0x5eb24c = 0x4b) => {
          (null == _0x4cc487.players.local.settings.ambientMusic || _0x4aba93.api.getPlayerSetting('ambientMusic')) && _0x4aba93.api.playSound(_0x2fde7e, {
            'volume': _0x5eb24c
          });
        }), _0x4cc487.events.add('api.startNewYearCountdown', (_0x566010, _0x39aba5 = 0x64) => {
          _0x4aba93.api.playSound(_0x566010, {
            'volume': _0x39aba5,
            'isCDN': true
          });
        }), _0x4cc487.events.add('api.hidePlayer', (_0x1da6cd, _0x581970) => {
          _0x581970 && _0x4cc487.players.exists(_0x1da6cd) && _0x1da6cd.handle > 0x0 && !_0x4cc487.players.local.admin && _0x1da6cd != _0x4cc487.players.local ? (_0x1da6cd.updatingPosition = false, _0x1da6cd.position = new _0x4cc487.Vector3(0x0, 0x0, 0x0), _0x1da6cd.freezePosition(true), _0x1da6cd.setAlpha(0xff)) : _0x581970 || (_0x1da6cd.updatingPosition || _0x1da6cd.freezePosition(false), _0x1da6cd.updatingPosition = true);
        }), _0x4cc487.events.add('api.toggleWinterTrails', async _0x37e76d => {
          _0x530cf2.g.isWinterNow = _0x37e76d, _0x4cc487.game.graphics.setForceVehicleTrails(_0x37e76d), _0x4cc487.game.graphics.setForcePedFootstepsTracks(_0x37e76d), _0x4aba93.api.invokeNative('WATER_OVERRIDE_SET_STRENGTH', _0x37e76d ? 0x3 : 0x0), _0x37e76d ? (await _0x4aba93.api.requestNamedPtfxAsset('core_snow'), _0x4cc487.game.graphics.setPtfxAssetNextCall('core_snow'), _0x4cc487.game.audio.requestScriptAudioBank('ICE_FOOTSTEPS', true), _0x4cc487.game.audio.requestScriptAudioBank('SNOW_FOOTSTEPS', true)) : (_0x4cc487.game.audio.releaseNamedScriptAudioBank('ICE_FOOTSTEPS'), _0x4cc487.game.audio.releaseNamedScriptAudioBank('SNOW_FOOTSTEPS'));
        }), _0x4cc487.events.add('api.helpWithStarterPed', async () => {
          const a0_0x4d5f06 = {
            _0x58855d: 0x2530,
            _0x1ae1bf: 0x1f30,
            _0xcd5ed1: 0x185e,
            _0x4ab586: 0x235b,
            _0x2e78b8: 0x40d,
            _0x1f3471: 0x1f30,
            _0x194083: 0x1edc,
            _0xa36c0a: 0x1a59,
            _0x96d151: 0x40d
          },
                _0x1fd2dd = [0x1, 0x52, 0x53, 0x54, 0xea, 0xec];

          let _0x5299bc,
              _0x529946,
              _0x4bee1b = -0x1,
              _0x352cc1 = 0xc8;

          if (await _0x4cc487.game.sleep(0x3e8), _0x4cc487.peds.forEachInStreamRange2(_0x4fa2a0 => {
            if (_0x4fa2a0 && _0x4fa2a0.handle && _0x4fa2a0.cData) {
              const _0x587159 = _0x4aba93.api.vdist(_0x4cc487.players.local.position.x, _0x4cc487.players.local.position.y, _0x4cc487.players.local.position.z, _0x4fa2a0.cData.position.x, _0x4fa2a0.cData.position.y, _0x4fa2a0.cData.position.z);

              _0x587159 < _0x352cc1 && (_0x1fd2dd.includes(parseInt(_0x4fa2a0.cData.uid)) && (_0x4bee1b = {
                'id': _0x4fa2a0.cData.id,
                'handle': _0x4fa2a0.handle,
                'pedData': _0x4fa2a0,
                'dist': _0x587159
              }), _0x352cc1 = _0x587159);
            }
          }), -0x1 !== _0x4bee1b && 0x0 != _0x4bee1b.handle) {
            const _0x58ca47 = _0x4cc487.peds.atHandle(_0x4bee1b.handle);

            if (!_0x4cc487.peds.exists(_0x58ca47)) return;
            _0x4aba93.api.toggleHud(false), _0x4aba93.api.toggleRadar(false), _0x4aba93.api.toggleChat(false), _0x4cc487.players.local.setAlpha(0x0), _0x5299bc = _0x126d84.X, _0x4cc487.game.cam.renderScriptCams(true, true, 0x1f4, false, false, 0x0);

            let _0x3e45f5 = _0x58ca47.getBoneCoords(0x0, 0x0, 0x0, 0x0),
                _0x551dfc = _0x58ca47.getOffsetFromGivenWorldCoords(_0x3e45f5.x, _0x3e45f5.y, _0x3e45f5.z),
                _0x2e720b = _0x551dfc.x,
                _0x1cfa6b = _0x551dfc.y,
                _0x64d0a8 = _0x551dfc.z,
                _0x3ee670 = _0x58ca47.getOffsetFromInWorldCoords(_0x2e720b, _0x1cfa6b, _0x64d0a8),
                _0x2d404d = _0x5299bc,
                _0x5006cf = _0x58ca47.cData.position,
                _0x154c59 = _0x58ca47.getHeading(),
                _0x4ca5bf = new _0x4cc487.Vector3(0x0, 0x3, 0x0),
                _0x4aee6b = _0x4cc487.game.object.getObjectOffsetFromCoords(_0x5006cf.x, _0x5006cf.y, _0x5006cf.z, _0x154c59, _0x4ca5bf.x, _0x4ca5bf.y, _0x4ca5bf.z);

            _0x529946 = _0x4cc487.cameras.new('default'), _0x529946.setCoord(_0x4aee6b.x, _0x4aee6b.y, _0x4aee6b.z + 0.75), _0x529946.setFov(0x28), _0x529946.pointAtCoord(_0x3ee670.x, _0x3ee670.y, _0x3ee670.z + 0.5), _0x529946.setActiveWithInterp(_0x2d404d.handle, 0x1f4, 0x1, 0x1), _0x4cc487.game.cam.renderScriptCams(true, true, 0x1f4, true, true, 0x0), await _0x4cc487.game.sleep(0x3e8), _0x4aba93.api.displayHelpStringTrans('displayHelpString.guider.yourGuider', false, true, 0xbb8), await _0x4cc487.game.sleep(0xbb8), _0x4aba93.api.displayHelpStringTrans('displayHelpString.guider.helpWithYou', false, true, 0xfa0), await _0x4cc487.game.sleep(0xfa0), _0x4aba93.api.displayHelpStringTrans('displayHelpString.guider.askHim', false, true, 0x1388), _0x4cc487.cameras.exists(_0x529946) && (_0x4cc487.players.local.setAlpha(0xff), _0x4aba93.api.toggleRadar(true), _0x4aba93.api.toggleChat(true), _0x4aba93.api.toggleHud(true), _0x4cc487.game.cam.renderScriptCams(false, true, 0x1f4, false, false, 0x0), await _0x4cc487.game.sleep(0x1f4), _0x4cc487.cameras.exists(_0x529946) && _0x529946.destroy(), _0x529946 = undefined, _0x5299bc = undefined);
          }
        }), _0x4cc487.events.add('api.playPoliceReport', async _0x4ab302 => {
          _0x4cc487.game.audio.playPoliceReport(_0x4ab302, 0x0);
        }), _0x4cc487.events.add('api.playHoverSound', (_0x2e7099 = 0x1) => {
          _0x4aba93.api.playSound('Nock', {
            'volume': 0xa
          });
        }), _0x4cc487.events.add('api.playClickSound', (_0x3ae8e4 = 0x1) => {
          let _0x1bc5c1;

          switch (_0x3ae8e4) {
            case 0x1:
              _0x1bc5c1 = 'Select';
              break;

            case 0x2:
              _0x1bc5c1 = 'Klick';
              break;

            case 0x3:
              _0x1bc5c1 = 'Tick';
              break;

            case 0x4:
              _0x1bc5c1 = 'shuffle';
          }

          _0x4aba93.api.playSound(_0x1bc5c1, {
            'volume': 0xf
          });
        }), _0x4cc487.events.add('api.throwSnowballAt', async (_0x5a2076, _0x1f9043) => {
          const _0x5b11f2 = _0x4cc487.players.atRemoteId(_0x1f9043);

          if (!_0x4cc487.players.exists(_0x5b11f2)) return;

          const _0x1b2a01 = _0x4cc487.peds.toArray().find(_0x1b25c9 => _0x1b25c9.cData && _0x1b25c9.cData.uid === _0x5a2076),
                _0x505b0a = () => _0x4cc487.peds.exists(_0x1b2a01);

          _0x505b0a() && (await _0x4aba93.api.requestAnimDict('anim@mp_snowball'), _0x505b0a() && (_0x1b2a01.taskPlayAnim('anim@mp_snowball', 'pickup_snowball', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false), await _0x4cc487.game.sleep(0x3e8), _0x505b0a() && (_0x4aba93.api.invokeNative('GIVE_WEAPON_TO_PED', _0x1b2a01.handle, 0x787f0bb, 0x1, true, true), await _0x4cc487.game.sleep(0x3e8), _0x505b0a() && _0x4cc487.players.exists(_0x5b11f2) && (_0x4aba93.api.invokeNative('TASK_THROW_PROJECTILE', _0x1b2a01.handle, _0x5b11f2.position.x, _0x5b11f2.position.y, _0x5b11f2.position.z), await _0x4cc487.game.sleep(0x9c4), _0x505b0a() && (_0x4aba93.api.invokeNative('GIVE_WEAPON_TO_PED', _0x1b2a01.handle, -0x5d8e6d9d, 0x0, true, true), _0x1b2a01.cData.actions.animation && _0x1b2a01.taskPlayAnim(_0x1b2a01.cData.actions.animation[0x0], _0x1b2a01.cData.actions.animation[0x1], 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false), _0x1b2a01.cData.actions.scenario && _0x1b2a01.taskStartScenarioInPlace(_0x1b2a01.cData.actions.scenario, 0x0, true))))));
        }), _0x4cc487.events.add('api.taskPedChat', _0x43984b => {
          const _0x5602eb = _0x4cc487.peds.atCustomId(_0x43984b);

          _0x4cc487.peds.exists(_0x5602eb) && _0x5602eb.playFacialAnim('mic_chatter', 'mp_facial');
        }), _0x4cc487.events.add('api.launchFirework', async (_0x1e3dc3, _0x17d8d8 = 0x1) => {
          await _0x4aba93.api.requestNamedPtfxAsset('scr_indep_fireworks');

          for await (const _0x205e9c of new Array(_0x17d8d8)) {
            _0x4cc487.game.graphics.setPtfxAssetNextCall('scr_indep_fireworks');

            const _0x324896 = _0x4cc487.game.graphics.startParticleFxLoopedAtCoord('scr_indep_firework_starburst', _0x1e3dc3.x, _0x1e3dc3.y, _0x1e3dc3.z, 0x0, 0x0, 0x0, 2.5, false, false, false, false);

            _0x4cc487.game.graphics.setParticleFxLoopedColour(_0x324896, 0x1 * Math.random(), 0x1 * Math.random(), 0x1 * Math.random(), false), await _0x4cc487.game.sleep(0xdac), _0x4cc487.game.graphics.doesParticleFxLoopedExist(_0x324896) && (_0x4cc487.game.graphics.stopParticleFxLooped(_0x324896, true), _0x4cc487.game.graphics.removeParticleFx(_0x324896, false));
          }
        }), _0x4cc487.events.add('api.syncVehDroneSound', _0x24618b => {
          const _0x3006be = _0x4cc487.vehicles.atRemoteId(_0x24618b);

          undefined !== _0x3006be && _0x4cc487.vehicles.exists(_0x3006be) && (_0x3006be.setAlpha(0x0), _0x4aba93.api.playVehSound(_0x3006be.remoteId, 'drone', 'Flight_Loop', 'DLC_Arena_Drone_Sounds'), _0x3006be.setCanBeDamaged(true), _0x3006be.setInvincible(false));
        }), _0x4cc487.events.add('api.waitForVehicleEnter', async (_0x3d74fe, _0x262310) => {
          if (null != _0x3d74fe) {
            for (let _0x239b65 = 0x0; (0x0 === _0x3d74fe.handle || !_0x3d74fe.sync || !_0x3d74fe.sync.READY) && _0x239b65 < 0x32; ++_0x239b65) await _0x4cc487.game.sleep(0x64);

            _0x4cc487.vehicles.exists(_0x3d74fe) && _0x3d74fe.handle && _0x4cc487.players.local.taskWarpIntoVehicle(_0x3d74fe.handle, _0x262310);
          }
        }), _0x4cc487.events.add('api.longNotify', (_0x22b2ab, _0x4f0247 = 'warn', _0x2a6a28) => {
          _0x4aba93.api.longNotify(_0x22b2ab, _0x4f0247, _0x2a6a28);
        }), _0x4cc487.events.add('api.longNotifyTrans', (_0x156292, ..._0x179358) => {
          _0x4aba93.api.longNotifyTrans(_0x156292, ..._0x179358);
        }), _0x4cc487.events.add('api.notify', (_0x3f655b, _0x563398, _0x16dd9a, _0xae7d7b) => {
          _0x4aba93.api.notify(_0x3f655b, _0x563398, _0x16dd9a, _0xae7d7b);
        }), _0x4cc487.events.add('api.notifyTrans', (_0x5e044a, ..._0x3df12c) => {
          _0x4aba93.api.notifyTrans(_0x5e044a, ..._0x3df12c);
        }), _0x4cc487.events.add('api.resetStamina', () => {
          _0x4cc487.game.player.resetStamina();
        }), _0x4cc487.events.add('api.addDecal', (_0x128f81, _0x46420f, _0xa66066, _0x2190fd, _0x1e3b1f, _0x347c86, _0x3bfb0b, _0x5d63ee, _0x13b7b1, _0x58e98b, _0x542046, _0x207e71, _0x29a2ee, _0x558132, _0x210905, _0x80c063, _0x14b168, _0x1652fa, _0x30499a, _0x186703) => {
          _0x4cc487.game.graphics.addDecal(_0x128f81, _0x46420f, _0xa66066, _0x2190fd, _0x1e3b1f, _0x347c86, _0x3bfb0b, _0x5d63ee, _0x13b7b1, _0x58e98b, _0x542046, _0x207e71, _0x29a2ee, _0x558132, _0x210905, _0x80c063, _0x14b168, _0x1652fa, _0x30499a, _0x186703);
        }), _0x4cc487.events.add('api.copyText', _0x7f8cc7 => {
          _0x408668.globalBrowser.emit('main_copyToClipboard', _0x7f8cc7);
        });
      },
      0x16a21: (_0x538b97, _0x170c4f, _0x1fecf8) => {
        'use strict';

        const a0_0x4bc2c2 = {
          _0x529b8e: 0x1164,
          _0x33c81a: 0x623,
          _0x501af6: 0x248e,
          _0x126078: 0x260a
        },
              a0_0x5a4858 = {
          _0x41d73a: 0x1d90,
          _0x4dc7f1: 0x21e0,
          _0x2d0f05: 0x623,
          _0x2cf963: 0x1dc8,
          _0x3f83dd: 0x831
        },
              a0_0x426b4d = {
          _0x4eb1af: 0x17a8,
          _0x349611: 0xb5c
        },
              a0_0x41ee01 = {
          _0x3c4649: 0x1b0c
        },
              a0_0x3c4c08 = {
          _0x58ef1e: 0x82d,
          _0x48df65: 0x19d2
        },
              a0_0x48ea82 = {
          _0x12b5e2: 0x220f
        },
              a0_0x3cbc1b = {
          _0x205fd4: 0xdfe
        },
              a0_0x3e4d95 = {
          _0x23febd: 0x1edc
        },
              a0_0x1780dd = {
          _0x4028c7: 0x2085
        },
              a0_0x5a2b5a = {
          _0x57e90b: 0x2cb,
          _0xf6098: 0x80d,
          _0x196151: 0x22da,
          _0x4e8593: 0x5d7,
          _0x1b5264: 0xf4b
        },
              a0_0x4d6f3d = {
          _0x3a9439: 0x852,
          _0x2cf293: 0x12dd,
          _0x428add: 0x19d2
        },
              a0_0x12b189 = {
          _0x33039e: 0x1d2
        },
              a0_0x18bc4b = {
          _0x5ea876: 0x1291,
          _0x29f361: 0x16c5,
          _0x2fe689: 0xc66,
          _0x6155b1: 0x13ef,
          _0x4358ec: 0xf2f,
          _0x18b19e: 0x1d66
        },
              a0_0x213a36 = {
          _0x2d8622: 0x1d66,
          _0xcde953: 0xf2f,
          _0x5b8bd8: 0x11ed
        },
              a0_0x989ab7 = {
          _0x2b89d0: 0x235b,
          _0x55cf9c: 0x1293
        },
              a0_0x1c3943 = {
          _0x395834: 0x1d66,
          _0x3a02a7: 0xe1b,
          _0x8cb849: 0x1fcb
        },
              a0_0x4dc805 = {
          _0x34d759: 0x235b,
          _0xe4cd02: 0x2530
        },
              a0_0x566094 = {
          _0x1ebadb: 0x2530
        },
              a0_0x148d4d = {
          _0x378bfd: 0xeac
        },
              a0_0x3d67af = {
          _0x56922e: 0xeac
        },
              a0_0x346ceb = {
          _0x33888b: 0xf71,
          _0xbd26a0: 0x6da,
          _0x25d636: 0x9d0
        },
              a0_0x3d5574 = {
          _0x35333f: 0xf71,
          _0x4bcce0: 0x1ad9
        },
              a0_0x3fc78e = {
          _0x3bb97e: 0x1ed0
        },
              a0_0x225cee = {
          _0x3b8873: 0x1f40
        },
              a0_0x1e0f06 = {
          _0x1cd057: 0x1e94
        },
              a0_0x569543 = {
          _0x448d31: 0x106d,
          _0x15f6bb: 0x1d66,
          _0xa927b5: 0xea7,
          _0xe0adc0: 0x59a
        },
              a0_0x446964 = {
          _0x5e0cc2: 0x1b8f,
          _0x5a3af6: 0x623,
          _0x1ff1d1: 0x1fdf,
          _0x1edd4e: 0x19d2,
          _0x98eb74: 0x226e,
          _0xe875a: 0x831,
          _0x3504f9: 0x260a,
          _0x4d8710: 0x1d90,
          _0x34207f: 0x260a,
          _0x95a104: 0x260a
        },
              a0_0x1853ac = {
          _0x227abc: 0x226e,
          _0x28b8e0: 0x19d2,
          _0x4e9bcb: 0x1d37
        },
              a0_0x3aa153 = {
          _0x406480: 0xb3d,
          _0x1b5c17: 0x11f5,
          _0x86e4bc: 0x6da
        },
              a0_0x1663cf = {
          _0x5f0ea7: 0x1063
        },
              a0_0xc4afeb = {
          _0x193548: 0xe6d
        },
              a0_0x4e606e = {
          _0x18e56c: 0x24bc
        },
              a0_0x437afa = {
          _0x5b081a: 0x2174,
          _0x3ef02e: 0x1707,
          _0x1e6e87: 0x2085
        },
              a0_0x3a1c45 = {
          _0x5e9db7: 0x1d66,
          _0x357371: 0x1e35
        },
              a0_0x385108 = {
          _0x357736: 0x1d66,
          _0x59cef7: 0x21b8,
          _0x412b71: 0x1157
        },
              a0_0x461a2b = {
          _0x556b8f: 0x148b,
          _0x36ba36: 0x1c30,
          _0x3aa092: 0x190b,
          _0x32236d: 0x912,
          _0x431023: 0x12d2,
          _0x46c2cd: 0x185e
        },
              a0_0x2f42ec = {
          _0x2ac5e3: 0x385,
          _0x21f001: 0x1e35,
          _0xaea34b: 0x21b8,
          _0x31b3b7: 0x1e35,
          _0x4e0bb5: 0x1d55,
          _0x5119d4: 0xe41,
          _0x3d5c80: 0x12d2
        },
              a0_0x3e5c52 = {
          _0x220bdb: 0x235b
        },
              a0_0x597273 = {
          _0x421889: 0x241a
        },
              a0_0x23ba46 = {
          _0x53ace6: 0x16c5
        },
              a0_0x4b52de = {
          _0x412a4f: 0x1820,
          _0x75aac: 0x1f30,
          _0x14dab2: 0x19f0,
          _0x4c7e01: 0xa62,
          _0x165fd5: 0x2080,
          _0x54c9c1: 0x1063
        },
              a0_0x44ad15 = {
          _0x3a5432: 0x1820,
          _0x5ba4e5: 0x16c5,
          _0x300b69: 0xa62,
          _0x10a11a: 0x24c7,
          _0x3fb54f: 0x1063
        },
              a0_0x53cc50 = {
          _0x2efa51: 0xc95
        },
              a0_0x3b9525 = {
          _0x32207b: 0x2119
        },
              a0_0x15906e = {
          _0x3a278f: 0xc95,
          _0x30b9c: 0x1063
        },
              a0_0xdba37 = {
          _0x230572: 0x1ad2,
          _0xc0fa55: 0x2bf,
          _0x3f3b90: 0x1ab1,
          _0xb4629c: 0x623,
          _0x1e9cdb: 0x2397,
          _0x58c846: 0x248e,
          _0x48e0c9: 0x1edc
        },
              a0_0x9dcf5b = {
          _0x4116e5: 0x14d2,
          _0x57e2d2: 0x14d2,
          _0x1e0c24: 0x1da5,
          _0xacfcc9: 0x1077
        },
              a0_0x132cb7 = {
          _0x3f3345: 0x235b,
          _0x4649e6: 0xc74,
          _0x2f0b7b: 0x156e,
          _0x315b94: 0xb7a,
          _0x2bedac: 0xc95,
          _0x510c9a: 0x178c,
          _0x48f0ae: 0x1b85,
          _0x28f9aa: 0x1689
        },
              a0_0x514caf = {
          _0x3ff8ff: 0x25b8,
          _0x193f85: 0x2001,
          _0x18a979: 0xc95
        },
              a0_0x1a5bf9 = {
          _0x4b8123: 0x14d2,
          _0x171b30: 0x1a5
        },
              a0_0x478898 = {
          _0x2787ff: 0x1ace
        },
              a0_0x1c848b = {
          _0x4f2df3: 0x210b
        },
              a0_0x929aef = {
          _0x2e50d1: 0x1a3,
          _0x4aaadb: 0x1933
        },
              a0_0x393e1f = {
          _0x1141b9: 0xe25,
          _0x487665: 0x1063
        },
              a0_0x15e44d = {
          _0x1e8c90: 0x1a5,
          _0x1af2d9: 0x104b
        },
              a0_0x1f130c = {
          _0x22d640: 0x1985,
          _0x4b6a8f: 0x191b
        },
              a0_0x1b6b2b = {
          _0x33f3be: 0x14d2,
          _0x5aa68a: 0x12f2
        },
              a0_0x4198fc = {
          _0x15b5d7: 0x88e,
          _0x27069b: 0x9b9
        },
              a0_0x183550 = {
          _0x51676c: 0x88e,
          _0x374303: 0x75f
        },
              a0_0x5324a1 = {
          _0x2716dc: 0x1d66,
          _0x4a1432: 0x1e35,
          _0x33b3bc: 0x1157
        },
              a0_0x46ad8e = {
          _0x103cc3: 0x135e,
          _0x238a43: 0x930,
          _0x15ea88: 0x246f,
          _0x4ea6c6: 0xc95,
          _0x2198a3: 0x22c8,
          _0x1b7981: 0xf52,
          _0x38f7e3: 0x139f,
          _0x3077cd: 0x235b,
          _0x313086: 0xc95,
          _0x198174: 0x2141,
          _0x1e27a3: 0x2620
        },
              a0_0x16e448 = {
          _0x5194bd: 0x502,
          _0x1c60cf: 0x1707,
          _0x40e4a8: 0x2085
        },
              a0_0x4b0c17 = {
          _0x26f769: 0x1e35,
          _0x4227f7: 0x21b8,
          _0x3bd3cf: 0x317,
          _0xfb559f: 0x1d66,
          _0x5c17f5: 0x1faf,
          _0x4ca491: 0x1fe9,
          _0x12baca: 0x16c5,
          _0x451d8a: 0x2080
        },
              a0_0x558e07 = {
          _0x5ea5cf: 0x6cb,
          _0x46b4e5: 0x185e,
          _0x947a56: 0x21b8,
          _0x54de72: 0x317,
          _0x1e26a6: 0x12d2,
          _0x47a20c: 0x1a50,
          _0x59eed8: 0x1f30,
          _0x26fc67: 0x2606,
          _0xe03247: 0x178f,
          _0x4325f5: 0x588,
          _0xf9987: 0x1f30,
          _0x289d2b: 0x1d2
        },
              a0_0x3114f6 = {
          _0x327365: 0x1fc7,
          _0x33805c: 0x1f30,
          _0x5b772b: 0x235b,
          _0x2ea450: 0x185e
        },
              a0_0x401865 = {
          _0x1f94dd: 0x1820,
          _0x18507a: 0x16c5,
          _0x1685bc: 0x235b,
          _0x555f3b: 0x1f30,
          _0x1645e3: 0x235b,
          _0x4830f6: 0x185e,
          _0x4ff348: 0x1f30,
          _0x407919: 0x2001,
          _0x2367d1: 0x1063
        },
              a0_0x559e8f = {
          _0x51ca7a: 0x4a9,
          _0x523f9f: 0x1349
        },
              a0_0x2317b6 = {
          _0x48b932: 0x1a3,
          _0x55d45a: 0xbc2
        },
              a0_0x162bd2 = {
          _0x506793: 0xc1d,
          _0x2b00ef: 0x1349
        },
              a0_0x2b1e4a = {
          _0x463e3e: 0x1985,
          _0x4776c8: 0x2235,
          _0x468cf8: 0x1985,
          _0xd0b706: 0x1ed,
          _0x1a15e4: 0x1d2,
          _0xa1fda7: 0x1f43
        },
              a0_0xca0a0a = {
          _0x4ea255: 0x4c3,
          _0x1f76b9: 0x2001
        },
              a0_0x599c7a = {
          _0x418696: 0x1d66,
          _0x24dd0b: 0x186b,
          _0x431274: 0x15b2,
          _0x607cb8: 0x1915,
          _0x51012b: 0x13f4
        },
              a0_0x54ee83 = {
          _0x4253b1: 0x20a9
        },
              a0_0x2928ff = {
          _0x5ec761: 0x1da5,
          _0x3cc85b: 0x20aa
        },
              a0_0x273640 = {
          _0x2b3f44: 0x2530,
          _0x1382af: 0x185e,
          _0x2b99b9: 0x235b,
          _0x3ad980: 0x235b,
          _0x41da44: 0x1f30,
          _0x5f26bb: 0x1f30,
          _0x55f8a3: 0x40d,
          _0x5cc44e: 0x1f30,
          _0x171030: 0x40d
        },
              a0_0xe389b4 = {
          _0x564aca: 0x20a9,
          _0x57302b: 0x1cac
        },
              a0_0x442d79 = {
          _0x4ec616: 0x1076,
          _0x411a2f: 0x1d66,
          _0x579e1e: 0x15e0,
          _0x3ff9d8: 0x235b,
          _0x2626f5: 0x185e,
          _0x268c9b: 0x2530,
          _0x25d198: 0x1161,
          _0x1b43da: 0x15e0,
          _0x769c49: 0x3a6,
          _0x286620: 0x185e,
          _0x436cb8: 0x2530,
          _0x53ee90: 0x1d66,
          _0x5ddac5: 0x15e0,
          _0x2bd4b5: 0x14f8,
          _0x3fb4d2: 0x1d66,
          _0x41faea: 0x15e0,
          _0x5f3765: 0xf63,
          _0x5e9e17: 0x2297
        },
              a0_0x59330b = {
          _0x5b760c: 0x235b,
          _0x4ce54a: 0x1dc,
          _0x3b8524: 0x23c9,
          _0x5b9d7c: 0x2488
        },
              a0_0x10b590 = {
          _0x39a3a2: 0x1d66,
          _0x22920a: 0xadf,
          _0x384702: 0xf9f
        },
              a0_0x53ff07 = {
          _0x28746b: 0x185e,
          _0xf1e660: 0x1cfb,
          _0x41563b: 0x1d66,
          _0x32e54b: 0x16bd,
          _0x185fd2: 0xf9f,
          _0x414e16: 0x2488,
          _0x3dc294: 0x1a3,
          _0x401970: 0x18c,
          _0x381e15: 0x65f
        },
              a0_0x1ce8d8 = {
          _0x88ad7a: 0x1694,
          _0x4ee3c1: 0x204,
          _0x271198: 0x1b29,
          _0x2d66e7: 0xff8,
          _0x19bbd8: 0x1805,
          _0xe6e9cf: 0x22ab,
          _0x4c2a9a: 0xfad,
          _0x4d419a: 0xece,
          _0x2ca801: 0xece,
          _0xa8855c: 0x2488,
          _0x27d8dd: 0x1886
        },
              a0_0x251a64 = {
          _0x72053f: 0x14ff,
          _0x514838: 0x2448,
          _0x490748: 0xdf5,
          _0x5d719b: 0x136a,
          _0x3139c5: 0x1d66,
          _0x1eb61c: 0x1e35,
          _0x49e582: 0x1bef,
          _0xdc68b0: 0x235b,
          _0x1016a1: 0x185e,
          _0x4674cc: 0x14d2,
          _0x5365e9: 0x1c83,
          _0x341908: 0x468,
          _0x397bcd: 0x1a4d,
          _0x2e16b5: 0x468,
          _0x46ff3d: 0x1870,
          _0x1552eb: 0x1063
        },
              a0_0x5d2024 = {
          _0x560c89: 0x59f,
          _0x5b2340: 0x2448,
          _0x102cf3: 0xdf5,
          _0x3c4d2e: 0x2448,
          _0x5b0d29: 0x23c2,
          _0x503ebd: 0x1d66,
          _0x437ba9: 0x1e35,
          _0x1a34b4: 0xc9a,
          _0xd1b088: 0x14d2,
          _0x3ca0df: 0x1da5,
          _0x8dbeb2: 0x1985,
          _0x23f987: 0x185e,
          _0x58c43b: 0x1c2a,
          _0x1950a1: 0x676,
          _0x469fe7: 0x235b,
          _0x4e29f3: 0x1657,
          _0x51e883: 0x1da5,
          _0x31b31c: 0x1b10,
          _0x126a95: 0x1b5a,
          _0x367e6c: 0x1a4d,
          _0x2a5ac6: 0x1d66,
          _0x3c517e: 0x1870,
          _0x391bab: 0x91b,
          _0x3e025f: 0x1063
        },
              a0_0x375fd7 = {
          _0x4d06ee: 0x1d66,
          _0x17d4f4: 0x2072,
          _0x33baa3: 0x1c2a,
          _0xda8ec4: 0x676,
          _0x54ab40: 0x1125,
          _0x3e3f8b: 0x1a4d,
          _0x2c35e7: 0x25e6,
          _0x2653b3: 0x1125,
          _0x3da137: 0x1d66,
          _0x3e46df: 0x1870,
          _0x7b6328: 0x1063
        },
              a0_0xd22455 = {
          _0x14ee94: 0x1d66,
          _0xacfde1: 0x6c0
        },
              a0_0x55125a = {
          _0x5e4abc: 0x1e35,
          _0x2a8fd1: 0xcca,
          _0x40f06b: 0x1e35,
          _0x3e17c9: 0x1d66,
          _0x4a6742: 0xcca,
          _0x36689e: 0x1e35,
          _0x16284e: 0x2019,
          _0x952e7f: 0xfe2,
          _0x510842: 0x1870,
          _0xc78bbf: 0x91b
        },
              a0_0x7ec904 = {
          _0x38656e: 0x15c3
        },
              a0_0x4ee0aa = {
          _0x4e7bcb: 0x1442,
          _0x1ecd12: 0x7ea,
          _0x1cf146: 0x1f83,
          _0x1e7a45: 0x7ea,
          _0x405914: 0x1d66,
          _0x19f0ee: 0x2287,
          _0x3ec576: 0x1b35,
          _0x1f380c: 0x13f4,
          _0x5364ba: 0x1d66,
          _0x28b343: 0x1d66,
          _0x519273: 0x1bb9
        },
              a0_0x4ab69a = {
          _0x16ea1a: 0xa9d,
          _0x16d5d0: 0xf82,
          _0x226997: 0x3b1,
          _0x3e723e: 0x2521,
          _0x6b72c4: 0xd79,
          _0x1d2dab: 0x2530
        },
              a0_0x5786b1 = {
          _0x1ab9ae: 0x20a9
        },
              a0_0x1e6cce = {
          _0x42cf6a: 0x1d66,
          _0x341d1d: 0x15e0,
          _0x89c82: 0x1218
        },
              a0_0x3d4754 = {
          _0x40c578: 0x1d66,
          _0x14e518: 0x1218,
          _0xb9224b: 0x1e6,
          _0x2f3ea6: 0x1870
        },
              a0_0x4f2ba2 = {
          _0x2bdf31: 0x1d66,
          _0x33e8d5: 0x1ced,
          _0x22fde0: 0x2379,
          _0x21b387: 0x1d66,
          _0x1619b8: 0x1db5,
          _0x1a2abd: 0x262d,
          _0xfcf3f5: 0x7d7,
          _0x51e806: 0x1870
        },
              a0_0xa4c5aa = {
          _0x100a5e: 0x235b,
          _0x9e855e: 0x185e,
          _0xa1f213: 0x185e,
          _0x2993e0: 0x20b1,
          _0x19953a: 0x1d66,
          _0x6e3dba: 0x1870
        },
              a0_0x12c8be = {
          _0x59def3: 0x140a,
          _0x2773a6: 0x1d66,
          _0x4ad0a2: 0x1870
        },
              a0_0x3e9f96 = {
          _0x360c55: 0x20a9,
          _0x503d0d: 0x2300,
          _0x5aad13: 0x1d66,
          _0x5ba67d: 0x2134
        },
              a0_0x41ffc3 = {
          _0x19c057: 0x22ff
        },
              a0_0x506c73 = {
          _0x456ce9: 0x235b,
          _0x387227: 0x16c5,
          _0x9e9581: 0x16c5,
          _0x1e315e: 0x20a9
        },
              a0_0xa079d9 = {
          _0x447cde: 0x16c5,
          _0x4a5779: 0x18e2,
          _0xf1ef72: 0x1063
        },
              a0_0x5cefed = {
          _0x1e5a5a: 0x1ff9,
          _0x41445e: 0xad7,
          _0x28faa2: 0xa14,
          _0xe297f1: 0x153b,
          _0xe10e31: 0x17c8,
          _0x330f0b: 0x1002,
          _0xa8d959: 0x111c,
          _0x3e3a4a: 0xb4c,
          _0x2ccb0f: 0x21a1,
          _0x199179: 0x208d,
          _0x31f49b: 0x14a3,
          _0x226420: 0x16dc,
          _0x596591: 0x1605
        },
              a0_0x1b28d6 = {
          _0x323d8f: 0xf79
        };
        _0x1fecf8.r(_0x170c4f), _0x1fecf8.d(_0x170c4f, {
          'api': () => _0x3fd2ac
        });

        var _0x35aa2f = _0x1fecf8(0x13162),
            _0x118e74 = _0x1fecf8(0xd194),
            _0x486eb7 = _0x1fecf8(0x161cd);

        let _0x140bf8 = {
          'requestAnimDict': {},
          'requestNamedPtfxAsset': {}
        };

        const _0x32a6e3 = (_0x34f23f, _0x82c6b5) => {
          const _0x3b1215 = _0x140bf8[_0x34f23f][_0x82c6b5];
          _0x3b1215 && (_0x3b1215.cancel(), delete _0x140bf8[_0x34f23f][_0x82c6b5]), _0x140bf8[_0x34f23f][_0x82c6b5] = _0x486eb7.game.sleep(0xea60).then(() => {
            _0x56e905(_0x34f23f, _0x82c6b5), delete _0x140bf8[_0x34f23f][_0x82c6b5];
          });
        },
              _0x56e905 = (_0x28d263, _0x42f13f) => {
          if ('string' == typeof _0x42f13f) switch (_0x28d263) {
            case 'requestAnimDict':
              _0x486eb7.game.streaming.removeAnimDict(_0x42f13f);

              break;

            case 'requestNamedPtfxAsset':
              _0x486eb7.game.streaming.removeNamedPtfxAsset(_0x42f13f);

          }
        };

        var _0x1df1c = _0x1fecf8(0x76ad),
            _0x1c8dea = _0x1fecf8.n(_0x1df1c),
            _0x10970d = _0x1fecf8(0xaf5f),
            _0x3cabd3 = _0x1fecf8(0x1d7e),
            _0x1d829b = _0x1fecf8(0x14b31),
            _0x20fe80 = _0x1fecf8(0x5d14),
            _0x2f9808 = _0x1fecf8(0x15d76),
            _0x1ebec3 = _0x1fecf8(0x5b63),
            _0x1472d7 = _0x1fecf8(0xb2e6),
            _0x6ff5c = _0x1fecf8(0x1492d),
            _0xc29b3d = _0x1fecf8(0x48c4),
            _0x31cbba = _0x1fecf8(0x6fe0),
            _0x2e4457 = _0x1fecf8.n(_0x31cbba),
            _0x2439eb = _0x1fecf8(0xfc97),
            _0x5107a3 = _0x1fecf8.n(_0x2439eb),
            _0x6849a8 = _0x1fecf8(0xc344),
            _0x5c8157 = _0x1fecf8(0x5be8),
            _0x257354 = _0x1fecf8(0x17df3),
            _0x573c29 = _0x1fecf8(0x620b),
            _0x3f967b = _0x1fecf8(0x13059),
            _0x47a5f7 = _0x1fecf8.n(_0x3f967b),
            _0x22b06c = _0x1fecf8(0x7fa6),
            _0x3bed4b = _0x1fecf8(0x72c3),
            _0x43784e = _0x1fecf8(0x1264b),
            _0x35a07e = _0x1fecf8(0xe651),
            _0x1942a6 = _0x1fecf8.n(_0x35a07e),
            _0x2d4321 = _0x1fecf8(0x12a76),
            _0xd6fed = _0x1fecf8(0x915a),
            _0x2478c4 = _0x1fecf8(0x161cd);

        let _0x4b44fe = {},
            _0x5662e7 = {};
        const _0x3fd9c1 = _0x2478c4.players.local,
              _0x53a9f1 = {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          '\'': '&#39;',
          '/': '&#x2F;',
          '`': '&#x60;',
          '=': '&#x3D;'
        };

        class _0x361efb extends Error {
          constructor() {
            super(), this.name = 'ExpiredEntityError';
          }

        }

        const _0x3fd2ac = {
          'byString': function (_0x205131, _0x34816c) {
            for (var _0x2d4080 = (_0x34816c = (_0x34816c = _0x34816c.replace(/\[(\w+)\]/g, '.$1')).replace(/^\./, '')).split('.'), _0x1b94ce = 0x0, _0x578050 = _0x2d4080.length; _0x1b94ce < _0x578050; ++_0x1b94ce) {
              var _0x338de9 = _0x2d4080[_0x1b94ce];
              if (!(_0x338de9 in _0x205131)) return;
              _0x205131 = _0x205131[_0x338de9];
            }

            return _0x205131;
          },
          'getDistanceBetweenPoints3D': function (_0xbc4900, _0x45bb07) {
            return Math.abs(Math.sqrt(Math.pow(_0x45bb07.x - _0xbc4900.x, 0x2) + Math.pow(_0x45bb07.y - _0xbc4900.y, 0x2) + Math.pow(_0x45bb07.z - _0xbc4900.z, 0x2)));
          },
          'actionAntiFlood': function (_0x553268, _0x5b7839) {
            const _0x1c8a87 = new Date().getTime();

            return null == _0x5662e7[_0x553268] ? (_0x5662e7[_0x553268] = _0x1c8a87, true) : !(_0x5662e7[_0x553268] + _0x5b7839 > _0x1c8a87 || (_0x5662e7[_0x553268] = _0x1c8a87, 0x0));
          }
        };
        _0x3fd2ac.ExpiredEntityError = _0x361efb, _0x3fd2ac.setPlayerPos = (_0x2eb8bf, _0x211c9f, _0x555947, _0x2c96e4 = true) => {
          _0x2eb8bf.pos || (_0x2eb8bf.pos = {}), _0x2eb8bf.pos.x = _0x211c9f.x, _0x2eb8bf.pos.y = _0x211c9f.y, _0x2eb8bf.pos.z = _0x211c9f.z, _0x2c96e4 && (_0x555947 && _0x2eb8bf.vehicle ? _0x2eb8bf.vehicle.setCoordsNoOffset(_0x211c9f.x, _0x211c9f.y, _0x211c9f.z, false, false, false) : _0x2eb8bf.position = _0x211c9f);
        }, _0x3fd2ac.escapeHtml = _0x3714c7 => String(_0x3714c7).replace(/[&<>"'`=/]/g, _0x11bee8 => _0x53a9f1[_0x11bee8]).replace(/\n/g, '\\\\n').replace(/\r/g, '\\\\r').replace(/\t/g, '\\\\t'), _0x3fd2ac.getFractionName = _0x41264f => {
          let _0x5d9e9a = 'Никто';

          switch (_0x41264f) {
            case 0x1:
              _0x5d9e9a = 'Los Santos Police Department';
              break;

            case 0x2:
              _0x5d9e9a = 'Emergency Medical Services';
              break;

            case 0x3:
              _0x5d9e9a = 'Sheriff Department';
              break;

            case 0x4:
              _0x5d9e9a = 'San-Andreas National Guard';
              break;

            case 0x5:
              _0x5d9e9a = 'Government';
              break;

            case 0x6:
              _0x5d9e9a = 'Weazel News';
              break;

            case 0x7:
              _0x5d9e9a = 'FIB';
              break;

            case 0x8:
              _0x5d9e9a = 'The Ballas Gang';
              break;

            case 0x9:
              _0x5d9e9a = 'Los Santos Vagos';
              break;

            case 0xa:
              _0x5d9e9a = 'The Families';
              break;

            case 0xb:
              _0x5d9e9a = 'The Bloods Gang';
              break;

            case 0xc:
              _0x5d9e9a = 'Marabunta Grande';
              break;

            case 0xd:
              _0x5d9e9a = 'La Cosa Nostra';
              break;

            case 0xe:
              _0x5d9e9a = 'Russian Mafia';
              break;

            case 0xf:
              _0x5d9e9a = 'Yakuza';
              break;

            case 0x10:
              _0x5d9e9a = 'Mexican Cartel';
              break;

            case 0x11:
              _0x5d9e9a = 'The Lost MC';
              break;

            case 0x12:
              _0x5d9e9a = 'Angels of Death MC';
              break;

            case 0x13:
              _0x5d9e9a = 'Irish Mafia';
          }

          return _0x5d9e9a;
        }, _0x3fd2ac.isAuthed = () => !!_0x2478c4.players.local.authed, _0x3fd2ac.isAdmin = (_0x5eaa64 = _0x2478c4.players.local) => !!_0x3fd2ac.getEntitySync(_0x5eaa64, 'admin', 'number'), _0x3fd2ac.getAdmin = (_0x1ef06b = _0x2478c4.players.local) => _0x3fd2ac.getEntitySync(_0x1ef06b, 'admin', 'number') || 0x0, _0x3fd2ac.getPlayerStatic = (_0x4d2a2d = _0x2478c4.players.local) => _0x4d2a2d.getVariable('id'), _0x3fd2ac.playSoundFromEntity = (_0x28973c, _0x59a77b, _0xf782aa, _0x3efa2b, _0x292d58) => new Promise(async _0x11a013 => {
          try {
            if (!_0x2478c4.players.exists(_0x28973c)) return _0x11a013();
            await _0x1d829b.f.callServer('sync.api.playSoundFromEntity', [_0x28973c.remoteId, _0x59a77b, _0xf782aa, _0x3efa2b, _0x292d58]), _0x11a013(true);
          } catch (_0xf4772c) {
            return _0x3fd2ac.sendError(_0xf4772c), _0x11a013();
          }
        }), _0x3fd2ac.playSoundFromCoord = (_0x13b0b7, _0x27703a, _0x533996, _0x3ed84d, _0x4c4bb8, _0x17014a, _0x343d98, _0x1b6f81, _0x18004e) => new Promise(async _0x225ad5 => {
          try {
            await _0x1d829b.f.callServer('sync.api.playSoundFromCoord', [_0x13b0b7, _0x27703a, _0x533996, _0x3ed84d, _0x4c4bb8, _0x17014a, _0x343d98, _0x1b6f81, _0x18004e]), _0x225ad5(true);
          } catch (_0x129984) {
            return _0x3fd2ac.sendError(_0x129984), _0x225ad5();
          }
        }), _0x3fd2ac.taskLookAt = (_0x69acae, _0x432874, _0x39197e) => new Promise(async _0x41f0e3 => {
          try {
            if (!_0x2478c4.players.exists(_0x69acae) || !_0x2478c4.players.exists(_0x432874)) return _0x41f0e3();
            await _0x1d829b.f.callServer('sync.api.taskLookAt', [_0x69acae.remoteId, _0x432874.remoteId, _0x39197e]), _0x41f0e3(true);
          } catch (_0x3fb6e1) {
            return _0x3fd2ac.sendError(_0x3fb6e1), _0x41f0e3();
          }
        }), _0x3fd2ac.stopAnim = () => {
          _0x1ebec3.v.stopAnims();
        }, _0x3fd2ac.taskPlayAnim = (_0x3db1f3, _0x311d14, _0x235480 = 0x0, _0x52fde1 = true, _0x1b452a = false, _0x5705bd = false, _0x482700 = null, _0x1899e1) => _0x1ebec3.v.taskPlayAnim(_0x3db1f3, _0x311d14, _0x235480, _0x52fde1, _0x1b452a, _0x5705bd, _0x482700, _0x1899e1), _0x3fd2ac.taskPlayAnimAdvanced = (_0x5eb478, _0x41bc84, _0x2cb90e, _0xb89d38, _0x13b760, _0x53bcc7, _0x372882 = 0x160a, _0x3d0049 = true, _0x30f143 = false, _0x4606a3 = false, _0x5c8862 = null) => new Promise((_0x48d7ac, _0x3f7f97) => {
          if (!_0x4606a3 && _0x2478c4.players.local.vehicle) return _0x48d7ac();

          _0x3fd2ac.requestAnimDict(_0x5eb478).then(async () => {
            try {
              await _0x1d829b.f.callServer('sync.api.taskPlayAnimAdvanced', [_0x5eb478, _0x41bc84, _0x2cb90e, _0xb89d38, _0x13b760, _0x53bcc7, _0x372882, _0x3d0049, _0x30f143, _0x4606a3, _0x5c8862]), _0x48d7ac(_0x2478c4.game.entity.getEntityAnimDuration(_0x5eb478, _0x41bc84));
            } catch (_0x9fb381) {
              return _0x3fd2ac.sendError(_0x9fb381), _0x48d7ac();
            }
          });
        }), _0x3fd2ac.requestAnimDict = (_0x4e92c8, _0xdff742 = false) => new Promise(async (_0x543e1c, _0x3c1c47) => {
          if (_0x2478c4.game.streaming.hasAnimDictLoaded(_0x4e92c8)) return _0x543e1c(true);

          _0x2478c4.game.streaming.requestAnimDict(_0x4e92c8);

          for (let _0x4a010b = 0x0; !_0x2478c4.game.streaming.hasAnimDictLoaded(_0x4e92c8) && _0x4a010b < 0x1f4; ++_0x4a010b) {
            if (0x1f4 === _0x4a010b) return _0x543e1c('Ошибка requestAnimDict. Dict: ' + _0x4e92c8);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0xdff742 || _0x32a6e3('requestAnimDict', _0x4e92c8), _0x543e1c(true);
        }), _0x3fd2ac.waitForIpl = _0x5df1bc => new Promise(async (_0x6f5e32, _0x464119) => {
          if (_0x2478c4.game.streaming.isIplActive(_0x5df1bc)) return _0x6f5e32(true);

          for (let _0x54bbe8 = 0x0; !_0x2478c4.game.streaming.isIplActive(_0x5df1bc) && _0x54bbe8 < 0x1f4; ++_0x54bbe8) {
            if (0x1f4 === _0x54bbe8) return _0x6f5e32('Ошибка isIplActive. Dict: ' + _0x5df1bc);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x6f5e32(true);
        }), _0x3fd2ac.requestStreamedTextureDict = (_0x4f72e2, _0x19feff = true) => new Promise(async (_0xf6c7f, _0x391957) => {
          if (_0x2478c4.game.graphics.hasStreamedTextureDictLoaded(_0x4f72e2)) return _0xf6c7f(true);

          _0x2478c4.game.graphics.requestStreamedTextureDict(_0x4f72e2, _0x19feff);

          for (let _0x3551cd = 0x0; !_0x2478c4.game.graphics.hasStreamedTextureDictLoaded(_0x4f72e2) && _0x3551cd < 0x1f4; ++_0x3551cd) {
            if (0x1f4 === _0x3551cd) return _0xf6c7f('Ошибка requestStreamedTextureDict. Texture: ' + _0x4f72e2);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0xf6c7f(true);
        }), _0x3fd2ac.requestNamedPtfxAsset = _0x5168cc => new Promise(async (_0x3f1564, _0xe2e106) => {
          if (_0x2478c4.game.streaming.hasNamedPtfxAssetLoaded(_0x5168cc)) return _0x3f1564(true);

          _0x2478c4.game.streaming.requestNamedPtfxAsset(_0x5168cc);

          for (let _0x366d46 = 0x0; !_0x2478c4.game.streaming.hasNamedPtfxAssetLoaded(_0x5168cc) && _0x366d46 < 0x1f4; ++_0x366d46) {
            if (0x1f4 === _0x366d46) return _0x3f1564('Ошибка requestNamedPtfxAsset. asset: ' + _0x5168cc);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x32a6e3('requestNamedPtfxAsset', _0x5168cc), _0x3f1564(true);
        }), _0x3fd2ac.requestHudScaleform = _0x2bd8ce => new Promise(async (_0x9ef905, _0x2df7b2) => {
          if (_0x2478c4.game.graphics.hasHudScaleformLoaded(_0x2bd8ce)) return _0x9ef905(true);

          _0x2478c4.game.graphics.requestHudScaleform(_0x2bd8ce);

          for (let _0x3e9f9e = 0x0; !_0x2478c4.game.graphics.hasHudScaleformLoaded(_0x2bd8ce) && _0x3e9f9e < 0x1f4; ++_0x3e9f9e) {
            if (0x1f4 === _0x3e9f9e) return _0x9ef905('Ошибка requestHudScaleform. Texture: ' + _0x2bd8ce);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x9ef905(true);
        }), _0x3fd2ac.requestScaleformMovie = _0x6e7e9a => new Promise(async (_0x36ac0a, _0x719412) => {
          const _0x47881d = _0x2478c4.game.graphics.requestScaleformMovie(_0x6e7e9a);

          if (_0x2478c4.game.graphics.hasScaleformMovieLoaded(_0x47881d)) return _0x36ac0a(_0x47881d);

          for (let _0x3e96a9 = 0x0; !_0x2478c4.game.graphics.hasScaleformMovieLoaded(_0x47881d) && _0x3e96a9 < 0x1f4; ++_0x3e96a9) {
            if (0x1f4 === _0x3e96a9) return _0x36ac0a('Ошибка requestScaleformMovie. Texture: ' + _0x6e7e9a);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x36ac0a(_0x47881d);
        }), _0x3fd2ac.requestCollisionAround = () => new Promise(async (_0x392c20, _0x291c81) => {
          if (_0x2478c4.players.local.hasCollisionLoadedAround()) return _0x392c20(true);

          for (let _0x244470 = 0x0; !_0x2478c4.players.local.hasCollisionLoadedAround() && _0x244470 < 0x1f4; ++_0x244470) {
            if (0x1f4 === _0x244470) return _0x392c20('Ошибка waitCollisionLoadAround');
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x392c20(true);
        }), _0x3fd2ac.loadModel = _0x5c76c7 => new Promise(async (_0x510406, _0x3c5611) => {
          if (_0x2478c4.game.streaming.hasModelLoaded(_0x2478c4.game.joaat(_0x5c76c7))) return _0x510406();

          _0x2478c4.game.streaming.requestModel(_0x2478c4.game.joaat(_0x5c76c7));

          for (let _0x478269 = 0x0; !_0x2478c4.game.streaming.hasModelLoaded(_0x2478c4.game.joaat(_0x5c76c7)) && _0x478269 < 0x1f4; ++_0x478269) {
            if (0x1f4 === _0x478269) return _0x510406('Ошибка requestModel. Model: ' + _0x5c76c7);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x510406(true);
        }), _0x3fd2ac.loadWeaponAsset = _0x147a56 => new Promise(async (_0x2994c2, _0x34a8b9) => {
          try {
            if (_0x2478c4.game.weapon.hasWeaponAssetLoaded(_0x2478c4.game.joaat(_0x147a56) >> 0x0)) return _0x2994c2();

            _0x2478c4.game.weapon.requestWeaponAsset(_0x2478c4.game.joaat(_0x147a56) >> 0x0, 0x1f, 0x0);

            let _0x598cd7 = 0x0;

            for (; !_0x2478c4.game.weapon.hasWeaponAssetLoaded(_0x2478c4.game.joaat(_0x147a56) >> 0x0);) {
              if (_0x598cd7 > 0x1388) return _0x2994c2('Ошибка requestWeaponAsset. Model: ' + _0x147a56);
              _0x598cd7++, await _0x2478c4.game.sleep(0x0);
            }

            return _0x2994c2(true);
          } catch (_0x5e81a3) {
            return _0x3fd2ac.sendError(_0x5e81a3), _0x2994c2();
          }
        }), _0x3fd2ac.loadRopeTextures = () => new Promise(async (_0x595b2d, _0x352426) => {
          try {
            if (_0x3fd2ac.invokeNative('ROPE_ARE_TEXTURES_LOADED')) return _0x595b2d();

            _0x3fd2ac.invokeNative('ROPE_LOAD_TEXTURES');

            for (let _0x5b2c46 = 0x0; !_0x3fd2ac.invokeNative('ROPE_ARE_TEXTURES_LOADED') && _0x5b2c46 < 0x1f4; ++_0x5b2c46) {
              if (0x1f4 === _0x5b2c46) return _0x595b2d('Ошибка loadRopeTextures.');
              await _0x2478c4.game.sleep(0xa);
            }

            return _0x595b2d(true);
          } catch (_0x3d7181) {
            return _0x3fd2ac.sendError(_0x3d7181), _0x595b2d();
          }
        }), _0x3fd2ac.requestAnimSet = _0x101f60 => new Promise(async (_0x217dc0, _0x1f3587) => {
          if (_0x2478c4.game.streaming.hasClipSetLoaded(_0x101f60)) return _0x217dc0(true);

          _0x2478c4.game.streaming.requestAnimSet(_0x101f60);

          for (let _0x546992 = 0x0; !_0x2478c4.game.streaming.hasClipSetLoaded(_0x101f60) && _0x546992 < 0x1f4; ++_0x546992) {
            if (0x1f4 === _0x546992) return _0x217dc0('Ошибка requestAnimSet. Set: ' + _0x101f60);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x217dc0(true);
        }), _0x3fd2ac.requestClipSet = _0x386651 => new Promise(async (_0x4231b1, _0x520fd1) => {
          if (_0x2478c4.game.streaming.hasClipSetLoaded(_0x386651)) return _0x4231b1(true);

          _0x2478c4.game.streaming.requestClipSet(_0x386651);

          for (let _0x263fcb = 0x0; !_0x2478c4.game.streaming.hasClipSetLoaded(_0x386651) && _0x263fcb < 0x1f4; ++_0x263fcb) {
            if (0x1f4 === _0x263fcb) return _0x4231b1('Ошибка requestClipSet. Set: ' + _0x386651);
            await _0x2478c4.game.sleep(0xa);
          }

          return _0x4231b1(true);
        }), _0x3fd2ac.setMovementClipset = (_0x19f250, _0x20bc96 = 0x1) => new Promise(async (_0x574322, _0x275b31) => {
          try {
            await _0x3fd2ac.requestAnimSet(_0x19f250), await _0x1d829b.f.callServer('sync.api.setMovementClipset', [_0x19f250, _0x20bc96]), _0x574322(true);
          } catch (_0x4532b6) {
            return _0x3fd2ac.sendError(_0x4532b6), _0x574322();
          }
        }), _0x3fd2ac.resetMovementClipset = () => new Promise(async (_0x297df2, _0x36394c) => {
          try {
            await _0x1d829b.f.callServer('sync.api.resetMovementClipset'), _0x297df2(true);
          } catch (_0x56c892) {
            return _0x3fd2ac.sendError(_0x56c892), _0x297df2();
          }
        }), _0x3fd2ac.interpolateCamera = (_0x1d2e5b, _0x13c43b, _0x5a3e70, _0x544daa, _0x27e3ed, _0x26fc3e, _0x28c3eb, _0x5e7a90, _0x2842ef) => new Promise(async (_0x3e790c, _0x5d7e9b) => {
          try {
            let _0x3d0ab4 = _0x2478c4.cameras.new('default', _0x1d2e5b, _0x13c43b, _0x5a3e70),
                _0x4f0453 = _0x2478c4.cameras.new('default', _0x27e3ed, _0x26fc3e, _0x28c3eb);

            _0x3d0ab4.pointAtCoord(_0x544daa.x, _0x544daa.y, _0x544daa.z), _0x4f0453.pointAtCoord(_0x5e7a90.x, _0x5e7a90.y, _0x5e7a90.z), _0x2478c4.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x4f0453.setActiveWithInterp(_0x3d0ab4.handle, _0x2842ef, 0x0, 0x0), await _0x2478c4.game.sleep(_0x2842ef), _0x3d0ab4.destroy(), _0x4f0453.destroy(), _0x3e790c(true);
          } catch (_0x24e2fa) {
            return _0x3fd2ac.sendError(_0x24e2fa), _0x3e790c();
          }
        }), _0x3fd2ac.displayHelpString = (_0x3b1117, _0x5b9f51, _0x3529e4, _0x11c8b8) => {
          _0x2478c4.game.gxt.set('DHS_LONG_TEXT_ENTRY', _0x3b1117), _0x2478c4.game.ui.setTextComponentFormat('DHS_LONG_TEXT_ENTRY');

          for (let _0x51c4d0 = 0x0, _0x5efdcf = _0x3b1117.length; _0x51c4d0 < _0x5efdcf; _0x51c4d0 += 0x63) _0x2478c4.game.ui.addTextComponentSubstringPlayerName(_0x3b1117.substr(_0x51c4d0, Math.min(0x63, _0x3b1117.length - _0x51c4d0)));

          _0x2478c4.game.ui.displayHelpTextFromStringLabel(0x0, _0x5b9f51, _0x3529e4, _0x11c8b8), _0x2478c4.game.gxt.reset('DHS_LONG_TEXT_ENTRY');
        }, _0x3fd2ac.displayHelpStringTrans = (_0x15e38f, ..._0x529809) => {
          let _0x3961e8,
              _0x4e1371,
              _0xe95679,
              _0x4c0db7 = {};

          'object' == typeof _0x529809[0x0] ? (_0x4c0db7 = _0x529809[0x0], _0x3961e8 = _0x529809[0x1], _0x4e1371 = _0x529809[0x2], _0xe95679 = _0x529809[0x3]) : (_0x3961e8 = _0x529809[0x0], _0x4e1371 = _0x529809[0x1], _0xe95679 = _0x529809[0x2]), _0x3fd2ac.displayHelpString(_0x3fd2ac.language.translatePlayer(_0x15e38f, _0x4c0db7), _0x3961e8, _0x4e1371, _0xe95679);
        }, _0x3fd2ac.getPointAtBoneCoords = (_0x20c095, _0x2f663c, _0x55aa99, _0x48e94c, _0x3bb3e7) => new Promise(async (_0x4462fe, _0x1f5f89) => {
          try {
            const _0x3c824f = _0x20c095.getBoneIndexByName(_0x2f663c);

            if (-0x1 === _0x3c824f) return _0x1f5f89(false);

            const _0x15312b = _0x20c095.getWorldPositionOfBone(_0x3c824f),
                  _0x504241 = _0x20c095.getOffsetFromGivenWorldCoords(_0x15312b.x, _0x15312b.y, _0x15312b.z);

            let _0x31a8c0 = _0x504241.x,
                _0x1925d1 = _0x504241.y,
                _0x456dd0 = _0x504241.z;
            return _0x4462fe([_0x20c095.getOffsetFromInWorldCoords(_0x31a8c0 + _0x3fd2ac.f(_0x55aa99), _0x1925d1 + _0x3fd2ac.f(_0x48e94c), _0x456dd0 + _0x3fd2ac.f(_0x3bb3e7)), _0x20c095.getOffsetFromInWorldCoords(0x0, _0x1925d1, _0x456dd0)]);
          } catch (_0x1fb130) {
            return _0x3fd2ac.sendError(_0x1fb130), _0x4462fe();
          }
        }), _0x3fd2ac.pointCamAtPlayerBone = (_0x28e88d, _0x405a52, _0x1aa379, _0x27a486, _0x5468af, _0x34f36f) => new Promise(async (_0x29c6f2, _0x3f428c) => {
          try {
            const _0x316636 = _0x2478c4.players.local;

            let _0x50bacf = _0x316636.getBoneCoords(_0x405a52, 0x0, 0x0, 0x0),
                _0x167052 = _0x316636.getOffsetFromGivenWorldCoords(_0x50bacf.x, _0x50bacf.y, _0x50bacf.z),
                _0x3c81a6 = _0x167052.x,
                _0x138234 = _0x167052.y,
                _0xe0be0e = _0x167052.z,
                _0x149a17 = _0x316636.getOffsetFromInWorldCoords(_0x3c81a6, _0x138234, _0xe0be0e),
                _0x4257bb = _0x28e88d,
                _0x3426bc = _0x316636.position,
                _0xf6be99 = _0x316636.getHeading(),
                _0x265b03 = new _0x2478c4.Vector3(0x0, 2.5, 0x0),
                _0x2c25a3 = _0x2478c4.game.object.getObjectOffsetFromCoords(_0x3426bc.x, _0x3426bc.y, _0x3426bc.z, _0xf6be99, _0x265b03.x, _0x265b03.y, _0x265b03.z),
                _0x37b08b = _0x2478c4.cameras.new('default');

            _0x37b08b.setCoord(_0x2c25a3.x + _0x1aa379, _0x2c25a3.y + _0x27a486, _0x2c25a3.z + _0x5468af + 0.25), _0x37b08b.setFov(_0x34f36f ?? 0x32), _0x37b08b.pointAtCoord(_0x149a17.x, _0x149a17.y, _0x149a17.z), _0x37b08b.setActiveWithInterp(_0x4257bb.handle, 0x1f4, 0x1, 0x1), await _0x2478c4.game.sleep(0x1), _0x28e88d.destroy(), _0x29c6f2(_0x37b08b);
          } catch (_0x6fef0d) {
            return _0x3fd2ac.sendError(_0x6fef0d), _0x29c6f2();
          }
        }), _0x3fd2ac.playScreenEffect = (_0x179444, _0x561639, _0x44e709 = true) => {
          if (_0x561639 < 0x0) _0x2478c4.game.graphics.getScreenEffectIsActive(_0x179444) && _0x2478c4.game.graphics.stopScreenEffect(_0x179444);else {
            if (!_0x44e709 && _0x2478c4.game.graphics.getScreenEffectIsActive(_0x179444)) return;
            _0x1fecf8.g.screenEffect = _0x179444, _0x2478c4.game.graphics.startScreenEffect(_0x179444, _0x561639, false), _0x1fecf8.g.screenEffectTimeout = _0x2478c4.game.sleep(_0x561639).then(() => {
              _0x3fd2ac.playScreenEffect(_0x179444, -0x1);
            });
          }
        }, _0x3fd2ac.startCamShaking = (_0x303373, _0x47ea84) => {
          try {
            _0x47ea84 < 0x0 ? _0x2478c4.game.cam.stopGameplayCamShaking(true) : (_0x2478c4.game.cam.shakeGameplayCam('DRUNK_SHAKE', parseFloat(_0x303373) > 0x4 ? 0x4 : parseFloat(_0x303373)), _0x1fecf8.g.shakeEffectTimeout && (_0x1fecf8.g.shakeEffectTimeout.cancel(), _0x1fecf8.g.trailerAttachTimer = undefined), _0x1fecf8.g.shakeEffectTimeout = _0x2478c4.game.sleep(_0x47ea84).then(() => {
              _0x2478c4.game.cam.stopGameplayCamShaking(true);
            }));
          } catch (_0x4c8897) {
            _0x3fd2ac.sendError(_0x4c8897);
          }
        }, _0x3fd2ac.startDrunkEffect = (_0x37cc02 = _0x1fecf8.g.currentDrunkLevel ? _0x1fecf8.g.currentDrunkLevel : 0x1, _0x3f3b7b = 0x493e0) => new Promise(async (_0x26c6cb, _0x365caa) => {
          const a0_0x3734bb = {
            _0x2fcfe4: 0x12e3
          };

          try {
            return isNaN(_0x1fecf8.g.currentDrunkLevel) ? _0x1fecf8.g.currentDrunkLevel = 0x1 : _0x1fecf8.g.currentDrunkLevel += 0x1, 0x2 == _0x37cc02 ? await _0x3fd2ac.setMovementClipset('move_m@drunk@slightlydrunk') : 0x3 == _0x37cc02 ? await _0x3fd2ac.setMovementClipset('move_m@drunk@moderatedrunk') : 0x4 == _0x37cc02 ? (await _0x3fd2ac.setMovementClipset('move_m@drunk@verydrunk'), _0x2478c4.game.graphics.setNoisinessoveride(0.25), _0x2478c4.game.graphics.setNoiseoveride(true)) : 0x5 == _0x37cc02 ? _0x2478c4.events.callRemote('2796402233', 0x19) : 0x6 == _0x37cc02 && _0x2478c4.events.callRemote('2796402233', 0x64), _0x3fd2ac.invokeNative('SET_PED_IS_DRUNK', _0x2478c4.players.local, true), _0x2478c4.game.cam.shakeGameplayCam('DRUNK_SHAKE', parseFloat(_0x37cc02) > 0x4 ? 0x4 : parseFloat(_0x37cc02)), _0x2478c4.players.local.setConfigFlag(0x64, true), _0x2478c4.players.local.setMotionBlur(true), _0x2478c4.events.callRemote('2853597514', true), _0x1fecf8.g.drunkTimeout && (_0x1fecf8.g.drunkTimeout.cancel(), _0x1fecf8.g.drunkTimeout = undefined), _0x1fecf8.g.drunkTimeout = _0x2478c4.game.sleep(_0x3f3b7b).then(() => {
              _0x3fd2ac.stopDrunkEffect();
            }), _0x26c6cb(true);
          } catch (_0x39b351) {
            return _0x3fd2ac.sendError(_0x39b351), _0x26c6cb();
          }
        }), _0x3fd2ac.startWeedEffect = (_0x1d8ccc = 0x1, _0x2dffb8 = _0x1fecf8.g.currentWeedLevel ? _0x1fecf8.g.currentWeedLevel : 0x1, _0xa2b264 = 0x493e0) => new Promise(async (_0x5b361f, _0x292131) => {
          const a0_0x2c708e = {
            _0x9df5a6: 0x995
          };

          switch (isNaN(_0x1fecf8.g.currentWeedLevel) ? _0x1fecf8.g.currentWeedLevel = 0x1 : _0x1fecf8.g.currentWeedLevel += 0x1, _0x1fecf8.g.weedTimeout && (_0x1fecf8.g.weedTimeout.cancel(), _0x1fecf8.g.weedTimeout = undefined), _0x1fecf8.g.weedTimeout = _0x2478c4.game.sleep(_0xa2b264).then(() => {
            _0x3fd2ac.stopWeedEffect();
          }), _0x1d8ccc) {
            case 0x1:
              break;

            case 0x2:
              _0x3fd2ac.playScreenEffect('BikerFilter', _0xa2b264, false);

              break;

            case 0x3:
              _0x3fd2ac.playScreenEffect('DMT_flight_intro', _0xa2b264, false), _0x1fecf8.g.currentWeedLevel >= 0x2 && _0x3fd2ac.playScreenEffect('DrugsMichaelAliensFight', _0xa2b264, false);
          }

          return _0x1fecf8.g.weedType = _0x1d8ccc, _0x1fecf8.g.currentWeedLevel >= 0x3 && (_0x3fd2ac.playScreenEffect('DrugsDrivingIn', _0xa2b264, false), _0x3fd2ac.playScreenEffect('DrugsDrivingIn', _0xa2b264, false), _0x2478c4.game.audio.cancelMusicEvent('RE6_START'), _0x2478c4.game.audio.prepareMusicEvent('RE6_START'), _0x2478c4.game.audio.triggerMusicEvent('RE6_START')), _0x2478c4.events.callRemote('7784564', true), _0x5b361f(true);
        }), _0x3fd2ac.stopWeedEffect = () => {
          _0x1fecf8.g.weedTimeout && (_0x1fecf8.g.weedTimeout.cancel(), _0x1fecf8.g.weedTimeout = undefined), _0x1fecf8.g.currentWeedLevel = 0x0, _0x2478c4.game.audio.cancelMusicEvent('RE6_START'), _0x2478c4.game.audio.prepareMusicEvent('RE6_END'), _0x2478c4.game.audio.triggerMusicEvent('RE6_END'), _0x2478c4.events.callRemote('7784564', false);
        }, _0x3fd2ac.stopDrunkEffect = () => new Promise(async (_0x399294, _0x23dda0) => (_0x2478c4.game.cam.stopGameplayCamShaking(true), _0x2478c4.game.graphics.setNoiseoveride(false), _0x3fd2ac.invokeNative('SET_PED_IS_DRUNK', _0x2478c4.players.local, false), _0x2478c4.players.local.setMotionBlur(false), _0x2478c4.players.local.setConfigFlag(0x64, false), _0x3fd2ac.resetMovementClipset(), _0x1fecf8.g.currentDrunkLevel = 0x0, _0x2478c4.events.callRemote('2853597514', false), _0x399294(true))), _0x3fd2ac.startDrugsEffect = (_0x5a60aa = _0x1fecf8.g.currentDrugsLevel ? _0x1fecf8.g.currentDrugsLevel : 0x1, _0x13649c = 0x493e0) => new Promise(async (_0x1ad980, _0x4e747d) => {
          try {
            return isNaN(_0x1fecf8.g.currentDrugsLevel) ? _0x1fecf8.g.currentDrugsLevel = 0x1 : _0x1fecf8.g.currentDrugsLevel += 0x1, 0x2 == _0x5a60aa ? await _0x3fd2ac.setMovementClipset('move_m@drunk@slightlydrunk') : 0x3 == _0x5a60aa ? await _0x3fd2ac.setMovementClipset('move_m@drunk@moderatedrunk') : _0x5a60aa > 0x3 && (await _0x3fd2ac.setMovementClipset('move_m@drunk@verydrunk')), _0x2478c4.players.local.setConfigFlag(0x64, true), _0x3fd2ac.invokeNative('CLEAR_TIMECYCLE_MODIFIER'), _0x2478c4.game.graphics.setTimecycleModifier('BikerFilter'), _0x2478c4.game.graphics.setTimecycleModifierStrength(_0x5a60aa / 0x2), _0x3fd2ac.invokeNative('SET_PED_IS_DRUNK', _0x2478c4.players.local, true), _0x2478c4.events.callRemote('7784564', true), _0x1fecf8.g.drugsTimeout && (_0x1fecf8.g.drugsTimeout.cancel(), _0x1fecf8.g.drugsTimeout = undefined), _0x1fecf8.g.drugsTimeout = _0x2478c4.game.sleep(_0x13649c).then(() => {
              _0x3fd2ac.stopDrugsEffect();
            }), _0x1ad980(true);
          } catch (_0x589406) {
            return _0x3fd2ac.sendError(_0x589406), _0x1ad980();
          }
        }), _0x3fd2ac.stopDrugsEffect = () => new Promise(async (_0x1b44f9, _0x4d0c97) => (_0x3fd2ac.invokeNative('CLEAR_TIMECYCLE_MODIFIER'), _0x3fd2ac.invokeNative('SET_PED_IS_DRUNK', _0x2478c4.players.local, false), _0x2478c4.players.local.setConfigFlag(0x64, false), _0x3fd2ac.resetMovementClipset(), _0x1fecf8.g.currentDrugsLevel = 0x0, _0x2478c4.events.callRemote('7784564', false), _0x1b44f9(true))), _0x3fd2ac.updateHudPosition = () => {
          const _0x5def21 = _0x3fd2ac.getMinimapAnchor(),
                _0x4b2425 = _0x3fd2ac.isBigmapActive(),
                _0x148bb5 = _0x4b2425 ? 1.25 * _0x5def21.width : _0x5def21.width,
                _0x552342 = _0x4b2425 ? 1.25 * _0x5def21.height : _0x5def21.height,
                _0x1cd462 = _0x4b2425 ? 1.25 * _0x5def21.swidth : _0x5def21.swidth,
                _0x430aca = _0x4b2425 ? 1.25 * _0x5def21.left_x : _0x5def21.left_x,
                _0x4379ca = _0x4b2425 ? 1.25 * _0x5def21.right_x : _0x5def21.right_x,
                _0x2f2cb8 = _0x4b2425 ? 1.25 * _0x5def21.sheight : _0x5def21.sheight,
                _0x21e35e = _0x4b2425 ? 1.25 * _0x5def21.top_y : _0x5def21.top_y,
                _0x1600c5 = _0x4b2425 ? 1.25 * _0x5def21.bottom_y : _0x5def21.bottom_y;

          _0x2d4321.globalBrowser.emit('main_updateHudPosition', {
            'width': _0x148bb5,
            'height': _0x552342,
            'swidth': _0x1cd462,
            'sheight': _0x2f2cb8,
            'right_x': _0x4379ca,
            'left_x': _0x430aca,
            'top_y': _0x21e35e,
            'bottom_y': _0x1600c5
          });
        }, _0x3fd2ac.toggleHud = _0x601a78 => {
          const _0x2c0b63 = _0x2478c4.players.local.settings;
          (!_0x2c0b63 || !_0x601a78 || _0x2c0b63 && _0x2c0b63.hud && _0x601a78) && (_0x2478c4.game.ui.displayHud(_0x601a78), _0x601a78 && _0x2c0b63 && _0x2c0b63.radar && _0x3fd2ac.updateHudPosition()), _0x2d4321.globalBrowser.emit('main_toggleHud', {
            'key': 'showHud',
            'value': _0x601a78
          });
        }, _0x3fd2ac.toggleSpeedo = _0x2ea046 => {
          _0x2d4321.globalBrowser && _0x2d4321.globalBrowser.emit('main_toggleHud', {
            'key': 'showSpeedo',
            'value': _0x2ea046
          });
        }, _0x3fd2ac.toggleRadar = _0x2aa2c2 => {
          const _0x1f65fa = _0x2478c4.players.local.settings;
          (!_0x1f65fa || !_0x2aa2c2 || _0x1f65fa && _0x1f65fa.radar && _0x2aa2c2) && (_0x2478c4.game.ui.displayRadar(_0x2aa2c2), _0x2aa2c2 && _0x3fd2ac.updateHudPosition());
        }, _0x3fd2ac.toggleChat = _0x49dc7d => {
          const _0x3bbecf = _0x2478c4.players.local.settings;
          (!_0x49dc7d || _0x49dc7d && (!_0x3bbecf || _0x3bbecf && _0x3bbecf.chat)) && _0x2d4321.globalBrowser.emit('chat_show', _0x49dc7d), _0x49dc7d || (_0x1fecf8.g.interfaces.chat = false);
        }, _0x3fd2ac.chatPush = _0x14e71b => _0x2d4321.globalBrowser.emit('chat_push', _0x14e71b), _0x3fd2ac.ePress = (_0x4dce0c, _0x350881 = 0x3e8) => ('number' != typeof _0x4dce0c && (_0x4dce0c = 0x0), Math.round(Date.now() / _0x350881) < _0x4dce0c != 0x0), _0x3fd2ac.ePressUpdate = (_0x47cb5d = 0x3e8) => Math.round(Date.now() / _0x47cb5d) + 0x1, _0x3fd2ac.moveSkyCamera = async (_0x280c4d = 'down', _0x2cfb1a = 0x1, _0x310f26 = false) => new Promise(async (_0x2eca58, _0x572162) => {
          switch (_0x280c4d) {
            case 'up':
              _0x310f26 || _0x3fd2ac.toggleHud(_0x310f26), _0x1fecf8.g.skyCamera = true, _0x2478c4.game.streaming.switchOutPlayer(_0x2478c4.players.local.handle, 0x0, parseInt(_0x2cfb1a)), _0x2eca58(true);
              break;

            case 'down':
              {
                _0x2478c4.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0);

                let _0x3b7fb2 = 0x0;

                for (_0x2478c4.game.streaming.switchInPlayer(_0x2478c4.players.local.handle), _0x2478c4.game.streaming.allowPlayerSwitchDescent(); _0x2478c4.game.streaming.isPlayerSwitchInProgress() && 0xb4 > _0x3b7fb2;) await _0x2478c4.game.sleep(0x64), _0x3b7fb2++;

                _0x2478c4.game.streaming.stopPlayerSwitch(), _0x3fd2ac.toggleHud(true), _0x1fecf8.g.skyCamera = false, _0x2eca58(true);
                break;
              }
          }
        }), _0x3fd2ac.getVehicleDoorsNumber = _0x42b3ca => {
          try {
            if (!_0x42b3ca || !_0x2478c4.vehicles.exists(_0x42b3ca)) return 0x0;
            let _0x3af711 = 0x0;
            return _0x2478c4.game.vehicle.isThisModelABicycle(_0x42b3ca.model) || _0x2478c4.game.vehicle.isThisModelABike(_0x42b3ca.model) || (_0x3af711 = _0x2478c4.game.vehicle.getVehicleModelMaxNumberOfPassengers(_0x42b3ca.model)), _0x3af711;
          } catch (_0x36821d) {
            _0x3fd2ac.sendError(_0x36821d);
          }
        }, _0x3fd2ac.isVehicleDoorsOpened = _0x304d71 => {
          try {
            if (!_0x304d71 || !_0x2478c4.vehicles.exists(_0x304d71)) return false;
            let _0x5d2259 = false;

            for (let _0x4099d2 = 0x0; _0x4099d2 < _0x3fd2ac.getVehicleDoorsNumber(_0x304d71); _0x4099d2++) if (_0x304d71.getDoorAngleRatio(_0x4099d2) > 0.1) {
              _0x5d2259 = true;
              break;
            }

            return _0x5d2259;
          } catch (_0xc5da21) {
            _0x3fd2ac.sendError(_0xc5da21);
          }
        }, _0x3fd2ac.attachToTrunk = _0x2bcdea => new Promise(async (_0x3acd0b, _0xa40f84) => {
          try {
            return await _0x1d829b.f.callServer('sync.api.attachToTrunk', [_0x2bcdea]), _0x3acd0b(true);
          } catch (_0x535e4a) {
            return _0x3fd2ac.sendError(_0x535e4a), _0x3acd0b();
          }
        }), _0x3fd2ac.detachFromTrunk = _0xde1de6 => new Promise(async (_0xf028d5, _0x2e76c8) => {
          try {
            return await _0x1d829b.f.callServer('sync.api.detachFromTrunk', [_0xde1de6]), _0xf028d5(true);
          } catch (_0x2c36e9) {
            return _0x3fd2ac.sendError(_0x2c36e9), _0xf028d5();
          }
        }), _0x3fd2ac.isDoorOpened = (_0x1fc981, _0x501ce4) => _0x1fc981.getDoorAngleRatio(_0x501ce4) > 0.1, _0x3fd2ac.isTrunkOccupied = _0x3ae681 => null != _0x3ae681.getVariable('playerInTrunk'), _0x3fd2ac.isTrunkOpened = _0x5cfc02 => _0x3fd2ac.getEntitySync(_0x5cfc02, 'trunkDoor', 'boolean'), _0x3fd2ac.getNearestPed = (_0x1b7c3d = 0x64) => {
          let _0x99b80a = -0x1,
              _0x420474 = _0x1b7c3d;

          return _0x2478c4.peds.forEachInStreamRange2(_0x4ad0a7 => {
            if (_0x4ad0a7 && _0x4ad0a7.handle && _0x4ad0a7.cData) {
              const _0x55e5b6 = _0x3fd2ac.vdist(_0x2478c4.players.local.position.x, _0x2478c4.players.local.position.y, _0x2478c4.players.local.position.z, _0x4ad0a7.cData.position.x, _0x4ad0a7.cData.position.y, _0x4ad0a7.cData.position.z);

              _0x55e5b6 < _0x420474 && (_0x99b80a = {
                'id': _0x4ad0a7.cData.id,
                'handle': _0x4ad0a7.handle,
                'pedData': _0x4ad0a7,
                'dist': _0x55e5b6
              }, _0x420474 = _0x55e5b6);
            }
          }), -0x1 === _0x99b80a ? {
            'id': null
          } : _0x99b80a;
        }, _0x3fd2ac.playPedSpeech = (_0x4d92b9, _0x5b981f, _0x4e2f5e, _0x3a5590 = 'SPEECH_PARAMS_FORCE_SHOUTED') => {
          if (null == _0x4d92b9) return false;

          _0x2478c4.events.callRemote('3969028811', [_0x4d92b9, _0x5b981f, _0x4e2f5e, _0x3a5590]);
        }, _0x3fd2ac.playAmbientSpeechWithVoice = (_0xbf6886, _0x474fef, _0x4f2926, _0x547f7e = 'SPEECH_PARAMS_FORCE_SHOUTED') => new Promise(async (_0x644885, _0x2b6cf8) => {
          try {
            return await _0x1d829b.f.callServer('sync.api.playAmbientSpeechWithVoice', [_0xbf6886.remoteId, _0x474fef, _0x4f2926, _0x547f7e]), _0x644885(true);
          } catch (_0x4b0cd7) {
            return _0x3fd2ac.sendError(_0x4b0cd7), _0x644885();
          }
        }), _0x3fd2ac.playPedAmbientSpeech = (_0x1c9e0a, _0x8ea074, _0x32b4a8) => new Promise(async (_0x33843a, _0x52eb01) => {
          try {
            return await _0x1d829b.f.callServer('sync.api.playPedAmbientSpeech', [_0x1c9e0a, _0x8ea074, _0x32b4a8]), _0x33843a(true);
          } catch (_0x4b95ab) {
            return _0x3fd2ac.sendError(_0x4b95ab), _0x33843a();
          }
        }), _0x3fd2ac.getVehicleLength = _0x5f1a06 => {
          const _0x5cf23a = _0x2478c4.game.gameplay.getModelDimensions(_0x5f1a06.getModel());

          return _0x5cf23a.max.y - _0x5cf23a.min.y;
        }, _0x3fd2ac.randomProperty = _0x240866 => {
          const _0xa35e2 = Object.keys(_0x240866);

          return _0x240866[_0xa35e2[_0xa35e2.length * Math.random() << 0x0]];
        }, _0x3fd2ac.taskStartScenarioInPlace = (_0x16cf69, _0x330875, _0x251426 = 0x0, _0x1e909f = false) => new Promise(async (_0x94cc9a, _0x5a647a) => {
          try {
            return await _0x1d829b.f.callServer('sync.api.taskStartScenarioInPlace', [_0x16cf69.remoteId, _0x330875, _0x251426, _0x1e909f]), _0x94cc9a(true);
          } catch (_0x139bae) {
            return _0x3fd2ac.sendError(_0x139bae), _0x94cc9a();
          }
        }), _0x3fd2ac.isMyFractionVehicle = _0x5f5cf5 => {
          try {
            return _0x5f5cf5.getVariable('fraction') && _0x5f5cf5.getVariable('fraction') === _0x2478c4.players.local.getVariable('member');
          } catch (_0x5d7c09) {
            _0x3fd2ac.sendError(_0x5d7c09);
          }
        }, _0x3fd2ac.isCrimeFractionVehicle = _0x4b9a50 => {
          try {
            return _0x4b9a50.getVariable('isCrime') && (_0x3fd2ac.isGroupMemberOf(_0x2478c4.players.local, 'mafia') || _0x3fd2ac.isGroupMemberOf(_0x2478c4.players.local, 'biker') || _0x3fd2ac.isGroupMemberOf(_0x2478c4.players.local, 'gang'));
          } catch (_0x5e6111) {
            _0x3fd2ac.sendError(_0x5e6111);
          }
        }, _0x3fd2ac.isMyFamilyVehicle = _0x4ccece => {
          try {
            return _0x4ccece.getVariable('familyId') && _0x4ccece.getVariable('familyId') === _0x2478c4.players.local.getVariable('family');
          } catch (_0x1ff2c9) {
            _0x3fd2ac.sendError(_0x1ff2c9);
          }
        }, _0x3fd2ac.getAllBlipsCreatedByNatives = () => {
          try {
            const _0x1a46ee = _0x3fd2ac.invokeNative('_GET_BLIP_INFO_ID_ITERATOR');

            let _0x42c3aa = _0x3fd2ac.invokeNative('GET_FIRST_BLIP_INFO_ID', _0x1a46ee);

            const _0x3c9e89 = [];

            do {
              _0x42c3aa = _0x3fd2ac.invokeNative('GET_NEXT_BLIP_INFO_ID', _0x1a46ee), _0x2478c4.blips.atHandle(_0x42c3aa) || _0x3c9e89.push(_0x42c3aa);
            } while (_0x3fd2ac.invokeNative('DOES_BLIP_EXIST', _0x42c3aa));

            return _0x3c9e89;
          } catch (_0xc1f676) {
            _0x3fd2ac.sendError(_0xc1f676);
          }
        }, _0x3fd2ac.getWaypointPosition = () => {
          try {
            const _0x305e2f = _0x3fd2ac.invokeNative('_GET_BLIP_INFO_ID_ITERATOR');

            let _0x570645,
                _0x5ef540 = _0x3fd2ac.invokeNative('GET_FIRST_BLIP_INFO_ID', _0x305e2f);

            do {
              _0x3fd2ac.invokeNative('GET_BLIP_INFO_ID_TYPE', _0x5ef540) && (_0x570645 = _0x2478c4.game.ui.getBlipInfoIdCoord(_0x5ef540)), _0x5ef540 = _0x3fd2ac.invokeNative('GET_NEXT_BLIP_INFO_ID', _0x305e2f);
            } while (_0x3fd2ac.invokeNative('DOES_BLIP_EXIST', _0x5ef540));

            return _0x570645;
          } catch (_0x5b3c98) {
            _0x3fd2ac.sendError(_0x5b3c98);
          }
        }, _0x3fd2ac.fadeOut = (_0x57d1c3 = 0x0) => new Promise(async (_0x132d60, _0x471d01) => (_0x2478c4.game.cam.doScreenFadeOut(_0x57d1c3), await _0x2478c4.game.sleep(_0x57d1c3 + 0x1), _0x132d60(true))), _0x3fd2ac.fadeIn = (_0x1eb487 = 0x0) => new Promise(async (_0x38c68b, _0x4d53d4) => (_0x2478c4.game.cam.doScreenFadeIn(_0x1eb487), await _0x2478c4.game.sleep(_0x1eb487 + 0x1), _0x38c68b(true))), _0x3fd2ac.invokeNative = (_0x9c6c25, ..._0x534324) => _0x2478c4.game.invoke(_0x35aa2f.Z[_0x9c6c25].legacy || _0x35aa2f.Z[_0x9c6c25][_0x2f9808.Z], ..._0x534324), _0x3fd2ac.notify = (_0x2abd59, _0x2145c5 = {}) => {
          if (!_0x2abd59) return;

          const _0x356617 = _0x20fe80.u.natural(),
                _0x93134c = _0x2145c5 && null != _0x2145c5.type ? _0x2145c5.type : 'info';

          let _0x12258a = _0x2145c5 && null != _0x2145c5.iconColor ? _0x2145c5.iconColor : 'white';

          const _0x1895df = _0x2145c5 && null != _0x2145c5.title ? _0x2145c5.title : null,
                _0x3edb90 = _0x2145c5 && null != _0x2145c5.subtitle ? _0x2145c5.subtitle : null,
                _0x34ca2f = _0x2145c5 && null != _0x2145c5.icon ? _0x2145c5.icon : null,
                _0x4150b0 = _0x2145c5 && null != _0x2145c5.localIcon ? _0x2145c5.localIcon : null,
                _0xb7a4f2 = _0x2145c5 && null != _0x2145c5.socialClubIcon ? _0x2145c5.socialClubIcon : null,
                _0x1059e2 = !(!_0x2145c5 || null == _0x2145c5.fromPlayer) && _0x2145c5.fromPlayer,
                _0x5a4695 = _0x2145c5 && null != _0x2145c5.description ? _0x2145c5.description : null,
                _0x26c59f = !_0x2145c5 || null == _0x2145c5.small || _0x2145c5.small,
                _0x44dbe7 = _0x2145c5 && null != _0x2145c5.duration ? _0x2145c5.duration : 0x1388;

          return _0x12258a = _0x2145c5 && null == _0x2145c5.iconColor ? _0x3fd2ac.convertNotifyTypeToHex(_0x93134c) : _0x3fd2ac.convertNotifyTypeToHex(_0x12258a), _0x2d4321.globalBrowser.emit('main_pushMapNotification', {
            'uuid': _0x356617,
            'message': _0x2abd59,
            'type': _0x93134c,
            'iconColor': _0x12258a,
            'duration': _0x44dbe7,
            'small': _0x26c59f,
            'title': _0x1895df,
            'subtitle': _0x3edb90,
            'icon': _0x34ca2f,
            'localIcon': _0x4150b0,
            'socialClubIcon': _0xb7a4f2,
            'fromPlayer': _0x1059e2,
            'description': _0x5a4695
          }), _0x356617;
        }, _0x3fd2ac.notifyTrans = (_0x33173e, ..._0x43dc1b) => {
          let _0x43f6a1 = {},
              _0x37bacb = {};
          null != _0x43dc1b[0x1] ? (_0x43f6a1 = _0x43dc1b[0x0], _0x37bacb = _0x43dc1b[0x1]) : _0x43dc1b[0x0] && (_0x37bacb = _0x43dc1b[0x0]), _0x37bacb.title && (_0x37bacb.title = _0x3fd2ac.language.translatePlayer(_0x37bacb.title, {})), _0x37bacb.subtitle && (_0x37bacb.subtitle = _0x3fd2ac.language.translatePlayer(_0x37bacb.subtitle, {})), _0x3fd2ac.notify(_0x3fd2ac.language.translatePlayer(_0x33173e, _0x43f6a1), _0x37bacb);
        }, _0x3fd2ac.longNotify = (_0x4d0520, _0x293056 = 'warn', _0x34e5c8) => {
          _0x2d4321.globalBrowser.emit('main_showNotify', {
            'text': _0x4d0520,
            'type': _0x293056,
            'duration': _0x34e5c8
          }), _0x3fd2ac.playSound('notification_' + _0x293056, {
            'volume': 0x19
          });
        }, _0x3fd2ac.longNotifyTrans = (_0x40c178, ..._0x3cb837) => {
          let _0x1ed65f = {},
              _0x3d0c28 = 'warn',
              _0x2a7eb5 = 0x1388;
          'object' == typeof _0x3cb837[0x0] ? (_0x1ed65f = _0x3cb837[0x0], _0x3d0c28 = _0x3cb837[0x1], _0x2a7eb5 = _0x3cb837[0x2]) : (_0x3d0c28 = _0x3cb837[0x0], _0x2a7eb5 = _0x3cb837[0x1]), _0x3fd2ac.longNotify(_0x3fd2ac.language.translatePlayer(_0x40c178, _0x1ed65f), _0x3d0c28, _0x2a7eb5);
        }, _0x3fd2ac.convertNotifyTypeToHex = _0x496f40 => {
          let _0x575b06 = _0x496f40;

          switch (_0x496f40) {
            case 'warn':
              _0x575b06 = '#FFC130';
              break;

            case 'error':
              _0x575b06 = '#F53A3A';
              break;

            case 'success':
              _0x575b06 = '#58DE80';
              break;

            case 'info':
              _0x575b06 = '#FFFFFF';
          }

          return _0x575b06;
        }, _0x3fd2ac.getClosestVehicle = (_0x4d64a8 = 0x64) => {
          try {
            let _0x3cec69 = -0x1,
                _0x8f1837 = _0x4d64a8;

            return _0x2478c4.vehicles.forEachInStreamRange(_0x57f4ac => {
              try {
                if (!_0x2478c4.vehicles.exists(_0x57f4ac)) return;

                const _0x21800d = _0x3fd2ac.vdist(_0x2478c4.players.local.position.x, _0x2478c4.players.local.position.y, _0x2478c4.players.local.position.z, _0x57f4ac.position.x, _0x57f4ac.position.y, _0x57f4ac.position.z);

                _0x21800d < _0x8f1837 && (_0x3cec69 = _0x57f4ac.remoteId, _0x8f1837 = _0x21800d);
              } catch (_0x18d233) {
                _0x3fd2ac.sendError(_0x18d233);
              }
            }), -0x1 === _0x3cec69 ? null : _0x2478c4.vehicles.atRemoteId(_0x3cec69);
          } catch (_0x2063cf) {
            _0x3fd2ac.sendError(_0x2063cf);
          }
        }, _0x3fd2ac.getClosestPlayer = (_0x17d97a, _0x2b4acd = true) => {
          let _0x17f736 = -0x1,
              _0x1fc3b5 = 0x2710;

          return _0x2478c4.players.forEachInStreamRange(_0x24cf1c => {
            if (_0x24cf1c.getVariable('isSpectating') && !_0x2b4acd) return;

            const _0x448071 = _0x3fd2ac.vdist(_0x24cf1c.position.x, _0x24cf1c.position.y, _0x24cf1c.position.y, _0x2478c4.players.local.position.x, _0x2478c4.players.local.position.y, _0x2478c4.players.local.position.y);

            _0x2478c4.players.local.remoteId !== _0x24cf1c.remoteId && _0x448071 <= _0x17d97a && _0x448071 < _0x1fc3b5 && (_0x17f736 = _0x24cf1c, _0x1fc3b5 = _0x448071);
          }), _0x17f736;
        }, _0x3fd2ac.getLookingAtEntity = () => {
          const _0x37ef31 = _0x2478c4.players.local,
                _0x41c63e = _0x3fd2ac.getScreenActiveResolution(0x1, 0x1);

          let _0x41e17b = _0x37ef31.getBoneCoords(0x796e, 0.2, 0x0, 0x0),
              _0x3ea3c2 = _0x2478c4.game.graphics.screen2dToWorld3d([_0x41c63e.x / 0x2, _0x41c63e.y / 0x2, 0x0]);

          if (null == _0x3ea3c2) return null;

          const _0x15caae = _0x3fd2ac.testPointToPoint(_0x41e17b, _0x3ea3c2, _0x37ef31, 0x1e);

          if (!_0x15caae) return null;
          if ('number' == typeof _0x15caae.entity) return null;
          if (undefined === _0x15caae.entity.type) return null;

          const _0xe42aa5 = 'ped' === _0x15caae.entity.type ? _0x15caae.entity.getCoords(true) : _0x15caae.entity.position,
                _0x8bd804 = _0x37ef31.position;

          return _0x3fd2ac.vdist(_0xe42aa5.x, _0xe42aa5.y, _0xe42aa5.z, _0x8bd804.x, _0x8bd804.y, _0x8bd804.z, true) > 0x5 ? null : _0x15caae.entity;
        }, _0x3fd2ac.getNearestLookingObject = (_0x45815f = false) => {
          if (!_0x1fecf8.g.objectsItemsStreamed) return null;

          const _0x281ace = _0x2478c4.players.local,
                _0x5768ad = _0x3fd2ac.getScreenActiveResolution(0x1, 0x1);

          let _0x1740c2 = _0x281ace.getBoneCoords(0x322c, 0.5, 0x0, 0x0),
              _0x10a8c0 = _0x2478c4.game.graphics.screen2dToWorld3d([_0x5768ad.x / 0x2, _0x5768ad.y / 0x2, 0x0]);

          if (null == _0x10a8c0) return null;
          _0x1740c2.z -= 0.3;

          const _0x2a77c7 = _0x3fd2ac.testPointToPoint(_0x1740c2, _0x10a8c0, _0x281ace);

          if (!_0x2a77c7) return null;
          const _0x124d8a = _0x2a77c7.position,
                _0x1a5ad1 = [];
          if (_0x45815f) for (const _0x237f06 of _0x2478c4.objects.streamed2()) {
            const _0x3d3329 = _0x3fd2ac.getEntityCoords(_0x237f06),
                  _0x47ac53 = _0x3fd2ac.vdist2(_0x124d8a, _0x3d3329),
                  _0x5876aa = _0x3fd2ac.vdist2(_0x281ace.position, _0x3d3329);

            _0x47ac53 <= 1.2 && _0x5876aa <= 0x2 && _0x1a5ad1.push({
              'distance': _0x47ac53,
              'object': _0x237f06
            });
          } else for (const _0x8afc9 of _0x2478c4.objects.streamedItems()) {
            const _0x3e9b8d = _0x3fd2ac.getEntityCoords(_0x8afc9),
                  _0x1bf507 = _0x3fd2ac.vdist2(_0x124d8a, _0x3e9b8d),
                  _0x1f164d = _0x3fd2ac.vdist2(_0x281ace.position, _0x3e9b8d);

            _0x1bf507 <= 1.2 && _0x1f164d <= 0x2 && _0x1a5ad1.push({
              'distance': _0x1bf507,
              'object': _0x8afc9
            });
          }

          const _0x484f4f = _0x1a5ad1.sort((_0x59ac21, _0x19a179) => _0x59ac21.distance - _0x19a179.distance)[0x0];

          return _0x484f4f ? _0x484f4f.object : null;
        }, _0x3fd2ac.getLookingAtPed = () => {
          const _0xedd904 = _0x2478c4.players.local,
                _0x5e824b = _0x2478c4.game.graphics.getScreenActiveResolution(0x1, 0x1);

          let _0x3d7ebc = _0xedd904.getBoneCoords(0x322c, 0.5, 0x0, 0x0),
              _0x9a9df7 = _0x2478c4.game.graphics.screen2dToWorld3d([_0x5e824b.x / 0x2, _0x5e824b.y / 0x2, 0x1e]);

          if (null == _0x9a9df7) return null;
          _0x3d7ebc.z -= 0.3;

          const _0xe0bf34 = _0x3fd2ac.testPointToPoint(_0x3d7ebc, _0x9a9df7, _0xedd904, 0xc);

          if (!_0xe0bf34) return null;
          if (undefined === _0xe0bf34.entity) return null;
          let _0x36ed0e = _0xe0bf34.entity;
          if (!_0x2478c4.peds.exists(_0x36ed0e)) return null;
          let _0x342a5b = _0xe0bf34.position,
              _0x10bd88 = _0xedd904.position;
          return _0x3fd2ac.vdist(_0x342a5b.x, _0x342a5b.y, _0x342a5b.z, _0x10bd88.x, _0x10bd88.y, _0x10bd88.z, true) > 0x4 ? null : _0x36ed0e;
        }, _0x3fd2ac.getCoordsFromCam = _0x39d471 => {
          try {
            const _0x2a57f9 = _0x3cabd3.X;

            let _0x4b361c = _0x2a57f9.getRot(0x2),
                _0x376bcb = _0x2a57f9.getCoord(),
                _0x29612d = 0.0174532924 * _0x4b361c.z,
                _0x8fea0b = 0.0174532924 * _0x4b361c.x,
                _0x3927c1 = Math.abs(Math.cos(_0x8fea0b));

            return [_0x376bcb.x + -Math.sin(_0x29612d) * (_0x3927c1 + _0x39d471), _0x376bcb.y + Math.cos(_0x29612d) * (_0x3927c1 + _0x39d471), _0x376bcb.z + 0x8 * Math.sin(_0x8fea0b)];
          } catch (_0x154a60) {
            _0x3fd2ac.sendError(_0x154a60);
          }
        }, _0x3fd2ac.vehicleAccess = _0x5aef29 => {
          try {
            return !!_0x5aef29 && (_0x3fd2ac.vehicleIsMyOwn(_0x5aef29) || _0x3fd2ac.vehicleIsMyRent(_0x5aef29) || _0x3fd2ac.isMyFractionVehicle(_0x5aef29) || _0x3fd2ac.isCrimeFractionVehicle(_0x5aef29) || _0x3fd2ac.isMyFamilyVehicle(_0x5aef29) || _0x3fd2ac.vehicleIsMyJob(_0x5aef29) || _0x5aef29.getVariable('partyId') === _0xd6fed.default.party.partyId || _0x3fd2ac.getLocalVariable('activeHijack') && _0x3fd2ac.getEntitySync(_0x5aef29, 'tempHijackOwner', 'number') === _0x2478c4.players.local.getVariable('id') || _0x3fd2ac.getEntitySync(_0x5aef29, 'keyBinds', 'array').some(_0x1f17b9 => _0x2478c4.inventory.getFulllPlayerItems(_0x2478c4.players.local).map(_0x2b507b => _0x2b507b.id).includes(_0x1f17b9)));
          } catch (_0x2b91db) {
            _0x3fd2ac.sendError(_0x2b91db);
          }
        }, _0x3fd2ac.vehicleIsMyJob = _0x18100a => {
          try {
            return _0x18100a.getVariable('fraction') && _0x18100a.getVariable('fraction') > 0x64 && _0x18100a.getVariable('fraction') - 0x64 === _0x2478c4.players.local.getVariable('job');
          } catch (_0x14050d) {
            _0x3fd2ac.sendError(_0x14050d);
          }
        }, _0x3fd2ac.vehicleIsMyRent = _0x4c5bab => !(!_0x4c5bab || null == _0x4c5bab.id) && (_0x4c5bab.getVariable('tempOwner') === _0x2478c4.players.local.getVariable('id') || _0x4c5bab.getVariable('rentBy') === _0x2478c4.players.local.getVariable('id')), _0x3fd2ac.vehicleIsMyOwn = _0x3a0d85 => !(!_0x3a0d85 || null == _0x3a0d85.id) && _0x3a0d85.getVariable('owner') === _0x2478c4.players.local.getVariable('id'), _0x3fd2ac.getHeadingFromCoords = (_0x4a6749, _0x4bbc75) => 0xb4 * Math.atan2(_0x4bbc75.y - _0x4a6749.y, _0x4bbc75.x - _0x4a6749.x) / Math.PI + 0x10e, _0x3fd2ac.getMinimapAnchor = () => {
          const _0x56235b = _0x2478c4.game.graphics.getSafeZoneSize(),
                _0x4c10f9 = _0x2478c4.game.graphics.getScreenAspectRatio(false),
                _0x54ab09 = _0x2478c4.game.graphics.getScreenActiveResolution(0x0, 0x0),
                _0x225f4a = _0x54ab09.x,
                _0x5c43a2 = _0x54ab09.y,
                _0x1b02bc = 0x1 / _0x225f4a,
                _0x53f380 = 0x1 / _0x5c43a2,
                _0x3c53f7 = _0x1b02bc * (_0x225f4a * (0xa * Math.abs(_0x56235b - 0x1) * 0.05)),
                _0x2e143d = _0x1b02bc * (_0x225f4a / (0x4 * _0x4c10f9)),
                _0x5c4eb6 = 0x1 - _0x53f380 * (_0x5c43a2 * (0xa * Math.abs(_0x56235b - 0x1) * 0.05)),
                _0x430d14 = _0x53f380 * (_0x5c43a2 / 5.674),
                _0x3d8933 = _0x5c4eb6 - _0x430d14;

          return {
            'width': _0x2e143d,
            'height': _0x430d14,
            'left_x': _0x3c53f7,
            'bottom_y': _0x5c4eb6,
            'right_x': _0x3c53f7 + _0x2e143d,
            'top_y': _0x3d8933,
            'x': _0x3c53f7,
            'y': _0x3d8933,
            'xunit': _0x1b02bc,
            'yunit': _0x53f380,
            'swidth': _0x225f4a,
            'sheight': _0x5c43a2
          };
        }, _0x3fd2ac.colorForOverlayIdx = _0x5361dc => 0x0, _0x3fd2ac.getCurrentInterior = () => _0x3fd2ac.invokeNative('GET_INTERIOR_FROM_ENTITY', _0x2478c4.players.local.handle), _0x3fd2ac.getCurrentRoomInterior = () => _0x3fd2ac.invokeNative('GET_ROOM_KEY_FROM_ENTITY', _0x2478c4.players.local.handle), _0x3fd2ac.f = _0x26570d => _0x26570d + 0.00001, _0x3fd2ac.hexToRGB = _0x5aa5e9 => {
          if (!/^([0-9a-f]{6}|[0-9a-f]{3})$/i.test(_0x5aa5e9)) return [0xff, 0xff, 0xff];

          const _0x4a0e29 = parseInt(_0x5aa5e9.replace(/[^0-9A-F]/gi, ''), 0x10);

          return [_0x4a0e29 >> 0x10 & 0xff, _0x4a0e29 >> 0x8 & 0xff, 0xff & _0x4a0e29];
        }, _0x3fd2ac.getAddress = (_0xf220c6, _0x31510d, _0x3a9545) => {
          if ('number' != typeof _0xf220c6 || 'number' != typeof _0x31510d || 'number' != typeof _0x3a9545) return 'No Street';

          const _0x49f6f2 = _0x2478c4.game.pathfind.getStreetNameAtCoord(_0xf220c6, _0x31510d, _0x3a9545, 0x0, 0x0);

          return _0x3fd2ac.escapeHtml(_0x2478c4.game.ui.getStreetNameFromHashKey(_0x49f6f2.streetName));
        }, _0x3fd2ac.playFXonPos = async (_0x3f2cd1, _0x30987e, _0x202444, _0xab4c1, _0x4fb0ed, _0x17342e, _0x2e585d = {}) => {
          const _0x53b9dc = new _0x118e74.ParticleFx(_0xab4c1, _0x4fb0ed, _0x2e585d);

          return _0x53b9dc.playOnCoords(_0x3f2cd1, _0x30987e, _0x202444, _0x17342e), _0x53b9dc;
        }, _0x3fd2ac.playFXonPosOnce = async (_0xc09558, _0x1cd44d, _0x329d29, _0x5b2554, _0x53a536, _0x2ecbee = {}) => {
          const _0x53d57f = new _0x118e74.ParticleFx(_0x5b2554, _0x53a536, _0x2ecbee);

          return _0x53d57f.playOnCoordsOnce(_0xc09558, _0x1cd44d, _0x329d29), _0x53d57f;
        }, _0x3fd2ac.playFXonEntity = async (_0x504486, _0x56f5e1, _0x1f5e4c, _0x1e50ee, _0x164f4a = {}) => {
          if (!_0x504486) return;

          const _0x5846da = new _0x118e74.ParticleFx(_0x56f5e1, _0x1f5e4c, _0x164f4a);

          return _0x5846da.playOnEntity(_0x504486, _0x1e50ee), _0x5846da;
        }, _0x3fd2ac.playFXonEntityOnce = async (_0x436c93, _0x1c8865, _0x1b9c13, _0x5ee8de = {}) => {
          if (!_0x436c93) return;

          const _0xb21e2a = new _0x118e74.ParticleFx(_0x1c8865, _0x1b9c13, _0x5ee8de);

          return _0xb21e2a.playOnEntityOnce(_0x436c93), _0xb21e2a;
        }, _0x3fd2ac.playFXonEntityBone = async (_0x354fef, _0x5d35ea, _0x3ee23f, _0xfe580f, _0x35e4e5, _0x2b4f3a = {}) => {
          if (!_0x354fef) return;

          const _0x3e5208 = new _0x118e74.ParticleFx(_0x5d35ea, _0x3ee23f, _0x2b4f3a);

          return _0x3e5208.playOnEntityBone(_0x354fef, _0xfe580f, _0x35e4e5), _0x3e5208;
        }, _0x3fd2ac.playSyncFXonPos = async (_0x435db1, _0x1dbb2c, _0x468c8d, _0x34d765, _0x10907b, _0x4f29b8, _0x34e653 = {}) => {
          _0x2478c4.events.callRemote('674020352', _0x435db1, _0x1dbb2c, _0x468c8d, _0x34d765, _0x10907b, _0x4f29b8, _0x34e653);
        }, _0x3fd2ac.playSyncFXonPosOnce = async (_0x1230d1, _0x52982a, _0x3f9b85, _0x2e9c54, _0x21f13b, _0x4fdd0e = {}) => {
          _0x2478c4.events.callRemote('988653368', _0x1230d1, _0x52982a, _0x3f9b85, _0x2e9c54, _0x21f13b, _0x4fdd0e);
        }, _0x3fd2ac.playSyncFXonEntity = async (_0x16bcb6, _0x210472, _0x42045a, _0x1ee5d5 = {}) => {
          _0x2478c4.events.callRemote('2436363247', _0x16bcb6, _0x210472, _0x42045a, _0x1ee5d5);
        }, _0x3fd2ac.playSyncFXonEntityOnce = async (_0x1ada75, _0x3153d1, _0x2d2bce = {}) => {
          _0x2478c4.events.callRemote('1384871187', _0x1ada75, _0x3153d1, _0x2d2bce);
        }, _0x3fd2ac.playSyncFXonEntityBone = async (_0x31e98e, _0x35277, _0xf027bc, _0x3fc281, _0x4832e3 = {}) => {
          _0x2478c4.events.callRemote('415166491', _0x31e98e, _0x35277, _0xf027bc, _0x3fc281, _0x4832e3);
        }, _0x3fd2ac.getCurrentWeapon = (_0x3d0441 = _0x2478c4.players.local) => _0x3fd2ac.invokeNative('GET_SELECTED_PED_WEAPON', _0x3d0441.handle), _0x3fd2ac.getCurrentWeaponAmmo = (_0x1aff0e = _0x2478c4.players.local, _0x278d22) => _0x3fd2ac.invokeNative('GET_AMMO_IN_PED_WEAPON', _0x1aff0e.handle, _0x278d22 || _0x3fd2ac.getCurrentWeapon(_0x1aff0e)), _0x3fd2ac.getAmmoInClip = _0x302f11 => _0x2478c4.players.local.getAmmoInClip(_0x302f11 || _0x3fd2ac.getCurrentWeapon()), _0x3fd2ac.setPlayerWeaponAmmo = (_0x14b9a2 = _0x2478c4.players.local, _0x3aa149, _0x149c20 = 0x0) => {
          _0x14b9a2.setAmmoInClip(_0x3aa149, _0x149c20);
        }, _0x3fd2ac.giveWeaponToPed = (_0x27f4cf = _0x2478c4.players.local, _0x302d7e, _0x12f9f5 = 0x0, _0x53d064 = true) => {
          _0x27f4cf.giveWeapon(_0x302d7e, _0x12f9f5, _0x53d064), _0x27f4cf.setAmmoInClip(_0x302d7e, _0x12f9f5);
        }, _0x3fd2ac.reloadWeapon = (_0x4f8f67 = _0x2478c4.players.local) => {
          _0x3fd2ac.invokeNative('MAKE_PED_RELOAD', _0x4f8f67.handle);
        }, _0x3fd2ac.removePlayerWeapon = (_0x48bdb4 = _0x2478c4.players.local, _0x39c23e) => {
          _0x3fd2ac.invokeNative('REMOVE_WEAPON_FROM_PED', _0x48bdb4.handle, _0x39c23e);
        }, _0x3fd2ac.removeAllWeapons = (_0x17aed2 = _0x2478c4.players.local) => {
          _0x3fd2ac.invokeNative('REMOVE_ALL_PED_WEAPONS', _0x17aed2.handle, true);
        }, _0x3fd2ac.calculateMoney = _0x31edd1 => {
          try {
            const _0x2d6fbc = _0x31edd1 / _0x1fecf8.g.defaultMoneyRate * _0x1fecf8.g.moneyRate;

            return _0x3fd2ac.roundNumber(_0x2d6fbc);
          } catch (_0x442747) {
            _0x3fd2ac.sendError(_0x442747);
          }
        }, _0x3fd2ac.roundNumber = (_0x501154, _0x5c2427 = 0x2) => {
          const _0x26ef28 = Math.pow(0xa, _0x5c2427);

          return Math.round(_0x501154 * _0x26ef28) / _0x26ef28;
        }, _0x3fd2ac.playSound = (_0x47956b, _0x9f4a82 = {}) => new _0x118e74.Sounds2D(_0x47956b, {
          'id': _0x3fd2ac.shortUUID_5(),
          ..._0x9f4a82
        }), _0x3fd2ac.playPitchSound = (_0x1f8b80, _0x28c973) => {
          _0x2478c4.events.call('api.playPitchSound', _0x1f8b80, _0x28c973);
        }, _0x3fd2ac.play3DSound = (_0x647692, _0x58500b) => new Promise(async (_0xc4bee3, _0x3e11b1) => {
          try {
            return _0xc4bee3(await _0x1d829b.f.callServer('sync.api.play3DSound', [_0x647692, _0x58500b]));
          } catch (_0x2c774b) {
            return _0x3fd2ac.sendError(_0x2c774b), _0xc4bee3();
          }
        }), _0x3fd2ac.stopSound = _0x4153f4 => {
          _0x1472d7.P.emit('stopSound', _0x4153f4);
        }, _0x3fd2ac.stopSoundFade = (_0x2d381a, _0x344c7e = 0x3e8) => {
          _0x1472d7.P.emit('stopSoundFade', {
            'id': _0x2d381a,
            'fadeOutTime': _0x344c7e
          });
        }, _0x3fd2ac.stopNetworkSound = _0x1c7338 => {
          _0x1d829b.f.callServer('sync.api.stopSound', _0x1c7338);
        }, _0x3fd2ac.cacheSound = _0x2e85a0 => {
          _0x1472d7.P.emit('cache', _0x2e85a0);
        }, _0x3fd2ac.sendError = _0x461f5e => {
          _0x2478c4.events.callRemote('1958599200', null, '' + (_0x461f5e && _0x461f5e.stack ? _0x461f5e.stack : JSON.stringify(_0x461f5e)));
        }, _0x3fd2ac.getEyeColorsTitles = () => {
          try {
            const _0x32c13b = [];

            for (let _0x501b6f = 0x0; _0x501b6f < 0x20; _0x501b6f++) {
              const _0xfd3c3e = 'FACE_E_C_' + _0x501b6f,
                    _0xcfdac0 = _0x2478c4.game.ui.getLabelText(_0xfd3c3e);

              _0x32c13b.push(_0xcfdac0.replace('"', '').replace('"', ''));
            }

            return _0x32c13b;
          } catch (_0x43f336) {
            _0x3fd2ac.sendError(_0x43f336);
          }
        }, _0x3fd2ac.setDiscordStatus = (_0x31aa52, _0x5129b2) => {
          _0x2478c4.events.call('api.setDiscord', _0x31aa52, _0x5129b2);
        }, _0x3fd2ac.getSkill = _0x27809b => _0x2478c4.players.local.skills && _0x2478c4.players.local.skills[_0x27809b] || 0x0, _0x3fd2ac.getName = _0x504af3 => _0x3fd2ac.getEntitySync(_0x504af3, 'login', 'string'), _0x3fd2ac.isMyFriend = _0x33836a => {
          const _0x21c82d = _0x2478c4.players.local.friends || [];

          return _0x2478c4.players.local.remoteId === _0x33836a.remoteId || _0x21c82d.includes(_0x33836a.getVariable('id'));
        }, _0x3fd2ac.getDisplayName = _0x31669e => {
          const _0x3fef23 = _0x2478c4.players.local;
          if (_0x31669e === _0x3fef23) return _0x3fd2ac.getName(_0x31669e);

          const _0x543d83 = _0x3fef23.friends || [],
                _0x3dac52 = _0x3fef23.member,
                _0x1fb3f1 = _0x3fd2ac.isAdmin(_0x3fef23);

          if (_0x31669e.getVariable('hmn')) return;

          const _0xe5ed17 = _0x31669e.getVariable('member'),
                _0x46da8b = _0x31669e.getVariable('id'),
                _0x5e7a31 = _0x3fd2ac.getName(_0x31669e),
                _0x298853 = _0x31669e.getVariable('tempName'),
                _0x5b7257 = _0x31669e.getVariable('tempId');

          let _0x2adc60 = '';
          return _0x2adc60 = _0x1fb3f1 ? '' + (_0x298853 && _0x5b7257 ? _0x298853 : _0x5e7a31) : _0x3fd2ac.isInMask(_0x31669e) && _0xe5ed17 > 0x0 && _0xe5ed17 != _0x3dac52 ? '#' + _0x46da8b : _0x3dac52 && _0x3dac52 === _0xe5ed17 || _0x543d83.includes(_0x46da8b) && !_0x3fd2ac.isInMask(_0x31669e) ? '' + (_0x298853 && _0x5b7257 ? _0x298853 : _0x5e7a31) : '#' + _0x46da8b, _0x2adc60;
        }, _0x3fd2ac.usingSystemAnim = _0x26ba87 => {
          _0x1fecf8.g.isUsingSystemAnim = _0x26ba87, _0x26ba87 ? _0x2478c4.events.callRemote('854203439', true) : _0x2478c4.events.callRemote('854203439', false);
        }, _0x3fd2ac.isUsingSystemAnim = () => _0x3fd2ac.getLocalVariable('isUsingSystemAnim'), _0x3fd2ac.getLic = (_0x2948c4 = _0x2478c4.players.local, _0x25a028) => {
          const _0x1d3d50 = ['drived', 'drivem', 'fh', 'cdlb', 'cdla', 'cdwl', 'biz'].indexOf(_0x25a028);

          return -0x1 !== _0x1d3d50 && _0x3fd2ac.getEntitySync(_0x2948c4, 'lic', 'array').includes(_0x1d3d50);
        }, _0x3fd2ac.getOccupants = _0xb6a1f6 => {
          try {
            let _0xa20987 = [];

            const _0x505529 = _0xb6a1f6.getMaxNumberOfPassengers();

            for (let _0x5b1a65 = -0x1; _0x5b1a65 < _0x505529; _0x5b1a65++) {
              const _0x315905 = _0xb6a1f6.getPedInSeat(_0x3fd2ac.getVehSeat(_0x5b1a65));

              _0x315905 && _0xa20987.push({
                'player': _0x2478c4.players.atHandle(_0x315905),
                'seat': _0x5b1a65
              });
            }

            return _0xa20987;
          } catch (_0xf18249) {
            _0x3fd2ac.sendError(_0xf18249);
          }
        }, _0x3fd2ac.isFractionMember = _0x44993f => !!_0x44993f.getVariable('member'), _0x3fd2ac.isFamilyMember = _0x372f40 => !!_0x372f40.getVariable('family'), _0x3fd2ac.isTied = _0x1fb2eb => {
          try {
            return !!_0x1fb2eb.getVariable('tied');
          } catch (_0x1dfe5a) {
            _0x3fd2ac.sendError(_0x1dfe5a);
          }
        }, _0x3fd2ac.isTiedHands = _0x33dd79 => {
          try {
            return !!_0x33dd79.getVariable('tiedHands');
          } catch (_0x422865) {
            _0x3fd2ac.sendError(_0x422865);
          }
        }, _0x3fd2ac.isGag = _0xe53425 => {
          try {
            return !!_0xe53425.getVariable('isGag');
          } catch (_0x321db1) {
            _0x3fd2ac.sendError(_0x321db1);
          }
        }, _0x3fd2ac.isBag = _0x11d752 => {
          try {
            return !!_0x11d752.getVariable('isBag');
          } catch (_0x3b30da) {
            _0x3fd2ac.sendError(_0x3b30da);
          }
        }, _0x3fd2ac.isCuffed = _0x3012c5 => {
          try {
            return !!_0x3012c5.getVariable('cuffed');
          } catch (_0x5ef9ec) {
            _0x3fd2ac.sendError(_0x5ef9ec);
          }
        }, _0x3fd2ac.isLeader = _0x5cc255 => {
          try {
            return !!_0x5cc255.getVariable('leader');
          } catch (_0x1a12bc) {
            _0x3fd2ac.sendError(_0x1a12bc);
          }
        }, _0x3fd2ac.isInMask = _0x504e98 => !!_0x504e98.getVariable('mask'), _0x3fd2ac.isInInterior = () => _0x2478c4.players.local.interior > 0x0, _0x3fd2ac.isGroupMemberOf = (_0x1a3164, _0x2b14e5) => {
          try {
            return !!_0x2e4457()[_0x2b14e5].includes(_0x1a3164.getVariable('member'));
          } catch (_0x16b0aa) {
            _0x3fd2ac.sendError(_0x16b0aa);
          }
        }, _0x3fd2ac.canUseAnim = (_0x1b2f7e = _0x2478c4.players.local) => !(_0x1fecf8.g.isUsingSystemAnim || _0x1b2f7e.getVehicleIsTryingToEnter() || _0x3fd2ac.getLocalVariable('isConsumingItem') || _0x1b2f7e.vehicle || _0x1b2f7e.isGettingUp() || _0x1b2f7e.isReloading() || _0x1b2f7e.isGettingIntoAVehicle() || _0x3fd2ac.isCuffed(_0x1b2f7e) || _0x3fd2ac.isTied(_0x1b2f7e) || _0x3fd2ac.isTiedHands(_0x1b2f7e) || null != _0x1b2f7e.getVariable('playerInTrunk') || _0x1fecf8.g.isUsingMetro || _0x1b2f7e.getVariable('isFollowing') || _0x1b2f7e.isFalling() || _0x1b2f7e.isSwimming() || _0x1b2f7e.isDead() || _0x3fd2ac.getEntitySync(_0x1b2f7e, 'isDead', 'boolean') || _0x1b2f7e.isBeingStunned(0x0) || _0x1b2f7e.isRagdoll() || _0x3fd2ac.isUsingSystemAnim() || _0x3fd2ac.getLocalVariable('clothesWearEffects') || _0x2478c4.game.player.isFreeAiming() || _0x1b2f7e.getVariable('fun.minigames.playing')), _0x3fd2ac.getHoodPosition = _0x391831 => {
          try {
            if (!_0x2478c4.vehicles.exists(_0x391831)) return;

            const _0x27fc3b = _0x391831.position,
                  _0x165cab = _0x391831.getWorldPositionOfBone(_0x391831.getBoneIndexByName('bonnet')),
                  _0x9254f7 = _0x3fd2ac.vdist(_0x27fc3b.x, _0x27fc3b.y, _0x27fc3b.z, _0x165cab.x, _0x165cab.y, _0x165cab.z);

            if (_0x9254f7 > 0xa) return;
            return _0x391831.getOffsetFromInWorldCoords(0x0, _0x9254f7 + 0x2, 0x0);
          } catch (_0x8cbacc) {
            _0x3fd2ac.sendError(_0x8cbacc);
          }
        }, _0x3fd2ac.getBootPosition = _0x39bc8a => {
          try {
            if (!_0x2478c4.vehicles.exists(_0x39bc8a)) return;

            const _0x5f0b45 = _0x39bc8a.position,
                  _0x2f2cdd = _0x39bc8a.getWorldPositionOfBone(_0x39bc8a.getBoneIndexByName('boot')),
                  _0x5132ed = _0x3fd2ac.vdist(_0x5f0b45.x, _0x5f0b45.y, _0x5f0b45.z, _0x2f2cdd.x, _0x2f2cdd.y, _0x2f2cdd.z);

            if (_0x5132ed > 0xa) return;
            return _0x39bc8a.getOffsetFromInWorldCoords(0x0, -_0x5132ed - 0x1, 0x0);
          } catch (_0xdcc3da) {
            _0x3fd2ac.sendError(_0xdcc3da);
          }
        }, _0x3fd2ac.loadPathNodes = () => {
          try {
            _0x3fd2ac.invokeNative('_ARE_PATH_NODES_LOADED_IN_AREA', -0x2000, -0x2000, 0x2000, 0x2000);
          } catch (_0x4db448) {
            _0x3fd2ac.sendError(_0x4db448);
          }
        }, _0x3fd2ac.getPlayerHouseData = (_0x26dbc8 = _0x2478c4.players.local) => {
          try {
            if (!_0x2478c4.players.exists(_0x26dbc8)) return;
            if (null == _0x26dbc8.houseId) return;
            return _0x1fecf8.g.houses[_0x26dbc8.houseId];
          } catch (_0x446070) {
            _0x3fd2ac.sendError(_0x446070);
          }
        }, _0x3fd2ac.playAmbientMusic = (_0x455794, _0x3a6480, _0xe446fb) => {
          _0x1472d7.P.emit('playAmbientMusic', {
            'sound': _0x455794,
            'volume': _0x3fd2ac.getSoundVolume('ambientMusicVol', _0x3a6480),
            'loop': _0xe446fb
          });
        }, _0x3fd2ac.stopAmbientMusic = (_0x3d127f, _0x104ad6) => {
          _0x1472d7.P.emit('stopAmbientMusic', {
            'force': _0x104ad6,
            'soundId': _0x3d127f
          });
        }, _0x3fd2ac.playAmbientMusic2 = (_0x4d7348, _0x2ba5c9, _0x44e7f4) => {
          _0x2478c4.events.call('api.playAmbientMusic2', _0x4d7348, _0x3fd2ac.getSoundVolume('ambientMusicVol', _0x2ba5c9), _0x44e7f4);
        }, _0x3fd2ac.stopAmbientMusic2 = () => {
          _0x2478c4.events.call('api.stopAmbientMusic2');
        }, _0x3fd2ac.getCameraHitCoord = _0x4049e9 => {
          let _0x6acb9c = _0x4049e9.getCoord(),
              _0xd3cf03 = _0x4049e9.getDirection(),
              _0x1135cc = new _0x2478c4.Vector3(0x96 * _0xd3cf03.x + _0x6acb9c.x, 0x96 * _0xd3cf03.y + _0x6acb9c.y, 0x96 * _0xd3cf03.z + _0x6acb9c.z),
              _0x27fcaf = _0x3fd2ac.testPointToPoint(_0x6acb9c, _0x1135cc, _0x2478c4.players.local);

          return null != _0x27fcaf ? _0x27fcaf : null;
        }, _0x3fd2ac.getCameraHitCoordObject = _0xf82b9b => {
          let _0x2b44d0 = _0xf82b9b.getCoord(),
              _0x513db9 = _0xf82b9b.getDirection(),
              _0x19c4bb = new _0x2478c4.Vector3(0x96 * _0x513db9.x + _0x2b44d0.x, 0x96 * _0x513db9.y + _0x2b44d0.y, 0x96 * _0x513db9.z + _0x2b44d0.z),
              _0xad5bd2 = _0x3fd2ac.testPointToPoint(_0x2b44d0, _0x19c4bb, _0x2478c4.players.local, 0x10);

          return null != _0xad5bd2 ? _0xad5bd2 : null;
        }, _0x3fd2ac.get2DHitCoord = _0x57bd4b => {
          const [_0x3700c4, _0x1364db] = _0x2478c4.gui.cursor.position,
                _0x1032a5 = _0x2478c4.game.graphics.getScreenActiveResolution(0x0, 0x0);

          let _0x1fcc79 = _0x57bd4b.getCoord(),
              _0x1ab998 = _0x2478c4.game.graphics.screen2dToWorld3d(new _0x2478c4.Vector3(Math.sqrt(Math.pow(_0x3700c4 * _0x1032a5.x, 0x2)), Math.sqrt(Math.pow(_0x1364db * _0x1032a5.y, 0x2)), 0x0));

          if (null == _0x1ab998) return null;

          const _0x29f95c = _0x3fd2ac.testPointToPoint(_0x1fcc79, _0x1ab998, _0x2478c4.players.local, 0x11);

          return _0x29f95c || null;
        }, _0x3fd2ac.getXYInFrontOfCoords = (_0xbbe5fa, _0x9f51e2, _0x464b8c, _0x5a5dbb) => ({
          'x': _0xbbe5fa + _0x5a5dbb * _0x2478c4.game.system.sin(-_0x464b8c),
          'y': _0x9f51e2 + _0x5a5dbb * _0x2478c4.game.system.cos(-_0x464b8c)
        }), _0x3fd2ac.screen2dToWorld3d = (_0xad841f, _0x1717f1, _0x283e58, _0xa3da65 = 0.5, _0x48ba14 = 0x12c) => {
          const _0x56b45f = _0xad841f.getCoord(),
                {
            x: _0x154c5a,
            y: _0x251b09
          } = _0x3fd2ac.processCoordinates(_0x1717f1, _0x283e58),
                _0x5d1e97 = _0x3fd2ac.s2w(_0xad841f, _0x56b45f, _0x154c5a, _0x251b09),
                _0x4250b1 = _0x3fd2ac.subVectors(_0x5d1e97, _0x56b45f),
                _0xe1cfa3 = _0x3fd2ac.addVectors(_0x56b45f, _0x3fd2ac.mulNumber(_0x4250b1, _0xa3da65)),
                _0xef359b = _0x3fd2ac.addVectors(_0x56b45f, _0x3fd2ac.mulNumber(_0x4250b1, _0x48ba14));

          return _0x3fd2ac.testPointToPoint(_0xe1cfa3, _0xef359b, _0x2478c4.players.local, 0x1e);
        }, _0x3fd2ac.s2w = (_0x5cac4b, _0x123dda, _0x56ec3c, _0x4ca27c) => {
          const _0x45d6bc = _0x5cac4b.getRot(0x0),
                _0x4b3873 = _0x3fd2ac.rotationToDirection(_0x45d6bc),
                _0x4bbccb = _0x3fd2ac.addVectors(_0x45d6bc, new _0x2478c4.Vector3(0xa, 0x0, 0x0)),
                _0xdff006 = _0x3fd2ac.addVectors(_0x45d6bc, new _0x2478c4.Vector3(-0xa, 0x0, 0x0)),
                _0x3ce657 = _0x3fd2ac.addVectors(_0x45d6bc, new _0x2478c4.Vector3(0x0, 0x0, -0xa)),
                _0x57b83c = _0x3fd2ac.addVectors(_0x45d6bc, new _0x2478c4.Vector3(0x0, 0x0, 0xa)),
                _0x3e9359 = _0x3fd2ac.subVectors(_0x3fd2ac.rotationToDirection(_0x57b83c), _0x3fd2ac.rotationToDirection(_0x3ce657)),
                _0x59f0b = _0x3fd2ac.subVectors(_0x3fd2ac.rotationToDirection(_0x4bbccb), _0x3fd2ac.rotationToDirection(_0xdff006)),
                _0x49d134 = -_0x3fd2ac.degToRad(_0x45d6bc.y),
                _0x5cf1ba = _0x3fd2ac.subVectors(_0x3fd2ac.mulNumber(_0x3e9359, Math.cos(_0x49d134)), _0x3fd2ac.mulNumber(_0x59f0b, Math.sin(_0x49d134))),
                _0x232c9f = _0x3fd2ac.addVectors(_0x3fd2ac.mulNumber(_0x3e9359, Math.sin(_0x49d134)), _0x3fd2ac.mulNumber(_0x59f0b, Math.cos(_0x49d134))),
                _0x2b8a28 = _0x3fd2ac.addVectors(_0x3fd2ac.addVectors(_0x3fd2ac.addVectors(_0x123dda, _0x3fd2ac.mulNumber(_0x4b3873, 0xa)), _0x5cf1ba), _0x232c9f),
                _0x489843 = _0x3fd2ac.w2s(_0x2b8a28);

          if (undefined === _0x489843) return _0x3fd2ac.addVectors(_0x123dda, _0x3fd2ac.mulNumber(_0x4b3873, 0xa));

          const _0xebb1c4 = _0x3fd2ac.addVectors(_0x123dda, _0x3fd2ac.mulNumber(_0x4b3873, 0xa)),
                _0x328d59 = _0x3fd2ac.w2s(_0xebb1c4);

          if (undefined === _0x328d59) return _0x3fd2ac.addVectors(_0x123dda, _0x3fd2ac.mulNumber(_0x4b3873, 0xa));
          if (Math.abs(_0x489843.x - _0x328d59.x) < 0.001 || Math.abs(_0x489843.y - _0x328d59.y) < 0.001) return _0x3fd2ac.addVectors(_0x123dda, _0x3fd2ac.mulNumber(_0x4b3873, 0xa));

          const _0x53db65 = (_0x56ec3c - _0x328d59.x) / (_0x489843.x - _0x328d59.x),
                _0x54f73b = (_0x4ca27c - _0x328d59.y) / (_0x489843.y - _0x328d59.y);

          return _0x3fd2ac.addVectors(_0x3fd2ac.addVectors(_0x3fd2ac.addVectors(_0x123dda, _0x3fd2ac.mulNumber(_0x4b3873, 0xa)), _0x3fd2ac.mulNumber(_0x5cf1ba, _0x53db65)), _0x3fd2ac.mulNumber(_0x232c9f, _0x54f73b));
        }, _0x3fd2ac.processCoordinates = (_0x5d370a, _0x2a18fd) => {
          const {
            x: _0x5c787d,
            y: _0x32db1d
          } = _0x2478c4.game.graphics.getScreenActiveResolution(0x0, 0x0);

          let _0x434466 = 0x1 - _0x5d370a / _0x5c787d * 0x1 * 0x2,
              _0x1eaec4 = 0x1 - _0x2a18fd / _0x32db1d * 0x1 * 0x2;

          return _0x434466 = _0x434466 > 0x0 ? -_0x434466 : Math.abs(_0x434466), _0x1eaec4 = _0x1eaec4 > 0x0 ? -_0x1eaec4 : Math.abs(_0x1eaec4), {
            'x': _0x434466,
            'y': _0x1eaec4
          };
        }, _0x3fd2ac.w2s = _0x4afd12 => {
          const _0x3bd422 = _0x2478c4.game.graphics.world3dToScreen2d(_0x4afd12.x, _0x4afd12.y, _0x4afd12.z);

          if (undefined !== _0x3bd422) return new _0x2478c4.Vector3(0x2 * (_0x3bd422.x - 0.5), 0x2 * (_0x3bd422.y - 0.5), 0x0);
        }, _0x3fd2ac.rotationToDirection = _0x356b99 => {
          const _0x304344 = _0x3fd2ac.degToRad(_0x356b99.z),
                _0x47dfab = _0x3fd2ac.degToRad(_0x356b99.x),
                _0x578460 = Math.abs(Math.cos(_0x47dfab));

          return new _0x2478c4.Vector3(-Math.sin(_0x304344) * _0x578460, Math.cos(_0x304344) * _0x578460, Math.sin(_0x47dfab));
        }, _0x3fd2ac.degToRad = _0x227f86 => _0x227f86 * Math.PI / 0xb4, _0x3fd2ac.radToDeg = _0x52c7e3 => 0xb4 * _0x52c7e3 / Math.PI, _0x3fd2ac.addVectors = (_0x1f3230, _0x379f93) => new _0x2478c4.Vector3(_0x1f3230.x + _0x379f93.x, _0x1f3230.y + _0x379f93.y, _0x1f3230.z + _0x379f93.z), _0x3fd2ac.subVectors = (_0x3b348b, _0x256d74) => new _0x2478c4.Vector3(_0x3b348b.x - _0x256d74.x, _0x3b348b.y - _0x256d74.y, _0x3b348b.z - _0x256d74.z), _0x3fd2ac.mulNumber = (_0x1f8e27, _0x5ed4da) => new _0x2478c4.Vector3(_0x1f8e27.x * _0x5ed4da, _0x1f8e27.y * _0x5ed4da, _0x1f8e27.z * _0x5ed4da), _0x3fd2ac.midVector = (_0x2f6a6c, _0x3e0039) => new _0x2478c4.Vector3((_0x2f6a6c.x + _0x3e0039.x) / 0x2, (_0x2f6a6c.y + _0x3e0039.y) / 0x2, (_0x2f6a6c.z + _0x3e0039.z) / 0x2), _0x3fd2ac.partVector = (_0x5be264, _0x230dd5, _0x435f86 = 0.5) => new _0x2478c4.Vector3(_0x5be264.x + (_0x230dd5.x - _0x5be264.x) * _0x435f86, _0x5be264.y + (_0x230dd5.y - _0x5be264.y) * _0x435f86, _0x5be264.z + (_0x230dd5.z - _0x5be264.z) * _0x435f86), _0x3fd2ac.getNormalizedVector = _0x42aa86 => {
          try {
            let _0x2857db = Math.sqrt(_0x42aa86.x * _0x42aa86.x + _0x42aa86.y * _0x42aa86.y + _0x42aa86.z * _0x42aa86.z);

            return _0x42aa86.x = _0x42aa86.x / _0x2857db, _0x42aa86.y = _0x42aa86.y / _0x2857db, _0x42aa86.z = _0x42aa86.z / _0x2857db, _0x42aa86;
          } catch (_0x17c042) {
            _0x3fd2ac.sendError(_0x17c042);
          }
        }, _0x3fd2ac.getCrossProduct = (_0x13c614, _0x53857d) => {
          try {
            let _0x20e4c2 = new _0x2478c4.Vector3(0x0, 0x0, 0x0);

            return _0x20e4c2.x = _0x13c614.y * _0x53857d.z - _0x13c614.z * _0x53857d.y, _0x20e4c2.y = _0x13c614.z * _0x53857d.x - _0x13c614.x * _0x53857d.z, _0x20e4c2.z = _0x13c614.x * _0x53857d.y - _0x13c614.y * _0x53857d.x, _0x20e4c2;
          } catch (_0xe0118) {
            _0x3fd2ac.sendError(_0xe0118);
          }
        }, _0x3fd2ac.getClosestProperty = (_0x369c28, _0x5b0cd6, _0x374ae9) => {
          const a0_0x565620 = {
            _0x2a76db: 0x2080,
            _0x2535f5: 0xbb9,
            _0x3a8216: 0x1f30
          };
          let _0x50187c = null,
              _0x297c1b = _0x374ae9;
          return Object.keys(_0x1fecf8.g[_0x5b0cd6]).forEach(_0x4bbe45 => {
            const _0xd273cd = _0x1fecf8.g[_0x5b0cd6][_0x4bbe45],
                  _0x47fb98 = _0x3fd2ac.vdist(parseFloat(_0xd273cd.posX), parseFloat(_0xd273cd.posY), parseFloat(_0xd273cd.posZ), _0x369c28.position.x, _0x369c28.position.y, _0x369c28.position.z);

            _0x47fb98 < _0x297c1b && (_0x50187c = _0x4bbe45, _0x297c1b = _0x47fb98);
          }), null === _0x50187c ? null : _0x1fecf8.g[_0x5b0cd6][_0x50187c];
        }, _0x3fd2ac.getAnyClosestProperty = (_0x169d79, _0x3def34) => {
          const a0_0x44f790 = {
            _0x2a81b1: 0x2080,
            _0x13fa3f: 0x17b9,
            _0x2b6f22: 0x1ee9,
            _0x4d7de9: 0xbb9
          };
          let _0x2a63a0 = null,
              _0x15d884 = null,
              _0x52723a = _0x3def34;
          return _0x1fecf8.g.propertyTypes.forEach(_0xe1f41c => {
            Object.keys(_0x1fecf8.g[_0xe1f41c]).forEach(_0x4939b2 => {
              const _0x4fcb1b = _0x1fecf8.g[_0xe1f41c][_0x4939b2],
                    _0xbf4e67 = _0x3fd2ac.vdist(parseFloat(_0x4fcb1b.posX), parseFloat(_0x4fcb1b.posY), parseFloat(_0x4fcb1b.posZ), _0x169d79.position.x, _0x169d79.position.y, _0x169d79.position.z);

              _0xbf4e67 < _0x52723a && (_0x2a63a0 = _0x4939b2, _0x15d884 = _0xe1f41c, _0x52723a = _0xbf4e67);
            });
          }), _0x2a63a0 ? _0x1fecf8.g[_0x15d884][_0x2a63a0] : null;
        }, _0x3fd2ac.getAnyClosestPropertyNotIncludes = (_0x27cfdf, _0x5c5fc9 = [], _0x588f50) => {
          const a0_0x780ae9 = {
            _0x3a12f2: 0x1f30,
            _0x37e1ed: 0x1f30,
            _0x275d87: 0x1f30
          };
          let _0x285862 = null,
              _0x815869 = null,
              _0x28c15d = _0x588f50;
          return _0x1fecf8.g.propertyTypes.filter(_0x39c114 => !_0x5c5fc9.includes(_0x39c114)).forEach(_0x22ec08 => {
            Object.keys(_0x1fecf8.g[_0x22ec08]).forEach(_0x5bc15e => {
              const _0xc4e6bc = _0x1fecf8.g[_0x22ec08][_0x5bc15e],
                    _0x4cf1ab = _0x3fd2ac.vdist(parseFloat(_0xc4e6bc.posX), parseFloat(_0xc4e6bc.posY), parseFloat(_0xc4e6bc.posZ), _0x27cfdf.position.x, _0x27cfdf.position.y, _0x27cfdf.position.z);

              _0x4cf1ab < _0x28c15d && (_0x285862 = _0x5bc15e, _0x815869 = _0x22ec08, _0x28c15d = _0x4cf1ab);
            });
          }), _0x285862 ? _0x1fecf8.g[_0x815869][_0x285862] : null;
        }, _0x3fd2ac.getPlayerSetting = _0x1d18f5 => !!_0x2478c4.players.local.settings && _0x2478c4.players.local.settings[_0x1d18f5], _0x3fd2ac.getVehSeat = _0x2d82a0 => _0x2d82a0, _0x3fd2ac.isWorking = _0x5237de => !!_0x3fd2ac.getLocalVariable('isWorking'), _0x3fd2ac.hasWorkingVehicle = _0x288f89 => {
          try {
            return !!_0x288f89.getVariable('isWorkingVehicle');
          } catch (_0x180519) {
            _0x3fd2ac.sendError(_0x180519);
          }
        }, _0x3fd2ac.getPlayerJob = _0x1d3c0e => {
          try {
            return _0x1d3c0e.getVariable('job');
          } catch (_0x25fa74) {
            _0x3fd2ac.sendError(_0x25fa74);
          }
        }, _0x3fd2ac.clamp = (_0x42051f, _0x2d0752, _0x4e4fad) => Math.max(_0x2d0752, Math.min(_0x4e4fad, _0x42051f)), _0x3fd2ac.getVehicleRadio = _0x5f0742 => _0x3fd2ac.getEntitySync(_0x5f0742, 'radioCustom', 'number'), _0x3fd2ac.getRadioURL = _0x1600f2 => ({
          0x1: 'https://a6.radioheart.ru:9037/RH27711',
          0x2: 'https://streamssl.radiodanz.com/live',
          0x3: 'https://stream.srg-ssr.ch/m/rsj/mp3_128',
          0x4: 'https://pool.anison.fm/AniSonFM(320)',
          0x5: 'http://dorognoe.hostingradio.ru:8000/dorognoe',
          0x6: 'https://17563.live.streamtheworld.com/977_JAMZ.mp3'
        })[_0x1600f2], _0x3fd2ac.getScreenActiveResolution = () => _0x6ff5c.L, _0x3fd2ac.getGas = _0x1ad9ce => _0x1ad9ce && _0x1ad9ce.sync ? _0x1ad9ce.sync.gas : 0x0, _0x3fd2ac.getEngine = _0x143bb9 => !(!_0x143bb9 || !_0x143bb9.sync) && !!_0x143bb9.sync.engine, _0x3fd2ac.getWear = (_0xbeaf8d, _0x5d36f1) => _0xbeaf8d && _0xbeaf8d.sync ? isNaN(_0xbeaf8d.sync[_0x5d36f1]) ? 0x0 : _0xbeaf8d.sync[_0x5d36f1] : 0x0, _0x3fd2ac.getEntitySync = (_0xa876ec, _0xd941ee, _0xe1557b) => {
          if (_0xa876ec || (_0xa876ec = {}), undefined === _0xa876ec.sync && (_0xa876ec.sync = {}), undefined === _0xa876ec.sync[_0xd941ee]) switch (_0xe1557b) {
            case 'array':
              return [];

            case 'object':
              return {};

            case 'boolean':
              return false;

            case 'string':
              return '';

            case 'number':
              return 0x0;

            default:
              return;
          }
          return _0xa876ec.sync[_0xd941ee];
        }, _0x3fd2ac.getEmptyClothesSlots = _0x26120f => [{
          'isProp': 0x0,
          'component': 0x1,
          'drawable': 0x0,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0x3,
          'drawable': 0xf,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0x4,
          'drawable': 0x0 === _0x26120f ? 0x15 : 0xf,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0x5,
          'drawable': 0x0,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0x6,
          'drawable': 0x0 === _0x26120f ? 0x22 : 0x23,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0x7,
          'drawable': 0x0,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0x8,
          'drawable': 0x0 === _0x26120f ? 0xf : 0xa,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0x9,
          'drawable': 0x0,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0xa,
          'drawable': 0x0,
          'texture': 0x0
        }, {
          'isProp': 0x0,
          'component': 0xb,
          'drawable': 0xf,
          'texture': 0x0
        }, {
          'isProp': 0x1,
          'component': 0x0,
          'drawable': -0x1,
          'texture': -0x1
        }, {
          'isProp': 0x1,
          'component': 0x1,
          'drawable': -0x1,
          'texture': -0x1
        }, {
          'isProp': 0x1,
          'component': 0x2,
          'drawable': -0x1,
          'texture': -0x1
        }, {
          'isProp': 0x1,
          'component': 0x6,
          'drawable': -0x1,
          'texture': -0x1
        }, {
          'isProp': 0x1,
          'component': 0x7,
          'drawable': -0x1,
          'texture': -0x1
        }], _0x3fd2ac.getClothesParams = () => [{
          'type': 'masks',
          'isProp': 0x0,
          'component': 0x1
        }, {
          'type': 'gloves',
          'isProp': 0x0,
          'component': 0x3
        }, {
          'type': 'legs',
          'isProp': 0x0,
          'component': 0x4
        }, {
          'type': 'shoes',
          'isProp': 0x0,
          'component': 0x6
        }, {
          'type': 'accessories',
          'isProp': 0x0,
          'component': 0x7
        }, {
          'type': 'undershirts',
          'isProp': 0x0,
          'component': 0x8
        }, {
          'type': 'tops',
          'isProp': 0x0,
          'component': 0xb
        }, {
          'type': 'head',
          'isProp': 0x1,
          'component': 0x0
        }, {
          'type': 'glasses',
          'isProp': 0x1,
          'component': 0x1
        }, {
          'type': 'ears',
          'isProp': 0x1,
          'component': 0x2
        }, {
          'type': 'watches',
          'isProp': 0x1,
          'component': 0x6
        }, {
          'type': 'bracelets',
          'isProp': 0x1,
          'component': 0x7
        }, {
          'type': 'torsos',
          'isProp': 0x0,
          'component': 0x3
        }, {
          'type': 'bags',
          'isProp': 0x0,
          'component': 0x5
        }, {
          'type': 'armor',
          'isProp': 0x0,
          'component': 0x9
        }, {
          'type': 'decals',
          'isProp': 0x0,
          'component': 0xa
        }], _0x3fd2ac.getClothes = _0x454360 => {
          const _0x6693d0 = _0x3fd2ac.getEmptyClothesSlots(_0x3fd2ac.getEntitySync(_0x454360, 'gender', 'number')),
                _0x1d4552 = _0x3fd2ac.getEntitySync(_0x454360, 'clothes', 'array');

          if (!_0x1d4552 || !_0x1d4552.length) return _0x6693d0;

          _0x1d4552.forEach(_0xdea0a3 => {
            const _0x386012 = _0x6693d0.findIndex(_0x43d393 => _0x43d393.isProp === _0xdea0a3[0x0] && _0x43d393.component === _0xdea0a3[0x1]),
                  [_0x2ea0cf, _0x4652c3, _0x376395, _0x260335, _0x31c871, _0x1ad99c, _0x47447a, ..._0x243626] = _0xdea0a3;

            _0x6693d0[_0x386012] = {
              'isProp': _0x2ea0cf,
              'component': _0x4652c3,
              'drawable': _0x376395,
              'texture': _0x260335,
              'gender': _0x31c871,
              'id': _0x1ad99c,
              'fraction': _0x47447a,
              'colors': null
            }, _0x243626.length > 0x0 && (_0x6693d0[_0x386012].colors = _0x243626);
          });

          const _0x77ba7d = _0x6693d0.findIndex(_0x30f693 => 0x0 === _0x30f693.isProp && 0x3 === _0x30f693.component);

          return _0x6693d0[_0x77ba7d].drawable = null != _0x3fd2ac.getEntitySync(_0x454360, 'torso') && Array.isArray(_0x3fd2ac.getEntitySync(_0x454360, 'torso')) ? _0x3fd2ac.getEntitySync(_0x454360, 'torso')[0x0] : 0xf, _0x6693d0[_0x77ba7d].texture = null != _0x3fd2ac.getEntitySync(_0x454360, 'torso') && Array.isArray(_0x3fd2ac.getEntitySync(_0x454360, 'torso')) ? _0x3fd2ac.getEntitySync(_0x454360, 'torso')[0x1] : 0x0, _0x6693d0;
        }, _0x3fd2ac.setIplPropState = (_0x36bcf8, _0x19c76d, _0x3511b7 = true) => {
          _0x3511b7 ? _0x2478c4.game.interior.isInteriorPropEnabled(_0x36bcf8, _0x19c76d) || _0x2478c4.game.interior.enableInteriorProp(_0x36bcf8, _0x19c76d) : _0x2478c4.game.interior.isInteriorPropEnabled(_0x36bcf8, _0x19c76d) && _0x2478c4.game.interior.disableInteriorProp(_0x36bcf8, _0x19c76d);
        }, _0x3fd2ac.teleportAndLoad = (_0x4dfd4f, _0x2108dd = 0x0, _0x43a015 = {}) => new Promise(async _0x3788ed => {
          const _0x427359 = null != _0x43a015.fadeTime ? _0x43a015.fadeTime : 0x1f4,
                _0x3a397e = null != _0x43a015.dimension ? _0x43a015.dimension : _0x2478c4.players.local.dimension,
                _0x52b3fb = null != _0x43a015.smartDimension ? _0x43a015.smartDimension : null,
                _0x478633 = null != _0x43a015.sound && _0x43a015.sound;

          await _0x3fd2ac.fadeOut(_0x427359), _0x2478c4.game.streaming.requestCollisionAtCoord(_0x4dfd4f.x, _0x4dfd4f.y, _0x4dfd4f.z), _0x2478c4.game.streaming.setFocusArea(_0x4dfd4f.x, _0x4dfd4f.y, _0x4dfd4f.z, 0x0, 0x0, 0x0), _0x2478c4.game.streaming.setHdArea(_0x4dfd4f.x, _0x4dfd4f.y, _0x4dfd4f.z, 0x1e), _0x3fd2ac.setPlayerPos(_0x2478c4.players.local, _0x4dfd4f, !!_0x43a015.vehicle, true), _0x2478c4.players.local.setHeading(_0x2108dd), null != _0x52b3fb ? _0x2478c4.events.callRemote('3515209095', _0x52b3fb) : _0x3a397e != _0x2478c4.players.local.dimension && (_0x2478c4.players.local.vehicle ? _0x2478c4.events.callRemote('329336673', _0x3a397e, _0x4dfd4f, _0x2108dd) : _0x2478c4.events.callRemote('3702382805', _0x3a397e)), _0x2478c4.game.streaming.loadAllObjectsNow();

          for (let _0x461770 = 0x0; !_0x2478c4.players.local.hasCollisionLoadedAround() && _0x461770 < 0x1f4; ++_0x461770) await _0x2478c4.game.sleep(0xa);

          return _0x478633 && _0x3fd2ac.play3DSound(_0x478633), _0x2478c4.game.streaming.clearFocus(), _0x2478c4.game.streaming.clearHdArea(), _0x43a015.setOnGroundProperly && _0x2478c4.players.local.vehicle && _0x2478c4.players.local.vehicle.setOnGroundProperly(), await _0x3fd2ac.fadeIn(_0x427359), _0x3788ed();
        }), _0x3fd2ac.vdist = (_0x2a70eb, _0x550116, _0x301a03, _0x5bc912, _0x2a664c, _0x31ccbc) => Math.sqrt((_0x2a70eb - _0x5bc912) * (_0x2a70eb - _0x5bc912) + (_0x550116 - _0x2a664c) * (_0x550116 - _0x2a664c) + (_0x301a03 - _0x31ccbc) * (_0x301a03 - _0x31ccbc)), _0x3fd2ac.vdist2 = (_0x403726, _0x4cc237, _0x1bf1cf = true) => _0x403726 && _0x4cc237 ? _0x1bf1cf ? Math.sqrt((_0x403726.y - _0x4cc237.y) * (_0x403726.y - _0x4cc237.y) + (_0x403726.x - _0x4cc237.x) * (_0x403726.x - _0x4cc237.x) + (_0x403726.z - _0x4cc237.z) * (_0x403726.z - _0x4cc237.z)) : Math.sqrt((_0x403726.y - _0x4cc237.y) * (_0x403726.y - _0x4cc237.y) + (_0x403726.x - _0x4cc237.x) * (_0x403726.x - _0x4cc237.x)) : -0x1, _0x3fd2ac.isBigmapActive = () => 0x2 === _0x1fecf8.g.bigmap.status, _0x3fd2ac.setHealth = _0x4b10b2 => _0x2478c4.players.local.setHealth(_0x3fd2ac.clamp(Math.round(_0x4b10b2), 0x1, 0x64) + 0x64), _0x3fd2ac.vehicleWearToPercent = _0x48ff1f => 0x64 - _0x48ff1f / 0x3e8 || 0x64, _0x3fd2ac.smoothstep = (_0x5b81d4, _0x5e6e1b, _0x4b8dbb) => {
          let _0xd371e2 = Math.max(0x0, Math.min(0x1, (_0x4b8dbb - _0x5b81d4) / (_0x5e6e1b - _0x5b81d4)));

          return _0xd371e2 * _0xd371e2 * (0x3 - 0x2 * _0xd371e2);
        }, _0x3fd2ac.lerp = (_0x54c4df, _0x4e4550, _0x4bacd7) => _0x54c4df * (0x1 - _0x4bacd7) + _0x4e4550 * _0x4bacd7, _0x3fd2ac.lerpVector = (_0x2077cd, _0x329230, _0x724bab) => ({
          'x': _0x3fd2ac.lerp(_0x2077cd.x, _0x329230.x, _0x724bab),
          'y': _0x3fd2ac.lerp(_0x2077cd.y, _0x329230.y, _0x724bab),
          'z': _0x3fd2ac.lerp(_0x2077cd.z, _0x329230.z, _0x724bab)
        }), _0x3fd2ac.mapRange = (_0x100a46, _0x3ffa7c, _0x55c8a3, _0x259814, _0x1cf76c) => (_0x100a46 - _0x3ffa7c) * (_0x1cf76c - _0x259814) / (_0x55c8a3 - _0x3ffa7c) + _0x259814, _0x3fd2ac.createNamedRenderTargetForModel = (_0x32756f, _0xb1730b) => {
          let _0x5b9e4e = 0x0;
          return _0x2478c4.game.ui.isNamedRendertargetRegistered(_0x32756f) || _0x2478c4.game.ui.registerNamedRendertarget(_0x32756f, false), _0x2478c4.game.ui.isNamedRendertargetLinked(_0xb1730b) || _0x2478c4.game.ui.linkNamedRendertarget(_0xb1730b), _0x2478c4.game.ui.isNamedRendertargetRegistered(_0x32756f) && (_0x5b9e4e = _0x2478c4.game.ui.getNamedRendertargetRenderId(_0x32756f)), _0x5b9e4e;
        }, _0x3fd2ac.setScreenType = (_0x461542, _0x31d95c = 0x0, _0x28cbd0 = -0x64) => {
          _0x3fd2ac.invokeNative('SET_TV_CHANNEL_PLAYLIST', 0x0, _0x461542, true), _0x2478c4.game.graphics.setTvAudioFrontend(true), _0x2478c4.game.graphics.setTvVolume(_0x28cbd0), _0x2478c4.game.graphics.setTvChannel(_0x31d95c);
        }, _0x3fd2ac.setVehicleCheatPowerIncrease = (_0x2b9440, _0x4773fe) => {
          _0x2478c4.vehicles.exists(_0x2b9440) && (_0x2b9440.setEnginePowerMultiplier(_0x4773fe), _0x2b9440.cheatPowerIncrease = _0x4773fe);
        }, _0x3fd2ac.getVehicleCheatPowerIncrease = _0x5e7eef => _0x5e7eef.cheatPowerIncrease || 0x0, _0x3fd2ac.arraysEqual = (_0x414b03, _0x3cf94b) => {
          if (_0x414b03 === _0x3cf94b) return true;
          if (null == _0x414b03 || null == _0x3cf94b) return false;
          if (_0x414b03.length !== _0x3cf94b.length) return false;

          for (var _0x2ff7a4 = 0x0; _0x2ff7a4 < _0x414b03.length; ++_0x2ff7a4) if (_0x414b03[_0x2ff7a4] !== _0x3cf94b[_0x2ff7a4]) return false;

          return true;
        }, _0x3fd2ac.getSoundId = () => _0x2478c4.game.audio.getSoundId(), _0x3fd2ac.getLocalVariable = _0x2794d0 => _0x257354.Z[_0x2794d0], _0x3fd2ac.hasLocalVariable = _0x503ae4 => !!_0x257354.Z[_0x503ae4], _0x3fd2ac.fixString = _0x1e43ff => _0x5c8157.Z.replace(_0x1e43ff, (0x0, _0x5c8157.Z)('[\\p{M}]+', 'g'), '?'), _0x3fd2ac.makeValidString = _0x254228 => {
          const _0x12f8ca = _0x254228.replace(/\s+/g, ' ').trim().substring(0x0, 0x800);

          return _0x3fd2ac.fixString(_0x12f8ca);
        }, _0x3fd2ac.hexToChatHex = _0x59e045 => '@{' + _0x59e045 + '}', _0x3fd2ac.percentDiff = (_0x8e5d9c, _0x359aa9) => _0x8e5d9c / (_0x359aa9 + _0x8e5d9c) * 0x64, _0x3fd2ac.getSoundVolume = (_0x3c4360 = 'generalSoundVol', _0x29d44c = 0x64) => {
          const _0x33b6ce = _0x3fd2ac.getPlayerSetting(_0x3c4360);

          if ('number' == typeof _0x33b6ce) return 0.01 * _0x33b6ce * (0.01 * _0x29d44c);

          switch (_0x3c4360) {
            case 'voiceSoundVol':
            case 'walkieSoundVol':
              return 0.01 * _0x29d44c * 0x1;

            default:
              return 0.01 * _0x29d44c * 0.5;
          }
        }, _0x3fd2ac.getLodDist = (_0x1e1a9c = 'lodDistPlayer', _0x34e194 = 0x32, _0x4735f2 = 0xfa) => {
          const _0x4c22bd = 'string' == typeof _0x1e1a9c ? _0x3fd2ac.getPlayerSetting(_0x1e1a9c) : _0x1e1a9c;

          return 'number' != typeof _0x4c22bd ? _0x3fd2ac.lerp(_0x34e194, _0x4735f2, 1.8) : _0x3fd2ac.lerp(_0x34e194, _0x4735f2, _0x4c22bd / 0x64);
        }, _0x3fd2ac.updateLodDist = (_0x26b5cb = 'lodDistPlayer', _0x4056cc) => {
          const a0_0x14c169 = {
            _0x120f76: 0x2530
          },
                _0x3372b1 = _0x3fd2ac.getLodDist(_0x4056cc);

          if (!isNaN(_0x3372b1)) switch (_0x26b5cb) {
            case 'lodDistPlayer':
              _0x2478c4.players.forEachInStreamRange(_0x431dc0 => {
                _0x431dc0 && 0x0 != _0x431dc0.handle && _0x431dc0.setLodDist(parseInt(_0x3372b1));
              });

              break;

            case 'lodDistVeh':
              _0x2478c4.vehicles.forEachInStreamRange(_0x280065 => {
                _0x280065 && 0x0 != _0x280065.handle && _0x280065.setLodDist(parseInt(_0x3372b1));
              });

              break;

            case 'lodDistObject':
              _0x2478c4.objects.forEachInStreamRange(_0x3b3b79 => {
                _0x3b3b79 && 0x0 != _0x3b3b79.handle && !_0x3b3b79.disableLodDist && _0x3b3b79.setLodDist(parseInt(_0x3372b1));
              });

          }
        }, _0x3fd2ac.getCorrectGroundZ = (_0x1a0844, _0x519998, _0x48445e, _0xb655b9 = 0x0) => new Promise(_0xeaef12 => {
          const a0_0x77948a = {
            _0x38c8f0: 0x235b,
            _0x49c4aa: 0x185e,
            _0x295326: 0x1b09,
            _0x479c90: 0x2506,
            _0x1cd897: 0x1d66,
            _0x40d41e: 0x15e0,
            _0x379a2a: 0x287
          };
          if (0x0 == _0xb655b9 && _0x2478c4.game.streaming.setFocusArea(_0x1a0844, _0x519998, _0x48445e, 0x0, 0x0, 0x0), 0x28 == _0xb655b9) return _0x2478c4.game.streaming.clearFocus(), _0xeaef12(0x0);

          _0x2478c4.game.sleep(0x19).then(() => {
            if (!_0x2478c4.players.local.hasCollisionLoadedAround()) return _0xeaef12(_0x3fd2ac.getCorrectGroundZ(_0x1a0844, _0x519998, _0x48445e, ++_0xb655b9));

            const _0xe8d325 = _0x2478c4.game.gameplay.getGroundZFor3dCoord(_0x1a0844, _0x519998, _0x48445e, 0x0, false);

            if (!_0xe8d325) return _0xeaef12(_0x3fd2ac.getCorrectGroundZ(_0x1a0844, _0x519998, _0x48445e + 0x64, ++_0xb655b9));
            _0x2478c4.game.streaming.clearFocus(), _0xeaef12(_0xe8d325);
          });
        }), _0x3fd2ac.replaceTwitchWords = _0xd9dcd8 => _0xd9dcd8.replace(/[даунигерпосДАУНИГЕРПОСA-z]/g, '*'), _0x3fd2ac.streamIn = _0x343e72 => new Promise((_0x2ec7c0, _0x1987d6) => {
          if (!_0x2478c4.players.exists(_0x343e72)) return _0x2ec7c0();
          if (_0x343e72.handle) return _0x2ec7c0();

          const _0x3d123c = setInterval(() => {
            if (!_0x2478c4.players.exists(_0x343e72)) return _0x2ec7c0(), void clearInterval(_0x3d123c);
            _0x343e72.handle && (clearInterval(_0x3d123c), _0x2ec7c0());
          }, 0x32);
        }), _0x3fd2ac.isTaskGoStraightToCoordComplete = (_0x26a79a = _0x2478c4.players.local) => new Promise((_0x41ec3f, _0x4fe91d) => {
          const a0_0x4f02bc = {
            _0x59fa5a: 0x235b,
            _0x595564: 0x16c5,
            _0x45fd0f: 0x2340
          };
          if (!_0x2478c4.players.exists(_0x26a79a)) return _0x41ec3f();
          if (0x0 !== _0x26a79a.getScriptTaskStatus(0x7d8f4411) && 0x1 !== _0x26a79a.getScriptTaskStatus(0x7d8f4411)) return _0x41ec3f();

          const _0x504aa0 = setInterval(() => {
            if (!_0x2478c4.players.exists(_0x26a79a)) return clearInterval(_0x504aa0), void _0x41ec3f();
            0x0 !== _0x26a79a.getScriptTaskStatus(0x7d8f4411) && 0x1 !== _0x26a79a.getScriptTaskStatus(0x7d8f4411) && (clearInterval(_0x504aa0), _0x41ec3f());
          }, 0x32);
        }), _0x3fd2ac.isSceneEnd = _0x3b4230 => new Promise(_0x2f9dcf => {
          if (_0x2478c4.game.ped.getSynchronizedScenePhase(_0x3b4230) >= 0.99) return void _0x2f9dcf();

          const _0x906857 = setInterval(() => {
            _0x2478c4.game.ped.getSynchronizedScenePhase(_0x3b4230) >= 0.99 && (clearInterval(_0x906857), _0x2f9dcf());
          }, 0x32);
        }), _0x3fd2ac.isAnimComplete = (_0x28e359, _0x9ec3bd, _0x41175c = _0x2478c4.players.local) => new Promise((_0x255214, _0x3b56cb) => {
          if (!_0x2478c4.players.exists(_0x41175c)) return _0x255214();
          if (_0x41175c.isPlayingAnim(_0x28e359, _0x9ec3bd, 0x3)) return _0x255214();

          const _0x2664ea = setInterval(() => {
            if (!_0x2478c4.players.exists(_0x41175c)) return _0x255214(), void clearInterval(_0x2664ea);
            _0x41175c.isPlayingAnim(_0x28e359, _0x9ec3bd, 0x3) && (clearInterval(_0x2664ea), _0x255214());
          }, 0x32);
        }), _0x3fd2ac.loadStreamWithStartOffset = (..._0x2285b9) => new Promise(_0x3806f4 => {
          if (_0x2478c4.game.audio.loadStreamWithStartOffset(..._0x2285b9)) return void _0x3806f4();

          const _0xe959d2 = setInterval(() => {
            _0x2478c4.game.audio.loadStreamWithStartOffset(..._0x2285b9) && (clearInterval(_0xe959d2), _0x3806f4());
          }, 0x32);
        }), _0x3fd2ac.playVehSound = (_0x723778, _0x34060b, _0x4297d6, _0x47b72c = '') => {
          const _0x2d3193 = _0x2478c4.vehicles.atRemoteId(_0x723778);

          if (undefined !== _0x2d3193 && _0x2478c4.vehicles.exists(_0x2d3193)) {
            if (null != _0x2d3193[_0x34060b + 'currentSound']) {
              const _0x2ad185 = _0x2d3193[_0x34060b + 'currentSound'];
              _0x2478c4.game.audio.stopSound(_0x2ad185), _0x2478c4.game.audio.releaseSoundId(_0x2ad185), delete _0x2d3193[_0x34060b + 'currentSound'];
            }

            const _0x1b0d4a = _0x2478c4.game.audio.getSoundId();

            _0x2478c4.game.audio.playSoundFromEntity(_0x1b0d4a, _0x4297d6, _0x2d3193.handle, _0x47b72c, true, 0x0), _0x2d3193[_0x34060b + 'currentSound'] = _0x1b0d4a;
          }
        }, _0x3fd2ac.chunkArray = (_0x59932b, _0x2e200f) => {
          const _0x1f6b1f = [];

          for (let _0x31caf1 = 0x0; _0x31caf1 < _0x59932b.length; _0x31caf1 += _0x2e200f) _0x1f6b1f.push(_0x59932b.slice(_0x31caf1, _0x31caf1 + _0x2e200f));

          return _0x1f6b1f;
        }, _0x3fd2ac.lightenDarkenColorHex = (_0x326e51, _0x2e38cb) => {
          let _0x1ad320 = parseInt(_0x326e51, 0x10);

          return ((0xff & _0x1ad320) + _0x2e38cb | (_0x1ad320 >> 0x8 & 0xff) + _0x2e38cb << 0x8 | (_0x1ad320 >> 0x10) + _0x2e38cb << 0x10).toString(0x10);
        }, _0x3fd2ac.average = _0x469b44 => _0x469b44.reduce((_0x11045b, _0x43c8c3) => _0x11045b + _0x43c8c3) / _0x469b44.length, _0x3fd2ac.getClothesCategoryLength = (_0x3e12c0, _0x1003da) => {
          const _0x463797 = 'masks' === _0x1003da ? 'masks' : (_0x3e12c0 ? 'female' : 'male') + '_' + _0x1003da;

          return _0x10970d && _0x10970d[_0x463797] ? _0x10970d[_0x463797].length : 0x0;
        }, _0x3fd2ac.getClothesInfoByCategory = _0x394f2a => {
          let _0x442e61, _0x5abf6c;

          switch (_0x394f2a) {
            case 'masks':
              _0x442e61 = 0x1, _0x5abf6c = 0x0;
              break;

            case 'torsos':
            case 'gloves':
              _0x442e61 = 0x3, _0x5abf6c = 0x0;
              break;

            case 'legs':
              _0x442e61 = 0x4, _0x5abf6c = 0x0;
              break;

            case 'bags':
              _0x442e61 = 0x5, _0x5abf6c = 0x0;
              break;

            case 'shoes':
              _0x442e61 = 0x6, _0x5abf6c = 0x0;
              break;

            case 'accessories':
              _0x442e61 = 0x7, _0x5abf6c = 0x0;
              break;

            case 'undershirts':
              _0x442e61 = 0x8, _0x5abf6c = 0x0;
              break;

            case 'decals':
              _0x442e61 = 0xa, _0x5abf6c = 0x0;
              break;

            case 'tops':
              _0x442e61 = 0xb, _0x5abf6c = 0x0;
              break;

            case 'head':
              _0x442e61 = 0x0, _0x5abf6c = 0x1;
              break;

            case 'glasses':
              _0x442e61 = 0x1, _0x5abf6c = 0x1;
              break;

            case 'ears':
              _0x442e61 = 0x2, _0x5abf6c = 0x1;
              break;

            case 'watches':
              _0x442e61 = 0x6, _0x5abf6c = 0x1;
              break;

            case 'bracelets':
              _0x442e61 = 0x7, _0x5abf6c = 0x1;
          }

          return {
            'componentId': _0x442e61,
            'isProp': _0x5abf6c
          };
        }, _0x3fd2ac.getClothesTitle = (_0x47a523, _0x197e90, _0x5e067f, _0x192bf5) => {
          if (null == _0x47a523 && (_0x47a523 = 0x0), _0x5e067f >= 0x7d0 && _0x573c29.Z.clothes?.[_0x47a523]?.[_0x197e90]?.[_0x5e067f]) {
            const _0x4726ff = _0x573c29.Z.clothes[_0x47a523][_0x197e90][_0x5e067f][_0x192bf5];
            return _0x3fd2ac.language.translatePlayer('clothes.' + _0x47a523 + '.' + _0x197e90 + '.' + _0x5e067f + '.' + (_0x4726ff ? _0x192bf5 : 0x0));
          }

          try {
            const _0x408642 = 'masks' === _0x197e90 ? 'masks' : (_0x47a523 ? 'female' : 'male') + '_' + _0x197e90;

            if (!_0x10970d[_0x408642] || null == _0x10970d[_0x408642] || null == _0x10970d[_0x408642][_0x5e067f] || null == _0x10970d[_0x408642][_0x5e067f][_0x192bf5]) return _0x3fd2ac.language.translatePlayer('inventory.clothesId', {
              'id': _0x5e067f
            });

            const _0x3818d8 = _0x2478c4.game.ui.getLabelText(_0x10970d[_0x408642][_0x5e067f][_0x192bf5]).replace(/'/g, '').replace(/"/g, '');

            return _0x3818d8 && 'NULL' !== _0x3818d8 ? _0x3818d8 : _0x3fd2ac.language.translatePlayer('inventory.clothesId', {
              'id': _0x5e067f
            });
          } catch (_0x1056b9) {
            _0x3fd2ac.sendError(_0x1056b9);
          }
        }, _0x3fd2ac.principalAxesToOrientation = (_0x5913f7 = 0x0, _0x15318e = 0x0, _0x34fa73 = 0x0) => {
          const {
            yaw: _0x2a0395 = 0x0,
            pitch: _0x385e9d = 0x0,
            roll: _0x89add1 = 0x0
          } = 'object' == typeof _0x34fa73 ? _0x34fa73 : {
            'yaw': _0x34fa73,
            'pitch': _0x5913f7,
            'roll': _0x15318e
          },
                _0x49bc18 = {},
                _0x2c3fbc = {},
                _0xbfd822 = _0x2a0395 * (Math.PI / 0xb4);

          _0x49bc18.x = Math.sin(_0xbfd822), _0x49bc18.z = Math.cos(_0xbfd822 + Math.PI);

          const _0x51fac9 = _0x385e9d * (Math.PI / 0xb4);

          _0x49bc18.y = Math.sin(_0x51fac9), _0x2c3fbc.y = Math.cos(_0x51fac9);

          const _0xdf230e = _0x89add1 * (Math.PI / 0xb4);

          return _0x2c3fbc.x = Math.sin(_0xdf230e), _0x2c3fbc.z = Math.sin(_0xdf230e), {
            'forward': _0x49bc18,
            'up': _0x2c3fbc
          };
        }, _0x3fd2ac.normalizeRotation = _0x3e1ac9 => ((_0x3e1ac9 %= 0x168) < 0x0 && (_0x3e1ac9 += 0x168), _0x3e1ac9), _0x3fd2ac.waitFor = (_0x203a9a, _0xe8cc0f = 0x0) => new Promise(_0x3cd011 => {
          const _0x1e2fb5 = setInterval(() => {
            _0x203a9a() && (clearInterval(_0x1e2fb5), _0x3cd011());
          }, _0xe8cc0f);
        }), _0x3fd2ac.addPlayerHealth = (_0x160236, _0x20a526 = _0x3fd9c1) => {
          const _0x3d27fa = _0x20a526.getHealth();

          _0x3d27fa > 0x2 && (_0x20a526.setHealth(_0x3d27fa - 0x1 + 0x64), _0x20a526.applyDamageTo(0x1, false), _0x160236 += 0x2);

          const _0x26f7c1 = Math.min(0x64 - _0x3d27fa, _0x160236);

          return _0x26f7c1 > 0x0 && _0x20a526.applyDamageTo(-_0x26f7c1, false), _0x20a526.setHealth(_0x3fd2ac.clamp(Math.round(_0x3d27fa + _0x160236), 0x1, 0x64) + 0x64), _0x3d27fa + _0x160236;
        };
        const _0x18c949 = _0x2478c4.game.ui;
        _0x3fd2ac.addLongString = (_0x1b10a2 = '', _0x5b9c4a = 0x63) => {
          for (let _0x43564b = 0x0; _0x43564b < _0x1b10a2.length; _0x43564b += _0x5b9c4a) {
            const _0x48655a = _0x1b10a2.substr(_0x43564b, Math.min(_0x5b9c4a, _0x1b10a2.length - _0x43564b));

            _0x2478c4.game.ui.addTextComponentSubstringPlayerName(_0x48655a);
          }
        }, _0x3fd2ac.drawText = (_0x13f813, _0x4fc610, _0x5d03c0) => {
          const _0x2f123c = (_0x5d03c0 = {
            'align': 0x1,
            'font': 0x4,
            'scale': 0.3,
            'outline': true,
            'shadow': true,
            'color': [0xff, 0xff, 0xff, 0xff],
            ..._0x5d03c0
          }).font,
                _0x3e6bc7 = _0x5d03c0.scale,
                _0x24f7e = _0x5d03c0.outline,
                _0x5b9174 = _0x5d03c0.shadow,
                _0x3aec5b = _0x5d03c0.color,
                _0x13c18a = _0x5d03c0.wordWrap,
                _0x628ef9 = _0x5d03c0.align,
                _0x56be75 = _0x5d03c0.splitSize;

          switch (_0x18c949.setTextEntry('CELL_EMAIL_BCON'), _0x3fd2ac.addLongString(_0x13f813, _0x56be75), _0x18c949.setTextFont(_0x2f123c), _0x18c949.setTextScale(_0x3e6bc7, _0x3e6bc7), _0x18c949.setTextColour(_0x3aec5b[0x0], _0x3aec5b[0x1], _0x3aec5b[0x2], _0x3aec5b[0x3]), _0x5b9174 && (_0x3fd2ac.invokeNative('SET_TEXT_DROP_SHADOW'), _0x18c949.setTextDropshadow(0x3, 0x0, 0x0, 0x0, 0xff)), _0x24f7e && _0x3fd2ac.invokeNative('SET_TEXT_OUTLINE'), _0x628ef9) {
            case 0x1:
              _0x18c949.setTextCentre(true);

              break;

            case 0x2:
              _0x18c949.setTextRightJustify(true), _0x18c949.setTextWrap(0x0, _0x4fc610[0x0] || 0x0);
          }

          'number' == typeof _0x13c18a && _0x18c949.setTextWrap(0x0, (_0x4fc610[0x0] || 0x0) + _0x13c18a), undefined !== _0x4fc610[0x2] ? (_0x2478c4.game.graphics.setDrawOrigin(_0x4fc610[0x0], _0x4fc610[0x1], _0x4fc610[0x2], 0x0), _0x18c949.drawText(0x0, 0x0), _0x3fd2ac.invokeNative('CLEAR_DRAW_ORIGIN')) : _0x18c949.drawText(_0x4fc610[0x0] || 0x0, _0x4fc610[0x1] || 0x0);
        }, _0x3fd2ac.getTextWidth = (_0x52c5e0, _0x3fdbcc, _0x5a1878, _0x1839b1 = 0x63) => (_0x2478c4.game.ui.setTextEntryForWidth('CELL_EMAIL_BCON'), _0x3fd2ac.addLongString(_0x52c5e0, _0x1839b1), _0x18c949.setTextFont(_0x3fdbcc), _0x18c949.setTextScale(_0x5a1878, _0x5a1878), _0x18c949.getTextScreenWidth(true)), _0x3fd2ac.normalizeAngle = _0x270ab3 => {
          let _0x1027c6 = _0x270ab3;

          for (; _0x1027c6 <= -0xb4;) _0x1027c6 += 0x168;

          for (; _0x1027c6 > 0xb4;) _0x1027c6 -= 0x168;

          return _0x1027c6;
        }, _0x3fd2ac.setEulerFromRotationMatrix = _0x44a88a => {
          const _0x15753c = _0x44a88a,
                _0x35b7a0 = _0x15753c[0x0],
                _0x6f9e41 = (_0x15753c[0x4], _0x15753c[0x8]),
                _0x50cc0b = _0x15753c[0x1],
                _0x47baf1 = _0x15753c[0x5],
                _0x3f3531 = _0x15753c[0x9],
                _0x41ea68 = _0x15753c[0x2],
                _0xc8e10d = (_0x15753c[0x6], _0x15753c[0xa]);

          let _0x4b8bfb = Math.asin(-_0x3fd2ac.clamp(_0x3f3531, -0x1, 0x1)),
              _0x5f2ff0 = 0x0,
              _0x37429e = 0x0;

          return Math.abs(_0x3f3531) < 0.9999999 ? (_0x5f2ff0 = Math.atan2(_0x6f9e41, _0xc8e10d), _0x37429e = Math.atan2(_0x50cc0b, _0x47baf1)) : (_0x5f2ff0 = Math.atan2(-_0x41ea68, _0x35b7a0), _0x37429e = 0x0), new _0x2478c4.Vector3(_0x3fd2ac.radToDeg(_0x4b8bfb), _0x3fd2ac.radToDeg(_0x37429e), _0x3fd2ac.radToDeg(_0x5f2ff0));
        };
        let _0x129be2 = null,
            _0x9faafa = null,
            _0x3a2c08 = null;
        _0x3fd2ac.matrixLookAt = (_0x4275f9, _0x1190b1, _0x5c8bf6, _0x3847e3 = new _0x118e74.Vector3(0x0, 0x0, 0x0), _0xf827c4 = new _0x118e74.Vector3(0x0, 0x1, 0x0)) => {
          _0x129be2 || (_0x129be2 = new _0x118e74.Vector3(), _0x9faafa = new _0x118e74.Vector3(), _0x3a2c08 = new _0x118e74.Vector3());
          const _0xfdc078 = [0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1];
          return _0x3a2c08.subVectors(new _0x118e74.Vector3(_0x4275f9, _0x1190b1, _0x5c8bf6), _0x3847e3), 0x0 === _0x3a2c08.lengthSq() && (_0x3a2c08.z = 0x1), _0x3a2c08.normalize(), _0x129be2.crossVectors(_0xf827c4, _0x3a2c08), 0x0 === _0x129be2.lengthSq() && (0x1 === Math.abs(_0xf827c4.z) ? _0x3a2c08.x += 0.0001 : _0x3a2c08.z += 0.0001, _0x3a2c08.normalize(), _0x129be2.crossVectors(_0xf827c4, _0x3a2c08)), _0x129be2.normalize(), _0x9faafa.crossVectors(_0x3a2c08, _0x129be2), _0xfdc078[0x0] = _0x129be2.x, _0xfdc078[0x4] = _0x9faafa.x, _0xfdc078[0x8] = _0x3a2c08.x, _0xfdc078[0x1] = _0x129be2.y, _0xfdc078[0x5] = _0x9faafa.y, _0xfdc078[0x9] = _0x3a2c08.y, _0xfdc078[0x2] = _0x129be2.z, _0xfdc078[0x6] = _0x9faafa.z, _0xfdc078[0xa] = _0x3a2c08.z, _0xfdc078;
        }, _0x3fd2ac.getCachedTextureResolution = (_0x30c2d6, _0x5d03ae) => (_0x4b44fe[_0x30c2d6] || (_0x4b44fe[_0x30c2d6] = {}), _0x4b44fe[_0x30c2d6][_0x5d03ae] || (_0x4b44fe[_0x30c2d6][_0x5d03ae] = _0x2478c4.game.graphics.getTextureResolution(_0x30c2d6, _0x5d03ae)), _0x4b44fe[_0x30c2d6][_0x5d03ae]), _0x3fd2ac.between = (_0x33d31e, _0x1ecd88, _0x1baa3d) => _0x33d31e >= _0x1ecd88 && _0x33d31e <= _0x1baa3d, _0x3fd2ac.randomInteger = (_0x1f03af, _0x44066f) => {
          let _0x838e68 = _0x1f03af - 0.5 + Math.random() * (_0x44066f - _0x1f03af + 0x1);

          return _0x838e68 = Math.round(_0x838e68), _0x838e68;
        }, _0x3fd2ac.language = _0x6849a8.Z, _0x3fd2ac.hasAnyPassenger = (_0x39544d, _0x71c0f5 = []) => {
          let _0x4333f1 = false;

          for (let _0x8f75dd = -0x1; _0x8f75dd <= _0x39544d.getMaxNumberOfPassengers() - 0x2 && (_0x71c0f5.includes(_0x8f75dd) || (_0x4333f1 = !_0x39544d.isSeatFree(_0x8f75dd), !_0x4333f1)); _0x8f75dd++);

          return _0x4333f1;
        }, _0x3fd2ac.isTimeBetween = (_0x2b3ac6, _0x4d2f6f, _0x2d9b34 = false) => {
          if (_0x2d9b34) {
            const _0x3b8151 = _0x1c8dea()().tz((0x0, _0xc29b3d.getServerTimezone)()),
                  _0x169f90 = _0x1c8dea()(_0x2b3ac6).tz((0x0, _0xc29b3d.getServerTimezone)()),
                  _0x5caec1 = _0x1c8dea()(_0x4d2f6f).tz((0x0, _0xc29b3d.getServerTimezone)());

            return _0x3b8151.isBetween(_0x169f90, _0x5caec1);
          }

          {
            const _0x35a2e6 = new Date(_0x2b3ac6).getTime(),
                  _0x4397b9 = new Date(_0x4d2f6f).getTime(),
                  _0x45744e = new Date().getTime();

            return _0x45744e > _0x35a2e6 && _0x45744e < _0x4397b9;
          }
        }, _0x3fd2ac.setInvincible = (_0x25a9ea, _0x41e6fd = _0x3fd9c1) => {
          _0x41e6fd.localGodMode = _0x25a9ea, _0x41e6fd.setInvincible(_0x25a9ea), _0x41e6fd.setProofs(_0x25a9ea, _0x25a9ea, _0x25a9ea, _0x25a9ea, _0x25a9ea, _0x25a9ea, _0x25a9ea, _0x25a9ea);
        }, _0x3fd2ac.UUID = _0x3bdbe2 => _0x3bdbe2 ? (_0x3bdbe2 ^ 0x10 * Math.random() >> _0x3bdbe2 / 0x4).toString(0x10) : '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, _0x3fd2ac.UUID), _0x3fd2ac.inRange = (_0x2b833b, _0x720b4d, _0x3b395d = 0x0) => Math.min(_0x720b4d, _0x3b395d) <= _0x2b833b && _0x2b833b < Math.max(_0x720b4d, _0x3b395d), _0x3fd2ac.getObjectOffset = (_0x63414f, _0x4c751a, _0x5c9cfb) => _0x2478c4.game.object.getObjectOffsetFromCoords(_0x63414f.x, _0x63414f.y, _0x63414f.z, _0x4c751a, _0x5c9cfb.x, _0x5c9cfb.y, _0x5c9cfb.z), _0x3fd2ac.drawTexture3d = (_0x501dbd, _0x38c0d2, _0x9da05b, {
          scaleX: _0xdd05d1 = 0x1,
          scaleY: _0x1206fd = 0x1,
          heading: _0x2aca9f = 0x0,
          color: _0x209895 = [0xff, 0xff, 0xff, 0xff]
        }) => {
          if (!_0x2478c4.game.graphics.hasStreamedTextureDictLoaded(_0x38c0d2)) return void _0x2478c4.game.graphics.requestStreamedTextureDict(_0x38c0d2, true);

          const _0x53c541 = new _0x2478c4.Vector3(-0.5 * _0xdd05d1, 0x0, 0.5 * _0x1206fd),
                _0xbf1186 = new _0x2478c4.Vector3(0.5 * _0xdd05d1, 0x0, 0.5 * _0x1206fd),
                _0xe8ca38 = new _0x2478c4.Vector3(-0.5 * _0xdd05d1, 0x0, -0.5 * _0x1206fd),
                _0x223c4c = new _0x2478c4.Vector3(0.5 * _0xdd05d1, 0x0, -0.5 * _0x1206fd),
                _0x54d67c = _0x3fd2ac.getObjectOffset(_0x501dbd, _0x2aca9f, _0x53c541),
                _0x136fbc = _0x3fd2ac.getObjectOffset(_0x501dbd, _0x2aca9f, _0xbf1186),
                _0xbd0fbb = _0x3fd2ac.getObjectOffset(_0x501dbd, _0x2aca9f, _0xe8ca38),
                _0x2adbc3 = _0x3fd2ac.getObjectOffset(_0x501dbd, _0x2aca9f, _0x223c4c);

          _0x2478c4.game.graphics.drawSpritePoly(_0x54d67c.x, _0x54d67c.y, _0x54d67c.z, _0xbd0fbb.x, _0xbd0fbb.y, _0xbd0fbb.z, _0x136fbc.x, _0x136fbc.y, _0x136fbc.z, _0x209895[0x0], _0x209895[0x1], _0x209895[0x2], _0x209895[0x3] || 0xff, _0x38c0d2, _0x9da05b, 1e-9, 1e-9, 1e-9, 1e-9, 0.999999999, 1e-9, 0.999999999, 1e-9, 1e-9), _0x2478c4.game.graphics.drawSpritePoly(_0xbd0fbb.x, _0xbd0fbb.y, _0xbd0fbb.z, _0x2adbc3.x, _0x2adbc3.y, _0x2adbc3.z, _0x136fbc.x, _0x136fbc.y, _0x136fbc.z, _0x209895[0x0], _0x209895[0x1], _0x209895[0x2], _0x209895[0x3] || 0xff, _0x38c0d2, _0x9da05b, 1e-9, 0.999999999, 1e-9, 0.999999999, 0.999999999, 1e-9, 0.999999999, 1e-9, 1e-9);
        }, _0x3fd2ac.getEntityCoords = _0x152419 => _0x152419.position, _0x3fd2ac.getVehicleTitle = _0x3fa38a => _0x5107a3()[_0x3fa38a] ? _0x5107a3()[_0x3fa38a].title : _0x3fa38a, _0x3fd2ac.is11 = '0.2 beta' != _0x2478c4.version.core, _0x3fd2ac.rgb2hexColor = _0x5a8f15 => '' + _0xd8c67f(_0x5a8f15.r) + _0xd8c67f(_0x5a8f15.g) + _0xd8c67f(_0x5a8f15.b);

        const _0xd8c67f = _0x2feb96 => {
          const _0x61a64b = _0x2feb96.toString(0x10);

          return _0x61a64b.length < 0x2 ? '0' + _0x61a64b : _0x61a64b;
        };

        _0x3fd2ac.hexColor2rgb = _0x4ec999 => {
          const _0x346086 = _0x4ec999.substring(0x1);

          return {
            'r': parseInt(_0x346086.substring(0x0, 0x2), 0x10),
            'g': parseInt(_0x346086.substring(0x2, 0x4), 0x10),
            'b': parseInt(_0x346086.substring(0x4, 0x6), 0x10)
          };
        }, _0x3fd2ac.joaat = _0x168b8a => {
          const _0x46e188 = _0x168b8a.length;

          let _0x124e2, _0x3e2653;

          for (_0x124e2 = _0x3e2653 = 0x0; _0x3e2653 < _0x46e188; _0x3e2653++) _0x124e2 += _0x168b8a.charCodeAt(_0x3e2653), _0x124e2 += _0x124e2 << 0xa, _0x124e2 ^= _0x124e2 >>> 0x6;

          return _0x124e2 += _0x124e2 << 0x3, _0x124e2 ^= _0x124e2 >>> 0xb, _0x124e2 += _0x124e2 << 0xf, _0x124e2;
        }, _0x3fd2ac.testPointToPoint = (_0x3eeb18, _0x2b7fb7, _0x362aca, _0x2bbb12) => {
          const _0x590f85 = _0x2478c4.raycasting.testPointToPoint(_0x3eeb18, _0x2b7fb7, _0x362aca, _0x2bbb12);

          if (_0x590f85) return 'number' == typeof _0x590f85.entity && 0x0 !== _0x590f85.entity && _0x2478c4.game.entity.isAnObject(_0x590f85.entity) && _0x2478c4.game.shapetest.releaseScriptGuidFromEntity(_0x590f85.entity), _0x590f85;
        }, _0x3fd2ac.htmlEncode = _0xff1337 => String(_0xff1337).replace(/[^\w. ]/gi, function (_0x346e23) {
          return '&#' + _0x346e23.charCodeAt(0x0) + ';';
        }), _0x3fd2ac.isItAprilFoolDay = () => {
          const _0x59e681 = new Date();

          return 0x3 == _0x59e681.getMonth() && 0x1 == _0x59e681.getDate();
        }, _0x3fd2ac.shortUUID_5 = new (_0x47a5f7())({
          'length': 0x5
        }), _0x3fd2ac.isDead = (_0x50294f = _0x2478c4.players.local) => _0x3fd2ac.getEntitySync(_0x50294f, 'isDead', 'boolean'), _0x3fd2ac.isDriver = (_0x3db2f1 = _0x2478c4.players.local) => !!_0x3db2f1.vehicle && _0x3db2f1.vehicle.getPedInSeat(_0x3fd2ac.getVehSeat(-0x1)) == _0x3db2f1.handle, _0x3fd2ac.getBestTorso = (_0x14df1b, _0x308ff3, _0x471ab0, _0x1fd52e, _0x5a64b3, _0x540c58) => {
          let _0x28855a = null,
              _0xc0e404 = null,
              _0x5c89b6 = null;
          null != _0x471ab0 ? _0x28855a = [0x0, 0x0, _0x471ab0, 0x0, 0x0, 0x0, 0x0] : _0x308ff3 && Array.isArray(_0x308ff3) && (_0x28855a = _0x308ff3.find(_0x5937ee => 0xb === _0x5937ee[0x1])), null != _0x1fd52e ? _0xc0e404 = [0x0, 0x0, _0x1fd52e, 0x0, 0x0, 0x0, 0x0] : _0x308ff3 && Array.isArray(_0x308ff3) && (_0xc0e404 = _0x308ff3.find(_0x227a9a => 0x8 === _0x227a9a[0x1])), _0x5c89b6 = null != _0x5a64b3 ? _0x5a64b3 : _0x3fd2ac.getEntitySync(_0x14df1b, 'gender', 'number') ? 0x1 : 0x0;
          let _0x1e0041 = 0xf,
              _0x29ddb0 = 0x0;

          if (_0xc0e404) {
            const _0xabb6c7 = _0x28855a ? _0x28855a[0x2] : 0xf;

            if (_0x43784e.Z[_0x5c89b6] && null != _0x43784e.Z[_0x5c89b6][_0xabb6c7]) {
              const _0x18fc6c = _0x43784e.Z[_0x5c89b6][_0xabb6c7].find(_0x3c1e7f => _0x3c1e7f.u === _0xc0e404[0x2]);

              _0x18fc6c && (_0x1e0041 = _0x18fc6c.t);
            }
          } else _0x28855a && (_0x1e0041 = _0x5c89b6 ? _0x3bed4b && null != _0x3bed4b[_0x28855a[0x2]] ? _0x3bed4b[_0x28855a[0x2]] : 0xf : _0x22b06c && null != _0x22b06c[_0x28855a[0x2]] ? _0x22b06c[_0x28855a[0x2]] : 0xf);

          const _0x5317b3 = _0x540c58 || _0x14df1b.gloves;

          return _0x5317b3 && (_0x1e0041 = _0x1942a6()[_0x5c89b6][_0x1e0041][_0x5317b3.drawable - 0x1], _0x29ddb0 = _0x5317b3.texture), {
            'torso': _0x1e0041,
            'texture': _0x29ddb0
          };
        }, _0x3fd2ac.getBestTorsoHandler = (_0x4a537e, _0x47a004, _0x10ed9f, _0x3ba1c4, _0x351aec, _0x5c9325) => {
          -0x1 === _0x47a004 && (_0x47a004 = null), -0x1 === _0x10ed9f && (_0x10ed9f = null), -0x1 === _0x3ba1c4 && (_0x3ba1c4 = null);
          let _0x531962 = null;
          null != _0x351aec && (_0x531962 = {
            'drawable': _0x351aec,
            'texture': _0x5c9325
          });

          const _0x5366ab = _0x3fd2ac.getBestTorso(_0x4a537e, _0x3fd2ac.getEntitySync(_0x4a537e, 'clothes', 'array'), _0x10ed9f, _0x3ba1c4, _0x47a004, _0x531962);

          _0x2478c4.events.call('setClothes', 0x3, _0x5366ab.torso, _0x5366ab.texture);
        };
      },
      0x18fa: (_0x2b6dd6, _0x497c66, _0xce055f) => {
        'use strict';

        const a0_0x520655 = {
          _0x224ee9: 0x6ba,
          _0x2c1075: 0x6ba
        },
              a0_0x591eb1 = {
          _0x52fecc: 0x6ba
        },
              a0_0xab0f3a = {
          _0x34b088: 0x10b7,
          _0x781870: 0x215,
          _0x5bd9e2: 0x1dda
        },
              a0_0x2a4188 = {
          _0x1c9d53: 0x2271,
          _0x1ddc2c: 0xe74
        },
              a0_0x5033a7 = {
          _0x1ce82c: 0x535,
          _0x277b40: 0x253d,
          _0x225f91: 0xda6,
          _0x289849: 0xda6,
          _0x3b19a6: 0x89f,
          _0xcb6d90: 0x19e6,
          _0x2ac29d: 0x1ee9,
          _0xfe11d1: 0x300,
          _0x49d609: 0x300
        },
              a0_0x4f0bd0 = {
          _0x73ed86: 0xd03,
          _0xb9a0fb: 0x1d66,
          _0x3ac37d: 0xd03,
          _0x5ad2ad: 0xd03,
          _0x221a93: 0x1d66,
          _0x337c4d: 0x1e35,
          _0x22e24a: 0x1fe2,
          _0x4ee6d8: 0xd03
        },
              a0_0x29a481 = {
          _0x13591c: 0x185e,
          _0x24b965: 0x1fcd,
          _0x5033e7: 0x1aab,
          _0x4fbd37: 0xaca,
          _0x10c4e1: 0x59d,
          _0x10606e: 0x14d2,
          _0x74acb3: 0x15a5,
          _0x4947fb: 0x2001,
          _0x1879e8: 0x1fcd,
          _0x19dcf2: 0x1aab,
          _0x53e2f7: 0x1fcd,
          _0x44996b: 0x32e,
          _0x5e7161: 0x1da5,
          _0x498be4: 0x1fcd
        },
              a0_0x2bc6c8 = {
          _0x464b2a: 0x186c,
          _0xb546a7: 0xf79
        },
              a0_0x3aa619 = {
          _0x33e09f: 0x523
        },
              a0_0x1fc54b = {
          _0x38b31e: 0x190,
          _0x3f6c99: 0x535
        },
              a0_0x36dd73 = {
          _0x366ccc: 0x35c,
          _0x2342ff: 0x191a,
          _0x3bcb83: 0x191a,
          _0x5a7bd8: 0x535,
          _0x9cd00e: 0x1a07,
          _0x1e4263: 0x535
        },
              a0_0x267cdc = {
          _0x2c871c: 0x2292,
          _0x26988f: 0x535,
          _0xb6136: 0x1c66,
          _0x58810d: 0x1b65,
          _0x3be855: 0x4a3,
          _0x8c300a: 0x21b5,
          _0x5b93b3: 0x1da5
        },
              a0_0x3fab6d = {
          _0x1e2b5b: 0x1c66,
          _0x26e260: 0x535,
          _0x4bcd32: 0x1b65,
          _0x4dfc36: 0x2488,
          _0x37707d: 0x14d2,
          _0x1a4340: 0x1da5,
          _0x5f1d02: 0xb81
        };

        _0xce055f.r(_0x497c66);

        var _0x2ff8fb = _0xce055f(0x16a21);

        const _0x5f3641 = JSON.parse('{"cZ":[{"x":-2455.125,"y":2984.84,"z":32.81},{"x":-2120.683,"y":2834.899,"z":32.809},{"x":-1804.889,"y":3100.663,"z":32.841},{"x":-2193.872,"y":3306.08,"z":32.815},{"x":-2429.2,"y":3306.082,"z":32.977},{"x":-2501.573,"y":3303.124,"z":91.964,"r":59.284,"isRT":true}],"qC":[{"x":5172.1,"y":-4591.67,"z":3.72},{"x":4836.97,"y":-5175.63,"z":2.53},{"x":5403.13,"y":-5172.61,"z":31.42},{"x":5587.75,"y":-5222.02,"z":14.45},{"x":5104.8,"y":-5523.51,"z":54.24},{"x":4908.17,"y":-5834.23,"z":28.22},{"x":5266.758,"y":-5430.548,"z":141.046,"r":125.942,"isRT":true}]}');

        var _0x22785a = _0xce055f(0x3db3),
            _0x2f2b9b = _0xce055f(0x176d8),
            _0x320135 = _0xce055f(0x12a76),
            _0x5ebc03 = _0xce055f(0xb9cc),
            _0x3be546 = _0xce055f(0x161cd);

        const _0x18aafb = _0x3be546.players.local;

        let _0x2f2a94,
            _0x23ce32 = false,
            _0x5a9f56 = null;

        _0x3be546.events.add('radioTower.triggerAction', async _0x3ad622 => {
          _0x5a9f56 = _0x3ad622, _0x2ff8fb.api.taskPlayAnim('anim@heists@humane_labs@emp@hack_door', 'hack_loop'), _0x18aafb.freezePosition(true), _0x2ff8fb.api.usingSystemAnim(true), _0x23ce32 = true, _0x320135.globalBrowser.toggle('programHack', {
            'value': true,
            'isRadioTower': true
          }), _0x21ba5e();
        }), _0x3be546.events.add('playerDeath2', _0x4c10ec => {
          _0x4c10ec == _0x3be546.players.local && _0x23ce32 && _0xce055f.g.interfaces.programHack && (_0x320135.globalBrowser.toggle('programHack', {
            'value': false,
            'isRadioTower': false
          }), _0x355a81(), _0x18aafb.freezePosition(false), _0x2ff8fb.api.usingSystemAnim(false), _0x2ff8fb.api.stopAnim());
        }), _0x3be546.events.add('isRadioTower_programHack.success', () => {
          _0x23ce32 && (_0x23ce32 = false, _0x18aafb.freezePosition(false), _0x2ff8fb.api.usingSystemAnim(false), _0x2ff8fb.api.stopAnim(), _0x320135.globalBrowser.toggle('programHack', {
            'value': false,
            'isRadioTower': false
          }), _0x355a81(), _0x3be546.events.callRemote('3867529777', _0x5a9f56), _0x5a9f56 = null);
        }), _0x3be546.events.add('isRadioTower_programHack.fail', () => {
          _0x23ce32 && (_0x23ce32 = false, _0x18aafb.freezePosition(false), _0x2ff8fb.api.usingSystemAnim(false), _0x2ff8fb.api.stopAnim(), _0x320135.globalBrowser.toggle('programHack', {
            'value': false,
            'isRadioTower': false
          }), _0x355a81(), _0x3be546.events.callRemote('1380094381', _0x5a9f56), _0x5a9f56 = null);
        });

        const _0x21ba5e = () => {
          try {
            _0x2f2a94 = new _0x5ebc03.InstructionalButtons(-0x1), _0x2f2a94.addButton('ibuttons.choosingPin', [0xac, 0xad]), _0x2f2a94.addButton('ibuttons.selectPin', 0xc9), _0x2ff8fb.api.longNotifyTrans('bankHeist.pinHint', 'warn', 0x2710), _0x2f2a94.isActive() || _0x2f2a94.toggleHud(true);
          } catch (_0xa62b1a) {
            _0x2ff8fb.api.sendError(_0xa62b1a);
          }
        },
              _0x355a81 = () => {
          try {
            _0x2f2a94 && (_0x2f2a94.resetBar(), _0x2f2a94 = null);
          } catch (_0x31a689) {
            _0x2ff8fb.api.sendError(_0x31a689);
          }
        };

        var _0x3f3a31 = _0xce055f(0x161cd);

        new class {
          constructor() {
            const a0_0x974e83 = {
              _0x2a6929: 0x8ec,
              _0x3017c5: 0x225f,
              _0x107092: 0xda6,
              _0x14c9a6: 0xc55,
              _0x2d706b: 0xd03,
              _0x4897e1: 0x1d66,
              _0x5c13ac: 0xd03,
              _0x3755b5: 0x1751,
              _0x4b561b: 0x1e35,
              _0x9207d3: 0xd03
            },
                  a0_0x119cc5 = {
              _0x15f241: 0xda6,
              _0x3203e9: 0x695,
              _0x1a7955: 0x1d66,
              _0x31d4f2: 0x1acd,
              _0xed53cb: 0x1e35,
              _0x2e7bfa: 0x5b2,
              _0x28cec3: 0x1d66,
              _0x775d98: 0xd03
            },
                  a0_0x51dca8 = {
              _0xc27271: 0x535,
              _0x4e8902: 0x32e,
              _0x3db711: 0xaca,
              _0x2ab213: 0x32e,
              _0x3782eb: 0x1377,
              _0x28290f: 0x1fcd
            },
                  a0_0x203e6c = {
              _0x3e6080: 0x535,
              _0x5d6f5f: 0x253d,
              _0x3ffc79: 0xaca,
              _0x14ad7b: 0x1fcd
            },
                  a0_0x5c11ef = {
              _0x15b40b: 0x14d2,
              _0x234844: 0x697
            };
            this.keys = {
              'island': 0x1,
              'fortZancudo': 0x2
            }, this.timeBar = null, this.enteredTheZone = null, this.points = {
              [this.keys.island]: _0x5f3641.qC.map(_0x4e6fd9 => ({ ..._0x4e6fd9,
                'colorId': 0x0
              })),
              [this.keys.fortZancudo]: _0x5f3641.cZ.map(_0x5ddda7 => ({ ..._0x5ddda7,
                'colorId': 0x0
              }))
            }, this.blips = [];

            for (let _0x176532 in this.keys) _0x3f3a31.events.add(_0x176532 + ':in', _0x97c41d => {
              this.inZone(_0x176532, _0x97c41d);
            }), _0x3f3a31.events.add(_0x176532 + ':out', () => {
              this.outZone(_0x176532);
            }), _0x3f3a31.events.add(_0x176532 + ':setColor', (_0x3009f0, _0x456e36, _0x51d97e) => {
              this.setColor(_0x176532, _0x3009f0, _0x456e36, _0x51d97e);
            });

            _0x3f3a31.events.add('playerPolygonEnter', (_0x5a6eaf, _0x23727c) => {
              'fort-zancudo' === _0x23727c.name && _0x3f3a31.events.callRemote('422761503', true);
            }), _0x3f3a31.events.add('playerPolygonExit', (_0x2b6338, _0x15d048) => {
              'fort-zancudo' === _0x15d048.name && _0x3f3a31.events.callRemote('1192110719', true);
            }), this.inShape = null, this.inZoneWar = false, _0x3f3a31.events.add('playerEnterColshape', async _0x57ea45 => {
              if (_0x2ff8fb.api.isAuthed() && _0x3f3a31.colshapes.exists(_0x57ea45)) return _0x57ea45 && _0x57ea45.hasVariable('ctPoint') ? (this.inShape = _0x57ea45, void _0x2ff8fb.api.displayHelpStringTrans('displayHelpString.ctPoint', false, true, 0x1388)) : _0x57ea45 && _0x57ea45.hasVariable('radioTower') ? (this.inShape = _0x57ea45, void _0x2ff8fb.api.displayHelpStringTrans('displayHelpString.radioTower', false, true, 0x1388)) : undefined;
            }), _0x3f3a31.events.add('playerExitColshape', async _0xbe6f38 => {
              if (_0x2ff8fb.api.isAuthed()) return _0xbe6f38 && (_0xbe6f38.hasVariable('ctPoint') || _0xbe6f38.hasVariable('radioTower')) ? (this.inShape = null, void _0x3f3a31.game.ui.clearHelp(true)) : undefined;
            }), _0x3f3a31.events.add('keys.e', async () => {
              _0x3f3a31.players.local.vehicle || (this.inShape && _0x3f3a31.colshapes.exists(this.inShape) && this.inShape.hasVariable('ctPoint') ? (_0x3f3a31.game.ui.clearHelp(true), _0x3f3a31.events.callRemote('4119608395', this.inShape.remoteId), this.inShape = null) : this.inShape && _0x3f3a31.colshapes.exists(this.inShape) && this.inShape.hasVariable('radioTower') && _0x3f3a31.events.callRemote('3873934146', this.inShape.remoteId));
            }), this.markersData = {}, this.markers = 0x0, this.fxList = {}, _0x3f3a31.events.add('attackOnTheArmy.marker.add', (_0x5696f4, _0x40a34a, _0x233cd5, _0x384019, _0x33e3fc, _0x57e4ea, _0x4c1653 = 0x0) => {
              this.markersData[_0x5696f4] = {
                'type': _0x40a34a,
                'posX': _0x233cd5,
                'posY': _0x384019,
                'posZ': _0x33e3fc - 0x4b,
                'scale': _0x57e4ea
              }, this.markers = Object.values(this.markersData), this.createTimerBar(_0x4c1653), _0x3f3a31.game.graphics.setPtfxAssetNextCall('core'), this.fxList[_0x5696f4] = _0x3f3a31.game.graphics.startParticleFxLoopedAtCoord('proj_flare_trail', _0x233cd5, _0x384019, _0x33e3fc, 0x0, 0x0, 0x0, 1.5, false, false, false, false), _0x3f3a31.game.graphics.setParticleFxLoopedColour(this.fxList[_0x5696f4], 0xff, 0xc6, 0x18, false);
            }), _0x3f3a31.events.add('attackOnTheArmy.marker.dell', _0x252dd9 => {
              this.clearTimerBar(), delete this.markersData[_0x252dd9], this.markers = Object.values(this.markersData), undefined !== this.fxList[_0x252dd9] && (_0x3f3a31.game.graphics.doesParticleFxLoopedExist(this.fxList[_0x252dd9]) && _0x3f3a31.game.graphics.stopParticleFxLooped(this.fxList[_0x252dd9], true), this.fxList[_0x252dd9] > 0x0 && _0x3f3a31.game.graphics.removeParticleFx(this.fxList[_0x252dd9], true)), delete this.fxList[_0x252dd9];
            }), _0x3f3a31.events.add('attackOnTheArmy.marker.clearTimerBar', _0x25d023 => {
              this.clearTimerBar(), undefined !== this.fxList[_0x25d023] && (_0x3f3a31.game.graphics.doesParticleFxLoopedExist(this.fxList[_0x25d023]) && _0x3f3a31.game.graphics.stopParticleFxLooped(this.fxList[_0x25d023], true), this.fxList[_0x25d023] > 0x0 && _0x3f3a31.game.graphics.removeParticleFx(this.fxList[_0x25d023], true)), delete this.fxList[_0x25d023];
            }), _0x3f3a31.events.add('render', () => {
              if (_0x2ff8fb.api.isAuthed() && this.markers && this.markers.length) {
                for (const _0x38c5a3 of this.markers) _0x3f3a31.game.graphics.drawMarker(_0x38c5a3.type, _0x38c5a3.posX, _0x38c5a3.posY, _0x38c5a3.posZ - 1.5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, _0x38c5a3.scale, _0x38c5a3.scale, 0x64, 0xff, 0x0, 0x0, 0x64, false, false, 0x2, false, null, null, false);
              }
            }), _0x3f3a31.events.add('time.everySec', async () => {
              _0x2ff8fb.api.isAuthed() && this.timeBar && (this.timeBar.value += 0.0033);
            });
          }

          ['createTimerBar'](_0x188609) {
            this.timeBar || (this.timeBar = new _0x2f2b9b.TimerBar('attackOnTheArmy.retention', 'progressBar', {
              'value': _0x188609,
              'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
              'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
            }));
          }

          ['clearTimerBar']() {
            this.timeBar && (this.timeBar.visible = false, this.timeBar = null);
          }

          ['inZone'](_0x4c4a48, _0x4129a9) {
            const a0_0x54b969 = {
              _0xc274d3: 0x21d6,
              _0x5f4ef0: 0xd2a
            },
                  _0x3ffa07 = this.keys[_0x4c4a48];
            let _0x46a3e1 = this.points[_0x3ffa07];
            undefined !== _0x46a3e1 && (this.enteredTheZone = _0x4c4a48, (_0x4129a9 = JSON.parse(_0x4129a9)).forEach((_0x4d3ec0, _0x24f7e9) => {
              undefined !== _0x46a3e1[_0x24f7e9] && (_0x46a3e1[_0x24f7e9].isCreate = !!_0x4d3ec0, _0x46a3e1[_0x24f7e9].isCreate && (_0x46a3e1[_0x24f7e9].colorId = _0x4d3ec0.colorId, _0x46a3e1[_0x24f7e9].blipId = _0x4d3ec0.blipId));
            }), this.points[_0x3ffa07] = _0x46a3e1, this.createBlips(_0x4c4a48));
          }

          ['outZone'](_0x3c233f) {
            this.enteredTheZone === _0x3c233f && (this.enteredTheZone = null, this.destroyBlips());
          }

          ['setColor'](_0x2bbcba, _0x445327, _0x3273a0, _0x20f310) {
            const _0x4526ef = this.keys[_0x2bbcba];
            let _0x42b851 = this.points[_0x4526ef];
            if (undefined === _0x42b851) return;
            if (this.enteredTheZone !== _0x2bbcba) return;
            let _0x5eb8b7 = this.blips[_0x445327];
            undefined !== _0x5eb8b7 && (_0x3f3a31.blips.exists(_0x5eb8b7) && _0x5eb8b7.destroy(), _0x42b851[_0x445327].colorId = _0x3273a0, _0x42b851[_0x445327].blipId = _0x20f310, _0x5eb8b7 = _0x3f3a31.blips.new(_0x20f310, new _0x3f3a31.Vector3(_0x42b851[_0x445327].x, _0x42b851[_0x445327].y), {
              'alpha': 0xff,
              'color': _0x3273a0
            }), (0x0, _0x22785a.markAsTranslatedBlip)(_0x5eb8b7, 'blips.ctPoint'), this.blips[_0x445327] = _0x5eb8b7);
          }

          ['createBlips'](_0x3e67f4) {
            const a0_0x40c7fa = {
              _0x530712: 0x21d6,
              _0x1441f8: 0x1cdf,
              _0x43aedb: 0x6ba,
              _0x2fe350: 0xf82,
              _0x2edb08: 0x1d55,
              _0x2bd8a5: 0x1d4e,
              _0x2974b3: 0xfb5,
              _0x381469: 0x1d2
            },
                  _0x3c02a3 = this.keys[_0x3e67f4];
            if (undefined === this.points[_0x3c02a3]) return;
            this.destroyBlips();
            let _0xdb3990 = [];
            this.points[_0x3c02a3].forEach((_0x309881, _0xb72819) => {
              if (_0x309881.isCreate && undefined !== _0x309881.blipId && undefined !== _0x309881.colorId) {
                const _0x1e3d6e = _0x3f3a31.blips.new(_0x309881.blipId, new _0x3f3a31.Vector3(_0x309881.x, _0x309881.y), {
                  'alpha': 0xff,
                  'color': _0x309881.colorId
                });

                _0x309881.isRT ? (0x0, _0x22785a.markAsTranslatedBlip)(_0x1e3d6e, 'blips.rtPoint') : (0x0, _0x22785a.markAsTranslatedBlip)(_0x1e3d6e, 'blips.ctPoint'), _0xdb3990.push(_0x1e3d6e);
              }
            }), this.blips = _0xdb3990;
          }

          ['destroyBlips']() {
            this.blips.forEach(_0x105647 => {
              _0x3f3a31.blips.exists(_0x105647) && _0x105647.destroy();
            }), this.blips = [];
          }

        }();
      },
      0x6bdc: (_0x17aaa4, _0x3ddab8, _0x5bbaaa) => {
        'use strict';

        const a0_0x666db7 = {
          _0xc118a8: 0x35c,
          _0x258cc6: 0x1dc3,
          _0x167c6: 0x191a,
          _0x7bbb17: 0x2a2,
          _0x1756ca: 0x1063
        },
              a0_0x540e3b = {
          _0x66d286: 0x35c,
          _0x218595: 0x191a,
          _0x55ceea: 0xd4c,
          _0x569cbf: 0x444,
          _0x9d20f: 0x1a63,
          _0x5f3fda: 0x4a9,
          _0x2fe2ee: 0x13b0,
          _0x4454d8: 0x1063
        },
              a0_0x1947fb = {
          _0x1029bd: 0x6da,
          _0x5ab6a9: 0x14d2,
          _0x3d6767: 0x1da5,
          _0x49afa7: 0x974,
          _0x103d3d: 0x169e,
          _0x2bc8cc: 0x1d49
        },
              a0_0x12a495 = {
          _0x218ee9: 0x1d55,
          _0x184611: 0x535,
          _0x3d5a95: 0x1289,
          _0x550022: 0x1f41,
          _0x533405: 0xaa4,
          _0x1586b7: 0x1ba,
          _0x444bcf: 0x2292,
          _0x5351ac: 0x4a3
        },
              a0_0x24bd70 = {
          _0x2b7ce7: 0x2292,
          _0x2aff43: 0x535,
          _0x5c4b7d: 0x1c66,
          _0x53e62a: 0x535,
          _0x2a8545: 0x2488,
          _0x22e587: 0x21b5,
          _0x17a06: 0x14d2,
          _0x5f1578: 0x1da5,
          _0x1869e6: 0x189f,
          _0xf0a2a5: 0x1a07,
          _0x3e5325: 0x11d3,
          _0x4f686f: 0x1934
        },
              a0_0x25d01a = {
          _0x46ac55: 0x1221,
          _0x56aa22: 0x535,
          _0x541513: 0x17b3,
          _0x33a612: 0x2292,
          _0x2410cc: 0x1c66,
          _0x21f25b: 0x4a3,
          _0x4d4c3f: 0x21b5
        },
              a0_0x38fe19 = {
          _0x45ccfc: 0x1d66,
          _0x504d14: 0x59d
        },
              a0_0x3a5388 = {
          _0x39808c: 0x1aab,
          _0x4c9b69: 0x16c5,
          _0x56d663: 0xce5,
          _0x4b087e: 0x535,
          _0x1df96f: 0xf86,
          _0x2cf65c: 0x90e,
          _0x887253: 0x1fe7,
          _0x22a3fd: 0x87f,
          _0x5ea16e: 0x535,
          _0x5b785e: 0xcbb
        },
              a0_0x1ec694 = {
          _0x20c328: 0x1d66,
          _0x17ad3b: 0x9c8,
          _0x395d8c: 0x535,
          _0x1610a8: 0x1366,
          _0x1bb097: 0x16c5,
          _0x4c97c0: 0x40d,
          _0x17e08b: 0x1d6d,
          _0x3cf511: 0x535,
          _0x37f433: 0x40d,
          _0x409b9a: 0x1f30,
          _0x3bd326: 0x1d55,
          _0x2d8dcd: 0xe74,
          _0x2abe91: 0xa9b,
          _0x3a7d6d: 0x1b05,
          _0xcd3352: 0x1b37,
          _0x17f067: 0x91b,
          _0xca8b4: 0x1fe5,
          _0x5c2a3e: 0x40d
        };

        _0x5bbaaa.r(_0x3ddab8);

        var _0x5307fa = _0x5bbaaa(0x16a21),
            _0x388638 = _0x5bbaaa(0x176d8),
            _0x43855d = _0x5bbaaa(0xb9cc),
            _0x50412a = _0x5bbaaa(0x10c56),
            _0x20b9aa = _0x5bbaaa(0x12a76),
            _0x2cf6e9 = _0x5bbaaa(0x161cd);

        const _0xda4134 = _0x2cf6e9.players.local;
        let _0x4c7985 = 0x0;
        const _0xa82206 = 'anim@heists@ornate_bank@grab_cash';

        let _0x55dd1c,
            _0x58b586,
            _0x26b461,
            _0x260bfb,
            _0x14b33b,
            _0x5466f0,
            _0x36c676 = false,
            _0xe5d8f2 = false;

        _0x2cf6e9.events.add('time.everySec', async () => {
          const a0_0x4ba7ce = {
            _0x47a05c: 0x1b05
          };

          if (_0x5307fa.api.isAuthed()) {
            if (_0x2cf6e9.game.player.isFreeAiming()) {
              const _0x1507c5 = _0x5307fa.api.getLookingAtPed();

              if (null == _0x1507c5) return void (0x0 != _0x4c7985 && _0x978195());
              const _0x2fe228 = _0x1507c5;
              if (!_0x2cf6e9.peds.exists(_0x2fe228)) return void (0x0 != _0x4c7985 && _0x978195());

              if (_0x2fe228 && 'ped' === _0x2fe228.type && _0x2fe228.cData && null != _0x2fe228.cData.bankHeistId) {
                if (!_0x5307fa.api.isInMask(_0xda4134)) return void (0x0 != _0x4c7985 && _0x978195());
                const _0x3a0ae3 = _0x50412a[_0x2fe228.cData.bankHeistId].vault;
                if (_0x5307fa.api.vdist2(_0xda4134.position, new _0x2cf6e9.Vector3(_0x3a0ae3.x, _0x3a0ae3.y, _0x3a0ae3.z)) > 0x32) return void (0x0 != _0x4c7985 && _0x978195());
                _0xe00e12 || _0x759133(), _0x4c7985 += 0x1, _0xe00e12.value += 0.0165, !_0x2fe228.isPlayingAnim('rcmminute2', 'handsup', 0x3) && _0x4c7985 > 0x0 && _0x5307fa.api.requestAnimDict('rcmminute2').then(() => {
                  _0x2fe228.taskPlayAnim('rcmminute2', 'handsup', 0x8, -0x8, -0x1, 0x0, 0x0, false, false, false);
                }), _0x4c7985 >= 0x3c && (_0x2cf6e9.events.callRemote('3816733539', _0x2fe228.cData.bankHeistId, 0x2), _0x4c7985 = 0x0, _0xcb95d8());
              }
            } else 0x0 != _0x4c7985 && _0x978195();
          }
        });

        const _0x978195 = () => {
          _0x4c7985 = 0x0, _0xcb95d8();
        };

        let _0xe00e12;

        const _0x759133 = () => {
          _0xe00e12 || (_0xe00e12 = new _0x388638.TimerBar('bankHeist.scaring', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          }));
        },
              _0xcb95d8 = () => {
          _0xe00e12 && (_0xe00e12.visible = false, _0xe00e12 = undefined);
        };

        let _0x3cf949;

        _0x2cf6e9.events.add('playerEnterColshape', _0x2f74d5 => {
          if (!_0x2cf6e9.colshapes.exists(_0x2f74d5)) return;
          if (_0x26b461 || _0x260bfb || _0x36c676 || _0xe5d8f2) return;
          if (!_0x2f74d5.hasVariable('bank_heist')) return;

          const _0x3216a5 = _0x2f74d5.getVariable('bank_heist');

          if (_0x3216a5) switch (_0x3216a5.type) {
            case 'vault':
            case 'cage':
              _0x3cf949 = _0x2f74d5, _0x5307fa.api.displayHelpStringTrans('displayHelpString.openDoor', false, true, 0x1388);
              break;

            case 'safe':
              _0x3cf949 = _0x2f74d5, _0x5307fa.api.displayHelpStringTrans('displayHelpString.toHackCell', false, true, 0x1388);
              break;

            case 'trolley1':
            case 'trolley2':
            case 'trolley3':
              _0x3cf949 = _0x2f74d5, _0x5307fa.api.displayHelpStringTrans('displayHelpString.takeMoney', false, true, 0x1388);
          }
        }), _0x2cf6e9.events.add('playerExitColshape', _0x540d17 => {
          _0x540d17 == _0x3cf949 && (_0x3cf949 = undefined, _0x2cf6e9.game.ui.clearHelp(true));
        }), _0x2cf6e9.events.add('keys.e', () => {
          if ('number' == typeof _0x260bfb && _0x14b33b && (_0x2cf6e9.events.callRemote('3055776845', _0x260bfb, _0x14b33b), _0x260bfb = undefined), _0x36c676 && (_0xda4134.freezePosition(false), _0x5307fa.api.usingSystemAnim(false), _0x5307fa.api.stopAnim(), _0x20b9aa.globalBrowser.toggle('breakLock', {
            'value': false
          }), _0x2110a3(), _0x2cf6e9.attachments.removeLocal(_0x2cf6e9.game.joaat('drill')), _0x5466f0 = undefined, _0x36c676 = false), _0x5307fa.api.getLocalVariable('isUsingSystemAnim')) return;
          if (!_0x2cf6e9.colshapes.exists(_0x3cf949)) return;

          const _0x50967c = _0x3cf949.getVariable('bank_heist');

          if (['trolley1', 'trolley2', 'trolley3', 'safe'].includes(_0x50967c.type) && _0xda4134.activeItemId) return _0x5307fa.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
          _0x2cf6e9.events.callRemote('2358806799', _0x50967c.id, _0x50967c.type), _0x3cf949 = undefined, _0x2cf6e9.game.ui.clearHelp(true);
        }), _0x2cf6e9.events.add('bank.heists.triggerAction', async (_0x34cd5a, _0x3d2efc) => {
          if (_0x26b461 = _0x34cd5a, 'hackVault' === _0x3d2efc) _0x5307fa.api.taskPlayAnim('anim@heists@humane_labs@emp@hack_door', 'hack_loop'), _0xda4134.freezePosition(true), _0x5307fa.api.usingSystemAnim(true), _0xe5d8f2 = true, _0x20b9aa.globalBrowser.toggle('programHack', {
            'value': true
          }), _0x4b443e();
        }), _0x2cf6e9.events.add('playerDeath2', _0x47fd06 => {
          _0x47fd06 == _0x2cf6e9.players.local && (_0xe5d8f2 && _0x5bbaaa.g.interfaces.programHack && (_0x20b9aa.globalBrowser.toggle('programHack', {
            'value': false
          }), _0x15bc16(), _0xda4134.freezePosition(false), _0x5307fa.api.usingSystemAnim(false), _0x5307fa.api.stopAnim()), _0x36c676 && _0x5bbaaa.g.interfaces.breakLock && (_0x20b9aa.globalBrowser.toggle('breakLock', {
            'value': false
          }), _0x2cf6e9.attachments.removeLocal(_0x2cf6e9.game.joaat('drill')), _0x2110a3(), _0xda4134.freezePosition(false), _0x5307fa.api.usingSystemAnim(false), _0x5307fa.api.stopAnim()));
        }), _0x2cf6e9.events.add('programHack.success', () => {
          _0xe5d8f2 && (_0xe5d8f2 = false, _0xda4134.freezePosition(false), _0x5307fa.api.usingSystemAnim(false), _0x5307fa.api.stopAnim(), _0x20b9aa.globalBrowser.toggle('programHack', {
            'value': false
          }), _0x15bc16(), _0x2cf6e9.events.callRemote('3816733539', _0x26b461, 0x3), _0x26b461 = undefined);
        }), _0x2cf6e9.events.add('programHack.fail', () => {
          _0xe5d8f2 && (_0xe5d8f2 = false, _0xda4134.freezePosition(false), _0x5307fa.api.usingSystemAnim(false), _0x5307fa.api.stopAnim(), _0x20b9aa.globalBrowser.toggle('programHack', {
            'value': false
          }), _0x15bc16(), _0x2cf6e9.events.callRemote('1820709465', _0x26b461, 0x3), _0x5307fa.api.longNotifyTrans('bankHeist.couldntHackDoor', 'error'), _0x26b461 = undefined);
        }), _0x2cf6e9.events.add('bank.heists.startDrill', async (_0x4c90af, _0x334ac5, _0x450d89, _0x3efe8e) => {
          const _0x412924 = new _0x2cf6e9.Vector3(_0x450d89.x, _0x450d89.y, _0x450d89.z);

          _0x5307fa.api.setPlayerPos(_0xda4134, _0x412924), _0xda4134.setHeading(_0x3efe8e), await _0x5307fa.api.taskPlayAnim('anim@heists@fleeca_bank@drilling', 'drill_left', 0x1, true, false, false, 'drill'), _0xda4134.freezePosition(true), _0x5307fa.api.usingSystemAnim(true), _0x20b9aa.globalBrowser.toggle('breakLock', {
            'value': true,
            'isDrill': true
          }), _0x4e4009(), _0x5466f0 = _0x4c90af, _0x36c676 = true;
        }), _0x2cf6e9.events.add('minigame.breakLock', _0x3f047f => {
          _0x36c676 && (_0x36c676 = false, _0xda4134.freezePosition(false), _0x5307fa.api.usingSystemAnim(false), _0x5307fa.api.stopAnim(), _0x20b9aa.globalBrowser.toggle('breakLock', {
            'value': false
          }), _0x2110a3(), _0x2cf6e9.attachments.removeLocal(_0x2cf6e9.game.joaat('drill')), _0x3f047f ? _0x2cf6e9.events.callRemote('2807243080', _0x5466f0, _0x3f047f) : (_0x2cf6e9.events.callRemote('2807243080', _0x5466f0, _0x3f047f), _0x5307fa.api.longNotifyTrans('bankHeist.couldntHackDoor', 'error')), _0x5466f0 = undefined, _0x36c676 = false);
        }), _0x2cf6e9.events.add('bank.heists.startGrabMoney', async (_0x4052eb, _0x30c8b0, _0x52ae4b, _0x50bcb4, _0x108086) => {
          const _0x55ce0f = _0x2cf6e9.objects.atRemoteId(_0x4052eb);

          await _0x5307fa.api.requestAnimDict(_0xa82206, true), _0x2cf6e9.objects.exists(_0x55ce0f) && !_0x55ce0f.isPlayingAnim(_0xa82206, 'cart_cash_dissapear', 0x3) && _0x55ce0f.playAnim(_0xa82206, 'cart_cash_dissapear', 0x8, false, true, false, 0x0, 0x447a0000);

          const _0x326268 = _0x2cf6e9.game.object.getObjectOffsetFromCoords(_0x50bcb4.x, _0x50bcb4.y, _0x50bcb4.z + 0x1, _0x108086, 0x0, 0.7, 0x0);

          _0x5307fa.api.setPlayerPos(_0xda4134, _0x326268), _0xda4134.setHeading(_0x108086 + 0xb4), await _0x5307fa.api.taskPlayAnim(_0xa82206, 'grab', 0x0, false, false, false, 'cash_pile2'), _0x260bfb = _0x30c8b0, _0x14b33b = _0x52ae4b;
        }), _0x2cf6e9.events.add('bank.heists.stopTrolleyInteraction', () => {
          _0x2cf6e9.attachments.removeLocal(_0x2cf6e9.game.joaat('cash_pile2')), _0x5307fa.api.stopAnim(), _0x260bfb = null, _0x14b33b = null;
        }), _0x2cf6e9.events.add('time.everySec', () => {
          'number' == typeof _0x260bfb && _0x14b33b && (_0x2cf6e9.events.callRemote('1840664506', _0x260bfb, _0x14b33b), _0x2cf6e9.game.audio.playSoundFrontend(-0x1, 'ROBBERY_MONEY_TOTAL', 'HUD_FRONTEND_CUSTOM_SOUNDSET', true));
        });

        const _0x4e4009 = () => {
          try {
            _0x55dd1c = new _0x43855d.InstructionalButtons(-0x1), _0x55dd1c.addButton('ibuttons.drillPower', 0x18), _0x55dd1c.addButton('ibuttons.drillPosition', 0x122), _0x5307fa.api.longNotifyTrans('bankHeist.drillHint', 'warn', 0x2710), _0x55dd1c.isActive() || _0x55dd1c.toggleHud(true);
          } catch (_0x233b18) {
            _0x5307fa.api.sendError(_0x233b18);
          }
        },
              _0x2110a3 = () => {
          try {
            _0x55dd1c && (_0x55dd1c.resetBar(), _0x55dd1c = null);
          } catch (_0x18394e) {
            _0x5307fa.api.sendError(_0x18394e);
          }
        },
              _0x4b443e = () => {
          try {
            _0x58b586 = new _0x43855d.InstructionalButtons(-0x1), _0x58b586.addButton('ibuttons.choosingPin', [0xac, 0xad]), _0x58b586.addButton('ibuttons.selectPin', 0xc9), _0x5307fa.api.longNotifyTrans('bankHeist.pinHint', 'warn', 0x2710), _0x58b586.isActive() || _0x58b586.toggleHud(true);
          } catch (_0x2fbf93) {
            _0x5307fa.api.sendError(_0x2fbf93);
          }
        },
              _0x15bc16 = () => {
          try {
            _0x58b586 && (_0x58b586.resetBar(), _0x58b586 = null);
          } catch (_0x4a19ab) {
            _0x5307fa.api.sendError(_0x4a19ab);
          }
        };
      },
      0xa5f6: (_0x3ddc8c, _0x40c8b0, _0x46f781) => {
        _0x46f781(0x6bdc);
      },
      0x2535: (_0xb865d, _0x42f403, _0xb21096) => {
        'use strict';

        const a0_0x342aed = {
          _0x1e712e: 0xe6d,
          _0x29641f: 0xe6d
        },
              a0_0x24bc39 = {
          _0x11c778: 0x6ba,
          _0x3e18f0: 0xe6d
        };

        _0xb21096.r(_0x42f403);

        var _0x549332 = _0xb21096(0x8cf2),
            _0x360e16 = _0xb21096.n(_0x549332),
            _0x56eab2 = _0xb21096(0x203b),
            _0xc42672 = _0xb21096.n(_0x56eab2),
            _0x18f862 = _0xb21096(0x4029),
            _0x4549e4 = _0xb21096.n(_0x18f862),
            _0x408bf2 = _0xb21096(0x3db3),
            _0x39452a = _0xb21096(0x161cd);

        const _0x40f34d = [];

        _0x39452a.events.add('auth.client.onPlayerAuthAccount', () => {
          const a0_0x8ac59d = {
            _0x3fd247: 0x6ba,
            _0x143e9f: 0xd2a,
            _0x1f2491: 0x1d55,
            _0x50f074: 0x1d2
          },
                a0_0x53f05d = {
            _0x5ca34c: 0x6ba,
            _0x49a731: 0xf82,
            _0x5bd451: 0x1262,
            _0x4e2f2e: 0x1d55,
            _0x1a81c2: 0x17f2,
            _0x2a9252: 0xf79
          };
          _0x360e16().forEach(_0x5751a1 => {
            const _0x2b6098 = _0x39452a.blips.new(_0x5751a1.sprite, new _0x39452a.Vector3(_0x5751a1.x, _0x5751a1.y, _0x5751a1.z), {
              'scale': _0x5751a1.scale ? _0x5751a1.scale : 0.8,
              'color': _0x5751a1.color,
              'shortRange': true
            });

            (0x0, _0x408bf2.markAsTranslatedBlip)(_0x2b6098, _0x5751a1.name, false), _0x40f34d.push(_0x2b6098);
          }), _0xc42672().forEach(_0x146835 => {
            const a0_0x2cbabe = {
              _0xb34d7e: 0x1d55,
              _0x2f90b9: 0x1d4e,
              _0x44ea34: 0x1bd5,
              _0x4e6a64: 0x1d2
            };
            0x0 !== _0x146835.id && _0x146835.blips && _0x146835.blips.forEach(_0x5bc8a5 => {
              const _0xe197ef = _0x39452a.blips.new(_0x5bc8a5.id, new _0x39452a.Vector3(_0x5bc8a5.x, _0x5bc8a5.y, _0x5bc8a5.z), {
                'scale': 0.8,
                'color': _0x146835.color,
                'shortRange': true
              });

              (0x0, _0x408bf2.markAsTranslatedBlip)(_0xe197ef, _0x146835.blipTrans, false), _0x40f34d.push(_0xe197ef);
            });
          }), _0x4549e4().forEach(_0x20764e => {
            if (!_0x20764e.blipId) return;

            const _0x16543f = _0x39452a.blips.new(_0x20764e.blipId, new _0x39452a.Vector3(_0x20764e.x, _0x20764e.y, _0x20764e.z), {
              'scale': 0.7,
              'color': 0x21,
              'shortRange': true
            });

            (0x0, _0x408bf2.markAsTranslatedBlip)(_0x16543f, _0x20764e.blipName, false), _0x40f34d.push(_0x16543f);
          });
        });
      },
      0x12a76: (_0x4e99e2, _0x30e7cf, _0x5b6fba) => {
        'use strict';

        const a0_0x5c6875 = {
          _0x290aac: 0x11f5,
          _0x42560a: 0x1d2,
          _0x4be078: 0x6da,
          _0x17221c: 0x11dc,
          _0x477430: 0x1d2,
          _0x2d84d3: 0x37a,
          _0x7468d5: 0x1d2,
          _0x591533: 0x3d7
        },
              a0_0xd6ecc4 = {
          _0x155c93: 0x2d2,
          _0x4eeae4: 0x1da5,
          _0x4152e0: 0x14d2,
          _0xbfa548: 0x1a5,
          _0x4bbff5: 0x8f5
        },
              a0_0x5719d5 = {
          _0x140194: 0x7cf,
          _0x21a117: 0x7cf,
          _0x45e4be: 0x113e,
          _0x142998: 0x682,
          _0x45ea41: 0x1c86,
          _0x14f679: 0x1423,
          _0x24cf26: 0xf04,
          _0x4712bb: 0x1d15,
          _0xacc1f5: 0x1cb8
        },
              a0_0x1682a6 = {
          _0x550972: 0x7cf,
          _0x5570b9: 0x8b4,
          _0x2eaf2e: 0x112d,
          _0x3c7586: 0x682,
          _0x42a244: 0x242c,
          _0x62f07b: 0xe74,
          _0x41d055: 0x11d9,
          _0x5c3b30: 0x213a,
          _0x35ff3c: 0x830,
          _0x425d0a: 0x385,
          _0xe3ac70: 0x213a
        },
              a0_0xad94b8 = {
          _0x26ab60: 0x1a03,
          _0x280c84: 0xffb,
          _0x26091b: 0x14fc
        },
              a0_0x452377 = {
          _0x1917b1: 0x1d66,
          _0x3f1100: 0x2379,
          _0x46a3f0: 0x17c5,
          _0x568c37: 0x14d2,
          _0x3a40db: 0x1a5
        };
        _0x5b6fba.r(_0x30e7cf), _0x5b6fba.d(_0x30e7cf, {
          'argumentsToBrowserString': () => _0x1cfa58,
          'globalBrowser': () => _0x2234c5,
          'patchBrowser': () => _0x4363bf
        });

        var _0x2b34bc = _0x5b6fba(0x15840),
            _0x5b1842 = _0x5b6fba(0x5d14),
            _0x4c1a6b = _0x5b6fba(0xc344),
            _0x46ce16 = _0x5b6fba(0x16a7d),
            _0x484d90 = _0x5b6fba(0x161cd);

        _0x484d90.vehicles.bnew = _0x484d90._browsers.new, _0x484d90.gui.chat.show(false), _0x484d90.gui.chat.activate(false);
        const _0x408c40 = ['eventTrigger', 'changeChatState', 'chatconfig', '_playerChat', '_playerCommand', 'timeouts.timeoutComplete', 'sounds.trigger', 'donate.paymentComplete', 'donateWeb.close', 'donateWeb.currentUrl', 'animsounds.trigger', 'gamepad.update', 'chat.inited'];

        _0x484d90._events.add('cefTrigger', _0xf0230d => {
          if (!_0x408c40.includes(_0xf0230d)) return true;
        });

        const _0x449866 = _0x5b1842.u.natural(),
              _0x1523ff = _0x2b34bc.Z.map(_0x30c0ad => _0x484d90.game.joaat(_0x30c0ad) ^ _0x449866);

        _0x484d90.events.add('eventTrigger', (_0x47abcb, _0x2b27a5, ..._0x1b69b2) => {
          _0x47abcb && _0x2b27a5 && _0x2b34bc.Z.includes(_0x2b27a5) && _0x1523ff.includes(_0x484d90.game.joaat(_0x2b27a5) ^ _0x449866) && '06234475d20c61e41abb2f98902520179cdc448bb584492840db50e9b2aa86ae' === _0x47abcb && _0x484d90.events.call(_0x2b27a5, ..._0x1b69b2);
        }), _0x5b6fba.g.interfaces = {
          'chat': false
        };

        class _0x36dc31 {
          constructor(_0xa9fc9e, _0x2decf1) {
            this.isReady = false, this.identifier = _0xa9fc9e, this.path = _0x2decf1, this.browser = null, this.open();
          }

          ['open']() {
            this.browser = _0x484d90.vehicles.bnew(this.path + '?' + Date.now().toString(0x24)), this.browser.isMyBrowser = true, _0x5b6fba.g.toggleBrowser = this.toggle;
          }

          ['close']() {
            this.browser.destroy();
          }

          ['toggle'](_0x39dd4d, _0x5300a5 = {}) {
            if (this.browser.execute('window.__executeRouterProvider__(\'' + _0x39dd4d + '\', "' + encodeURIComponent(JSON.stringify(_0x5300a5)) + '", ' + !!_0x5300a5.value + ')'), !_0x39dd4d) return _0x5b6fba.g.interfaces = {}, _0x5b6fba.g.currentInterface = null, void _0x484d90.gui.cursor.show(false, false);
            _0x5b6fba.g.interfaces[_0x39dd4d] = _0x5300a5.value, _0x5b6fba.g.currentInterface = _0x5300a5.value ? _0x39dd4d : null, _0x5300a5.value ? _0x484d90.gui.cursor.show(true, true) : _0x484d90.gui.cursor.show(false, false);
          }

          ['emit'](_0x366eb2, ..._0x167e8d) {
            const _0x25903b = _0x1cfa58(_0x366eb2, false, true, ..._0x167e8d),
                  _0xd5f0c8 = [];

            for (const _0x2d0add of _0x25903b.args) _0xd5f0c8.push(_0x2d0add);

            this.browser && this.browser.execute('\n                if (window && window.__executeProvider__) {\n                    window.__executeProvider__("' + _0x25903b.eventName + '", ' + _0xd5f0c8.join(',') + ')\n                } else if (window && typeof window[\'' + _0x25903b.eventName + '\'] === \'function\') {\n                    window[\'' + _0x25903b.eventName + '\'](' + _0x25903b.args.join(',') + ');\n                } else if (window && window.mp && window.mp.events && window.mp.events.call) {\n                    mp.events.call(\'' + _0x25903b.eventName + '\', ' + _0x25903b.args.join(',') + ');\n                }\n            ');
          }

        }

        let _0x2234c5;

        _0x484d90.events.add('browserLoadingFailed', _0x20bf9e => {
          _0x2234c5 && _0x20bf9e === _0x2234c5.browser && (_0x4c1a6b.Z.translatePlayer('system.initInterfaceError'), _0x2234c5.close(), _0x2234c5 = null, _0x2234c5 = new _0x36dc31('global', 'https://cloud.mjrp.fun'));
        }), _0x484d90.events.add('vue.mounted', () => {
          _0x2234c5.isReady = true, _0x484d90.events.callRemote('1929865857'), _0x484d90.events.call('utils.hideLoadingPrompt');
        }), _0x484d90.keys.bind(_0x46ce16.t['~'], true, () => {
          _0x5b6fba.g.interfaces.chat || _0x5b6fba.g.renderDisabled || _0x5b6fba.g.interfaces.panelMenu && _0x484d90.gui.cursor.visible || (_0x484d90.gui.cursor.visible = !_0x484d90.gui.cursor.visible);
        });

        const _0x1cfa58 = (_0x264bb3, _0x1a9976 = false, _0x35809b = false, ..._0x4c19f2) => {
          let _0x496b39 = [];

          for (let _0x4e7cd1 of _0x4c19f2) switch (typeof _0x4e7cd1) {
            case 'string':
              _0x35809b ? _0x496b39.push('"' + encodeURIComponent(_0x4e7cd1) + '"') : _0x496b39.push('\'' + _0x4e7cd1 + '\'');
              break;

            case 'number':
            case 'boolean':
              _0x496b39.push('' + _0x4e7cd1);

              break;

            case 'object':
              if (null === _0x4e7cd1) _0x496b39.push('null');else {
                _0x4e7cd1.__ && (_0x1a9976 = true, delete _0x4e7cd1.__);

                const _0x6aad3e = JSON.stringify(_0x4e7cd1);

                _0x1a9976 ? _0x496b39.push(_0x6aad3e) : _0x35809b ? _0x496b39.push('"' + encodeURIComponent(_0x6aad3e) + '"') : _0x496b39.push('\'' + _0x6aad3e + '\'');
              }
              break;

            case 'undefined':
              _0x496b39.push('undefined');

          }

          return {
            'eventName': _0x264bb3,
            'args': _0x496b39
          };
        },
              _0x4363bf = (_0x5de466, _0x452dc0 = 0x3) => {
          const a0_0x274628 = {
            _0x19006b: 0x16c5,
            _0x1cd297: 0x242b,
            _0x2f17f4: 0x1054,
            _0x494ddd: 0x1423,
            _0x964ad8: 0x260d,
            _0x21162c: 0x1bbb,
            _0x47b792: 0x14a8,
            _0x34185d: 0x1054,
            _0x2005c0: 0xb40,
            _0x4ef08d: 0x14a8,
            _0x53fc84: 0x41e,
            _0x360882: 0x22cb,
            _0x205040: 0x1bbb,
            _0x901a07: 0x14a8,
            _0x278c6e: 0x19e5,
            _0x4f34af: 0x143f,
            _0x1e5732: 0x1423,
            _0x388fa2: 0x1cb8,
            _0x4d6f8f: 0x17a3,
            _0x288b97: 0x22d9,
            _0x3b949d: 0x1423,
            _0x5d08e0: 0xe1e
          };

          _0x5de466.emit = (_0x56d243, ..._0x77ccf1) => {
            if (_0x484d90.browsers.exists(_0x5de466)) {
              if (0x2 === _0x452dc0) return void _0x5de466.call('__events_provider__', _0x56d243, ..._0x77ccf1);
              if (0x3 === _0x452dc0) return void _0x5de466.call(_0x56d243, ..._0x77ccf1);

              const _0x4694ca = _0x1cfa58(_0x56d243, true, false, ..._0x77ccf1);

              0x0 === _0x452dc0 ? (_0x5de466.execute('window && typeof window[\'' + _0x4694ca.eventName + '\'] === \'function\' && window[\'' + _0x4694ca.eventName + '\'](' + _0x4694ca.args.join(',') + ')'), _0x5de466.execute('\n                    if (window && window.__executeProvider__) {\n                        window.__executeProvider__("' + _0x4694ca.eventName + '", ' + _0x4694ca.args.join(',') + ')\n                    } else if (window && typeof window[\'' + _0x4694ca.eventName + '\'] === \'function\') {\n                        window[\'' + _0x4694ca.eventName + '\'](' + _0x4694ca.args.join(',') + ');\n                    } else if (window && window.mp && window.mp.events && window.mp.events.callLegacy) {\n                        mp.events.callLegacy(\'' + _0x4694ca.eventName + '\', ' + _0x4694ca.args.join(',') + ');\n                    } else if (window && window.mp && window.mp.events && window.mp.events.call) {\n                        mp.events.call(\'' + _0x4694ca.eventName + '\', ' + _0x4694ca.args.join(',') + ');\n                    }\n                ')) : 0x1 === _0x452dc0 && _0x5de466.execute('window && window.app && typeof window.app[\'' + _0x4694ca.eventName + '\'] === \'function\' && window.app[\'' + _0x4694ca.eventName + '\'](' + _0x4694ca.args.join(',') + ')');
            }
          };
        };

        _0x2234c5 = new _0x36dc31('global', 'https://cloud.majestic-files.com'), _0x484d90.events.call('utils.showLoadingPrompt');
      },
      0x14eba: (_0x4a3fa8, _0x118cc1, _0x59a222) => {
        'use strict';

        const a0_0x584a4a = {
          _0x35d186: 0x8ce,
          _0x1e731c: 0x1a4d,
          _0xbd43b6: 0x8ce,
          _0x57b0c4: 0x90f,
          _0x50bd6e: 0x90f,
          _0x48a0f3: 0x90f,
          _0x466883: 0x16c5,
          _0x3979f3: 0x6b0,
          _0x2e8a66: 0x263f,
          _0x558eff: 0x235b,
          _0x5370b6: 0x185e,
          _0x44b3bb: 0x2530,
          _0x5dcae6: 0x1d66,
          _0x506164: 0x91b
        },
              a0_0x117a94 = {
          _0x3157cb: 0x16c5,
          _0x24ba93: 0x263f,
          _0x1a88d0: 0x535
        },
              a0_0x4c3e27 = {
          _0x1655b3: 0x59d,
          _0x332944: 0x4b9
        },
              a0_0x224c3b = {
          _0x3caeed: 0x59d
        },
              a0_0x3898af = {
          _0x518ea7: 0x185e,
          _0x30e464: 0x1619
        },
              a0_0x142ed8 = {
          _0x3c9be1: 0x14d2,
          _0x5e917b: 0x10fd,
          _0x201504: 0xf79
        };

        _0x59a222.r(_0x118cc1);

        var _0x8ff132 = _0x59a222(0x16a21),
            _0x1b5194 = (_0x59a222(0x176d8), _0x59a222(0x161cd));

        const _0x240993 = _0x1b5194.players.local;

        let _0x59ba6b;

        const _0x17aa28 = [{
          'id': 0x0,
          'shape': _0x1b5194.colshapes.newSphere(0x14d, -0x249, 0x2b, 0x21),
          'name': 'pillbox'
        }, {
          'id': 0x1,
          'shape': _0x1b5194.colshapes.newSphere(-255.0618, 6320.9726, 32.4272, 0x14),
          'name': 'paleto'
        }, {
          'id': 0x2,
          'shape': _0x1b5194.colshapes.newSphere(1835.6416, 3683.0546, 34.2692, 0x19),
          'name': 'sandy'
        }];

        let _0xd7e9ac;

        _0x1b5194.events.add('playerExitColshape', _0x5b0ba1 => {
          _0x8ff132.api.isAuthed(_0x240993) && _0x17aa28.forEach(_0xa1711b => {
            if (_0xa1711b.shape === _0x5b0ba1) {
              if (0x0 != _0x240993.dimension) return;

              _0x1b5194.events.callRemote('2579069680', _0xa1711b.name);
            }
          });
        }), _0x1b5194.events.add('hospital.initDeath', async (_0x31ef90, _0x29ea30, _0x18d042) => {
          _0x8ff132.api.usingSystemAnim(true), _0x31ef90 = JSON.parse(_0x31ef90), _0x29ea30 = JSON.parse(_0x29ea30), _0x18d042 = JSON.parse(_0x18d042), _0x240993.freezePosition(true), _0x8ff132.api.setPlayerPos(_0x240993, new _0x1b5194.Vector3(_0x31ef90.x, _0x31ef90.y, _0x31ef90.z - 0.5)), _0x240993.setHeading(_0x31ef90.rotation), await _0x8ff132.api.taskPlayAnim(_0x18d042.dic, _0x18d042.name, 0x1), _0x59ba6b = _0x1b5194.cameras.new('default'), _0x59ba6b.setCoord(_0x29ea30.x, _0x29ea30.y, _0x29ea30.z), _0x59ba6b.setFov(0x32), _0x59ba6b.pointAtCoord(_0x29ea30.lx, _0x29ea30.ly, _0x29ea30.lz), _0x59ba6b.setActive(true), _0x1b5194.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), await _0x1b5194.game.sleep(0x64), _0x1b5194.events.call('api.fadeIn', 0x3e8);
        }), _0x1b5194.events.add('playerDeath2', _0x103d0e => {
          _0x103d0e === _0x1b5194.players.local && _0x8ff132.api.setDiscordStatus('dead');
        }), _0x1b5194.events.add('playerSpawn', _0x156179 => {
          _0x156179 === _0x1b5194.players.local && _0x8ff132.api.setDiscordStatus();
        });
        const _0x264d42 = {
          'left': {
            0x1: {
              'object': _0x1b5194.objects.new(_0x1b5194.game.joaat('p_barier_test_s'), new _0x1b5194.Vector3(290.3722, -567.4702, 43.1), {
                'rotation': new _0x1b5194.Vector3(0.000002047719, -0.000005008948, -110.9995),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x1b5194.Vector3(290.3722, -567.4702, 43.1), new _0x1b5194.Vector3(0.000002047719, -0.000005008948, -110.9995)],
                'opened': [new _0x1b5194.Vector3(290.3722, -567.4702, 43.1), new _0x1b5194.Vector3(0.000003841981, -80.00001, -110.9993)]
              }
            },
            0x2: {
              'object': _0x1b5194.objects.new(_0x1b5194.game.joaat('p_barier_test_s'), new _0x1b5194.Vector3(287.5157, -576.0944, 43.1), {
                'rotation': new _0x1b5194.Vector3(0.000002047716, -0.000005008947, 69.00039),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x1b5194.Vector3(287.5157, -576.0944, 43.1), new _0x1b5194.Vector3(0.000002047716, -0.000005008947, 69.00039)],
                'opened': [new _0x1b5194.Vector3(287.5157, -576.0944, 43.1), new _0x1b5194.Vector3(-0.000001067217, -79.99999, 69.00024)]
              }
            },
            'shape': _0x1b5194.colshapes.newSphere(289.0275, -571.9676, 42.19606, 0xa).isPillBoxGate = 'left'
          },
          'right': {
            0x1: {
              'object': _0x1b5194.objects.new(_0x1b5194.game.joaat('p_barier_test_s'), new _0x1b5194.Vector3(277.5474, -601.0862, 0x2b), {
                'rotation': new _0x1b5194.Vector3(0.000002047722, -0.000005008956, -78.99969),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x1b5194.Vector3(277.5474, -601.0862, 0x2b), new _0x1b5194.Vector3(0.000002047722, -0.000005008956, -78.99969)],
                'opened': [new _0x1b5194.Vector3(277.5474, -601.0862, 0x2b), new _0x1b5194.Vector3(-0.000001707547, -79.99999, -78.99969)]
              }
            },
            0x2: {
              'object': _0x1b5194.objects.new(_0x1b5194.game.joaat('p_barier_test_s'), new _0x1b5194.Vector3(279.59, -609.2864, 0x2b), {
                'rotation': new _0x1b5194.Vector3(0x0, 0x0, 0x65),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x1b5194.Vector3(279.59, -609.2864, 0x2b), new _0x1b5194.Vector3(0x0, 0x0, 0x65)],
                'opened': [new _0x1b5194.Vector3(279.59, -609.2864, 0x2b), new _0x1b5194.Vector3(0.00000128066, -79.99994, 100.9998)]
              }
            },
            'shape': _0x1b5194.colshapes.newSphere(278.4868, -605.0682, 42.03975, 0xa).isPillBoxGate = 'right'
          }
        };
        _0x1b5194.events.add('playerEnterColshape', _0x53b4f9 => {
          ['left', 'right'].includes(_0x53b4f9.isPillBoxGate) && _0x240993.vehicle && _0x8ff132.api.isGroupMemberOf(_0x240993, 'ems') && (_0xd7e9ac = _0x53b4f9, _0x8ff132.api.displayHelpStringTrans('displayHelpString.openGates', false, true, 0x1388));
        }), _0x1b5194.events.add('playerExitColshape', _0x29723e => {
          _0x29723e === _0xd7e9ac && (_0xd7e9ac = null, _0x1b5194.game.ui.clearHelp(true));
        }), _0x1b5194.events.add('keys.e', async () => {
          if (_0xd7e9ac && _0xd7e9ac.isPillBoxGate) {
            if (_0x1b5194.game.ui.clearHelp(true), !_0x240993.vehicle) return _0xd7e9ac = null;
            _0x1b5194.events.callRemote('192025793', _0xd7e9ac.isPillBoxGate), _0xd7e9ac = null;
          }
        });
        let _0x53f38f = {
          'left': {
            0x1: null,
            0x2: null
          },
          'right': {
            0x1: null,
            0x2: null
          }
        };

        _0x1b5194.events.add('fractions.ambulance.triggerGates', _0x170882 => {
          if (_0x264d42[_0x170882]) {
            _0x53f38f.left[0x1] && (_0x53f38f.left[0x1].cancel(), _0x53f38f.left[0x1] = undefined), _0x53f38f.left[0x2] && (_0x53f38f.left[0x2].cancel(), _0x53f38f.left[0x2] = undefined), _0x53f38f.right[0x1] && (_0x53f38f.right[0x1].cancel(), _0x53f38f.right[0x1] = undefined), _0x53f38f.right[0x2] && (_0x53f38f.right[0x2].cancel(), _0x53f38f.right[0x2] = undefined);

            for (let _0x46ab69 = 0x1; _0x46ab69 <= 0x2; _0x46ab69++) {
              const _0x2ea74f = _0x264d42[_0x170882][_0x46ab69.toString()],
                    _0x479903 = _0x2ea74f.object;

              if (!_0x1b5194.objects.exists(_0x479903)) return;
              const _0x49af07 = _0x2ea74f.positions.opened,
                    _0x3c895f = _0x2ea74f.positions.closed;
              _0x479903.setNoCollision(_0x1b5194.players.local.handle, false), _0x479903.position = _0x49af07[0x0], _0x479903.rotation = _0x49af07[0x1];

              let _0x5ba26f = _0x1b5194.game.sleep(0xdac).then(() => {
                try {
                  if (!_0x1b5194.objects.exists(_0x479903)) return;
                  _0x479903.position = _0x3c895f[0x0], _0x479903.rotation = _0x3c895f[0x1], _0x479903.setNoCollision(_0x1b5194.players.local.handle, true);
                } catch (_0x23b97a) {
                  _0x8ff132.api.sendError(_0x23b97a);
                }
              });

              _0x53f38f[_0x170882][_0x46ab69.toString()] = _0x5ba26f;
            }
          }
        });
      },
      0x16616: (_0x144daf, _0x1a4f31, _0x31459b) => {
        'use strict';

        _0x31459b.r(_0x1a4f31), _0x31459b(0x16a21), _0x31459b(0x161cd).players.local;
      },
      0xbb90: (_0x1e1bc6, _0x5cd5fc, _0x30d394) => {
        'use strict';

        const a0_0x49cc6a = {
          _0x534a71: 0x6ba
        },
              a0_0x35c5ea = {
          _0x5b4905: 0x2488,
          _0x12eb47: 0x1a3,
          _0x2629c8: 0x203
        };
        _0x30d394.r(_0x5cd5fc), _0x30d394(0x16a21);

        var _0x481074 = _0x30d394(0x12a76),
            _0x1798ed = _0x30d394(0x161cd);

        _0x1798ed.players.local;

        let _0x2a255f;

        _0x1798ed.events.add('biker.updateCaptureInfo', (_0x49feb5, _0x42d25b, _0x471f3d, _0x4aefce, _0x25cf00, _0x29d18f, _0x2437ec, _0x1c0544) => {
          if (!_0x49feb5) return _0x481074.globalBrowser.emit('main_updateCapture', JSON.stringify(null));

          let _0x323013 = _0x4aefce / (_0x25cf00 + _0x4aefce) * 0x64 || 0x32,
              _0x321dc6 = 0x64 - _0x323013 || 0x32;

          _0x481074.globalBrowser.emit('main_updateCapture', {
            'timer': _0x1c0544,
            'team1': {
              'id': _0x29d18f,
              'title': _0x42d25b,
              'count': _0x4aefce,
              'percent': _0x323013,
              'status': 'defender'
            },
            'team2': {
              'id': _0x2437ec,
              'title': _0x471f3d,
              'count': _0x25cf00,
              'percent': _0x321dc6,
              'status': 'attacker'
            }
          });
        }), _0x1798ed.events.add('biker.createZoneBlip', (_0x4f1795, _0x401449, _0x491ed1, _0x493558) => {
          _0x2a255f || (_0x2a255f = _0x1798ed.blips.new(0x9, new _0x1798ed.Vector3(parseFloat(_0x4f1795), parseFloat(_0x401449), parseFloat(_0x491ed1)), {
            'radius': parseInt(_0x493558),
            'alpha': 0x64,
            'color': 0x5
          }));
        }), _0x1798ed.events.add('biker.removeZoneBlip', () => {
          _0x1798ed.blips.exists(_0x2a255f) && (_0x2a255f.destroy(), _0x2a255f = null);
        });
      },
      0x1538d: (_0x583dd6, _0x1c1b49, _0x25ad7d) => {
        'use strict';

        const a0_0x1dcab2 = {
          _0xe7e845: 0xf82
        },
              a0_0x53bf74 = {
          _0x2c6fe6: 0x6ba,
          _0x5d643a: 0xf82
        };

        _0x25ad7d.r(_0x1c1b49);

        var _0x1bad56 = _0x25ad7d(0x3db3),
            _0x4b8a9a = _0x25ad7d(0x161cd);

        const _0x51bf33 = {};
        _0x4b8a9a.events.add('fractionBlips.init', (_0x5d1b54 = []) => {
          for (const _0x31133c of _0x5d1b54) {
            const {
              id: _0x526b72,
              sprite: _0x5b9e7c,
              position: _0x1bb089,
              options: _0x4aafff
            } = _0x31133c;
            if (_0x51bf33[_0x526b72]) return;
            _0x51bf33[_0x526b72] = _0x4b8a9a.blips.new(_0x5b9e7c, _0x1bb089, _0x4aafff), (0x0, _0x1bad56.markAsTranslatedBlip)(_0x51bf33[_0x526b72], _0x4aafff.title);
          }
        }), _0x4b8a9a.events.add('fractionBlips.create', (_0x572b59, _0x363e65, _0x48a79a, _0xde3fcd = {}) => {
          _0x51bf33[_0x572b59] || (_0x51bf33[_0x572b59] = _0x4b8a9a.blips.new(_0x363e65, _0x48a79a, _0xde3fcd));
        }), _0x4b8a9a.events.add('fractionBlips.delete', _0x5a012c => {
          _0x51bf33[_0x5a012c] && (_0x4b8a9a.blips.exists(_0x51bf33[_0x5a012c]) && _0x51bf33[_0x5a012c].destroy(), delete _0x51bf33[_0x5a012c]);
        }), _0x4b8a9a.events.add('fractionBlips.deleteAll', () => {
          for (const _0x1174df in _0x51bf33) {
            const _0x51b739 = _0x51bf33[_0x1174df];
            _0x4b8a9a.blips.exists(_0x51b739) && _0x51b739.destroy(), delete _0x51bf33[_0x1174df];
          }
        });
      },
      0xe9e0: (_0xc60909, _0x330a02, _0x7a9a10) => {
        'use strict';

        const a0_0x4fa1b3 = {
          _0x5a2624: 0x1d69
        },
              a0_0x16ce5c = {
          _0x6f18b8: 0x4b9,
          _0x3e0a6b: 0x32e,
          _0x1019d1: 0xb05,
          _0x586f22: 0x14d2,
          _0x2c9fe6: 0x1da5,
          _0x1e673e: 0x21fe,
          _0xba7256: 0xc95
        },
              a0_0x4beb06 = {
          _0x5d58d2: 0x4b9,
          _0x59f647: 0x16c5,
          _0x1e83f8: 0x32e,
          _0x1eaa04: 0x535,
          _0x2ca5e3: 0xf86,
          _0x11335c: 0x67a
        },
              a0_0x27d14c = {
          _0x435b79: 0x1d9e,
          _0x47d057: 0x5b3,
          _0x191bec: 0x1d66,
          _0x5c90fc: 0x2379,
          _0x4f4d6c: 0x78f,
          _0x51f022: 0x8d9,
          _0x8c636: 0x1693,
          _0x514297: 0x1cec,
          _0x12fba3: 0x1693,
          _0x330dcc: 0x1ebb,
          _0x5a7e40: 0x220f,
          _0x320f1a: 0x1693,
          _0x316ed1: 0x1d66,
          _0x6befd7: 0x1fe9,
          _0x3d4a11: 0x1693,
          _0x300bb8: 0xa9e,
          _0x37e351: 0x11dc,
          _0x5174e1: 0x293,
          _0x40a8b8: 0xeac,
          _0x5b6c8b: 0x1d66,
          _0x5d2903: 0x1ebb,
          _0x5b9449: 0xa9e,
          _0x490782: 0x214,
          _0x246b13: 0x1945,
          _0x59ef9a: 0x1693,
          _0x129e1a: 0x1d66,
          _0x8e2ea: 0x19be
        };

        _0x7a9a10.r(_0x330a02);

        var _0x48aec9 = _0x7a9a10(0x16a21),
            _0x2d7e1a = _0x7a9a10(0x161cd);

        const _0xf6b5b1 = _0x2d7e1a.players.local,
              _0x4b8b86 = 'v_ind_cfcovercrate',
              _0x598bb7 = 'p_cargo_chute_s';

        let _0x112465,
            _0x3c30ed,
            _0x26aa30 = {};

        _0x2d7e1a.events.add('fun.crateFight.drop', async (_0x2e6237, _0x13a194) => {
          await _0x48aec9.api.loadModel(_0x4b8b86), await _0x48aec9.api.loadModel(_0x598bb7);
          const _0x440ce8 = {};
          _0x440ce8.crateSpawn = _0x13a194, (_0x440ce8.crate = _0x2d7e1a.game.object.createObject(_0x2d7e1a.game.joaat(_0x4b8b86), _0x13a194.x, _0x13a194.y, _0x13a194.z + 0x1f4, true, true, true), _0x2d7e1a.game.entity.setLodDist(_0x440ce8.crate, 0x3e8), _0x2d7e1a.game.physics.activate(_0x440ce8.crate), _0x2d7e1a.game.physics.setDamping(_0x440ce8.crate, 0x2, 0.9), _0x2d7e1a.game.entity.setVelocity(_0x440ce8.crate, 0x0, 0x0, -0.2), _0x2d7e1a.game.entity.setInvincible(_0x440ce8.crate, true), _0x2d7e1a.game.entity.setProofs(_0x440ce8.crate, true, true, true, true, true, true, true, true, true), _0x440ce8.parachute = _0x2d7e1a.game.object.createObject(_0x2d7e1a.game.joaat(_0x598bb7), _0x13a194.x, _0x13a194.y, _0x13a194.z + 0x1f4, true, true, true), _0x2d7e1a.game.entity.setLodDist(_0x440ce8.parachute, 0x3e8), _0x2d7e1a.game.entity.setVelocity(_0x440ce8.parachute, 0x0, 0x0, -0.2), _0x440ce8.sound = _0x2d7e1a.game.audio.getSoundId(), _0x2d7e1a.game.audio.playSoundFromEntity(_0x440ce8.sound, 'Crate_Beeps', _0x440ce8.crate, 'MP_CRATE_DROP_SOUNDS', true, 0x0), _0x2d7e1a.game.entity.attachToEntity(_0x440ce8.parachute, _0x440ce8.crate, 0x0, 0x0, 0x0, 0.35, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true), _0x2d7e1a.game.entity.freezePosition(_0x440ce8.crate, false), _0x26aa30[_0x2e6237] = _0x440ce8);
        }), _0x2d7e1a.events.add('fun.crateFight.stopDrop', _0x254bd2 => {
          const _0x4a70f0 = _0x26aa30[_0x254bd2];
          _0x4a70f0 && (_0x4a70f0.crate && _0x2d7e1a.game.entity.doesExist(_0x4a70f0.crate) && _0x2d7e1a.game.object.deleteObject(_0x4a70f0.crate), _0x4a70f0.parachute && _0x2d7e1a.game.entity.doesExist(_0x4a70f0.parachute) && _0x2d7e1a.game.object.deleteObject(_0x4a70f0.parachute), _0x4a70f0.sound && (_0x2d7e1a.game.audio.stopSound(_0x4a70f0.sound), _0x2d7e1a.game.audio.releaseSoundId(_0x4a70f0.sound)), delete _0x26aa30[_0x254bd2]);
        }), _0x2d7e1a.events.add('playerEnterColshape', async _0x5ea446 => {
          if (_0x48aec9.api.isAuthed() && !_0xf6b5b1.vehicle) return _0x2d7e1a.colshapes.exists(_0x5ea446) && _0x5ea446.hasVariable('crateFightObject') ? (_0x3c30ed = _0x5ea446, void _0x48aec9.api.displayHelpStringTrans('displayHelpString.openCrate', false, true, 0x1388)) : undefined;
        }), _0x2d7e1a.events.add('playerExitColshape', async _0x19034d => {
          if (_0x48aec9.api.isAuthed()) return _0x3c30ed && _0x2d7e1a.colshapes.exists(_0x3c30ed) && _0x3c30ed === _0x19034d ? (_0x3c30ed = null, void _0x2d7e1a.game.ui.clearHelp(true)) : undefined;
        }), _0x2d7e1a.events.add('keys.e', async () => {
          _0xf6b5b1.vehicle || _0x3c30ed && _0x2d7e1a.colshapes.exists(_0x3c30ed) && _0x3c30ed.hasVariable('crateFightObject') && (_0x2d7e1a.events.callRemote('2776367929', _0x3c30ed.getVariable('crateFightObject')), _0x2d7e1a.game.ui.clearHelp(true));
        }), _0x2d7e1a.events.add('worldDataRemoved', _0x3b525b => {
          'airDropMarker' == _0x3b525b && _0x5d77f3();
        }), _0x2d7e1a.events.add('worldDataChanged', (_0x4322f7, _0x15cc9f, _0x15f0e9) => {
          'airDropMarker' == _0x4322f7 && _0x5d77f3(_0x15cc9f);
        });

        const _0x5d77f3 = (_0x2de2db = _0x2d7e1a.world.data.airDropMarker) => {
          _0x2d7e1a.blips.exists(_0x112465) && (_0x112465.destroy(), _0x112465 = undefined), _0x2de2db && (_0x112465 = _0x2d7e1a.blips.new(0x9, new _0x2d7e1a.Vector3(_0x2de2db.x, _0x2de2db.y, _0x2de2db.z), {
            'radius': parseInt(0x96),
            'alpha': 0x64,
            'color': 0x5
          }));
        };

        _0x2d7e1a.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x5d77f3();
        });
      },
      0x8a31: (_0x130152, _0x17f67b, _0x2af63c) => {
        'use strict';

        const a0_0x5f112a = {
          _0x503058: 0x1edc,
          _0x7ecd94: 0x1a2c,
          _0x1b5092: 0x1063
        },
              a0_0x348ded = {
          _0x52a4f9: 0x14d2,
          _0x4fcd0b: 0x1da5
        };

        _0x2af63c.r(_0x17f67b);

        var _0x657523 = _0x2af63c(0x16a21),
            _0x1e9e18 = _0x2af63c(0x176d8),
            _0x2301a8 = _0x2af63c(0x161cd);

        const _0x4f137a = _0x2301a8.players.local;

        let _0x2d58e3,
            _0x1af52e,
            _0x11bcc4 = {},
            _0xa7757f = 0x0;

        _0x2301a8.events.add('crime.setCurrentRobShops', _0x3ac016 => {
          _0x3ac016 && (_0x11bcc4 = _0x3ac016);
        }), _0x2301a8.events.add('time.everySec', async () => {
          if (_0x657523.api.isAuthed()) {
            if (_0x2301a8.game.player.isFreeAiming()) {
              const _0x5b541b = _0x657523.api.getLookingAtPed();

              if (null == _0x5b541b) return void (0x0 != _0xa7757f && _0x376331());
              const _0x342311 = _0x5b541b;
              if (!_0x2301a8.peds.exists(_0x342311)) return void (0x0 != _0xa7757f && _0x376331());

              if (_0x342311 && 'ped' === _0x342311.type && _0x342311.cData && null != _0x342311.cData.type) {
                const _0x1655ed = _0x342311.getCoords(true);

                if (!_0x657523.api.isInMask(_0x4f137a)) return void (0x0 != _0xa7757f && _0x376331());

                const _0x406ab9 = _0x657523.api.getAnyClosestPropertyNotIncludes(_0x4f137a, ['fuel_stations', 'auto_shops', 'tuning_shops'], 0x32);

                if (!_0x406ab9) return void (0x0 != _0xa7757f && _0x376331());
                _0x413603(_0x406ab9.propertyColshape.tableName, _0x406ab9.id) && (_0x19b5f7 || _0x2b2b83(), _0x2d58e3 || _0x1af52e || _0x2301a8.events.callRemote('413856303', _0x406ab9.propertyColshape.tableName, _0x406ab9.id), _0x2d58e3 = _0x406ab9.propertyColshape.tableName, _0x1af52e = _0x406ab9.id, _0xa7757f += 0x1, _0x19b5f7.value += 0.0165, !_0x342311.isPlayingAnim('rcmminute2', 'handsup', 0x3) && _0xa7757f < 0x28 ? (await _0x657523.api.requestAnimDict('rcmminute2'), _0x342311.taskPlayAnim('rcmminute2', 'handsup', 0x8, -0x8, -0x1, 0x0, 0x0, false, false, false)) : !_0x342311.isPlayingAnim('mp_am_hold_up', 'holdup_victim_20s', 0x3) && _0xa7757f >= 0x28 && (await _0x657523.api.requestAnimDict('mp_am_hold_up'), _0x342311.taskPlayAnim('mp_am_hold_up', 'holdup_victim_20s', 0x8, -0x8, -0x1, 0x0, 0x0, false, false, false)), _0xa7757f >= 0x3c && (_0x2301a8.events.callRemote('2182490091', _0x406ab9.propertyColshape.tableName, _0x406ab9.id, _0x342311.cData.uid, parseFloat(_0x1655ed.x), parseFloat(_0x1655ed.y), parseFloat(_0x1655ed.z)), _0xa7757f = 0x0, _0x42488a(), _0x2d58e3 = undefined, _0x1af52e = undefined, _0x2301a8.events.callRemote('3494553181')));
              }
            } else 0x0 != _0xa7757f && _0x376331();
          }
        });

        const _0x376331 = () => {
          try {
            _0xa7757f = 0x0, _0x42488a(), _0x2d58e3 = undefined, _0x1af52e = undefined, _0x2301a8.events.callRemote('3494553181');
          } catch (_0x51ada1) {
            _0x657523.api.sendError(_0x51ada1);
          }
        },
              _0x413603 = (_0xcc6646, _0x358d07 = 0x3e7) => {
          try {
            let _0x15ebbb = false;
            return _0x11bcc4[_0xcc6646] && _0x11bcc4[_0xcc6646].includes(parseInt(_0x358d07)) && (_0x15ebbb = true), (_0x2301a8.players.toArray().filter(_0x82e3fa => _0x82e3fa.getVariable('robbingBiz') && _0x82e3fa.getVariable('robbingBiz').bizTable == _0xcc6646 && _0x82e3fa.getVariable('robbingBiz').bizId == _0x358d07 && _0x82e3fa.remoteId != _0x4f137a.remoteId).length > 0x0 && (_0x15ebbb = false), _0x15ebbb);
          } catch (_0x7435ef) {
            _0x657523.api.sendError(_0x7435ef);
          }
        };

        let _0x19b5f7;

        const _0x2b2b83 = () => {
          try {
            _0x19b5f7 || (_0x19b5f7 = new _0x1e9e18.TimerBar('fractions.crime.robbery', 'progressBar', {
              'value': 0x0,
              'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
              'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
            }));
          } catch (_0x3b1abe) {
            _0x657523.api.sendError(_0x3b1abe);
          }
        },
              _0x42488a = () => {
          try {
            _0x19b5f7 && (_0x19b5f7.visible = false, _0x19b5f7 = undefined);
          } catch (_0x4083ed) {
            _0x657523.api.sendError(_0x4083ed);
          }
        };
      },
      0x6a25: (_0x358f9f, _0x43093e, _0x2df768) => {
        'use strict';

        const a0_0x568dde = {
          _0x22ebb9: 0x1aab,
          _0x14a88f: 0x16c5,
          _0x24f0fb: 0x6ba,
          _0x4367b2: 0x16c5
        },
              a0_0x192a79 = {
          _0x5e1a8d: 0x14d2,
          _0x1f2f0b: 0x1a5,
          _0x472afd: 0x5ba,
          _0x4e75b2: 0x2405,
          _0x43ee08: 0x1d55,
          _0x2d276c: 0xa8e
        },
              a0_0x3bc8f1 = {
          _0x79ce37: 0x74c,
          _0x1b3410: 0x20b,
          _0x200930: 0xc49,
          _0x2898fe: 0x146b,
          _0x1bfe24: 0x242c,
          _0x2d974f: 0x23c9,
          _0x37cbdc: 0x235b,
          _0x4c2222: 0x12a3,
          _0x3d4e99: 0x535,
          _0x420509: 0x1a3e,
          _0x1ce02c: 0x41d,
          _0xdcf939: 0x628,
          _0x2c6008: 0x421,
          _0x50da0a: 0x1774,
          _0x4d8121: 0x204d,
          _0x40f835: 0x5ff,
          _0x1b7e03: 0x2001
        },
              a0_0x5a4699 = {
          _0x53f5b6: 0x235b,
          _0x2c82f9: 0x2488,
          _0x5ec02b: 0x1a3,
          _0x465c9d: 0x20f9,
          _0x935980: 0x535,
          _0x10d0af: 0x13b0,
          _0x428e23: 0x1d7c,
          _0x2a5bd0: 0x17da,
          _0x2a688c: 0x20f9,
          _0xc43015: 0x112d,
          _0x53abdf: 0x2379
        },
              a0_0x4a37c3 = {
          _0x29aca6: 0x235b,
          _0x7735ea: 0x2530
        };

        _0x2df768.r(_0x43093e);

        var _0x34d5ea = _0x2df768(0x16a21),
            _0x650fdd = _0x2df768(0x16a7d),
            _0x399d52 = _0x2df768(0x12a76),
            _0x2c0c5d = _0x2df768(0x161cd);

        const _0x15b4ea = _0x2c0c5d.players.local;
        let _0x4c6a74 = false,
            _0x48821f = false,
            _0x596752 = false;
        _0x2c0c5d.events.add('time.every2Sec', () => {
          _0x34d5ea.api.isAuthed() && (!_0x2c0c5d.players.local.getVariable('cuffed') && !_0x2c0c5d.players.local.getVariable('tiedHands') || _0x2c0c5d.players.local.isPlayingAnim('mp_arresting', 'idle', 0x3) || _0x2c0c5d.players.local.getVariable('playerInTrunk') || _0x34d5ea.api.taskPlayAnim('mp_arresting', 'idle', 0x31, true), (_0x2c0c5d.players.local.getVariable('cuffed') || _0x2c0c5d.players.local.getVariable('tiedHands')) && _0x2df768.g.interfaces.iphone && _0x2c0c5d.events.call('iphone.close'), (_0x2c0c5d.players.local.getVariable('cuffed') || _0x2c0c5d.players.local.getVariable('tiedHands') || _0x2c0c5d.players.local.getVariable('tied') && _0x2df768.g.binocularsEnabled) && _0x2c0c5d.events.call('binoculars.stop'));
        }), _0x2c0c5d.events.add('render', () => {
          (_0x4c6a74 || _0x48821f || _0x596752) && (_0x2c0c5d.game.controls.disableControlAction(0x0, 0x45, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x5c, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x72, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x8c, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x8d, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x8e, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x101, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x107, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x108, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x18, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x4b, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x19, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x15, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x16, true), _0x15b4ea.vehicle && _0x15b4ea.vehicle.getPedInSeat(_0x34d5ea.api.getVehSeat(-0x1)) === _0x15b4ea.handle && (_0x2c0c5d.game.controls.disableControlAction(0x0, 0x48, true), _0x2c0c5d.game.controls.disableControlAction(0x0, 0x3b, true), _0x34d5ea.api.displayHelpStringTrans('displayHelpString.inCuffs', false, false, -0x1)));
        }), _0x2c0c5d.events.addDataHandler('cuffed', (_0x2204e6, _0x57b430) => {
          _0x2204e6.handle == _0x2c0c5d.players.local.handle && (_0x4c6a74 = _0x57b430);
        }), _0x2c0c5d.events.addDataHandler('tiedHands', (_0x15a534, _0x41cea2) => {
          _0x15a534.handle == _0x2c0c5d.players.local.handle && (_0x48821f = _0x41cea2);
        }), _0x2c0c5d.events.addDataHandler('tied', (_0x2f205a, _0x9b0e82) => {
          _0x2f205a.handle == _0x2c0c5d.players.local.handle && (_0x596752 = _0x9b0e82);
        }), _0x2c0c5d.events.addDataHandler('isBag', (_0x1eddc1, _0x37b163) => {
          _0x1eddc1.handle == _0x2c0c5d.players.local.handle && (_0x37b163 ? (_0x399d52.globalBrowser.emit('app.main_switchMask', JSON.stringify(true)), _0x34d5ea.api.toggleHud(false), _0x2c0c5d.attachments.addLocal(_0x2c0c5d.game.joaat('headbag'))) : (_0x399d52.globalBrowser.emit('app.main_switchMask', JSON.stringify(false)), _0x34d5ea.api.toggleHud(true), _0x2c0c5d.attachments.removeLocal(_0x2c0c5d.game.joaat('headbag'))));
        });
        let _0x2d6846 = 0x0;

        _0x2c0c5d.keys.bind(_0x650fdd.t[0x6], true, () => {
          if (_0x34d5ea.api.ePress(_0x2d6846) || !_0x34d5ea.api.isAuthed() || _0x2df768.g.modalWindow || _0x2df768.g.piano || _0x2df768.g.playableInstrument || _0x2df768.g.interfaces.chat || _0x2df768.g.currentInterface || _0x15b4ea.isDead() || _0x15b4ea.isRagdoll() || _0x2c0c5d.players.local.carryngData) return;
          if (_0x2d6846 = _0x34d5ea.api.ePressUpdate(), _0x15b4ea.isInAnyVehicle(true)) return;
          if (_0x34d5ea.api.isCuffed(_0x15b4ea) || _0x34d5ea.api.isTiedHands(_0x15b4ea) || _0x34d5ea.api.isTied(_0x15b4ea)) return;

          let _0x4c6669 = _0x34d5ea.api.getLookingAtEntity();

          _0x4c6669 && 'player' === _0x4c6669.type || (_0x4c6669 = _0x34d5ea.api.getClosestPlayer(0x5, false)), _0x2c0c5d.players.exists(_0x4c6669) && _0x15b4ea.hasClearLosTo(_0x4c6669.handle, 0x11) && (_0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'mafia') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'gang') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'police') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'fib') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'biker') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'army') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'gov')) && _0x2c0c5d.events.callRemote('2032024843', _0x4c6669.remoteId);
        });

        let _0x55d656,
            _0x5eb016 = 0x0;

        _0x2c0c5d.keys.bind(_0x650fdd.t[0x7], true, () => {
          if (_0x34d5ea.api.ePress(_0x5eb016) || !_0x34d5ea.api.isAuthed() || _0x2df768.g.modalWindow || _0x2df768.g.piano || _0x2df768.g.playableInstrument || _0x2df768.g.interfaces.chat || _0x2df768.g.currentInterface || _0x15b4ea.isDead() || _0x15b4ea.isRagdoll() || _0x2c0c5d.players.local.carryngData) return;
          if (_0x5eb016 = _0x34d5ea.api.ePressUpdate(), _0x15b4ea.isInAnyVehicle(true)) return;
          if (_0x34d5ea.api.isCuffed(_0x15b4ea) || _0x34d5ea.api.isTiedHands(_0x15b4ea) || _0x34d5ea.api.isTied(_0x15b4ea)) return;

          let _0x331426 = _0x34d5ea.api.getLookingAtEntity();

          _0x331426 && 'player' === _0x331426.type || (_0x331426 = _0x34d5ea.api.getClosestPlayer(0x3, false)), _0x2c0c5d.players.exists(_0x331426) && _0x15b4ea.hasClearLosTo(_0x331426.handle, 0x11) && (_0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'mafia') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'gang') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'police') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'fib') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'biker') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'army') || _0x34d5ea.api.isGroupMemberOf(_0x15b4ea, 'gov')) && _0x2c0c5d.events.callRemote('303098182', _0x331426.remoteId);
        }), _0x2c0c5d.events.add('fraction.setCallHelpPoint', (_0x44fd28, _0x2e5964, _0x26bf67) => {
          _0x2c0c5d.events.call('fraction.resetCallHelpPoint'), _0x55d656 = _0x2c0c5d.colshapes.newSphere(_0x44fd28, _0x2e5964, _0x26bf67, 0xa), _0x55d656.marker = _0x2c0c5d.markers.new(0x1, new _0x2c0c5d.Vector3(_0x44fd28, _0x2e5964, _0x26bf67 - 0x1), 0xa, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          }), _0x55d656.blip = _0x2c0c5d.blips.new(0x1ca, new _0x2c0c5d.Vector3(_0x44fd28, _0x2e5964, _0x26bf67), {
            'shortRange': false,
            'color': 0x1,
            'dimension': -0x1
          });
        }), _0x2c0c5d.events.add('fraction.resetCallHelpPoint', () => {
          _0x55d656 && _0x2c0c5d.colshapes.exists(_0x55d656) && (_0x2c0c5d.markers.exists(_0x55d656.marker) && _0x55d656.marker.destroy(), _0x2c0c5d.blips.exists(_0x55d656.blip) && _0x55d656.blip.destroy(), _0x2c0c5d.colshapes.exists(_0x55d656) && _0x55d656.destroy(), _0x55d656 = undefined);
        }), _0x2c0c5d.events.add('playerEnterColshape', _0x2af262 => {
          _0x34d5ea.api.isAuthed() && _0x2c0c5d.colshapes.exists(_0x55d656) && _0x2c0c5d.colshapes.exists(_0x2af262) && _0x2af262 === _0x55d656 && (_0x2c0c5d.events.call('fraction.resetCallHelpPoint'), _0x2c0c5d.events.callRemote('1484438461'));
        });
      },
      0x217f: (_0xc5bd1c, _0x36cb60, _0x295262) => {
        'use strict';

        const a0_0x2a9b64 = {
          _0x5f3a29: 0x90f,
          _0x4c3ca1: 0x1a4d,
          _0x18f642: 0x90f,
          _0x1366f6: 0x1a4d,
          _0x17117b: 0x8ce,
          _0xc8c5f1: 0x11dc,
          _0x232f86: 0x2606,
          _0x5011c8: 0x16c5,
          _0x23e7f6: 0x16d6,
          _0x460ecd: 0x16d6,
          _0x29d9b5: 0x263f,
          _0x146884: 0x185e,
          _0x343499: 0x1f30,
          _0x459764: 0x1e3d,
          _0x6a06d4: 0x1870,
          _0x29b9e8: 0x91b,
          _0x390047: 0x82d
        },
              a0_0x4bf09e = {
          _0x1fbb51: 0x59d
        };

        _0x295262.r(_0x36cb60);

        var _0x455d41 = _0x295262(0x16a21),
            _0x3b59ce = _0x295262(0x161cd);

        const _0x968ef2 = _0x3b59ce.players.local;

        let _0x4e6244;

        const _0x25874c = {
          'left': {
            0x1: {
              'object': _0x3b59ce.objects.new(_0x3b59ce.game.joaat('prop_sec_barrier_ld_02a'), new _0x3b59ce.Vector3(2582.86, -308.061, 92.9), {
                'rotation': new _0x3b59ce.Vector3(0x0, 0x0, 89.99975),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x3b59ce.Vector3(2582.86, -308.061, 92.9), new _0x3b59ce.Vector3(0x0, 0x0, 89.99975)],
                'opened': [new _0x3b59ce.Vector3(2582.86, -308.061, 92.9), new _0x3b59ce.Vector3(-0.00000209993, -79.99991, 89.99949)]
              }
            },
            'shape': _0x3b59ce.colshapes.newSphere(2579.271, -305.6823, 91.99277, 0xa).isfibGate = 'left'
          },
          'right': {
            0x1: {
              'object': _0x3b59ce.objects.new(_0x3b59ce.game.joaat('prop_sec_barrier_ld_02a'), new _0x3b59ce.Vector3(2583.73, -287.5731, 92.9), {
                'rotation': new _0x3b59ce.Vector3(0x0, 0x0, 89.99977),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x3b59ce.Vector3(2583.73, -287.5731, 92.9), new _0x3b59ce.Vector3(0x0, 0x0, 89.99977)],
                'opened': [new _0x3b59ce.Vector3(2583.73, -287.5731, 92.9), new _0x3b59ce.Vector3(0.000006043722, -79.99999, 89.99962)]
              }
            },
            0x2: {
              'object': _0x3b59ce.objects.new(_0x3b59ce.game.joaat('prop_sec_barrier_ld_02a'), new _0x3b59ce.Vector3(2583.73, -281.9126, 92.9), {
                'rotation': new _0x3b59ce.Vector3(0x0, 0x0, 89.99975),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x3b59ce.Vector3(2583.73, -281.9126, 92.9), new _0x3b59ce.Vector3(0x0, 0x0, 89.99975)],
                'opened': [new _0x3b59ce.Vector3(2583.73, -281.9126, 92.9), new _0x3b59ce.Vector3(0.000006043722, -79.99999, 89.99962)]
              }
            },
            'shape': _0x3b59ce.colshapes.newSphere(2584.3, -282.04, 92.99, 0xa).isfibGate = 'right'
          }
        };
        _0x3b59ce.events.add('playerEnterColshape', _0x3a28ca => {
          ['right', 'left'].includes(_0x3a28ca.isfibGate) && _0x455d41.api.isGroupMemberOf(_0x968ef2, 'fib') && (_0x4e6244 = _0x3a28ca, _0x455d41.api.displayHelpStringTrans('displayHelpString.openGates', false, true, 0x1388));
        }), _0x3b59ce.events.add('playerExitColshape', _0x296cdf => {
          _0x296cdf === _0x4e6244 && (_0x4e6244 = null, _0x3b59ce.game.ui.clearHelp(true));
        }), _0x3b59ce.events.add('keys.e', async () => {
          _0x4e6244 && _0x4e6244.isfibGate && (_0x3b59ce.game.ui.clearHelp(true), _0x3b59ce.events.callRemote('114353996', _0x4e6244.isfibGate), _0x4e6244 = null);
        });
        let _0x563750 = {
          'right': {
            0x1: null,
            0x2: null
          },
          'left': {
            0x1: null,
            0x2: null
          }
        };

        _0x3b59ce.events.add('fractions.fib.triggerGates', _0x3b9d2f => {
          const a0_0x52c145 = {
            _0x41465c: 0x16c5,
            _0x420a23: 0x1f30,
            _0x4e874b: 0x1e3d,
            _0x5cd160: 0x235b,
            _0x343c59: 0x185e
          };

          if (_0x25874c[_0x3b9d2f]) {
            _0x563750.right[0x1] && (_0x563750.right[0x1].cancel(), _0x563750.right[0x1] = undefined), _0x563750.right[0x2] && (_0x563750.right[0x2].cancel(), _0x563750.right[0x2] = undefined), _0x563750.left[0x1] && (_0x563750.left[0x1].cancel(), _0x563750.left[0x1] = undefined), _0x563750.left[0x2] && (_0x563750.left[0x2].cancel(), _0x563750.left[0x2] = undefined);

            for (let _0x47a180 = 0x1; _0x47a180 <= 0x2; _0x47a180++) {
              const _0x1db271 = _0x25874c[_0x3b9d2f][_0x47a180.toString()];

              if (!_0x1db271) continue;
              const _0x52b2c9 = _0x1db271.object;
              if (!_0x3b59ce.objects.exists(_0x52b2c9)) return;
              const _0x2f0a31 = _0x1db271.positions.opened,
                    _0x8e78cf = _0x1db271.positions.closed;
              _0x52b2c9.setNoCollision(_0x3b59ce.players.local.handle, false), _0x52b2c9.position = _0x2f0a31[0x0], _0x52b2c9.rotation = _0x2f0a31[0x1];

              let _0x316dbf = _0x3b59ce.game.sleep(0x1388).then(() => {
                try {
                  if (!_0x3b59ce.objects.exists(_0x52b2c9)) return;
                  _0x52b2c9.position = _0x8e78cf[0x0], _0x52b2c9.rotation = _0x8e78cf[0x1], _0x52b2c9.setNoCollision(_0x3b59ce.players.local.handle, true);
                } catch (_0x168660) {
                  _0x455d41.api.sendError(_0x168660);
                }
              });

              _0x563750[_0x3b9d2f][_0x47a180.toString()] = _0x316dbf;
            }
          }
        });
      },
      0x1105d: (_0x5aa5c0, _0x5ac43e, _0x4b9cd2) => {
        'use strict';

        const a0_0x10e628 = {
          _0x379b1a: 0x14d2,
          _0xfd24fd: 0x1a5,
          _0x1421ce: 0x1e04
        },
              a0_0x2b1daf = {
          _0x29afe7: 0x1aab,
          _0x9a7163: 0x14d2,
          _0x2fd719: 0x1a5
        },
              a0_0x4b874f = {
          _0x21c365: 0x16c5
        },
              a0_0x53eb2f = {
          _0x5a7a11: 0x310,
          _0x20d2cd: 0x10c9,
          _0x2181ba: 0x157d,
          _0x1fba97: 0xf5d,
          _0x233f9b: 0x2271
        },
              a0_0x229577 = {
          _0x2ce7c0: 0x14d2,
          _0x3a0cbf: 0x1de7,
          _0x821df1: 0x2c2
        },
              a0_0xad3fe0 = {
          _0x38ca31: 0x9a8,
          _0x555f3f: 0x1816,
          _0x10a9d7: 0x82d,
          _0x287748: 0x1816
        },
              a0_0x1c9694 = {
          _0x4375a6: 0x1c6f,
          _0x21b5dd: 0x17f4,
          _0x3831b1: 0x1460,
          _0x21c2b5: 0x1b7d,
          _0x2b2097: 0x14c1,
          _0x5614a7: 0x1e94,
          _0x4a6c43: 0x1b7d,
          _0x19992c: 0x310,
          _0x44a67b: 0x2488,
          _0x1a38bb: 0x1a3
        },
              a0_0x2ffdda = {
          _0x3841de: 0x1704,
          _0x386379: 0x1704,
          _0x124ee5: 0x18a2,
          _0x527efb: 0x5e9,
          _0x1c8cd6: 0x5e9,
          _0x3edc93: 0x17f,
          _0xc870b7: 0xda6,
          _0x441eb8: 0xf82,
          _0x241468: 0x1aab,
          _0x19d678: 0x2405,
          _0x11a2b5: 0x6ba,
          _0x4a65a5: 0x1d55,
          _0x306ca2: 0x21fa,
          _0x136b23: 0x1d4e
        },
              a0_0x59bbde = {
          _0x566112: 0x19c8,
          _0x473637: 0xa8e,
          _0x575739: 0x16c5,
          _0x2cacfc: 0xb53,
          _0x1ecf22: 0x2140
        },
              a0_0x46eae5 = {
          _0x4d589a: 0x19c8
        },
              a0_0x5b7083 = {
          _0xc62254: 0x1dda,
          _0x26c120: 0x1955,
          _0x2476e5: 0xa8e,
          _0x13028b: 0x1c05
        };

        _0x4b9cd2.r(_0x5ac43e);

        var _0x53504d = _0x4b9cd2(0x16a21),
            _0x1d3cfb = _0x4b9cd2(0x12a76),
            _0x2885e0 = _0x4b9cd2(0x176d8),
            _0x143fa8 = _0x4b9cd2(0x17d19),
            _0xe77394 = _0x4b9cd2(0x1659b),
            _0x4d6eb7 = _0x4b9cd2(0x3db3),
            _0xdabb74 = _0x4b9cd2(0xac99),
            _0x5293f1 = _0x4b9cd2.n(_0xdabb74),
            _0x4a62c3 = _0x4b9cd2(0x48c4),
            _0x165908 = _0x4b9cd2(0x161cd);

        const _0x5c5716 = 'gang.capture.requestLeave',
              _0x45d8c2 = _0x165908.players.local,
              _0x42a605 = {};

        for (let _0x3603e1 = 0x0; _0x3603e1 < _0x5293f1().length; _0x3603e1++) _0x42a605[_0x3603e1] = _0x5293f1()[_0x3603e1];

        const _0xbab16e = {
          'activeHud': false,
          'gangZones': _0x5293f1(),
          'gangZonesMap': _0x42a605,
          'blipsInited': false,
          'currentBigZones': new Set(),
          'batchEventsData': [],
          'timeBar': null
        },
              _0xcea831 = new _0x143fa8.Z({
          'dataItems': [..._0xbab16e.gangZones.map((_0x45a81a, _0x585bb7) => ({ ..._0x45a81a,
            'localIndex': _0x585bb7,
            'gangZoneId': _0x585bb7 + 0x1
          })), ..._0xbab16e.gangZones.map((_0x3477ac, _0x35990e) => ({ ..._0x3477ac,
            'localIndex': _0x35990e + _0xbab16e.gangZones.length,
            'isBigSize': true,
            'gangZoneId': _0x35990e + 0x1
          }))],
          'chunkSize': 0x64,
          'positionResolver': _0x371810 => _0x371810.position,
          'sizeResolver': (_0x235f90, _0x16aa2e) => ({
            'width': _0x235f90.radius * (_0x235f90.isBigSize ? 0x3 : 0x1),
            'height': _0x235f90.radius * (_0x235f90.isBigSize ? 0x3 : 0x1)
          }),
          'streamDelay': 0xfa,
          'type': 'rectangle'
        });

        _0x165908.events.add('gangzones.load', (_0x90c762, _0x1e2257) => {
          const _0x4b0628 = JSON.parse(_0x90c762);

          for (const _0x4f9daa in _0x4b0628) {
            const _0x48627b = parseInt(_0x4f9daa) - 0x1,
                  _0x44a783 = _0x4b0628[_0x4f9daa],
                  _0x14d9a2 = _0xbab16e.gangZones[_0x48627b];

            _0x14d9a2.blip = _0x165908.blips.new(0x5, _0x14d9a2.position, {
              'radius': _0x14d9a2.radius / 0x2,
              'alpha': _0x1e2257 ? 0x64 : 0x0,
              'dimension': -0x1,
              'color': _0x44a783.color ? _0x44a783.color : 0x4
            });
          }

          _0xbab16e.blipsInited = true;
        }), _0x165908.events.addDataHandler('member', () => {
          for (let _0x2bee10 = 0x0; _0x2bee10 < _0xbab16e.gangZones.length; _0x2bee10++) _0x165908.blips.exists(_0xbab16e.gangZones[_0x2bee10].blip) && _0xbab16e.gangZones[_0x2bee10].blip.setAlpha(_0x53504d.api.isGroupMemberOf(_0x45d8c2, 'gang') ? 0x64 : 0x0);
        }), _0x165908.events.add('gangzone.setBulkColor', _0x54ea8d => {
          const _0x40ee77 = JSON.parse(_0x54ea8d);

          for (const _0x3c9963 in _0x40ee77) _0xbab16e.gangZonesMap[parseInt(_0x3c9963) - 0x1].blip.setColour(_0x40ee77[_0x3c9963]);
        }), _0x165908.events.add('gangzone.setZoneColor', (_0x4a98c7, _0x388cc1 = 0x4) => {
          _0x4a98c7 = parseInt(_0x4a98c7) - 0x1, _0xbab16e.gangZonesMap[_0x4a98c7] && _0x165908.blips.exists(_0xbab16e.gangZones[_0x4a98c7].blip) && _0xbab16e.gangZonesMap[_0x4a98c7].blip.setColour(_0x388cc1);
        }), _0x165908.events.add('gangzone.setVisible', (_0xc724b5 = true, _0x4fd802 = true) => {
          for (let _0x98d08f = 0x0; _0x98d08f < _0xbab16e.gangZones.length; _0x98d08f++) _0xbab16e.gangZones[_0x98d08f].blip.setAlpha(_0xc724b5 ? 0x64 : 0x0);
        }), _0x165908.events.add('gangzone.setZoneFlash', (_0x108792, _0x542028, _0x3ec1f3 = 0x1) => {
          _0x108792 = parseInt(_0x108792) - 0x1;
          const _0x30419c = _0xbab16e.gangZonesMap[_0x108792].blip;
          _0x165908.blips.exists(_0x30419c) && (_0x30419c.setFlashTimer(0x3e8), _0x30419c.setFlashes(!!_0x542028), _0x30419c.setAlpha(0x64));
        }), _0x165908.events.add('gangzone.stopZoneFlash', _0x26f6f9 => {
          _0x26f6f9 = parseInt(_0x26f6f9) - 0x1;
          const _0x57c7fe = _0xbab16e.gangZonesMap[_0x26f6f9].blip;
          _0x165908.blips.exists(_0x57c7fe) && (_0x57c7fe.setFlashTimer(0x0), _0x57c7fe.setFlashes(false), _0x57c7fe.setAlpha(_0x53504d.api.isGroupMemberOf(_0x45d8c2, 'gang') ? 0x64 : 0x0));
        });

        let _0x1fab13,
            _0xe51222 = {};

        _0x165908.events.add('gang.setBaseRoute', _0x19cb9e => {
          _0x19cb9e = JSON.parse(_0x19cb9e), _0xe51222.garageMarker && (_0xe51222.garageMarker = _0xe51222.garageMarker.destroy()), _0xe51222.garageShape && (_0xe51222.garageShape = _0xe51222.garageShape.destroy()), _0xe51222.garageBlip && (_0xe51222.garageBlip = _0xe51222.garageBlip.destroy()), _0xe51222.garageMarker = _0x165908.markers.new(0x1, new _0x165908.Vector3(_0x19cb9e.x, _0x19cb9e.y, _0x19cb9e.z - 0x1), 0x5, {
            'color': [0x34, 0x98, 0xdb, 0xc8]
          }), _0xe51222.garageShape = _0x165908.colshapes.newSphere(_0x19cb9e.x, _0x19cb9e.y, _0x19cb9e.z, 0x5, 0x0), _0xe51222.garageBlip = _0x165908.blips.new(0x239, new _0x165908.Vector3(_0x19cb9e.x, _0x19cb9e.y, _0x19cb9e.z), {
            'name': 'Гараж вашей банды'
          }), (0x0, _0x4d6eb7.markAsTranslatedBlip)(_0xe51222.garageBlip, 'blips.garage');
        }), _0x165908.events.add('gang.stopClientWarForMaterials', () => {
          _0xe51222.marker && (_0xe51222.marker = _0xe51222.marker.destroy()), _0xe51222.shape && (_0xe51222.shape = _0xe51222.shape.destroy()), _0xe51222.garageMarker && (_0xe51222.garageMarker = _0xe51222.garageMarker.destroy()), _0xe51222.garageShape && (_0xe51222.garageShape = _0xe51222.garageShape.destroy()), _0xe51222.garageBlip && (_0xe51222.garageBlip = _0xe51222.garageBlip.destroy()), _0x1fab13 && (_0x1fab13 = null);
        });

        const _0x3e631f = (_0x260266 = _0xbab16e.hudDefendersName, _0x4f0375 = _0xbab16e.hudAttackersName, _0x53d808 = _0xbab16e.hudDefendersAmount, _0x177e6a = _0xbab16e.hudAttackersAmount, _0x9060cf = _0xbab16e.hudDefendersId, _0x439da5 = _0xbab16e.hudAttackersId, _0x4ec7d3 = _0xbab16e.totalTimeStr, _0x201e59 = _0xbab16e.startTimeStr) => {
          if (!_0xbab16e.activeHud) return;
          _0xbab16e.hudDefendersName = _0x260266, _0xbab16e.hudAttackersName = _0x4f0375, _0xbab16e.hudDefendersAmount = _0x53d808, _0xbab16e.hudAttackersAmount = _0x177e6a, _0xbab16e.hudDefendersId = _0x9060cf, _0xbab16e.hudAttackersId = _0x439da5, _0xbab16e.totalTime = parseInt(_0x4ec7d3, 0x24), _0xbab16e.startTime = parseInt(_0x201e59, 0x24);

          let _0x1884fc = _0x53d808 / (_0x177e6a + _0x53d808) * 0x64 || 0x32,
              _0x1e293c = 0x64 - _0x1884fc || 0x32;

          const _0x3e3586 = Math.max(0x0, _0xbab16e.totalTime - Math.round(((0x0, _0x4a62c3.getServerTime)() - _0xbab16e.startTime) / 0x3e8));

          _0x1d3cfb.globalBrowser.emit('main_updateCapture', {
            'timer': _0x3e3586,
            'team1': {
              'id': _0x9060cf,
              'title': _0x260266,
              'count': _0x53d808,
              'percent': _0x1884fc,
              'status': 'defender'
            },
            'team2': {
              'id': _0x439da5,
              'title': _0x4f0375,
              'count': _0x177e6a,
              'percent': _0x1e293c,
              'status': 'attacker'
            }
          });
        };

        _0x165908.events.add('gang.updateCaptureInfo', _0x3e631f), _0x165908.events.add('gang.showCaptureInfo', (_0x24f8ee, _0x4948e4, _0x23c568, _0x5bb5ea, _0x37b080, _0x4697ae, _0x526eb2, _0x622e6c, _0x3fc9f7) => {
          _0xbab16e.activeHud = _0x24f8ee, _0x24f8ee ? (_0xbab16e.totalTime = parseInt(_0x23c568, 0x24), _0xbab16e.startTime = parseInt(_0x4948e4, 0x24), _0xbab16e.totalTimeStr = _0x23c568, _0xbab16e.startTimeStr = _0x4948e4, _0xbab16e.hudDefendersName = _0x5bb5ea, _0xbab16e.hudAttackersName = _0x37b080, _0xbab16e.hudDefendersAmount = _0x4697ae, _0xbab16e.hudAttackersAmount = _0x526eb2, _0xbab16e.hudDefendersId = _0x622e6c, _0xbab16e.hudAttackersId = _0x3fc9f7, _0x3e631f(_0x5bb5ea, _0x37b080, _0x4697ae, _0x526eb2, _0x622e6c, _0x3fc9f7)) : _0x1d3cfb.globalBrowser.emit('main_updateCapture', JSON.stringify(null));
        });

        const _0xf1af01 = _0x41b138 => {
          const _0x2904e3 = Math.floor(_0x41b138 % 0xe10 / 0x3c),
                _0xafa7ce = Math.floor(_0x41b138 % 0x3c);

          return _0x2904e3 > 0x0 ? _0x2904e3.toString().padStart(0x2, '0') + ':' + _0xafa7ce.toString().padStart(0x2, '0') : _0xafa7ce.toString().padStart(0x2, '0') + 'с';
        };

        _0x165908.events.add('time.everySec', () => {
          if (_0xbab16e.activeHud && _0x3e631f(), _0xbab16e.timeBar?.['visible']) {
            const _0x446e2d = _0xbab16e.totalSecondsForFinish - Math.round(((0x0, _0x4a62c3.getServerTime)() - _0xbab16e.lastCaptureTime) / 0x3e8);

            _0xbab16e.timeBar.value = _0xf1af01(_0x446e2d), (_0x446e2d <= 0x0 || 0x0 === _0x45d8c2.dimension) && (_0xbab16e.timeBar.visible = false, _0xbab16e.timeBar = null);
          }
        }), _0x165908.events.add('gang.finishCapture', (_0x4ea00e, _0x337bbd, _0x334ff4) => {
          _0x165908.events.call('showDialogTrans', _0x5c5716, 'confirm', 'user.dialog.gangCaptureTitle', 'user.dialog.gangCaptureBody', {
            'time': _0x337bbd
          }, null, 'system.yes', 'system.no'), _0xbab16e.totalSecondsForFinish = 0x3c * _0x4ea00e, _0xbab16e.lastCaptureTime = parseInt(_0x334ff4, 0x24);
        }), _0x165908.events.add('onDialogResponse', (_0x520d5e, _0x53d093) => {
          if (_0x520d5e === _0x5c5716 && _0x53d093) {
            const _0x385584 = _0xbab16e.totalSecondsForFinish - Math.round(((0x0, _0x4a62c3.getServerTime)() - _0xbab16e.lastCaptureTime) / 0x3e8);

            _0x385584 > 0x0 && (_0xbab16e.timeBar || (_0xbab16e.timeBar = new _0x2885e0.TimerBar('testDrive.timeBarLabel', null, {
              'visible': false
            })), _0xbab16e.timeBar.value = _0xf1af01(_0x385584), _0xbab16e.timeBar.visible = true);
          }
        });

        const _0x520f06 = (0x0, _0xe77394.D)(() => {
          _0x165908.events.callRemote('1468097919', JSON.stringify(_0xbab16e.batchEventsData)), _0xbab16e.batchEventsData = [];
        }, 0x32);

        _0xcea831.onEnter = _0x54b135 => {
          _0xbab16e.batchEventsData.push([0x1, _0x54b135.isBigSize ? 0x1 : 0x0, _0x54b135.gangZoneId]), _0x520f06();
        }, _0xcea831.onExit = _0x49088e => {
          _0xbab16e.batchEventsData.push([0x0, _0x49088e.isBigSize ? 0x1 : 0x0, _0x49088e.gangZoneId]), _0x520f06();
        }, _0x165908.events.add('render', () => {
          if (_0x53504d.api.isAuthed() && (_0xcea831.update(), _0xbab16e.blipsInited)) {
            for (let _0x443bb6 = 0x0; _0x443bb6 < _0xbab16e.gangZones.length; _0x443bb6++) _0xbab16e.gangZones[_0x443bb6].blip?.['setRotation'](0x0);
          }
        });
        let _0x527b4e = false;
        _0x165908.events.add('playerEnterColshape', _0x2060c6 => {
          _0x165908.colshapes.exists(_0x2060c6) && _0x2060c6.getVariable('gangzone.maxSpeed') && (_0x165908.events.call('greenzone.setMaxSpeed', _0x2060c6.getVariable('gangzone.maxSpeed')), _0x527b4e = true);
        }), _0x165908.events.add('playerExitColshape', _0x46629d => {
          _0x165908.colshapes.exists(_0x46629d) && _0x46629d.getVariable('gangzone.maxSpeed') && (_0x165908.events.call('greenzone.setMaxSpeed', false), _0x527b4e = false);
        }), _0x165908.events.addDataHandler('gangzone.maxSpeed', (_0x31701d, _0x1470a2) => {
          _0x165908.colshapes.exists(_0x31701d) && _0x527b4e && _0x165908.events.call('greenzone.setMaxSpeed', _0x1470a2);
        });
      },
      0x1fba: (_0x55b4cc, _0x5d51df, _0x3628f4) => {
        'use strict';

        const a0_0x43be45 = {
          _0x234ffb: 0x14d2
        },
              a0_0x2f3baa = {
          _0x356840: 0x4b9,
          _0x527bbd: 0x1aab,
          _0x31c8a4: 0x16c5,
          _0x5eaf7d: 0x163e,
          _0x4dab11: 0x133c,
          _0x28b562: 0x185e,
          _0xdca1db: 0x2530,
          _0x558232: 0x21e0,
          _0x45a387: 0x14d2,
          _0x43f3c3: 0x1da5,
          _0x207178: 0x18a0,
          _0x2cf845: 0xf5e,
          _0x219dea: 0x4b9,
          _0x18017d: 0x1864
        },
              a0_0x541556 = {
          _0xa82dc: 0x253d,
          _0x302ac9: 0x1d66
        },
              a0_0x4aa20e = {
          _0x4b337d: 0x13db,
          _0x22189a: 0xc74,
          _0x28f145: 0x535,
          _0x964623: 0x421,
          _0x48fc06: 0x1a2c,
          _0x2fd1df: 0xe6d
        },
              a0_0x7ffdfb = {
          _0x35026d: 0x25e1,
          _0x24b798: 0x1aab,
          _0x1f9d1f: 0x2405,
          _0x4b6de6: 0xf82,
          _0x314463: 0xa8e,
          _0x3057e4: 0x6ba,
          _0x4ea546: 0x1d55,
          _0x4a4bc2: 0x1d4e,
          _0x266dd8: 0x8e0,
          _0x5cdbbb: 0x1d2
        };

        _0x3628f4.r(_0x5d51df);

        var _0x4a39f9 = _0x3628f4(0x16a21),
            _0x4dee23 = _0x3628f4(0x3db3),
            _0xa86d67 = _0x3628f4(0x161cd);

        const _0x21bdf0 = _0xa86d67.players.local;

        let _0x1e6fe9,
            _0x50e14c = [],
            _0x5c724f = [];

        _0xa86d67.events.add('fractions.garages.init', _0x1707f6 => {
          _0x1707f6 && (_0x1707f6 = JSON.parse(_0x1707f6), _0x50e14c = _0x1707f6);
        }), _0xa86d67.events.add('fractions.garages.enable', () => {
          _0xa86d67.events.call('fraction.garages.disable');

          const _0x11b272 = _0x21bdf0.member;
          if (!_0x11b272) return;

          const _0x725b02 = [],
                _0x205b70 = _0x50e14c.find(_0x50f7ea => _0x50f7ea.id === _0x11b272);

          if (_0x725b02.push(_0x205b70), _0x4a39f9.api.isGroupMemberOf(_0x21bdf0, 'army')) {
            const _0x5d2e6e = [0x1, 0x2, 0x3, 0x5, 0x6, 0x7],
                  _0x51fc9e = _0x50e14c.filter(_0x5535e8 => _0x5d2e6e.includes(_0x5535e8.id));

            _0x725b02.push(..._0x51fc9e);
          }

          _0x725b02.forEach(_0x53dde3 => {
            const _0x26dee8 = {};
            _0x26dee8.shape = _0xa86d67.colshapes.newSphere(_0x53dde3.x, _0x53dde3.y, _0x53dde3.z, 0xa), _0x26dee8.fractionId = _0x53dde3.id, _0x26dee8.marker = _0xa86d67.markers.new(0x1, new _0xa86d67.Vector3(_0x53dde3.x, _0x53dde3.y, _0x53dde3.z - 0x2), 0xa, {
              'color': [0x34, 0x98, 0xdb, 0x4b]
            }), _0x26dee8.blip = _0xa86d67.blips.new(0x1d9, new _0xa86d67.Vector3(_0x53dde3.x, _0x53dde3.y, _0x53dde3.z), {
              'name': 'Гараж',
              'shortRange': false,
              'color': 0x3
            }), (0x0, _0x4dee23.markAsTranslatedBlip)(_0x26dee8.blip, 'blips.garage'), _0x5c724f.push(_0x26dee8);
          });
        }), _0xa86d67.events.add('fraction.garages.disable', () => {
          const a0_0x1d1747 = {
            _0x269906: 0x1aab,
            _0x26baa8: 0x17f,
            _0x264d6a: 0x16c5,
            _0x12025a: 0x22ba,
            _0x4d898d: 0x22ba,
            _0x4755e4: 0x17f,
            _0xacec97: 0xa8e
          };
          _0x5c724f.forEach(_0x53cfa6 => {
            _0xa86d67.colshapes.exists(_0x53cfa6.shape) && _0x53cfa6.shape.destroy(), _0xa86d67.markers.exists(_0x53cfa6.marker) && _0x53cfa6.marker.destroy(), _0xa86d67.blips.exists(_0x53cfa6.blip) && _0x53cfa6.blip.destroy();
          }), _0x5c724f = [], _0x1e6fe9 = undefined;
        }), _0xa86d67.events.add('playerEnterColshape', async _0x37eff0 => {
          if (!_0x4a39f9.api.isAuthed()) return;
          if (!_0x21bdf0.vehicle) return;
          if (!_0x5c724f.length) return;
          _0x5c724f.map(_0x47e567 => _0x47e567.shape).includes(_0x37eff0) && (_0x1e6fe9 = _0x37eff0, _0x4a39f9.api.displayHelpStringTrans('displayHelpString.toUseGarage', false, true, 0x1388));
        }), _0xa86d67.events.add('playerExitColshape', async _0x5ab1e6 => {
          if (_0x4a39f9.api.isAuthed()) return _0x1e6fe9 && _0x1e6fe9 === _0x5ab1e6 ? (_0x1e6fe9 = undefined, void _0xa86d67.game.ui.clearHelp(true)) : undefined;
        }), _0xa86d67.events.add('keys.e', async () => {
          if (!_0x21bdf0.vehicle) return;
          if (!_0x1e6fe9) return;
          if (!_0xa86d67.colshapes.exists(_0x1e6fe9)) return;
          if (_0x21bdf0.vehicle.getPedInSeat(_0x4a39f9.api.getVehSeat(-0x1)) !== _0xa86d67.players.local.handle) return;

          const _0x57eee0 = _0x5c724f.find(_0xbb2d97 => _0xbb2d97.shape === _0x1e6fe9);

          _0x1e6fe9 && _0x57eee0 && (_0xa86d67.events.callRemote('503710608', _0x57eee0.fractionId), _0xa86d67.events.call('fractions.garages.onInteraction', _0x57eee0.fractionId), _0x21bdf0.vehicle.setHalt(0x3, 0x1, false), _0x1e6fe9 = undefined);
        }), _0xa86d67.events.add('playerLeaveVehicle', (_0x4c819a, _0x3751f6) => {
          _0xa86d67.events.call('fraction.garages.disable');
        });
      },
      0x1137f: (_0x516c47, _0x3a1b71, _0x8cfb23) => {
        _0x8cfb23(0x6a25), _0x8cfb23(0x1105d), _0x8cfb23(0x27a9), _0x8cfb23(0x451d), _0x8cfb23(0x14eba), _0x8cfb23(0x16616), _0x8cfb23(0x8a31), _0x8cfb23(0xbb90), _0x8cfb23(0x217f), _0x8cfb23(0x5945), _0x8cfb23(0x447), _0x8cfb23(0xe9e0), _0x8cfb23(0x1538d), _0x8cfb23(0x1fba), _0x8cfb23(0x169a6);
      },
      0x451d: (_0x12aa6c, _0xbe3e59, _0xd4f02b) => {
        'use strict';

        const a0_0x5e02bd = {
          _0x2dba7b: 0x6ba,
          _0x523a81: 0xf82,
          _0x42cbe4: 0x1d55
        };
        _0xd4f02b.r(_0xbe3e59), _0xd4f02b(0x16a21);

        var _0x4237e3 = _0xd4f02b(0x12a76),
            _0x55f83c = _0xd4f02b(0x161cd);

        _0x55f83c.players.local;

        let _0x3bae43;

        _0x55f83c.events.add('mafia.updateCaptureInfo', (_0x187a29, _0x1357a7, _0x38ad21, _0x433b85, _0x5d4997, _0x5d986b, _0x46d49c, _0x5939bf) => {
          if (!_0x187a29) return _0x4237e3.globalBrowser.emit('main_updateCapture', JSON.stringify(null));

          let _0x1ade75 = _0x433b85 / (_0x5d4997 + _0x433b85) * 0x64 || 0x32,
              _0x5e1573 = 0x64 - _0x1ade75 || 0x32;

          _0x4237e3.globalBrowser.emit('main_updateCapture', {
            'timer': _0x5939bf,
            'team1': {
              'id': _0x5d986b,
              'title': _0x1357a7,
              'count': _0x433b85,
              'percent': _0x1ade75,
              'status': 'defender'
            },
            'team2': {
              'id': _0x46d49c,
              'title': _0x38ad21,
              'count': _0x5d4997,
              'percent': _0x5e1573,
              'status': 'attacker'
            }
          });
        }), _0x55f83c.events.add('mafia.createZoneBlip', (_0x262e37, _0x3b6263, _0x2626cd, _0x310ecb) => {
          _0x3bae43 || (_0x3bae43 = _0x55f83c.blips.new(0x9, new _0x55f83c.Vector3(parseFloat(_0x262e37), parseFloat(_0x3b6263), parseFloat(_0x2626cd)), {
            'radius': parseInt(_0x310ecb),
            'alpha': 0x64,
            'dimension': -0x1,
            'color': 0x5
          }));
        }), _0x55f83c.events.add('mafia.removeZoneBlip', () => {
          _0x55f83c.blips.exists(_0x3bae43) && (_0x3bae43.destroy(), _0x3bae43 = null);
        });
      },
      0x27a9: (_0x633b4, _0xf6e01d, _0x5b768f) => {
        'use strict';

        const a0_0x1f5584 = {
          _0x241ad9: 0x16c5
        };

        _0x5b768f.r(_0xf6e01d);

        var _0x1aac5d = _0x5b768f(0x16a21),
            _0x1c074a = _0x5b768f(0x3db3),
            _0x1576e6 = _0x5b768f(0x161cd);

        _0x1576e6.players.local;
        let _0x40fb6b = {};
        _0x1576e6.events.add('police.markBlip', (_0x4c4aae, _0x894da2, _0x2495f1, _0xec77f8, _0x21fcb3) => {
          _0x1aac5d.api.playSound('alert3', 0.07);

          const _0x32a3a1 = {};
          _0x32a3a1.shape = _0x1576e6.colshapes.newSphere(_0x894da2, _0x2495f1, _0xec77f8, 0xa, 0x0), _0x32a3a1.shape.isMarkBlip = true, _0x32a3a1.blip = _0x1576e6.blips.new(0xe5, new _0x1576e6.Vector3(_0x894da2, _0x2495f1, _0xec77f8), {
            'color': _0x21fcb3 || 0x3,
            'dimension': 0x0,
            'alpha': 0xff,
            'shortRange': false
          }), (0x0, _0x1c074a.markAsTranslatedBlip)(_0x32a3a1.blip, 'blips.reinforcement'), _0x32a3a1.destroyTime = Date.now() + 0x2bf20, _0x40fb6b[_0x4c4aae] = _0x32a3a1;
        }), _0x1576e6.events.add('playerEnterColshape', _0x1bdad2 => {
          if (_0x1aac5d.api.isAuthed() && _0x1bdad2.isMarkBlip) {
            const _0x17e325 = Object.values(_0x40fb6b).find(_0x132b72 => _0x132b72.shape === _0x1bdad2);

            _0x17e325 && (_0x1576e6.colshapes.exists(_0x17e325.shape) && (_0x17e325.shape.destroy(), delete _0x17e325.shape), _0x1576e6.blips.exists(_0x17e325.blip) && (_0x17e325.blip.destroy(), delete _0x17e325.blip), delete _0x40fb6b[_0x17e325.uuid]), _0x1aac5d.api.longNotifyTrans('fractions.events.markArrived', 'success');
          }
        }), _0x1576e6.events.add('time.everyMinute', () => {
          const a0_0x314f38 = {
            _0x7fdb9c: 0x1aab,
            _0x5225bc: 0x17f,
            _0x1e71c2: 0x16c5,
            _0x4be7ad: 0x2176
          };
          Object.values(_0x40fb6b).forEach(_0x1290be => {
            _0x1290be.destroyTime < Date.now() && (_0x1576e6.colshapes.exists(_0x1290be.shape) && (_0x1290be.shape.destroy(), delete _0x1290be.shape), _0x1576e6.blips.exists(_0x1290be.blip) && (_0x1290be.blip.destroy(), delete _0x1290be.blip), delete _0x40fb6b[_0x1290be.uuid]);
          });
        });
        let _0xd0540f = [];
        _0x1576e6.events.add('fraction.police.setHijackBlips', _0x8daa63 => {
          const a0_0x1af3d9 = {
            _0xa14072: 0x6ba,
            _0x16e374: 0x1d55,
            _0x4c33ec: 0x1d2
          };
          _0xd0540f.forEach(_0x463bd7 => {
            _0x1576e6.blips.exists(_0x463bd7) && _0x463bd7.destroy();
          }), _0xd0540f = [], _0x8daa63 && (_0x8daa63 = JSON.parse(_0x8daa63)).forEach(_0x420b1b => {
            const _0x24b7af = _0x1576e6.blips.new(0x1d4, new _0x1576e6.Vector3(_0x420b1b.x, _0x420b1b.y, _0x420b1b.z), {
              'color': 0x26,
              'dimension': 0x0,
              'alpha': 0xff,
              'shortRange': true
            });

            (0x0, _0x1c074a.markAsTranslatedBlip)(_0x24b7af, 'blips.hijack'), _0xd0540f.push(_0x24b7af);
          });
        }), _0x1576e6.events.add('fraction.police.addHijackBlip', _0xa00662 => {
          const _0x2422a7 = _0x1576e6.blips.new(0x1d4, new _0x1576e6.Vector3(_0xa00662.x, _0xa00662.y, _0xa00662.z), {
            'name': 'Угон авто',
            'color': 0x26,
            'dimension': 0x0,
            'alpha': 0xff,
            'shortRange': true
          });

          (0x0, _0x1c074a.markAsTranslatedBlip)(_0x2422a7, 'blips.hijack'), _0xd0540f.push(_0x2422a7);
        });
      },
      0x5945: (_0x360469, _0x5ca558, _0x293b78) => {
        'use strict';

        const a0_0x2854ae = {
          _0x2d7c93: 0x16c5,
          _0x47c446: 0x1f30,
          _0x3fb5ff: 0x263f,
          _0xddce89: 0x185e,
          _0x5a2315: 0x2530,
          _0xb72380: 0x535,
          _0x221276: 0x1063
        },
              a0_0x11fd99 = {
          _0x393ecc: 0x1d66
        };

        _0x293b78.r(_0x5ca558);

        var _0xaf7c3a = _0x293b78(0x16a21),
            _0x315939 = _0x293b78(0x161cd);

        const _0x3dc868 = _0x315939.players.local;

        let _0x4def88;

        const _0x129b07 = {
          'main': {
            0x1: {
              'object': _0x315939.objects.new(_0x315939.game.joaat('prop_sec_barrier_ld_02a'), new _0x315939.Vector3(-451.7, 6026.92, 31.3), {
                'rotation': new _0x315939.Vector3(6.106665e-13, -0.000005008956, 0x87),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x315939.Vector3(-451.7, 6026.92, 31.3), new _0x315939.Vector3(6.106665e-13, -0.000005008956, 0x87)],
                'opened': [new _0x315939.Vector3(-451.7, 6026.92, 31.3), new _0x315939.Vector3(-0.000004695755, -79.99999, 134.9997)]
              }
            },
            'shape': _0x315939.colshapes.newSphere(-453.4769, 6028.678, 30.34054, 0xa).issheriffGate = 'main'
          }
        };
        _0x315939.events.add('playerEnterColshape', _0x9a0902 => {
          ['main'].includes(_0x9a0902.issheriffGate) && _0xaf7c3a.api.isGroupMemberOf(_0x3dc868, 'police') && (_0x4def88 = _0x9a0902, _0xaf7c3a.api.displayHelpStringTrans('displayHelpString.openGates', false, true, 0x1388));
        }), _0x315939.events.add('playerExitColshape', _0x4aea23 => {
          _0x4aea23 === _0x4def88 && (_0x4def88 = null, _0x315939.game.ui.clearHelp(true));
        }), _0x315939.events.add('keys.e', async () => {
          _0x4def88 && _0x4def88.issheriffGate && (_0x315939.game.ui.clearHelp(true), _0x315939.events.callRemote('4197872432', _0x4def88.issheriffGate), _0x4def88 = null);
        });
        let _0x426fd3 = {
          'main': {
            0x1: null,
            0x2: null
          }
        };

        _0x315939.events.add('fractions.sheriff.triggerGates', _0x6c2674 => {
          if (_0x129b07[_0x6c2674]) {
            _0x426fd3.main[0x1] && (_0x426fd3.main[0x1].cancel(), _0x426fd3.main[0x1] = undefined), _0x426fd3.main[0x2] && (_0x426fd3.main[0x2].cancel(), _0x426fd3.main[0x2] = undefined);

            for (let _0x548264 = 0x1; _0x548264 <= 0x2; _0x548264++) {
              const _0x1b12ba = _0x129b07[_0x6c2674][_0x548264.toString()];

              if (!_0x1b12ba) continue;
              const _0x3c65ff = _0x1b12ba.object;
              if (!_0x315939.objects.exists(_0x3c65ff)) return;
              const _0x2c78d5 = _0x1b12ba.positions.opened,
                    _0x48685b = _0x1b12ba.positions.closed;
              _0x3c65ff.setNoCollision(_0x315939.players.local.handle, false), _0x3c65ff.position = _0x2c78d5[0x0], _0x3c65ff.rotation = _0x2c78d5[0x1];

              let _0x567ee7 = _0x315939.game.sleep(0x1388).then(() => {
                try {
                  if (!_0x315939.objects.exists(_0x3c65ff)) return;
                  _0x3c65ff.position = _0x48685b[0x0], _0x3c65ff.rotation = _0x48685b[0x1], _0x3c65ff.setNoCollision(_0x315939.players.local.handle, true);
                } catch (_0x431ee4) {
                  _0xaf7c3a.api.sendError(_0x431ee4);
                }
              });

              _0x426fd3[_0x6c2674][_0x548264.toString()] = _0x567ee7;
            }
          }
        });
      },
      0x169a6: (_0x251377, _0x33a231, _0x588205) => {
        'use strict';

        const a0_0x14e99f = {
          _0x42c531: 0x185e,
          _0x2e200d: 0x4b9,
          _0xa03f65: 0x16c5,
          _0x36cf74: 0x32e,
          _0x1edd6e: 0x1d66,
          _0x9e60c8: 0x14d2,
          _0x4177b2: 0x2001,
          _0x37f451: 0x1aab,
          _0x4abf47: 0x1973,
          _0x24915b: 0x59d,
          _0x78eead: 0x1da5,
          _0x458eee: 0x13dd,
          _0x32838b: 0x1aab,
          _0x1ac2c1: 0x1da5,
          _0x32af1d: 0x3ae
        },
              a0_0x593de2 = {
          _0x503c74: 0x535,
          _0x12e3ad: 0x32e,
          _0x1f6548: 0x32e,
          _0x24e325: 0xc89,
          _0x3f26ce: 0x1d66,
          _0x481d76: 0x59d
        },
              a0_0x33eeb4 = {
          _0x534b21: 0x535,
          _0x3af8a3: 0x1c66,
          _0x3853d2: 0x1de9,
          _0x1faea9: 0x239,
          _0x1cd219: 0x167e,
          _0x2f2a6e: 0x1d66,
          _0x3023b7: 0x535,
          _0x3912b9: 0x15c0,
          _0x22e3aa: 0xb4a,
          _0x5aed37: 0x1d66,
          _0x46be83: 0x2379
        },
              a0_0x255aa8 = {
          _0x5c3010: 0x1de9,
          _0x21ccd8: 0x167e,
          _0x3368f5: 0x1d66,
          _0x602d0: 0x535,
          _0x22ed60: 0x1de9,
          _0x1399ef: 0x1d7c,
          _0x361e6e: 0x2379,
          _0x56b27a: 0x535,
          _0x5c56bb: 0x1c66
        };

        _0x588205.r(_0x33a231);

        var _0x4e727f = _0x588205(0x16a21),
            _0x5c2d54 = _0x588205(0x5d14),
            _0x55af0b = _0x588205(0x161cd);

        let _0x499ede;

        _0x55af0b.events.add('supplyMaterials.pickUpBox', async _0x2bbe4d => {
          _0x4e727f.api.usingSystemAnim(true);

          const _0xec3e48 = await _0x4e727f.api.taskPlayAnim('anim@heists@load_box', 'lift_box', 0x0, false);

          await _0x55af0b.game.sleep(0x2bc * _0xec3e48), await _0x4e727f.api.taskPlayAnim('anim@heists@box_carry@', 'idle', 0x31, true), _0x55af0b.attachments.addLocal(_0x55af0b.game.joaat(_0x2bbe4d)), _0x4e727f.api.usingSystemAnim(false);
        }), _0x55af0b.events.add('supplyMaterials.putBox', async _0x567fa5 => {
          _0x4e727f.api.usingSystemAnim(true);

          const _0x5acba1 = await _0x4e727f.api.taskPlayAnim('anim@heists@load_box', 'lift_box', 0x0, false);

          await _0x55af0b.game.sleep(0x3e8 * _0x5acba1), _0x4e727f.api.taskPlayAnim('anim@heists@box_carry@', 'idle', 0x31, true), _0x55af0b.attachments.removeLocal(_0x55af0b.game.joaat(_0x567fa5)), _0x4e727f.api.usingSystemAnim(false);
        }), _0x55af0b.events.add('supplyMaterials.putBoxInTrunk', async (_0xe53788, _0x2264f9 = true) => {
          if (!_0x2264f9) return _0x55af0b.attachments.removeLocal(_0x55af0b.game.joaat(_0xe53788)), _0x4e727f.api.play3DSound('box_drop' + _0x5c2d54.u.integer({
            'min': 0x1,
            'max': 0x3
          })), void _0x4e727f.api.stopAnim();

          _0x4e727f.api.usingSystemAnim(true);

          const _0x1977aa = await _0x4e727f.api.taskPlayAnim('anim@heists@load_box', 'load_box_2', 0x0, false, false);

          await _0x55af0b.game.sleep(0x3e8 * _0x1977aa), _0x55af0b.attachments.removeLocal(_0x55af0b.game.joaat(_0xe53788)), _0x4e727f.api.play3DSound('box_drop' + _0x5c2d54.u.integer({
            'min': 0x1,
            'max': 0x3
          })), _0x4e727f.api.usingSystemAnim(false);
        }), _0x55af0b.events.add('playerEnterColshape', async _0x376fad => {
          if (_0x4e727f.api.isAuthed() && _0x55af0b.colshapes.exists(_0x376fad)) return _0x376fad && (_0x376fad.hasVariable('supplyMaterialData') || _0x376fad.hasVariable('wfmMaterialData') || _0x376fad.hasVariable('fzMaterialData')) ? (_0x499ede = _0x376fad, void _0x4e727f.api.displayHelpStringTrans('displayHelpString.takeBox', false, true, 0x1388)) : undefined;
        }), _0x55af0b.events.add('playerExitColshape', async _0x203170 => {
          if (_0x4e727f.api.isAuthed()) return _0x203170 && (_0x203170.hasVariable('supplyMaterialData') || _0x203170.hasVariable('wfmMaterialData') || _0x203170.hasVariable('fzMaterialData')) ? (_0x499ede = null, void _0x55af0b.game.ui.clearHelp(true)) : undefined;
        }), _0x55af0b.events.add('keys.e', async () => {
          _0x55af0b.players.local.vehicle || (_0x499ede && _0x55af0b.colshapes.exists(_0x499ede) && _0x499ede.hasVariable('supplyMaterialData') ? (_0x55af0b.game.ui.clearHelp(true), _0x55af0b.events.callRemote('4137706136', _0x499ede.remoteId), _0x499ede = false) : _0x499ede && _0x55af0b.colshapes.exists(_0x499ede) && _0x499ede.hasVariable('wfmMaterialData') ? (_0x55af0b.game.ui.clearHelp(true), _0x55af0b.events.callRemote('3883370896', _0x499ede.remoteId), _0x499ede = false) : _0x499ede && _0x55af0b.colshapes.exists(_0x499ede) && _0x499ede.hasVariable('fzMaterialData') ? (_0x55af0b.game.ui.clearHelp(true), _0x55af0b.events.callRemote('2349151824', _0x499ede.remoteId), _0x499ede = false) : _0x499ede && (_0x499ede = false));
        });
      },
      0x447: (_0x293b7f, _0x5bac45, _0x1411bf) => {
        'use strict';

        const a0_0x405ade = {
          _0x543ae0: 0x596,
          _0x3aecdc: 0x11dc,
          _0x46b312: 0x16d6,
          _0xf68ec8: 0x1927,
          _0x1a7096: 0x2530,
          _0x3fbe73: 0x1f30
        },
              a0_0x1dc67d = {
          _0x5de637: 0x1d66,
          _0x3c94de: 0x59d,
          _0x5721bf: 0x14d2,
          _0x3d9cd7: 0x1da5,
          _0x3613dd: 0x15b6,
          _0x2d209d: 0x1ffd
        },
              a0_0x2edf3c = {
          _0x606fbb: 0x1edc,
          _0x96427d: 0x1ffd,
          _0x2ed1cb: 0xf86
        };

        _0x1411bf.r(_0x5bac45);

        var _0x3122ac = _0x1411bf(0x16a21),
            _0x384d13 = _0x1411bf(0x161cd);

        const _0x30fa7f = _0x384d13.players.local;

        let _0x2d9a0e;

        const _0x4d8cd4 = {
          'main': {
            0x1: {
              'object': _0x384d13.objects.new(_0x384d13.game.joaat('p_barier_test_s'), new _0x384d13.Vector3(-543.9481, -933.822, 23.69), {
                'rotation': new _0x384d13.Vector3(0.000009965139, -0.5000057, 60.99994),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x384d13.Vector3(-543.9481, -933.822, 23.69), new _0x384d13.Vector3(0.000009965139, -0.5000057, 60.99994)],
                'opened': [new _0x384d13.Vector3(-543.9481, -933.822, 23.69), new _0x384d13.Vector3(4.268868e-7, -79.99987, 60.99995)]
              }
            },
            0x2: {
              'object': _0x384d13.objects.new(_0x384d13.game.joaat('p_barier_test_s'), new _0x384d13.Vector3(-539.821, -925.8173, 23.8), {
                'rotation': new _0x384d13.Vector3(0.000009338149, 1.250002, -118.9996),
                'dimension': -0x1
              }),
              'positions': {
                'closed': [new _0x384d13.Vector3(-539.821, -925.8173, 23.8), new _0x384d13.Vector3(0.000009338149, 1.250002, -118.9996)],
                'opened': [new _0x384d13.Vector3(-539.821, -925.8173, 23.8), new _0x384d13.Vector3(4.268868e-7, -0x50, -118.999)]
              }
            },
            'shape': _0x384d13.colshapes.newSphere(-541.9236, -929.7917, 22.91009, 0xa).isweazelnewsGate = 'main'
          }
        };
        _0x384d13.events.add('playerEnterColshape', _0x586b47 => {
          ['main'].includes(_0x586b47.isweazelnewsGate) && _0x3122ac.api.isGroupMemberOf(_0x30fa7f, 'news') && (_0x2d9a0e = _0x586b47, _0x3122ac.api.displayHelpStringTrans('displayHelpString.openGates', false, true, 0x1388));
        }), _0x384d13.events.add('playerExitColshape', _0x134f8e => {
          _0x134f8e === _0x2d9a0e && (_0x2d9a0e = null, _0x384d13.game.ui.clearHelp(true));
        }), _0x384d13.events.add('keys.e', async () => {
          _0x2d9a0e && _0x2d9a0e.isweazelnewsGate && (_0x384d13.game.ui.clearHelp(true), _0x384d13.events.callRemote('3433343061', _0x2d9a0e.isweazelnewsGate), _0x2d9a0e = null);
        });
        let _0x292ae4 = {
          'main': {
            0x1: null,
            0x2: null
          }
        };

        _0x384d13.events.add('fractions.weazelnews.triggerGates', _0x2e8c39 => {
          const a0_0x2538cf = {
            _0x605101: 0x2606,
            _0x54cffc: 0x16c5,
            _0x51d2ac: 0x263f,
            _0x114c74: 0x2530
          };

          if (_0x4d8cd4[_0x2e8c39]) {
            _0x292ae4.main[0x1] && (_0x292ae4.main[0x1].cancel(), _0x292ae4.main[0x1] = undefined), _0x292ae4.main[0x2] && (_0x292ae4.main[0x2].cancel(), _0x292ae4.main[0x2] = undefined);

            for (let _0x5e9cd7 = 0x1; _0x5e9cd7 <= 0x2; _0x5e9cd7++) {
              const _0xb8ba2b = _0x4d8cd4[_0x2e8c39][_0x5e9cd7.toString()];

              if (!_0xb8ba2b) continue;
              const _0x4ec14c = _0xb8ba2b.object;
              if (!_0x384d13.objects.exists(_0x4ec14c)) return;
              const _0x3d79e1 = _0xb8ba2b.positions.opened,
                    _0x2c15bb = _0xb8ba2b.positions.closed;
              _0x4ec14c.setNoCollision(_0x384d13.players.local.handle, false), _0x4ec14c.position = _0x3d79e1[0x0], _0x4ec14c.rotation = _0x3d79e1[0x1];

              let _0x484be5 = _0x384d13.game.sleep(0x1388).then(() => {
                try {
                  if (!_0x384d13.objects.exists(_0x4ec14c)) return;
                  _0x4ec14c.position = _0x2c15bb[0x0], _0x4ec14c.rotation = _0x2c15bb[0x1], _0x4ec14c.setNoCollision(_0x384d13.players.local.handle, true);
                } catch (_0x3de251) {
                  _0x3122ac.api.sendError(_0x3de251);
                }
              });

              _0x292ae4[_0x2e8c39][_0x5e9cd7.toString()] = _0x484be5;
            }
          }
        });
      },
      0x42fd: (_0x51ab9f, _0x53b973, _0x2eba31) => {
        'use strict';

        const a0_0x4fa611 = {
          _0x39c308: 0x1aab,
          _0x457ef1: 0x16c5,
          _0x23e22e: 0x14d2,
          _0x4578e0: 0xfb1,
          _0x2761c8: 0xfff,
          _0x5dfdf9: 0x15be
        },
              a0_0x139ba4 = {
          _0x5441d5: 0x535,
          _0x6895eb: 0x253d,
          _0xb7a507: 0xc95,
          _0x326319: 0x1925,
          _0x18d8a0: 0x1f0e,
          _0x34088f: 0x535,
          _0x2e1648: 0xf86
        },
              a0_0x25b880 = {
          _0x26b02f: 0x1d66,
          _0x30c90c: 0x24fe,
          _0x3edb19: 0x1992,
          _0x237b63: 0x24fe,
          _0x378284: 0x1992,
          _0x1f18e1: 0x24fe,
          _0x167949: 0x1d9a,
          _0x2ba4ff: 0x1d66,
          _0x1e853a: 0x2606,
          _0x23d2a8: 0xbdd,
          _0x3a123f: 0x22e6,
          _0x1b1240: 0x248,
          _0x5427f5: 0xe48,
          _0x131dca: 0x248,
          _0x2fc56c: 0x2c5,
          _0x10aaf7: 0x1225,
          _0x3677d3: 0x152d,
          _0x45c3ff: 0x718,
          _0x19eadd: 0x91b,
          _0x450dab: 0x11ee,
          _0x14d2a8: 0x1d66,
          _0x25f8f4: 0x2326,
          _0x597fbc: 0x5b9,
          _0x426253: 0x16c5,
          _0x1fd167: 0x1229,
          _0x29ea4e: 0x798,
          _0x25216c: 0x17a7,
          _0x5e20c3: 0x1ad6,
          _0x3e843b: 0x2599,
          _0x25ffb0: 0x235b,
          _0x1863d3: 0x185e,
          _0xecb894: 0xa26,
          _0x463f0c: 0x1700,
          _0x1f361c: 0x235b,
          _0x2cbc85: 0x185e,
          _0x1bd3df: 0x2530,
          _0xa5b7c4: 0x263f,
          _0x352a90: 0x2530,
          _0x38e990: 0x1da5,
          _0x28d269: 0x1855,
          _0x20aa03: 0x2606,
          _0x2986e9: 0x16c5,
          _0x3ef1cd: 0x17f,
          _0x4fad92: 0x2543
        },
              a0_0x2070a6 = {
          _0x1b53cf: 0x258c,
          _0x573a60: 0x19a8,
          _0x212969: 0x1229,
          _0x20d051: 0x850,
          _0xd136f: 0xffb,
          _0x13334f: 0x16c5,
          _0x5090ee: 0x14d2,
          _0x530208: 0xfcd,
          _0x29e46c: 0x112d,
          _0x3369dc: 0xffb
        },
              a0_0x3aefa4 = {
          _0x2b01b2: 0x2530,
          _0x418c20: 0x25da,
          _0x4cc2e2: 0xadd,
          _0x4b0d46: 0x11dc,
          _0x1a0a2d: 0x24a5,
          _0x5cc0b5: 0x24a5,
          _0x429b7b: 0x25da,
          _0x8e77b9: 0x130d
        },
              a0_0x4b59f4 = {
          _0x1e5e99: 0x14d2,
          _0x23077c: 0x1436,
          _0x17b5c5: 0xe9d
        },
              a0_0x1eafa1 = {
          _0x5b1a25: 0x4e9
        },
              a0_0x5b88ed = {
          _0x3a25bd: 0x2606,
          _0x5ec2e6: 0x1291,
          _0xbbcf47: 0x258c,
          _0x8e063: 0x1229,
          _0x1ce405: 0x19a8,
          _0x1bb486: 0x5b9,
          _0x5cd392: 0x2504,
          _0x46bf1b: 0x2071
        },
              a0_0x57aeed = {
          _0x34f2e9: 0x190
        },
              a0_0x5b2cf2 = {
          _0x259ff2: 0x1cb9,
          _0xe4a99b: 0x35c,
          _0x83568f: 0x1cb9,
          _0x32bd4d: 0x191a,
          _0x350bad: 0x191a,
          _0x4341b3: 0x2a2,
          _0x49bba7: 0x1cb9
        },
              a0_0x140dc8 = {
          _0x4ddb30: 0xa76,
          _0x40ddca: 0xd2b,
          _0x4f1c26: 0x17a7,
          _0x251c90: 0xbdd,
          _0x4786de: 0x2072,
          _0x4ce549: 0x22e6,
          _0x21cc08: 0x179d,
          _0x1887dc: 0x248,
          _0x432c96: 0xe48,
          _0x536b4f: 0x248,
          _0x228ce1: 0x248,
          _0x2e8a38: 0x179d,
          _0x186e44: 0x248,
          _0x4132b7: 0x2504,
          _0x4486e2: 0x248,
          _0xfda6b6: 0x2c5,
          _0x2339f0: 0x2054
        },
              a0_0x165930 = {
          _0x3aac16: 0xa9d,
          _0x4c45a7: 0x16c5,
          _0x347832: 0x248
        },
              a0_0x110cbc = {
          _0x13937b: 0x11dc,
          _0xd28e72: 0x1a7d
        },
              a0_0x3746f9 = {
          _0xa2136: 0xbdd,
          _0x571b75: 0x1a7d,
          _0x34f004: 0x16c5,
          _0xf7b0d0: 0x535
        },
              a0_0x51273e = {
          _0x910c03: 0x16c5,
          _0x48dc59: 0x2aa,
          _0xdc59a4: 0xbdd,
          _0x44ee38: 0x1d66,
          _0x2a4888: 0x535,
          _0x283cc7: 0x1a50
        },
              a0_0x59766b = {
          _0x42a400: 0x1a7d,
          _0x2041a5: 0x19d2,
          _0x327e7f: 0x1a7d,
          _0x1885a0: 0x2606,
          _0x48677c: 0x2530,
          _0x2f070b: 0x2662,
          _0x57d1c6: 0x1a12,
          _0x2cc7e2: 0x1ebb
        },
              a0_0x2d4851 = {
          _0x397a7e: 0x2606
        },
              a0_0x3a4075 = {
          _0x25a740: 0x2606,
          _0x5ec940: 0x2530,
          _0x8abaae: 0x2504,
          _0x1e1446: 0x2054,
          _0x210032: 0x11dc,
          _0x1a9ef5: 0x1277
        },
              a0_0x2013d0 = {
          _0x31740: 0x1e30,
          _0x49d61d: 0x1a7d,
          _0x3c9c98: 0x2379,
          _0x5b00ec: 0x235b,
          _0x476a8c: 0x185e,
          _0x1c0743: 0xbdd,
          _0x59cc6a: 0x2504,
          _0x322a90: 0x11dc,
          _0x4b2db1: 0x2422,
          _0x223c03: 0x1277,
          _0x5a9c47: 0x2606,
          _0x2e822d: 0x1d66,
          _0x1ca4c2: 0x1d2
        },
              a0_0x3ac794 = {
          _0x4bd112: 0x1f30,
          _0x55d9bd: 0x185e,
          _0xdc28f3: 0x1f30,
          _0x28f1f1: 0x535
        },
              a0_0x70c37d = {
          _0x54bf60: 0x2504,
          _0x42bc25: 0x2504,
          _0x2df4a5: 0x1f30,
          _0x313b84: 0x2422,
          _0x6bdcef: 0x2504,
          _0x403801: 0x2054,
          _0x5569d6: 0x11dc,
          _0x244842: 0x2422,
          _0x7f69a5: 0x2504
        },
              a0_0x3a834e = {
          _0x58ec9d: 0x258c,
          _0x390f2a: 0x1229,
          _0x4781ae: 0x5b9,
          _0xa1bb55: 0x2504,
          _0x3e0c53: 0x1a7d,
          _0x241241: 0x248
        },
              a0_0xc3450 = {
          _0x5be302: 0x1f30
        },
              a0_0x432274 = {
          _0x8ed2e2: 0x1efe
        },
              a0_0x3e010c = {
          _0x205b6c: 0x16d2,
          _0x512be3: 0x1f30
        },
              a0_0x2eed98 = {
          _0x551878: 0x1efe
        },
              a0_0x19690b = {
          _0x1b015e: 0x1856,
          _0x17ad54: 0x1f30
        },
              a0_0x2f0070 = {
          _0x537c28: 0x1efe
        },
              a0_0x49b479 = {
          _0x43faf7: 0x2174,
          _0x544d1a: 0x1e3d,
          _0x5f31ee: 0x2085,
          _0x581c96: 0x2085,
          _0x462bed: 0x1707,
          _0x10243b: 0x2085,
          _0x5a6650: 0x2085,
          _0xd32d47: 0x1707
        },
              a0_0x54470e = {
          _0x111963: 0x1f30
        };

        _0x2eba31.r(_0x53b973);

        var _0x24d5d2 = _0x2eba31(0x16a21);

        class _0xf070f6 {
          constructor(_0x99f3fd, _0x317cdc) {
            this.position = _0x99f3fd, this.rotation = _0x317cdc;
          }

          ['degToRad'](_0x211568) {
            return _0x211568 * Math.PI / 0xb4;
          }

          ['radToDeg'](_0x133729) {
            return 0xb4 * _0x133729 / Math.PI;
          }

          ['eulerToQuaternion']() {
            let _0x52cc5c = this.degToRad(this.rotation.x),
                _0x1b42a4 = this.degToRad(this.rotation.y),
                _0x3fdec2 = this.degToRad(this.rotation.z);

            return {
              'x': Math.sin(_0x52cc5c / 0x2) * Math.cos(_0x1b42a4 / 0x2) * Math.cos(_0x3fdec2 / 0x2) - Math.cos(_0x52cc5c / 0x2) * Math.sin(_0x1b42a4 / 0x2) * Math.sin(_0x3fdec2 / 0x2),
              'y': Math.cos(_0x52cc5c / 0x2) * Math.sin(_0x1b42a4 / 0x2) * Math.cos(_0x3fdec2 / 0x2) + Math.sin(_0x52cc5c / 0x2) * Math.cos(_0x1b42a4 / 0x2) * Math.sin(_0x3fdec2 / 0x2),
              'z': Math.cos(_0x52cc5c / 0x2) * Math.cos(_0x1b42a4 / 0x2) * Math.sin(_0x3fdec2 / 0x2) - Math.sin(_0x52cc5c / 0x2) * Math.sin(_0x1b42a4 / 0x2) * Math.cos(_0x3fdec2 / 0x2),
              'w': Math.cos(_0x52cc5c / 0x2) * Math.cos(_0x1b42a4 / 0x2) * Math.cos(_0x3fdec2 / 0x2) + Math.sin(_0x52cc5c / 0x2) * Math.sin(_0x1b42a4 / 0x2) * Math.sin(_0x3fdec2 / 0x2)
            };
          }

          ['ForwardVectorFromRotation'](_0x3ce2bd = 0x1) {
            const _0x5a5de9 = this.degToRad(this.rotation.z),
                  _0x5c41e1 = this.degToRad(this.rotation.x),
                  _0x3b4677 = Math.abs(Math.cos(_0x5c41e1));

            return {
              'x': -Math.sin(_0x5a5de9) * (_0x3b4677 * _0x3ce2bd),
              'y': Math.cos(_0x5a5de9) * (_0x3b4677 * _0x3ce2bd),
              'z': Math.sin(_0x5c41e1)
            };
          }

          ['ForwardVector']() {
            const _0x3184b1 = this.eulerToQuaternion();

            return {
              'x': 0x2 * (_0x3184b1.x * _0x3184b1.y - _0x3184b1.w * _0x3184b1.z),
              'y': 0x1 - 0x2 * (_0x3184b1.x * _0x3184b1.x + _0x3184b1.z * _0x3184b1.z),
              'z': 0x2 * (_0x3184b1.y * _0x3184b1.z + _0x3184b1.w * _0x3184b1.x)
            };
          }

          ['Forward'](_0xacea96) {
            const _0x4795ad = this.ForwardVector();

            return {
              'x': this.position.x + _0x4795ad.x * _0xacea96,
              'y': this.position.y + _0x4795ad.y * _0xacea96,
              'z': this.position.z + _0x4795ad.z * _0xacea96
            };
          }

          ['RearVector']() {
            const _0xac4b76 = this.eulerToQuaternion();

            return {
              'x': 0x2 * (_0xac4b76.x * _0xac4b76.y - _0xac4b76.w * _0xac4b76.z),
              'y': 0x1 - 0x2 * (_0xac4b76.x * _0xac4b76.x + _0xac4b76.z * _0xac4b76.z),
              'z': 0x2 * (_0xac4b76.y * _0xac4b76.z + _0xac4b76.w * _0xac4b76.x)
            };
          }

          ['Rear'](_0x5e954e) {
            const _0x523287 = this.ForwardVector();

            return {
              'x': this.position.x + _0x523287.x * -_0x5e954e,
              'y': this.position.y + _0x523287.y * -_0x5e954e,
              'z': this.position.z + _0x523287.z * -_0x5e954e
            };
          }

          ['RightVector']() {
            const _0x39ed91 = this.eulerToQuaternion();

            return {
              'x': 0x1 - 0x2 * (_0x39ed91.y * _0x39ed91.y + _0x39ed91.z * _0x39ed91.z),
              'y': 0x2 * (_0x39ed91.x * _0x39ed91.y + _0x39ed91.w * _0x39ed91.z),
              'z': 0x2 * (_0x39ed91.x * _0x39ed91.z - _0x39ed91.w * _0x39ed91.y)
            };
          }

          ['Right'](_0x508363) {
            const _0x494940 = this.RightVector();

            return {
              'x': this.position.x + _0x494940.x * _0x508363,
              'y': this.position.y + _0x494940.y * _0x508363,
              'z': this.position.z + _0x494940.z * _0x508363
            };
          }

          ['LeftVector'](_0x39c0d9 = 0x1) {
            const _0x531e72 = this.eulerToQuaternion();

            return {
              'x': (0x1 - 0x2 * (_0x531e72.y * _0x531e72.y + _0x531e72.z * _0x531e72.z)) * -_0x39c0d9,
              'y': 0x2 * (_0x531e72.x * _0x531e72.y + _0x531e72.w * _0x531e72.z) * -_0x39c0d9,
              'z': 0x2 * (_0x531e72.x * _0x531e72.z - _0x531e72.w * _0x531e72.y) * -_0x39c0d9
            };
          }

          ['Left'](_0xa2b124) {
            const _0x30e250 = this.LeftVector(_0xa2b124);

            return {
              'x': this.position.x + _0x30e250.x,
              'y': this.position.y + _0x30e250.y,
              'z': this.position.z + _0x30e250.z
            };
          }

          ['UpVector']() {
            const _0x3f1972 = this.eulerToQuaternion();

            return {
              'x': 0x2 * (_0x3f1972.x * _0x3f1972.z + _0x3f1972.w * _0x3f1972.y),
              'y': 0x2 * (_0x3f1972.y * _0x3f1972.z - _0x3f1972.w * _0x3f1972.x),
              'z': 0x1 - 0x2 * (_0x3f1972.x * _0x3f1972.x + _0x3f1972.y * _0x3f1972.y)
            };
          }

          ['Up'](_0x233980) {
            const _0x5c31be = this.UpVector();

            return {
              'x': this.position.x + _0x5c31be.x * _0x233980,
              'y': this.position.y + _0x5c31be.y * _0x233980,
              'z': this.position.z + _0x5c31be.z * _0x233980
            };
          }

        }

        var _0x4c1434 = _0x2eba31(0x159ba),
            _0x90bde5 = _0x2eba31(0x14b3a),
            _0x1c1b09 = _0x2eba31(0xb9cc),
            _0x2a6207 = _0x2eba31(0x161cd);

        class _0x3ec858 {
          constructor() {
            this.isPlaying = false, this.isAiming = false, this.isController = false, this.isPendingHit = false, this.isSpectator = false, this.disableMovement = false, this.gameId = -0x1, this.poolEntity, this.balls = [], this.camera, this.camViewMode = 0x0, this.canShoot = false;
          }

          static ['getTablePosition'](_0x1bb493 = true) {
            if (_0x2a6207.objects.exists(this.poolEntity)) {
              const _0x42ed7a = this.poolEntity.position;
              return _0x1bb493 ? _0x2a6207.game.object.getObjectOffsetFromCoords(_0x42ed7a.x, _0x42ed7a.y, _0x42ed7a.z, this.poolEntity.getRotation(0x2).z + 0x5a, 0.2, 0.15, 0x0) : _0x2a6207.game.object.getObjectOffsetFromCoords(_0x42ed7a.x, _0x42ed7a.y, _0x42ed7a.z, this.poolEntity.getRotation(0x2).z + 0x5a, 0x0, 0x0, 0x0);
            }
          }

          static ['isClosePoolTable'](_0x1a97ae = 0x5) {
            if (!_0x2a6207.objects.exists(this.poolEntity)) return false;
            const _0x28b6e3 = this.poolEntity.position,
                  _0x585b29 = _0x2a6207.players.local.position;
            return _0x24d5d2.api.vdist2(_0x28b6e3, _0x585b29) <= _0x1a97ae;
          }

          static ['isAnyBallExists']() {
            return 'object' == typeof this.balls && this.balls.length > 0x0;
          }

          static async ['createBalls'](_0x5f28bc) {
            this.isAnyBallExists() && this.destroyBalls(), this.balls = [];

            for (const _0x495b9f of _0x5f28bc) {
              const _0x14adf8 = _0x4c1434.A.find(_0x10815c => _0x10815c.id == _0x495b9f.id),
                    _0x1e7a51 = _0x2a6207.game.joaat(_0x14adf8.model),
                    _0x5d8580 = _0x2a6207.players.local.dimension,
                    _0x521e61 = this.getTablePosition(),
                    _0x2daed2 = this.poolEntity.getRotation(0x2).z + 0x5a,
                    _0x528ad8 = _0x2a6207.game.object.getObjectOffsetFromCoords(_0x521e61.x, _0x521e61.y, _0x521e61.z, _0x2daed2, _0x495b9f.offset.x, _0x495b9f.offset.y, _0x495b9f.offset.z),
                    _0x4afdff = new _0x2a6207.Vector3(0x0, 0x0, 0x0),
                    _0x576e9f = 0xff,
                    _0x395242 = _0x2a6207.objects.new(_0x1e7a51, _0x528ad8, {
                'dimension': _0x5d8580,
                'rotation': _0x4afdff,
                'alpha': _0x576e9f
              });

              for (_0x395242.ballId = _0x495b9f.id; _0x395242.handle <= 0x0;) await _0x2a6207.game.sleep(0x0);

              _0x2a6207.objects.exists(_0x395242) && (_0x395242.setCoords(_0x528ad8.x, _0x528ad8.y, _0x528ad8.z, true, true, true, false), this.balls.push(_0x395242));
            }
          }

          static ['updateBalls'](_0x36fd61) {
            if (undefined === this.balls) return this.createBalls(_0x36fd61);

            for (const _0x157ce8 of _0x36fd61) {
              const _0x5dd81b = this.balls.find(_0x4b8ae1 => _0x4b8ae1.ballId == _0x157ce8.id);

              if (!_0x2a6207.objects.exists(_0x5dd81b) || _0x5dd81b.handle <= 0x0) continue;

              const _0x22aeae = this.getTablePosition(false),
                    _0x320380 = this.poolEntity.getRotation(0x2).z + 0x0,
                    _0x2091cc = _0x2a6207.game.object.getObjectOffsetFromCoords(_0x22aeae.x, _0x22aeae.y, _0x22aeae.z, _0x320380, _0x157ce8.offset.x, _0x157ce8.offset.y, _0x157ce8.offset.z);

              _0x5dd81b.setCoords(_0x2091cc.x, _0x2091cc.y, _0x2091cc.z, true, true, true, false);
            }
          }

          static ['destroyBalls']() {
            if (this.isAnyBallExists()) {
              for (const _0x2c544b of this.balls) _0x2a6207.objects.exists(_0x2c544b) && _0x2c544b.destroy();

              this.balls = [];
            }
          }

          static ['destroyBall'](_0x404223) {
            const _0x280a8a = this.balls.findIndex(_0x5c93ae => _0x5c93ae.ballId == _0x404223);

            if (-0x1 == _0x280a8a) return;
            const _0x22826b = this.balls[_0x280a8a];
            _0x2a6207.objects.exists(_0x22826b) && (_0x22826b.destroy(), this.balls.splice(_0x280a8a, 0x1));
          }

          static ['freezeBalls'](_0x4c2bea) {
            if (!(undefined === this.balls || this.balls.length <= 0x0)) {
              for (const _0x1ef3a1 of this.balls) !_0x2a6207.objects.exists(_0x1ef3a1) || _0x1ef3a1.handle <= 0x0 || (_0x1ef3a1.setRecordsCollisions(!_0x4c2bea), _0x1ef3a1.setCollision(!_0x4c2bea, !_0x4c2bea), _0x1ef3a1.setHasGravity(!_0x4c2bea), _0x1ef3a1.freezePosition(_0x4c2bea), _0x1ef3a1.setVelocity(0x0, 0x0, 0x0));
            }
          }

          static ['setupBallsPhysic']() {
            const _0x4c3a39 = 0x154,
                  _0xbd5ff7 = 0x1,
                  _0x409209 = 0.075,
                  _0x55d1eb = 0.02,
                  _0x465e2d = 0.02,
                  _0x5b2c61 = 0.9,
                  _0x367ab2 = 0.05,
                  _0x32d8fb = 0.05,
                  _0x3ed038 = -0x1,
                  _0x5d45ab = 62.83186,
                  _0x4f8200 = 0x0;

            for (const _0x58aeb3 of this.balls) !_0x2a6207.objects.exists(_0x58aeb3) || _0x58aeb3.handle <= 0x0 || _0x58aeb3.oncePhysics || (_0x58aeb3.oncePhysics = true, _0x58aeb3.setPhysicsParams(_0x4c3a39, _0xbd5ff7, _0x409209, _0x55d1eb, _0x465e2d, _0x5b2c61, _0x367ab2, _0x32d8fb, _0x3ed038, _0x5d45ab, _0x4f8200), _0x58aeb3.setActivatePhysicsAsSoonAsItIsUnfrozen(true));
          }

          static ['sendBallsUpdateToServer']() {
            const _0x302677 = [];

            for (const _0x579574 of this.balls) {
              if (!_0x2a6207.objects.exists(_0x579574)) continue;

              const _0x5ad447 = _0x579574.ballId,
                    _0x5aed17 = _0x579574.getCoords(true),
                    _0x2dff29 = this.poolEntity.getOffsetFromGivenWorldCoords(_0x5aed17.x, _0x5aed17.y, _0x5aed17.z);

              undefined !== _0x2dff29 && 'number' == typeof _0x2dff29.x && _0x302677.push({
                'id': _0x5ad447,
                'offset': _0x2dff29
              });
            }

            _0x2a6207.events.callRemoteUnreliable('3185295647', JSON.stringify(_0x302677));
          }

          static ['isEveryBallsStopped']() {
            if ('object' != typeof this.balls || this.balls.length <= 0x0) return true;
            let _0x358716 = true;

            for (const _0x25423f of this.balls) {
              const _0x3005de = _0x25423f.getVelocity();

              if (Math.sqrt(Math.pow(_0x3005de.x, 0x2) + Math.pow(_0x3005de.y, 0x2) + Math.pow(_0x3005de.z, 0x2)) >= 0.145) {
                _0x358716 = false;
                break;
              }
            }

            return _0x358716;
          }

          static ['getCurrentHighestBallSpeed']() {
            if ('object' != typeof this.balls || this.balls.length <= 0x0) return 0x0;
            let _0x2e2e0d = 0x0;

            for (const _0x117a58 of this.balls) {
              const _0xce4881 = _0x117a58.getVelocity(),
                    _0x2e522b = Math.sqrt(Math.pow(_0xce4881.x, 0x2) + Math.pow(_0xce4881.y, 0x2) + Math.pow(_0xce4881.z, 0x2));

              _0x2e522b > _0x2e2e0d && (_0x2e2e0d = _0x2e522b);
            }

            return _0x2e2e0d;
          }

          static ['isBallAtAnyHole'](_0x5ddf50) {
            if (!_0x2a6207.objects.exists(_0x5ddf50)) return false;
            const _0x283f32 = _0x90bde5.Z.maxDistanceBallToHole;
            let _0x230a77 = false;

            const _0x16169f = _0x5ddf50.getCoords(true);

            for (const _0x3b979c of _0x4c1434.j) {
              const _0xfa57f0 = this.getTablePosition(),
                    _0x293b33 = this.poolEntity.getRotation(0x2).z + 0x5a,
                    _0x5d943c = _0x2a6207.game.object.getObjectOffsetFromCoords(_0xfa57f0.x, _0xfa57f0.y, _0xfa57f0.z, _0x293b33, _0x3b979c.x, _0x3b979c.y, _0x3b979c.z);

              if (undefined === _0x5d943c || 'number' != typeof _0x5d943c.x) continue;

              if (_0x24d5d2.api.vdist2(_0x5d943c, _0x16169f) <= _0x283f32) {
                _0x230a77 = true;
                break;
              }
            }

            return _0x230a77;
          }

          static ['isAnyBallAtHoleId'](_0x2718da) {
            const _0x12e94c = _0x4c1434.j[_0x2718da];
            if (!_0x12e94c) return false;

            const _0x57ac08 = this.getTablePosition(),
                  _0x520b89 = this.poolEntity.getRotation(0x2).z + 0x5a,
                  _0x237a4a = _0x2a6207.game.object.getObjectOffsetFromCoords(_0x57ac08.x, _0x57ac08.y, _0x57ac08.z, _0x520b89, _0x12e94c.x, _0x12e94c.y, _0x12e94c.z);

            let _0x16b2c2 = false;

            for (const _0x36f19 of this.balls) {
              if (!_0x2a6207.objects.exists(_0x36f19)) continue;

              const _0x388a10 = _0x36f19.getCoords(true);

              if (_0x24d5d2.api.vdist2(_0x237a4a, _0x388a10) <= _0x90bde5.Z.maxDistanceBallToHole) {
                _0x16b2c2 = true;
                break;
              }
            }

            return _0x16b2c2;
          }

          static ['findAnyBallAtHole']() {
            if ('object' != typeof this.balls || this.balls.length <= 0x0) return false;

            let _0x403aed;

            for (const _0x3bfda2 of this.balls) if (this.isBallAtAnyHole(_0x3bfda2)) {
              _0x403aed = _0x3bfda2;
              break;
            }

            return _0x403aed;
          }

          static ['filterBallsAtAnyHole']() {
            if ('object' != typeof this.balls || this.balls.length <= 0x0) return [];
            let _0xe1737c = [];

            for (const _0x442de3 of this.balls) this.isBallAtAnyHole(_0x442de3) && _0xe1737c.push(_0x442de3);

            return _0xe1737c;
          }

          static ['findCueBall']() {
            if ('object' != typeof this.balls || this.balls.length <= 0x0) return;

            const _0xdc9004 = this.balls.find(_0xb626b6 => 0x1 == _0xb626b6.ballId);

            return undefined !== _0xdc9004 && _0x2a6207.objects.exists(_0xdc9004) ? _0xdc9004 : undefined;
          }

          static ['doesAimingCameraExists']() {
            return undefined !== this.camera && _0x2a6207.cameras.exists(this.camera);
          }

          static ['setupCamera']() {
            const _0x2f89fb = this.findCueBall();

            if (undefined === _0x2f89fb) return;

            const _0x4e3f08 = _0x2f89fb.getCoords(true),
                  _0x1ae0dd = _0x2a6207.game.cam.getGameplayCamRot(0x2),
                  _0x3cd761 = new _0xf070f6(_0x4e3f08, _0x1ae0dd).Rear(1.5),
                  _0x3ca363 = { ..._0x3cd761,
              'z': _0x3cd761.z + 0.15
            },
                  _0x16e9ce = _0x4e3f08;

            this.camera = _0x2a6207.cameras.new('default', _0x3ca363, _0x1ae0dd, 0x3c), this.camera.pointAtCoord(_0x16e9ce.x, _0x16e9ce.y, _0x16e9ce.z), this.camera.setActive(true), _0x2a6207.game.cam.renderScriptCams(true, true, 0x1f4, true, false, 0x0), _0x24d5d2.api.toggleRadar(false), _0x24d5d2.api.toggleHud(false), _0x24d5d2.api.toggleChat(false);
          }

          static ['setCamViewMode'](_0x3003e5 = -0x1) {
            if (!this.doesAimingCameraExists()) return;
            -0x1 == _0x3003e5 ? _0x3003e5 = this.camViewMode : this.camViewMode = _0x3003e5;

            const _0xa4df2c = this.findCueBall().getCoords(true),
                  _0x3a316a = this.getTablePosition();

            _0x2a6207.game.cam.getGameplayCamRot(0x2);

            switch (_0x3003e5) {
              case 0x0:
                this.camera.setCoord(_0xa4df2c.x, _0xa4df2c.y, _0xa4df2c.z + 1.5), this.camera.stopPointing(), this.camera.setRot(-0x5a, 0x0, this.poolEntity.getRotation(0x2).z - 0x5a, 0x2), this.camera.setFov(0x3c);
                break;

              case 0x1:
                this.camera.setCoord(_0x3a316a.x, _0x3a316a.y, _0x3a316a.z + 3.2), this.camera.stopPointing(), this.camera.setRot(-0x5a, 0x0, this.poolEntity.getRotation(0x2).z - 0x5a, 0x2), this.camera.setFov(0x3c);
                break;

              case 0x2:
                this.camera.setCoord(_0x3a316a.x, _0x3a316a.y, _0x3a316a.z + 2.5), this.camera.stopPointing(), this.camera.setRot(-0x5a, 0x0, this.poolEntity.getRotation(0x2).z - 0x5a, 0x2), this.camera.setFov(0x3c);
            }
          }

          static ['destroyCamera']() {
            this.doesAimingCameraExists() && (_0x2a6207.game.cam.renderScriptCams(false, true, 0x0, false, false, 0x0), this.camera.setActive(false), this.camera.destroy(true), this.camera = undefined, _0x24d5d2.api.toggleRadar(true), _0x24d5d2.api.toggleHud(true), _0x24d5d2.api.toggleChat(true));
          }

          static ['findAnyBallInRange'](_0x391ea7, _0xbc8efb = 0.1, _0x27bfda = -0x1, _0x269926 = 0.1) {
            if ('object' != typeof this.balls) return;

            let _0x4307f4,
                _0x2dba11 = _0xbc8efb + 0.1;

            for (const _0x22a103 of this.balls) {
              if (!_0x2a6207.objects.exists(_0x22a103)) continue;
              if (_0x22a103.handle == _0x27bfda) continue;

              const _0x854820 = _0x24d5d2.api.vdist2(_0x391ea7, _0x22a103.getCoords(true));

              if (_0x854820 > _0xbc8efb) continue;
              if (_0x854820 > _0x2dba11) continue;

              const _0x359889 = _0x22a103.getVelocity();

              _0x269926 > Math.sqrt(Math.pow(_0x359889.x, 0x2) + Math.pow(_0x359889.y, 0x2) + Math.pow(_0x359889.z, 0x2)) || (_0x2dba11 = _0x854820, _0x4307f4 = _0x22a103);
            }

            return _0x4307f4;
          }

          static ['setCanShoot'](_0x3bde5c) {
            this.canShoot = _0x3bde5c;
          }

          static ['setupInstructions']() {
            this.destroyInstructions(), this.instructionalButtons || (this.instructionalButtons = new _0x1c1b09.InstructionalButtons(-0x1), this.instructionalButtons.addButton('ibuttons.aim', 0x19), this.instructionalButtons.addButton('ibuttons.hit', 0x18), this.instructionalButtons.addButton('ibuttons.camera', 'V'), this.instructionalButtons.isActive() || this.instructionalButtons.toggleHud(true));
          }

          static ['destroyInstructions']() {
            this.instructionalButtons && (this.instructionalButtons.resetBar(), this.instructionalButtons = undefined);
          }

          static ['resetClientCameraIfExists']() {
            this.destroyCamera();
          }

        }

        var _0x4254be = _0x2eba31(0x161cd);

        _0x2eba31(0xd194), _0x2eba31(0x5d14);

        var _0x7498d0 = _0x2eba31(0x161cd);

        _0x7498d0.events.add('client.pool.game.init', (_0x327a1d, _0x19c160, _0x37895c, _0xa9b66b) => ((_0x44a734, _0x202054, _0x1e3cd8, _0x579dce = false) => {
          const _0x351e9f = _0x4254be.objects.atRemoteId(_0x202054);

          undefined !== _0x351e9f && (_0x3ec858.isPlaying = true, _0x3ec858.isAiming = false, _0x3ec858.isController = false, _0x3ec858.isPendingHit = false, _0x3ec858.isSpectator = _0x579dce, _0x3ec858.disableMovement = false, _0x3ec858.gameId = _0x44a734, _0x3ec858.poolEntity = _0x351e9f, _0x3ec858.camViewMode = 0x0, _0x3ec858.createBalls(_0x1e3cd8), _0x579dce || _0x3ec858.setupInstructions());
        })(_0x327a1d, _0x19c160, JSON.parse(_0x37895c), _0xa9b66b)), _0x7498d0.events.add('client.pool.game.deinit', () => (_0x3ec858.isPlaying = false, _0x3ec858.isAiming = false, _0x3ec858.isController = false, _0x3ec858.isPendingHit = false, _0x3ec858.isSpectator = false, _0x3ec858.disableMovement = false, _0x3ec858.gameId = -0x1, _0x3ec858.poolEntity = undefined, _0x3ec858.camViewMode = 0x0, _0x3ec858.destroyBalls(), void _0x3ec858.destroyInstructions())), _0x7498d0.events.add('client.pool.game.controller.change.state', _0xcb471c => (_0x18f9df => {
          _0x3ec858.isController = _0x18f9df;
        })(_0xcb471c)), _0x7498d0.events.add('client.pool.game.update.balls', _0x4f2f81 => {
          return _0x12d3fa = JSON.parse(_0x4f2f81), void (_0x3ec858.isAnyBallExists() ? _0x3ec858.updateBalls(_0x12d3fa) : _0x3ec858.createBalls(_0x12d3fa));

          var _0x12d3fa;
        }), _0x7498d0.events.add('client.pool.game.destroy.ball', _0x2ec81c => (_0x31a5fd => {
          _0x3ec858.destroyBall(_0x31a5fd);
        })(_0x2ec81c)), _0x7498d0.events.add('client.pool.game.ball.set.position', (_0x46096d, _0x33d36a) => ((_0x3dbcfc, _0xe77eb8) => {
          if (!Array.isArray(_0x3ec858.balls)) return;

          const _0xb2277 = _0x3ec858.balls.find(_0x37e340 => _0x37e340.ballId == _0x3dbcfc);

          if (!_0x4254be.objects.exists(_0xb2277) || !_0x4254be.objects.exists(_0x3ec858.poolEntity)) return;

          const _0x3ffd7d = _0x3ec858.getTablePosition(),
                _0x4d87e8 = (_0x3ec858.poolEntity.getHeading() + 0xb4) / 0x168,
                _0x592bce = _0x4254be.game.object.getObjectOffsetFromCoords(_0x3ffd7d.x, _0x3ffd7d.y, _0x3ffd7d.z, _0x4d87e8, _0xe77eb8.x, _0xe77eb8.y, _0xe77eb8.z);

          _0xb2277.freezePosition(true), _0xb2277.setVelocity(0x0, 0x0, 0x0), _0xb2277.setCoords(_0x592bce.x, _0x592bce.y, _0x592bce.z, true, true, true, false), _0xb2277.atHole = false;
        })(_0x46096d, JSON.parse(_0x33d36a))), _0x7498d0.events.add('client.pool.game.canShoot', _0x3d7e83 => (_0x51a5e4 => {
          _0x3ec858.setCanShoot(_0x51a5e4);
        })(_0x3d7e83)), _0x7498d0.events.add('client.pool.game.resetCameraIfExists', () => {
          _0x3ec858.resetClientCameraIfExists();
        }), _0x7498d0.events.add('on.pool.game.ball.register.collision', (_0x287e0f, _0x494259) => {
          _0x7498d0.events.callRemoteUnreliable('3150922022', _0x3ec858.gameId, '8ball/BallsCollide');
        }), _0x7498d0.events.add('on.pool.game.ball.fall.into.hole', (_0x21252a, _0x34649c) => {
          _0x7498d0.events.callRemoteUnreliable('3150922022', _0x3ec858.gameId, '8ball/Hole');
        });

        var _0x2664f7 = _0x2eba31(0x161cd);

        const _0x31f033 = new Set();

        _0x2664f7.events.add('render', () => {
          _0x31f033.forEach(_0x482a84 => {
            if (!_0x2664f7.objects.exists(_0x482a84) || _0x482a84.handle <= 0x0 || !_0x482a84.slideData) return _0x31f033.delete(_0x482a84), 'object' == typeof _0x482a84 && _0x482a84.slideReject('Mp object expired!'), delete _0x482a84.slideResolve, delete _0x482a84.slideReject, void delete _0x482a84.slideData;
            const {
              fromVector: _0x579697,
              toVector: _0x4e2138,
              speed: _0x56cac7,
              collision: _0xafa46e
            } = _0x482a84.slideData;
            return _0x482a84.slide(_0x4e2138.x, _0x4e2138.y, _0x4e2138.z, _0x56cac7, _0x56cac7, _0x56cac7, _0xafa46e) ? (_0x31f033.delete(_0x482a84), _0x482a84.slideResolve('Mp object slide finished!'), delete _0x482a84.slideResolve, delete _0x482a84.slideReject, void delete _0x482a84.slideData) : undefined;
          });
        });

        var _0x3a028f = _0x2eba31(0x66f9),
            _0x3c14df = _0x2eba31(0x161cd);

        let _0x491aec = 'none',
            _0x18f231 = -0x1;

        _0x3c14df.events.add('render', () => {
          if (!_0x3ec858.isPlaying || !_0x3ec858.isController || _0x18f231 + _0x90bde5.Z.syncBallsTickEvery > Date.now()) return;

          const _0x5aaebe = _0x3ec858.isEveryBallsStopped();

          'move' == _0x491aec && _0x5aaebe || !_0x3c14df.objects.exists(_0x3ec858.balls[0x0]) ? (_0x3ec858.sendBallsUpdateToServer(), _0x3ec858.destroyCamera(), _0x3ec858.freezeBalls(true), _0x3ec858.isPendingHit = false, _0x3c14df.events.callRemote('884595686')) : 'move' == _0x491aec && _0x90bde5.Z.syncBallsMovement && !_0x5aaebe && _0x3ec858.sendBallsUpdateToServer(), _0x491aec = _0x5aaebe ? 'stopped' : 'move', _0x18f231 = Date.now();
        });

        let _0x2ace38,
            _0x2bad1d,
            _0x1d3bed = -0x1;

        _0x3c14df.events.add('render', () => {
          if (!_0x3ec858.isPlaying || !_0x3ec858.isController || !_0x3ec858.isAiming || !_0x90bde5.Z.syncCueAiming || _0x1d3bed + _0x90bde5.Z.syncCueAimingTickEvery > Date.now() || !_0x3c14df.objects.exists(_0x2ace38)) return;

          const _0x28776e = _0x2ace38.getCoords(true),
                _0xe26b28 = _0x2ace38.getRotation(0x2);

          _0x3c14df.events.callRemoteUnreliable('3052894615', JSON.stringify(_0x28776e), JSON.stringify(_0xe26b28)), _0x1d3bed = Date.now();
        }), _0x3c14df.events.add('client.pool.game.destroy.temp.cue', () => {
          undefined !== _0x2ace38 && _0x3c14df.objects.exists(_0x2ace38) && (_0x2ace38.destroy(), _0x2ace38 = undefined);
        }), _0x3c14df.events.add('client.pool.game.update.temp.cue', async (_0x521289, _0x476708) => {
          if (_0x90bde5.Z.syncCueAiming && !_0x3c14df.objects.exists(_0x2ace38)) {
            const _0x29ceaf = _0x3c14df.game.joaat('prop_pool_cue'),
                  _0x2dd1b9 = 0xb9,
                  _0xb44746 = _0x3c14df.players.local.dimension,
                  _0x56b827 = JSON.parse(_0x521289),
                  _0xdbed34 = JSON.parse(_0x476708);

            _0x2ace38 = await (0x0, _0x3a028f.n)(_0x29ceaf, _0x56b827, {
              'rotation': _0xdbed34,
              'alpha': _0x2dd1b9,
              'dimension': _0xb44746
            }), _0x2ace38.setCollision(false, true), _0x2ace38.setNoCollision(_0x3c14df.players.local.handle, false), _0x3c14df.players.local.setNoCollision(_0x2ace38.handle, false);
          }
        });
        let _0x27b0d8 = true,
            _0x304e5b = 0.45,
            _0x42b514 = 3.5,
            _0x3debfc = 0x0;
        _0x3c14df.events.add('render', async () => {
          const a0_0x43546c = {
            _0x4d5bc3: 0x718,
            _0x281106: 0x2543,
            _0x525af8: 0x1d66,
            _0x4de1bd: 0x1870,
            _0x4dc5f9: 0x91b
          },
                a0_0x2c01b0 = {
            _0x39a6d1: 0x25da,
            _0x129cfe: 0x24a5
          };

          if (_0x3ec858.isPlaying && _0x3ec858.isClosePoolTable()) {
            if (_0x3c14df.game.controls.disableControlAction(0x0, 0x18, true), _0x3c14df.game.controls.disableControlAction(0x0, 0x101, true), _0x3c14df.game.controls.disableControlAction(0x0, 0x19, true), _0x3c14df.game.controls.disableControlAction(0x0, 0x8c, true), _0x3c14df.game.controls.disableControlAction(0x0, 0x15, true), _0x3c14df.game.controls.disableControlAction(0x0, 0x16, true), _0x3c14df.game.controls.isDisabledControlJustPressed(0x0, 0x18) && !_0x3ec858.isPendingHit && _0x3ec858.isAiming, _0x3c14df.game.controls.isDisabledControlJustReleased(0x0, 0x18) && !_0x3ec858.isPendingHit && _0x3ec858.isAiming) {
              undefined !== _0x2bad1d && (clearInterval(_0x2bad1d), _0x2bad1d = undefined);

              const _0x1adfc9 = _0x3ec858.findCueBall();

              if (undefined === _0x1adfc9) return;
              if (!_0x3c14df.objects.exists(_0x2ace38)) return;

              const _0x477f5c = _0x3ec858.getTablePosition(),
                    _0x1a3600 = _0x1adfc9.getCoords(true),
                    _0x4a6d1e = new _0xf070f6(_0x1a3600, {
                'x': 0x0,
                'y': 0x0,
                'z': _0x3debfc
              }),
                    _0x1b7ad6 = _0x4a6d1e.Rear(1.21),
                    _0x171201 = _0x4a6d1e.Rear(0.8),
                    _0x38d19a = _0x4a6d1e.ForwardVectorFromRotation(_0x304e5b * _0x42b514);

              _0x3ec858.camera.setCoord(_0x477f5c.x, _0x477f5c.y, _0x477f5c.z + 3.2), _0x3ec858.camera.stopPointing(), _0x3ec858.camera.setRot(-0x5a, 0x0, _0x3ec858.poolEntity.getRotation(0x2).z - 0x5a, 0x2), _0x3ec858.camera.setFov(0x3c), _0x3ec858.freezeBalls(false), _0x3ec858.setupBallsPhysic(), _0x3ec858.isPendingHit = true, _0x3ec858.isAiming = false, _0x3ec858.disableMovement = true, ((_0x29f24c, _0x3aa6c7, _0x26c400, _0x5e5a52 = 0.05, _0x33fe25 = false) => (undefined !== _0x3aa6c7 && 'number' == typeof _0x3aa6c7.x && _0x29f24c.setCoords(_0x3aa6c7.x, _0x3aa6c7.y, _0x3aa6c7.z, true, true, true, false), new Promise((_0x44722f, _0x5f180a) => {
                _0x29f24c.slideData = {
                  'fromVector': _0x3aa6c7,
                  'toVector': _0x26c400,
                  'speed': _0x5e5a52,
                  'collision': _0x33fe25
                }, _0x29f24c.slideResolve = _0x44722f, _0x29f24c.slideReject = _0x5f180a, _0x31f033.add(_0x29f24c);
              })))(_0x2ace38, _0x1b7ad6, _0x171201, 0.01, false).then(() => {
                _0x3ec858.disableMovement = false, _0x1adfc9.setVelocity(_0x38d19a.x, _0x38d19a.y, 0x0), _0x3c14df.events.callRemote('3245044792'), _0x3c14df.events.callRemote('2912897412'), _0x3c14df.game.sleep(0xfa).then(() => {
                  _0x3c14df.objects.exists(_0x2ace38) && (_0x2ace38.destroy(), _0x2ace38 = undefined);
                });
              }).catch(_0x2b4e58 => _0x24d5d2.api.chatPush('8pool error: ' + _0x2b4e58));
            }

            if (_0x3c14df.game.controls.isDisabledControlJustReleased(0x0, 0x19) && !_0x3ec858.isSpectator && !_0x3ec858.isPendingHit && _0x3ec858.isEveryBallsStopped() && (!_0x3c14df.objects.exists(_0x2ace38) || _0x3ec858.isAiming) && true === _0x3ec858.canShoot) {
              if (_0x3ec858.isAiming = !_0x3ec858.isAiming, _0x3ec858.disableMovement = !_0x3ec858.disableMovement, _0x3ec858.isAiming) {
                const _0x4080d5 = _0x3ec858.findCueBall();

                if (undefined === _0x4080d5) return;
                _0x3debfc = _0x3c14df.game.cam.getGameplayCamRot(0x2).z;

                const _0x2499f2 = _0x4080d5.getCoords(true),
                      _0x1ecf26 = {
                  'x': 0x0,
                  'y': 0x0,
                  'z': _0x3debfc
                },
                      _0xc74c9e = new _0xf070f6(_0x2499f2, _0x1ecf26),
                      _0x469f03 = _0x3c14df.game.joaat('prop_pool_cue'),
                      _0x55bba = _0xc74c9e.Rear(1.2),
                      _0x2b7ba = _0x3c14df.players.local.dimension,
                      _0xee6e6e = 0xff;

                _0x2ace38 = await (0x0, _0x3a028f.n)(_0x469f03, { ..._0x55bba,
                  'z': _0x55bba.z - 0.05
                }, {
                  'rotation': _0x1ecf26,
                  'alpha': _0xee6e6e,
                  'dimension': _0x2b7ba
                }), _0x2ace38.setCollision(false, true), _0x2ace38.setNoCollision(_0x3c14df.players.local.handle, false), _0x3c14df.players.local.setNoCollision(_0x2ace38.handle, false), _0x3ec858.setupCamera(), _0x3c14df.events.callRemote('467644310'), undefined !== _0x2bad1d && (clearInterval(_0x2bad1d), _0x2bad1d = undefined), _0x2bad1d = setInterval(() => {
                  _0x27b0d8 ? (_0x304e5b += 0.1, _0x42b514 < 0xa && (_0x42b514 += 0.1), _0x304e5b >= 0.95 && (_0x27b0d8 = false)) : (_0x304e5b -= 0.1, _0x42b514 > 3.5 && (_0x42b514 -= 0.1), _0x304e5b <= 0.45 && (_0x27b0d8 = true));
                }, 0xd2);
              } else _0x3ec858.destroyCamera(), _0x3c14df.objects.exists(_0x2ace38) && (_0x2ace38.destroy(), _0x2ace38 = undefined), _0x3c14df.events.callRemote('2912897412');
            }
          }
        }), _0x3c14df.events.add('render', () => {
          if (!_0x3ec858.isPlaying || !_0x3ec858.isAiming || !_0x3ec858.isController || _0x3ec858.isPendingHit || !_0x3ec858.isClosePoolTable() || !_0x3c14df.objects.exists(_0x2ace38)) return;

          const _0x1e166c = _0x3ec858.findCueBall();

          if (undefined === _0x1e166c) return;

          const _0x602155 = _0x1e166c.getCoords(true),
                _0x1c0c36 = {
            'x': 0x0,
            'y': 0x0,
            'z': _0x3debfc
          },
                _0x4db9f3 = new _0xf070f6(_0x602155, _0x1c0c36),
                _0x44f9ad = _0x4db9f3.Rear(1.2);

          if (_0x2ace38.setCoords(_0x44f9ad.x, _0x44f9ad.y, _0x602155.z, true, true, true, false), _0x2ace38.setRotation(0x5a, 0xb4, _0x1c0c36.z, 0x2, true), _0x1e166c.setRotation(0x0, 0x0, _0x1c0c36.z, 0x2, true), _0x3c14df.keys.isDown(0x41) || _0x3c14df.keys.isDown(0x25) ? _0x3debfc -= 0.65 : (_0x3c14df.keys.isDown(0x44) || _0x3c14df.keys.isDown(0x27)) && (_0x3debfc += 0.65), _0x3ec858.doesAimingCameraExists() && 0x0 === _0x3ec858.camViewMode && _0x3ec858.camera.setRot(-0x5a, 0x0, _0x3debfc, 0x2), _0x3c14df.game.controls.isDisabledControlJustReleased(0x0, 0x0)) {
            const _0x19fecc = _0x3ec858.camViewMode + 0x1 == 0x3 ? 0x0 : _0x3ec858.camViewMode + 0x1;

            _0x3ec858.setCamViewMode(_0x19fecc);
          }

          const _0x18f2ec = _0x4db9f3.Forward(0.95),
                _0x3e491a = _0x4db9f3.Forward(_0x304e5b);

          _0x4db9f3.ForwardVector(_0x304e5b * _0x42b514), (_0x3c14df.game.graphics.drawLine(_0x602155.x, _0x602155.y, _0x602155.z, _0x18f2ec.x, _0x18f2ec.y, _0x18f2ec.z, 0x0, 0xff, 0xff, 0xff), _0x3c14df.game.graphics.drawLine(_0x602155.x, _0x602155.y, _0x602155.z, _0x3e491a.x, _0x3e491a.y, _0x3e491a.z, 0xff, 0xff, 0xff, 0xff), _0x3c14df.game.graphics.drawMarker(0x1c, _0x3e491a.x, _0x3e491a.y, _0x3e491a.z, 0x0, 0x0, 0x0, 0x0, 0x5a, 0x0, 0.01, 0.01, 0.01, 0xff, 0xff, 0xff, 0x64, false, false, 0x2, false, '', '', false));
        }), _0x3c14df.events.add('render', () => {
          if (_0x3ec858.isPlaying && _0x3ec858.isController && _0x3ec858.isPendingHit) {
            const _0x47b61b = _0x3ec858.filterBallsAtAnyHole();

            if (_0x47b61b && _0x47b61b.length) {
              for (const _0x372d2d of _0x47b61b) 'number' == typeof _0x372d2d.ballId && (_0x372d2d.atHole || (_0x372d2d.atHole = true, _0x3c14df.events.call('on.pool.game.ball.fall.into.hole', _0x372d2d, _0x3ec858.balls.length - 0x1 == 0x1), _0x3c14df.events.callRemote('2321216738', _0x372d2d.ballId)));
            }
          }

          if (_0x3ec858.isPlaying && _0x3ec858.disableMovement && _0x3c14df.game.controls.disableAllControlActions(0x0), _0x3ec858.balls && 'object' == typeof _0x3ec858.balls && _0x3ec858.balls.length > 0x0 && !_0x3ec858.isEveryBallsStopped()) for (const _0x51c7c2 of _0x3ec858.balls) {
            if (!_0x3c14df.objects.exists(_0x51c7c2)) continue;
            if ('number' == typeof _0x51c7c2.lastCollisionUnix && _0x51c7c2.lastCollisionUnix + 0x514 > Date.now()) continue;

            const _0x467b97 = _0x51c7c2.getCoords(true);

            for (let _0x2ac98e = 0x0; 0x168 != _0x2ac98e; _0x2ac98e += 0x1e) {
              const _0x19a1f4 = new _0xf070f6(_0x467b97, {
                'x': 0x0,
                'y': 0x0,
                'z': _0x2ac98e
              }).Forward(_0x90bde5.Z.maxDistanceBallToBallColission),
                    _0x1d1336 = _0x3ec858.findAnyBallInRange(_0x19a1f4, _0x90bde5.Z.maxDistanceBallToBallColission, _0x51c7c2.handle);

              if (undefined !== _0x1d1336 && (undefined === _0x1d1336 || _0x3c14df.objects.exists(_0x1d1336))) {
                _0x51c7c2.lastCollisionUnix = Date.now(), _0x3c14df.events.call('on.pool.game.ball.register.collision', _0x51c7c2, _0x1d1336);
                break;
              }
            }
          }
        });

        var _0x26cd2b = _0x2eba31(0x161cd);

        let _0x3d5f1f,
            _0x356051 = false;

        _0x26cd2b.events.add('client.pool.table.try.create.toggle', _0x696bfc => {
          if (_0x356051 = _0x696bfc, _0x356051) {
            _0x26cd2b.objects.exists(_0x3d5f1f) && _0x3d5f1f.destroy();

            const _0x41b83b = _0x26cd2b.game.joaat('prop_pooltable_02'),
                  _0x33796c = new _0xf070f6(_0x26cd2b.players.local.position, _0x26cd2b.players.local.getRotation(0x2)).Forward(4.5),
                  _0x250357 = new _0x26cd2b.Vector3(0x0, 0x0, 0x5a),
                  _0x4207a8 = 0xb4,
                  _0x5f590d = _0x26cd2b.players.local.dimension;

            _0x3d5f1f = _0x26cd2b.objects.new(_0x41b83b, _0x33796c, {
              'rotation': _0x250357,
              'alpha': _0x4207a8,
              'dimension': _0x5f590d
            });
          } else _0x26cd2b.objects.exists(_0x3d5f1f) && _0x3d5f1f.destroy();
        }), _0x26cd2b.events.add('render', () => {
          if (!_0x356051 || !_0x26cd2b.objects.exists(_0x3d5f1f)) return;

          const _0x3a600b = new _0xf070f6(_0x26cd2b.players.local.position, _0x26cd2b.game.cam.getGameplayCamRot(0x2)).Forward(3.5);

          _0x3d5f1f.setCoords(_0x3a600b.x, _0x3a600b.y, _0x3a600b.z, true, true, true, false), _0x3d5f1f.setRotation(0x0, 0x0, 0x5a, 0x2, true), _0x3d5f1f.placeOnGroundProperly(), (_0x26cd2b.game.controls.isControlJustReleased(0x0, 0x17) || _0x26cd2b.game.controls.isDisabledControlJustReleased(0x0, 0x17)) && (_0x24d5d2.api.chatPush('create new table pool object!'), _0x26cd2b.events.callRemote('3644268717', JSON.stringify(_0x3d5f1f.getCoords(true))), _0x26cd2b.events.call('client.pool.table.try.create.toggle', false));
        });

        var _0x1297a0 = _0x2eba31(0x161cd);

        const _0x28a98e = _0x1297a0.players.local;

        let _0xb4c96e;

        _0x1297a0.events.add('playerEnterColshape', async _0x15a604 => {
          if (!_0x24d5d2.api.isAuthed()) return;
          if (_0x28a98e.vehicle) return;
          if (!_0x15a604.hasVariable('fun.8ball.status')) return;

          const _0x3cba68 = _0x15a604.getVariable('fun.8ball.status');

          return _0x3cba68 && 'lobby' === _0x3cba68.status ? (_0xb4c96e = _0x15a604, void _0x24d5d2.api.displayHelpStringTrans('displayHelpString.golfLobby', false, true, 0x1388)) : _0x3cba68 && 'lobby.multi' === _0x3cba68.status ? (_0xb4c96e = _0x15a604, void _0x24d5d2.api.displayHelpStringTrans('displayHelpString.toJoinGame', false, true, 0x1388)) : undefined;
        }), _0x1297a0.events.add('playerExitColshape', async _0x29d5c5 => {
          if (_0x24d5d2.api.isAuthed()) return _0xb4c96e && _0xb4c96e === _0x29d5c5 ? (_0xb4c96e = null, void _0x1297a0.game.ui.clearHelp(true)) : undefined;
        }), _0x1297a0.events.add('keys.e', async () => {
          _0x28a98e.vehicle || _0xb4c96e && _0x1297a0.colshapes.exists(_0xb4c96e) && _0xb4c96e.hasVariable('fun.8ball.status') && (_0x1297a0.events.callRemote('3126723491', _0xb4c96e.getVariable('fun.8ball.status').id, 'multi'), _0x1297a0.game.ui.clearHelp(true), _0xb4c96e = null);
        }), _0x1297a0.events.add('keys.f', async () => {
          _0x28a98e.vehicle || _0xb4c96e && _0x1297a0.colshapes.exists(_0xb4c96e) && _0xb4c96e.hasVariable('fun.8ball.status') && (_0x1297a0.events.callRemote('3126723491', _0xb4c96e.getVariable('fun.8ball.status').id, 'solo'), _0x1297a0.game.ui.clearHelp(true), _0xb4c96e = null);
        });
      },
      0x10d1: (_0x3d9bf8, _0x120f0c, _0x50458d) => {
        'use strict';

        const a0_0x21f90c = {
          _0xbbd58: 0x59d,
          _0x58db4a: 0x1be2,
          _0x4f2a36: 0xf86,
          _0x5dd79f: 0x21a0
        },
              a0_0xf7c72b = {
          _0x347206: 0x2606,
          _0x41f312: 0x16c5,
          _0x3488f3: 0x17f
        },
              a0_0xfae0b = {
          _0x1dcf5e: 0x2606,
          _0x34c17f: 0xf82
        },
              a0_0x207af1 = {
          _0x301d3d: 0x1c01,
          _0x46c172: 0x1fe9,
          _0x394ece: 0x1d48,
          _0x461b79: 0x1fe9,
          _0x9a740e: 0x790,
          _0x14b58b: 0x98b,
          _0x4814f3: 0x190
        },
              a0_0x281b05 = {
          _0x39f6c9: 0x1291,
          _0x58387c: 0x2c4,
          _0x55690b: 0xfb8,
          _0x529475: 0x2c4,
          _0x25c744: 0x205a,
          _0xbc95c9: 0x4e1,
          _0x22b1f8: 0x6da,
          _0x114af0: 0xb82
        },
              a0_0x244e4f = {
          _0x23fb9a: 0x1b3,
          _0x5035dc: 0x1ec0,
          _0x2b7788: 0x12a3,
          _0x58afef: 0x18a5,
          _0x536ead: 0x14c1,
          _0x359e0b: 0x18a5,
          _0x8c7f56: 0xfcd
        },
              a0_0x4b6b60 = {
          _0x2df68f: 0xa6d,
          _0x1a1b52: 0x1d2,
          _0x117631: 0x205a,
          _0x516b9f: 0x2642,
          _0x31a0d6: 0x19e9,
          _0x5cde11: 0xa6d,
          _0x3eb217: 0x235b,
          _0x4030b6: 0x1291,
          _0x303101: 0x16c5,
          _0x29a240: 0xf9e,
          _0x5ade8d: 0x16c5,
          _0x2e3205: 0x2c4,
          _0xef1c9a: 0x205a,
          _0x237f02: 0x127f,
          _0x2f9dbb: 0xd7a,
          _0x246198: 0x16c5,
          _0x2f1c73: 0x205a,
          _0x3eb569: 0x127f,
          _0x550b0d: 0x12e5,
          _0x5a9358: 0x1291,
          _0x10a74d: 0x2001,
          _0x4510e1: 0x2001,
          _0x38fddd: 0xfb8,
          _0x4ab146: 0x1e2c,
          _0x52c503: 0xfb8,
          _0x2be695: 0x16c5,
          _0x6cbc95: 0x2530,
          _0x4ef614: 0x2c4,
          _0x466f9e: 0xfb8,
          _0x278939: 0x18c1,
          _0x33c07a: 0x1af1,
          _0x1f5427: 0x205a,
          _0x1b3d18: 0x1b3,
          _0x2a10e6: 0xfb8,
          _0x3d3d34: 0x19d2,
          _0x539929: 0x19d1
        },
              a0_0xc6cb0e = {
          _0x4ae154: 0x24d,
          _0x73b4de: 0x3b1,
          _0x3cf8e3: 0xff0,
          _0x31e0cd: 0x535,
          _0x2e4092: 0x1c66,
          _0x1250b1: 0x535
        },
              a0_0x5e6457 = {
          _0x477b3c: 0x14ec,
          _0x5a1bf8: 0x2c4,
          _0x24f3c0: 0x11dc,
          _0x173d74: 0x23ac,
          _0x5ced83: 0x2c4,
          _0x231f7f: 0x19e6,
          _0x1a0a46: 0x1f53,
          _0x5db56c: 0x2180,
          _0x34847b: 0x2530,
          _0x427abb: 0x1277,
          _0x5901e3: 0x7fe,
          _0x5bd9ce: 0xbc8,
          _0x4e34e8: 0x3b1,
          _0x26a74c: 0x535,
          _0x292170: 0x1c66
        },
              a0_0x40e1b7 = {
          _0x41f385: 0x235b,
          _0x4ca11a: 0x14ec,
          _0x64ecdd: 0x412
        };

        _0x50458d.r(_0x120f0c);

        var _0x26e7be = _0x50458d(0xcf12),
            _0x481a9b = _0x50458d(0x16a21),
            _0x5baa07 = _0x50458d(0x48c4),
            _0x3769aa = _0x50458d(0xb9cc),
            _0x52768d = _0x50458d(0x17d19),
            _0x85d295 = _0x50458d(0x10b0e),
            _0x3ed030 = _0x50458d(0x16a7d),
            _0x196878 = _0x50458d(0x161cd);

        _0x26e7be.Z.models = _0x26e7be.Z.models.map(_0x2d04b1 => ({ ..._0x2d04b1,
          'hash': _0x196878.game.joaat(_0x2d04b1.name)
        }));

        for (let _0x400d87 = 0x0; _0x400d87 < _0x26e7be.Z.tables.length; _0x400d87++) {
          const _0x217931 = _0x26e7be.Z.tables[_0x400d87],
                _0x21d739 = _0x26e7be.Z.models[_0x217931.model];
          _0x217931.id = _0x400d87, _0x217931.modelData = _0x21d739;
        }

        const _0x43be78 = new _0x52768d.Z({
          'dataItems': _0x26e7be.Z.tables,
          'chunkSize': 0x64,
          'distance': 0x96,
          'positionResolver': _0x1f7ff1 => _0x1f7ff1.position,
          'streamDelay': 0x9c4,
          'isCheck3d': false,
          'type': 'point'
        }),
              _0xed2b6a = Date.now(),
              _0x5367b0 = {
          'active': false,
          'tableState': 0x0,
          'tableStateTime': null,
          'state': 0x0,
          'streamedTables': new Set(),
          'newStreamedTables': new Set(),
          'tablesData': [],
          'lastUpdateStream': _0xed2b6a,
          'lastUpdateSitKey': _0xed2b6a,
          'activeStremer': false,
          'currentFrame': 0x0,
          'keyPress': 0x0,
          'nextKey': 0x0,
          'labels': [],
          'instructions': {
            'enabled': false,
            'entity': undefined
          },
          'sitActive': true,
          'startLabelActive': true
        },
              _0x13c7b8 = _0x196878.players.local,
              _0x4b146f = async _0x505ab4 => {
          await _0x481a9b.api.requestAnimDict('mini@arm_wrestling', true);
          const _0x248df1 = _0x26e7be.Z.tables[_0x505ab4.armWrestlingData.tableId];
          if (!_0x248df1.object) return;

          const _0x4adc15 = _0x248df1.modelData.seats[_0x505ab4.armWrestlingData.type],
                _0x36c1b7 = 0x0 === _0x505ab4.armWrestlingData.type ? 'sweep_a' : 'sweep_b';

          if (_0x505ab4.attachTo(_0x248df1.object.handle, 0x0, _0x4adc15.offset.x, _0x4adc15.offset.y, _0x4adc15.offset.z, 0x0, 0x0, _0x4adc15.heading, false, false, true, false, 0x0, true), !_0x505ab4.isPlayingAnim('mini@arm_wrestling', _0x36c1b7, 0x3)) {
            _0x505ab4.clearTasksImmediately(), _0x505ab4.taskPlayAnim('mini@arm_wrestling', _0x36c1b7, 0x8, 0x0, -0x1, 0x1, 0.5, false, false, false);

            const _0x5097c8 = setInterval(() => {
              _0x196878.players.exists(_0x505ab4) ? _0x505ab4.isPlayingAnim('mini@arm_wrestling', _0x36c1b7, 0x3) && (_0x505ab4.setAnimSpeed('mini@arm_wrestling', _0x36c1b7, 0x0), _0x505ab4.setAnimCurrentTime('mini@arm_wrestling', _0x36c1b7, 0.5), clearInterval(_0x5097c8)) : clearInterval(_0x5097c8);
            }, 0xa);
          }

          _0x505ab4 === _0x13c7b8 && (_0x85d295.default.disabledIteraction = true, _0x481a9b.api.usingSystemAnim(true), _0x481a9b.api.setInvincible(true));
        },
              _0x25f1c3 = _0x7419bc => {
          _0x7419bc.detach(true, true), _0x7419bc.clearTasksImmediately(), _0x7419bc === _0x13c7b8 && (_0x85d295.default.disabledIteraction = false, _0x481a9b.api.usingSystemAnim(false), _0x481a9b.api.setInvincible(false), _0x5367b0.sitActive = false);
        };

        _0x196878.events.add('entityStreamIn', _0x3f9ed3 => {
          'player' === _0x3f9ed3.type && _0x3f9ed3.armWrestlingData && _0x4b146f(_0x3f9ed3);
        });

        const _0x371b42 = _0x23756b => {
          const a0_0x2b52c7 = {
            _0x142324: 0x12dd
          },
                _0x45062c = ((_0x6292ce = _0x196878.world.data.armWrestlingTablesData) => 'string' == typeof _0x6292ce && _0x6292ce.length ? _0x6292ce.split('^').map(_0x5ee881 => {
            const [_0x188f1c, _0x53bf93, _0x4c290f, _0x4fceb8, _0x490042] = _0x5ee881.split('&');

            return {
              'tableId': parseInt(_0x188f1c),
              'state': parseInt(_0x53bf93),
              'stateTime': parseInt(_0x4c290f, 0x24),
              'firstPlayerId': parseInt(_0x4fceb8),
              'secondPlayerId': parseInt(_0x490042)
            };
          }) : [])(_0x23756b);

          let _0x1bde8e = _0x5367b0.tablesData.filter(_0x5bb280 => !_0x45062c.find(_0x27309c => _0x27309c.tableId === _0x5bb280.tableId && _0x27309c.firstPlayerId === _0x5bb280.firstPlayerId && _0x27309c.secondPlayerId === _0x5bb280.secondPlayerId)),
              _0x212216 = _0x45062c.filter(_0x3e3c02 => !_0x5367b0.tablesData.find(_0x84d656 => _0x3e3c02.tableId === _0x84d656.tableId && _0x3e3c02.firstPlayerId === _0x84d656.firstPlayerId && _0x3e3c02.secondPlayerId === _0x84d656.secondPlayerId));

          const _0x306b7a = [];

          for (const _0x5cbd40 of _0x212216) {
            const _0x5931b6 = _0x1bde8e.find(_0x3e38e3 => _0x3e38e3.tableId === _0x5cbd40.tableId);

            _0x5931b6 && (_0x1bde8e = _0x1bde8e.filter(_0x4be7d5 => _0x4be7d5 !== _0x5931b6), _0x212216 = _0x212216.filter(_0x5685aa => _0x5685aa !== _0x5cbd40), _0x306b7a.push({
              'tableId': _0x5cbd40.tableId,
              'oldFirstPlayerId': _0x5931b6.firstPlayerId,
              'oldSecondPlayerId': _0x5931b6.secondPlayerId,
              'newFirstPlayerId': _0x5cbd40.firstPlayerId,
              'newSecondPlayerId': _0x5cbd40.secondPlayerId
            }));
          }

          const _0x2e9d92 = _0x5367b0.tablesData;
          _0x5367b0.tablesData = _0x45062c;

          for (const _0x186660 of _0x212216) {
            const {
              tableId: _0x5127de,
              firstPlayerId: _0x55427c,
              secondPlayerId: _0x721f69
            } = _0x186660,
                  _0x178ef2 = _0x196878.players.atRemoteId(_0x55427c),
                  _0x36560e = _0x196878.players.atRemoteId(_0x721f69);

            _0x178ef2 && _0x196878.players.exists(_0x178ef2) && (_0x178ef2.armWrestlingData = {
              'tableId': _0x5127de,
              'type': 0x0
            }, _0x178ef2.handle && _0x4b146f(_0x178ef2)), _0x36560e && _0x196878.players.exists(_0x36560e) && (_0x36560e.armWrestlingData = {
              'tableId': _0x5127de,
              'type': 0x1
            }, _0x36560e.handle && _0x4b146f(_0x36560e));
          }

          for (const _0x392f7b of _0x306b7a) {
            if (_0x392f7b.oldFirstPlayerId !== _0x392f7b.newFirstPlayerId) {
              if (-0x1 !== _0x392f7b.newFirstPlayerId) {
                const _0x1a0913 = _0x196878.players.atRemoteId(_0x392f7b.newFirstPlayerId);

                _0x1a0913 && _0x196878.players.exists(_0x1a0913) && (_0x1a0913.armWrestlingData = {
                  'tableId': _0x392f7b.tableId,
                  'type': 0x0
                }, _0x1a0913.handle && _0x4b146f(_0x1a0913));
              } else {
                const _0x2223b3 = _0x196878.players.atRemoteId(_0x392f7b.oldFirstPlayerId);

                _0x2223b3 && _0x196878.players.exists(_0x2223b3) && (_0x2223b3.armWrestlingData = null, _0x13c7b8 === _0x2223b3 && (_0x5367b0.active = false), _0x2223b3.handle && _0x25f1c3(_0x2223b3));
              }
            }

            if (_0x392f7b.oldSecondPlayerId !== _0x392f7b.newSecondPlayerId) {
              if (-0x1 !== _0x392f7b.newSecondPlayerId) {
                const _0x49cecc = _0x196878.players.atRemoteId(_0x392f7b.newSecondPlayerId);

                _0x49cecc && _0x196878.players.exists(_0x49cecc) && (_0x49cecc.armWrestlingData = {
                  'tableId': _0x392f7b.tableId,
                  'type': 0x1
                }, _0x49cecc.handle && _0x4b146f(_0x49cecc));
              } else {
                const _0x453964 = _0x196878.players.atRemoteId(_0x392f7b.oldSecondPlayerId);

                _0x453964 && _0x196878.players.exists(_0x453964) && (_0x453964.armWrestlingData = null, _0x13c7b8 === _0x453964 && (_0x5367b0.active = false), _0x453964.handle && _0x25f1c3(_0x453964));
              }
            }
          }

          for (const _0xfa7567 of _0x1bde8e) {
            const {
              tableId: _0x2db771,
              firstPlayerId: _0x5deefa,
              secondPlayerId: _0x1d3e1d
            } = _0xfa7567,
                  _0x5439c0 = _0x196878.players.atRemoteId(_0x5deefa),
                  _0x4b711f = _0x196878.players.atRemoteId(_0x1d3e1d);

            _0x13c7b8.remoteId !== _0x5deefa && _0x13c7b8.remoteId !== _0x1d3e1d || (_0x5367b0.active = false, _0x5367b0.tableState = 0x0, _0x2e2f9a()), _0x26e7be.Z.tables[_0x2db771].lastUpdate = null, _0x26e7be.Z.tables[_0x2db771].currentValue = null, _0x5439c0 && _0x196878.players.exists(_0x5439c0) && (_0x5439c0.armWrestlingData = null, _0x5439c0.handle && _0x25f1c3(_0x5439c0)), _0x4b711f && _0x196878.players.exists(_0x4b711f) && (_0x4b711f.armWrestlingData = null, _0x4b711f.handle && _0x25f1c3(_0x4b711f));
          }

          for (const _0xdf6749 of _0x45062c) {
            _0x26e7be.Z.tables[_0xdf6749.tableId].data = _0xdf6749;

            const _0xc6e821 = _0x2e9d92.find(_0x169971 => _0x169971.tableId === _0xdf6749.tableId);

            _0xc6e821 && _0xc6e821.state !== _0xdf6749.state && 0x1 === _0xdf6749.state && _0x13c7b8.armWrestlingData && _0x13c7b8.armWrestlingData.tableId === _0xdf6749.tableId && (_0x5367b0.active = true, _0x5367b0.tableState = 0x1, _0x2e2f9a(), _0x5367b0.tableStateTime = _0xdf6749.stateTime);
          }

          for (let _0x2b7c33 = 0x0; _0x2b7c33 < _0x26e7be.Z.tables.length; _0x2b7c33++) {
            const _0x485ff9 = _0x26e7be.Z.tables[_0x2b7c33],
                  _0x1c1d7a = _0x45062c.find(_0x8a2890 => _0x8a2890.tableId === _0x2b7c33);

            _0x485ff9.info = _0x1c1d7a;
          }
        };

        _0x196878.events.add('worldDataChanged', (_0x466902, _0x165e55) => {
          'armWrestlingTablesData' === _0x466902 && _0x371b42(_0x165e55);
        }), _0x196878.events.add('keys.e', () => {
          if (_0x196878.game.player.isFreeAiming() || _0x196878.players.local.isDead() || _0x196878.gui.cursor.visible || _0x196878.players.local.getVariable('fun.minigames.playing') || _0x50458d.g.playableInstrument || _0x196878.players.local.vehicle || _0x50458d.g.currentInterface || _0x196878.players.local.activeItemId || _0x5367b0.active && 0x0 !== _0x5367b0.tableState || _0x196878.players.local.getVariable('playerInTrunk')) return;

          const _0x2cbb99 = Date.now();

          if (_0x2cbb99 < _0x5367b0.lastUpdateSitKey + 0x3e8) return;
          if (_0x5367b0.lastUpdateSitKey = _0x2cbb99, _0x5367b0.sitActive) return void _0x196878.events.callRemote('1349293473');
          let _0x4559cc = [];
          const _0x517d59 = _0x13c7b8.position;

          for (const _0x1bc02e of _0x43be78.currentItems) {
            const _0xbbc98a = _0x481a9b.api.vdist2(_0x1bc02e.position, _0x517d59);

            _0xbbc98a <= 1.5 && _0x4559cc.push({
              'tableData': _0x1bc02e,
              'distance': _0xbbc98a
            });
          }

          if (!_0x4559cc.length) return;

          _0x4559cc.sort((_0xeff31e, _0x1ae301) => _0xeff31e.distance - _0x1ae301.distance);

          const _0x1dde0f = _0x4559cc[0x0].tableData,
                _0x25257 = _0x26e7be.Z.tables.indexOf(_0x1dde0f),
                _0x43e79a = _0x5367b0.tablesData.find(_0x1b5b4a => _0x1b5b4a.tableId === _0x25257);

          _0x43e79a && -0x1 !== _0x43e79a.firstPlayerId && -0x1 !== _0x43e79a.secondPlayerId ? _0x481a9b.api.longNotifyTrans('fun.armwrestling.noSpace', 'error') : _0x196878.events.callRemote('296427840', _0x25257);
        }), _0x196878.keys.bind(_0x3ed030.t.A, true, () => {
          if (!_0x5367b0.active || 0x2 !== _0x5367b0.tableState || 0x0 !== _0x5367b0.nextKey || _0x481a9b.api.ePress(_0x5367b0.keyPress, 0x64)) return;
          _0x5367b0.keyPress = _0x481a9b.api.ePressUpdate(0x64), _0x5367b0.nextKey = 0x1;
          const [_0x377782] = _0x5367b0.labels;
          _0x377782.startTime = Date.now(), _0x5367b0.labels = [{
            'label': 'D'
          }, ..._0x5367b0.labels], _0x196878.events.callRemoteUnreliable('4216313792');
        }), _0x196878.keys.bind(_0x3ed030.t.D, true, () => {
          if (!_0x5367b0.active || 0x2 !== _0x5367b0.tableState || 0x1 !== _0x5367b0.nextKey || _0x481a9b.api.ePress(_0x5367b0.keyPress, 0x64)) return;
          _0x5367b0.keyPress = _0x481a9b.api.ePressUpdate(0x64), _0x5367b0.nextKey = 0x0;
          const [_0x2566af] = _0x5367b0.labels;
          _0x2566af.startTime = Date.now(), _0x5367b0.labels = [{
            'label': 'A'
          }, ..._0x5367b0.labels], _0x196878.events.callRemoteUnreliable('4216313792');
        }), _0x196878.events.add('armWrestling.update', (_0x3d77bb, _0x1a7144) => {
          const _0x10dbb0 = _0x196878.players.atRemoteId(_0x3d77bb);

          if (!_0x10dbb0 || !_0x10dbb0.armWrestlingData) return;

          const _0x2ba1aa = _0x26e7be.Z.tables[_0x10dbb0.armWrestlingData.tableId],
                _0x3b914b = Date.now();

          _0x2ba1aa.lastUpdate = _0x3b914b, _0x2ba1aa.prevValue = 'number' == typeof _0x2ba1aa.currentValue ? _0x2ba1aa.currentValue : 0.5, _0x2ba1aa.currentValue = _0x1a7144;
        });

        const _0x2e2f9a = (_0x56da2b = _0x5367b0.tableState) => {
          0x0 === _0x56da2b || 0x1 === _0x56da2b ? (_0x16019b(), _0x5367b0.labels = []) : 0x2 === _0x56da2b && (_0x22b734(), _0x5367b0.labels = [{
            'label': 'A'
          }], _0x5367b0.nextKey = 0x0);
        },
              _0x22b734 = () => {
          _0x5367b0.instructions.entity && _0x16019b();

          const _0x44d59a = _0x5367b0.instructions.entity = new _0x3769aa.InstructionalButtons(-0x1);

          _0x44d59a.addButton('ibuttons.fight', [0x22, 0x23]), _0x44d59a.addButton('ibuttons.leave', 0x33), _0x44d59a.toggleHud(false), _0x44d59a.isActive() || _0x44d59a.toggleHud(true), _0x5367b0.instructions.enabled = true;
        },
              _0x16019b = () => {
          _0x5367b0.instructions.entity && (_0x5367b0.instructions.enabled = false, _0x5367b0.instructions.entity.toggleHud(false), _0x5367b0.instructions.entity.removeButton('ibuttons.fight'), _0x5367b0.instructions.entity.removeButton('ibuttons.leave'), _0x5367b0.instructions.entity.resetBar(), _0x5367b0.instructions.entity = undefined);
        };

        _0x43be78.onEnter = _0x98f597 => {
          _0x98f597.object = _0x196878.objects.new(_0x98f597.modelData.hash, _0x98f597.position, {
            'dimension': -0x1,
            'rotation': _0x98f597.rotation
          });
        }, _0x43be78.onExit = _0x35f362 => {
          _0x196878.objects.exists(_0x35f362.object) && _0x35f362.object.destroy(), _0x35f362.object = null;
        }, _0x196878.events.add('render', () => {
          const a0_0x18248b = {
            _0x573b63: 0xfb8,
            _0x246b4c: 0xfb8,
            _0x5099c9: 0x2c4,
            _0xe07886: 0x205a,
            _0x4094e1: 0x25c7,
            _0x883e6a: 0x5bb,
            _0x783ac: 0x14ec,
            _0x39b30c: 0x6da,
            _0x27bad1: 0x6da,
            _0x1580f0: 0x412,
            _0x3dac16: 0x535,
            _0x395aca: 0x1de9,
            _0x4ab0c3: 0x14ec,
            _0x128583: 0x14ec,
            _0x1e8847: 0x412,
            _0xfa59ba: 0x14ec
          };
          if (!_0x481a9b.api.isAuthed()) return;

          _0x43be78.update();

          const _0x2fc916 = Date.now();

          if (_0x196878.players.forEachInStreamRange(_0xc3d909 => {
            if (_0xc3d909.armWrestlingData && _0x26e7be.Z.tables[_0xc3d909.armWrestlingData.tableId]) {
              const {
                lastUpdate: _0x15e820,
                prevValue: _0x573511,
                currentValue: _0x230532,
                data: _0x249827
              } = _0x26e7be.Z.tables[_0xc3d909.armWrestlingData.tableId],
                    _0x39b954 = 0x0 === _0xc3d909.armWrestlingData.type ? 'sweep_a' : 'sweep_b';

              if (0x1 === _0x249827.state && 0x1 === _0x5367b0.tableState && (_0xc3d909.taskPlayAnim('mini@arm_wrestling', _0x39b954, 0x8, 0x0, -0x1, 0x1, 0.5, false, false, false), _0xc3d909.setAnimSpeed('mini@arm_wrestling', _0x39b954, 0x0), _0xc3d909.setAnimCurrentTime('mini@arm_wrestling', _0x39b954, 0.5)), 'number' != typeof _0x15e820 || 'number' != typeof _0x573511 || 'number' != typeof _0x230532 || !_0x249827 || 0x1 !== _0x249827.state) return _0xc3d909.taskPlayAnim('mini@arm_wrestling', _0x39b954, 0x8, 0x0, -0x1, 0x1, 0.5, false, false, false), _0xc3d909.setAnimSpeed('mini@arm_wrestling', _0x39b954, 0x0), void _0xc3d909.setAnimCurrentTime('mini@arm_wrestling', _0x39b954, 0.5);

              const _0x3ada4d = Math.min((_0x2fc916 - _0x15e820) / 0x96, 0x1),
                    _0x101eb3 = _0x481a9b.api.lerp(_0x573511, _0x230532, _0x3ada4d);

              _0xc3d909.taskPlayAnim('mini@arm_wrestling', _0x39b954, 0x8, 0x0, -0x1, 0x1, _0x101eb3, false, false, false), _0xc3d909.setAnimSpeed('mini@arm_wrestling', _0x39b954, 0x0), _0xc3d909.setAnimCurrentTime('mini@arm_wrestling', _0x39b954, _0x101eb3);
            }
          }), _0x5367b0.active && 0x1 === _0x5367b0.tableState) {
            const _0x4c41e0 = (0x0, _0x5baa07.getServerTime)() - _0x5367b0.tableStateTime;

            _0x4c41e0 >= 0x1388 ? (_0x5367b0.tableState = 0x2, _0x2e2f9a(), _0x5367b0.startLabelStartTime = _0x2fc916) : _0x196878.game.graphics.drawText('' + Math.ceil((0x1388 - _0x4c41e0) / 0x3e8), [0.5, 0.3], {
              'font': 0x4,
              'color': [0xff, 0xff, 0xff, 0xff],
              'scale': [0x1, 0x1]
            });
          }

          if (0x2 === _0x5367b0.tableState && _0x5367b0.startLabelActive) {
            const _0x5752d5 = _0x481a9b.api.clamp((_0x2fc916 - _0x5367b0.startLabelStartTime) / 0x1f4, 0x0, 0x1);

            _0x5752d5 >= 0x1 && (_0x5367b0.startLabelActive = false);

            const _0x2bfd1d = 0x1 + 0x3 * _0x5752d5;

            _0x196878.game.graphics.drawText('Начали', [0.5, 0.35], {
              'font': 0x4,
              'color': [0xff, 0xff, 0xff, 0xff * (0x1 - _0x5752d5)],
              'scale': [_0x2bfd1d, _0x2bfd1d]
            });
          }

          if (0x2 === _0x5367b0.tableState && _0x5367b0.labels.length) {
            for (const _0x2d5e67 of _0x5367b0.labels) if (_0x2d5e67.startTime) {
              const _0x38bc2f = _0x481a9b.api.clamp((_0x2fc916 - _0x2d5e67.startTime) / 0x96, 0x0, 0x1);

              _0x38bc2f >= 0x1 && (_0x5367b0.labels = _0x5367b0.labels.filter(_0x501384 => _0x501384 !== _0x2d5e67));

              const _0xf0e472 = 0x1 - _0x38bc2f;

              _0x196878.game.graphics.drawText('' + _0x2d5e67.label, [0.5, 0.3 - 0.2 * _0x38bc2f], {
                'font': 0x4,
                'color': [0xff, 0xff, 0xff, 0xff * _0xf0e472],
                'scale': [_0xf0e472, _0xf0e472]
              });
            } else _0x196878.game.graphics.drawText('' + _0x2d5e67.label, [0.5, 0.3], {
              'font': 0x4,
              'color': [0xff, 0xff, 0xff, 0xff],
              'scale': [0x1, 0x1]
            });
          }

          const _0x276434 = _0x13c7b8.position;
          let _0x735e10 = 0x0;
          if (_0x5367b0.sitActive) _0x735e10 = 0x1;else for (const _0x3e64d3 of _0x43be78.currentItems) {
            _0x481a9b.api.vdist2(_0x3e64d3.position, _0x276434) <= 1.5 && (_0x735e10 = 0x2);
          }
          _0x5367b0.state !== _0x735e10 && (_0x5367b0.state = _0x735e10, (_0x1deaef => {
            0x0 === _0x1deaef ? _0x196878.game.ui.clearHelp(true) : 0x1 === _0x1deaef ? _0x481a9b.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388) : 0x2 === _0x1deaef && _0x481a9b.api.displayHelpStringTrans('displayHelpString.takeSeat', false, true, 0x1388);
          })(_0x735e10));
        }), _0x196878.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x371b42();
        });
      },
      0xe8d: (_0x23cbfe, _0xbe5b11, _0xb45a7f) => {
        'use strict';

        _0xb45a7f.r(_0xbe5b11);

        var _0x400a0c = _0xb45a7f(0x16a21),
            _0x596b74 = _0xb45a7f(0x161cd);

        _0x596b74.events.add('playerEnterColshape', _0x403ae7 => {
          if (_0x400a0c.api.isAuthed() && _0x596b74.colshapes.exists(_0x403ae7) && _0x403ae7 && _0x403ae7.getVariable('boombox.ObjectId')) {
            const _0x34e875 = _0x403ae7.getVariable('boombox.ObjectId'),
                  _0x6509c1 = _0x596b74.objects.atRemoteId(_0x34e875);

            if (!_0x596b74.objects.exists(_0x6509c1)) return;

            const _0x5ba5de = _0x6509c1.getVariable('boombox.RadioId');

            _0x596b74.events.call('api.emittRadioFrom', _0x34e875, _0x5ba5de);
          }
        });
      },
      0x10dd1: (_0x4f4d24, _0x461446, _0x55bd3e) => {
        'use strict';

        const a0_0x34bba8 = {
          _0x474db4: 0xe6d
        },
              a0_0x2c373d = {
          _0x33dc75: 0xb20
        },
              a0_0x3cb64b = {
          _0x518fd6: 0x1e35,
          _0x466828: 0xbb1,
          _0xac012a: 0x19d2
        },
              a0_0x30932b = {
          _0x5cda87: 0x19d6
        },
              a0_0x578bf6 = {
          _0x1ef312: 0x1870,
          _0x42bf45: 0x535,
          _0x2e9c5a: 0x1d66,
          _0xba2247: 0x9d2,
          _0x52b2d1: 0x17f3,
          _0x271dfa: 0x2208,
          _0xf3808a: 0x535,
          _0x2da839: 0x1d66,
          _0x1ae5d0: 0x2379,
          _0x2d9103: 0x1269,
          _0x3034b0: 0x2530,
          _0x50ac55: 0x2606,
          _0x1b8781: 0x1d55,
          _0x3a77cb: 0x56e,
          _0x430c5e: 0x34b,
          _0x3cb6df: 0x1d2,
          _0x1cc5c8: 0xe1b,
          _0x270f28: 0x16c5,
          _0x2c0dfe: 0x11c9,
          _0x1311ba: 0x1d66,
          _0x3bfdfa: 0x1870,
          _0x677ca2: 0x1ba8,
          _0x33dec5: 0x549,
          _0x492079: 0x6b3,
          _0x5a5981: 0x11dc,
          _0x868d97: 0x2422,
          _0x458936: 0x1d66,
          _0x35c5a4: 0x16c5
        },
              a0_0x2ac652 = {
          _0x58935e: 0x1d2,
          _0x40f8d8: 0x1d2
        },
              a0_0x1cf65b = {
          _0x3ec7a9: 0x16c5,
          _0x5e3659: 0x17f
        },
              a0_0x2df0b7 = {
          _0x20140b: 0x16c5,
          _0x2bb3bf: 0x17f
        },
              a0_0x3228bc = {
          _0x14df94: 0x2606,
          _0x4d8bc8: 0x17f
        },
              a0_0x3afdee = {
          _0x3962b1: 0x17f
        },
              a0_0x59d503 = {
          _0x36a0ed: 0x1d66,
          _0x3f69a1: 0x2379,
          _0x3c5819: 0xf2f,
          _0x2cb192: 0x2be,
          _0x31806d: 0x549,
          _0x506d7: 0x56e,
          _0x59c2a3: 0x19e0
        },
              a0_0x52b54a = {
          _0x449200: 0x11dc,
          _0x4912dc: 0x2422,
          _0x3f2d06: 0x549,
          _0x52960b: 0x19d2
        },
              a0_0xb523f5 = {
          _0x250863: 0x1ba8,
          _0x4c5283: 0x16c5,
          _0xc44fbe: 0xe1b,
          _0xc117e3: 0x1d66,
          _0x2cc9ce: 0x2379,
          _0x4051cd: 0x9d2,
          _0xe9421: 0x1ba8,
          _0x3e6352: 0x16c5,
          _0x253f7: 0x11c9,
          _0x3819f4: 0x16c5,
          _0x4e7384: 0x24d,
          _0x57babf: 0x6b3
        },
              a0_0x553a0d = {
          _0x36659f: 0x2379,
          _0x44a9a4: 0x1de9,
          _0x13c9bd: 0x2128,
          _0xbb1ee8: 0x1f35
        },
              a0_0x1e0f61 = {
          _0x5d081f: 0x1bbe,
          _0x2f455d: 0xab1
        },
              a0_0x3ebae9 = {
          _0x170ead: 0x14d2,
          _0x465c89: 0x1da5,
          _0x499c7f: 0x653
        },
              a0_0x4740c8 = {
          _0x2afae7: 0x1f92,
          _0x285a19: 0x1d66,
          _0x5e31a3: 0x59d
        },
              a0_0x263606 = {
          _0x12b49c: 0x1f92,
          _0x2710a3: 0x23fb,
          _0x5d2340: 0x2411,
          _0x4d2303: 0x14f3
        };

        _0x55bd3e.r(_0x461446);

        var _0x93adc5 = _0x55bd3e(0x16a21),
            _0x2c7aa1 = _0x55bd3e(0x176d8),
            _0x1ea941 = _0x55bd3e(0xb9cc),
            _0x109008 = (_0x55bd3e(0x6611), _0x55bd3e(0xb3ea)),
            _0x21f13e = _0x55bd3e(0x1084c),
            _0x4641e3 = _0x55bd3e(0xe70f),
            _0x2fc14b = _0x55bd3e(0x96e),
            _0x1c81b4 = _0x55bd3e(0x66f9),
            _0x225b58 = _0x55bd3e(0x16a7d),
            _0x54abd2 = _0x55bd3e(0x161cd);

        const _0x44a2b0 = _0x54abd2.players.local;

        let _0x19bdac,
            _0x310b62 = false,
            _0x31a576 = null,
            _0x12a2da = null,
            _0x18084c = null,
            _0x3a6e8b = null,
            _0x4c1a39 = null,
            _0x1564a1 = false,
            _0x47ce4f = false,
            _0x5ea91a = false,
            _0x4b54c1 = false,
            _0x3c16b6 = [],
            _0x475a26 = [],
            _0xe5f467 = 0x0;

        const _0x4b4a3e = [{
          'objetName': 'vw_prop_casino_blckjack_01',
          'x': 1148.837,
          'y': 269.747,
          'z': -52.84094,
          'r': -134.69
        }, {
          'objetName': 'vw_prop_casino_blckjack_01',
          'x': 1151.84,
          'y': 266.747,
          'z': -52.84094,
          'r': 45.31
        }, {
          'objetName': 'vw_prop_casino_blckjack_01b',
          'x': 1129.406,
          'y': 262.3578,
          'z': -52.041,
          'r': 135.31
        }, {
          'objetName': 'vw_prop_casino_blckjack_01b',
          'x': 1144.429,
          'y': 247.3352,
          'z': -52.041,
          'r': 135.31
        }, {
          'objetName': 'vw_prop_casino_blckjack_01',
          'x': 1146.329,
          'y': 261.2543,
          'z': -52.84094,
          'r': 45.31
        }, {
          'objetName': 'vw_prop_casino_blckjack_01',
          'x': 1143.338,
          'y': 264.2453,
          'z': -52.84094,
          'r': -134.69
        }, {
          'objetName': 'vw_prop_casino_blckjack_01b',
          'x': 1133.74,
          'y': 266.6947,
          'z': -52.04094,
          'r': -0x2d
        }, {
          'objetName': 'vw_prop_casino_blckjack_01b',
          'x': 1148.74,
          'y': 251.6947,
          'z': -52.04094,
          'r': -0x2d
        }];
        let _0x1a7fed = ['S_M_Y_Casino_01', 'S_F_Y_Casino_01', 'S_M_Y_Casino_01', 'S_F_Y_Casino_01', 'S_F_Y_Casino_01', 'S_M_Y_Casino_01', 'S_M_Y_Casino_01', 'S_M_Y_Casino_01'],
            _0x4c368c = [],
            _0x437c48 = [],
            _0x316410 = 'anim_casino_b@amb@casino@games@blackjack@dealer',
            _0x221f89 = 'anim_casino_b@amb@casino@games@blackjack@dealer_female';
        _0x54abd2.events.add('fun.casino.initBlackjack', _0x16ef1d => {
          _0x4c368c = JSON.parse(_0x16ef1d);
        }), _0x54abd2.events.add('auth.client.onPlayerAuthAccount', () => {
          const a0_0x4821c6 = {
            _0x5dfa05: 0x21b2,
            _0x3a8889: 0xf82,
            _0x27b22d: 0x1d66,
            _0x4e1739: 0x2379,
            _0x9d354e: 0x1c33,
            _0x12b3f0: 0x1d55,
            _0x510b62: 0x1269,
            _0x824d1b: 0x2530,
            _0x2c0912: 0x1985,
            _0x2eaeae: 0x1d66,
            _0xc5c9b4: 0x11dc,
            _0x3bc4ce: 0x1d55,
            _0xa02dfe: 0x1269,
            _0x5a289b: 0x44b,
            _0x1ad55c: 0x119d,
            _0x238e80: 0x19e0,
            _0x18f86d: 0xe6d,
            _0x29030a: 0xe6d
          };
          _0x93adc5.api.requestAnimDict(_0x316410, true), _0x93adc5.api.requestAnimDict(_0x221f89, true), _0x4b4a3e.forEach(async (_0x222514, _0x4558a9) => {
            const a0_0x226a7e = {
              _0x509660: 0x1d66,
              _0x22d117: 0x11dc,
              _0x13e041: 0x1aab,
              _0x150451: 0x2411
            };
            _0x437c48[_0x4558a9] = {}, _0x437c48[_0x4558a9].table = _0x54abd2.objects.new(_0x54abd2.game.joaat(_0x222514.objetName), new _0x54abd2.Vector3(_0x222514.x, _0x222514.y, _0x222514.z), {
              'rotation': new _0x54abd2.Vector3(0x0, 0x0, _0x222514.r),
              'dimension': _0x55bd3e.g.casinoInteriorDimension
            }), _0x437c48[_0x4558a9].table && _0x437c48[_0x4558a9].table.handle && _0x93adc5.api.invokeNative('_SET_OBJECT_TEXTURE_VARIANT', _0x437c48[_0x4558a9].table.handle, 0x3);

            let _0x4f9208 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x222514.x, _0x222514.y, _0x222514.z, _0x222514.r, 0x0, 0.775, 0x1);

            _0x437c48[_0x4558a9].ped = _0x54abd2.peds.new(_0x54abd2.game.joaat(_0x1a7fed[_0x4558a9]), new _0x54abd2.Vector3(_0x4f9208.x, _0x4f9208.y, _0x4f9208.z), _0x222514.r - 0xb4, _0x55bd3e.g.casinoInteriorDimension), _0x437c48[_0x4558a9].ped.blackjackCroupier = _0x4558a9, _0x437c48[_0x4558a9].dealerHand = [], _0x437c48[_0x4558a9].dealerHandObjs = [], _0x437c48[_0x4558a9].handObjs = [], _0x437c48[_0x4558a9].chips = [], _0x437c48[_0x4558a9].spawnedObjects = [], _0x21f13e.Z.forEach((_0x13e5f1, _0x5330be) => {
              const _0x169016 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x222514.x, _0x222514.y, _0x222514.z, _0x222514.r, _0x13e5f1.x, _0x13e5f1.y, _0x13e5f1.z),
                    _0x4685e7 = _0x54abd2.colshapes.newSphere(_0x169016.x, _0x169016.y, _0x169016.z, 0.5, _0x55bd3e.g.casinoInteriorDimension);

              _0x4685e7.blackjackTable = _0x4558a9, _0x4685e7.seatID = _0x5330be;
            }), _0x109008.Z[_0x4558a9].forEach(_0x3552e7 => {
              _0x437c48[_0x4558a9].ped && _0x437c48[_0x4558a9].ped.setComponentVariation(_0x3552e7[0x0], _0x3552e7[0x1], _0x3552e7[0x2], _0x3552e7[0x3]);
            });
          });
        }), _0x54abd2.events.add('playerEnterColshape', _0x57f80a => {
          _0x55bd3e.g.toggleblackjack && undefined !== _0x57f80a.blackjackTable && null == _0x31a576 && null == _0x3a6e8b && _0x55bd3e.g.casinoEnabled && (_0x12a2da = _0x57f80a.blackjackTable, _0x18084c = _0x57f80a.seatID, _0x93adc5.api.displayHelpStringTrans('displayHelpString.seatTable', false, true, 0x1388));
        }), _0x54abd2.events.add('playerExitColshape', _0x4ebff9 => {
          _0x55bd3e.g.toggleblackjack && undefined !== _0x4ebff9.blackjackTable && (_0x12a2da = null, _0x18084c = null, _0x54abd2.game.ui.clearHelp(true));
        }), _0x54abd2.events.add('entityStreamIn', _0x66f51d => {
          if (_0x66f51d && 'ped' == _0x66f51d.type && null != _0x66f51d.blackjackCroupier) {
            switch (_0x66f51d.handle) {
              case _0x437c48[0x0].ped.handle:
                _0x54abd2.game.audio.setPedVoiceGroup(_0x66f51d.handle, _0x54abd2.game.joaat('S_F_Y_Casino_01_ASIAN_01'));

                break;

              case _0x437c48[0x1].ped.handle:
                _0x54abd2.game.audio.setPedVoiceGroup(_0x66f51d.handle, _0x54abd2.game.joaat('S_M_Y_Casino_01_WHITE_01'));

                break;

              case _0x437c48[0x2].ped.handle:
                _0x54abd2.game.audio.setPedVoiceGroup(_0x66f51d.handle, _0x54abd2.game.joaat('S_M_Y_Casino_01_ASIAN_01'));

                break;

              case _0x437c48[0x3].ped.handle:
                _0x54abd2.game.audio.setPedVoiceGroup(_0x66f51d.handle, _0x54abd2.game.joaat('S_F_Y_Casino_01_ASIAN_02'));

                break;

              case _0x437c48[0x4].ped.handle:
                _0x54abd2.game.audio.setPedVoiceGroup(_0x66f51d.handle, _0x54abd2.game.joaat('S_F_Y_Casino_01_ASIAN_01'));

                break;

              case _0x437c48[0x5].ped.handle:
              case _0x437c48[0x6].ped.handle:
              case _0x437c48[0x7].ped.handle:
                _0x54abd2.game.audio.setPedVoiceGroup(_0x66f51d.handle, _0x54abd2.game.joaat('S_M_Y_Casino_01_WHITE_01'));

            }

            const _0x1a12fe = _0x66f51d.blackjackCroupier;
            _0x109008.Z[_0x1a12fe].forEach(_0x54de1a => {
              _0x66f51d.setComponentVariation(_0x54de1a[0x0], _0x54de1a[0x1], _0x54de1a[0x2], _0x54de1a[0x3]);
            }), [0x2, 0x3, 0x6, 0x7].includes(_0x1a12fe) && _0x93adc5.api.invokeNative('_SET_OBJECT_TEXTURE_VARIANT', _0x437c48[_0x1a12fe].table.handle, 0x3), _0x54abd2.events.call('fun.casino.clearBlackjackTable', _0x1a12fe);
          }
        }), _0x54abd2.events.add('keys.e', () => {
          if (_0x44a2b0.isDead() || _0x54abd2.gui.cursor.visible || null != _0x3a6e8b || !_0x55bd3e.g.casinoEnabled || !_0x55bd3e.g.toggleblackjack) return false;

          if (null != _0x31a576) {
            if (_0x4b54c1 && null != _0x31a576) return;
            _0x54abd2.events.callRemote('3555829976'), _0x437c48[_0x31a576].table.setCollision(true, false), _0x3a6e8b = _0x31a576, _0x31a576 = null, _0x27bcc6(), _0x54abd2.events.call('utils.disablePlayerMove', false), _0x93adc5.api.toggleChat(true), _0x93adc5.api.toggleHud(true), _0x93adc5.api.usingSystemAnim(false), _0x54abd2.game.ui.clearHelp(true), _0x93adc5.api.setDiscordStatus(), _0x1564a1 && (_0x1564a1 = false), _0x4c1a39 = _0x54abd2.game.sleep(0x1194).then(() => {
              _0x3a6e8b = null, _0x4c1a39 = null;
            });
          } else {
            if (null == _0x12a2da) return false;
            _0x3a6e8b = _0x12a2da;

            const _0x5859e1 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x12a2da].x, _0x4b4a3e[_0x12a2da].y, _0x4b4a3e[_0x12a2da].z, _0x4b4a3e[_0x12a2da].r, _0x21f13e.Z[_0x18084c].x, _0x21f13e.Z[_0x18084c].y, _0x21f13e.Z[_0x18084c].z);

            _0x54abd2.events.callRemote('224369766', _0x12a2da, _0x18084c, JSON.stringify(_0x5859e1), _0x21f13e.Z[_0x18084c].r + _0x4b4a3e[_0x12a2da].r), _0x4c1a39 = _0x54abd2.game.sleep(0xfa0).then(() => {
              _0x3a6e8b = null, _0x4c1a39 = null;
            });
          }
        }), _0x54abd2.events.add('fun.casino.playerSitAtBlackjackTable', (_0x5b9f5f, _0x2567a7, _0x42a559) => {
          const _0xfcf030 = _0x54abd2.players.atRemoteId(_0x5b9f5f);

          _0x54abd2.players.exists(_0xfcf030) && (_0x44a2b0 == _0xfcf030 ? (_0x93adc5.api.usingSystemAnim(true), _0x437c48[_0x2567a7].table.setCollision(false, false), _0x31a576 = _0x2567a7, _0x54abd2.events.call('utils.disablePlayerMove', true), _0x93adc5.api.toggleChat(false), _0xe5f467 = _0x399994(_0x31a576)[0x0], _0x93adc5.api.setDiscordStatus('blackjack'), _0x28c0d5(), _0x3d2e53(), _0x511c32(), _0x54abd2.game.audio.startAudioScene('DLC_VW_Casino_Table_Games'), _0x93adc5.api.invokeNative('N_0x79c0e43eb9b944e2', -0x7e9d66c9), _0x93adc5.api.displayHelpStringTrans('displayHelpString.toMakeBets', false, true, 0x3a98)) : _0x437c48[_0x2567a7].table.setNoCollision(_0xfcf030.handle, false));
        }), _0x54abd2.events.add('fun.casino.blackjackPlayerSeat', _0xf7c298 => {
          _0x19bdac = _0xf7c298;
        }), _0x54abd2.events.add('fun.casino.disablePlayerBlackjackExit', _0x73567a => {
          _0x4b54c1 = _0x73567a;
        }), _0x54abd2.events.add('fun.casino.allowBlackjackBets', _0x4bf5a7 => {
          _0x47ce4f = false, _0x1564a1 = _0x4bf5a7;
        }), _0x54abd2.events.add('fun.casino.blackjackCanDoCards', (_0x343eca, _0x27e962) => {
          _0x1564a1 = false, _0x47ce4f = _0x343eca, _0x5ea91a = _0x27e962;
        }), _0x54abd2.events.add('fun.casino.blackjackSetState', _0x493217 => {
          _0x292b8a(_0x493217);
        }), _0x54abd2.events.add('fun.caino.waitResponseBlackjack', (_0x586590 = false) => {
          _0x310b62 = _0x586590;
        }), _0x54abd2.events.add('keys.enter', () => {
          _0x55bd3e.g.inCasino && !_0x310b62 && null == _0x3a6e8b && null != _0x31a576 && (_0x1564a1 && (_0x310b62 = true, _0x54abd2.events.callRemote('4239508316', _0xe5f467)), _0x47ce4f && (_0x310b62 = true, _0x54abd2.events.callRemote('647435187')));
        }), _0x54abd2.events.add('keys.space', () => {
          _0x55bd3e.g.inCasino && !_0x310b62 && null == _0x3a6e8b && null != _0x31a576 && _0x47ce4f && (_0x310b62 = true, _0x54abd2.events.callRemote('911945540'));
        }), _0x54abd2.events.add('keys.tab', () => {
          _0x55bd3e.g.inCasino && !_0x310b62 && null == _0x3a6e8b && null != _0x31a576 && _0x47ce4f && _0x3f6099() && (_0x310b62 = true, _0x54abd2.events.callRemote('2151720952'));
        }), _0x54abd2.events.add('keys.f', () => {
          _0x55bd3e.g.inCasino && !_0x310b62 && null == _0x3a6e8b && null != _0x31a576 && _0x47ce4f && _0x24bae1(_0x3c16b6) && (_0x310b62 = true, _0x54abd2.events.callRemote('870028297'));
        }), _0x54abd2.events.add('fun.casino.playPedBlackjackSpeech', (_0x612093, _0x4b8ec6, _0x327899 = 'SPEECH_PARAMS_FORCE_NORMAL_CLEAR') => {
          const _0xef71e6 = _0x437c48[_0x612093].ped;

          _0x93adc5.api.invokeNative('_PLAY_AMBIENT_SPEECH1', _0xef71e6.handle, _0x4b8ec6, _0x327899);
        }), _0x54abd2.events.add('fun.casino.playPedBlackjackAnim', async (_0x10187a, _0x51dab4, _0x2d3559) => {
          const _0x16ca4a = _0x437c48[_0x10187a].ped;
          _0x16ca4a.model == _0x54abd2.game.joaat('S_M_Y_Casino_01') ? (_0x16ca4a.taskPlayAnim(_0x51dab4, _0x2d3559, 0x4, -0x2, -0x1, 0x2, 0x0, false, false, false), _0x16ca4a.playFacialAnim(_0x2d3559 + '_facial', _0x51dab4)) : (_0x16ca4a.taskPlayAnim(_0x51dab4, 'female_' + _0x2d3559, 0x4, -0x2, -0x1, 0x2, 0x0, false, false, false), _0x16ca4a.playFacialAnim('female_' + _0x2d3559 + '_facial', _0x51dab4));
        }), _0x54abd2.events.add('fun.casino.blackjackDealerTurnOverCard', async (_0x4fbe07, _0x1758ec = 0x320) => {
          const a0_0x9e2f9f = {
            _0x3720b4: 0x119d
          };

          _0x54abd2.game.sleep(_0x1758ec).then(() => {
            _0x437c48[_0x4fbe07].dealerHand.push(_0x4bdb7f);
          });

          const _0x4a32b8 = _0x437c48[_0x4fbe07].dealerHandObjs[0x0];
          _0x54abd2.objects.exists(_0x4a32b8) && _0x4a32b8.destroy();

          const _0x4bdb7f = _0x437c48[_0x4fbe07].realFlippedCard,
                _0x2245cd = _0x437c48[_0x4fbe07].ped,
                _0x18fbc7 = _0x4641e3.Fr[0x0],
                _0x328e32 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x4fbe07].x, _0x4b4a3e[_0x4fbe07].y, _0x4b4a3e[_0x4fbe07].z, _0x4b4a3e[_0x4fbe07].r, _0x18fbc7.x, _0x18fbc7.y, _0x18fbc7.z);

          await _0x93adc5.api.loadModel('vw_prop_cas_card_' + _0x4bdb7f);

          let _0x394e43 = await (0x0, _0x1c81b4.n)(_0x54abd2.game.joaat('vw_prop_cas_card_' + _0x4bdb7f), new _0x54abd2.Vector3(_0x4b4a3e[_0x4fbe07].x, _0x4b4a3e[_0x4fbe07].y, _0x4b4a3e[_0x4fbe07].z), {
            'dimension': _0x55bd3e.g.casinoInteriorDimension
          });

          null != _0x394e43 && 0x0 !== _0x394e43.handle || (_0x54abd2.objects.exists(_0x394e43) && _0x394e43.destroy(), _0x394e43 = await (0x0, _0x1c81b4.n)(_0x54abd2.game.joaat('vw_prop_cas_card_' + _0x4bdb7f), new _0x54abd2.Vector3(_0x4b4a3e[_0x4fbe07].x, _0x4b4a3e[_0x4fbe07].y, _0x4b4a3e[_0x4fbe07].z), {
            'dimension': _0x55bd3e.g.casinoInteriorDimension
          })), _0x437c48[_0x4fbe07].dealerHandObjs[0x0] = _0x394e43, _0x54abd2.objects.exists(_0x394e43) && _0x394e43.attachTo(_0x2245cd.handle, _0x2245cd.getBoneIndex(0x6f06), 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, false, false, false, true, 0x2, true), await _0x54abd2.game.sleep(_0x1758ec), _0x54abd2.objects.exists(_0x394e43) && (_0x394e43.detach(false, true), _0x394e43.setCoordsNoOffset(_0x328e32.x, _0x328e32.y, _0x328e32.z, false, false, false), _0x394e43.setRotation(0x0, 0x0, _0x4b4a3e[_0x4fbe07].r + _0x4641e3.Df[0x0].z, 0x2, true));
        }), _0x54abd2.events.add('fun.casino.updateMyHandCards', (_0x473235, _0x3f1b4c) => {
          _0x473235 && _0x3f1b4c && (_0x3c16b6 = _0x473235, _0x475a26 = _0x3f1b4c);
        }), _0x54abd2.events.add('fun.casino.blackjackSplitHand', (_0x19eb66, _0x3cd09a, _0x16e537) => {
          const _0x2096ce = _0x4641e3.wz[_0x3cd09a][0x0],
                _0x1bc120 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x19eb66].x, _0x4b4a3e[_0x19eb66].y, _0x4b4a3e[_0x19eb66].z, _0x4b4a3e[_0x19eb66].r, _0x2096ce.x, _0x2096ce.y, _0x2096ce.z),
                _0x5f383a = _0x437c48[_0x19eb66].handObjs;

          _0x5f383a && _0x5f383a[_0x3cd09a] && _0x5f383a[_0x3cd09a][_0x5f383a[_0x3cd09a].length - 0x1].setCoordsNoOffset(_0x1bc120.x, _0x1bc120.y, _0x1bc120.z, false, false, false), _0x5f383a && _0x5f383a[_0x3cd09a] && _0x5f383a[_0x3cd09a][_0x5f383a[_0x3cd09a].length - 0x1].setRotation(0x0, 0x0, _0x4b4a3e[_0x19eb66].r + _0x4641e3.FN[_0x3cd09a][_0x16e537], 0x2, true);
        });
        const _0x43fdd6 = ['vw_prop_chip_100dollar_st', 'vw_prop_chip_500dollar_st', 'vw_prop_chip_1kdollar_st', 'vw_prop_plaq_5kdollar_st', 'vw_prop_plaq_10kdollar_st'],
              _0x214906 = ['DLC_VW_CHIP_BET_SML_SINGLE', 'DLC_VW_CHIP_BET_SML_SMALL', 'DLC_VW_CHIP_BET_SML_MEDIUM', 'DLC_VW_CHIP_BET_SML_LARGE', 'DLC_VW_CHIP_BET_SML_LARGE'];

        let _0x5d4ce0;

        _0x54abd2.events.add('fun.casino.blackjackPlaceBetChip', async (_0x1d73dd, _0x3057dc, _0x1db40d, _0x24e267 = false, _0x479b42 = false) => {
          let _0x111880 = 0x0;
          _0x24e267 && !_0x479b42 ? _0x111880 = 0x1 : !_0x24e267 && _0x479b42 ? _0x111880 = 0x2 : _0x24e267 && _0x479b42 && (_0x111880 = 0x3);

          const _0x21e3c2 = await (0x0, _0x1c81b4.n)(_0x54abd2.game.joaat(_0x43fdd6[_0x3057dc]), new _0x54abd2.Vector3(_0x4b4a3e[_0x1d73dd].x, _0x4b4a3e[_0x1d73dd].y, _0x4b4a3e[_0x1d73dd].z), {
            'dimension': _0x55bd3e.g.casinoInteriorDimension
          });

          _0x54abd2.game.audio.playSoundFromEntity(-0x1, _0x214906[_0x3057dc], _0x21e3c2.handle, 'dlc_vw_table_games_sounds', false, 0x0);

          const _0x3ac68c = _0x2fc14b.RB[_0x1db40d];

          if (_0x479b42) {
            const _0x17c92b = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x1d73dd].x, _0x4b4a3e[_0x1d73dd].y, _0x4b4a3e[_0x1d73dd].z, _0x4b4a3e[_0x1d73dd].r, _0x3ac68c[_0x111880].x, _0x3ac68c[_0x111880].y, _0x2fc14b.LQ[0x1]);

            _0x21e3c2.setCoordsNoOffset(_0x17c92b.x, _0x17c92b.y, _0x17c92b.z, false, false, false), _0x21e3c2.setRotation(0x0, 0x0, _0x4b4a3e[_0x1d73dd].r + _0x2fc14b.yv[_0x1db40d][0x1].z, 0x2, true);
          } else {
            const _0x5156e9 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x1d73dd].x, _0x4b4a3e[_0x1d73dd].y, _0x4b4a3e[_0x1d73dd].z, _0x4b4a3e[_0x1d73dd].r, _0x3ac68c[_0x111880].x, _0x3ac68c[_0x111880].y, _0x2fc14b.LQ[0x1]);

            _0x21e3c2.setCoordsNoOffset(_0x5156e9.x, _0x5156e9.y, _0x5156e9.z, false, false, false), _0x21e3c2.setRotation(0x0, 0x0, _0x4b4a3e[_0x1d73dd].r + _0x2fc14b.jM[_0x1db40d][0x2].z, 0x2, true);
          }

          _0x437c48[_0x1d73dd].spawnedObjects.push(_0x21e3c2), _0x437c48[_0x1d73dd].chips[_0x1db40d] || (_0x437c48[_0x1d73dd].chips[_0x1db40d] = []), _0x437c48[_0x1d73dd].chips[_0x1db40d].push(_0x21e3c2);
        }), _0x54abd2.events.add('fun.casino.clearBlackjackTable', (_0x523c54, _0x54f0be = true) => {
          const a0_0x4b00ca = {
            _0x29c2c9: 0x1d90,
            _0x1d490b: 0xe6d,
            _0x2de238: 0x2606,
            _0x566d76: 0x16c5
          },
                a0_0x24d417 = {
            _0x210de1: 0x2606,
            _0x58a8c8: 0x17f
          },
                _0x36aa94 = _0x437c48[_0x523c54].dealerHand,
                _0x1d3dfe = _0x437c48[_0x523c54].dealerHandObjs,
                _0x512b27 = _0x437c48[_0x523c54].handObjs,
                _0x6fe16a = _0x437c48[_0x523c54].chips;
          let _0x5cd878 = [..._0x36aa94, ..._0x1d3dfe, ..._0x437c48[_0x523c54].spawnedObjects];
          _0x54f0be && (_0x5cd878 = [..._0x5cd878, ..._0x6fe16a]), _0x5cd878.forEach(_0x35490b => {
            _0x54abd2.objects.exists(_0x35490b) && _0x35490b.destroy();
          }), _0x512b27.forEach(_0x3d960c => {
            Array.isArray(_0x3d960c) ? _0x3d960c.forEach(_0x16b57d => {
              _0x54abd2.objects.exists(_0x16b57d) && _0x16b57d.destroy();
            }) : _0x54abd2.objects.exists(_0x3d960c) && _0x3d960c.destroy();
          }), _0x437c48[_0x523c54].dealerHand = [], _0x437c48[_0x523c54].dealerHandObjs = [], _0x437c48[_0x523c54].handObjs = [], _0x437c48[_0x523c54].chips = [], _0x437c48[_0x523c54].spawnedObjects = [], _0x31a576 !== _0x523c54 && null != _0x31a576 || (_0x3c16b6 = [], _0x475a26 = [], _0x5ea91a = false);
        }), _0x54abd2.events.add('fun.casino.retrieveBlackjackTable', (_0x1e364b, _0x17e6ea) => {
          if (-0x1 == _0x17e6ea) _0x437c48[_0x1e364b].dealerHandObjs.forEach(_0x2cf64b => {
            _0x54abd2.objects.exists(_0x2cf64b) && _0x2cf64b.destroy();
          }), _0x437c48[_0x1e364b].dealerHandObjs = [];else {
            if (_0x437c48[_0x1e364b].handObjs) {
              const _0x26733c = _0x437c48[_0x1e364b].handObjs[_0x17e6ea];
              _0x26733c && _0x26733c.forEach(_0x11a2c4 => {
                _0x54abd2.objects.exists(_0x11a2c4) && _0x11a2c4.destroy();
              });
            }

            if (_0x437c48[_0x1e364b].chips) {
              const _0xbf5a61 = _0x437c48[_0x1e364b].chips[_0x17e6ea];
              _0xbf5a61 && _0xbf5a61.forEach(_0x1b6a89 => {
                _0x54abd2.objects.exists(_0x1b6a89) && _0x1b6a89.destroy();
              });
            }
          }
        }), _0x54abd2.events.add('fun.casino.blackjackGiveCard', async (_0x5bca96, _0x10ea2e, _0x31048f, _0x5ac199, _0x9c799 = false, _0x57d07b = false, _0x4a55c5 = false) => {
          _0x54abd2.game.sleep(0x514).then(() => {
            null != _0x31a576 && _0x31a576 === _0x5bca96 && _0x19bdac >= 0x0 && _0x10ea2e === _0x19bdac && (true === _0x57d07b ? _0x475a26.push(_0x5ac199) : _0x3c16b6.push(_0x5ac199)), -0x1 === _0x10ea2e && false === _0x9c799 && _0x437c48[_0x5bca96].dealerHand.push(_0x5ac199);
          }), await _0x54abd2.game.sleep(0x1f4), _0x31048f -= 0x1, _0x93adc5.api.invokeNative('N_0x469f2ecdec046337', true), _0x54abd2.game.audio.startAudioScene('DLC_VW_Casino_Cards_Focus_Hand');

          const _0x3f2b82 = _0x4a55c5 ? 0x5a : 0x0;

          let _0x290fe2 = 'vw_prop_cas_card_' + _0x5ac199;

          true === _0x9c799 && (_0x437c48[_0x5bca96].realFlippedCard = _0x5ac199, _0x290fe2 = 'vw_prop_casino_cards_single'), await _0x93adc5.api.loadModel(_0x290fe2);

          let _0x27ce5f = await (0x0, _0x1c81b4.n)(_0x54abd2.game.joaat(_0x290fe2), new _0x54abd2.Vector3(_0x4b4a3e[_0x5bca96].x, _0x4b4a3e[_0x5bca96].y, _0x4b4a3e[_0x5bca96].z), {
            'dimension': _0x55bd3e.g.casinoInteriorDimension
          });

          null != _0x27ce5f && 0x0 !== _0x27ce5f.handle || (_0x54abd2.objects.exists(_0x27ce5f) && _0x27ce5f.destroy(), _0x27ce5f = await (0x0, _0x1c81b4.n)(_0x54abd2.game.joaat(_0x290fe2), new _0x54abd2.Vector3(_0x4b4a3e[_0x5bca96].x, _0x4b4a3e[_0x5bca96].y, _0x4b4a3e[_0x5bca96].z), {
            'dimension': _0x55bd3e.g.casinoInteriorDimension
          })), _0x437c48[_0x5bca96].spawnedObjects.push(_0x27ce5f), _0x10ea2e >= 0x0 && (_0x437c48[_0x5bca96].handObjs[_0x10ea2e] || (_0x437c48[_0x5bca96].handObjs[_0x10ea2e] = []), _0x437c48[_0x5bca96].handObjs[_0x10ea2e].push(_0x27ce5f));
          const _0x25c368 = _0x437c48[_0x5bca96].ped;

          if (_0x54abd2.objects.exists(_0x27ce5f) && _0x27ce5f.attachTo(_0x25c368.handle, _0x25c368.getBoneIndex(0x6f06), 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true), await _0x54abd2.game.sleep(0x320), _0x54abd2.objects.exists(_0x27ce5f) && _0x27ce5f.detach(false, true), -0x1 === _0x10ea2e) {
            _0x437c48[_0x5bca96].dealerHandObjs || (_0x437c48[_0x5bca96].dealerHandObjs = []), _0x437c48[_0x5bca96].dealerHandObjs.push(_0x27ce5f);

            const _0xb0ea8f = _0x4641e3.Fr[_0x31048f],
                  _0x170393 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x5bca96].x, _0x4b4a3e[_0x5bca96].y, _0x4b4a3e[_0x5bca96].z, _0x4b4a3e[_0x5bca96].r, _0xb0ea8f.x, _0xb0ea8f.y, _0xb0ea8f.z);

            _0x54abd2.objects.exists(_0x27ce5f) && _0x27ce5f.setCoordsNoOffset(_0x170393.x, _0x170393.y, _0x170393.z, false, false, false), true === _0x9c799 ? _0x54abd2.objects.exists(_0x27ce5f) && _0x27ce5f.setRotation(0xb4, 0x0, _0x4b4a3e[_0x5bca96].r + _0x4641e3.Df[_0x31048f].z, 0x2, true) : _0x54abd2.objects.exists(_0x27ce5f) && _0x27ce5f.setRotation(0x0, 0x0, _0x4b4a3e[_0x5bca96].r + _0x4641e3.Df[_0x31048f].z, 0x2, true);
          } else {
            if (true === _0x57d07b) {
              const _0x4d6523 = _0x4641e3.wz[_0x10ea2e][_0x31048f],
                    _0x4d7556 = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x5bca96].x, _0x4b4a3e[_0x5bca96].y, _0x4b4a3e[_0x5bca96].z, _0x4b4a3e[_0x5bca96].r, _0x4d6523.x, _0x4d6523.y, _0x4d6523.z);

              _0x54abd2.objects.exists(_0x27ce5f) && (_0x27ce5f.setCoordsNoOffset(_0x4d7556.x, _0x4d7556.y, _0x4d7556.z, false, false, false), _0x27ce5f.setRotation(0x0, 0x0, _0x4b4a3e[_0x5bca96].r + _0x4641e3.FN[_0x10ea2e][_0x31048f] - _0x3f2b82, 0x2, true));
            } else {
              const _0x18281d = _0x4641e3.PD[_0x10ea2e][_0x31048f],
                    _0xc8358b = _0x54abd2.game.object.getObjectOffsetFromCoords(_0x4b4a3e[_0x5bca96].x, _0x4b4a3e[_0x5bca96].y, _0x4b4a3e[_0x5bca96].z, _0x4b4a3e[_0x5bca96].r, _0x18281d.x, _0x18281d.y, _0x18281d.z);

              _0x54abd2.objects.exists(_0x27ce5f) && (_0x27ce5f.setCoordsNoOffset(_0xc8358b.x, _0xc8358b.y, _0xc8358b.z, false, false, false), _0x27ce5f.setRotation(0x0, 0x0, _0x4b4a3e[_0x5bca96].r + _0x4641e3.Zc[_0x10ea2e][_0x31048f] - _0x3f2b82, 0x2, true));
            }
          }
        });

        const _0x28c0d5 = () => {
          _0x5d4ce0 = new _0x2c7aa1.TimerBar('fun.casino.blackjack.time'), _0x5d4ce0.value = '00:00', _0x5d4ce0.visible = false;
        };

        let _0x3bdf48, _0x1a69de, _0x124221;

        const _0x3d2e53 = () => {
          try {
            _0x3bdf48 = new _0x1ea941.InstructionalButtons(-0x1), _0x3bdf48.addButton('ibuttons.exit', 'E'), _0x3bdf48.addButton('ibuttons.increaseBet', 0xaf), _0x3bdf48.addButton('ibuttons.decreaseBet', 0xae), _0x3bdf48.addButton('ibuttons.makeBet', 0xc9), _0x3bdf48.toggleHud(false), _0x124221 = new _0x2c7aa1.TimerBar('fun.casino.blackjack.betSum'), _0x1a69de = new _0x2c7aa1.TimerBar('fun.casino.blackjack.thisBet'), _0x1a69de.value = '0', _0x124221.value = '' + _0xe5f467, _0x124221.visible = false, _0x1a69de.visible = false;
          } catch (_0x3aaef2) {
            _0x93adc5.api.sendError(_0x3aaef2);
          }
        };

        let _0x1aeafd;

        const _0x511c32 = () => {
          try {
            _0x1aeafd = new _0x1ea941.InstructionalButtons(-0x1), _0x1aeafd.addButton('ibuttons.more', 0xc9), _0x1aeafd.addButton('ibuttons.enough', 0x16), _0x1aeafd.toggleHud(false);
          } catch (_0x2df0c8) {
            _0x93adc5.api.sendError(_0x2df0c8);
          }
        },
              _0x292b8a = _0x5bfa0f => {
          switch (_0x5bfa0f) {
            case 'bets':
              _0x1aeafd && (_0x1aeafd.removeButton('ibuttons.double'), _0x1aeafd.removeButton('ibuttons.split'), _0x1aeafd.toggleHud(false)), _0x3bdf48 && _0x3bdf48.toggleHud(true), _0x124221 && !_0x124221.visible && (_0x124221.visible = true), _0x1a69de && !_0x1a69de.visible && (_0x1a69de.visible = true);
              break;

            case 'cards':
              _0x3bdf48 && _0x3bdf48.toggleHud(false), _0x1aeafd && (_0x24bae1(_0x3c16b6) ? (_0x1aeafd.removeButton('ibuttons.split'), _0x1aeafd.addButton('ibuttons.split', 0x17)) : _0x1aeafd.removeButton('ibuttons.split'), _0x3f6099() ? (_0x1aeafd.removeButton('ibuttons.double'), _0x1aeafd.addButton('ibuttons.double', 0x25)) : _0x1aeafd.removeButton('ibuttons.double')), _0x1aeafd.toggleHud(true), _0x124221 && _0x124221.visible && (_0x124221.visible = false), _0x1a69de && _0x1a69de.visible && (_0x1a69de.visible = false), _0x5d4ce0 && !_0x5d4ce0.visible && (_0x5d4ce0.visible = true);
              break;

            case 'idle':
              _0x3bdf48 && _0x3bdf48.resetBar(), _0x1aeafd && _0x1aeafd.resetBar(), _0x124221 && _0x124221.visible && (_0x124221.visible = false), _0x1a69de && _0x1a69de.visible && (_0x1a69de.visible = false), _0x5d4ce0 && _0x5d4ce0.visible && (_0x5d4ce0.visible = false);
          }
        },
              _0x27bcc6 = () => {
          try {
            _0x3bdf48.resetBar(), _0x1aeafd.resetBar(), _0x5d4ce0.visible = false, _0x1a69de.visible = false, _0x124221.visible = false;
          } catch (_0x3641b6) {
            _0x93adc5.api.sendError(_0x3641b6);
          }
        };

        let _0x1e85d7 = 0x0;
        _0x54abd2.events.add('fun.casino.setBlackjackTimeLeft', _0x143409 => {
          _0x1e85d7 = _0x143409, _0x5d4ce0 && false === _0x5d4ce0.visible && (_0x5d4ce0.visible = true);
        }), _0x54abd2.events.add('fun.casino.setBlackjackTotalBet', _0x242c7a => {
          _0x1a69de && (_0x1a69de.value = '' + _0x242c7a);
        }), _0x54abd2.events.add('time.everySec', () => {
          if (!_0x5d4ce0 || isNaN(_0x1e85d7) || _0x1e85d7 <= 0x0) return;
          _0x1e85d7--;

          const _0x4fe967 = parseInt(_0x1e85d7 / 0x3c),
                _0x3ba4a7 = parseInt(_0x1e85d7 % 0x3c);

          _0x5d4ce0.value = ('0' + _0x4fe967).slice(-0x2) + ':' + ('0' + _0x3ba4a7).slice(-0x2);
        }), _0x54abd2.events.add('render', async () => {
          null != _0x19bdac && null != _0x31a576 && _0x54abd2.game.graphics.drawText(_0x93adc5.api.language.translatePlayer('fun.casino.blackjack.cardsInfo', {
            'isMySplit': _0x475a26.length > 0x0 ? 0x1 : 0x0,
            'myHandCards': _0x382cce(_0x3c16b6),
            'myHandCards_split': _0x382cce(_0x475a26),
            'dealerHand': _0x382cce(_0x437c48[_0x31a576].dealerHand)
          }), [0.5, 0.8], {
            'font': 0x0,
            'color': [0xff, 0xff, 0xff, 0xc8],
            'scale': [0.35, 0.35],
            'outline': true
          });
        });
        let _0x1e3e1e = 0x0;

        _0x54abd2.keys.bind(_0x225b58.t.ARROW_LEFT, false, async () => {
          if (_0x93adc5.api.ePress(_0x1e3e1e, 0xfa) || !_0x93adc5.api.isAuthed() || _0x55bd3e.g.interfaces.chat || _0x44a2b0.isDead() || _0x54abd2.gui.cursor.visible || null != _0x3a6e8b || null == _0x31a576) return;
          _0x1e3e1e = _0x93adc5.api.ePressUpdate(0xfa);

          let _0x1dd478 = _0x399994()[0x0],
              _0x3246e3 = _0x399994()[0x1],
              _0x585f0e = _0x3246e3 / (_0x3246e3 / _0x1dd478);

          _0xe5f467 - _0x585f0e >= _0x1dd478 ? _0xe5f467 -= _0x585f0e : _0xe5f467 = _0x1dd478, _0x27b9d1(_0xe5f467), _0x54abd2.game.audio.playSoundFrontend(-0x1, 'DLC_VW_BET_DOWN', 'dlc_vw_table_games_frontend_sounds', true);
        });

        let _0xe39eba = 0x0;

        _0x54abd2.keys.bind(_0x225b58.t.ARROW_RIGHT, false, async () => {
          if (_0x93adc5.api.ePress(_0xe39eba, 0xfa) || !_0x93adc5.api.isAuthed() || _0x55bd3e.g.interfaces.chat || _0x44a2b0.isDead() || _0x54abd2.gui.cursor.visible || null != _0x3a6e8b || null == _0x31a576) return;
          _0xe39eba = _0x93adc5.api.ePressUpdate(0xfa);

          let _0x2d689f = _0x399994()[0x0],
              _0x158c53 = _0x399994()[0x1],
              _0x3043e7 = _0x158c53 / (_0x158c53 / _0x2d689f);

          _0xe5f467 + _0x3043e7 <= _0x158c53 ? _0xe5f467 += _0x3043e7 : _0xe5f467 = _0x158c53, _0x27b9d1(_0xe5f467), _0x54abd2.game.audio.playSoundFrontend(-0x1, 'DLC_VW_BET_UP', 'dlc_vw_table_games_frontend_sounds', true);
        });

        const _0x27b9d1 = (_0x561f32 = _0xe5f467) => {
          try {
            _0x124221.value = _0x561f32.toString(), _0xe5f467 = _0x561f32;
          } catch (_0x57f3b3) {
            _0x93adc5.api.sendError(_0x57f3b3);
          }
        },
              _0x399994 = (_0x5dfac7 = _0x31a576) => {
          try {
            return _0x4c368c[_0x5dfac7] || 0x0;
          } catch (_0xb4b6f3) {
            _0x93adc5.api.sendError(_0xb4b6f3);
          }
        };

        _0x54abd2.game.entity.createModelHide(1149.38, 269.19, -52.02, 0x1, _0x54abd2.game.joaat('vw_prop_casino_blckjack_01'), true), _0x54abd2.game.entity.createModelHide(1151.28, 267.33, -51.84, 0x1, _0x54abd2.game.joaat('vw_prop_casino_blckjack_01'), true), _0x54abd2.game.entity.createModelHide(1128.862, 261.795, -51.0357, 0x1, _0x54abd2.game.joaat('vw_prop_casino_blckjack_01b'), true), _0x54abd2.game.entity.createModelHide(1143.859, 246.783, -51.035, 0x1, _0x54abd2.game.joaat('vw_prop_casino_blckjack_01b'), true), _0x54abd2.game.entity.createModelHide(1146.329, 261.2543, -52.84094, 0x1, _0x54abd2.game.joaat('vw_prop_casino_3cardpoker_01'), true), _0x54abd2.game.entity.createModelHide(1143.338, 264.2453, -52.84094, 0x1, _0x54abd2.game.joaat('vw_prop_casino_3cardpoker_01'), true), _0x54abd2.game.entity.createModelHide(1133.74, 266.6947, -52.04094, 0x1, _0x54abd2.game.joaat('vw_prop_casino_3cardpoker_01b'), true), _0x54abd2.game.entity.createModelHide(1148.74, 251.6947, -52.04094, 0x1, _0x54abd2.game.joaat('vw_prop_casino_3cardpoker_01b'), true);

        const _0x382cce = _0x248436 => {
          let _0x3b14e4 = 0x0,
              _0x585749 = 0x0;
          _0x248436.forEach(_0x31467c => {
            const a0_0x31bce3 = {
              _0x17fa34: 0x2323
            };

            _0x3b14e4 += (_0x48110c => {
              if (!_0x48110c) return 0x0;
              if (-0x1 != _0x48110c.indexOf('ACE')) return 0xb;

              const _0x1c6b62 = _0x48110c.split('_');

              return isNaN(_0x1c6b62[0x1]) ? 0xa : parseInt(_0x1c6b62[0x1]);
            })(_0x31467c);
          }), _0x248436.forEach(_0x28d731 => {
            if (_0x28d731) try {
              -0x1 != _0x28d731.indexOf('ACE') && (_0x585749 += 0x1);
            } catch (_0x35ed5f) {
              _0x93adc5.api.sendError(_0x35ed5f);
            }
          });

          do {
            if (!(_0x3b14e4 > 0x15 && _0x585749 > 0x0)) break;
            _0x3b14e4 -= 0xa, _0x585749 -= 0x1;
          } while (0x0 == _0x585749);

          return _0x3b14e4;
        },
              _0x24bae1 = _0x3bb269 => !(!Array.isArray(_0x3bb269) || 0x2 != _0x3bb269.length || 0x0 !== _0x475a26.length || _0x3bb269[0x0].substr(-0x3) != _0x3bb269[0x1].substr(-0x3)),
              _0x3f6099 = () => true === _0x5ea91a ? _0x475a26.length <= 0x2 : _0x3c16b6.length <= 0x2;
      },
      0xfe43: (_0x1348a5, _0x275918, _0x20d9d2) => {
        'use strict';

        const a0_0x25c823 = {
          _0x8791e4: 0x4e3,
          _0xa6ac32: 0x606,
          _0x473144: 0x1d66,
          _0x3cce89: 0x1e35,
          _0x2c37e8: 0x24c0
        },
              a0_0x19f6cf = {
          _0x5c85b0: 0x1a5,
          _0x22210b: 0x1d37,
          _0x3a6b37: 0x1d37
        },
              a0_0x4299f5 = {
          _0x30429d: 0xf2f,
          _0x48d7a4: 0x1c85,
          _0x2ffb57: 0x1d66
        },
              a0_0x33e0f9 = {
          _0x3eed0f: 0xf2f
        },
              a0_0x3eb29f = {
          _0x2d1e8b: 0xc55,
          _0x24aebd: 0x2488,
          _0x1b0b9a: 0x1a3,
          _0x3f76fc: 0x112d
        },
              a0_0x31c5cd = {
          _0x13d092: 0x1d37,
          _0x120e51: 0x2d5
        },
              a0_0x586078 = {
          _0x4bb8d9: 0x12d8
        },
              a0_0x3e00e5 = {
          _0x191995: 0x235b,
          _0x37b7f8: 0x16c5,
          _0x47c910: 0x178c,
          _0x550a64: 0x12d8,
          _0x396485: 0xa03,
          _0x374d07: 0x1472
        },
              a0_0x1c8c6a = {
          _0xb12cc7: 0x24c0
        },
              a0_0x3f9112 = {
          _0x33f020: 0x12d8,
          _0x58709c: 0x19a
        },
              a0_0x565f12 = {
          _0x2b9da0: 0xf2f,
          _0x22557b: 0x1d66,
          _0x1450e8: 0xf2f,
          _0x4cc8bc: 0x31a,
          _0x2bd11e: 0x91b
        },
              a0_0x2288e2 = {
          _0x3e3527: 0x1bbe,
          _0x49c40f: 0x1d66,
          _0x5ba08f: 0x1d66,
          _0x395ad6: 0x260e,
          _0x55c65f: 0x1d66,
          _0x59df16: 0x1e35,
          _0x16eaf5: 0x647,
          _0x48770a: 0x1357,
          _0x43cd89: 0x1d35,
          _0x379f18: 0x1d66
        },
              a0_0x125f44 = {
          _0x5dffd6: 0x35c,
          _0x3fce55: 0x191a,
          _0x4e55d4: 0x191a,
          _0x2664bf: 0x17a,
          _0x223a59: 0x13b0,
          _0x2b5920: 0x1063
        },
              a0_0x433aa8 = {
          _0x4730af: 0x1ec5,
          _0x371621: 0x1dda,
          _0x1b5ca8: 0x1da5,
          _0x1ae9a9: 0x260f,
          _0x5b814b: 0x108d
        },
              a0_0xf69e4c = {
          _0x26de05: 0x242c
        },
              a0_0x12d74d = {
          _0x460281: 0x2488,
          _0xff3209: 0x1437,
          _0x516f9e: 0x2488
        },
              a0_0x1581f2 = {
          _0x628af2: 0x1c66,
          _0x17c99a: 0x1a5,
          _0x56f74d: 0x3e9,
          _0x279c08: 0x152b,
          _0x2163e7: 0x535,
          _0x2e7b20: 0x52c
        },
              a0_0x4a6be2 = {
          _0x21381d: 0x1ec5,
          _0x5c30ba: 0x213a,
          _0x195491: 0x1b53,
          _0x863526: 0x1da5,
          _0x12ed6b: 0xdfd,
          _0x447431: 0x1d66,
          _0x33b246: 0x59d,
          _0xf296d6: 0x52c,
          _0x2246c5: 0x662,
          _0x514b43: 0x535,
          _0x221c3b: 0x623,
          _0x3398bc: 0x1dc8,
          _0x259af8: 0xad8,
          _0x58941c: 0x362,
          _0x2a059a: 0x535,
          _0x1f9d4d: 0x1870,
          _0x306a07: 0x1d66,
          _0x16eace: 0x1d66,
          _0x5c3364: 0x11dc,
          _0x427125: 0x1da5,
          _0x531faf: 0x1b9c
        },
              a0_0x771f55 = {
          _0x4c6656: 0x253d,
          _0x53ec54: 0x1b53,
          _0x419d10: 0x1d66
        },
              a0_0x6299e4 = {
          _0x2739f7: 0x1b53,
          _0x42d681: 0x535,
          _0x1572cb: 0xf86,
          _0x24cb92: 0x14f3
        };

        _0x20d9d2.r(_0x275918);

        var _0x4bfd91 = _0x20d9d2(0x16a21),
            _0x541095 = _0x20d9d2(0xd194),
            _0x491e47 = _0x20d9d2(0x12a76),
            _0xa72701 = _0x20d9d2(0xb9cc),
            _0x2fbfda = _0x20d9d2(0x161cd);

        const _0x3b9f6f = _0x2fbfda.players.local;

        let _0x1254fd, _0x5e2a33, _0x3bc24a, _0x15e950, _0x48072b;

        const _0x22b729 = [{
          'x': 1099.582,
          'y': 265.6582,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1098.928,
          'y': 265.0042,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'left'
        }, {
          'x': 1096.506,
          'y': 262.6327,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1095.852,
          'y': 261.9783,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'left'
        }, {
          'x': 1095.127,
          'y': 261.2535,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1094.473,
          'y': 260.5995,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'left'
        }, {
          'x': 1092.098,
          'y': 258.1739,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1091.443,
          'y': 257.5198,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'left'
        }, {
          'x': 1101.915,
          'y': 264.1026,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1101.261,
          'y': 263.4485,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'left'
        }, {
          'x': 1098.451,
          'y': 260.6878,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1097.797,
          'y': 260.0338,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'left'
        }, {
          'x': 1097.072,
          'y': 259.309,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1096.417,
          'y': 258.6552,
          'z': -52.24114,
          'r': 0x2d,
          'side': 'left'
        }, {
          'x': 1093.653,
          'y': 255.8405,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'right'
        }, {
          'x': 1092.999,
          'y': 255.1864,
          'z': -52.24094,
          'r': 0x2d,
          'side': 'left'
        }],
              _0x57b975 = 0x186a0;

        let _0x41a148;

        _0x22b729.forEach((_0x5304b6, _0x132cd6) => {
          const _0x2579c9 = _0x2fbfda.game.object.getObjectOffsetFromCoords(_0x5304b6.x, _0x5304b6.y, _0x5304b6.z, _0x5304b6.r, 0x0, -1.5, 0x1);

          _0x2fbfda.colshapes.newSphere(_0x2579c9.x, _0x2579c9.y, _0x2579c9.z, 0x1, _0x20d9d2.g.casinoInteriorDimension).casinoHorseSeat = _0x132cd6;
        }), _0x2fbfda.events.add('playerEnterColshape', _0x70e269 => {
          _0x4bfd91.api.isAuthed() && _0x20d9d2.g.togglehorserace && undefined !== _0x70e269.casinoHorseSeat && null == _0x1254fd && null == _0x3bc24a && (_0x48072b = _0x70e269.casinoHorseSeat, _0x4bfd91.api.displayHelpStringTrans('displayHelpString.seatTable', false, true, 0x1388));
        }), _0x2fbfda.events.add('playerExitColshape', _0x39d55a => {
          _0x4bfd91.api.isAuthed() && _0x20d9d2.g.togglehorserace && undefined !== _0x39d55a.casinoHorseSeat && (_0x48072b = null, _0x2fbfda.game.ui.clearHelp(true));
        }), _0x2fbfda.events.add('keys.e', async () => {
          if (!_0x3b9f6f.isDead() && !_0x2fbfda.gui.cursor.visible && null == _0x3bc24a && _0x20d9d2.g.togglehorserace && !_0x5e2a33) {
            if (null != _0x1254fd) {
              _0x3b823a(), _0x2fbfda.events.callRemote('1985741445'), _0x2fbfda.game.ui.clearHelp(true), _0x4bfd91.api.toggleChat(true), _0x3bc24a = _0x1254fd, _0x1254fd = null, _0x2fbfda.events.call('utils.disablePlayerMove', false);

              const _0x2f0caf = 0x1 === _0x4bfd91.api.getEntitySync(_0x3b9f6f, 'gender', 'number') ? 'female' : 'male',
                    _0x374b8e = await _0x4bfd91.api.taskPlayAnim('anim_casino_a@amb@casino@games@insidetrack@' + _0x2f0caf, 'exit_' + _0x22b729[_0x3bc24a].side, 0x0, false, true);

              _0x3b9f6f.freezePosition(false), await _0x2fbfda.game.sleep(0x3e8 * _0x374b8e), _0x3bc24a = null, _0x15e950 = null, _0x4bfd91.api.usingSystemAnim(false), _0x4bfd91.api.setDiscordStatus();
            } else {
              if (null == _0x48072b) return false;

              _0x2fbfda.game.ui.clearHelp(true);

              const _0xcc43fe = _0x2fbfda.game.object.getObjectOffsetFromCoords(_0x22b729[_0x48072b].x, _0x22b729[_0x48072b].y, _0x22b729[_0x48072b].z, _0x22b729[_0x48072b].r, 0x0, 0x0, 0x1),
                    _0x3bea19 = {
                'x': _0xcc43fe.x,
                'y': _0xcc43fe.y,
                'z': _0xcc43fe.z,
                'r': _0x22b729[_0x48072b].r
              };

              _0x2fbfda.events.callRemote('3251821294', _0x48072b, JSON.stringify(_0x3bea19));
            }
          }
        }), _0x2fbfda.events.add('fun.casino.horserace.playerOccupy', _0x5b3dba => {
          _0x4bfd91.api.usingSystemAnim(true), _0x1254fd = _0x5b3dba, _0x2fbfda.events.call('utils.disablePlayerMove', true), _0x4bfd91.api.setDiscordStatus('horserace'), _0x4bfd91.api.toggleChat(false), _0x3bc24a = null, _0x171ee1();
        }), _0x2fbfda.events.add('keys.f', () => {
          _0x3b9f6f.isDead() || null == _0x1254fd || null != _0x3bc24a || (_0x491e47.globalBrowser.emit('rides_setMaxBet', _0x57b975), _0x20d9d2.g.interfaces.rides ? (_0x491e47.globalBrowser.toggle('rides', {
            'value': false
          }), _0x5e2a33 = false) : (_0x491e47.globalBrowser.toggle('rides', {
            'value': true
          }), _0x5e2a33 = true));
        }), _0x2fbfda.events.add('fun.casino.horserace.closeBet', () => {
          _0x20d9d2.g.interfaces.rides && _0x491e47.globalBrowser.toggle('rides', {
            'value': false
          }), _0x5e2a33 = false;
        }), _0x2fbfda.events.add('fun.casino.horserace.setBet', _0x250f5a => {
          _0x3b9f6f.isDead() || null == _0x1254fd || null != _0x3bc24a || _0x250f5a && (_0x250f5a = JSON.parse(_0x250f5a), _0x2fbfda.events.callRemote('4086752948', _0x250f5a.id, _0x250f5a.bet));
        });

        const _0x171ee1 = () => {
          try {
            _0x41a148 = new _0xa72701.InstructionalButtons(-0x1), _0x41a148.addButton('ibuttons.exit', 'E'), _0x41a148.addButton('ibuttons.bets', 'F'), _0x41a148.addButton('ibuttons.increaseBet', 0xaf), _0x41a148.addButton('ibuttons.decreaseBet', 0xae), _0x41a148.isActive() || _0x41a148.toggleHud(true);
          } catch (_0x19267e) {
            _0x4bfd91.api.sendError(_0x19267e);
          }
        },
              _0x3b823a = () => {
          try {
            _0x41a148.resetBar();
          } catch (_0x3269b7) {
            _0x4bfd91.api.sendError(_0x3269b7);
          }
        },
              _0x5d8095 = new _0x2fbfda.Vector3(1093.907, 263.1436, -49.49115);

        let _0x2c4575,
            _0x31df60,
            _0x5401aa,
            _0x22c618 = false;

        const _0x41c432 = _0x2fbfda.game.joaat('vw_vwint01_betting_screen');

        let _0x1632cb, _0x5a1ad1;

        _0x2fbfda.events.add('render', () => {
          _0x20d9d2.g.inCasino && _0x31df60 && !(_0x5a1ad1 < 0x1) && _0x22c618 && _0x2fbfda.game.ui.isNamedRendertargetRegistered('casinoscreen_02') && _0x2fbfda.game.ui.isNamedRendertargetLinked(_0x41c432) && (_0x2fbfda.game.ui.setTextRenderId(_0x5a1ad1), _0x2fbfda.game.graphics.set2dLayer(0x4), _0x2fbfda.game.graphics.setScriptGfxDrawBehindPausemenu(true), _0x31df60.render2D(0.5, 0.5, 1.001, 1.001), _0x2fbfda.game.ui.setTextRenderId(_0x2fbfda.game.hud.getDefaultScriptRendertargetRenderId()));
        }), _0x2fbfda.events.add('playerEnterInterior', async _0x55724f => {
          0x43301 === _0x55724f && _0x104a26();
        }), _0x2fbfda.events.add('playerChangeRoomInterior', async _0xe6daf3 => {
          [0x2eebea4d, 0x4e19639].includes(_0xe6daf3) && (await _0x4bfd91.api.requestScaleformMovie('HORSE_RACING_WALL'), _0x22c618 || (_0x5a1ad1 = _0x4bfd91.api.createNamedRenderTargetForModel('casinoscreen_02', _0x41c432), _0x22c618 = true), _0x458196());
        }), _0x2fbfda.events.add('playerExitInterior', _0x246d67 => {
          0x43301 === _0x246d67 && (_0x1662d1(), _0x5a1ad1 && _0x2fbfda.game.ui.releaseNamedRendertarget('casinoscreen_02'), _0x22c618 = false);
        }), _0x2fbfda.events.add('fun.casino.horserace.setHorse', (_0x508a37, _0x50cc99, _0x391869, _0x2a35a2, _0x16a8f3, _0x994287, _0x1a5243) => {
          _0x31df60 && _0x31df60.callFunction('SET_HORSE', _0x508a37, _0x50cc99, {
            'type': 'playerNameString',
            'value': _0x391869
          }, _0x2a35a2, _0x16a8f3, _0x994287, _0x1a5243);
        }), _0x2fbfda.events.add('fun.casino.horserace.startRace', (_0x3160c3 = 0x3e8, _0x5425cd = 0x1, _0x590365 = 0x0, _0x3ff911 = 0x1, _0x338281 = 0x2, _0x229976 = 0x3, _0x1d7131 = 0x4, _0x11a3d9 = 0x5, _0x3df1e8 = 0x1, _0x484f0a = true) => {
          const a0_0x22207f = {
            _0x46edae: 0x1d66,
            _0x4b1d3d: 0x1937
          };
          _0x31df60 && (_0x31df60.callFunction('START_RACE', _0x3160c3, _0x5425cd, _0x590365, _0x3ff911, _0x338281, _0x229976, _0x1d7131, _0x11a3d9, _0x3df1e8, _0x484f0a), _0x533a8c(), _0x2c4575 = _0x2fbfda.game.audio.getSoundId(), _0x2fbfda.game.audio.playSoundFromCoord(_0x2c4575, 'race_loop', _0x5d8095.x, _0x5d8095.y, _0x5d8095.z, 'dlc_vw_casino_inside_track_betting_main_event_sounds', false, 0x0, false), _0x52d721('dlc_vw_casino_inside_track_live_race'), _0x5401aa && (_0x5401aa.cancel(), _0x5401aa = undefined), _0x5401aa = _0x2fbfda.game.sleep(_0x3160c3).then(() => {
            _0x533a8c(), _0x2c4575 = _0x2fbfda.game.audio.getSoundId(), _0x2fbfda.game.audio.playSoundFromCoord(_0x2c4575, 'race_finish', _0x5d8095.x, _0x5d8095.y, _0x5d8095.z, 'dlc_vw_casino_inside_track_betting_main_event_sounds', false, 0x0, false), _0x297f68('dlc_vw_casino_inside_track_live_race');
          }));
        }), _0x2fbfda.events.add('fun.casino.horserace.setDetailHorse', _0x58b76d => {
          _0x31df60 && _0x31df60.callFunction('SET_DETAIL_HORSE', _0x58b76d);
        }), _0x2fbfda.events.add('fun.casino.horserace.showHorseWinResults', () => {
          _0x31df60 && (_0x533a8c(), _0x2fbfda.events.call('fun.casino.horserace.showScreen', 0x4), _0x2c4575 = _0x2fbfda.game.audio.getSoundId(), _0x2fbfda.game.audio.playSoundFromCoord(_0x2c4575, 'race_winner', _0x5d8095.x, _0x5d8095.y, _0x5d8095.z, 'dlc_vw_casino_inside_track_betting_main_event_sounds', false, 0x0, false));
        }), _0x2fbfda.events.add('fun.casino.horserace.setCountDown', (_0x557119 = 0x3c) => {
          _0x31df60 && _0x31df60.callFunction('SET_COUNTDOWN', _0x557119);
        }), _0x2fbfda.events.add('fun.casino.horserace.showScreen', (_0x204731 = 0x4) => {
          _0x31df60 && _0x31df60.callFunction('SHOW_SCREEN', _0x204731);
        }), _0x2fbfda.events.add('fun.casino.horserace.addPlayer', (_0x4c455f, _0x29d6b5, _0x17282f) => {
          if (!_0x31df60) return;

          const _0x23fd72 = _0x2fbfda.players.atRemoteId(_0x4c455f);

          if (!_0x2fbfda.players.exists(_0x23fd72)) return;

          const _0x8dd904 = _0x4bfd91.api.getName(_0x23fd72);

          _0x31df60.callFunction('ADD_PLAYER', {
            'type': 'textureNameString',
            'value': _0x8dd904
          }, _0x29d6b5, _0x17282f);
        }), _0x2fbfda.events.add('fun.casino.horserace.clearPlayers', () => {
          _0x31df60 && _0x31df60.callFunction('CLEAR_ALL_PLAYERS');
        }), _0x2fbfda.events.add('fun.casino.horserace.setPlayerResult', (_0x7bc79, _0x4e81b3) => {
          if (!_0x31df60) return;

          const _0x374c8f = _0x2fbfda.players.atRemoteId(_0x7bc79);

          if (!_0x2fbfda.players.exists(_0x374c8f)) return;

          const _0xec17d2 = _0x4bfd91.api.getName(_0x374c8f);

          _0x31df60.callFunction('SET_PLAYER_RESULT', {
            'type': 'textureNameString',
            'value': _0xec17d2
          }, _0x4e81b3);
        }), _0x2fbfda.events.add('fun.casino.horserace.getHorsesData', _0xeca952 => {
          const a0_0x3bd42a = {
            _0x3cd24d: 0x1380,
            _0x4d0d13: 0xf79,
            _0x357543: 0x2d5,
            _0x13d5d0: 0x1d37,
            _0xbd87d: 0x1d37
          };
          if (!_0xeca952) return;
          _0xeca952 = JSON.parse(_0xeca952), _0x1632cb = _0xeca952, Object.values(_0x1632cb).forEach((_0x2b5191, _0x23a19e) => {
            _0x2fbfda.events.call('fun.casino.horserace.setHorse', _0x23a19e + 0x1, _0x2b5191.name, _0x2b5191.rate + '/1', _0x2b5191.colors[0x1], _0x2b5191.colors[0x2], _0x2b5191.colors[0x3], _0x2b5191.colors[0x4]);
          });
          let _0x33fb4b = {};
          Object.values(_0x1632cb).forEach(_0x1eb12e => {
            _0x33fb4b[_0x1eb12e.id] = {
              'id': _0x1eb12e.id,
              'name': _0x1eb12e.name,
              'color': _0x1eb12e.colors[0x0],
              'rate': _0x1eb12e.rate + '/1'
            };
          }), _0x491e47.globalBrowser.emit('rides_updateRiders', JSON.stringify(_0x33fb4b));
        });

        const _0x533a8c = () => {
          null != _0x2c4575 && (_0x2fbfda.game.audio.stopSound(_0x2c4575), _0x2fbfda.game.audio.releaseSoundId(_0x2c4575));
        },
              _0x52d721 = _0xfa8754 => {
          _0x2fbfda.game.audio.isAudioSceneActive(_0xfa8754) && _0x2fbfda.game.audio.startAudioScene(_0xfa8754);
        },
              _0x297f68 = _0x27e777 => {
          _0x2fbfda.game.audio.stopAudioScene(_0x27e777);
        },
              _0x104a26 = () => {
          _0x1632cb || _0x2fbfda.events.callRemote('1454263055');
        },
              _0x458196 = async () => {
          _0x31df60 || (_0x31df60 = new _0x541095.Scaleform('HORSE_RACING_WALL'), _0x2fbfda.game.graphics.setScaleformFitRendertarget(_0x31df60.handle, true), _0x31df60.callFunction('SHOW_SCREEN', 0x0), _0x1632cb && Object.values(_0x1632cb).forEach((_0x57c6f0, _0x2e6b7e) => {
            _0x2fbfda.events.call('fun.casino.horserace.setHorse', _0x2e6b7e + 0x1, _0x57c6f0.name, _0x57c6f0.rate + '/1', _0x57c6f0.colors[0x1], _0x57c6f0.colors[0x2], _0x57c6f0.colors[0x3], _0x57c6f0.colors[0x4]);
          }), _0x533a8c());
        },
              _0x1662d1 = () => {
          _0x31df60 && (_0x31df60.destroy(), _0x31df60 = undefined);
        };
      },
      0x46c8: (_0x4273f0, _0x146fcf, _0x125dfe) => {
        'use strict';

        const a0_0x449de1 = {
          _0x218c02: 0x1d66,
          _0x7b9fab: 0x2627,
          _0x41b783: 0x2606,
          _0x2e4699: 0xf82,
          _0xdf8da4: 0x1269
        },
              a0_0x449e13 = {
          _0x84ae42: 0xa59,
          _0x2fa0e6: 0x1bbe,
          _0x36e125: 0x14d2,
          _0x1301ee: 0x1a5
        },
              a0_0x3e2e15 = {
          _0x2879f3: 0x1bbe,
          _0xb80c89: 0x2530,
          _0x50323e: 0x1e3d
        },
              a0_0x48117a = {
          _0x4d2eb9: 0x1a35
        },
              a0_0xddc12e = {
          _0x5219ba: 0xf82,
          _0x105fef: 0xaf5,
          _0x57c0eb: 0x1590,
          _0x520459: 0x1a35,
          _0x43de7c: 0x2292,
          _0x46d3d9: 0x1271
        },
              a0_0x4cdc78 = {
          _0xbd6c98: 0x1d66,
          _0x4c1d0c: 0xf2f,
          _0x4a1be3: 0x21d9,
          _0x50b185: 0x1d66,
          _0xdbdcb2: 0x726,
          _0x5ad659: 0x726,
          _0xf22a51: 0x1d66,
          _0x19d41a: 0xf2f,
          _0x718097: 0x1d66,
          _0x3e1510: 0x111b,
          _0x936d05: 0x5cf
        },
              a0_0x46f30d = {
          _0x1bc8ef: 0x15e0,
          _0x2b1b5c: 0x1151,
          _0x4bbfcf: 0x7c8,
          _0x10defd: 0x535,
          _0x183f4b: 0x1a7c,
          _0x2a3e4a: 0x1269,
          _0x4c6cc1: 0x535,
          _0x59c310: 0x1ea6,
          _0x4a61cd: 0x1d55,
          _0x14395d: 0x1269,
          _0x36be33: 0x1cd8,
          _0x3cfce8: 0x131a,
          _0x19fdb5: 0x1d66,
          _0x29cb9d: 0xf2f,
          _0x322716: 0x18c8,
          _0x58cd27: 0x21d9,
          _0x12caf7: 0x2399,
          _0x3077db: 0x828,
          _0x990428: 0x1d66,
          _0x73cda1: 0x1a81,
          _0x54e2a1: 0x9ba,
          _0x3035d9: 0x5cf
        },
              a0_0x3bdf22 = {
          _0x5c8c62: 0x17f
        },
              a0_0x1beff7 = {
          _0x1e8e77: 0xa9d,
          _0x2afdd6: 0xf82,
          _0x5de9ab: 0x18e4,
          _0x25385e: 0x1d55,
          _0x2dd5f1: 0xd79
        },
              a0_0x53ad99 = {
          _0x123e9a: 0x1edc,
          _0x27ad9f: 0x59d
        },
              a0_0x78364c = {
          _0x5a7d40: 0x22d2
        },
              a0_0x58b735 = {
          _0x29a93b: 0x1f92
        };

        _0x125dfe.r(_0x146fcf);

        var _0x569584 = _0x125dfe(0x16a21),
            _0x5e64cd = _0x125dfe(0x3064),
            _0x2f1c1d = _0x125dfe(0x161cd);

        _0x125dfe.g.casinoInteriorId = 0x43301, _0x125dfe.g.casinoInteriorDimension = 0xd6d8;

        const _0x22e81c = _0x2f1c1d.players.local,
              _0x7d6f9c = {
          'diamonds': 'CASINO_DIA_PL',
          'skulls': 'CASINO_HLW_PL',
          'snowflakes': 'CASINO_SNWFLK_PL',
          'winner': 'CASINO_WIN_PL'
        },
              _0x2cf5a1 = 'casinoscreen_01',
              _0x1abbe6 = _0x2f1c1d.game.joaat('vw_vwint01_video_overlay'),
              _0x3e8b0e = 'Prop_Screen_Vinewood',
              _0x4349bf = [_0x2f1c1d.colshapes.newSphere(926.56, 48.85, 81.1, 0x2), _0x2f1c1d.colshapes.newSphere(0x39d, 46.28, 81.1, 0x2), _0x2f1c1d.colshapes.newSphere(923.97, 43.86, 81.1, 0x2)],
              _0x2fe198 = (_0x2f1c1d.markers.new(0x1, new _0x2f1c1d.Vector3(924.2497, 46.7545, 80.0961), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        }), _0x2f1c1d.colshapes.newSphere(1089.66, 205.87, -48.99, 0x1, _0x125dfe.g.casinoInteriorDimension));

        _0x2fe198.marker = _0x2f1c1d.markers.new(0x1, new _0x2f1c1d.Vector3(1089.66, 205.87, -49.99), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': _0x125dfe.g.casinoInteriorDimension
        });

        const _0x110362 = _0x2f1c1d.colshapes.newSphere(1085.482, 214.485, -49.2, 0x1, _0x125dfe.g.casinoInteriorDimension);

        _0x110362.marker = _0x2f1c1d.markers.new(0x1, new _0x2f1c1d.Vector3(1085.482, 214.485, -50.2), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': _0x125dfe.g.casinoInteriorDimension
        });

        const _0x78c089 = _0x2f1c1d.colshapes.newSphere(964.8877, 58.6441, 112.553, 0x1);

        let _0x11a3d0, _0x207b6b;

        _0x78c089.marker = _0x2f1c1d.markers.new(0x1, new _0x2f1c1d.Vector3(964.8877, 58.6441, 111.553), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        }), (_0x125dfe.g.casinoEnabled = true, _0x125dfe.g.inCasino = false, _0x2f1c1d.events.add('fun.casino.toggleCasino', _0x595d03 => {
          _0x125dfe.g.casinoEnabled = _0x595d03;
        }), _0x2f1c1d.events.add('fun.casino.toggleblackjack', _0x2ffb1b => {
          _0x125dfe.g.toggleblackjack = _0x2ffb1b;
        }), _0x2f1c1d.events.add('fun.casino.togglehorserace', _0x14a53d => {
          _0x125dfe.g.togglehorserace = _0x14a53d;
        }), _0x2f1c1d.events.add('fun.casino.togglepoker', _0x3fda81 => {
          _0x125dfe.g.togglepoker = _0x3fda81;
        }), _0x2f1c1d.events.add('playerEnterColshape', async _0x658262 => {
          if (_0x569584.api.isAuthed()) return _0x4349bf.includes(_0x658262) ? (_0x207b6b = _0x658262, void _0x569584.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0x2fe198 === _0x658262 ? (_0x207b6b = _0x658262, void _0x569584.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : _0x110362 === _0x658262 ? (_0x207b6b = _0x658262, void _0x569584.api.displayHelpStringTrans('displayHelpString.exitRoof', false, true, 0x1388)) : _0x78c089 === _0x658262 ? (_0x207b6b = _0x658262, void _0x569584.api.displayHelpStringTrans('displayHelpString.enterCasino', false, true, 0x1388)) : undefined;
        }), _0x2f1c1d.events.add('playerExitColshape', async _0x540e96 => {
          if (_0x569584.api.isAuthed()) return _0x4349bf.includes(_0x540e96) || _0x2fe198 === _0x540e96 || _0x110362 === _0x540e96 || _0x78c089 === _0x540e96 ? (_0x207b6b = null, void _0x2f1c1d.game.ui.clearHelp(true)) : undefined;
        }), _0x2f1c1d.events.add('keys.e', async () => {
          if (_0x207b6b && _0x207b6b == _0x2fe198) return await _0x569584.api.teleportAndLoad(new _0x2f1c1d.Vector3(921.94, 47.02, 81.1), 0x39, {
            'fadeTime': 0x3e8,
            'dimension': 0x0
          }), _0x416606(), _0x207b6b = false, _0x2f1c1d.game.ui.clearHelp(true), void _0x2f1c1d.events.callRemote('3404531499', null);
          if (_0x207b6b && _0x207b6b == _0x110362) return await _0x569584.api.teleportAndLoad(new _0x2f1c1d.Vector3(962.78, 60.06, 112.55), 0x136, {
            'fadeTime': 0x3e8,
            'dimension': 0x0
          }), _0x416606(), _0x207b6b = false, void _0x2f1c1d.game.ui.clearHelp(true);

          if (_0x207b6b && (_0x4349bf.includes(_0x207b6b) || _0x78c089 == _0x207b6b)) {
            const _0x548786 = _0x207b6b;

            let _0x12a294;

            return _0x207b6b = false, _0x2f1c1d.game.ui.clearHelp(true), _0x569584.api.toggleHud(false), _0x569584.api.toggleRadar(false), _0x569584.api.toggleChat(false), _0x22e81c.taskPause(0x1), _0x548786 != _0x78c089 && (_0x12a294 = _0x2f1c1d.cameras.new('casino1', new _0x2f1c1d.Vector3(919.23, 51.64, 84.06), new _0x2f1c1d.Vector3(0x0, 0x0, 0x0), 0x28), _0x12a294.pointAtCoord(931.0162, 43.4575, 81.0958), _0x12a294.setActive(true), _0x2f1c1d.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x22e81c.taskGoStraightToCoord(931.0162, 43.4575, 81.0958, 0.5, 0x1388, 0xed, 0x1)), await _0x2f1c1d.game.sleep(0x3e8), _0x572529(), await _0x2f1c1d.game.sleep(0x7d0), _0x548786 != _0x78c089 && _0x2f1c1d.cameras.exists(_0x12a294) && (_0x12a294 = _0x12a294.destroy()), _0x569584.api.fadeOut(0x7d0), await _0x2f1c1d.game.sleep(0x834), _0x13bb81(_0x548786 == _0x78c089), void _0x22ba76();
          }
        }));

        const _0x572529 = () => {
          _0x11a3d0 = _0x2f1c1d.cameras.new('casino2', new _0x2f1c1d.Vector3(815.692138671875, 57.65880584716797, 89.5661849975586), new _0x2f1c1d.Vector3(0x0, 0x0, 0x0), 0x28), _0x11a3d0.pointAtCoord(963.07, 104.37, 120.74), _0x11a3d0.setActive(true), _0x2f1c1d.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0);
        },
              _0x22ba76 = () => {
          _0x11a3d0 && (_0x11a3d0 = _0x11a3d0.destroy()), _0x2f1c1d.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0);
        },
              _0x13bb81 = async (_0x1fb552 = false) => {
          _0x2f1c1d.game.streaming.isIplActive('vw_casino_main') || _0x2f1c1d.game.streaming.requestIpl('vw_casino_main'), await _0x569584.api.waitForIpl('vw_casino_main'), _0x1fb552 ? await _0x569584.api.teleportAndLoad(new _0x2f1c1d.Vector3(1087.39, 216.1, -49.2), 0x12c, {
            'fadeTime': 0x3e8,
            'dimension': _0x125dfe.g.casinoInteriorDimension
          }) : await _0x569584.api.teleportAndLoad(new _0x2f1c1d.Vector3(1092.77, 210.95, -48.9), 0x12c, {
            'fadeTime': 0x3e8,
            'dimension': _0x125dfe.g.casinoInteriorDimension
          }), _0x569584.api.toggleHud(true), _0x569584.api.toggleRadar(true), _0x569584.api.toggleChat(true), _0x2f1c1d.events.callRemote('3404531499', 'casino'), _0x2f1c1d.game.audio.requestScriptAudioBank('DLC_VINEWOOD/CASINO_GENERAL', false), _0x2f1c1d.game.audio.requestScriptAudioBank('DLC_VINEWOOD/CASINO_SLOT_MACHINES_01', false), _0x2f1c1d.game.audio.requestScriptAudioBank('DLC_VINEWOOD/CASINO_SLOT_MACHINES_02', false), _0x2f1c1d.game.audio.requestScriptAudioBank('DLC_VINEWOOD/CASINO_SLOT_MACHINES_03', false), _0x2f1c1d.game.audio.startAudioScene('DLC_VW_Casino_General');
        },
              _0x416606 = () => {
          _0x2f1c1d.game.audio.releaseNamedScriptAudioBank('DLC_VINEWOOD/CASINO_GENERAL'), _0x2f1c1d.game.audio.releaseNamedScriptAudioBank('DLC_VINEWOOD/CASINO_SLOT_MACHINES_01'), _0x2f1c1d.game.audio.releaseNamedScriptAudioBank('DLC_VINEWOOD/CASINO_SLOT_MACHINES_02'), _0x2f1c1d.game.audio.releaseNamedScriptAudioBank('DLC_VINEWOOD/CASINO_SLOT_MACHINES_03'), _0x2f1c1d.game.audio.stopAudioScene('DLC_VW_Casino_General'), _0x2f1c1d.game.streaming.removeIpl('vw_casino_main');
        };

        let _0x1f58f4,
            _0x524649,
            _0x1d2b24 = 0x0;

        _0x2f1c1d.events.add('fun.casino.setVehicle', _0x51b287 => {
          _0x524649 = _0x2f1c1d.vehicles.new(_0x2f1c1d.game.joaat(_0x51b287), new _0x2f1c1d.Vector3(0x44c, 0xdc, -0x32), {
            'locked': true,
            'dimension': _0x125dfe.g.casinoInteriorDimension
          }), _0x2f1c1d.vehicles.exists(_0x524649) && (_0x524649.setColours(0x1b, 0x1b), _0x524649.setNumberPlateTextIndex(0x1), _0x524649.setNumberPlateText('JENGAS'), _0x524649.setOnGroundProperly(), _0x524649.freezePosition(true), _0x524649.isCasinoPodium = true);
        }), _0x2f1c1d.events.add('entityStreamIn', _0x184552 => {
          _0x184552 && 'vehicle' === _0x184552.type && _0x2f1c1d.vehicles.exists(_0x184552) && _0x184552.isCasinoPodium && _0x184552.setOnGroundProperly();
        }), _0x2f1c1d.events.add('render', () => {
          _0x125dfe.g.inCasino && _0x1f58f4 && _0x1f58f4.handle > 0x0 && _0x524649 && (_0x1d2b24 += 0.05, _0x1d2b24 >= 0x168 && (_0x1d2b24 = 0x0), _0x1f58f4.rotation = new _0x2f1c1d.Vector3(0x0, 0x0, _0x1d2b24), _0x524649.setHeading(_0x1d2b24));
        }), _0x2f1c1d.events.add('playerEnterInterior', _0x5214ae => {
          _0x5214ae === _0x125dfe.g.casinoInteriorId && (_0x125dfe.g.inCasino = true, _0x2f1c1d.events.call('utils.disablePlayerJump', true), _0x1d94e1(true));
        }), _0x2f1c1d.events.add('playerExitInterior', _0x2dc4d7 => {
          _0x2dc4d7 === _0x125dfe.g.casinoInteriorId && (_0x125dfe.g.inCasino = false, _0x2f1c1d.events.call('utils.disablePlayerJump', false), _0x1d94e1(false));
        });
        let _0x58ed92 = 0x0;

        const _0x1d94e1 = async _0x5004c2 => {
          _0x5004c2 ? (await _0x569584.api.requestStreamedTextureDict(_0x3e8b0e), _0x58ed92 && _0x2f1c1d.game.ui.releaseNamedRendertarget(_0x2cf5a1), _0x58ed92 = _0x569584.api.createNamedRenderTargetForModel(_0x2cf5a1, _0x1abbe6), _0x569584.api.setScreenType(_0x7d6f9c[(0x0, _0x5e64cd.isWinter)() ? 'snowflakes' : 'diamonds'], 0x0, -0x64)) : (_0x2f1c1d.game.ui.releaseNamedRendertarget(_0x2cf5a1), _0x2f1c1d.game.graphics.setStreamedTextureDictAsNoLongerNeeded(_0x3e8b0e), _0x2f1c1d.game.graphics.setTvChannel(-0x1));
        };

        _0x2f1c1d.events.add('fun.casino.interior.setScreenType', (_0x2ddba2 = (0x0, _0x5e64cd.isWinter)() ? 'snowflakes' : 'diamonds') => {
          _0x58ed92 && _0x569584.api.setScreenType(_0x7d6f9c[_0x2ddba2], 0x0, -0x64);
        }), _0x2f1c1d.events.add('render', () => {
          _0x125dfe.g.inCasino && _0x58ed92 && (_0x2f1c1d.game.ui.setTextRenderId(_0x58ed92), _0x2f1c1d.game.graphics.set2dLayer(0x4), _0x2f1c1d.game.graphics.setScriptGfxDrawBehindPausemenu(true), _0x2f1c1d.game.graphics.drawInteractiveSprite(_0x3e8b0e, 'BG_Wall_Colour_4x4', 0.25, 0.5, 0.5, 0x1, 0x0, 0xff, 0xff, 0xff, 0xff), _0x2f1c1d.game.graphics.drawTvChannel(0.5, 0.5, 0x1, 0x1, 0x0, 0xff, 0xff, 0xff, 0xff), _0x2f1c1d.game.ui.setTextRenderId(_0x2f1c1d.game.hud.getDefaultScriptRendertargetRenderId()));
        }), _0x2f1c1d.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x2f1c1d.game.entity.createModelHideExcludingScriptObjects(0x44c, 0xdc, -0x32, 0xa, 0xa2f3b22a, true), _0x1f58f4 = _0x2f1c1d.objects.new(0xa2f3b22a, new _0x2f1c1d.Vector3(0x44c, 0xdc, -0x32), {
            'dimension': _0x125dfe.g.casinoInteriorDimension
          });
        });
      },
      0x1c1a: (_0x179fa5, _0x123295, _0x1401cb) => {
        'use strict';

        const a0_0x58ce20 = {
          _0x2037dd: 0x14d2,
          _0x5c6650: 0x662,
          _0x20e513: 0x535,
          _0x499661: 0x3e9,
          _0x5ed1b3: 0x623,
          _0x2ab2b2: 0x1dc8,
          _0x2ffb56: 0xcf6,
          _0x56ca86: 0x1de9,
          _0x3d03be: 0x220b,
          _0x48f1fb: 0x1d66,
          _0x588cdc: 0x1870,
          _0x3753da: 0x1de9,
          _0x316b25: 0x1779,
          _0x39448c: 0x1d66
        },
              a0_0x434b1e = {
          _0x49482c: 0x1d66,
          _0x1956d5: 0xf2f,
          _0x5d34fd: 0x1b3a,
          _0x22430b: 0x1d62
        };

        _0x1401cb.r(_0x123295);

        var _0xeb8e8e = _0x1401cb(0x16a21),
            _0x31c9c3 = _0x1401cb(0x161cd);

        const _0x2c38ed = _0x31c9c3.players.local,
              _0x1f1477 = _0x31c9c3.game.joaat('vw_prop_vw_luckywheel_02a'),
              _0x5c4573 = new _0x31c9c3.Vector3(1109.29, 229.22, -49.64),
              _0x2d518a = new _0x31c9c3.Vector3(1111.052, 229.8579, -49.133),
              _0x3b18ee = new _0x31c9c3.Vector3(1111.052, 229.849, -50.641);

        let _0x4b4e8c;

        const _0x5d5567 = _0x31c9c3.colshapes.newSphere(1111.08, 228.6, -49.64, 0x3, _0x1401cb.g.casinoInteriorDimension);

        let _0x3181ae,
            _0x40065d = false,
            _0x43a2de = false,
            _0x1cee4f = false;

        _0x31c9c3.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x4b4e8c = _0x31c9c3.objects.new(_0x1f1477, _0x2d518a, {
            'rotation': new _0x31c9c3.Vector3(0x0, 0x0, 0x0),
            'dimension': _0x1401cb.g.casinoInteriorDimension
          }), _0x31c9c3.objects.new(_0x31c9c3.game.joaat('vw_prop_vw_jackpot_on'), _0x3b18ee, {
            'dimension': _0x1401cb.g.casinoInteriorDimension
          }), _0x31c9c3.objects.new(_0x31c9c3.game.joaat('vw_prop_vw_luckylight_on '), _0x3b18ee, {
            'dimension': _0x1401cb.g.casinoInteriorDimension
          });
        }), _0x31c9c3.events.add('fun.casino.luckywheel.roll', _0x2357f7 => {
          _0x5f576b(_0x2357f7 -= 0x1), _0x31c9c3.game.audio.playSoundFromCoord(0x1, 'Spin_Start', _0x2d518a.x, _0x2d518a.y, _0x2d518a.z, 'dlc_vw_casino_lucky_wheel_sounds', true, 0x0, false);
        }), _0x31c9c3.events.add('playerEnterColshape', _0x435806 => {
          _0x435806 && !_0x40065d && _0x1401cb.g.casinoEnabled && _0x5d5567 === _0x435806 && (_0x43a2de = _0x435806, _0xeb8e8e.api.displayHelpStringTrans('displayHelpString.toSpinWheel', false, true, 0x1388));
        }), _0x31c9c3.events.add('playerExitColshape', _0x5f01c0 => {
          _0x5f01c0 && _0x43a2de == _0x5f01c0 && (_0x43a2de = null, _0x31c9c3.game.ui.clearHelp(true));
        }), _0x31c9c3.events.add('keys.e', () => !(_0x2c38ed.isDead() || _0x31c9c3.gui.cursor.visible || 0x0 != _0x40065d || !_0x1401cb.g.casinoEnabled) && null != _0x43a2de && void (_0x43a2de === _0x5d5567 && (_0x43a2de = null, _0x31c9c3.events.callRemote('424881768')))), _0x31c9c3.events.add('fun.casino.luckywheel.requestRollResponse', async (_0xd51588 = false) => {
          if (true === _0xd51588) {
            _0x40065d = true, _0x31c9c3.events.call('utils.disablePlayerMove', true), _0xeb8e8e.api.usingSystemAnim(true), _0xeb8e8e.api.toggleChat(false), _0xeb8e8e.api.setPlayerPos(_0x2c38ed, _0x5c4573, false), _0x2c38ed.setHeading(312.2), _0xeb8e8e.api.setDiscordStatus('luckywheel');
            let _0x21d978 = 'anim_casino_a@amb@casino@games@lucky7wheel@female';
            0x0 === _0xeb8e8e.api.getEntitySync(_0x2c38ed, 'gender', 'number') && (_0x21d978 = 'anim_casino_a@amb@casino@games@lucky7wheel@male');

            const _0x1bcf30 = await _0xeb8e8e.api.taskPlayAnim(_0x21d978, 'enter_to_armraisedidle', 0x0, false, false, false);

            await _0x31c9c3.game.sleep(0x3e8 * _0x1bcf30);

            const _0xce524b = await _0xeb8e8e.api.taskPlayAnim(_0x21d978, 'armraisedidle_to_spinningidle_high', 0x0, false, true, false);

            await _0x31c9c3.game.sleep(0x3e8 * _0xce524b - 0xc8), _0xeb8e8e.api.taskPlayAnim(_0x21d978, 'spinningidle_high', 0x1, true, true, false);
          }
        }), _0x31c9c3.events.add('fun.casino.luckywheel.onFinishRoll', () => {
          _0x40065d = false, _0xeb8e8e.api.usingSystemAnim(false), _0xeb8e8e.api.toggleChat(true), _0x31c9c3.events.call('utils.disablePlayerMove', false), _0xeb8e8e.api.setDiscordStatus();
        });
        let _0x405c68 = 0x0,
            _0x271ab2 = 0x0,
            _0x3a6fd2 = 0x0;

        const _0x5f576b = _0x311271 => {
          0x0 !== _0x4b4e8c.handle && (_0x405c68 = _0x4b4e8c.getRotation(0x2).z, _0x4b4e8c.setRotation(0x0, 0x0, _0x405c68, 0x2, true), _0x3181ae && (clearInterval(_0x3181ae), _0x3181ae = undefined), _0x271ab2 = 0x708 + 0x12 * _0x311271, _0x3a6fd2 = 0x0, _0x1cee4f = true);
        };

        let _0x18e577 = Date.now();

        _0x31c9c3.events.add('render', () => {
          if (_0x1cee4f && 0x0 !== _0x4b4e8c.handle && Date.now() - _0x18e577 >= 0xf) {
            _0x18e577 = Date.now();

            const _0xdac52b = Math.abs(0.008 * (_0x3a6fd2 - _0x271ab2));

            _0x3a6fd2 += _0xdac52b > 0.3 ? _0xdac52b : 0.3, _0x388f7e(_0x3a6fd2, _0x405c68, _0x271ab2);
          }
        });

        const _0x388f7e = (_0x29ffe1, _0x53b1ad, _0x102546) => {
          var _0x305091, _0x3e2230;

          _0x29ffe1 >= _0x102546 - 0x1 ? (_0x1cee4f = false, _0x31c9c3.game.audio.playSoundFromCoord(0x1, 'Win', _0x2d518a.x, _0x2d518a.y, _0x2d518a.z, 'dlc_vw_casino_lucky_wheel_sounds', true, 0x0, false)) : (_0x305091 = _0x29ffe1, _0x3e2230 = _0x53b1ad, 0x0 !== _0x4b4e8c.handle && _0x4b4e8c.setRotation(0x0, -_0x305091, _0x3e2230, 0x2, true));
        };
      },
      0x15931: (_0x13b291, _0x404aa3, _0x48e1a5) => {
        'use strict';

        const a0_0x5b29da = {
          _0x1b3d72: 0x535,
          _0x9b1cdf: 0x242c,
          _0x4c0ca0: 0x23c9,
          _0x3cf559: 0x213a,
          _0xa97a9a: 0x19d6,
          _0x4ae27c: 0x535,
          _0x22c3dd: 0x12a3,
          _0x1206dd: 0x1d66,
          _0x379bae: 0xf2f,
          _0x5d3c95: 0x169e,
          _0x39f11e: 0x25c3,
          _0x4705db: 0x1a4c
        },
              a0_0x1fa470 = {
          _0x426cbd: 0xee5
        },
              a0_0x2e4f15 = {
          _0x548d00: 0x35c,
          _0x593b62: 0x191a,
          _0x54fbb1: 0x19d4,
          _0x1b6ccd: 0x17a,
          _0x249975: 0x191a,
          _0xf70c28: 0x16a4,
          _0x243fcc: 0x157d,
          _0x2a7149: 0x1b9,
          _0x12929b: 0xe74,
          _0x3a83a6: 0x21a3,
          _0x254663: 0x535
        },
              a0_0x1259c9 = {
          _0x3a3724: 0x535,
          _0x2c0e7d: 0x20dd,
          _0x187179: 0x2530
        },
              a0_0x1a6ac4 = {
          _0x3b3973: 0xe6d,
          _0x49b8aa: 0xe6d,
          _0x125aa4: 0xf2f,
          _0x3ba95e: 0x2be
        },
              a0_0x3f45c1 = {
          _0x21849d: 0x11dc,
          _0x569b87: 0x2606,
          _0x72473: 0xf82,
          _0x4230bc: 0x1d66,
          _0x3877b7: 0x2225,
          _0x2c80a8: 0x1d55,
          _0x518b92: 0x1700,
          _0x18a499: 0x2326,
          _0x3470e0: 0x385,
          _0x4ee524: 0x14d2,
          _0x28bdb2: 0x1d66,
          _0x3496bb: 0x169e,
          _0x1a77b0: 0xf31,
          _0x452695: 0x1a4c,
          _0x241249: 0x1d66,
          _0x34ed39: 0x1da8,
          _0x18c3fd: 0x1992,
          _0x3b6cfb: 0x1329,
          _0x316f28: 0x1d66,
          _0x41b4d5: 0x1329,
          _0x544d95: 0x1e94,
          _0x149886: 0x13f4,
          _0x316837: 0x21b2
        },
              a0_0x1fed86 = {
          _0x56b786: 0x1d66,
          _0xaf9633: 0xd79,
          _0x2067d7: 0x535,
          _0x40b47b: 0x535,
          _0x5ea411: 0x1cd8
        },
              a0_0x301000 = {
          _0x4dd8e1: 0xe6d,
          _0x1c5a73: 0xe1b,
          _0x18575d: 0x1d66,
          _0x5a157a: 0x208c,
          _0x504bc6: 0x1de9,
          _0x3728c9: 0xc90,
          _0x22c62f: 0x1d66,
          _0x356022: 0x1fe9,
          _0x47dfa4: 0x91b
        },
              a0_0x515543 = {
          _0x10bfb3: 0xe1b,
          _0x1d3118: 0x1d66,
          _0x597d0f: 0x208c,
          _0x4a2055: 0x18dd
        },
              a0_0x5c4472 = {
          _0xd5b17f: 0x1366,
          _0xaf69aa: 0xe1b,
          _0x3321e0: 0x1de9,
          _0x2c6dd8: 0x1de9,
          _0x2c5157: 0x24ce
        },
              a0_0x1d2302 = {
          _0x251021: 0x535,
          _0x14dfef: 0xf86,
          _0x5994aa: 0x152e
        },
              a0_0x4b178b = {
          _0x5d0e55: 0x235b,
          _0x153048: 0x535,
          _0x2c4e4d: 0x1c66,
          _0x4c25f8: 0x535,
          _0x569d47: 0x535,
          _0x3cf296: 0xf86,
          _0x54576a: 0x2224,
          _0x37780c: 0x21b2,
          _0x130e19: 0x263f,
          _0xb9a47e: 0x2530
        },
              a0_0x32ad52 = {
          _0x1e5bd9: 0x14d2,
          _0x2371ac: 0x1a5,
          _0x387350: 0x535,
          _0x78da8b: 0x14d2
        },
              a0_0x148fab = {
          _0x1a34e2: 0x1ec5,
          _0x54c5d5: 0x213a,
          _0x13e18e: 0x19d6,
          _0x20592e: 0x3a7,
          _0x16a916: 0x14d2,
          _0x1a1499: 0x1da5,
          _0x482e97: 0x535,
          _0x5371aa: 0x13b0,
          _0x390eb4: 0x3e9,
          _0x4da8d7: 0x1870,
          _0xb6ca40: 0x1d66
        },
              a0_0x4acb52 = {
          _0x5cfd47: 0x2359
        },
              a0_0x4927d5 = {
          _0x412d3a: 0x59d
        },
              a0_0x109f9b = {
          _0x5bb2f1: 0x11f8,
          _0x5c0647: 0x3a7,
          _0x14abed: 0x14f3
        },
              a0_0x37e185 = {
          _0x5ea25d: 0x21b2,
          _0x2c13fd: 0x2606,
          _0x4f3655: 0xf82,
          _0x39417c: 0x2379,
          _0x5079db: 0x1c33,
          _0xf58999: 0x1d55,
          _0x14cdd0: 0x1d55,
          _0x3c4d0c: 0x21b2,
          _0x250741: 0x2530,
          _0x514d32: 0x535,
          _0x352d52: 0x1d66,
          _0x3be8c0: 0x11dc,
          _0x3f25b: 0x2422,
          _0x2bce44: 0x1269,
          _0x2b89a6: 0xf8f,
          _0x51b6ca: 0x1bed,
          _0x2eb483: 0xe1b,
          _0x1c5b53: 0x1672,
          _0x29173c: 0xe6d
        };

        _0x48e1a5.r(_0x404aa3);

        var _0x2db1f1 = _0x48e1a5(0x16a21),
            _0x4508d3 = _0x48e1a5(0xb9cc),
            _0x3d2c4b = _0x48e1a5(0x176d8),
            _0x34fcc2 = (_0x48e1a5(0x6611), _0x48e1a5(0x7155)),
            _0x3fb9b2 = _0x48e1a5(0x29fd),
            _0x3ad533 = _0x48e1a5(0xba76),
            _0x31174a = _0x48e1a5(0xb1f),
            _0x39d046 = _0x48e1a5(0x66f9),
            _0xf67d11 = _0x48e1a5(0x16a7d),
            _0x2c6fa9 = _0x48e1a5(0x161cd);

        const _0x435cfb = _0x2c6fa9.players.local;
        let _0x2d7438 = null,
            _0x2a1c1e = null,
            _0x437222 = null,
            _0x494588 = null,
            _0x1c110c = null,
            _0x548d3e = false,
            _0x279408 = null,
            _0x1f4960 = null,
            _0x24fdd9 = null,
            _0x283e25 = false,
            _0x31f223 = 0x0;
        const _0x121007 = [{
          'objetName': 'vw_prop_casino_roulette_01',
          'x': 1144.814,
          'y': 268.2634,
          'z': -52.8409,
          'r': -0x87
        }, {
          'objetName': 'vw_prop_casino_roulette_01',
          'x': 1150.355,
          'y': 262.7224,
          'z': -52.8409,
          'r': 0x2d
        }, {
          'objetName': 'vw_prop_casino_roulette_01b',
          'x': 1133.958,
          'y': 262.1071,
          'z': -52.0409,
          'r': 0x87
        }, {
          'objetName': 'vw_prop_casino_roulette_01b',
          'x': 1129.595,
          'y': 267.2637,
          'z': -52.0409,
          'r': -0x2d
        }, {
          'objetName': 'vw_prop_casino_roulette_01b',
          'x': 1144.618,
          'y': 252.2411,
          'z': -52.0409,
          'r': -0x2d
        }, {
          'objetName': 'vw_prop_casino_roulette_01b',
          'x': 1148.981,
          'y': 247.0846,
          'z': -52.0409,
          'r': 0x87
        }];
        let _0x468008 = ['S_F_Y_Casino_01', 'S_M_Y_Casino_01', 'S_M_Y_Casino_01', 'S_F_Y_Casino_01', 'S_M_Y_Casino_01', 'S_F_Y_Casino_01'],
            _0x553195 = [],
            _0xf75d6b = [];
        _0x2c6fa9.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x121007.forEach(async (_0x41badd, _0x3d7d9c) => {
            const a0_0x129000 = {
              _0x219070: 0xe1b,
              _0x39a4ab: 0xe1b,
              _0x3ace47: 0x2359
            },
                  a0_0x3dbac9 = {
              _0x11e0bc: 0x11dc,
              _0x30be3c: 0x2422,
              _0x4c6455: 0x2405,
              _0x14ba99: 0x1269
            };
            _0xf75d6b[_0x3d7d9c] = {}, _0xf75d6b[_0x3d7d9c].table = _0x2c6fa9.objects.new(_0x2c6fa9.game.joaat(_0x41badd.objetName), new _0x2c6fa9.Vector3(_0x41badd.x, _0x41badd.y, _0x41badd.z), {
              'rotation': new _0x2c6fa9.Vector3(0x0, 0x0, _0x41badd.r),
              'dimension': _0x48e1a5.g.casinoInteriorDimension
            }), _0xf75d6b[_0x3d7d9c].table && _0xf75d6b[_0x3d7d9c].table.handle && _0x2db1f1.api.invokeNative('_SET_OBJECT_TEXTURE_VARIANT', _0xf75d6b[_0x3d7d9c].table.handle, 0x3);

            let _0x587583 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x41badd.x, _0x41badd.y, _0x41badd.z, _0x41badd.r, 0.01, 0.7, 0x1),
                _0x50c080 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x41badd.x, _0x41badd.y, _0x41badd.z, _0x41badd.r, -0.734742, -0.16617, 0x0);

            _0xf75d6b[_0x3d7d9c].ball = await (0x0, _0x39d046.n)(_0x2c6fa9.game.joaat('vw_prop_roulette_ball'), new _0x2c6fa9.Vector3(_0x50c080.x, _0x50c080.y, _0x50c080.z), {
              'rotation': new _0x2c6fa9.Vector3(0x0, 0x0, _0x41badd.r),
              'dimension': _0x48e1a5.g.casinoInteriorDimension
            }), _0xf75d6b[_0x3d7d9c].ball.rouletteTableId = _0x3d7d9c, _0xf75d6b[_0x3d7d9c].ped = _0x2c6fa9.peds.new(_0x2c6fa9.game.joaat(_0x468008[_0x3d7d9c]), new _0x2c6fa9.Vector3(_0x587583.x, _0x587583.y, _0x587583.z), _0x41badd.r - 0xb4, _0x48e1a5.g.casinoInteriorDimension), _0xf75d6b[_0x3d7d9c].ped.rouletteCroupier = _0x3d7d9c, _0x3fb9b2.Z.forEach((_0x2cef3e, _0x3f1e1c) => {
              const _0x493e8e = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x41badd.x, _0x41badd.y, _0x41badd.z, _0x41badd.r, _0x2cef3e.x, _0x2cef3e.y, _0x2cef3e.z),
                    _0xccd6eb = _0x2c6fa9.colshapes.newSphere(_0x493e8e.x, _0x493e8e.y, _0x493e8e.z, 0.5, _0x48e1a5.g.casinoInteriorDimension);

              _0xccd6eb.rouletteTable = _0x3d7d9c, _0xccd6eb.seatID = _0x3f1e1c;
            }), _0x34fcc2.Z[_0x3d7d9c].forEach(_0x22a337 => {
              _0xf75d6b[_0x3d7d9c].ped && _0xf75d6b[_0x3d7d9c].ped.setComponentVariation(_0x22a337[0x0], _0x22a337[0x1], _0x22a337[0x2], _0x22a337[0x3]);
            });
          });
        }), _0x2c6fa9.events.add('playerEnterColshape', _0x1a97bd => {
          undefined !== _0x1a97bd.rouletteTable && null == _0x2d7438 && null == _0x494588 && _0x48e1a5.g.casinoEnabled && (_0x2a1c1e = _0x1a97bd.rouletteTable, _0x437222 = _0x1a97bd.seatID, _0x2db1f1.api.displayHelpStringTrans('displayHelpString.seatTable', false, true, 0x1388));
        }), _0x2c6fa9.events.add('playerExitColshape', _0x4aee75 => {
          undefined !== _0x4aee75.rouletteTable && (_0x2a1c1e = null, _0x437222 = null, _0x2c6fa9.game.ui.clearHelp(true));
        });
        let _0x52b1a6 = {
          'dealerLib': 'anim_casino_b@amb@casino@games@roulette@dealer',
          'dealerLib_female': 'anim_casino_b@amb@casino@games@roulette@dealer_female',
          'tableLib': 'anim_casino_b@amb@casino@games@roulette@table',
          'tableStart': 'intro_wheel',
          'ballStart': 'intro_ball',
          'tableMain': 'loop_wheel',
          'ballMain': 'loop_ball',
          'ballRot': 0x5a,
          'speed': 0x21600
        };
        _0x2db1f1.api.requestAnimDict('anim_casino_b@amb@casino@games@roulette@table', true), _0x2db1f1.api.requestAnimDict('anim_casino_b@amb@casino@games@roulette@dealer', true), _0x2db1f1.api.requestAnimDict('anim_casino_b@amb@casino@games@roulette@dealer_female', true), _0x2c6fa9.events.add('fun.casino.initRoulette', _0x2c1000 => {
          _0x2c1000 = JSON.parse(_0x2c1000), _0x553195 = _0x2c1000;
        }), _0x2c6fa9.events.add('entityStreamIn', _0x50c1f0 => {
          if (_0x50c1f0 && _0x52b1a6) {
            if ('ped' == _0x50c1f0.type && null != _0x50c1f0.rouletteCroupier) {
              switch (_0x50c1f0.model == _0x2c6fa9.game.joaat('S_M_Y_Casino_01') ? _0x50c1f0.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer', 'idle', 0x8, 0x1, -0x1, 0x1, 0x0, false, false, false) : _0x50c1f0.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer_female', 'idle', 0x8, 0x1, -0x1, 0x1, 0x0, false, false, false), _0x50c1f0.handle) {
                case _0xf75d6b[0x0].ped.handle:
                  _0x2c6fa9.game.audio.setPedVoiceGroup(_0x50c1f0.handle, _0x2c6fa9.game.joaat('S_F_Y_Casino_01_ASIAN_01'));

                  break;

                case _0xf75d6b[0x1].ped.handle:
                  _0x2c6fa9.game.audio.setPedVoiceGroup(_0x50c1f0.handle, _0x2c6fa9.game.joaat('S_M_Y_Casino_01_WHITE_01'));

                  break;

                case _0xf75d6b[0x2].ped.handle:
                  _0x2c6fa9.game.audio.setPedVoiceGroup(_0x50c1f0.handle, _0x2c6fa9.game.joaat('S_M_Y_Casino_01_ASIAN_01'));

                  break;

                case _0xf75d6b[0x3].ped.handle:
                  _0x2c6fa9.game.audio.setPedVoiceGroup(_0x50c1f0.handle, _0x2c6fa9.game.joaat('S_F_Y_Casino_01_ASIAN_02'));

                  break;

                case _0xf75d6b[0x4].ped.handle:
                  _0x2c6fa9.game.audio.setPedVoiceGroup(_0x50c1f0.handle, _0x2c6fa9.game.joaat('S_M_Y_Casino_01_WHITE_02'));

                  break;

                case _0xf75d6b[0x5].ped.handle:
                  _0x2c6fa9.game.audio.setPedVoiceGroup(_0x50c1f0.handle, _0x2c6fa9.game.joaat('S_F_Y_Casino_01_LATINA_01'));

              }

              const _0x4be666 = _0x50c1f0.rouletteCroupier;
              _0x34fcc2.Z[_0x4be666].forEach(_0x128743 => {
                _0x50c1f0.setComponentVariation(_0x128743[0x0], _0x128743[0x1], _0x128743[0x2], _0x128743[0x3]);
              }), 0x2 !== _0x4be666 && 0x3 !== _0x4be666 && 0x4 !== _0x4be666 && 0x5 !== _0x4be666 || _0x2db1f1.api.invokeNative('_SET_OBJECT_TEXTURE_VARIANT', _0xf75d6b[_0x4be666].table.handle, 0x3);
            }

            if ('object' === _0x50c1f0.type && _0x50c1f0.rouletteTableId && _0x50c1f0.ball) {
              const _0x5bdcb1 = _0x50c1f0.rouletteTableId;

              let _0x4e5a5b = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x5bdcb1].x, _0x121007[_0x5bdcb1].y, _0x121007[_0x5bdcb1].z, _0x121007[_0x5bdcb1].r, -0.734742, -0.16617, 0x0);

              _0x50c1f0.ball.position = new _0x2c6fa9.Vector3(_0x4e5a5b.x, _0x4e5a5b.y, _0x4e5a5b.z);
            }
          }
        }), _0x2c6fa9.events.add('keys.e', () => {
          if (_0x435cfb.isDead() || _0x2c6fa9.gui.cursor.visible || null != _0x494588 || !_0x48e1a5.g.casinoEnabled) return false;

          if (null != _0x2d7438) {
            if (_0x283e25 && null != _0x2d7438) return;
            _0x2c6fa9.events.callRemote('1049551431'), _0xf75d6b[_0x2d7438].table.setCollision(true, false), _0x494588 = _0x2d7438, _0x2d7438 = null, _0x16a126(), _0x2c6fa9.events.call('utils.disablePlayerMove', false), _0x2db1f1.api.toggleChat(true), _0x2db1f1.api.toggleHud(true), _0x2db1f1.api.usingSystemAnim(false), _0x2c6fa9.game.ui.clearHelp(true), _0x2db1f1.api.setDiscordStatus(), null != _0x1c110c && _0x42d210(), _0x548d3e && (_0x548d3e = false), _0x24fdd9 = _0x2c6fa9.game.sleep(0x1194).then(() => {
              _0x494588 = null, _0x24fdd9 = null;
            });
          } else {
            if (null == _0x2a1c1e) return false;
            _0x494588 = _0x2a1c1e;

            const _0x5a7159 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2a1c1e].x, _0x121007[_0x2a1c1e].y, _0x121007[_0x2a1c1e].z, _0x121007[_0x2a1c1e].r, _0x3fb9b2.Z[_0x437222].x, _0x3fb9b2.Z[_0x437222].y, _0x3fb9b2.Z[_0x437222].z);

            _0x2c6fa9.events.callRemote('2191943657', _0x2a1c1e, _0x437222, JSON.stringify(_0x5a7159), _0x3fb9b2.Z[_0x437222].r + _0x121007[_0x2a1c1e].r), _0x24fdd9 = _0x2c6fa9.game.sleep(0xfa0).then(() => {
              _0x494588 = null, _0x24fdd9 = null;
            });
          }
        }), _0x2c6fa9.events.add('playerDeath2', _0x423a03 => {
          _0x423a03 == _0x435cfb && (null != _0x494588 && (_0x494588 = null), _0x2c6fa9.events.call('utils.disablePlayerMove', false), _0x2db1f1.api.toggleChat(true), _0x2db1f1.api.toggleHud(true), null != _0x1c110c && _0x42d210(), _0x548d3e && (_0x548d3e = false), _0x2db1f1.api.usingSystemAnim(false), _0x2c6fa9.events.call('fun.casino.disablePlayerRouletteExit', false));
        }), _0x2c6fa9.events.add('fun.casino.playerSitAtRouletteTable', (_0x59f7fb, _0x301287) => {
          const _0x1e9b0c = _0x2c6fa9.players.atRemoteId(_0x59f7fb);

          _0x2c6fa9.players.exists(_0x1e9b0c) && (_0x435cfb == _0x1e9b0c ? (_0x2db1f1.api.usingSystemAnim(true), _0xf75d6b[_0x301287].table.setCollision(false, false), _0x2d7438 = _0x301287, _0x2c6fa9.events.call('utils.disablePlayerMove', true), _0x2db1f1.api.toggleChat(false), _0x31f223 = _0x28da77(_0x2d7438)[0x0], _0x4dac7e(), _0x2db1f1.api.setDiscordStatus('roulette'), _0x2db1f1.api.displayHelpStringTrans('displayHelpString.toMakeBets', false, true, 0x3a98)) : _0xf75d6b[_0x301287].table && _0xf75d6b[_0x301287].table.setNoCollision(_0x1e9b0c.handle, false));
        }), _0x2c6fa9.events.add('fun.casino.allowRouletteBets', _0x1a4a83 => {
          _0x548d3e = _0x1a4a83, _0x1a4a83 ? _0x2db1f1.api.displayHelpStringTrans('displayHelpString.makeBets', false, true, 0x3a98) : _0x2db1f1.api.displayHelpStringTrans('displayHelpString.betsMade', false, true, 0x3a98);
        }), _0x2c6fa9.events.add('fun.casino.disablePlayerRouletteExit', _0x21b642 => {
          _0x283e25 = _0x21b642;
        }), _0x2c6fa9.events.add('fun.casino.spinRouletteWheel', (_0x130af8, _0x2cfcc3, _0x1222bd, _0xd72488) => {
          if (!_0xf75d6b[_0x130af8].table) return;
          _0xf75d6b[_0x130af8].table.playAnim('intro_wheel', 'anim_casino_b@amb@casino@games@roulette@table', 0x3e8, false, true, false, 0x0, _0x52b1a6.speed), _0xf75d6b[_0x130af8].table.forceAiAndAnimationUpdate();

          const _0x1c92a7 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x130af8].x, _0x121007[_0x130af8].y, _0x121007[_0x130af8].z, _0x121007[_0x130af8].r, -0.734742, -0.16617, 1.0715);

          _0xf75d6b[_0x130af8].ball && (_0xf75d6b[_0x130af8].ball.position = new _0x2c6fa9.Vector3(_0x1c92a7.x, _0x1c92a7.y, _0x1c92a7.z), _0xf75d6b[_0x130af8].ball.rotation = new _0x2c6fa9.Vector3(0x0, 0x0, _0x121007[_0x130af8].r + _0x52b1a6.ballRot), _0xf75d6b[_0x130af8].ball.soundId = _0x2c6fa9.game.audio.getSoundId(), _0x2c6fa9.game.audio.stopSound(_0xf75d6b[_0x130af8].ball.soundId), _0x2c6fa9.game.audio.playSoundFromEntity(_0xf75d6b[_0x130af8].ball.soundId, 'DLC_VW_ROULETTE_BALL_LOOP', _0xf75d6b[_0x130af8].ball.handle, 'dlc_vw_table_games_sounds', true, 0x0), _0xf75d6b[_0x130af8].ball.playAnim('intro_ball', 'anim_casino_b@amb@casino@games@roulette@table', 0x3e8, false, true, false, 0x0, _0x52b1a6.speed)), _0xf75d6b[_0x130af8].endTableAnim = _0x2cfcc3, _0xf75d6b[_0x130af8].endBallAnim = _0x1222bd, _0xf75d6b[_0x130af8].endBallId = _0xd72488;
          let _0x47f0d9 = 0x0;
          _0xf75d6b[_0x130af8].ped && _0x2c6fa9.peds.exists(_0xf75d6b[_0x130af8].ped) && (_0xf75d6b[_0x130af8].ped.model == _0x2c6fa9.game.joaat('S_M_Y_Casino_01') ? (_0xf75d6b[_0x130af8].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer', 'spin_wheel', 0x8, 0x1, -0x1, 0x2, 0x0, false, false, false), _0x47f0d9 = _0x2c6fa9.game.entity.getEntityAnimDuration('anim_casino_b@amb@casino@games@roulette@dealer', 'spin_wheel')) : (_0xf75d6b[_0x130af8].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer_female', 'spin_wheel', 0x8, 0x1, -0x1, 0x2, 0x0, false, false, false), _0x47f0d9 = _0x2c6fa9.game.entity.getEntityAnimDuration('anim_casino_b@amb@casino@games@roulette@dealer_female', 'spin_wheel'))), _0x2c6fa9.game.sleep(0x3e8 * _0x47f0d9).then(() => {
            _0xf75d6b[_0x130af8].ped && _0x2c6fa9.peds.exists(_0xf75d6b[_0x130af8].ped) && (_0xf75d6b[_0x130af8].ped.model == _0x2c6fa9.game.joaat('S_M_Y_Casino_01') ? _0xf75d6b[_0x130af8].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer', 'idle', 0x8, 0x1, -0x1, 0x1, 0x0, false, false, false) : _0xf75d6b[_0x130af8].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer_female', 'idle', 0x8, 0x1, -0x1, 0x1, 0x0, false, false, false));
          });
        }), _0x2c6fa9.events.add('fun.casino.clearRouletteTable', _0x2d8a3c => {
          const a0_0x38b039 = {
            _0x8653b0: 0x2606
          };
          if (!_0x52b1a6) return;

          _0x4adca3[_0x2d8a3c].forEach(_0x340a88 => {
            _0x2c6fa9.objects.exists(_0x340a88) && _0x340a88.destroy();
          });

          let _0x3f7470 = 0x0;
          _0xf75d6b[_0x2d8a3c].ped && (_0xf75d6b[_0x2d8a3c].ped.model == _0x2c6fa9.game.joaat('S_M_Y_Casino_01') ? (_0xf75d6b[_0x2d8a3c].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer', 'clear_chips_zone2', 0x8, 0x1, -0x1, 0x2, 0x0, false, false, false), _0x3f7470 = _0x2c6fa9.game.entity.getEntityAnimDuration('anim_casino_b@amb@casino@games@roulette@dealer', 'clear_chips_zone2')) : (_0xf75d6b[_0x2d8a3c].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer_female', 'clear_chips_zone2', 0x8, 0x1, -0x1, 0x2, 0x0, false, false, false), _0x3f7470 = _0x2c6fa9.game.entity.getEntityAnimDuration('anim_casino_b@amb@casino@games@roulette@dealer_female', 'clear_chips_zone2'))), _0x2c6fa9.game.sleep(0x3e8 * _0x3f7470).then(() => {
            _0xf75d6b[_0x2d8a3c].ped && _0x2c6fa9.peds.exists(_0xf75d6b[_0x2d8a3c].ped) && (_0xf75d6b[_0x2d8a3c].ped.model == _0x2c6fa9.game.joaat('S_M_Y_Casino_01') ? _0xf75d6b[_0x2d8a3c].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer', 'idle', 0x8, 0x1, -0x1, 0x1, 0x0, false, false, false) : _0xf75d6b[_0x2d8a3c].ped.taskPlayAnim('anim_casino_b@amb@casino@games@roulette@dealer_female', 'idle', 0x8, 0x1, -0x1, 0x1, 0x0, false, false, false));
          });
        }), _0x2c6fa9.events.add('keys.f', () => {
          if (_0x435cfb.isDead() || _0x2c6fa9.gui.cursor.visible || null != _0x494588 || null == _0x2d7438) return false;
          if (null != _0x1c110c) _0x42d210();else {
            let _0x1438c2 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2d7438].x, _0x121007[_0x2d7438].y, _0x121007[_0x2d7438].z, _0x121007[_0x2d7438].r, 0x0, -0.25, 0x3);

            _0x1c110c = _0x2c6fa9.cameras.new('default', new _0x2c6fa9.Vector3(_0x1438c2.x, _0x1438c2.y, _0x1438c2.z), new _0x2c6fa9.Vector3(0x0, 0x0, 0x0), 0x2d), _0x1c110c.setRot(-0x55, 0x0, _0x121007[_0x2d7438].r, 0x2), _0x1c110c.setActive(true), _0x2c6fa9.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2db1f1.api.toggleHud(false), _0x2db1f1.api.toggleRadar(false);
          }
        });

        const _0x42d210 = () => {
          try {
            _0x1c110c.destroy(true), _0x1c110c = null, _0x2c6fa9.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2db1f1.api.toggleHud(true), _0x2db1f1.api.toggleRadar(true);
          } catch (_0x51c5b8) {
            _0x2db1f1.api.sendError(_0x51c5b8);
          }
        };

        let _0x624373 = {
          'x': 0x0,
          'y': 0x0
        };

        _0x2c6fa9.events.add('render', async () => {
          const a0_0x5802f5 = {
            _0x1d4a2c: 0x21b2,
            _0x3527d2: 0x1293,
            _0x28500f: 0x1836,
            _0x1070a6: 0x23e6,
            _0x1175dc: 0x2e3,
            _0x452161: 0xf55,
            _0x1119c0: 0xf8f,
            _0x375444: 0x1b0a,
            _0x233572: 0x2422,
            _0xcbcfa5: 0x1d55,
            _0x257fa2: 0xf8f,
            _0x80e9a5: 0x1e3d,
            _0x4952b1: 0x2e3,
            _0x359f40: 0x1ff6,
            _0x5a772e: 0x23e6,
            _0x5b2b19: 0x1632,
            _0x59e2da: 0x21b2,
            _0x300449: 0x1d66,
            _0x33086b: 0x11dc,
            _0x43ada3: 0x1759,
            _0x4ff7: 0x38e,
            _0x1e4502: 0xe15,
            _0x5f1bc8: 0x2e3,
            _0x306dc8: 0x23e6,
            _0xc547f2: 0xf2f,
            _0x2f68f2: 0x13ef,
            _0x2a2db6: 0x1e98,
            _0x8acca2: 0x1d66,
            _0x455c37: 0xf2f,
            _0x320e1f: 0x214,
            _0x2c5c52: 0xf8f,
            _0x459ead: 0x1e98,
            _0xfaf86a: 0x613,
            _0x4bb67b: 0xf8f,
            _0x7ddad1: 0x2530,
            _0x2a2e45: 0xee0
          };

          if (_0x48e1a5.g.inCasino) {
            if (_0x52b1a6 && _0xf75d6b.forEach((_0x1f2cdd, _0x2c1b82) => {
              if (_0x1f2cdd.table && _0x1f2cdd.table.isPlayingAnim('anim_casino_b@amb@casino@games@roulette@table', 'intro_wheel', 0x3) && _0x1f2cdd.table.getAnimCurrentTime('anim_casino_b@amb@casino@games@roulette@table', 'intro_wheel') > 0.9425 && (_0x1f2cdd.table.playAnim('loop_wheel', 'anim_casino_b@amb@casino@games@roulette@table', 0x3e8, false, true, true, 0x0, _0x52b1a6.speed), _0x1f2cdd.table.forceAiAndAnimationUpdate()), _0x1f2cdd.ball && _0x1f2cdd.ball.isPlayingAnim('anim_casino_b@amb@casino@games@roulette@table', 'intro_ball', 0x3) && _0x1f2cdd.ball.getAnimCurrentTime('anim_casino_b@amb@casino@games@roulette@table', 'intro_ball') >= 0x1) {
                let _0x50a3aa = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2c1b82].x, _0x121007[_0x2c1b82].y, _0x121007[_0x2c1b82].z, _0x121007[_0x2c1b82].r, -0.734742, -0.16617, 1.0715);

                _0x1f2cdd.ball.position = new _0x2c6fa9.Vector3(_0x50a3aa.x, _0x50a3aa.y, _0x50a3aa.z), _0x1f2cdd.ball.rotation = new _0x2c6fa9.Vector3(0x0, 0x0, _0x121007[_0x2c1b82].r + _0x52b1a6.ballRot), _0x1f2cdd.ball.playAnim('loop_ball', 'anim_casino_b@amb@casino@games@roulette@table', 0x3e8, true, true, false, 0x0, _0x52b1a6.speed), _0x1f2cdd.ball.forceAiAndAnimationUpdate();
              }

              if (_0x1f2cdd.table && _0x1f2cdd.table.isPlayingAnim('anim_casino_b@amb@casino@games@roulette@table', 'loop_wheel', 0x3) && _0x1f2cdd.table.getAnimCurrentTime('anim_casino_b@amb@casino@games@roulette@table', 'loop_wheel') >= 0x1) {
                let _0x412273 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2c1b82].x, _0x121007[_0x2c1b82].y, _0x121007[_0x2c1b82].z, _0x121007[_0x2c1b82].r, -0.734742, -0.16617, 1.0715);

                _0x1f2cdd.endTableAnim && (_0x1f2cdd.table.playAnim(_0x1f2cdd.endTableAnim, 'anim_casino_b@amb@casino@games@roulette@table', 0x3e8, false, true, true, 0x0, _0x52b1a6.speed), _0x1f2cdd.table.forceAiAndAnimationUpdate()), _0x1f2cdd.ball.position = new _0x2c6fa9.Vector3(_0x412273.x, _0x412273.y, _0x412273.z), _0x1f2cdd.ball.rotation = new _0x2c6fa9.Vector3(0x0, 0x0, _0x121007[_0x2c1b82].r - _0x52b1a6.ballRot), _0x1f2cdd.endBallAnim && (_0x1f2cdd.ball.playAnim(_0x1f2cdd.endBallAnim, 'anim_casino_b@amb@casino@games@roulette@table', 0x3e8, false, true, true, 0x0, _0x52b1a6.speed), _0x1f2cdd.ball.forceAiAndAnimationUpdate()), _0x1f2cdd.ball.soundId && (_0x2c6fa9.game.audio.stopSound(_0x1f2cdd.ball.soundId), _0x2c6fa9.game.audio.playSoundFromEntity(_0x1f2cdd.ball.soundId, 'dlc_vw_roulette_exit_' + _0x1f2cdd.endBallId, _0x1f2cdd.ball.handle, 'dlc_vw_table_games_roulette_exit_sounds', false, 0x0));
              }
            }), _0x548d3e && _0x1c110c && null == _0x279408) {
              let _0x94cc2f = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2d7438].x, _0x121007[_0x2d7438].y, _0x121007[_0x2d7438].z, _0x121007[_0x2d7438].r, 0x0, 0x0, 0x0);

              _0x279408 = _0x2c6fa9.objects.new(_0x2c6fa9.game.joaat('vw_prop_chip_100dollar_x1'), new _0x2c6fa9.Vector3(_0x94cc2f.x, _0x94cc2f.y, _0x94cc2f.z), {
                'rotation': new _0x2c6fa9.Vector3(0x0, 0x0, _0x121007[_0x2d7438].r),
                'dimension': _0x48e1a5.g.casinoInteriorDimension
              }), _0x279408.setCollision(false, false);
            }

            if (null != _0x279408 && (_0x548d3e && null != _0x1c110c || (_0x279408.destroy(), _0x279408 = null, _0x2a2980())), null != _0x1c110c && null != _0x2d7438 && null != _0x279408) {
              _0x2c6fa9.game.controls.isDisabledControlJustReleased(0x0, 0x19) && !_0x2c6fa9.gui.cursor.visible && null != _0x1f4960 && (_0x2c6fa9.events.callRemote('2263391582', _0x1f4960, _0x31f223), _0x2c6fa9.game.audio.playSoundFrontend(-0x1, 'DLC_VW_REMOVE_BET', 'dlc_vw_table_games_frontend_sounds', true)), _0x2c6fa9.game.controls.isDisabledControlJustReleased(0x0, 0x18) && !_0x2c6fa9.gui.cursor.visible && null != _0x1f4960 && _0x2c6fa9.events.callRemote('3414795142', _0x1f4960, _0x31f223);

              const _0x1690e6 = _0x2c6fa9.game.controls.getDisabledControlNormal(0x0, 0x1),
                    _0xee7453 = _0x2c6fa9.game.controls.getDisabledControlNormal(0x0, 0x2);

              _0x624373.x += 0.1 * _0x1690e6, _0x624373.y += -0.1 * _0xee7453, _0x624373.x = Math.min(Math.max(_0x624373.x, -0.191), 0.96), _0x624373.y = Math.min(Math.max(_0x624373.y, -0.426), 0.23);

              const _0x25340a = _0xf75d6b[_0x2d7438].table.getOffsetFromInWorldCoords(_0x624373.x, _0x624373.y, 0.9448);

              _0x279408.setCoordsNoOffset(_0x25340a.x, _0x25340a.y, _0x25340a.z, false, false, false), _0x5667fd(_0x25340a, _0x121007[_0x2d7438].r);
            }
          }
        });

        let _0x899780 = [];

        const _0x2a2980 = () => {
          try {
            for (let _0x4a5dd5 = 0x0; _0x4a5dd5 < _0x899780.length; _0x4a5dd5++) _0x899780[_0x4a5dd5].destroy();

            _0x899780 = [];
          } catch (_0x1b2478) {
            _0x2db1f1.api.sendError(_0x1b2478);
          }
        },
              _0x5667fd = _0x1d4326 => {
          const a0_0x4abffc = {
            _0x14012a: 0x1d66,
            _0x1a4453: 0x11dc,
            _0x52eb87: 0x2379,
            _0x3a598c: 0x101d,
            _0x2c2b5c: 0x1d55,
            _0x2bed76: 0x1269,
            _0x48d3c8: 0x1700,
            _0x4b2446: 0x1985,
            _0x33b0c1: 0x2530,
            _0x25cc44: 0x1d2,
            _0x17b1c7: 0x1d66,
            _0x409529: 0x535,
            _0x23ab6b: 0x1985,
            _0x264650: 0x16ef,
            _0x39e7d5: 0x1063
          },
                a0_0x568a23 = {
            _0x2ee9eb: 0x2422,
            _0x54b55d: 0x535
          };

          try {
            let _0x24b29e = null,
                _0x505411 = 0.05;
            (Object.keys(_0x31174a.Z).forEach(_0x58bf07 => {
              try {
                const _0x54df7c = _0x31174a.Z[_0x58bf07],
                      _0x385d1e = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2d7438].x, _0x121007[_0x2d7438].y, _0x121007[_0x2d7438].z, _0x121007[_0x2d7438].r, _0x54df7c.x, _0x54df7c.y, _0x54df7c.z),
                      _0x152af8 = _0x2db1f1.api.getDistanceBetweenPoints3D(_0x1d4326, _0x385d1e);

                _0x152af8 <= _0x505411 && (_0x24b29e = _0x58bf07, _0x505411 = _0x152af8);
              } catch (_0x169540) {
                _0x2db1f1.api.sendError(_0x169540);
              }
            }), _0x24b29e != _0x1f4960 && (_0x1f4960 = _0x24b29e, _0x2a2980(), null != _0x24b29e)) && (Object.values(_0x31174a.Z)[_0x24b29e].key.forEach(async _0xfe9d62 => {
              try {
                if ('00' == _0xfe9d62 || '0' == _0xfe9d62) {
                  let _0x49f926 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2d7438].x, _0x121007[_0x2d7438].y, _0x121007[_0x2d7438].z, _0x121007[_0x2d7438].r, _0x3ad533.Z[_0xfe9d62][0x0], _0x3ad533.Z[_0xfe9d62][0x1], _0x3ad533.Z[_0xfe9d62][0x2]);

                  const _0x1ff298 = await (0x0, _0x39d046.n)(_0x2c6fa9.game.joaat('vw_prop_vw_marker_01a'), new _0x2c6fa9.Vector3(_0x49f926.x, _0x49f926.y, _0x49f926.z), {
                    'rotation': new _0x2c6fa9.Vector3(0x0, 0x0, _0x121007[_0x2d7438].r),
                    'dimension': _0x48e1a5.g.casinoInteriorDimension
                  });

                  _0x1ff298.setCollision(false, false), 0x2 !== _0x2d7438 && 0x3 !== _0x2d7438 || _0x2db1f1.api.invokeNative('_SET_OBJECT_TEXTURE_VARIANT', _0x1ff298.handle, 0x3), _0x899780.push(_0x1ff298);
                } else {
                  let _0x5b4b46 = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x2d7438].x, _0x121007[_0x2d7438].y, _0x121007[_0x2d7438].z, _0x121007[_0x2d7438].r, _0x3ad533.Z[_0xfe9d62][0x0], _0x3ad533.Z[_0xfe9d62][0x1], _0x3ad533.Z[_0xfe9d62][0x2]);

                  const _0x2f743f = await (0x0, _0x39d046.n)(_0x2c6fa9.game.joaat('vw_prop_vw_marker_02a'), new _0x2c6fa9.Vector3(_0x5b4b46.x, _0x5b4b46.y, _0x5b4b46.z), {
                    'rotation': new _0x2c6fa9.Vector3(0x0, 0x0, _0x121007[_0x2d7438].r),
                    'dimension': _0x48e1a5.g.casinoInteriorDimension
                  });

                  0x2 !== _0x2d7438 && 0x3 !== _0x2d7438 || _0x2db1f1.api.invokeNative('_SET_OBJECT_TEXTURE_VARIANT', _0x2f743f.handle, 0x3), _0x899780.push(_0x2f743f);
                }
              } catch (_0x3313d7) {
                _0x2db1f1.api.sendError(_0x3313d7);
              }
            }), _0x2c6fa9.game.audio.playSoundFrontend(-0x1, 'DLC_VW_BET_HIGHLIGHT', 'dlc_vw_table_games_frontend_sounds', true));
          } catch (_0x136b0a) {
            _0x2db1f1.api.sendError(_0x136b0a);
          }
        };

        let _0x29a329,
            _0x2ea411,
            _0x3e76bd,
            _0x22463d,
            _0x2d4f4e,
            _0x4adca3 = {
          0x0: [],
          0x1: [],
          0x2: [],
          0x3: [],
          0x4: [],
          0x5: []
        };

        _0x2c6fa9.events.add('fun.casino.setChipsOnTable', (_0x3b3cb6, _0x52efea) => {
          const a0_0x103c3e = {
            _0x25c31f: 0xc55,
            _0x32db4a: 0x11dc,
            _0xa07572: 0x1d66,
            _0x376169: 0x1700,
            _0x5cc7a8: 0x1d2
          },
                a0_0x49185c = {
            _0x3f67ea: 0x2606
          };
          _0x4adca3[_0x3b3cb6].forEach(_0x3e3231 => {
            _0x2c6fa9.objects.exists(_0x3e3231) && _0x3e3231.destroy();
          }), _0x52efea.forEach(async _0x2a59e3 => {
            const _0x5b2c1a = Object.values(_0x31174a.Z),
                  _0x3e9aac = _0x2c6fa9.game.object.getObjectOffsetFromCoords(_0x121007[_0x3b3cb6].x, _0x121007[_0x3b3cb6].y, _0x121007[_0x3b3cb6].z, _0x121007[_0x3b3cb6].r, _0x5b2c1a[_0x2a59e3].x, _0x5b2c1a[_0x2a59e3].y, _0x5b2c1a[_0x2a59e3].z),
                  _0x517d5d = await (0x0, _0x39d046.n)(_0x2c6fa9.game.joaat('vw_prop_chip_100dollar_x1'), _0x3e9aac, {
              'dimension': _0x48e1a5.g.casinoInteriorDimension
            });

            _0x517d5d.setCollision(false, false), _0x4adca3[_0x3b3cb6].push(_0x517d5d);
          }), _0x2c6fa9.game.audio.playSoundFromCoord(-0x1, 'DLC_VW_BET_50', _0x121007[_0x3b3cb6].x, _0x121007[_0x3b3cb6].y, _0x121007[_0x3b3cb6].z, 'dlc_vw_table_games_sounds', true, 0x0, false);
        }), _0x2c6fa9.events.add('fun.casino.playPedRouletteSpeech', (_0x41c074, _0x2cfaa2, _0x3217da = 'SPEECH_PARAMS_FORCE_NORMAL_CLEAR') => {
          const _0x14956a = _0xf75d6b[_0x41c074].ped;
          _0x14956a && _0x2db1f1.api.invokeNative('_PLAY_AMBIENT_SPEECH1', _0x14956a.handle, _0x2cfaa2, _0x3217da);
        });

        const _0x4dac7e = () => {
          try {
            _0x29a329 = new _0x4508d3.InstructionalButtons(-0x1), _0x29a329.addButton('ibuttons.exit', 'E'), _0x29a329.addButton('ibuttons.camera', 'F'), _0x29a329.addButton('ibuttons.increaseBet', 0xaf), _0x29a329.addButton('ibuttons.decreaseBet', 0xae), _0x29a329.addButton('ibuttons.removeBet', 0x19), _0x29a329.addButton('ibuttons.makeBet', 0x18), _0x29a329.isActive() || _0x29a329.toggleHud(true), _0x2d4f4e = new _0x3d2c4b.TimerBar('fun.casino.roulette.betSum'), _0x22463d = new _0x3d2c4b.TimerBar('fun.casino.roulette.thisBet'), _0x3e76bd = new _0x3d2c4b.TimerBar('fun.casino.roulette.betsLeft'), _0x2ea411 = new _0x3d2c4b.TimerBar('fun.casino.roulette.time'), _0x2ea411.value = '00:00', _0x3e76bd.value = '0', _0x22463d.value = '0', _0x2d4f4e.value = '' + _0x31f223;
          } catch (_0x10ae4c) {
            _0x2db1f1.api.sendError(_0x10ae4c);
          }
        },
              _0x16a126 = () => {
          try {
            _0x29a329.resetBar(), _0x2ea411.visible = false, _0x3e76bd.visible = false, _0x22463d.visible = false, _0x2d4f4e.visible = false;
          } catch (_0x150814) {
            _0x2db1f1.api.sendError(_0x150814);
          }
        };

        let _0x3c1341 = 0x3c;
        _0x2c6fa9.events.add('fun.casino.setRouletteTimeLeft', _0x522d7a => {
          _0x3c1341 = _0x522d7a;
        }), _0x2c6fa9.events.add('fun.casino.setRouletteBetsLeft', _0xcd7d90 => {
          _0x3e76bd && (_0x3e76bd.value = _0xcd7d90.toString());
        }), _0x2c6fa9.events.add('fun.casino.setRouletteTotalBet', _0x2b1785 => {
          _0x22463d && (_0x22463d.value = _0x2b1785.toString());
        }), _0x2c6fa9.events.add('time.everySec', () => {
          if (!_0x2ea411 || isNaN(_0x3c1341) || _0x3c1341 <= 0x0) return;
          _0x3c1341--;

          const _0x25bd74 = parseInt(_0x3c1341 / 0x3c),
                _0x243de7 = parseInt(_0x3c1341 % 0x3c);

          _0x2ea411.value = ('0' + _0x25bd74).slice(-0x2) + ':' + ('0' + _0x243de7).slice(-0x2);
        });
        let _0x1a17b1 = 0x0;

        _0x2c6fa9.keys.bind(_0xf67d11.t.ARROW_LEFT, false, async () => {
          if (_0x2db1f1.api.ePress(_0x1a17b1, 0xfa) || !_0x2db1f1.api.isAuthed() || _0x48e1a5.g.interfaces.chat || _0x435cfb.isDead() || _0x2c6fa9.gui.cursor.visible || null != _0x494588 || null == _0x2d7438) return;
          _0x1a17b1 = _0x2db1f1.api.ePressUpdate(0xfa);

          let _0x4159fe = _0x28da77()[0x0],
              _0x2d9680 = _0x28da77()[0x1],
              _0x5976a5 = _0x2d9680 / (_0x2d9680 / _0x4159fe);

          _0x31f223 - _0x5976a5 >= _0x4159fe ? _0x31f223 -= _0x5976a5 : _0x31f223 = _0x4159fe, _0x46fea4(_0x31f223), _0x2c6fa9.game.audio.playSoundFrontend(-0x1, 'DLC_VW_BET_DOWN', 'dlc_vw_table_games_frontend_sounds', true);
        });

        let _0x4adaab = 0x0;

        _0x2c6fa9.keys.bind(_0xf67d11.t.ARROW_RIGHT, false, async () => {
          if (_0x2db1f1.api.ePress(_0x4adaab, 0xfa) || !_0x2db1f1.api.isAuthed() || _0x48e1a5.g.interfaces.chat || _0x435cfb.isDead() || _0x2c6fa9.gui.cursor.visible || null != _0x494588 || null == _0x2d7438) return;
          _0x4adaab = _0x2db1f1.api.ePressUpdate(0xfa);

          let _0x487471 = _0x28da77()[0x0],
              _0x366615 = _0x28da77()[0x1],
              _0x4c2adf = _0x366615 / (_0x366615 / _0x487471);

          _0x31f223 + _0x4c2adf <= _0x366615 ? _0x31f223 += _0x4c2adf : _0x31f223 = _0x366615, _0x46fea4(_0x31f223), _0x2c6fa9.game.audio.playSoundFrontend(-0x1, 'DLC_VW_BET_UP', 'dlc_vw_table_games_frontend_sounds', true);
        });

        const _0x46fea4 = (_0x10df02 = _0x31f223) => {
          try {
            _0x2d4f4e.value = _0x10df02.toString(), _0x31f223 = _0x10df02;
          } catch (_0x40fc78) {
            _0x2db1f1.api.sendError(_0x40fc78);
          }
        },
              _0x28da77 = (_0x35230a = _0x2d7438) => {
          try {
            return _0x553195[_0x35230a] || 0x0;
          } catch (_0x275eca) {
            _0x2db1f1.api.sendError(_0x275eca);
          }
        };
      },
      0x59cc: (_0x18c3f4, _0x253d12, _0x2a9e75) => {
        'use strict';

        const a0_0x293392 = {
          _0x5dfd32: 0x9a8,
          _0x15a7cb: 0x623,
          _0x35eb1a: 0x1dc8,
          _0x507daa: 0x6da,
          _0x203fa4: 0xad8,
          _0x2afca1: 0x362,
          _0x63c0d5: 0x24ce,
          _0x56def2: 0x535,
          _0x42751d: 0x1de9,
          _0x512e5d: 0x1fc1,
          _0x4b9faa: 0x20c2,
          _0x1f0927: 0x535,
          _0x49f522: 0x23f8,
          _0x110857: 0x704,
          _0x397c30: 0x535,
          _0xa5057a: 0x1de9,
          _0x19c0fb: 0x1fc1,
          _0x9c0da0: 0x490,
          _0x4a8b52: 0x535
        },
              a0_0x5a3f13 = {
          _0xe736ea: 0x35c,
          _0x51362c: 0x191a,
          _0x4fc2e7: 0x2a6,
          _0x3bbe0d: 0xbb8,
          _0xa27aea: 0x19d4,
          _0x377fe7: 0x2a2,
          _0x271189: 0x1063
        },
              a0_0x277cf5 = {
          _0x31589e: 0x535,
          _0x634e3a: 0x1870,
          _0x4d3d46: 0x24ce
        },
              a0_0x170a0b = {
          _0x12fe09: 0x1dda,
          _0x15ece0: 0x1d90,
          _0x4b6cf3: 0x151b,
          _0x1acb71: 0x6b3,
          _0x414656: 0x1487
        },
              a0_0xceaf18 = {
          _0x46157b: 0x1487,
          _0x166c38: 0x1dda,
          _0x370df7: 0x91b,
          _0x2f3867: 0xf2f,
          _0x5830f3: 0x1b3a,
          _0x102e57: 0x1f30,
          _0x264271: 0x1f30,
          _0x2f2667: 0x17f,
          _0x1ad0b3: 0x1d66,
          _0x53dd86: 0x2379,
          _0x3637b1: 0x19e6,
          _0x3cf8b2: 0x445,
          _0x3250b2: 0x1d55,
          _0x45891c: 0x1269,
          _0x4b704f: 0x1ca,
          _0x2126b6: 0x1870,
          _0x200cba: 0x1ca,
          _0x4526e6: 0x1d66,
          _0x3854a5: 0x11dc,
          _0x4a1895: 0x2422,
          _0x577105: 0x1d66,
          _0x2ec9b0: 0x19e6,
          _0x38792a: 0x1f25,
          _0x57dba7: 0x1269,
          _0x3f7191: 0x1870,
          _0x16be19: 0x151b,
          _0x48f716: 0x151b,
          _0x42d6b8: 0x151b,
          _0xc2ac13: 0x11dc,
          _0x239a69: 0x2379,
          _0x46319e: 0x1269,
          _0x4b60ae: 0x535,
          _0x1e13d7: 0x1063,
          _0x1f285d: 0x1da5,
          _0x5a4080: 0x3ea,
          _0xba6312: 0x4ec
        },
              a0_0x28c389 = {
          _0x11f3c9: 0x52c
        },
              a0_0x4a644a = {
          _0x568b34: 0x535,
          _0x2a7ecc: 0x242c,
          _0x3d5e36: 0x23c9,
          _0x145c24: 0x1ec5,
          _0x36ec3c: 0x385,
          _0x286ce2: 0x213a,
          _0xaf84e6: 0x1e94,
          _0x3da0f6: 0xe3f,
          _0x1c54b5: 0x24ce
        },
              a0_0x4c35fa = {
          _0x4320ff: 0x1ec5,
          _0x136e9e: 0x1a29,
          _0x34d28c: 0x535,
          _0x39c3a1: 0x52c,
          _0x347b72: 0x14d2,
          _0xd95c40: 0x1a5,
          _0x28bba5: 0x662,
          _0x4be368: 0x1dc8,
          _0x14a88c: 0x6da,
          _0x5f554a: 0x362,
          _0x1c324a: 0x90f,
          _0x3c3bc2: 0x17d,
          _0xb91c6a: 0x1de9,
          _0x24f0e3: 0x1fc1,
          _0xf6cc5: 0x1d66,
          _0x51d351: 0x1870,
          _0x55ce45: 0x3e9,
          _0x3edd46: 0x59d,
          _0x1aa410: 0x11dc,
          _0x314644: 0x2422,
          _0x36a12a: 0x24d1
        },
              a0_0x785cec = {
          _0x3de2ca: 0x535,
          _0x58299d: 0x18d9,
          _0x4ba152: 0x1d66,
          _0x3bb860: 0x59d
        },
              a0_0x15c1b8 = {
          _0x19e7ea: 0x535,
          _0x4025c2: 0x253d,
          _0x59147b: 0x1e91,
          _0x4ba927: 0x13f4
        },
              a0_0x97e606 = {
          _0xd15f5c: 0x19d2,
          _0x1d57e1: 0x1ca,
          _0x2b2d27: 0x151b,
          _0x4430ab: 0x1e3d
        },
              a0_0x27a579 = {
          _0x38d409: 0x1d66,
          _0x2a3402: 0x1fe9,
          _0x21a0c9: 0x2627,
          _0x2ac536: 0x2379,
          _0x1c647f: 0x19d2,
          _0xac67d5: 0x1629,
          _0x4da409: 0x1d66,
          _0x410734: 0x1d55,
          _0x100e10: 0x1d55,
          _0x4719a8: 0x151b,
          _0x3a9ae4: 0x2405,
          _0x3ad43c: 0x18d9,
          _0x175586: 0x11dc,
          _0x1cfef5: 0x2422,
          _0x553046: 0x151b,
          _0x2e81e0: 0x2606,
          _0x3f20f2: 0xf82,
          _0x5cdf95: 0x19e6,
          _0x3abc9c: 0x1f25,
          _0xee5c16: 0x1d55
        };

        _0x2a9e75.r(_0x253d12);

        var _0x108cf8 = _0x2a9e75(0x16a21),
            _0x16228b = _0x2a9e75(0x16a7d),
            _0x42f7af = _0x2a9e75(0xb9cc),
            _0x5d3bba = (_0x2a9e75(0x176d8), _0x2a9e75(0x66f9)),
            _0x4de5e8 = _0x2a9e75(0x161cd);

        const _0x288236 = _0x4de5e8.players.local;
        let _0x1f3d94 = null,
            _0x41ad5f = null,
            _0x396a5d = null,
            _0x54521a = false,
            _0x2a519a = null,
            _0x107d9f = {
          'x': 0x0,
          'y': 0x0,
          'z': 0x0,
          'r': 0x0
        },
            _0x329b33 = [],
            _0x3082c4 = 0x7d0,
            _0x896836 = 0x320,
            _0x2f49e4 = [[-0.115, 0.047, 1.106], [0.005, 0.047, 1.106], [0.125, 0.047, 1.106]],
            _0x1dab6b = {},
            _0x1199b0 = 0x0,
            _0x27479f = [];
        _0x4de5e8.events.add('fun.casino.initPositions', _0x390d56 => {
          _0x27479f = _0x390d56;

          for (let _0x169b98 = 0x1; _0x169b98 <= 0x8; _0x169b98++) _0x4de5e8.game.entity.createModelHideExcludingScriptObjects(1140.42, 244.32, -51.04, 0x12c, _0x4de5e8.game.joaat('vw_prop_casino_slot_0' + _0x169b98 + 'a'), true);

          for (let _0x3ad326 = 0x0; _0x3ad326 < _0x27479f.length; _0x3ad326++) {
            _0x329b33[_0x3ad326] = {
              'spinning': []
            }, _0x329b33[_0x3ad326].machine = _0x4de5e8.objects.new(_0x4de5e8.game.joaat('vw_prop_casino_slot_0' + _0x27479f[_0x3ad326].type + 'a'), new _0x4de5e8.Vector3(_0x27479f[_0x3ad326].x, _0x27479f[_0x3ad326].y, _0x27479f[_0x3ad326].z), {
              'rotation': new _0x4de5e8.Vector3(0x0, 0x0, _0x27479f[_0x3ad326].r),
              'dimension': _0x2a9e75.g.casinoInteriorDimension
            }), _0x329b33[_0x3ad326].reels = [];

            let _0x3819ac = _0x4de5e8.game.object.getObjectOffsetFromCoords(_0x27479f[_0x3ad326].x, _0x27479f[_0x3ad326].y, _0x27479f[_0x3ad326].z, _0x27479f[_0x3ad326].r, 0x0, -1.5, 0x1);

            _0x4de5e8.colshapes.newSphere(_0x3819ac.x, _0x3819ac.y, _0x3819ac.z, 0x1, _0x2a9e75.g.casinoInteriorDimension).casinoSlotMachine = _0x3ad326;

            for (let _0x4ef042 = 0x0; _0x4ef042 < 0x3; _0x4ef042++) _0x3819ac = _0x4de5e8.game.object.getObjectOffsetFromCoords(_0x27479f[_0x3ad326].x, _0x27479f[_0x3ad326].y, _0x27479f[_0x3ad326].z, _0x27479f[_0x3ad326].r, _0x2f49e4[_0x4ef042][0x0], _0x2f49e4[_0x4ef042][0x1], _0x2f49e4[_0x4ef042][0x2]), _0x329b33[_0x3ad326].reels[_0x4ef042] = _0x4de5e8.objects.new(_0x4de5e8.game.joaat('vw_prop_casino_slot_0' + _0x27479f[_0x3ad326].type + 'a_reels'), new _0x4de5e8.Vector3(_0x3819ac.x, _0x3819ac.y, _0x3819ac.z), {
              'rotation': new _0x4de5e8.Vector3(0x0, 0x0, _0x27479f[_0x3ad326].r),
              'dimension': _0x2a9e75.g.casinoInteriorDimension
            });
          }
        }), _0x4de5e8.events.add('fun.casino.initSlotBets', _0x5d4336 => {
          _0x1dab6b = _0x5d4336;
        }), _0x4de5e8.events.add('render', () => {
          if (!_0x2a9e75.g.inCasino) return;
          let _0x2142e0 = null;

          for (let _0x5b1ad0 = 0x0; _0x5b1ad0 < _0x329b33.length; _0x5b1ad0++) for (let _0x4eee3a = 0x0; _0x4eee3a < 0x3; _0x4eee3a++) _0x329b33[_0x5b1ad0].spinning[_0x4eee3a] && (_0x2142e0 = _0x329b33[_0x5b1ad0].reels[_0x4eee3a].rotation, _0x329b33[_0x5b1ad0].reels[_0x4eee3a].rotation = new _0x4de5e8.Vector3(_0x2142e0.x + 0x5, 0x0, _0x2142e0.z));
        }), _0x4de5e8.events.add('playerEnterColshape', _0x2fd9b7 => {
          _0x108cf8.api.isAuthed() && undefined !== _0x2fd9b7.casinoSlotMachine && null == _0x1f3d94 && null == _0x396a5d && _0x2a9e75.g.casinoEnabled && (_0x41ad5f = _0x2fd9b7.casinoSlotMachine, _0x108cf8.api.displayHelpStringTrans('displayHelpString.toPlaySlots', {
            'amount': _0x4121ac(_0x41ad5f).min
          }, false, true, 0x1388));
        }), _0x4de5e8.events.add('playerExitColshape', _0x17e094 => {
          _0x108cf8.api.isAuthed() && undefined !== _0x17e094.casinoSlotMachine && (_0x41ad5f = null, _0x4de5e8.game.ui.clearHelp(true));
        }), _0x4de5e8.events.add('keys.e', async () => {
          if (!_0x288236.isDead() && !_0x4de5e8.gui.cursor.visible && null == _0x396a5d) {
            if (null != _0x1f3d94) {
              _0x4de5e8.events.callRemote('3060051401'), _0x4de5e8.game.ui.clearHelp(true), _0x108cf8.api.toggleChat(true), _0x396a5d = _0x1f3d94, _0x1f3d94 = null, _0x52a3fe(), _0x4de5e8.events.call('utils.disablePlayerMove', false), _0x54521a && (_0x54521a = false);

              const _0x28308f = 0x1 === _0x108cf8.api.getEntitySync(_0x288236, 'gender', 'number') ? 'female' : 'male',
                    _0x580515 = ['left', 'right'],
                    _0x46a555 = _0x580515[Math.floor(Math.random() * _0x580515.length)],
                    _0x5503de = await _0x108cf8.api.taskPlayAnim('anim_casino_a@amb@casino@games@slots@' + _0x28308f, 'exit_' + _0x46a555, 0x0, false, true);

              _0x288236.freezePosition(false), await _0x4de5e8.game.sleep(0x3e8 * _0x5503de), _0x329b33[_0x396a5d]?.['machine']?.['setCollision'](true, true), _0x396a5d = null, _0x2a519a = null, _0x108cf8.api.usingSystemAnim(false), _0x108cf8.api.setDiscordStatus();
            } else {
              if (null == _0x41ad5f) return false;

              _0x4de5e8.game.ui.clearHelp(true);

              let _0x49b9b4 = _0x4de5e8.game.object.getObjectOffsetFromCoords(_0x27479f[_0x41ad5f].x, _0x27479f[_0x41ad5f].y, _0x27479f[_0x41ad5f].z, _0x27479f[_0x41ad5f].r, 0x0, -0.9, 0x1),
                  _0x316d75 = {
                'x': _0x49b9b4.x,
                'y': _0x49b9b4.y,
                'z': _0x49b9b4.z,
                'r': _0x27479f[_0x41ad5f].r
              };

              _0x4de5e8.events.callRemote('380501665', _0x41ad5f, JSON.stringify(_0x316d75));
            }
          }
        }), _0x4de5e8.events.add('keys.f', () => {
          _0x288236.isDead() || _0x4de5e8.gui.cursor.visible || null == _0x1f3d94 || null != _0x396a5d || (_0x54521a && _0x4de5e8.events.callRemote('549976422', _0x1199b0), _0x54521a = false);
        });
        let _0x7f02c6 = 0x0;

        _0x4de5e8.keys.bind(_0x16228b.t.ARROW_LEFT, false, async () => {
          if (_0x108cf8.api.ePress(_0x7f02c6, 0xfa) || !_0x108cf8.api.isAuthed() || _0x2a9e75.g.interfaces.chat || _0x288236.isDead() || _0x4de5e8.gui.cursor.visible || null == _0x1f3d94 || null != _0x396a5d || !_0x2a9e75.g.inCasino) return;
          _0x7f02c6 = _0x108cf8.api.ePressUpdate(0xfa), _0x396a5d = _0x1f3d94;

          let _0x293662 = _0x4121ac(),
              _0x438e02 = _0x293662.max / 0x64 * 0xa;

          _0x1199b0 - _0x438e02 >= _0x293662.min ? _0x1199b0 -= _0x438e02 : _0x1199b0 = _0x293662.min, _0x34b8ba(_0x1199b0);
          const [_0x3069be] = await _0xdcf08d('betTake', 0x2);
          await _0x4de5e8.game.sleep(0x1f4 * _0x3069be), await _0xdcf08d('idle', 0x1), _0x396a5d = null;
        });

        let _0x26a05d = 0x0;
        _0x4de5e8.keys.bind(_0x16228b.t.ARROW_RIGHT, false, async () => {
          if (_0x108cf8.api.ePress(_0x26a05d, 0xfa) || !_0x108cf8.api.isAuthed() || _0x2a9e75.g.interfaces.chat || _0x288236.isDead() || _0x4de5e8.gui.cursor.visible || null == _0x1f3d94 || null != _0x396a5d || !_0x2a9e75.g.inCasino) return;
          _0x26a05d = _0x108cf8.api.ePressUpdate(0xfa), _0x396a5d = _0x1f3d94;

          let _0x224608 = _0x4121ac(),
              _0x572933 = _0x224608.max / 0x64 * 0xa;

          _0x1199b0 + _0x1199b0 <= _0x224608.max ? _0x1199b0 += _0x572933 : _0x1199b0 = _0x224608.max, _0x34b8ba(_0x1199b0);
          const [_0x5b197d] = await _0xdcf08d('betAdd', 0x2);
          await _0x4de5e8.game.sleep(0x1f4 * _0x5b197d), await _0xdcf08d('idle', 0x1), _0x396a5d = null;
        }), _0x4de5e8.events.add('fun.casino.playerOccupiedSlot', (_0x574d8b, _0x525089, _0x4fd2e2, _0x46a7d7) => {
          const _0x394a37 = _0x4de5e8.players.atRemoteId(_0x574d8b);

          _0x4de5e8.players.exists(_0x394a37) && (_0x288236 === _0x394a37 ? (_0x108cf8.api.usingSystemAnim(true), _0x108cf8.api.setDiscordStatus('slots'), _0x107d9f = {
            'x': _0x4fd2e2.x,
            'y': _0x4fd2e2.y,
            'z': _0x4fd2e2.z,
            'r': _0x46a7d7
          }, _0x1f3d94 = _0x525089, _0x4de5e8.events.call('utils.disablePlayerMove', true), _0x1199b0 = _0x4121ac(_0x1f3d94).min, _0x54521a = true, _0x108cf8.api.toggleChat(false), _0x567ed1(), _0x34b8ba(_0x1199b0), _0x329b33[_0x525089] && _0x329b33[_0x525089].machine.setCollision(false, false), _0x396a5d = null) : _0x329b33[_0x525089] && _0x329b33[_0x525089].machine.setNoCollision(_0x394a37.handle, false));
        }), _0x4de5e8.events.add('fun.casino.canSpin', () => {
          _0x54521a = true;
        }), _0x4de5e8.events.add('playerDeath2', _0xf89965 => {
          _0xf89965 == _0x288236 && (null != _0x1f3d94 && (_0x1f3d94 = null), null != _0x396a5d && (_0x396a5d = null), _0x54521a && (_0x54521a = false), _0x108cf8.api.toggleChat(true));
        }), _0x4de5e8.events.add('fun.casino.spinSlots', async (_0x1e50bf, _0x19c52b) => {
          _0x54521a = true;
          let _0x238efb = _0x1e50bf;
          _0x329b33[_0x238efb].endPos = JSON.parse(_0x19c52b), _0x396a5d = _0x1f3d94;
          const [_0x499d50, _0xacca42, _0x27507e] = await _0xdcf08d('spin', 0x2);
          await _0x2920ef(_0x1e50bf, _0xacca42, _0x27507e), await _0x4de5e8.game.sleep(0x3e8), _0x4de5e8.game.sleep(0x3e8 * _0x499d50).then(async () => await _0xdcf08d('spinning', 0x1));

          const _0x2e50fc = _0x4de5e8.game.audio.getSoundId();

          _0x4de5e8.game.audio.playSoundFromCoord(_0x2e50fc, 'attract_loop', _0x288236.position.x, _0x288236.position.y, _0x288236.position.z, _0x2ab4ba(_0x27479f[_0x238efb].type), false, 0x0, false);

          let _0x2bb83f = null;

          try {
            for (let _0x18b3a6 = 0x0; _0x18b3a6 < 0x3; _0x18b3a6++) _0x329b33[_0x238efb].reels[_0x18b3a6].destroy(), _0x2bb83f = _0x4de5e8.game.object.getObjectOffsetFromCoords(_0x27479f[_0x238efb].x, _0x27479f[_0x238efb].y, _0x27479f[_0x238efb].z, _0x27479f[_0x238efb].r, _0x2f49e4[_0x18b3a6][0x0], _0x2f49e4[_0x18b3a6][0x1], _0x2f49e4[_0x18b3a6][0x2]), _0x329b33[_0x238efb].reels[_0x18b3a6] = await (0x0, _0x5d3bba.n)(_0x4de5e8.game.joaat('vw_prop_casino_slot_0' + _0x27479f[_0x238efb].type + 'b_reels'), new _0x4de5e8.Vector3(_0x2bb83f.x, _0x2bb83f.y, _0x2bb83f.z), {
              'rotation': new _0x4de5e8.Vector3(0x0, 0x0, _0x27479f[_0x238efb].r),
              'dimension': _0x2a9e75.g.casinoInteriorDimension
            }), _0x329b33[_0x238efb].spinning[_0x18b3a6] = true;

            await _0x4de5e8.game.sleep(_0x3082c4), _0x329b33[_0x238efb].spinning[0x0] = null, _0x329b33[_0x238efb].reels[0x0].destroy(), _0x2bb83f = _0x4de5e8.game.object.getObjectOffsetFromCoords(_0x27479f[_0x238efb].x, _0x27479f[_0x238efb].y, _0x27479f[_0x238efb].z, _0x27479f[_0x238efb].r, _0x2f49e4[0x0][0x0], _0x2f49e4[0x0][0x1], _0x2f49e4[0x0][0x2]), _0x329b33[_0x238efb].reels[0x0] = await (0x0, _0x5d3bba.n)(_0x4de5e8.game.joaat('vw_prop_casino_slot_0' + _0x27479f[_0x238efb].type + 'a_reels'), new _0x4de5e8.Vector3(_0x2bb83f.x, _0x2bb83f.y, _0x2bb83f.z), {
              'rotation': new _0x4de5e8.Vector3(_0x329b33[_0x238efb].endPos[0x0], 0x0, _0x27479f[_0x238efb].r),
              'dimension': _0x2a9e75.g.casinoInteriorDimension
            }), await _0x4de5e8.game.sleep(_0x896836), _0x329b33[_0x238efb].spinning[0x1] = null, _0x329b33[_0x238efb].reels[0x1].destroy(), _0x2bb83f = _0x4de5e8.game.object.getObjectOffsetFromCoords(_0x27479f[_0x238efb].x, _0x27479f[_0x238efb].y, _0x27479f[_0x238efb].z, _0x27479f[_0x238efb].r, _0x2f49e4[0x1][0x0], _0x2f49e4[0x1][0x1], _0x2f49e4[0x1][0x2]), _0x329b33[_0x238efb].reels[0x1] = await (0x0, _0x5d3bba.n)(_0x4de5e8.game.joaat('vw_prop_casino_slot_0' + _0x27479f[_0x238efb].type + 'a_reels'), new _0x4de5e8.Vector3(_0x2bb83f.x, _0x2bb83f.y, _0x2bb83f.z), {
              'rotation': new _0x4de5e8.Vector3(_0x329b33[_0x238efb].endPos[0x1], 0x0, _0x27479f[_0x238efb].r),
              'dimension': _0x2a9e75.g.casinoInteriorDimension
            }), await _0x4de5e8.game.sleep(_0x896836), _0x329b33[_0x238efb].spinning[0x2] = null, _0x329b33[_0x238efb].reels[0x2].destroy(), _0x2bb83f = _0x4de5e8.game.object.getObjectOffsetFromCoords(_0x27479f[_0x238efb].x, _0x27479f[_0x238efb].y, _0x27479f[_0x238efb].z, _0x27479f[_0x238efb].r, _0x2f49e4[0x2][0x0], _0x2f49e4[0x2][0x1], _0x2f49e4[0x2][0x2]), _0x329b33[_0x238efb].reels[0x2] = await (0x0, _0x5d3bba.n)(_0x4de5e8.game.joaat('vw_prop_casino_slot_0' + _0x27479f[_0x238efb].type + 'a_reels'), new _0x4de5e8.Vector3(_0x2bb83f.x, _0x2bb83f.y, _0x2bb83f.z), {
              'rotation': new _0x4de5e8.Vector3(_0x329b33[_0x238efb].endPos[0x2], 0x0, _0x27479f[_0x238efb].r),
              'dimension': _0x2a9e75.g.casinoInteriorDimension
            });
          } catch (_0x10a55a) {
            _0x108cf8.api.sendError(_0x10a55a);
          } finally {
            _0x4de5e8.events.callRemote('3527653722'), _0x4de5e8.game.audio.stopSound(_0x2e50fc), _0x4de5e8.game.audio.releaseSoundId(_0x2e50fc);
          }
        }), _0x4de5e8.events.add('fun.casino.syncSlots', (_0x4fbefd, _0x28e0e4) => {
          if (!_0x28e0e4) return;
          let _0x5d7e72 = _0x4fbefd;
          _0x329b33[_0x5d7e72] && (_0x329b33[_0x5d7e72].endPos = JSON.parse(_0x28e0e4), Array.isArray(_0x329b33) && _0x329b33[_0x5d7e72].reels && _0x329b33[_0x5d7e72].reels[0x0] && (_0x329b33[_0x5d7e72].reels[0x0].setRotation(_0x329b33[_0x5d7e72].endPos[0x0], 0x0, _0x27479f[_0x5d7e72].r, 0x1, true), _0x329b33[_0x5d7e72].reels[0x1].setRotation(_0x329b33[_0x5d7e72].endPos[0x1], 0x0, _0x27479f[_0x5d7e72].r, 0x1, true), _0x329b33[_0x5d7e72].reels[0x2].setRotation(_0x329b33[_0x5d7e72].endPos[0x2], 0x0, _0x27479f[_0x5d7e72].r, 0x1, true)));
        }), _0x4de5e8.events.add('fun.casino.spinResult', async (_0x46d157, _0x9aeb23, _0x3aa2fa) => {
          const _0x24c27e = await _0x108cf8.api.taskPlayAnim(_0x46d157, _0x9aeb23, _0x3aa2fa, true);

          await _0x4de5e8.game.sleep(0x1f4 * _0x24c27e), await _0xdcf08d('idle', 0x1), _0x54521a = true, _0x396a5d = null;
        });

        const _0x2ab4ba = _0x855399 => {
          switch (_0x855399) {
            case 0x1:
              return 'dlc_vw_casino_slot_machine_ak_player_sounds';

            case 0x2:
              return 'dlc_vw_casino_slot_machine_ir_player_sounds';

            case 0x3:
              return 'dlc_vw_casino_slot_machine_rsr_player_sounds';

            case 0x4:
              return 'dlc_vw_casino_slot_machine_fs_player_sounds';

            case 0x5:
              return 'dlc_vw_casino_slot_machine_ds_player_sounds';

            case 0x6:
              return 'dlc_vw_casino_slot_machine_kd_player_sounds';

            case 0x7:
              return 'dlc_vw_casino_slot_machine_td_player_sounds';

            case 0x8:
              return 'dlc_vw_casino_slot_machine_hz_player_sounds';
          }

          return '';
        };

        let _0x497e4e;

        const _0x567ed1 = () => {
          try {
            _0x497e4e = new _0x42f7af.InstructionalButtons(-0x1), _0x497e4e.addButton('ibuttons.exit', 'E'), _0x497e4e.addButton('ibuttons.start', 'F'), _0x497e4e.addButton('ibuttons.increaseBet', 0xaf), _0x497e4e.addButton('ibuttons.decreaseBet', 0xae), _0x497e4e.isActive() || _0x497e4e.toggleHud(true);
          } catch (_0x2f3ab6) {
            _0x108cf8.api.sendError(_0x2f3ab6);
          }
        },
              _0x52a3fe = () => {
          try {
            _0x497e4e.resetBar();
          } catch (_0x49fe1d) {
            _0x108cf8.api.sendError(_0x49fe1d);
          }
        },
              _0x34b8ba = (_0x53b74e = _0x1199b0) => {
          try {
            let _0x46e431 = _0x4121ac();

            _0x108cf8.api.displayHelpStringTrans('displayHelpString.slotBetInfo', {
              'min': _0x46e431.min,
              'max': _0x46e431.max,
              'currentBet': _0x53b74e
            }, true, false, 0x0), _0x1199b0 = _0x53b74e;
          } catch (_0x49f8d2) {
            _0x108cf8.api.sendError(_0x49f8d2);
          }
        },
              _0x4121ac = (_0x236aa8 = _0x1f3d94) => {
          try {
            return _0x1dab6b[_0x27479f[_0x236aa8].type] || 0x0;
          } catch (_0x4de462) {
            _0x108cf8.api.sendError(_0x4de462);
          }
        },
              _0xdcf08d = (_0x2b3cb4, _0x24f8e8 = 0x1) => new Promise(async (_0x33558e, _0x278af0) => {
          try {
            const _0xce0660 = ['a', 'b', 'c'];

            let _0x50fc27 = _0xce0660[Math.floor(Math.random() * _0xce0660.length)];

            const _0x184f43 = 0x1 === _0x108cf8.api.getEntitySync(_0x288236, 'gender', 'number') ? 'female' : 'male';

            let _0x1635a9 = 0x0;

            switch (_0x2b3cb4) {
              case 'idle':
                _0x1635a9 = await _0x108cf8.api.taskPlayAnim('anim_casino_a@amb@casino@games@slots@' + _0x184f43, 'betidle_idle_' + _0x50fc27, _0x24f8e8, 0x2);
                break;

              case 'betAdd':
                _0x1635a9 = await _0x108cf8.api.taskPlayAnim('anim_casino_a@amb@casino@games@slots@' + _0x184f43, 'betidle_press_betmax_' + _0x50fc27, _0x24f8e8, 0x2);
                break;

              case 'betTake':
                _0x1635a9 = await _0x108cf8.api.taskPlayAnim('anim_casino_a@amb@casino@games@slots@' + _0x184f43, 'betidle_press_betone_' + _0x50fc27, _0x24f8e8, 0x2);
                break;

              case 'spin':
                'c' === _0x50fc27 && (_0x50fc27 = 'a'), _0x1635a9 = await _0x108cf8.api.taskPlayAnim('anim_casino_a@amb@casino@games@slots@' + _0x184f43, 'pull_spin_' + _0x50fc27, _0x24f8e8, 0x2);
                break;

              case 'spinning':
                _0x1635a9 = await _0x108cf8.api.taskPlayAnim('anim_casino_a@amb@casino@games@slots@' + _0x184f43, 'spinning_' + _0x50fc27, _0x24f8e8, 0x2);
            }

            return _0x33558e([_0x1635a9, _0x184f43, _0x50fc27]);
          } catch (_0x359980) {
            return _0x108cf8.api.sendError(_0x359980), _0x33558e();
          }
        }),
              _0x2920ef = (_0x3e32c5, _0x27428a, _0x1ae13d) => new Promise(async (_0x59be77, _0x410541) => {
          try {
            const _0x1f6eac = _0x329b33[_0x3e32c5];
            if (!_0x1f6eac) return _0x59be77(0x0);
            {
              const _0x33bfdf = 'anim_casino_a@amb@casino@games@slots@' + _0x27428a,
                    _0x2e879a = _0x1f6eac.machine,
                    _0x54cbe5 = _0x4de5e8.game.entity.getEntityAnimDuration(_0x33bfdf, 'pull_spin_' + _0x1ae13d + '_slotmachine');

              _0x108cf8.api.requestAnimDict(_0x33bfdf).then(async () => (_0x2e879a.playAnim('pull_spin_' + _0x1ae13d + '_slotmachine', _0x33bfdf, 0x3e8, false, true, false, 0x0, 0x4000), _0x59be77(_0x54cbe5))).catch(() => _0x59be77(0x0));
            }
          } catch (_0x2908f8) {
            return _0x108cf8.api.sendError(_0x2908f8), _0x59be77(0x0);
          }
        });
      },
      0x53cc: (_0x444b99, _0x5408f1, _0x5b86ee) => {
        'use strict';

        const a0_0x5a5bbc = {
          _0x1c2af9: 0x83f
        },
              a0_0x4de9f5 = {
          _0x13ead9: 0x2488,
          _0x299974: 0x103c
        },
              a0_0x157d39 = {
          _0x219109: 0x74c,
          _0x4a219: 0x1a07,
          _0x3383fd: 0x1934,
          _0x2777b7: 0x535,
          _0x1bc096: 0x12a3,
          _0x2ddb57: 0x535,
          _0xe5c3e3: 0x25a,
          _0x504c82: 0x14d2,
          _0x18392c: 0x1da5,
          _0x231e50: 0x2201
        },
              a0_0x2e529a = {
          _0x5adfc1: 0x1a5
        },
              a0_0x592939 = {
          _0x14b7ea: 0x1b21,
          _0x2658ac: 0x14d2,
          _0xdf6638: 0x1da5
        },
              a0_0x26c508 = {
          _0x57a0bb: 0x1d66
        },
              a0_0x16d47a = {
          _0x41fd56: 0xf86
        },
              a0_0x502cba = {
          _0x4e6406: 0x2405,
          _0x4f739e: 0x1b21,
          _0x368588: 0x1d2
        };

        _0x5b86ee.r(_0x5408f1);

        var _0x2e1bbf = _0x5b86ee(0x16a21),
            _0x521223 = _0x5b86ee(0x12a76),
            _0x3986ea = _0x5b86ee(0x161cd);

        const _0x58a58d = _0x3986ea.players.local;

        let _0xae83b7,
            _0x2ead5e,
            _0x570a4a,
            _0x12a752 = 0x0,
            _0x37bdd1 = 0x0,
            _0x59e9a1 = [];

        const _0x227cf7 = [new _0x3986ea.Vector3(-1423.4, -215.3, 46.5), new _0x3986ea.Vector3(340.27, 178.87, 103.02), new _0x3986ea.Vector3(393.61, -709.84, 29.28)],
              _0x51df3d = new _0x3986ea.Vector3(-1426.5, -230.5, 21.4),
              _0x2da335 = new _0x3986ea.Vector3(-1426.5, -258.2, 21.4);

        _0x227cf7.forEach((_0x5aa132, _0x4d337f) => {
          _0x3986ea.markers.new(0x1, new _0x3986ea.Vector3(_0x5aa132.x, _0x5aa132.y, _0x5aa132.z - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff]
          });

          const _0x186706 = _0x3986ea.colshapes.newSphere(_0x5aa132.x, _0x5aa132.y, _0x5aa132.z, 0x1);

          _0x186706.cinemaId = _0x4d337f, _0x59e9a1.push(_0x186706);
        }), _0x3986ea.events.add('playerEnterColshape', _0x568af0 => {
          _0x59e9a1.includes(_0x568af0) && (_0xae83b7 = _0x568af0, _0x2e1bbf.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388));
        }), _0x3986ea.events.add('playerExitColshape', _0x5d3759 => {
          _0xae83b7 && _0x5d3759 == _0xae83b7 && (_0xae83b7 = undefined, _0x3986ea.game.ui.clearHelp(true));
        }), _0x3986ea.events.add('keys.e', () => {
          if (_0xae83b7) {
            const _0x2d5cca = _0xae83b7.cinemaId;
            null != _0x2d5cca && (_0x2ead5e = _0x2d5cca, _0x3986ea.events.callRemote('3978080002', _0x2d5cca)), _0xae83b7 = undefined;
          }
        }), _0x3986ea.events.add('fun.cinema.initSeat', () => {
          _0x3986ea.events.call('utils.disablePlayerMove', true), _0x58a58d.freezePosition(true);
        }), _0x3986ea.events.add('fun.cinema.showScreen', async () => {
          _0x3986ea.gui.cursor.show(true, true), _0x521223.globalBrowser.toggle('cinema', {
            'value': true
          }), _0x570a4a = _0x3986ea.cameras.new('default', _0x51df3d, new _0x3986ea.Vector3(0x0, 0x0, 0x0), 0x28), _0x570a4a.pointAtCoord(_0x2da335.x, _0x2da335.y, _0x2da335.z), _0x570a4a.setActive(true), _0x3986ea.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), await _0x3986ea.game.sleep(0x1f4), _0x2e1bbf.api.fadeIn(0x3e8);
        }), _0x3986ea.events.add('fun.cinema.triggerCinemaExit', () => {
          _0x521223.globalBrowser.toggle('cinema', {
            'value': false
          }), _0x3986ea.cameras.exists(_0x570a4a) && (_0x570a4a.setActive(false), _0x570a4a.destroy(), _0x3986ea.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x570a4a = undefined), _0x3986ea.events.callRemote('4002842493'), _0x3986ea.events.call('utils.disablePlayerMove', false), _0x58a58d.freezePosition(false), _0x2e1bbf.api.toggleChat(true), _0x2e1bbf.api.toggleHud(true), _0x2e1bbf.api.toggleRadar(true);
        }), _0x3986ea.events.add('fun.cinema.triggerAddVideo', _0x27869b => {
          if (_0x2e1bbf.api.ePress(_0x12a752, 0x7d0)) return _0x2e1bbf.api.longNotifyTrans('system.notTooFast', 'error');
          _0x12a752 = _0x2e1bbf.api.ePressUpdate(0x7d0);
          if (!_0x244388(_0x27869b)) return _0x2e1bbf.api.longNotifyTrans('fun.cinema.wrongUrl', 'error');

          _0x3986ea.events.callRemote('1516565612', _0x27869b);
        }), _0x3986ea.events.add('fun.cinema.triggerVoteForSkip', _0x5db1e0 => {
          if (_0x2e1bbf.api.ePress(_0x37bdd1, 0x7d0)) return _0x2e1bbf.api.longNotifyTrans('system.notTooFast', 'error');
          _0x37bdd1 = _0x2e1bbf.api.ePressUpdate(0x7d0), _0x3986ea.events.callRemote('1626127664', _0x5db1e0);
        }), _0x3986ea.events.add('fun.cinema.setVoteAmount', _0x2c5ab4 => {
          _0x521223.globalBrowser.emit('cinema_setVoteAmount', _0x2c5ab4);
        }), _0x3986ea.events.add('fun.cinema.setVoteState', _0x3298d0 => {
          _0x521223.globalBrowser.emit('cinema_setVoteState', _0x3298d0);
        }), _0x3986ea.events.add('fun.cinema.setVideo', (_0x8f97d0, _0xc717ef = 0x0, _0x5d9132) => {
          _0x521223.globalBrowser.emit('cinema_setVideo', {
            'id': _0x8f97d0,
            'time': _0xc717ef,
            'author': _0x5d9132
          });
        });

        const _0x244388 = _0x7d214d => {
          let _0x3b1c82 = _0x7d214d.match(/^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/);

          return !(!_0x3b1c82 || 0xb != _0x3b1c82[0x7].length) && _0x3b1c82[0x7];
        };
      },
      0xd135: (_0x33d754, _0x3cf476, _0x55e6af) => {
        'use strict';

        const a0_0x5ad983 = {
          _0x4362ea: 0x2606
        },
              a0_0x30e5bc = {
          _0x4cb682: 0x535,
          _0x4a80ad: 0x1a50,
          _0x1c8c5f: 0x1f30,
          _0x2e9220: 0x1d55,
          _0x3ba19d: 0x1151,
          _0x5a88f3: 0x1d66,
          _0x3889f3: 0xf2f,
          _0x4f8cbd: 0x726,
          _0x2a9f54: 0xf2f,
          _0x19ec75: 0x1501,
          _0x234795: 0x1c85,
          _0x2701ab: 0x101e,
          _0x5d358b: 0xf2f,
          _0x4eec92: 0x140a,
          _0x1db799: 0x15e0,
          _0x148682: 0x815,
          _0x2ea4db: 0x1d5e,
          _0x2dfdbc: 0x18c8,
          _0x12be9c: 0x1501,
          _0x130118: 0xf2f
        },
              a0_0x4c4e40 = {
          _0x39dfbf: 0x535,
          _0x53bc6d: 0x253d,
          _0x2bdbb1: 0x2606,
          _0x53a1e4: 0x16c5,
          _0x5a1b64: 0x2530,
          _0x25a94d: 0x1d66,
          _0x2d3bd4: 0x1c85,
          _0x55c161: 0x2657,
          _0x121682: 0x14d1,
          _0x554c86: 0x6b3,
          _0x4363d7: 0xea3,
          _0x18e4ba: 0x14d1,
          _0x47181d: 0x14d1,
          _0x1894ec: 0x14d1,
          _0x59dcb1: 0x1e3d,
          _0x29c3ad: 0x1d7b,
          _0x510a18: 0x1edc,
          _0x3bbfec: 0x135a,
          _0x183212: 0x19e6,
          _0x1a388e: 0x220f,
          _0x517a91: 0x9ab,
          _0x155e0c: 0x2292,
          _0x3b93fc: 0x263f,
          _0x4b4cf5: 0x12e5,
          _0x4101b5: 0x59b,
          _0x3f1bfa: 0x535,
          _0x14f12a: 0x1a50,
          _0x3dcc62: 0xe95,
          _0xde64e0: 0xf86,
          _0x3e0d65: 0x1be2,
          _0x5a14b7: 0x611,
          _0x24917e: 0x1da5,
          _0x307091: 0x2001,
          _0x5c9bc2: 0xf86,
          _0x48b63a: 0x215f,
          _0x56ac03: 0x2412,
          _0x5df1e0: 0xf86,
          _0x31014c: 0xe4e,
          _0x2d6923: 0x11c2,
          _0xb41f3c: 0x1d66,
          _0x3bc6c6: 0x1992,
          _0x1399d2: 0x1329,
          _0x10ac04: 0x108f,
          _0xa45fd0: 0x108f,
          _0x38f04a: 0x12d3,
          _0x23a3d1: 0x13f4,
          _0x1f358c: 0x1e94,
          _0x1de55c: 0x108f,
          _0x5849a2: 0x17a7,
          _0x7698c7: 0x22e6
        },
              a0_0x1bf894 = {
          _0x5d21f6: 0x235b,
          _0x46d640: 0x235b,
          _0x4302b8: 0x16c5,
          _0x5a4b6e: 0x2530,
          _0xfc5ac1: 0x1af1,
          _0x311a5d: 0x135a,
          _0x383fd0: 0x1a2c
        },
              a0_0x5578f2 = {
          _0x27ec53: 0x19e6,
          _0x14735b: 0x135a,
          _0x361498: 0x21e0,
          _0x322920: 0x21e0,
          _0x30c883: 0x19e6
        },
              a0_0x395f5f = {
          _0x295f02: 0x1c80,
          _0x561a85: 0x1366,
          _0x94e2ad: 0x16c5,
          _0x414baa: 0x19e6,
          _0xd27add: 0x17f,
          _0xd27095: 0x1a2c
        },
              a0_0x4d2bf9 = {
          _0x126a25: 0xe95,
          _0x3ac04a: 0x2530,
          _0x4ab3f4: 0xe95,
          _0x10de7d: 0xe4e,
          _0x24b826: 0x22e6,
          _0x42ecbe: 0x2521,
          _0x3cd6ff: 0x1d66,
          _0x1d730e: 0xd79,
          _0x57c232: 0x1d66,
          _0x159ca4: 0x2072,
          _0x2f9476: 0x1ce5,
          _0x6e79ab: 0x535,
          _0x332ff6: 0x1da5,
          _0x256daf: 0x1eb1,
          _0x5772cb: 0x24d,
          _0x2311b5: 0x1c80,
          _0x28096f: 0x16c5,
          _0x76e25c: 0x1c80,
          _0x3e9745: 0x2180,
          _0x14cab5: 0x2530,
          _0x548115: 0x535,
          _0x4a8b71: 0x240a,
          _0x9f4b19: 0xf82,
          _0x4c669d: 0x10f6,
          _0x1307b4: 0x1366,
          _0x52d56a: 0x16c5,
          _0x201369: 0x16c5,
          _0x4a2dc4: 0x2fa,
          _0x1114db: 0x2140,
          _0x1f4fed: 0x263f,
          _0x167662: 0x215f,
          _0x249da9: 0x535,
          _0x26071b: 0xbca,
          _0x19d45a: 0x12da,
          _0x586223: 0x17f,
          _0x141adf: 0x1d66,
          _0x8150e9: 0xd79,
          _0x236e0e: 0x59b,
          _0x5202bb: 0x1c66,
          _0x5cf1c0: 0x1cd8,
          _0x52239b: 0x1d66,
          _0x2c955e: 0x14d2,
          _0x3e9631: 0x1da5,
          _0x508a77: 0x244b
        },
              a0_0x135125 = {
          _0x5c1d5f: 0x1d66,
          _0x2d231b: 0x628,
          _0xa2a98b: 0x19d6,
          _0x279cb2: 0x235b,
          _0x1a8e5e: 0x185e,
          _0x4b5f95: 0xc95,
          _0x99c5bd: 0x4b9,
          _0x5bc923: 0x11d9,
          _0x36a7fb: 0x235b,
          _0x23fa6f: 0x185e,
          _0x318f32: 0x235b,
          _0x1ab8fc: 0xc95,
          _0x26096c: 0x1293,
          _0x3db44e: 0x215f,
          _0x26d534: 0x96f,
          _0x137bb8: 0x25df,
          _0x39dcfe: 0xe4e,
          _0x2c89e3: 0xe4e,
          _0x56a10b: 0x22e6,
          _0xc7e994: 0x2417,
          _0x13b767: 0xd79,
          _0x1704f1: 0x108f,
          _0x4a4d47: 0xbe5,
          _0x44b9d4: 0x179d,
          _0x4e7803: 0x535
        },
              a0_0x5761a9 = {
          _0x3cd752: 0xeb9,
          _0x133209: 0x1d87,
          _0x13b8d4: 0x1d87,
          _0x4cb189: 0x1d7b,
          _0xdb8cde: 0x135a,
          _0xb4a3b7: 0x1a2c,
          _0x2bbffc: 0x1d2,
          _0x2dc851: 0xbe5,
          _0xabd07d: 0x19e6,
          _0x543410: 0xe86,
          _0x4f96da: 0x19d2,
          _0x36fe19: 0x1af1,
          _0x558e79: 0xef9,
          _0x4ae867: 0x1e3d,
          _0xc6d904: 0x17be,
          _0x4492df: 0x1af1,
          _0x32993e: 0x12e5,
          _0x15c344: 0x235b,
          _0x9d3002: 0x1291,
          _0x646e8d: 0x1e6a,
          _0x238a74: 0x21e0,
          _0x42deac: 0x235b,
          _0x302c3b: 0x16c5,
          _0x539bb4: 0xc1f,
          _0x2bb6c1: 0xea3,
          _0x5177af: 0x1d7b,
          _0x1a375e: 0x1edc,
          _0x2bed7c: 0x1d7b,
          _0xeecef0: 0x1a2c,
          _0x54819f: 0x6b3,
          _0x3a126d: 0x220f,
          _0x109a81: 0x9ab,
          _0x26d72a: 0x2292,
          _0x147428: 0x263f
        },
              a0_0x5d450d = {
          _0x4b1d59: 0x11f5,
          _0x302684: 0x12dd,
          _0x54cc8d: 0x19d2,
          _0x3cbe83: 0x12dd,
          _0x4a4351: 0x22b2,
          _0x416462: 0x19d2,
          _0x22b703: 0x12dd,
          _0x52f732: 0x22b2
        },
              a0_0x39cbac = {
          _0x23ea82: 0x1e3d,
          _0x1b6423: 0x1e3d
        };

        _0x55e6af.r(_0x3cf476);

        var _0x192671 = _0x55e6af(0x16a21),
            _0x1d70d1 = _0x55e6af(0x16a7d),
            _0x2e5508 = _0x55e6af(0x48c4),
            _0x11f06e = _0x55e6af(0x161cd);

        const _0x532e77 = 22.5,
              _0x40feb3 = 11.25,
              _0x3c24a2 = new _0x11f06e.Vector3(-0x682, -1126.8, 13.7),
              _0x49c776 = 0x5a * Math.PI / 0xb4,
              _0x15b8d8 = Math.sin(_0x49c776),
              _0x470b18 = Math.cos(_0x49c776),
              _0x568869 = 'ferris_finale_anim',
              _0xe06cba = _0x11f06e.objects.new(_0x11f06e.game.joaat('prop_ld_ferris_wheel'), new _0x11f06e.Vector3(-1663.969970703125, -1126.6999999999998, 30.7), {
          'dimension': -0x1
        });

        _0xe06cba.disableLodDist = true;

        const _0x2ba033 = _0x11f06e.cameras.new('default', new _0x11f06e.Vector3(-1703.854, -1082.222, 42.006), new _0x11f06e.Vector3(-8.3096, 0x0, -111.8213), 0x32),
              _0x1eeae4 = {
          'active': true,
          'canceledSit': true,
          'state': 0x0,
          'stopQueue': [],
          'chairs': [],
          'chairsCartsMap': {},
          'chairsPlayersMap': {},
          'carts': [],
          'speed': 2.5,
          'rotation': 0x0,
          'azimuthAngleDeg': 0x0,
          'polarAngleDeg': 0x0,
          'cameraMode': 0x0,
          'dataInited': true,
          'blockedChangeCamMode': true
        },
              _0x4c98ae = _0x11f06e.players.local,
              _0xf5f48f = (_0x32373d = true) => _0x32373d ? (0x0, _0x2e5508.getServerTime)() : _0x11f06e.game.time.serverTickCount,
              _0x320a8e = () => {
          _0x1eeae4.rotation = _0x1eeae4.rotation % 0x168, _0x1eeae4.rotation < 0x0 && (_0x1eeae4.rotation += 0x168);
        },
              _0x1a91de = _0x99d44c => _0xe06cba.getOffsetFromInWorldCoords(_0x99d44c.offset.x, _0x99d44c.offset.y, _0x99d44c.offset.z),
              _0x4b46c9 = () => {
          const _0x54f253 = _0xf5f48f();

          _0x1eeae4.lastUpdateWheel || (_0x1eeae4.lastUpdateWheel = _0x54f253);

          const _0x55c0b5 = (_0x54f253 - _0x1eeae4.lastUpdateWheel) / 0x3e8;

          _0x1eeae4.lastUpdateWheel = _0x54f253, _0x1eeae4.rotation += 0x5 * _0x55c0b5, _0x1eeae4.rotation = _0x1eeae4.rotation % 0x168, _0x1eeae4.rotation < 0x0 && (_0x1eeae4.rotation += 0x168);
        },
              _0x14673c = async _0x4e1110 => {
          const a0_0x22c05e = {
            _0x5acf11: 0x12dd
          },
                _0x31deff = ((_0xe06c79 = _0x11f06e.world.data.ferrisWheelData) => {
            if ('string' != typeof _0xe06c79 || !_0xe06c79.length) return null;

            const [_0x15205e, _0x4464c7, _0x27e8ef, _0x4d47e0, _0xe25d19, _0x57d226, ..._0xc19eb9] = _0xe06c79.split('&');

            return {
              'fromRotation': parseFloat(_0x4d47e0),
              'updateTime': parseInt(_0x15205e, 0x24),
              'state': parseInt(_0x4464c7),
              'stateStartTime': parseInt(_0x27e8ef, 0x24),
              'chairs': _0xe25d19.length ? _0xe25d19.split('^').map(_0x480c3b => {
                const [_0x1cc50b, _0x47e5f4, _0x366fd0] = _0x480c3b.split('|');

                return {
                  'cartId': parseInt(_0x1cc50b),
                  'playerId': parseInt(_0x47e5f4),
                  'type': parseInt(_0x366fd0)
                };
              }) : [],
              'stopQueue': _0x57d226.length ? _0x57d226.split('^').map(_0xf0e8f1 => parseInt(_0xf0e8f1)) : [],
              'args': _0xc19eb9
            };
          })(_0x4e1110);

          if (!_0x31deff) return;
          let _0x1634a3 = false;
          _0x1eeae4.dataInited || (_0x1634a3 = true);

          const _0x280d81 = _0xf5f48f(),
                _0x3025dd = (_0x280d81 - _0x31deff.stateStartTime) / 0x3e8;

          _0x1eeae4.updateTime = _0x31deff.updateTime, _0x1eeae4.state = _0x31deff.state, _0x1eeae4.stateStartTime = _0x31deff.stateStartTime, _0x1eeae4.stopQueue = _0x31deff.stopQueue;

          let _0x14cf94 = _0x1eeae4.chairs.filter(_0x15d5a5 => !_0x31deff.chairs.find(_0xd7a903 => _0xd7a903.cartId === _0x15d5a5.cartId && _0xd7a903.type === _0x15d5a5.type)),
              _0x89297c = _0x31deff.chairs.filter(_0x235a85 => !_0x1eeae4.chairs.find(_0x2407fc => _0x235a85.cartId === _0x2407fc.cartId && _0x235a85.type === _0x2407fc.type));

          const _0x4d6573 = [];

          for (const _0x5a170e of _0x89297c) {
            const _0x6650f2 = _0x14cf94.find(_0x1b4de2 => _0x1b4de2.cartId === _0x5a170e.cartId);

            _0x6650f2 && (_0x14cf94 = _0x14cf94.filter(_0x1bacdc => _0x1bacdc !== _0x6650f2), _0x89297c = _0x89297c.filter(_0x1d1547 => _0x1d1547 !== _0x5a170e), _0x4d6573.push({
              'cartId': _0x5a170e.cartId,
              'playerId': _0x5a170e.playerId,
              'oldType': _0x6650f2.type,
              'newType': _0x5a170e.type
            }));
          }

          _0x1eeae4.chairs = _0x31deff.chairs, _0x1eeae4.chairsCartsMap = {}, _0x1eeae4.chairsPlayersMap = {};

          for (let _0x106712 = 0x0; _0x106712 < _0x1eeae4.chairs.length; _0x106712++) {
            const _0x33636a = _0x1eeae4.chairs[_0x106712];
            _0x1eeae4.chairsCartsMap[_0x33636a.cartId] = _0x33636a.playerId, _0x1eeae4.chairsPlayersMap[_0x33636a.playerId] = _0x33636a.cartId;
          }

          if (0x0 === _0x1eeae4.state) _0x1eeae4.rotation = _0x31deff.fromRotation, _0x1eeae4.rotation += 0x5 * _0x3025dd, _0x1eeae4.rotation = _0x1eeae4.rotation % 0x168, _0x1eeae4.rotation < 0x0 && (_0x1eeae4.rotation += 0x168), _0x1eeae4.lastUpdateWheel = _0x280d81, _0x320a8e(), _0x4b46c9(), _0x1eeae4.active = true;else {
            if (0x1 === _0x1eeae4.state) {
              const [_0x37d9c8] = _0x31deff.args,
                    _0x375ee6 = parseInt(_0x37d9c8);

              _0x1eeae4.active = false, _0x1eeae4.rotation = -_0x375ee6 * _0x532e77;

              const _0x21738e = _0x14cf94.find(_0x580542 => _0x580542.cartId === _0x375ee6);

              if (_0x21738e) {
                const _0x55ba34 = _0x11f06e.players.atRemoteId(_0x21738e.playerId);

                _0x11f06e.players.exists(_0x55ba34) && _0x4e22b7(_0x55ba34, _0x1eeae4.carts[_0x375ee6]);
              }

              const _0x1aeadd = _0x1eeae4.chairs.find(_0x4657c5 => _0x4657c5.cartId === _0x375ee6);

              if (_0x1aeadd) {
                const _0x5da7d8 = _0x11f06e.players.atRemoteId(_0x1aeadd.playerId);

                _0x11f06e.players.exists(_0x5da7d8) && _0x5da7d8.handle && !_0x5da7d8.ferrisWheelSitActive && !_0x5da7d8.ferrisWheelExited && _0x11234f(_0x5da7d8, _0x1eeae4.carts[_0x375ee6]);
              }

              _0x1eeae4.stopQueue.includes(_0x375ee6) && (_0x1eeae4.stopQueue = _0x1eeae4.stopQueue.filter(_0x3e1620 => _0x3e1620 !== _0x375ee6)), _0x320a8e(), _0xe06cba.setRotation(_0x1eeae4.rotation - _0x40feb3, 0x0, 0x0, 0x2, true);

              for (let _0x2711b6 = 0x0; _0x2711b6 < _0x1eeae4.carts.length; _0x2711b6++) {
                const _0x391d1e = _0x1eeae4.carts[_0x2711b6];
                if (!_0x391d1e) return;

                const _0xf872ce = _0x1a91de(_0x391d1e);

                _0x391d1e.setInvincible(true), _0x391d1e.setCoords(_0xf872ce.x, _0xf872ce.y, _0xf872ce.z, false, false, false, false), _0x391d1e.freezePosition(true), _0x391d1e.setNoCollision(_0xe06cba.handle, true);
              }
            }
          }
        };

        _0x11f06e.events.add('worldDataChanged', (_0x3c8ff7, _0x1c8c7e) => {
          'ferrisWheelData' === _0x3c8ff7 && _0x14673c(_0x1c8c7e);
        }), _0x11f06e.events.add('keys.e', () => {
          if (_0x11f06e.game.player.isFreeAiming() || _0x11f06e.gui.cursor.visible || _0x11f06e.players.local.getVariable('fun.minigames.playing') || _0x55e6af.g.playableInstrument || _0x11f06e.players.local.vehicle || _0x55e6af.g.currentInterface || _0x11f06e.players.local.activeItemId || _0x11f06e.players.local.getVariable('playerInTrunk')) return;
          if (_0x1eeae4.chairs.find(_0xd6443f => _0xd6443f.playerId === _0x4c98ae.remoteId)) return void _0x11f06e.events.callRemote('3961893041', _0x1eeae4.rotation);
          const _0x321d89 = _0x4c98ae.position;
          _0x192671.api.vdist2(_0x321d89, _0x3c24a2) <= 1.3 && _0x11f06e.events.callRemote('2793305739', _0x1eeae4.rotation);
        }), _0x11f06e.keys.bind(_0x1d70d1.t.V, true, async () => {
          if (!(_0x11f06e.game.player.isFreeAiming() || _0x11f06e.gui.cursor.visible || _0x11f06e.players.local.getVariable('fun.minigames.playing') || _0x55e6af.g.playableInstrument || _0x11f06e.players.local.vehicle || _0x55e6af.g.currentInterface || _0x11f06e.players.local.activeItemId || _0x11f06e.players.local.getVariable('playerInTrunk')) && _0x4c98ae.ferrisWheelSitActive && _0x4c98ae.isPlayingAnim('anim@mp_ferris_wheel', 'idle_a_player_one', 0x3)) {
            if (await _0x192671.api.fadeOut(0x12c), _0x1eeae4.cameraMode += 0x1, _0x1eeae4.cameraMode >= 0x2 && (_0x1eeae4.cameraMode = 0x0), 0x0 === _0x1eeae4.cameraMode) _0x2ba033.setCoord(-1703.854, -1082.222, 42.006), _0x2ba033.pointAt(_0xe06cba.handle, 0x0, 0x0, 0x0, true), _0x2ba033.setActive(true), _0x11f06e.game.cam.renderScriptCams(true, false, 0x0, false, false, 0x0);else {
              if (0x1 === _0x1eeae4.cameraMode) {
                const _0xdce84e = _0x1eeae4.chairs.find(_0x300142 => _0x300142.playerId === _0x4c98ae.remoteId);

                _0xdce84e && (_0x1eeae4.azimuthAngleDeg = 0x0, _0x1eeae4.polarAngleDeg = 0x10e, _0x1eeae4.cameraCart = _0xdce84e.cartId, _0x2ba033.stopPointing(), _0x2ba033.setActive(true), _0x11f06e.game.cam.renderScriptCams(true, false, 0x0, false, false, 0x0));
              }
            }
            await _0x192671.api.fadeIn(0x12c);
          }
        });

        const _0x11234f = async (_0x298993, _0x384351, _0x37c6d5 = false) => {
          try {
            if (!_0x298993 || !_0x11f06e.players.exists(_0x298993)) return;
            if (!_0x384351 || _0x298993.ferrisWheelSitActive && !_0x37c6d5) return;
            _0x298993.ferrisWheelSitActive = true, _0x298993.ferrisWheelExited = false;
            let _0x11cd51 = _0x298993;

            if (_0x298993 !== _0x4c98ae) {
              if (await _0x192671.api.streamIn(_0x298993), await _0x11f06e.game.sleep(0x64), !_0x11f06e.players.exists(_0x298993)) return;

              const _0xb33623 = _0x11f06e.peds.new(_0x298993.model, _0x298993.position, _0x298993.getHeading());

              if (_0x11cd51 = _0xb33623, await _0x192671.api.streamIn(_0xb33623), !_0x11f06e.peds.exists(_0xb33623)) return;
              _0x11f06e.players.exists(_0x298993) && (_0x298993.cloneToTarget(_0xb33623.handle), _0x298993.setAlpha(0x0), _0xb33623.setNoCollision(_0x298993.handle, false), _0x298993.attachTo(_0xb33623.handle, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true));
            } else _0x192671.api.usingSystemAnim(true), _0x192671.api.toggleRadar(false), _0x192671.api.toggleHud(false), _0x192671.api.toggleChat(false), _0x2ba033.setCoord(-1671.2, -1127.16, 15.51), _0x2ba033.pointAtCoord(_0x3c24a2.x, _0x3c24a2.y, _0x3c24a2.z), _0x2ba033.setActive(true), _0x11f06e.game.cam.renderScriptCams(true, false, 0x1f4, false, false, 0x0);

            if (_0x298993.ferrisWheelAnimTarget = _0x11cd51, await _0x192671.api.requestAnimDict('anim@mp_ferris_wheel'), _0x37c6d5) _0x11cd51.attachTo(_0x384351.handle, 0x0, -0.0311279296875, -0.875732421875, -1.9571533203125, 0x0, 0x0, 182.34896850585938, false, false, false, false, 0x2, true), _0x11cd51.taskPlayAnim('anim@mp_ferris_wheel', 'idle_a_player_one', 0x8, -0x8, -0x1, 0x2, 0x1, false, false, false);else {
              _0x11cd51.taskGoStraightToCoord(-1666.2, -1126.8, 0x0, 0x1, -0x1, -0x5a, 0.5), await _0x192671.api.isTaskGoStraightToCoordComplete();

              const _0x52ba85 = _0x11f06e.game.ped.createSynchronizedScene(-1663.969970703125, -1126.699951171875, 15.40000057220459, 0x0, 0x0, 0xb4, 0x2);

              _0x11cd51.taskSynchronizedScene(_0x52ba85, 'anim@mp_ferris_wheel', 'enter_player_one', 0x8, -0x8, 0x0, -0x1, 0x0, 0x0), await _0x192671.api.isSceneEnd(_0x52ba85), _0x11cd51.attachTo(_0x384351.handle, 0x0, -0.0311279296875, -0.875732421875, -1.9571533203125, 0x0, 0x0, 182.34896850585938, false, false, false, false, 0x2, true), _0x11cd51.taskPlayAnim('anim@mp_ferris_wheel', 'idle_a_player_one', 0x8, -0x8, -0x1, 0x2, 0x1, false, false, false);
            }
            _0x298993 !== _0x4c98ae ? _0x298993.attachTo(_0x384351.handle, 0x0, -0.0311279296875, -0.875732421875, -1.9571533203125, 0x0, 0x0, 182.34896850585938, false, false, false, false, 0x2, true) : (await _0x192671.api.fadeOut(0x12c), _0x2ba033.setCoord(-1703.854, -1082.222, 42.006), _0x2ba033.pointAt(_0xe06cba.handle, 0x0, 0x0, 0x0, true), _0x2ba033.setActive(true), _0x11f06e.game.cam.renderScriptCams(true, false, 0x0, false, false, 0x0), await _0x192671.api.fadeIn(0x12c), _0x11f06e.game.audio.isAudioSceneActive('FAIRGROUND_RIDES_FERRIS_WHALE') && _0x11f06e.game.audio.stopAudioScene('FAIRGROUND_RIDES_FERRIS_WHALE'), _0x11f06e.game.audio.startAudioScene('FAIRGROUND_RIDES_FERRIS_WHALE_ALTERNATIVE_VIEW'), _0x11f06e.events.callRemote('2356671177'));
          } catch (_0x452672) {
            if (_0x452672 instanceof _0x192671.api.ExpiredEntityError) return;
            throw _0x452672;
          }
        },
              _0x4e22b7 = async (_0x211783, _0x569c14, _0x113ea7 = false) => {
          try {
            if (!_0x211783 || !_0x11f06e.players.exists(_0x211783)) return;
            if ((!_0x211783.ferrisWheelSitActive || _0x211783.ferrisWheelExited || !_0x211783.handle) && !_0x113ea7) return void (_0x211783.handle || _0x211783.setAlpha(0xff));
            _0x211783.ferrisWheelExited = true, _0x211783.ferrisWheelSitActive = false, _0x211783 === _0x4c98ae && (_0x1eeae4.cameraMode = 0x0, await _0x192671.api.fadeOut(0x12c), _0x2ba033.setActive(true), _0x2ba033.setCoord(-1657.36, -1125.27, 15.18), _0x2ba033.pointAtCoord(-1661.92, -1126.95, 13.69), _0x11f06e.game.cam.renderScriptCams(true, false, 0x0, false, false, 0x0), _0x11f06e.game.cam.setFollowPedCamViewMode(0x1), await _0x192671.api.fadeIn(0x12c), _0x11f06e.events.callRemote('4278459154'));
            let _0x25472c = _0x211783;

            if (_0x211783.detach(true, true), _0x211783 !== _0x4c98ae) {
              if (_0x211783.ferrisWheelAnimTarget && _0x11f06e.peds.exists(_0x211783.ferrisWheelAnimTarget)) _0x25472c = _0x211783.ferrisWheelAnimTarget, _0x211783.attachTo(_0x25472c.handle, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true);else {
                if (await _0x192671.api.streamIn(_0x211783), await _0x11f06e.game.sleep(0x64), !_0x11f06e.players.exists(_0x211783)) return;

                const _0x2522e8 = _0x11f06e.peds.new(_0x211783.model, _0x211783.position, _0x211783.getHeading());

                if (_0x25472c = _0x2522e8, await _0x192671.api.streamIn(_0x2522e8), !_0x11f06e.peds.exists(_0x2522e8)) return;
                _0x11f06e.players.exists(_0x211783) && (_0x211783.cloneToTarget(_0x2522e8.handle), _0x211783.setAlpha(0x0), _0x2522e8.setNoCollision(_0x211783.handle, false), _0x211783.attachTo(_0x2522e8.handle, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true));
              }
            }

            if (!_0x113ea7) {
              const _0xcce074 = _0x11f06e.game.ped.createSynchronizedScene(-1663.969970703125, -1126.699951171875, 15.40000057220459, 0x0, 0x0, 0xb4, 0x2);

              _0x25472c.taskSynchronizedScene(_0xcce074, 'anim@mp_ferris_wheel', 'exit_player_one', 0x8, -0x8, 0x0, -0x1, 0x0, 0x0), await _0x192671.api.isSceneEnd(_0xcce074);
            }

            _0x25472c.clearTasks(), _0x25472c !== _0x211783 ? (_0x211783.detach(true, true), _0x25472c.destroy(), _0x211783.ferrisWheelAnimTarget = null) : (_0x11f06e.game.cam.renderScriptCams(false, false, 0x1f4, false, false, 0x0), _0x1eeae4.blockedChangeCamMode = false, _0x192671.api.usingSystemAnim(false), _0x192671.api.toggleRadar(true), _0x192671.api.toggleHud(true), _0x192671.api.toggleChat(true), _0x11f06e.game.audio.isAudioSceneActive('FAIRGROUND_RIDES_FERRIS_WHALE_ALTERNATIVE_VIEW') && _0x11f06e.game.audio.stopAudioScene('FAIRGROUND_RIDES_FERRIS_WHALE_ALTERNATIVE_VIEW'), _0x11f06e.events.callRemote('2264750862')), _0x211783.setAlpha(0xff);
          } catch (_0x538d89) {
            if (_0x538d89 instanceof _0x192671.api.ExpiredEntityError) return;
            throw _0x538d89;
          }
        };

          const _0x4df4be = _0x1eeae4.chairs.find(_0x4aa30c => _0x4aa30c.playerId === _0x15717c.remoteId);

          _0x4df4be && (_0x1eeae4.stopQueue = _0x1eeae4.stopQueue.filter(_0x188b72 => _0x188b72 !== _0x4df4be.cartId), _0x1eeae4.chairs = _0x1eeae4.chairs.filter(_0xfb571a => _0xfb571a != _0xfb571a));
        }), _0x11f06e.events.add('entityStreamOut', _0x5e1732 => {
          const _0x5a0781 = _0x5e1732.ferrisWheelAnimTarget;
          _0x5a0781 && _0x11f06e.peds.exists(_0x5a0781) && 'ped' === _0x5a0781.type && (_0x5a0781.destroy(), _0x5e1732.ferrisWheelAnimTarget = null);
        }), _0x11f06e.events.add('entityStreamIn', _0x5ab90b => {
          if ('player' !== _0x5ab90b.type) return;

          const _0x987f0e = _0x1eeae4.chairs.find(_0xea03b4 => _0xea03b4.playerId === _0x5ab90b.remoteId);

          if (!_0x987f0e) return;

          const _0x29b8e8 = _0x1eeae4.carts.find(_0x1a529b => _0x1a529b.ferrisCartId === _0x987f0e.cartId);

          _0x29b8e8.handle && (0x0 === _0x987f0e.type && 0x1 === _0x1eeae4.state ? _0x4e22b7(_0x5ab90b, _0x29b8e8, true) : _0x11234f(_0x5ab90b, _0x29b8e8, true));
        });

        const _0x4a89ca = _0x19cf82 => {
          _0x19cf82.setLodDist(0x3e8);

          const _0x339613 = _0x1eeae4.chairs.find(_0x29bd33 => _0x29bd33.cartId === _0x19cf82.ferrisCartId);

          if (!_0x339613) return;

          const _0x31e9b1 = _0x11f06e.players.atRemoteId(_0x339613.playerId);

          _0x11f06e.players.exists(_0x31e9b1) ? _0x31e9b1.handle && (0x0 === _0x339613.type && 0x1 === _0x1eeae4.state ? _0x4e22b7(_0x31e9b1, _0x19cf82, true) : _0x11234f(_0x31e9b1, _0x19cf82, true)) : _0x1eeae4.chairs = _0x1eeae4.chairs.filter(_0x1a08ec => _0x1a08ec.cartId !== _0x19cf82.ferrisCartId);
        };

        _0x11f06e.events.add('render', () => {
          if (!_0x192671.api.isAuthed()) return;
          const _0x27b196 = _0x4c98ae.position;

          if (_0xe06cba && _0x11f06e.objects.exists(_0xe06cba) && 0x0 !== _0xe06cba.handle) {
            _0x11f06e.game.audio.isAudioSceneActive('FAIRGROUND_RIDES_FERRIS_WHALE') && _0x192671.api.invokeNative('SET_AUDIO_SCENE_VARIABLE', 'FAIRGROUND_RIDES_FERRIS_WHALE', 'HEIGHT', _0x27b196.z - 0xd), _0xe06cba.streamed = true, _0xe06cba.setRotation(_0x1eeae4.rotation - _0x40feb3, 0x0, 0x0, 0x2, true);

            for (let _0x24ba46 = 0x0; _0x24ba46 < _0x1eeae4.carts.length; _0x24ba46++) {
              const _0x3438fe = _0x1eeae4.carts[_0x24ba46];
              if (!_0x3438fe) continue;
              _0x3438fe.handle && !_0x3438fe.streamed ? (_0x3438fe.streamed = true, _0x4a89ca(_0x3438fe)) : !_0x3438fe.handle && _0x3438fe.streamed && (_0x3438fe.streamed = false);

              const _0x5f2333 = _0x1a91de(_0x3438fe);

              let _0x179d80 = _0x1eeae4.rotation + _0x3438fe.angle;

              if (_0x179d80 %= 0x168, _0x179d80 < 0x0 && (_0x179d80 += 0x168), 0x0 === parseInt(_0x179d80)) {
                if (!_0x3438fe.inEnter && (_0x3438fe.inEnter = true, _0x1eeae4.stopQueue.includes(_0x24ba46))) {
                  _0x1eeae4.active = false, _0x1eeae4.stopQueue = _0x1eeae4.stopQueue.filter(_0x216a18 => _0x216a18 !== _0x24ba46);

                  const _0x15d065 = _0x1eeae4.chairs.find(_0x1e060d => _0x1e060d.cartId === _0x24ba46);

                  if (_0x15d065) {
                    const _0x3cea4c = _0x11f06e.players.atRemoteId(_0x15d065.playerId);

                    _0x3cea4c.handle && (0x1 === _0x15d065.type ? _0x11234f(_0x3cea4c, _0x3438fe) : _0x4e22b7(_0x3cea4c, _0x3438fe));
                  }
                }
              } else _0x3438fe.inEnter = false;

              _0x3438fe.setInvincible(true), _0x3438fe.setCoords(_0x5f2333.x, _0x5f2333.y, _0x5f2333.z, false, false, false, false), _0x3438fe.freezePosition(true), _0x3438fe.setNoCollision(_0xe06cba.handle, true);
            }

            _0x1eeae4.active && _0x4b46c9();
          } else {
            if (_0xe06cba.streamed) {
              _0xe06cba.streamed = false;

              for (let _0x835b7 = 0x0; _0x835b7 < _0x1eeae4.carts.length; _0x835b7++) {
                const _0x2bd248 = _0x1eeae4.carts[_0x835b7];
                _0x2bd248 && (_0x2bd248.streamed = false);
              }
            }
          }

          _0x1eeae4.blockedChangeCamMode && _0x11f06e.game.controls.disableControlAction(0x0, 0x0, true);

          const _0x4cf55a = _0x192671.api.vdist2(_0x27b196, _0x3c24a2) <= 1.3;

          _0x4cf55a && !_0x4c98ae.ferrisWheelSitActive && (_0x1eeae4.chairsPlayersMap[_0x4c98ae.remoteId] ? _0x192671.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388) : _0x192671.api.displayHelpStringTrans('displayHelpString.toEnterCabin', false, true, 0x1388)), _0x4cf55a ? _0x1eeae4.canceledSit = false : _0x1eeae4.canceledSit || _0x4cf55a || (_0x1eeae4.canceledSit = true, _0x11f06e.events.callRemote('3961893041', _0x1eeae4.rotation)), !_0x4c98ae.ferrisWheelSitActive && _0x1eeae4.chairsPlayersMap[_0x4c98ae.remoteId] && _0x192671.api.displayHelpStringTrans('displayHelpString.waitingCabinStop', false, false, -0x1);

          const _0x4b2943 = _0x4c98ae.isPlayingAnim('anim@mp_ferris_wheel', 'idle_a_player_one', 0x3);

          if (_0x4c98ae.ferrisWheelSitActive && 0x0 === _0x1eeae4.state && _0x1eeae4.chairsPlayersMap[_0x4c98ae.remoteId] && (_0x1eeae4.stopQueue.includes(_0x1eeae4.chairsPlayersMap[_0x4c98ae.remoteId]) || _0x4b2943) && _0x192671.api.displayHelpStringTrans('displayHelpString.toChangeCamMode', false, true, 0x1388), _0x4c98ae.ferrisWheelSitActive && _0x4b2943 && 0x1 === _0x1eeae4.cameraMode && 'number' == typeof _0x1eeae4.cameraCart) {
            const _0x37d83e = _0x1eeae4.carts[_0x1eeae4.cameraCart];
            if (!_0x37d83e) return;

            const _0x5f34d7 = _0x11f06e.game.controls.getDisabledControlNormal(0x0, 0x1),
                  _0x2a3a5e = _0x11f06e.game.controls.getDisabledControlNormal(0x0, 0x2);

            _0x1eeae4.polarAngleDeg = _0x1eeae4.polarAngleDeg + 0xa * _0x5f34d7, _0x1eeae4.polarAngleDeg >= 0x168 && (_0x1eeae4.polarAngleDeg = 0x0), _0x1eeae4.polarAngleDeg < 0x0 && (_0x1eeae4.polarAngleDeg = 0x168), _0x1eeae4.azimuthAngleDeg = (_0x7992a8 = _0x1eeae4.azimuthAngleDeg - 0xa * _0x2a3a5e, _0x279f1c = -0x41, _0x1d04d6 = 0x41, Math.min(Math.max(_0x7992a8, _0x279f1c), _0x1d04d6));

            const _0x163e0d = _0x1eeae4.polarAngleDeg * Math.PI / 0xb4,
                  _0x17a2d6 = _0x37d83e.getCoords(true);

            _0x17a2d6.z -= 1.3;

            const _0x6fad7d = new _0x11f06e.Vector3(_0x17a2d6.x + _0x15b8d8 * Math.cos(_0x163e0d) * 0x1, _0x17a2d6.y - _0x15b8d8 * Math.sin(_0x163e0d) * 0x1, _0x17a2d6.z - 0x1 * _0x470b18);

            _0x2ba033.setRot(_0x1eeae4.azimuthAngleDeg, 0x0, -_0x1eeae4.polarAngleDeg - 0x5a, 0x2), _0x2ba033.setCoord(_0x6fad7d.x, _0x6fad7d.y, _0x6fad7d.z);
          }

          var _0x7992a8, _0x279f1c, _0x1d04d6;
        });

        let _0x29eada = false;

        _0x11f06e.events.add('time.everySec', () => {
          if (!_0x192671.api.isAuthed()) return;

          const _0x46da5c = _0x192671.api.vdist2(_0x11f06e.players.local.position, new _0x11f06e.Vector3(-1663.969970703125, -1126.6999999999998, 30.7));

          _0x29eada && _0x46da5c > 0x12c ? (_0x11f06e.game.streaming.isIplActive(_0x568869) || _0x11f06e.game.streaming.requestIpl(_0x568869), _0x11f06e.game.audio.releaseNamedScriptAudioBank('SCRIPT\\FERRIS_WHALE_01'), _0x11f06e.game.audio.releaseNamedScriptAudioBank('SCRIPT\\FERRIS_WHALE_02'), _0x11f06e.game.audio.releaseNamedScriptAudioBank('THE_FERRIS_WHALE_SOUNDSET'), _0x11f06e.game.audio.isAudioSceneActive('FAIRGROUND_RIDES_FERRIS_WHALE') && _0x11f06e.game.audio.stopAudioScene('FAIRGROUND_RIDES_FERRIS_WHALE'), _0x29eada = false) : !_0x29eada && _0x46da5c <= 0x12c && (_0x11f06e.game.streaming.isIplActive(_0x568869) && _0x11f06e.game.streaming.removeIpl(_0x568869), _0x11f06e.game.audio.requestScriptAudioBank('SCRIPT\\FERRIS_WHALE_01', false), _0x11f06e.game.audio.requestScriptAudioBank('SCRIPT\\FERRIS_WHALE_02', false), _0x11f06e.game.audio.requestScriptAudioBank('THE_FERRIS_WHALE_SOUNDSET', false), _0x11f06e.game.audio.isAudioSceneActive('FAIRGROUND_RIDES_FERRIS_WHALE') || _0x11f06e.game.audio.startAudioScene('FAIRGROUND_RIDES_FERRIS_WHALE'), _0x29eada = true);
        });

        for (let _0x3fa134 = 0x0; _0x3fa134 < 0x10; _0x3fa134++) {
          const _0x1d364f = _0x11f06e.objects.new(_0x11f06e.game.joaat('prop_ferris_car_01'), new _0x11f06e.Vector3(-0x67f, -0x466, 30.7), {
            'dimension': -0x1,
            'rotation': new _0x11f06e.Vector3(0x0, 0x0, 0xb4)
          });

          _0x1d364f.disableLodDist = true, _0x1d364f.ferrisCartId = _0x3fa134, _0x1d364f.handle && (_0x1d364f.setInvincible(true), _0x1d364f.freezePosition(true), _0x1d364f.setNoCollision(_0xe06cba.handle, true));

          const _0x1b4105 = _0x532e77 * _0x3fa134;

          _0x1d364f.angle = _0x1b4105;

          const _0x6a9c = _0x1b4105 + _0x40feb3;

          _0x1d364f.angleWithoutHalf = _0x1b4105 - _0x40feb3;

          const _0x28e684 = 0.0174532925 * _0x6a9c;

          _0x1d364f.offset = new _0x11f06e.Vector3(0x0, 15.3 * Math.sin(_0x28e684), -15.3 * Math.cos(_0x28e684)), _0x1eeae4.carts.push(_0x1d364f);
        }

        _0x11f06e.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x11f06e.objects.exists(_0xe06cba) && _0xe06cba.setLodDist(0x12c), _0x14673c();
        });
      },
      0x4f25: (_0x433db7, _0x4128ce, _0x40567d) => {
        'use strict';

        const a0_0x1c09a3 = {
          _0x26dd8a: 0x11dd,
          _0x24fb7e: 0x17c4
        },
              a0_0x282698 = {
          _0x45894c: 0x5ce
        },
              a0_0x3f423c = {
          _0x59bd4e: 0x11fb
        },
              a0_0x3934d7 = {
          _0x2c0afd: 0x2a2,
          _0x14543c: 0x1da5,
          _0x248481: 0x1d66,
          _0x99f1d3: 0xadf,
          _0xe6ff56: 0x1d66
        },
              a0_0x10b461 = {
          _0x272780: 0x2a2,
          _0x7beddf: 0x1f89,
          _0x226461: 0x2606,
          _0x44a33d: 0x2535,
          _0x5b325d: 0x15e1,
          _0x166056: 0x244f,
          _0x68b0cd: 0x940,
          _0xe32072: 0x33e,
          _0x38e032: 0x535,
          _0x17b903: 0x1a50,
          _0x11ba2f: 0x24ee,
          _0x5c792d: 0x1c55,
          _0x1ee98c: 0x1e2e,
          _0x160554: 0x1d66,
          _0x80e36e: 0x1c55,
          _0x526a72: 0x14d2,
          _0x3d8496: 0xdf4,
          _0x3f2f06: 0x127e,
          _0x385a44: 0x76c,
          _0x449fb1: 0x76c,
          _0x1ad988: 0x1992,
          _0x56db14: 0x14d2,
          _0x18e4eb: 0x1948,
          _0x273d01: 0x1f30,
          _0x4f2013: 0x1d20,
          _0x505554: 0x1992,
          _0x75e6d0: 0x17f,
          _0x173936: 0x1a5,
          _0x41de67: 0x7bb,
          _0xf0417c: 0x1401,
          _0x2ed0f7: 0x1d66,
          _0x4b83d5: 0x1870,
          _0x15926f: 0x171e,
          _0x541382: 0x10a4,
          _0x46a22b: 0x535,
          _0x38bd03: 0x17a7,
          _0x4437c7: 0x2054,
          _0x571328: 0x862,
          _0x37267a: 0x1d66,
          _0x3bcfcc: 0x1157,
          _0x48d529: 0x1e35,
          _0x4840f4: 0x1d1d,
          _0x32e8ac: 0x1e35,
          _0x3bc75e: 0x89f,
          _0x56ce9c: 0xa9d,
          _0x3dfbb3: 0x22e6,
          _0x50967e: 0x2521,
          _0x4e07f7: 0x1e65,
          _0x400bc0: 0xc38,
          _0x1dd09b: 0x10ad,
          _0x3976af: 0x1dee,
          _0x13ef36: 0x12d8,
          _0x43b5f7: 0x1160,
          _0x5f27ee: 0x4b2,
          _0x1acdb0: 0x24bc,
          _0x2275e6: 0x1f41,
          _0x491fa7: 0x10f6,
          _0x4553c3: 0x24bc,
          _0x1c8bfc: 0x137a,
          _0x59c27f: 0x1f41,
          _0x5e7d3c: 0x10f6,
          _0x41c939: 0x16c5,
          _0x2eb17a: 0x2072,
          _0x32d903: 0xd79,
          _0x3481d1: 0x1199,
          _0x2fb1af: 0x235b,
          _0x3d3105: 0x185e,
          _0x22c545: 0x235b,
          _0x1c09a4: 0x1870,
          _0x1b9884: 0x1e37,
          _0x3eeedc: 0x1b26,
          _0x268f8d: 0x208e,
          _0x201dcb: 0x1d66,
          _0x5ad4dd: 0x91b,
          _0x1baf54: 0x1199,
          _0x2aaaec: 0x535,
          _0xd40c73: 0x133f,
          _0x13645d: 0x1d66,
          _0x126020: 0x1e35,
          _0xd809e6: 0x89f,
          _0x3c4c76: 0x1d66,
          _0x33f81c: 0x1992,
          _0x33e4e0: 0x16c5,
          _0x3c8ba2: 0xa9d,
          _0x39cfa6: 0x235b
        },
              a0_0x573d6f = {
          _0x17d2c1: 0x208e
        },
              a0_0x5b9ab4 = {
          _0x2eef0c: 0x16d2
        },
              a0_0x1e0166 = {
          _0xe51551: 0x1856,
          _0x3fd6e0: 0x1f30
        },
              a0_0x104e7f = {
          _0xa46533: 0x1e3d,
          _0x3cba94: 0x1e3d,
          _0x138290: 0x1707,
          _0x2d3be0: 0x2085
        },
              a0_0x17c1a6 = {
          _0x5a8fa7: 0x2a2,
          _0x16369e: 0x2546,
          _0x180ee5: 0x1359,
          _0x1fbf09: 0x1f05,
          _0x147a15: 0x1f89,
          _0x3527f8: 0x1f89,
          _0x32899b: 0x1f89,
          _0x3b8301: 0x17a7,
          _0x46dbd5: 0x14d2
        },
              a0_0x58fafd = {
          _0x51db5b: 0x22f9,
          _0x1ce479: 0x2624,
          _0x48edee: 0x1214,
          _0x5a88b4: 0x1da5,
          _0x553c5e: 0x17a7
        },
              a0_0x165631 = {
          _0x3eb7ae: 0x2535,
          _0x55ba0a: 0x22f9,
          _0x5d60ac: 0x12d8,
          _0x235dae: 0x1f2e,
          _0x69fd89: 0x185e,
          _0x3621ca: 0x24d
        },
              a0_0x145904 = {
          _0x34b476: 0x15e1,
          _0x280c58: 0x185e,
          _0x3d847e: 0x186b,
          _0x20a291: 0xa2b,
          _0x333fc5: 0x535,
          _0x15f367: 0x1985,
          _0x115af9: 0x1e65,
          _0x59b42d: 0x447,
          _0xc399e1: 0x1e37,
          _0x5aeec9: 0x235b,
          _0x1de304: 0x2180,
          _0x4194d5: 0x235b,
          _0x461322: 0x11c9,
          _0x4d3d36: 0x12d8,
          _0x159dab: 0x16cf,
          _0x108369: 0x4b2,
          _0x5874bc: 0x10ad,
          _0x3711c8: 0x1dee,
          _0x4e171b: 0x191a
        },
              a0_0x17cdf4 = {
          _0x3ffb7b: 0x2606,
          _0x2d1142: 0x1291,
          _0x5dc8aa: 0x16c5
        },
              a0_0x54b260 = {
          _0x4c633e: 0xb9e
        },
              a0_0x2eca00 = {
          _0x18e87c: 0x1d66,
          _0x1dfa9a: 0xf2f,
          _0x377ec2: 0x18c8,
          _0x208026: 0x1d66,
          _0xb91262: 0xf2f
        },
              a0_0x4cb29e = {
          _0x1709eb: 0x235b,
          _0x18a72a: 0x185e,
          _0x82ce68: 0xbc8,
          _0x36fbaa: 0x535,
          _0x367c21: 0x1b65
        },
              a0_0x5a08aa = {
          _0x3f697a: 0x12da,
          _0x271a9a: 0x235b,
          _0x59888c: 0x185e,
          _0x4633fa: 0x535
        },
              a0_0x4e8e9a = {
          _0x31b3e6: 0x2488,
          _0x17a7ce: 0xbc1
        },
              a0_0x309268 = {
          _0x1ff974: 0x74c,
          _0x221f7f: 0x535,
          _0x832f89: 0x12a3,
          _0x1dba8d: 0x14d2,
          _0x4ad0d8: 0x1da5
        },
              a0_0x1a22a8 = {
          _0x33c905: 0xa92,
          _0x1f98d4: 0x1a3,
          _0x11cd5e: 0x112d,
          _0x5ae5cc: 0x2488,
          _0xc1f02a: 0x4a3,
          _0x4e6022: 0x197b
        },
              a0_0x8bc1fd = {
          _0x592bfa: 0x14d2,
          _0x44ce67: 0x1da5,
          _0x2bb70d: 0x14dc
        },
              a0_0x467e73 = {
          _0xb9ca3c: 0x535,
          _0x555060: 0x1d66,
          _0x1f3c43: 0x14d2,
          _0x2e801c: 0x1dba,
          _0x290296: 0x1da5,
          _0x23c6ad: 0x5ef
        };

        _0x40567d.r(_0x4128ce);

        var _0x2f3c7b = _0x40567d(0x16a21),
            _0x40a00a = _0x40567d(0x12a76),
            _0x1efaa4 = _0x40567d(0x161cd);

        const _0x2c2095 = _0x1efaa4.players.local;
        let _0x441096 = true,
            _0x5b3d4c = 0x0;

        const _0x70480d = new _0x1efaa4.Vector3(-1366.41, 56.68, 54.09);

        let _0x2f867f,
            _0x4161ec = _0x1efaa4.colshapes.newSphere(_0x70480d.x, _0x70480d.y, 0x14, 0x14),
            _0x232888 = _0x1efaa4.colshapes.newSphere(_0x70480d.x, _0x70480d.y, _0x70480d.z, 0x2, 0x0);

        _0x232888.marker = _0x1efaa4.markers.new(0x1, new _0x1efaa4.Vector3(_0x70480d.x, _0x70480d.y, _0x70480d.z - 0x1), 0x1, {
          'direction': _0x70480d,
          'rotation': new _0x1efaa4.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        }), _0x1efaa4.events.add('playerEnterColshape', _0x3eb087 => {
          if (_0x2f3c7b.api.isAuthed() && !_0x2c2095.isInAnyVehicle(true)) return _0x3eb087 == _0x232888 ? (_0x2f867f = _0x3eb087, _0x2f3c7b.api.displayHelpStringTrans('displayHelpString.toOpenMenu', false, true, 0x1388)) : undefined;
        }), _0x1efaa4.events.add('playerExitColshape', _0x2a57d3 => {
          _0x2f3c7b.api.isAuthed() && (_0x2a57d3 == _0x232888 && (_0x2f867f = null, _0x1efaa4.game.ui.clearHelp(true), _0x1efaa4.events.call('fun.golf.close')), _0x2a57d3 == _0x4161ec && _0x1efaa4.events.callRemote('2043816104'));
        }), _0x1efaa4.events.add('keys.e', () => {
          if (_0x2f867f && _0x2f867f == _0x232888) {
            if (_0x2f867f = null, !_0x441096) return _0x2f3c7b.api.longNotifyTrans('fun.golf.onRepair', 'warn');

            _0x1efaa4.events.callRemote('2575154190');
          }
        }), _0x1efaa4.events.add('fun.golf.init', _0x4e5925 => {
          let _0xd57850 = {
            'type': 'shooterGames',
            'games': _0x4e5925
          };
          _0x40a00a.globalBrowser.emit('golf_changeGames', JSON.stringify(_0xd57850)), _0x40a00a.globalBrowser.toggle('golf', {
            'value': true
          });
        }), _0x1efaa4.events.add('fun.golf.updateData', _0x127a7a => {
          if (!_0x40567d.g.interfaces.golf) return;
          if (!_0x127a7a) return;
          let _0x58278a = {
            'type': 'shooterGames',
            'games': _0x127a7a
          };

          _0x40a00a.globalBrowser.emit('golf_changeGamesData', JSON.stringify(_0x58278a));
        }), _0x1efaa4.events.add('fun.golf.close', () => {
          _0x40a00a.globalBrowser.toggle('golf', {
            'value': false
          });
        }), _0x1efaa4.events.add('fun.golf.register', _0x4597c2 => {
          _0x2f3c7b.api.ePress(_0x5b3d4c) || (_0x5b3d4c = _0x2f3c7b.api.ePressUpdate(0x3e8), _0x1efaa4.events.callRemote('4061484489', _0x4597c2));
        }), _0x1efaa4.events.add('fun.golf.unregister', _0x258514 => {
          _0x2f3c7b.api.ePress(_0x5b3d4c) || (_0x5b3d4c = _0x2f3c7b.api.ePressUpdate(0x3e8), _0x1efaa4.events.callRemote('104792059', _0x258514));
        }), _0x1efaa4.events.add('fun.golf.resetData', () => {
          _0x40a00a.globalBrowser.emit('golf_unRegisterAll');
        }), _0x1efaa4.events.add('fun.golf.togglegolf', _0x1d6969 => {
          _0x441096 = !!_0x1d6969;
        }), _0x1efaa4.events.add('fun.golf.setRegistered', (_0x3aed84, _0x26d85d) => {
          _0x40a00a.globalBrowser.emit('golf_setRegistered', {
            'id': _0x3aed84,
            'registered': _0x26d85d
          });
        });

        var _0x2ddbed = _0x40567d(0xee76),
            _0x28682c = _0x40567d(0x161cd);

        const _0x4e42e4 = async (_0x13c7fe, _0x4bb725, _0x38b1ea = -0x1) => {
          _0x28682c.players.local.clearTasks(), _0x28682c.players.local.clearTasksImmediately(), await _0x2f3c7b.api.taskPlayAnim(_0x13c7fe, _0x4bb725, 0x1, true), _0x38b1ea > 0x0 && _0x28682c.game.sleep(_0x38b1ea).then(() => _0x3a7b78());
        },
              _0x3a7b78 = () => {
          _0x28682c.players.local.clearTasks(), _0x28682c.players.local.clearTasksImmediately(), _0x2f3c7b.api.stopAnim();
        };

        var _0x33f864 = _0x40567d(0x5269),
            _0x330692 = _0x40567d(0x13afd),
            _0x48efe2 = _0x40567d(0x161cd);

        let _0x10b139;

        const _0x504e88 = () => {
          _0x48efe2.game.audio.requestScriptAudioBank('GOLF_I', false), _0x48efe2.game.audio.requestScriptAudioBank('GOLF_2', false), _0x48efe2.game.audio.requestScriptAudioBank('GOLF_3', false);
        };

        var _0x536060 = _0x40567d(0x161cd);

        _0x536060.events.add('client.golf.game.init', (_0x2ae132, _0x30f144, _0x2f5faa) => ((_0x472e6a, _0x488bdf, _0x28b8d5) => {
          (0x0, _0x2ddbed.setupGolfScaleform)(), (0x0, _0x2ddbed.setupGolfInstructionalButtons)(), (0x0, _0x2ddbed.setColorId)(_0x488bdf), (0x0, _0x2ddbed.setHoleId)(_0x472e6a), (0x0, _0x2ddbed.setupGolfRadar)(_0x472e6a), (0x0, _0x2ddbed.createGolfFlag)(_0x472e6a), (0x0, _0x2ddbed.setupStartPoint)(_0x472e6a), _0x504e88(), (0x0, _0x2ddbed.setActive)(true), _0x2f3c7b.api.toggleHud(false), _0x2f3c7b.api.requestAnimDict('mini@golf'), _0x2f3c7b.api.requestStreamedTextureDict('GolfPutting'), _0x2f3c7b.api.usingSystemAnim(true), _0x2f3c7b.api.setDiscordStatus('golf'), _0x48efe2.players.local.setProofs(true, true, true, true, true, true, true, true);
        })(_0x2ae132, _0x30f144)), _0x536060.events.add('client.golf.game.deinit', () => ((0x0, _0x2ddbed.removeGolfInstructionalButtons)(), (0x0, _0x2ddbed.removeGolfScaleform)(), (0x0, _0x2ddbed.destroyGolfFlag)(), (0x0, _0x2ddbed.removeBallBlip)(), (0x0, _0x2ddbed.destroyStartPoint)(), (0x0, _0x2ddbed.disableGolfRadar)(), (0x0, _0x2ddbed.setActive)(false), _0x2f3c7b.api.toggleHud(true), _0x2f3c7b.api.usingSystemAnim(false), _0x2f3c7b.api.setDiscordStatus(), void _0x48efe2.players.local.setProofs(false, false, false, false, false, false, false, false))), _0x536060.events.add('client.golf.game.update.hole', _0x5e79bb => (_0x31f40c => {
          (0x0, _0x2ddbed.setHoleId)(_0x31f40c), (0x0, _0x2ddbed.setupGolfRadar)(_0x31f40c), (0x0, _0x2ddbed.destroyGolfFlag)(), (0x0, _0x2ddbed.createGolfFlag)(_0x31f40c), (0x0, _0x2ddbed.setupStartPoint)(_0x31f40c), (0x0, _0x2ddbed.removeBallBlip)();
        })(_0x5e79bb)), _0x536060.events.add('client.golf.game.create.ball.at', _0x3e9bec => (_0x5a104e => {
          const _0x5f5a0f = (0x0, _0x2ddbed.getBall)();

          _0x5f5a0f && (_0x5f5a0f.freezePosition(true), (0x0, _0x2ddbed.setupBallWithTee)(_0x5a104e));
        })(JSON.parse(_0x3e9bec))), _0x536060.events.add('client.golf.game.create.first.ball', _0x8ef83e => (_0x3929f7 => {
          const _0x41a0ee = _0x33f864.Z[_0x3929f7 - 0x1];
          undefined !== _0x41a0ee && (0x0, _0x2ddbed.setupBallWithTee)(_0x41a0ee);
        })(_0x8ef83e)), _0x536060.events.add('client.golf.game.set.main.ball', _0x27fd63 => (_0x147641 => {
          const _0x4045ea = _0x48efe2.objects.atRemoteId(_0x147641);

          _0x4045ea && _0x48efe2.objects.exists(_0x4045ea) && (0x0, _0x2ddbed.setMainBall)(_0x4045ea);
        })(_0x27fd63)), _0x536060.events.add('client.golf.game.set.can.hit.ball', _0x3ad15b => (_0x61134e => {
          (0x0, _0x2ddbed.setAvailableHitBall)(_0x61134e);
        })(_0x3ad15b)), _0x536060.events.add('client.on.game.golf.simple.sync.hit.ball', (_0x70c26e, _0x2e80df) => ((_0x2407e5, _0x74d1f3) => {
          const _0x39cef2 = _0x48efe2.objects.atRemoteId(_0x2407e5);

          _0x39cef2 && _0x48efe2.objects.exists(_0x39cef2) && ((0x0, _0x2ddbed.disableBallCollision)(_0x39cef2), _0x39cef2.setRecordsCollisions(true), _0x39cef2.setCollision(true, true), _0x39cef2.setHasGravity(true), _0x39cef2.freezePosition(false), _0x39cef2.setVelocity(_0x74d1f3.x, _0x74d1f3.y, _0x74d1f3.z), (0x0, _0x2ddbed.disableBallCollision)(_0x39cef2));
        })(_0x70c26e, JSON.parse(_0x2e80df))), _0x536060.events.add('client.on.game.golf.simple.sync.freeze.ball', (_0x420bdb, _0x3b0096) => ((_0x25e742, _0x21ed04) => {
          const _0x147243 = _0x48efe2.objects.atRemoteId(_0x25e742);

          _0x147243 && _0x48efe2.objects.exists(_0x147243) && (_0x147243.freezePosition(_0x21ed04), (0x0, _0x2ddbed.disableBallCollision)(_0x147243));
        })(_0x420bdb, _0x3b0096)), _0x536060.events.add('onGolfStartAiming', () => (() => {
          const _0x1dfc8f = (0x0, _0x2ddbed.getBall)(),
                _0x3229c4 = (0x0, _0x2ddbed.getGolfScaleForm)(),
                _0x403295 = (0x0, _0x2ddbed.getGolfInstructionalButtons)(),
                _0x509f45 = _0x330692.Z[(0x0, _0x2ddbed.getHoleId)() - 0x1],
                _0x406dc3 = _0x48efe2.players.local.position,
                _0x34d908 = _0x48efe2.game.gameplay.getHeadingFromVector2d(_0x509f45.x - _0x406dc3.x, _0x509f45.y - _0x406dc3.y);

          switch (_0x2f3c7b.api.invokeNative('SET_FOLLOW_PED_CAM_VIEW_MODE', 0x2), (0x0, _0x2ddbed.setAimingState)(true), _0x1dfc8f.freezePosition(true), _0x1dfc8f.setHeading(_0x34d908 - 0x5a), (0x0, _0x2ddbed.getGolfClubId)()) {
            case 0x0:
            case 0x1:
            case 0x2:
              _0x4e42e4('mini@golf', 'iron_shuffle_low');

              break;

            case 0x3:
              _0x4e42e4('mini@golf', 'iron_idle_low_c');

          }

          _0x48efe2.players.local.attachTo(_0x1dfc8f.handle, _0x48efe2.players.local.getBoneIndex(0x6f06), 0x0, -1.12, 0.93, 0.99, 0.99, 0x0, false, false, false, false, 0x2, true), _0x3229c4.callFunction('SWING_METER_TRANSITION_IN'), _0x3229c4.callFunction('SWING_METER_POSITION', 0.632, 0.55), _0x3229c4.callFunction('SWING_METER_SET_MARKER', true, (0x0, _0x2ddbed.getPower)(), false, 0x0), _0x3229c4.callFunction('SWING_METER_SET_TARGET', (0x0, _0x2ddbed.getPower)(), (0x0, _0x2ddbed.getMaxPower)()), _0x3229c4.callFunction('SWING_METER_SET_TARGET_COLOR', 0xeb, 0x40, 0x34, 0xc8), _0x3229c4.callFunction('SWING_METER_SET_FILL', 0.1, 0x1, true), _0x403295.addButton('ibuttons.viewHit', 0x16);
        })()), _0x536060.events.add('onGolfStopAiming', () => (() => {
          const _0x43a16c = (0x0, _0x2ddbed.getGolfScaleForm)(),
                _0x137eaf = (0x0, _0x2ddbed.getGolfInstructionalButtons)();

          _0x3a7b78(), (0x0, _0x2ddbed.setAimingState)(false), _0x137eaf.removeButton(0x16), _0x43a16c.callFunction('SWING_METER_TRANSITION_OUT', 0x3e8), _0x48efe2.players.local.detach(true, false);
        })()), _0x536060.events.add('onGolfBallShot', (_0x118ea1, _0x5d9a7c) => ((_0x43a036, _0x142061) => {
          (0x0, _0x2ddbed.getGolfInstructionalButtons)().removeButton(0x16), _0x43a036 >= 0.5 && ((0x0, _0x2ddbed.startCameraFollowBall)(), (0x0, _0x2ddbed.setupGolfFloatingScaleform)(_0x43a036)), (0x0, _0x2ddbed.enableRenderBallCheck)(), (0x0, _0x2ddbed.startParticleBallTrail)(), (0x0, _0x2ddbed.shotBall)(_0x142061.x, _0x142061.y, _0x142061.z), _0x48efe2.events.callRemote('791486753', JSON.stringify((0x0, _0x2ddbed.getBall)().getCoords(true)), JSON.stringify(_0x142061));
        })(_0x118ea1, _0x5d9a7c)), _0x536060.events.add('onGolfBallHitGround', () => (_0x10b139 && (_0x10b139.cancel(), _0x10b139 = undefined), void (_0x10b139 = _0x48efe2.game.sleep(0xfa0).then(() => {
          (0x0, _0x2ddbed.isActive)() && ((0x0, _0x2ddbed.disableRenderBallCheck)(), (0x0, _0x2ddbed.stopCameraFollowBall)(), (0x0, _0x2ddbed.removeGolfFloatingScaleform)(), (0x0, _0x2ddbed.stopParticleBallTrail)(), _0x48efe2.objects.exists((0x0, _0x2ddbed.getBall)()) && !(0x0, _0x2ddbed.isBallInsideTargetHole)() && ((0x0, _0x2ddbed.disableBallCollision)((0x0, _0x2ddbed.getBall)()), (0x0, _0x2ddbed.getBall)().freezePosition(true), (0x0, _0x2ddbed.setupBallWithTee)((0x0, _0x2ddbed.getBall)().getCoords(true)), _0x48efe2.events.callRemote('3955195800', JSON.stringify((0x0, _0x2ddbed.getBall)().getCoords(true)))));
        })))), _0x536060.events.add('onGolfBallFellIntoHole', () => (_0x48efe2.events.callRemote('3465376723'), void _0x48efe2.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true))), _0x536060.events.add('onGolfBallHitWater', () => ((0x0, _0x2ddbed.disableRenderBallCheck)(), (0x0, _0x2ddbed.stopCameraFollowBall)(), (0x0, _0x2ddbed.removeGolfFloatingScaleform)(), (0x0, _0x2ddbed.stopParticleBallTrail)(), _0x48efe2.events.callRemote('4153808023'), void ((0x0, _0x2ddbed.getBall)() && _0x48efe2.game.audio.playSoundFromEntity(-0x1, 'GOLF_BALL_IN_WATER_MASTER', (0x0, _0x2ddbed.getBall)().handle, 0x0, false, 0x0)))), _0x536060.events.add('onGolfPlayerChangeGolfClub', _0x409c06 => (_0x564e80 => {
          const _0xd92fb0 = (0x0, _0x2ddbed.getGolfScaleForm)(),
                _0x3b820e = (0x0, _0x2ddbed.getGolfClubId)();

          let _0x987100 = _0x3b820e + (_0x564e80 ? 0x1 : -0x1);

          switch (0x4 == _0x987100 ? _0x987100 = 0x0 : -0x1 == _0x987100 && (_0x987100 = 0x3), (0x0, _0x2ddbed.setGolfClubId)(_0x987100), _0x987100) {
            case 0x0:
              (0x0, _0x2ddbed.setMaxPower)(0.98), (0x0, _0x2ddbed.setMaxZPower)(0x23);
              break;

            case 0x1:
              (0x0, _0x2ddbed.setMaxPower)(0.75), (0x0, _0x2ddbed.setMaxZPower)(0x19);
              break;

            case 0x2:
              (0x0, _0x2ddbed.setMaxPower)(0.45), (0x0, _0x2ddbed.setMaxZPower)(0xa);
              break;

            case 0x3:
              (0x0, _0x2ddbed.setMaxPower)(0.15), (0x0, _0x2ddbed.setMaxZPower)(0x1);
          }

          undefined !== _0xd92fb0 && (_0xd92fb0.callFunction('SWING_METER_SET_TARGET', (0x0, _0x2ddbed.getPower)(), (0x0, _0x2ddbed.getMaxPower)()), (0x0, _0x2ddbed.updateGolfScaleformSwing)()), _0x48efe2.events.callRemote('2803908885', _0x3b820e, _0x987100);
        })(_0x409c06));

        class _0x3cac3f {
          constructor(_0x3b81e6, _0x3ba359) {
            this.position = _0x3b81e6, this.rotation = _0x3ba359;
          }

          ['degToRad'](_0x4f5590) {
            return _0x4f5590 * Math.PI / 0xb4;
          }

          ['radToDeg'](_0x410c41) {
            return 0xb4 * _0x410c41 / Math.PI;
          }

          ['eulerToQuaternion']() {
            let _0x4c1d70 = this.degToRad(this.rotation.x),
                _0x54d4fd = this.degToRad(this.rotation.y),
                _0xd8683 = this.degToRad(this.rotation.z);

            return {
              'x': Math.sin(_0x4c1d70 / 0x2) * Math.cos(_0x54d4fd / 0x2) * Math.cos(_0xd8683 / 0x2) - Math.cos(_0x4c1d70 / 0x2) * Math.sin(_0x54d4fd / 0x2) * Math.sin(_0xd8683 / 0x2),
              'y': Math.cos(_0x4c1d70 / 0x2) * Math.sin(_0x54d4fd / 0x2) * Math.cos(_0xd8683 / 0x2) + Math.sin(_0x4c1d70 / 0x2) * Math.cos(_0x54d4fd / 0x2) * Math.sin(_0xd8683 / 0x2),
              'z': Math.cos(_0x4c1d70 / 0x2) * Math.cos(_0x54d4fd / 0x2) * Math.sin(_0xd8683 / 0x2) - Math.sin(_0x4c1d70 / 0x2) * Math.sin(_0x54d4fd / 0x2) * Math.cos(_0xd8683 / 0x2),
              'w': Math.cos(_0x4c1d70 / 0x2) * Math.cos(_0x54d4fd / 0x2) * Math.cos(_0xd8683 / 0x2) + Math.sin(_0x4c1d70 / 0x2) * Math.sin(_0x54d4fd / 0x2) * Math.sin(_0xd8683 / 0x2)
            };
          }

          ['ForwardVectorFromRotation'](_0x47177b = 0x1) {
            const _0x28be44 = this.degToRad(this.rotation.z),
                  _0x29f632 = this.degToRad(this.rotation.x),
                  _0x1ad22e = Math.abs(Math.cos(_0x29f632));

            return {
              'x': -Math.sin(_0x28be44) * (_0x1ad22e * _0x47177b),
              'y': Math.cos(_0x28be44) * (_0x1ad22e * _0x47177b),
              'z': Math.sin(_0x29f632)
            };
          }

          ['ForwardVector']() {
            const _0x5817c6 = this.eulerToQuaternion();

            return {
              'x': 0x2 * (_0x5817c6.x * _0x5817c6.y - _0x5817c6.w * _0x5817c6.z),
              'y': 0x1 - 0x2 * (_0x5817c6.x * _0x5817c6.x + _0x5817c6.z * _0x5817c6.z),
              'z': 0x2 * (_0x5817c6.y * _0x5817c6.z + _0x5817c6.w * _0x5817c6.x)
            };
          }

          ['Forward'](_0x511f49) {
            const _0x24ddb8 = this.ForwardVector();

            return {
              'x': this.position.x + _0x24ddb8.x * _0x511f49,
              'y': this.position.y + _0x24ddb8.y * _0x511f49,
              'z': this.position.z + _0x24ddb8.z * _0x511f49
            };
          }

          ['RearVector']() {
            const _0x2e617a = this.eulerToQuaternion();

            return {
              'x': 0x2 * (_0x2e617a.x * _0x2e617a.y - _0x2e617a.w * _0x2e617a.z),
              'y': 0x1 - 0x2 * (_0x2e617a.x * _0x2e617a.x + _0x2e617a.z * _0x2e617a.z),
              'z': 0x2 * (_0x2e617a.y * _0x2e617a.z + _0x2e617a.w * _0x2e617a.x)
            };
          }

          ['Rear'](_0x1bc468) {
            const _0x59d7f4 = this.ForwardVector();

            return {
              'x': this.position.x + _0x59d7f4.x * -_0x1bc468,
              'y': this.position.y + _0x59d7f4.y * -_0x1bc468,
              'z': this.position.z + _0x59d7f4.z * -_0x1bc468
            };
          }

          ['RightVector']() {
            const _0x2e3259 = this.eulerToQuaternion();

            return {
              'x': 0x1 - 0x2 * (_0x2e3259.y * _0x2e3259.y + _0x2e3259.z * _0x2e3259.z),
              'y': 0x2 * (_0x2e3259.x * _0x2e3259.y + _0x2e3259.w * _0x2e3259.z),
              'z': 0x2 * (_0x2e3259.x * _0x2e3259.z - _0x2e3259.w * _0x2e3259.y)
            };
          }

          ['Right'](_0xc2898b) {
            const _0x36833c = this.RightVector();

            return {
              'x': this.position.x + _0x36833c.x * _0xc2898b,
              'y': this.position.y + _0x36833c.y * _0xc2898b,
              'z': this.position.z + _0x36833c.z * _0xc2898b
            };
          }

          ['LeftVector'](_0xb99e30 = 0x1) {
            const _0x267615 = this.eulerToQuaternion();

            return {
              'x': (0x1 - 0x2 * (_0x267615.y * _0x267615.y + _0x267615.z * _0x267615.z)) * -_0xb99e30,
              'y': 0x2 * (_0x267615.x * _0x267615.y + _0x267615.w * _0x267615.z) * -_0xb99e30,
              'z': 0x2 * (_0x267615.x * _0x267615.z - _0x267615.w * _0x267615.y) * -_0xb99e30
            };
          }

          ['Left'](_0x488d3b) {
            const _0x465836 = this.LeftVector(_0x488d3b);

            return {
              'x': this.position.x + _0x465836.x,
              'y': this.position.y + _0x465836.y,
              'z': this.position.z + _0x465836.z
            };
          }

          ['UpVector']() {
            const _0x9e2697 = this.eulerToQuaternion();

            return {
              'x': 0x2 * (_0x9e2697.x * _0x9e2697.z + _0x9e2697.w * _0x9e2697.y),
              'y': 0x2 * (_0x9e2697.y * _0x9e2697.z - _0x9e2697.w * _0x9e2697.x),
              'z': 0x1 - 0x2 * (_0x9e2697.x * _0x9e2697.x + _0x9e2697.y * _0x9e2697.y)
            };
          }

          ['Up'](_0x260442) {
            const _0x59f328 = this.UpVector();

            return {
              'x': this.position.x + _0x59f328.x * _0x260442,
              'y': this.position.y + _0x59f328.y * _0x260442,
              'z': this.position.z + _0x59f328.z * _0x260442
            };
          }

        }

        var _0x47cdfc = _0x40567d(0x161cd);

        let _0x485b08,
            _0x2a27fe,
            _0x35e7bc = false,
            _0x490b5c = true,
            _0x32da26 = false;

        _0x47cdfc.events.add('render', async () => {
          const a0_0x348aeb = {
            _0x1382c5: 0x535,
            _0x21d168: 0x9d0,
            _0x177d6a: 0x10ad,
            _0x572710: 0x1a5,
            _0x49ac9a: 0x12eb
          };

          if ((0x0, _0x2ddbed.isActive)()) {
            const _0x22e346 = (0x0, _0x2ddbed.getBall)();

            if (undefined !== _0x22e346 && _0x47cdfc.objects.exists(_0x22e346)) {
              const _0x433289 = _0x22e346.getCoords(true),
                    _0x20be5b = (0x0, _0x2ddbed.getGolfScaleForm)(),
                    _0x333806 = _0x330692.Z[(0x0, _0x2ddbed.getHoleId)() - 0x1];

              if (undefined !== _0x20be5b && _0x20be5b.callFunction('SET_HOLE_DISPLAY', 'Hole ' + (0x0, _0x2ddbed.getHoleId)(), 'Par 5', _0x2f3c7b.api.vdist2(_0x433289, _0x330692.Z[(0x0, _0x2ddbed.getHoleId)() - 0x1]).toFixed(0x1) + 'm'), _0x47cdfc.game.controls.isDisabledControlJustPressed(0x0, 0xf) && _0x47cdfc.events.call('onGolfPlayerChangeGolfClub', false), _0x47cdfc.game.controls.isDisabledControlJustPressed(0x0, 0xe) && _0x47cdfc.events.call('onGolfPlayerChangeGolfClub', true), (0x0, _0x2ddbed.isAvailableHitBall)() && (_0x2f3c7b.api.vdist2(_0x433289, new _0x47cdfc.Vector3(_0x333806.x, _0x333806.y, _0x333806.z)) < 0xa ? (0x0, _0x2ddbed.getGridState)() || ((0x0, _0x2ddbed.setGridState)(true), (0x0, _0x2ddbed.setupGolfGrid)((0x0, _0x2ddbed.getHoleId)())) : (0x0, _0x2ddbed.getGridState)() && (0x0, _0x2ddbed.setGridState)(false), _0x47cdfc.game.controls.isControlJustPressed(0x0, 0x2d) && _0x47cdfc.events.callRemote('2515676939')), (0x0, _0x2ddbed.isAvailableHitBall)() && _0x2f3c7b.api.vdist2(_0x433289, _0x47cdfc.players.local.position) < 3.5 && 0x0 === _0x22e346.getVelocity().x && 0x0 === _0x22e346.getVelocity().y) {
                if (_0x47cdfc.game.controls.isControlJustReleased(0x0, 0x19)) {
                  if ((0x0, _0x2ddbed.getAimingState)()) {
                    for (_0x35e7bc = false, _0x490b5c = true, undefined !== _0x485b08 && (_0x485b08.destroy(), _0x485b08 = undefined), _0x47cdfc.events.call('onGolfStopAiming'); _0x47cdfc.players.local.isAttached();) await _0x47cdfc.game.sleep(0x0);
                  } else {
                    if (_0x32da26) return;
                    _0x35e7bc = false, _0x490b5c = true, (0x0, _0x2ddbed.setPower)(0.1), _0x47cdfc.events.call('onGolfStartAiming');
                  }
                }

                if ((0x0, _0x2ddbed.getAimingState)()) {
                  const _0x44201c = _0x2f3c7b.api.smoothstep(0.01, 0x1, (0x0, _0x2ddbed.getPower)()),
                        _0x5e32a1 = _0x2f3c7b.api.lerp(0x0, 0x96, (0x0, _0x2ddbed.getPower)() * _0x44201c),
                        _0x892da8 = new _0x3cac3f(_0x22e346.getCoords(true), _0x22e346.getRotation(0x2));

                  let _0x49c451 = _0x892da8.Left(_0x5e32a1);

                  const _0x5a4b84 = _0x47cdfc.game.gameplay.getGroundZFor3dCoord(_0x49c451.x, _0x49c451.y, 0x98967f, parseFloat(0x1), true);

                  if (_0x49c451.z = Math.abs(_0x49c451.z - _0x5a4b84.z) > 0x1 ? _0x5a4b84.z : _0x49c451.z, _0x47cdfc.game.graphics.drawMarker(0x3, _0x49c451.x, _0x49c451.y, _0x49c451.z, 0x0, 0x0, 0x0, 0x0, 0x5a, 0x0, 0.25, 0.25, 0.25, 0xff, 0xff, 0xff, 0xff, false, true, 0x2, false, 'GolfPutting', 'PuttingMarker', false), _0x47cdfc.game.graphics.drawMarker(0x1, _0x49c451.x, _0x49c451.y, _0x49c451.z - 0.4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0.5, 0.5, 0.5, 0xeb, 0x4f, 0x34, 0x96, false, false, 0x2, false, '', '', false), _0x2a27fe && _0x47cdfc.cameras.exists(_0x2a27fe)) {
                    const _0x5c02e1 = _0x2a27fe;
                    _0x5c02e1 && (_0x5c02e1.setCoord(_0x49c451.x, _0x49c451.y, _0x49c451.z + 11.5), _0x5c02e1.pointAtCoord(_0x49c451.x, _0x49c451.y, _0x49c451.z));
                  }

                  if (_0x35e7bc && (0x3 === (0x0, _0x2ddbed.getGolfClubId)() ? (0x0, _0x2ddbed.addPower)(_0x490b5c ? 0.0005 : -0.0005) : (0x0, _0x2ddbed.addPower)(_0x490b5c ? 0.001618 : -0.001618), _0x490b5c && (0x0, _0x2ddbed.getPower)() >= (0x0, _0x2ddbed.getMaxPower)() ? _0x490b5c = false : !_0x490b5c && (0x0, _0x2ddbed.getPower)() <= (0x0, _0x2ddbed.getMaxPower)() / 0x2 && (_0x490b5c = true)), undefined !== _0x20be5b && (_0x20be5b.callFunction('SWING_METER_SET_FILL', (0x0, _0x2ddbed.getPower)(), 0x1, true), _0x20be5b.callFunction('SWING_METER_SET_MARKER', true, (0x0, _0x2ddbed.getPower)(), false, 0x0)), _0x47cdfc.keys.isDown(0x41) ? _0x22e346.setHeading(_0x22e346.getHeading() - 0.5) : _0x47cdfc.keys.isDown(0x44) && _0x22e346.setHeading(_0x22e346.getHeading() + 0.5), _0x47cdfc.game.controls.isControlJustReleased(0x0, 0x18)) {
                    if (_0x35e7bc) {
                      for (_0x2a27fe && _0x47cdfc.cameras.exists(_0x2a27fe) && (_0x47cdfc.game.cam.renderScriptCams(false, false, 0x0, false, false, 0x0), _0x2a27fe.setActive(false), _0x2a27fe.destroy(), _0x2a27fe = undefined), _0x35e7bc = false, (0x0, _0x2ddbed.setAimingState)(false), _0x47cdfc.players.local.detach(true, false), _0x32da26 = true; _0x47cdfc.players.local.isAttached();) await _0x47cdfc.game.sleep(0x0);

                      switch ((0x0, _0x2ddbed.getGolfClubId)()) {
                        case 0x0:
                        case 0x1:
                        case 0x2:
                          _0x4e42e4('mini@golf', 'iron_swing_action_low', 0x1f4);

                          break;

                        case 0x3:
                          _0x4e42e4('mini@golf', 'putt_intro_low', 0x1f4);

                      }

                      undefined !== _0x20be5b && _0x20be5b.callFunction('SWING_METER_TRANSITION_OUT', 0x3e8);

                      let _0x335e92 = _0x892da8.LeftVector(_0x5e32a1);

                      _0x47cdfc.game.sleep(0x12c).then(() => {
                        _0x32da26 = false;

                        const _0x4d36a3 = _0x2f3c7b.api.lerp(0x0, 0x32, (0x0, _0x2ddbed.getPower)());

                        _0x335e92.z = (0x0, _0x2ddbed.getPower)() <= 0.25 ? 0x0 : _0x4d36a3 * _0x2f3c7b.api.smoothstep(0x0, 0x32, _0x4d36a3), _0x47cdfc.events.call('onGolfBallShot', (0x0, _0x2ddbed.getPower)(), _0x335e92);
                      });
                    } else switch (_0x2a27fe && _0x47cdfc.cameras.exists(_0x2a27fe) && (_0x47cdfc.game.cam.renderScriptCams(false, false, 0x0, false, false, 0x0), _0x2a27fe.setActive(false), _0x2a27fe.destroy(), _0x2a27fe = undefined), _0x35e7bc = true, (0x0, _0x2ddbed.getGolfClubId)()) {
                      case 0x0:
                      case 0x1:
                      case 0x2:
                        _0x4e42e4('mini@golf', 'iron_swing_idle');

                        break;

                      case 0x3:
                        _0x4e42e4('mini@golf', 'putt_idle_low_c');

                    }
                  }

                  if (undefined === _0x485b08) _0x485b08 = _0x47cdfc.blips.new(0x186, _0x49c451, {
                    'name': 'Golf - Target',
                    'scale': 0.9,
                    'color': 0x18,
                    'alpha': 0xff,
                    'shortRange': false,
                    'dimension': _0x47cdfc.players.local.dimension
                  });else {
                    const _0xe823ef = _0x2f3c7b.api.vdist2(_0x433289, _0x49c451);

                    if (_0xe823ef > 4.5) {
                      const _0x42cf3c = _0xe823ef / 0x4;

                      (0x0, _0x2ddbed.setupGolfTrail)(_0x433289, _0x49c451, _0x42cf3c);
                    } else _0x47cdfc.game.graphics.drawMarker(0x3, _0x49c451.x, _0x49c451.y, _0x49c451.z, 0x0, 0x0, 0x0, 0x0, 0x5a, 0x0, 0.25, 0.25, 0.25, 0xff, 0xff, 0xff, 0xff, false, true, 0x2, false, 'GolfPutting', 'PuttingMarker', false);

                    _0x485b08.setCoords(_0x49c451);
                  }
                  _0x47cdfc.game.controls.isControlJustPressed(0x0, 0x16) && (_0x2a27fe && _0x47cdfc.cameras.exists(_0x2a27fe) ? (_0x47cdfc.game.cam.renderScriptCams(false, false, 0x0, false, false, 0x0), _0x2a27fe.setActive(false), _0x2a27fe.destroy(), _0x2a27fe = undefined) : (_0x2a27fe = _0x47cdfc.cameras.new('golf.aim.target', _0x47cdfc.players.local.position, new _0x47cdfc.Vector3(-0x5a, 0x0, 0x0), 0x5a), _0x2a27fe.setActive(true), _0x47cdfc.game.cam.renderScriptCams(true, false, 0x1f4, false, false, 0x0)));
                }
              }
            }
          }
        });

        var _0x4ea245 = _0x40567d(0x16a7d),
            _0x2a1e7c = _0x40567d(0x161cd);

        let _0x34ef35 = false;
        _0x2a1e7c.keys.bind(_0x4ea245.t.TAB, true, () => {
          (0x0, _0x2ddbed.isActive)() && (_0x34ef35 = !_0x34ef35, _0x34ef35 ? ((0x0, _0x2ddbed.setGolfScaleformDisplayState)(0x58), _0x2a1e7c.events.callRemote('3422471834'), _0x2a1e7c.game.ui.displayRadar(false)) : ((0x0, _0x2ddbed.setGolfScaleformDisplayState)(0x63), _0x2a1e7c.game.ui.displayRadar(true)));
        }), _0x2a1e7c.events.add('client.golf.game.scoreboard.update.data', _0x12ab1b => {
          (0x0, _0x2ddbed.setupGolfScoreboard)(JSON.parse(_0x12ab1b));
        }), _0x2a1e7c.events.addDataHandler('state', (_0x5ee663, _0x3b806f, _0x5404ca) => {
          (0x0, _0x2ddbed.setGolfScaleformDisplayState)(parseInt(_0x3b806f));
        });

        var _0x3d730f = _0x40567d(0x290e),
            _0x78c719 = _0x40567d(0x161cd);

        _0x78c719.events.add('client.golf.game.init', () => {
          const _0x5b3fa3 = _0x3d730f.Z.map(_0x993fb9 => ({
            'x': _0x993fb9.x,
            'y': _0x993fb9.y,
            'z': _0x993fb9.z - 0.98
          }));

          _0x78c719.zones.registerZone(_0x5b3fa3, 0xf, 'golf.zone');
        }), _0x78c719.events.add('client.golf.game.deinit', () => {
          _0x78c719.zones.unRegisterZone('golf.zone');
        }), _0x2f3c7b.api.invokeNative('SET_MINIMAP_GOLF_COURSE_OFF'), _0x2f3c7b.api.invokeNative('UNLOCK_MINIMAP_ANGLE'), _0x2f3c7b.api.invokeNative('UNLOCK_MINIMAP_POSITION'), _0x2f3c7b.api.invokeNative('TOGGLE_STEALTH_RADAR', true);
      },
      0xee76: (_0x23ef83, _0x3522ba, _0x593025) => {
        'use strict';

        const a0_0x45643c = {
          _0x3516ea: 0x535,
          _0x5d869d: 0x36d,
          _0x2bb428: 0x1985,
          _0x519802: 0x1093,
          _0x4af667: 0x19bb,
          _0x925651: 0x535
        },
              a0_0x29554d = {
          _0x59d103: 0x1985,
          _0x1008b0: 0xb33,
          _0x4d1d2d: 0x22fa
        },
              a0_0x269964 = {
          _0x4e11e1: 0x1b0e
        },
              a0_0x5f566c = {
          _0x18a9fe: 0x12d8,
          _0x5d4116: 0x1901,
          _0x4fd604: 0x21c2
        },
              a0_0x1ff801 = {
          _0x4b62ae: 0x1c62,
          _0x18568f: 0xf91,
          _0x1c31ba: 0x18f3
        },
              a0_0x115b10 = {
          _0x3b9302: 0x16c5,
          _0x10128e: 0x17f,
          _0x4edc54: 0x6ba,
          _0x51c323: 0x17f
        },
              a0_0x337b69 = {
          _0xe2b794: 0x16c5,
          _0x4dbdef: 0x1d66,
          _0x153e71: 0x186b,
          _0x4e5f01: 0x2506,
          _0x161d33: 0x1a5,
          _0x4d6385: 0x242a
        },
              a0_0x5b32a8 = {
          _0x4d45d0: 0xe48,
          _0x559ba1: 0x2072,
          _0x20e8a4: 0xd79,
          _0x27a6ab: 0x9ba,
          _0x377843: 0x9c2
        },
              a0_0x41d2b8 = {
          _0x434c17: 0x2606,
          _0x1500ae: 0x16c5,
          _0x27ecb0: 0x535,
          _0x16e092: 0x1b8a,
          _0xc29e0b: 0x1e35,
          _0x2a381a: 0x1e35,
          _0x4161e6: 0xeba,
          _0xd48590: 0x10a3
        },
              a0_0x37eaab = {
          _0x3bce14: 0x1e35
        },
              a0_0x399691 = {
          _0x2768bb: 0x17f
        },
              a0_0x137eb8 = {
          _0xed520: 0x2606,
          _0x1ecc05: 0x6ba,
          _0x2d623c: 0x2f7
        },
              a0_0x5a89d6 = {
          _0x95c64f: 0xf82,
          _0x2210a7: 0x1d66,
          _0x3161f4: 0x83e,
          _0x2736f9: 0x1d66,
          _0x1fb2c6: 0x17a7,
          _0x22c417: 0x14d2,
          _0x2910d3: 0x1056,
          _0x1b0a2b: 0x112d,
          _0x214d8a: 0x17f
        },
              a0_0x2b80b9 = {
          _0x3b8024: 0x1f43,
          _0x463e18: 0x2530,
          _0x47cedc: 0x17ff,
          _0x2cbe2b: 0x221d
        },
              a0_0x4c8d7a = {
          _0x2b1567: 0x2606,
          _0x4ef9fb: 0x16c5,
          _0x4f1e85: 0x1a50
        };
        _0x593025.r(_0x3522ba), _0x593025.d(_0x3522ba, {
          'addPower': () => _0x114214,
          'createBall': () => _0x3bc484,
          'createBallBlip': () => _0x58eb64,
          'createGolfFlag': () => _0x3a53e5,
          'createTee': () => _0x2dd88f,
          'deactivateGolfGrid': () => _0x5bc3e,
          'destroyGolfFlag': () => _0x521377,
          'destroyStartPoint': () => _0x57aab4,
          'disableBallCollision': () => _0x1d733d,
          'disableGolfRadar': () => _0x38c259,
          'disableRenderBallCheck': () => _0x40567f,
          'enableRenderBallCheck': () => _0x31406f,
          'getAimingState': () => _0x591863,
          'getBall': () => _0x340268,
          'getClosestHoleIndex': () => _0x25e809,
          'getColorId': () => _0x22409f,
          'getGolfClubId': () => _0x292f63,
          'getGolfFloatingScaleForm': () => _0x4af83b,
          'getGolfInstructionalButtons': () => _0x98fd15,
          'getGolfScaleForm': () => _0x2774a7,
          'getGridState': () => _0x298974,
          'getGroundIdMaterial': () => _0x540ff7,
          'getGroundNameMaterial': () => _0x5b4488,
          'getHoleId': () => _0x47c28d,
          'getMaretialName': () => _0x8c7f2a,
          'getMaterialId': () => _0xbc2b52,
          'getMaxPower': () => _0x4764a7,
          'getMaxZPower': () => _0x3c6a73,
          'getPower': () => _0x12afe1,
          'getSwingData': () => _0x26ba97,
          'getTargetedHolePosition': () => _0x276da7,
          'isActive': () => _0x1b7a40,
          'isAvailableHitBall': () => _0x2c1cbb,
          'isBallInsideTargetHole': () => _0x576bb9,
          'isPointInAngledArea': () => _0x5e6287,
          'isPointWithinAnyHole': () => _0x219297,
          'removeBallBlip': () => _0x5cf9ff,
          'removeGolfFloatingScaleform': () => _0x3ddbba,
          'removeGolfInstructionalButtons': () => _0x2412f6,
          'removeGolfScaleform': () => _0x20aba3,
          'renderGolfTrail': () => _0x1d49b6,
          'respawnBall': () => _0x617f98,
          'setActive': () => _0x12e913,
          'setAimingState': () => _0x35c1b7,
          'setAvailableHitBall': () => _0x1c2823,
          'setColorId': () => _0x3d3f47,
          'setGolfClubId': () => _0x9581c5,
          'setGolfScaleformDisplayState': () => _0x12c1a2,
          'setGridState': () => _0x54a96b,
          'setHoleId': () => _0xe5dd55,
          'setMainBall': () => _0x52f478,
          'setMaretialId': () => _0x3d4d90,
          'setMaretialName': () => _0x21de0d,
          'setMaxPower': () => _0xca1593,
          'setMaxZPower': () => _0x3263ff,
          'setPower': () => _0x21409a,
          'setupBallWithTee': () => _0x22a012,
          'setupGolfFloatingScaleform': () => _0x3a9787,
          'setupGolfGrid': () => _0x1196b8,
          'setupGolfInstructionalButtons': () => _0x3e6c77,
          'setupGolfRadar': () => _0x4dc253,
          'setupGolfScaleform': () => _0x18965e,
          'setupGolfScoreboard': () => _0x41afe2,
          'setupGolfTrail': () => _0x3a6832,
          'setupStartPoint': () => _0x5b69e7,
          'shotBall': () => _0x4c51f2,
          'startCameraFollowBall': () => _0x1ddf78,
          'startParticleBallTrail': () => _0x212faf,
          'startParticleFxLandingBall': () => _0x54b78d,
          'stopCameraFollowBall': () => _0x208c4b,
          'stopParticleBallTrail': () => _0xb6525,
          'updateGolfScaleformSwing': () => _0x5c114e
        });

        var _0x3d0b68 = _0x593025(0x16a21),
            _0xa016af = _0x593025(0xb9cc),
            _0x170746 = _0x593025(0x13afd),
            _0x27b8df = _0x593025(0x5269),
            _0x5a0829 = _0x593025(0x127d3),
            _0x363a43 = _0x593025(0xd194),
            _0x5d1ca9 = _0x593025(0x161cd);

        let _0x26a69a,
            _0x171f0b,
            _0x5d28c6,
            _0x413e09,
            _0x498980,
            _0x49bb2f,
            _0x38f386,
            _0x20a34b,
            _0x2a44fd,
            _0x5e60e9,
            _0x5db1ae,
            _0x1c44dc,
            _0x403214,
            _0x97287a,
            _0x348632,
            _0x498b95 = false,
            _0xda1bc0 = 0x1,
            _0x173408 = 0x0,
            _0x3a68a9 = false,
            _0x581c45 = 0.01,
            _0x1b24bf = 0.75,
            _0x4c9b47 = 0x1,
            _0x448557 = 0x1,
            _0x50f1aa = 0x4,
            _0x19677f = 'Jengas',
            _0x12dbfb = [],
            _0x35208b = Date.now();

        _0x593025.g.isGolfActive = false;

        const _0x12e913 = _0x384a1b => _0x593025.g.isGolfActive = _0x384a1b,
              _0x1b7a40 = () => _0x593025.g.isGolfActive,
              _0x21409a = _0x497db6 => _0x581c45 = _0x497db6,
              _0x114214 = _0xb0e216 => _0x581c45 += _0xb0e216,
              _0x12afe1 = () => _0x581c45,
              _0xca1593 = _0x2b7301 => _0x1b24bf = _0x2b7301,
              _0x4764a7 = () => _0x1b24bf,
              _0x35c1b7 = _0x23efb7 => _0x3a68a9 = _0x23efb7,
              _0x591863 = () => _0x3a68a9,
              _0xe5dd55 = _0x4aece0 => _0x448557 = _0x4aece0,
              _0x47c28d = () => _0x448557,
              _0x3d3f47 = _0x460190 => _0xda1bc0 = _0x460190,
              _0x22409f = () => _0xda1bc0,
              _0x9581c5 = _0x185c1c => _0x173408 = _0x185c1c,
              _0x292f63 = () => _0x173408,
              _0x54a96b = _0x2db79c => _0x5e60e9 = _0x2db79c,
              _0x298974 = () => _0x5e60e9,
              _0x3263ff = _0x129fd8 => _0x4c9b47 = _0x129fd8,
              _0x3c6a73 = () => _0x4c9b47,
              _0x3d4d90 = _0x57e72e => _0x50f1aa = _0x57e72e,
              _0xbc2b52 = () => _0x50f1aa,
              _0x21de0d = _0x3d99ff => _0x19677f = _0x3d99ff,
              _0x8c7f2a = () => _0x19677f,
              _0x219297 = _0x1903d6 => -0x1 != _0x170746.Z.findIndex(_0x5cb9ec => _0x3d0b68.api.vdist2(_0x5cb9ec, _0x1903d6) <= 0.75),
              _0x576bb9 = () => {
          if (undefined === _0x49bb2f || !_0x5d1ca9.objects.exists(_0x49bb2f)) return;
          const _0x1b515f = _0x170746.Z[_0x448557 - 0x1];
          return _0x3d0b68.api.vdist2(_0x49bb2f.getCoords(true), _0x1b515f) <= 0.15;
        },
              _0x276da7 = () => _0x170746.Z[_0x448557 - 0x1],
              _0x25e809 = (_0x520702, _0x5d0efb = 0x5) => _0x170746.Z.findIndex(_0x206518 => _0x3d0b68.api.vdist2(_0x206518, _0x520702) <= _0x5d0efb),
              _0x2c1cbb = () => _0x498b95,
              _0x1c2823 = _0x42802e => _0x498b95 = _0x42802e,
              _0x5b69e7 = (_0x306d48, _0x32ea84 = -0x1) => {
          _0x57aab4();

          const _0x331ac3 = _0x27b8df.Z[_0x306d48 - 0x1];
          -0x1 == _0x32ea84 && (_0x32ea84 = _0x5d1ca9.players.local.dimension), _0x97287a = {
            'handle': _0x5d1ca9.game.ui.addBlipForRadius(parseFloat(_0x331ac3.x), parseFloat(_0x331ac3.y), parseFloat(_0x331ac3.z), 0x7)
          }, _0x3d0b68.api.invokeNative('SET_BLIP_SPRITE', _0x97287a.handle, 0x5), _0x3d0b68.api.invokeNative('SET_BLIP_ALPHA', _0x97287a.handle, 0xc8), _0x3d0b68.api.invokeNative('SET_BLIP_COLOUR', _0x97287a.handle, _0xda1bc0), _0x3d0b68.api.invokeNative('SET_BLIP_FLASH_TIMER', _0x97287a.handle, 0x3e8), _0x3d0b68.api.invokeNative('SHOW_NUMBER_ON_BLIP', _0x97287a.handle, _0x306d48), _0x3d0b68.api.invokeNative('SET_BLIP_FLASHES', _0x97287a.handle, true), _0x3d0b68.api.invokeNative('SET_BLIP_ALPHA', _0x97287a.handle, 0x64), _0x348632 = _0x5d1ca9.colshapes.newSphere(_0x331ac3.x, _0x331ac3.y, _0x331ac3.z, 0x5, _0x32ea84), _0x348632.startPoint = true;
        },
              _0x57aab4 = () => {
          undefined !== _0x97287a && _0x3d0b68.api.invokeNative('DOES_BLIP_EXIST', _0x97287a.handle) && (_0x3d0b68.api.invokeNative('SET_BLIP_ALPHA', _0x97287a.handle, 0x0), _0x3d0b68.api.invokeNative('REMOVE_BLIP', _0x97287a.handle)), undefined !== _0x348632 && _0x5d1ca9.colshapes.exists(_0x348632) && _0x348632.destroy();
        },
              _0x22a012 = async _0x8853e7 => {
          const _0x32db5e = await _0x2dd88f(_0x8853e7);

          _0x3bc484({ ..._0x32db5e,
            'z': _0x32db5e.z + 0.05
          }, false);
        },
              _0x2dd88f = async _0x2f1672 => {
          const _0x561085 = _0x5d1ca9.objects.new(_0x5d1ca9.game.joaat('prop_golf_tee'), _0x2f1672, {
            'dimension': _0x5d1ca9.players.local.dimension
          });

          for (; _0x561085.handle <= 0x0;) await _0x5d1ca9.game.sleep(0x0);

          return _0x561085.setRecordsCollisions(true), _0x561085.setCollision(true, true), _0x561085.setHasGravity(true), _0x561085.freezePosition(true), _0x561085.placeOnGroundProperly(), _0x2f1672 = _0x561085.getCoords(true), _0x5d1ca9.events.callRemote('4033091740', JSON.stringify(_0x2f1672)), _0x561085.destroy(), _0x2f1672;
        },
              _0x340268 = () => _0x49bb2f,
              _0x52f478 = _0x453bbd => {
          undefined !== _0x49bb2f && 'function' == typeof _0x49bb2f.destroy && _0x5d1ca9.objects.exists(_0x49bb2f) && _0x49bb2f.destroy(), _0x49bb2f = _0x453bbd, _0x1d733d(_0x49bb2f), _0x58eb64();
        },
              _0x3bc484 = async (_0xa06374, _0x1516d8 = true) => {
          const _0x3b6e4a = _0x5d1ca9.objects.new(_0x5d1ca9.game.joaat('prop_golf_ball'), _0xa06374, {
            'dimension': _0x5d1ca9.players.local.dimension
          });

          for (; _0x3b6e4a.handle <= 0x0;) await _0x5d1ca9.game.sleep(0x0);

          _0x3b6e4a.setRecordsCollisions(true), _0x3b6e4a.setCollision(true, true), _0x3b6e4a.setHasGravity(true), _0x3b6e4a.freezePosition(true), _0x1516d8 && _0x3b6e4a.placeOnGroundProperly(), _0xa06374 = _0x3b6e4a.getCoords(true), _0x5d1ca9.events.callRemote('2135863476', JSON.stringify(_0xa06374)), _0x3b6e4a.destroy();
        },
              _0x617f98 = () => {
          const _0x1fa0cc = _0x27b8df.Z[_0x448557 - 0x1];

          _0x22a012(_0x1fa0cc);
        },
              _0x58eb64 = () => {
          _0x5d1ca9.objects.exists(_0x49bb2f) && (_0x5cf9ff(), _0x38f386 = _0x5d1ca9.blips.new(0x8f, {
            'x': 0x0,
            'y': 0x0,
            'z': 0x0
          }, {
            'name': 'Golf - Ball',
            'color': _0xda1bc0,
            'dimension': -0x1,
            'scale': 0.5,
            'alpha': 0xc8,
            'drawDistance': 0x1f4,
            'shortRange': true
          }));
        },
              _0x5cf9ff = () => {
          undefined !== _0x38f386 && _0x5d1ca9.blips.exists(_0x38f386) && (_0x38f386.destroy(), _0x38f386 = undefined);
        },
              _0x212faf = async () => {
          await _0x3d0b68.api.requestNamedPtfxAsset('scr_minigamegolf'), _0x5d1ca9.game.graphics.setPtfxAssetNextCall('scr_minigamegolf'), _0x403214 = _0x5d1ca9.game.graphics.startParticleFxLoopedOnEntity('scr_golf_ball_trail', _0x49bb2f.handle, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, false, false, false);
        },
              _0xb6525 = () => {
          undefined !== _0x403214 && (_0x5d1ca9.game.graphics.stopParticleFxLooped(_0x403214, false), _0x403214 = undefined);
        },
              _0x54b78d = async () => {
          if (undefined === _0x49bb2f || !_0x5d1ca9.objects.exists(_0x49bb2f)) return;
          await _0x3d0b68.api.requestNamedPtfxAsset('scr_minigamegolf');

          const _0x43b912 = _0x49bb2f.getCoords(true);

          _0x5d1ca9.game.graphics.setPtfxAssetNextCall('scr_minigamegolf'), _0x5d1ca9.game.graphics.startParticleFxNonLoopedAtCoord('scr_golf_landing_water', _0x43b912.x, _0x43b912.y, _0x43b912.z, 0x0, 0x0, 0x7, 0x5, false, false, false);
        },
              _0x1ddf78 = async () => {
          _0x5d1ca9.cameras.exists(_0x20a34b) && (_0x20a34b.destroy(), _0x20a34b = null);

          const _0x50f419 = _0x49bb2f.getRotation(0x2);

          _0x20a34b = _0x5d1ca9.cameras.new('golf.aim', _0x49bb2f.getCoords(true), {
            'x': 0x0,
            'y': 0x0,
            'z': 0x0
          }, 0x5a), _0x20a34b.setRot(_0x50f419.x, _0x50f419.y, _0x50f419.z, 0x2), _0x20a34b.setActive(true), _0x5d1ca9.game.cam.renderScriptCams(true, true, 0xbb8, true, false, 0x0), _0x5d28c6 = true, _0x5d1ca9.game.audio.startAudioScene('GOLF_FLY_CAM');
        },
              _0x15f74b = () => {
          if (!_0x5d28c6) return;
          if (!_0x5d1ca9.cameras.exists(_0x20a34b) || !_0x5d1ca9.objects.exists(_0x49bb2f) || _0x49bb2f.handle <= 0x0) return _0x5d1ca9.game.audio.stopAudioScene('GOLF_FLY_CAM'), _0x5d1ca9.game.streaming.clearFocus(), _0x5d1ca9.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), void (_0x5d1ca9.cameras.exists(_0x20a34b) && (_0x20a34b.destroy(), _0x20a34b = null));

          const _0x51acce = _0x49bb2f.getCoords(true),
                _0x433aa2 = _0x5d1ca9.game.object.getObjectOffsetFromCoords(_0x51acce.x, _0x51acce.y, _0x51acce.z, _0x49bb2f.getHeading(), 0x0, -3.5, 4.5);

          _0x20a34b.setCoord(_0x433aa2.x, _0x433aa2.y, _0x433aa2.z), _0x20a34b.pointAtCoord(_0x51acce.x, _0x51acce.y, _0x51acce.z), _0x20a34b.setRot(0x0, 0x0, 0x0, 0x2), _0x20a34b.shake('HAND_SHAKE', 0.5), _0x5d1ca9.game.streaming.setFocusArea(_0x51acce.x, _0x51acce.y, _0x51acce.z, 0x0, 0x0, 0x0);
        },
              _0x208c4b = () => {
          _0x5d28c6 = false, _0x5d1ca9.cameras.exists(_0x20a34b) && (_0x20a34b.setActive(false), _0x20a34b.destroy(), _0x20a34b = undefined), _0x5d1ca9.game.streaming.clearFocus(), _0x5d1ca9.game.audio.stopAudioScene('GOLF_FLY_CAM'), _0x5d1ca9.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0);
        },
              _0x4c51f2 = (_0x8c99ee, _0x1fc000, _0x1f4420) => {
          undefined !== _0x49bb2f && _0x5d1ca9.objects.exists(_0x49bb2f) && (_0x26a69a = _0x49bb2f.getCoords(true), _0x1d733d(_0x49bb2f), _0x49bb2f.setRecordsCollisions(true), _0x49bb2f.setCollision(true, true), _0x49bb2f.setHasGravity(true), _0x49bb2f.freezePosition(false), _0x49bb2f.setVelocity(_0x8c99ee, _0x1fc000, _0x1f4420), _0x1d733d(_0x49bb2f));
        },
              _0x31406f = () => {
          _0x12dbfb = [], _0x35208b = Date.now(), _0x171f0b = true;
        },
              _0x40567f = () => {
          if (_0x171f0b = false, undefined === _0x49bb2f || !_0x5d1ca9.objects.exists(_0x49bb2f)) return;

          const _0x1cadb3 = _0x49bb2f.getCoords(true);

          if (!_0x1cadb3 || !_0x1cadb3.x) return;

          const _0x567c65 = _0x5d1ca9.game.gameplay.getGroundZFor3dCoord(_0x1cadb3.x, _0x1cadb3.y, _0x1cadb3.z, parseFloat(0x0), false);

          Math.abs(_0x567c65 - _0x1cadb3.z) <= 0.55 && _0x576bb9() && _0x5d1ca9.events.call('onGolfBallFellIntoHole');
        },
              _0x3a53e5 = async _0x22401c => {
          const _0x5d9d75 = _0x170746.Z[_0x22401c - 0x1];

          for (undefined !== _0x413e09 && _0x5d1ca9.objects.exists(_0x413e09) && _0x413e09.destroy(), undefined !== _0x498980 && _0x5d1ca9.blips.exists(_0x498980) && _0x498980.destroy(), _0x498980 = _0x5d1ca9.blips.new(0x166, _0x5d9d75, {
            'name': 'Golf - flag',
            'scale': 0.9,
            'color': 0x18,
            'alpha': 0xff,
            'drawDistance': 0x1f4,
            'shortRange': true,
            'dimension': _0x5d1ca9.players.local.dimension
          }), _0x413e09 = _0x5d1ca9.objects.new(_0x5d1ca9.game.joaat('prop_golfflag'), _0x5d9d75, {
            'alpha': 0xff,
            'dimension': _0x5d1ca9.players.local.dimension
          }); _0x413e09.handle <= 0x0;) await _0x5d1ca9.game.sleep(0x0);

          _0x413e09.setCollision(false, false);
        },
              _0x521377 = () => {
          undefined !== _0x413e09 && _0x5d1ca9.objects.exists(_0x413e09) && _0x413e09.destroy(), undefined !== _0x498980 && _0x5d1ca9.blips.exists(_0x498980) && _0x498980.destroy();
        },
              _0x98fd15 = () => _0x2a44fd,
              _0x3e6c77 = () => {
          _0x2a44fd = new _0xa016af.InstructionalButtons(-0x1), _0x2a44fd.addButton('ibuttons.restore', 0x2d), _0x2a44fd.addButton('ibuttons.clubStick', 0x32), _0x2a44fd.addButton('ibuttons.aim', 0x19), _0x2a44fd.addButton('ibuttons.hit', 0x18), _0x2a44fd.addButton('ibuttons.scoreCard', 0x25), _0x2a44fd.toggleHud(true);
        },
              _0x2412f6 = () => {
          undefined !== _0x2a44fd && (_0x2a44fd.resetBar(), _0x2a44fd = undefined);
        },
              _0x2774a7 = () => _0x5db1ae,
              _0x18965e = () => {
          _0x5db1ae = new _0x363a43.Scaleform('GOLF'), _0x5db1ae.callFunction('SET_DISPLAY', 0x63), _0x5db1ae.callFunction('SET_HOLE_DISPLAY', 'Hole 1', 'Par 3', '0 m'), _0x5db1ae.callFunction('SET_SWING_DISPLAY', 0x3f, 'test1', _0xbc2b52(), '+1', 0.3, 'D', 0x3, 'Normal', true, 'On Tee', 0x4, 0.5, 'Shot 1'), _0x5db1ae.callFunction('SWING_METER_TRANSITION_OUT', 0x1), _0x5db1ae.startRenderEvent();
        },
              _0x5c114e = () => {
          const _0x228603 = _0x26ba97();

          _0x5db1ae.callFunction('SET_SWING_DISPLAY', 0x3f, 'test1', _0xbc2b52(), '+1', 0.3, _0x228603.swingClub, _0x228603.swingClubEnum, 'Normal', true, 'On Tee', 0x4, 0.5, 'Shot 1');
        },
              _0x12c1a2 = _0x1e4d49 => {
          _0x5db1ae.callFunction('SET_DISPLAY', _0x1e4d49);
        },
              _0x41afe2 = _0x400b64 => {
          const a0_0x65f504 = {
            _0x482c1c: 0x1d9b,
            _0x1de3c8: 0x1760,
            _0x5691b1: 0x223f
          };

          _0x5db1ae.callFunction('SET_SCOREBOARD_TITLE', 'Scoreboard', 'HOLE', 'PAR', 'SCORE', 'Hole in One', 'Under Par', 'Over Par');

          for (let _0x1a1f58 = 0x0; 0x5 != _0x1a1f58; _0x1a1f58++) _0x5db1ae.callFunction('CLEAR_SCOREBOARD_SLOT', _0x1a1f58);

          _0x400b64.forEach((_0x3fba4b, _0x59f9e4) => {
            _0x5db1ae.callFunction('SET_SCOREBOARD_SLOT', _0x59f9e4, 0x1, _0x3fba4b.name, 'crewTag', 'PLAYER_READY', _0x3fba4b.ballColor, _0x3fba4b.score, _0x3fba4b.scoreColor, _0x3fba4b.c0, _0x3fba4b.c1, _0x3fba4b.c2, _0x3fba4b.c3, _0x3fba4b.c4, _0x3fba4b.c5, _0x3fba4b.c6, _0x3fba4b.c7, _0x3fba4b.c8);
          }), _0x5db1ae.callFunction('COURSE_PAR', '5', '4', '3', '4', '4', '3', '4', '5', '4', '(PAR 36)');
        },
              _0x20aba3 = () => {
          undefined !== _0x5db1ae && (_0x5db1ae.stopRenderEvent(), _0x5db1ae.destroy(), _0x5db1ae = undefined);
        },
              _0x4af83b = () => _0x1c44dc,
              _0x3a9787 = _0x1fc6ff => {
          _0x1c44dc = new _0x363a43.Scaleform('GOLF_FLOATING_UI'), _0x1c44dc.callFunction('TRANSITION_IN', 0xdac), _0x1c44dc.callFunction('SET_STRENGTH', 'Force', '' + Math.round(0x64 * _0x1fc6ff), true), _0x1c44dc.startRenderEvent();
        },
              _0x3ddbba = () => {
          undefined !== _0x1c44dc && (_0x1c44dc.stopRenderEvent(), _0x1c44dc.destroy(), _0x1c44dc = undefined);
        },
              _0x4dc253 = _0x42ec45 => {
          const _0x20eccf = _0x5a0829.Z[_0x42ec45 - 0x1],
                _0x4c3b1f = _0x5d1ca9.game.system.ceil(0x44c * _0x20eccf.zoom);

          _0x3d0b68.api.invokeNative('SET_MINIMAP_GOLF_COURSE', _0x42ec45), _0x5d1ca9.game.ui.toggleStealthRadar(false), _0x5d1ca9.game.ui.setMinimapRevealed(false), _0x5d1ca9.game.ui.setRadarZoom(_0x4c3b1f), _0x5d1ca9.game.ui.lockMinimapPosition(_0x20eccf.x, _0x20eccf.y), _0x5d1ca9.game.ui.lockMinimapAngle(_0x20eccf.angle);
        },
              _0x38c259 = () => {
          _0x5d1ca9.game.ui.setRadarZoom(0x0), _0x3d0b68.api.invokeNative('SET_MINIMAP_GOLF_COURSE_OFF'), _0x3d0b68.api.invokeNative('UNLOCK_MINIMAP_ANGLE'), _0x3d0b68.api.invokeNative('UNLOCK_MINIMAP_POSITION'), _0x3d0b68.api.invokeNative('TOGGLE_STEALTH_RADAR', true);
        },
              _0x3a6832 = (_0x49a6f2, _0xbde00f, _0x765af5 = 0x0) => {
          _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_ENABLED', true), _0x3d0b68.api.invokeNative('N_0xc0416b061f2b7e5e', true), _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_TESSELLATION', 0x3, 0x1), _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_FIXED_CONTROL_POINT', 0x0, _0x49a6f2.x, _0x49a6f2.y, _0x49a6f2.z, 0.15, 0xff, 0xff, 0xff, 0x96);
          const _0x42f8bb = {
            'x': (_0x49a6f2.x + _0xbde00f.x) / 0x2,
            'y': (_0x49a6f2.y + _0xbde00f.y) / 0x2,
            'z': (_0x49a6f2.z + _0xbde00f.z) / 0x2 + _0x765af5
          };
          _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_FIXED_CONTROL_POINT', 0x1, _0x42f8bb.x, _0x42f8bb.y, _0x42f8bb.z, 0.15, 0xff, 0xff, 0xff, 0x96), _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_FIXED_CONTROL_POINT', 0x2, _0xbde00f.x, _0xbde00f.y, _0xbde00f.z, 0.15, 0xff, 0xff, 0xff, 0x96);
        },
              _0x1d49b6 = () => {
          const _0x1f5fb9 = _0x170746.Z[_0x47c28d() - 0x1],
                _0x179326 = _0x27b8df.Z[_0x47c28d() - 0x1];

          _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_PATH', _0x1f5fb9.x, _0x1f5fb9.y, _0x1f5fb9.z, _0x179326.x, _0x179326.y, _0x179326.z, 0x1, 0x1, false), _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_ENABLED', true), _0x3d0b68.api.invokeNative('GOLF_TRAIL_GET_VISUAL_CONTROL_POINT', 0x1), _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_RADIUS', 0.025, 0.3, 0.025), _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_COLOUR', 0xff, 0xff, 0xff, 0x64, 0xff, 0xff, 0xff, 0x64, 0xff, 0xff, 0xff, 0x64), _0x3d0b68.api.invokeNative('GOLF_TRAIL_SET_SHADER_PARAMS', 0x1, 0x1, 0x1, 0x1, 0.3);
        },
              _0x1196b8 = _0x50b444 => {
          const _0x2a0172 = _0x170746.Z[_0x50b444 - 0x1];
          _0x3d0b68.api.invokeNative('TERRAINGRID_ACTIVATE', true), _0x3d0b68.api.invokeNative('TERRAINGRID_SET_PARAMS', _0x2a0172.x, _0x2a0172.y, _0x2a0172.z + 0.5, _0x2a0172.p3, _0x2a0172.rotation, _0x2a0172.p5, _0x2a0172.width, _0x2a0172.height, _0x2a0172.p8, _0x2a0172.scale, _0x2a0172.glowIntensity, _0x2a0172.normalHeight, _0x2a0172.heightDiff), _0x3d0b68.api.invokeNative('TERRAINGRID_SET_COLOURS', 0xff, 0x0, 0x0, 0x40, 0xff, 0xff, 0xff, 0x5, 0xff, 0xff, 0x0, 0x40);
        },
              _0x5bc3e = () => {
          _0x3d0b68.api.invokeNative('TERRAINGRID_ACTIVATE', false);
        },
              _0x5e6287 = (_0x8caf51, _0xa64c82, _0x22ef27 = false) => {
          switch (_0xa64c82) {
            case 0x0:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1343.415, 181.1824, 57.33359, -1251.276, 187.565, 63.27087, 20.5, _0x22ef27, false) || _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1250.13, 183.4166, 61.82693, -1135.73, 210.2372, 65.00552, 34.25, _0x22ef27, false);

            case 0x1:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1158.626, 148.4453, 61.67144, -1252.306, 148.0701, 58.76517, 43.75, _0x22ef27, false) || _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1252.343, 162.8867, 66.23121, -1312.435, 159.2726, 57.93302, 27.25, _0x22ef27, false);

            case 0x2:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1306.301, 126.5952, 64.51172, -1248.897, 105.2278, 56.55264, 27.25, _0x22ef27, false);

            case 0x3:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1228.795, 98.25659, 64.04681, -1127.405, 70.77743, 55.55414, 33.25, _0x22ef27, false) || _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1139.194, 78.43003, 55.89752, -1089.522, -8.462549, 47.66283, 0x32, _0x22ef27, false);

            case 0x4:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1056.761, 4.600485, 56.47993, -972.4623, -79.60284, 40.80097, 33.25, _0x22ef27, false);

            case 0x5:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1001.107, -113.409, 48.13639, -1082.22, -116.0385, 41.54693, 33.25, _0x22ef27, false);

            case 0x6:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1123.556, -97.21224, 48.86689, -1283.79, -21.73747, 48.84038, 33.25, _0x22ef27, false);

            case 0x7:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1272.027, 36.36215, 56.68197, -1059.007, -81.26653, 43.52966, 39.5, _0x22ef27, false);

            case 0x8:
              return _0x5d1ca9.game.object.isPointInAngledArea(_0x8caf51.x, _0x8caf51.y, _0x8caf51.z, -1128.409, -3.124314, 56.17102, -1252.344, 79.26453, 52.99523, 0x25, _0x22ef27, false);
          }

          return 0x0;
        },
              _0x540ff7 = _0x48317c => {
          switch (_0x48317c) {
            case -0x1b85c1bf:
            case 0x377b4131:
              return 0x4;

            case 0x22ad7b72:
            case -0x79ac3933:
            case -0x126cd1ad:
            case 0x2114b37d:
            case -0x70632a71:
            case -0x722b1447:
              return 0x9;

            case -0x7b943b01:
            case 0x25612338:
              return 0x8;

            case 0x46ca81e8:
            case 0x10dd5498:
            case 0x38bbd00c:
            case -0x3214afdd:
            case 0x1e6d775e:
              return 0x1;

            case 0x4f747b87:
              return 0x2;

            case -0x4cb16ff3:
              return 0x3;

            case -0x5f14081c:
              return 0x0;

            case 0x19f81600:
              return 0x7;
          }

          return -0x1;
        },
              _0x5b4488 = _0x53a895 => {
          let _0x12d45d;

          switch (_0x53a895) {
            case -0x1b85c1bf:
            case 0x377b4131:
              _0x12d45d = 'scr_golf_landing_thick_grass';
              break;

            case -0x126cd1ad:
            case 0x2114b37d:
            case 0x22ad7b72:
            case -0x79ac3933:
            case -0x722b1447:
              _0x12d45d = 'scr_golf_hit_branches';
              break;

            case -0x5f14081c:
              _0x12d45d = 'scr_golf_landing_bunker';
          }

          return _0x12d45d;
        },
              _0x26ba97 = () => {
          let _0x34f2c7 = {
            'swingClub': 'D',
            'swingClubEnum': 0x1
          };

          switch (_0x292f63()) {
            case 0x0:
              break;

            case 0x1:
              _0x34f2c7.swingClub = 'P', _0x34f2c7.swingClubEnum = 0x4;
              break;

            case 0x2:
              _0x34f2c7.swingClub = 'I', _0x34f2c7.swingClubEnum = 0x5;
              break;

            case 0x3:
              _0x34f2c7.swingClub = 'Pu', _0x34f2c7.swingClubEnum = 0x6;
          }

          return _0x34f2c7;
        },
              _0x1d733d = _0x52a174 => {
          _0x5d1ca9.objects.exists(_0x52a174) && (_0x5d1ca9.players.forEachInStreamRange(_0x315e28 => {
            _0x52a174.setNoCollision(_0x315e28.handle, false);
          }), _0x52a174.setNoCollision(_0x5d1ca9.players.local.handle, false));
        };

        _0x5d1ca9.events.add('render', () => {
          if (!_0x1b7a40()) return;
          _0x97287a && _0x97287a.handle && _0x3d0b68.api.invokeNative('SET_BLIP_ROTATION', _0x97287a.handle, 0x0);

          const _0x257c6d = _0x340268();

          if (_0x257c6d && _0x5d1ca9.objects.exists(_0x257c6d) && _0x257c6d.hasCollidedWithAnything()) {
            const _0x5e3881 = _0x540ff7(_0x257c6d.getLastMaterialHitBy());

            _0x3d4d90(_0x5e3881), _0x5c114e();
          }

          if (_0x38f386 && _0x5d1ca9.blips.exists(_0x38f386) && _0x5d1ca9.objects.exists(_0x257c6d) && _0x257c6d.handle > 0x0 && _0x38f386.setCoords(_0x257c6d.getCoords(true)), _0x5d1ca9.cameras.exists(_0x20a34b) ? _0x15f74b() : _0x20a34b && !_0x5d1ca9.cameras.exists(_0x20a34b) && (_0x5d1ca9.game.audio.stopAudioScene('GOLF_FLY_CAM'), _0x20a34b = null, _0x5d1ca9.game.streaming.clearFocus()), _0x171f0b && undefined !== _0x257c6d && _0x5d1ca9.objects.exists(_0x257c6d)) {
            const _0x521e3d = _0x257c6d.getCoords(true);

            if (_0x521e3d && _0x521e3d.x) {
              const _0xb52e6c = _0x5d1ca9.game.gameplay.getGroundZFor3dCoord(_0x521e3d.x, _0x521e3d.y, _0x521e3d.z, parseFloat(0x0), false);

              if (undefined !== _0x1c44dc && (_0x1c44dc.callFunction('SET_SWING_DISTANCE', 'Distance', _0x3d0b68.api.vdist2(_0x521e3d, _0x26a69a).toFixed(0x1) + 'm', false), _0x1c44dc.callFunction('SET_PIN_DISTANCE', 'To hole', _0x3d0b68.api.vdist2(_0x521e3d, _0x170746.Z[_0x47c28d() - 0x1]).toFixed(0x1) + 'm', false), _0x1c44dc.callFunction('SET_HEIGHT', 'Height', Math.round(_0x521e3d.z - _0xb52e6c) + 'm', false)), _0x257c6d.isInWater() && -0x1 == _0x12dbfb.indexOf('onGolfBallHitWater')) return _0x54b78d(), _0x5d1ca9.events.call('onGolfBallHitWater'), void _0x12dbfb.push('onGolfBallHitWater');
              _0x5d1ca9.zones.isPointInZone({ ..._0x521e3d,
                'z': _0x521e3d.z + 0x1
              }, 'golf.zone') || -0x1 != _0x12dbfb.indexOf('server.golf.game.ball.left.zone') || (_0x5d1ca9.events.callRemote('2517953902'), _0x12dbfb.push('server.golf.game.ball.left.zone')), Math.abs(_0xb52e6c - _0x521e3d.z) <= 0.55 && Date.now() > _0x35208b + 0x514 && -0x1 == _0x12dbfb.indexOf('onGolfBallHitGround') && (_0x5d1ca9.events.call('onGolfBallHitGround'), _0x12dbfb.push('onGolfBallHitGround'));
            }
          }
        });
      },
      0xed37: (_0x1707ec, _0x546562, _0x4dae6f) => {
        _0x4dae6f(0xe8d), _0x4dae6f(0x53cc), _0x4dae6f(0x46c8), _0x4dae6f(0x59cc), _0x4dae6f(0x15931), _0x4dae6f(0x10dd1), _0x4dae6f(0xfe43), _0x4dae6f(0x1c1a), _0x4dae6f(0x3453), _0x4dae6f(0x16ec4), _0x4dae6f(0x4f25), _0x4dae6f(0x42fd), _0x4dae6f(0x17aef), _0x4dae6f(0xd135), _0x4dae6f(0xfab1), _0x4dae6f(0x91d8), _0x4dae6f(0x10d1), _0x4dae6f(0x11b2);
      },
      0x17aef: (_0x11d5f5, _0x15f9ae, _0x347808) => {
        'use strict';

        const a0_0x308fc0 = {
          _0x39afda: 0x146b,
          _0x184d89: 0x134d,
          _0x2dff3c: 0x1992,
          _0x196815: 0x2ae,
          _0x39fabe: 0x137a,
          _0xbffee2: 0x911,
          _0x2a4768: 0xd43,
          _0x5ebf21: 0x24bc,
          _0x3d8530: 0x1af1,
          _0x2eae83: 0xee5,
          _0x5ed565: 0x1761
        },
              a0_0x5ae0cc = {
          _0x4462d1: 0x927
        },
              a0_0x2e0d9 = {
          _0x9cae8a: 0x1edc,
          _0x13ac13: 0x2288,
          _0x25e930: 0x90f,
          _0x32dc51: 0x927,
          _0x14e0b2: 0x2288,
          _0x473ea1: 0x2274
        },
              a0_0x4296c1 = {
          _0x2fc398: 0x16bc,
          _0x23d2a7: 0x35c,
          _0x21a329: 0x191a,
          _0x42c9a8: 0x21c3
        },
              a0_0x5a0a7d = {
          _0x477d5e: 0x535,
          _0xbfe544: 0x52c,
          _0x4f0a42: 0x1d66,
          _0x29814d: 0x59d,
          _0x295bf3: 0x1c66
        },
              a0_0x26f3b6 = {
          _0x52a8f0: 0x146b,
          _0x136a65: 0xf86,
          _0x3467ff: 0x20eb,
          _0x1a9dc8: 0x1c66,
          _0x25a156: 0x535,
          _0x556b73: 0x52c
        },
              a0_0x540060 = {
          _0x52072e: 0x19e6
        };

        _0x347808.r(_0x15f9ae);

        var _0x23b7ea = _0x347808(0x16a21),
            _0x475dfb = _0x347808(0xb9cc),
            _0x310d2e = _0x347808(0xe27),
            _0x1443af = _0x347808(0x161cd);

        const _0x2c838d = _0x1443af.players.local;

        let _0x338cfc;

        class _0x110321 {
          constructor(_0x564e28) {
            this.type = _0x564e28, this.start();
          }

          ['start']() {
            _0x347808.g.playableInstrument = true, _0x23b7ea.api.displayHelpStringTrans('displayHelpString.keyboardToPlay', false, true, 0x2710), this.initInstructions(), _0x23b7ea.api.usingSystemAnim(true), _0x23b7ea.api.toggleChat(false);
          }

          ['stop']() {
            _0x347808.g.playableInstrument = false, _0x338cfc = null, this.clearInstructions(), _0x23b7ea.api.toggleChat(true), _0x1443af.game.ui.clearHelp(true), _0x23b7ea.api.usingSystemAnim(false);
          }

          ['initInstructions']() {
            this.clearInstructions(), this.instructionalButtonsData = new _0x475dfb.InstructionalButtons(-0x1), this.instructionalButtonsData.addButton('ibuttons.exit', 0x19), this.instructionalButtonsData.toggleHud(true);
          }

          ['clearInstructions']() {
            this.instructionalButtonsData && this.instructionalButtonsData.resetBar();
          }

          ['keyPress'](_0x3d87eb) {
            _0x23b7ea.api.play3DSound('instruments/' + this.type + '/' + _0x3d87eb, {
              'volume': 0x32
            });
          }

        }

        _0x1443af.events.add('click', (_0x3c6ab4, _0x48415f, _0xe08b42, _0x110290, _0x540b0a, _0x53ae47, _0x233f12, _0xd0aa33) => {
          if ([0x1b7, 0x1b8].includes(_0x2c838d.activeItemId) && 'right' === _0x110290 && 'up' === _0xe08b42) {
            if (_0x338cfc) _0x338cfc.stop();else {
              let _0x12610d;

              switch (_0x2c838d.activeItemId) {
                case 0x1b7:
                  _0x12610d = 'acousticguitar';
                  break;

                case 0x1b8:
                  _0x12610d = 'drum';
              }

              _0x338cfc = new _0x110321(_0x12610d);
            }
          }
        }), _0x1443af.events.add('fun.instruments.stop', () => {
          _0x338cfc && _0x338cfc.stop();
        }), _0x1443af.events.add('playerDeath2', _0x10a1aa => {
          _0x10a1aa == _0x1443af.players.local && _0x338cfc && _0x338cfc.stop();
        }), _0x1443af.events.add('render', () => {
          if (_0x347808.g.playableInstrument && _0x338cfc) {
            _0x1443af.game.ui.setPauseMenuActive(false), _0x1443af.game.controls.disableAllControlActions(0x0);

            for (let [_0x261fc2, _0x1401be] of Object.entries(_0x310d2e.Z)) _0x261fc2 = parseInt(_0x261fc2), !_0x1443af.keys.isDown(_0x261fc2) || _0x1443af.keys.isUp(_0x261fc2) || _0x1401be.state ? _0x1401be.state && _0x1443af.keys.isUp(_0x261fc2) && (_0x1401be.state = false) : _0x1401be.sharpOctave && (_0x1443af.keys.isDown(0xa0) || _0x1443af.keys.isDown(0xa1)) ? (_0x1401be.state = true, _0x338cfc.keyPress(_0x1401be.octave.slice(0x0, 0x1) + 's' + _0x1401be.octave.slice(0x1))) : (_0x1401be.state = true, _0x338cfc.keyPress(_0x1401be.octave));
          }
        });
      },
      0x11b2: (_0x576c24, _0x5d8e32, _0x22f193) => {
        'use strict';

        const a0_0x5a2054 = {
          _0x2f11a4: 0x535,
          _0xb1e62d: 0x1de9,
          _0x5aa19c: 0xb25,
          _0x144958: 0x1870,
          _0x5cc0f0: 0x3f8,
          _0x4c78fd: 0x1de9,
          _0x149f18: 0x1870,
          _0x306c99: 0x1de9,
          _0x21e50b: 0x1ebd
        };

        _0x22f193.r(_0x5d8e32);

        var _0x23a759 = _0x22f193(0x16a21),
            _0x4d224f = _0x22f193(0x14b31),
            _0x2720de = _0x22f193(0x161cd);

        const _0x58ad41 = _0x2720de.players.local,
              _0x7249eb = 'anim@amb@casino@luxury_suite@suite_phone@';

        let _0x47a4b5;

        _0x2720de.events.add('playerEnterColshape', _0x47726c => {
          _0x23a759.api.isAuthed() && !_0x58ad41.vehicle && _0x47726c && _0x47726c.hasVariable('luckyPhone') && _0x47726c.getVariable('luckyPhone') && (_0x47a4b5 = _0x47726c, _0x23a759.api.displayHelpStringTrans('displayHelpString.toPickPhone', false, true, 0x1388));
        }), _0x2720de.events.add('playerExitColshape', _0x422863 => {
          _0x23a759.api.isAuthed() && _0x47a4b5 && _0x47a4b5 === _0x422863 && (_0x47a4b5 = null, _0x2720de.game.ui.clearHelp(true));
        }), _0x2720de.events.add('keys.e', async () => {
          if (!_0x47a4b5 || !_0x2720de.colshapes.exists(_0x47a4b5) || _0x58ad41.vehicle) return;

          _0x2720de.game.ui.clearHelp(true);

          const _0x312e84 = _0x47a4b5.getVariable('luckyPhone');

          _0x47a4b5 = null, _0x2720de.events.callRemote('2088912466', _0x312e84);
        }), _0x4d224f.f.register('luckyPhone.startAnimation', async () => {
          if (_0x23a759.api.play3DSound('phonepickup', {
            'volume': 0x23
          }), _0x58ad41.isMale()) {
            const _0x430c0c = await _0x23a759.api.taskPlayAnim(_0x7249eb, 'm_pick_up_mp_m_freemode_01', 0x2, true, false, false, false);

            await _0x2720de.game.sleep(0x3e8 * _0x430c0c), await _0x23a759.api.taskPlayAnim(_0x7249eb, 'm_use_phone_mp_m_freemode_01', 0x1, true, false, false, false);
          } else {
            const _0x51a942 = await _0x23a759.api.taskPlayAnim(_0x7249eb, 'f_pick_up_mp_f_freemode_01', 0x2, true, false, false, false);

            await _0x2720de.game.sleep(0x3e8 * _0x51a942), await _0x23a759.api.taskPlayAnim(_0x7249eb, 'f_use_phone_mp_f_freemode_01', 0x1, true, false, false, false);
          }

          return true;
        });
      },
      0x37de: (_0x5ecca7, _0x4d8a92, _0x582b06) => {
        'use strict';

        const a0_0x14b397 = {
          _0x103104: 0x1a4d,
          _0x3a987c: 0x13d9
        },
              a0_0x2bf115 = {
          _0x4da12a: 0x535,
          _0x209234: 0x253d,
          _0xeddb6d: 0x2630,
          _0x552c04: 0xf2f,
          _0x1c1773: 0x21b1,
          _0x41467c: 0x24dc,
          _0xb7890c: 0x1349,
          _0x2a0c77: 0xbb1,
          _0x53a25b: 0x117c
        },
              a0_0x3c1db7 = {
          _0x4a0a71: 0x535,
          _0x577582: 0x253d,
          _0x4fd419: 0x2630
        },
              a0_0xdf1420 = {
          _0x1335b8: 0x37b,
          _0x1bb434: 0x19d2,
          _0x5a1e90: 0x1540
        },
              a0_0x6ae056 = {
          _0x41e0b6: 0x258c,
          _0x2350de: 0x1a5,
          _0x415f95: 0x662,
          _0x4c909b: 0x535,
          _0x5ed796: 0x52c,
          _0x42b0f2: 0x535,
          _0x2af921: 0x13b0,
          _0x36fd84: 0x15ff,
          _0x59c724: 0x390,
          _0xf97b6d: 0x15ff,
          _0x119fcc: 0x19d6,
          _0xc80125: 0x1420,
          _0x33b350: 0x15ff,
          _0x459e6c: 0x1420,
          _0x225fa7: 0x1420,
          _0x22d062: 0x20f6,
          _0x21b4a3: 0x15ff,
          _0x12031c: 0x1ccb,
          _0x2a4714: 0x1ccb,
          _0x45acb5: 0x16c5,
          _0x4ad42c: 0x2630,
          _0x270f70: 0x6ba,
          _0x5c5053: 0x128a,
          _0x954739: 0x17f
        },
              a0_0x39a3fc = {
          _0x426230: 0x8bd,
          _0x1f44b2: 0x8bd,
          _0x3524dc: 0x17f,
          _0x45528a: 0xb54,
          _0x36936b: 0xa9d,
          _0x2f4d3b: 0x16c5,
          _0x1038a0: 0x225d,
          _0x4b3fce: 0x37b
        },
              a0_0x2f59d2 = {
          _0x250a35: 0x535,
          _0x499ca0: 0x52c,
          _0x5b11ab: 0x13b0,
          _0x5d4de1: 0x1cd8,
          _0x4daa04: 0x258c,
          _0x24b504: 0x37b,
          _0x4c9c5c: 0x16c5,
          _0x24c97a: 0x225d,
          _0x77edb0: 0x225d,
          _0x13ba58: 0x17f,
          _0x310ecd: 0x1d55,
          _0x44d526: 0x225d,
          _0xc26999: 0x2521,
          _0x54020f: 0x1d66,
          _0x4862c9: 0x2072,
          _0x2b5a79: 0x880
        },
              a0_0x3f654c = {
          _0x260ce3: 0x390,
          _0x33194c: 0x19d6,
          _0x4e5c2d: 0x19d6,
          _0x39e9a7: 0x19d6,
          _0x23a388: 0x18c3,
          _0x145215: 0x1edc,
          _0x11d68f: 0x535,
          _0x2b6e6e: 0x1349,
          _0x3f61ff: 0xbc2,
          _0x485059: 0x1edc,
          _0x1a111d: 0x535,
          _0x4c05a3: 0x8ed,
          _0x18fc89: 0x535,
          _0x28cbe1: 0x12e7,
          _0x5b3478: 0x535
        },
              a0_0x1c2b3e = {
          _0x500ac3: 0x1dda,
          _0x28dfc6: 0x2ae,
          _0x2f7c4d: 0x1d2,
          _0x29fd4f: 0x1540,
          _0x469130: 0x15ff,
          _0x3d7800: 0x1ccb,
          _0x4c7d02: 0x20f6,
          _0x40d64e: 0x1420,
          _0x230fb3: 0x855,
          _0x2f3730: 0xe74,
          _0x4c2f1a: 0x2001,
          _0x5adb2e: 0x235b,
          _0x390394: 0x14eb,
          _0x45f483: 0x14eb,
          _0x4cc95d: 0x1ccb,
          _0x32a569: 0x15ff,
          _0xb8eae4: 0x1ccb,
          _0x24d30a: 0xe74,
          _0x5883f5: 0x15ff,
          _0x7348a4: 0x145f,
          _0x43de45: 0x185d,
          _0x4c41bb: 0x535,
          _0x4745ea: 0x15ff,
          _0x505624: 0xe74
        },
              a0_0xa7c2c2 = {
          _0x34699a: 0x52c,
          _0x17e669: 0x13b0,
          _0xc1eae3: 0x535,
          _0x4aa9d7: 0x25df,
          _0x595cd5: 0x14d2,
          _0xa824a4: 0x1a5,
          _0x404211: 0xa9d,
          _0x3563b4: 0x16c5,
          _0x380758: 0x8bd,
          _0x450d41: 0xb54,
          _0x5067a8: 0x17f,
          _0x40b406: 0x1a6d,
          _0x35b155: 0x1d55,
          _0x39d958: 0x1bb6,
          _0x4552b7: 0x1bb6,
          _0x55d4ed: 0x1bb6,
          _0x284160: 0xf82,
          _0x227796: 0xa9d,
          _0x3d3467: 0xf5c,
          _0x788b8b: 0xf5c,
          _0xa25052: 0x8bd,
          _0x1c6674: 0x1d66,
          _0x32c517: 0x1a4a,
          _0x2dcf6d: 0x535,
          _0x676e36: 0x880
        };

        _0x582b06.r(_0x4d8a92);

        var _0x258401 = _0x582b06(0x16a21),
            _0x31671a = _0x582b06(0xa4ff),
            _0x3be8f7 = _0x582b06(0x176d8),
            _0xbd2c49 = _0x582b06(0x161cd);

        const _0x37727e = _0xbd2c49.players.local,
              _0x20d59e = {
          'isPlaying': false,
          'mapId': 0x0,
          'introCamera1': undefined,
          'introCamera2': undefined,
          'garageCamera': undefined,
          'gameArea': undefined,
          'areaBlip': undefined,
          'zoneTimer': undefined,
          'timebars': {},
          'leaderBoard': [],
          'displayWinnersText': true
        },
              _0x53fcec = ['ru'];
        _0xbd2c49.events.add('fun.minigames.deathmatch.startIntro', _0x53bc00 => {
          _0x20d59e.mapId = _0x53bc00;
          const _0x54172a = _0x31671a.r[_0x53bc00];
          _0x258401.api.toggleChat(false), _0x258401.api.toggleHud(false), _0x258401.api.toggleRadar(false), _0x258401.api.fadeOut(0x0), _0xbd2c49.events.call('utils.disablePlayerMove', true), _0xbd2c49.cameras.exists(_0x20d59e.introCamera1) && (_0x20d59e.introCamera1.destroy(), delete _0x20d59e.introCamera1), _0xbd2c49.cameras.exists(_0x20d59e.introCamera2) && (_0x20d59e.introCamera2.destroy(), delete _0x20d59e.introCamera2);

          const _0xc5ca8d = new _0xbd2c49.Vector3(_0x54172a.cameraPosition.from.x, _0x54172a.cameraPosition.from.y, _0x54172a.cameraPosition.from.z),
                _0x3bdefa = new _0xbd2c49.Vector3(_0x54172a.cameraPosition.to.x, _0x54172a.cameraPosition.to.y, _0x54172a.cameraPosition.to.z);

          _0x20d59e.introCamera1 = _0xbd2c49.cameras.new('default', _0xc5ca8d, new _0xbd2c49.Vector3(0x0, 0x0, 0x0), 0x28), _0x20d59e.introCamera2 = _0xbd2c49.cameras.new('default', _0x3bdefa, new _0xbd2c49.Vector3(0x0, 0x0, 0x0), 0x28);

          const _0x3d8b79 = new _0xbd2c49.Vector3(_0x54172a.cameraPosition.lookAt.x, _0x54172a.cameraPosition.lookAt.y, _0x54172a.cameraPosition.lookAt.z);

          _0x20d59e.introCamera1.pointAtCoord(_0x3d8b79.x, _0x3d8b79.y, _0x3d8b79.z), _0x20d59e.introCamera2.pointAtCoord(_0x3d8b79.x, _0x3d8b79.y, _0x3d8b79.z), _0xbd2c49.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x20d59e.introCamera2.setActiveWithInterp(_0x20d59e.introCamera1.handle, 0x4e20, 0x0, 0x0), _0x258401.api.fadeIn(0x3e8);
        }), _0xbd2c49.events.add('fun.minigames.deathmatch.startGame', () => {
          _0xbd2c49.cameras.exists(_0x20d59e.introCamera1) && (_0x20d59e.introCamera1.destroy(), delete _0x20d59e.introCamera1), _0xbd2c49.cameras.exists(_0x20d59e.introCamera2) && (_0x20d59e.introCamera2.destroy(), delete _0x20d59e.introCamera2), _0xbd2c49.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x258401.api.fadeIn(0x0), _0xbd2c49.events.call('utils.disablePlayerMove', false), _0xbd2c49.players.local.setArmour(0x0), _0x258401.api.toggleChat(true), _0x258401.api.toggleHud(true), _0x258401.api.toggleRadar(true);
          const _0x569edf = _0x31671a.r[_0x20d59e.mapId];
          _0x20d59e.gameArea && _0x20d59e.gameArea.destroy(), _0x20d59e.gameArea = _0xbd2c49.colshapes.newCircle(_0x569edf.center.x, _0x569edf.center.y, _0x569edf.center.radius, -0x1), _0xbd2c49.blips.exists(_0x20d59e.areaBlip) && (_0x20d59e.areaBlip.destroy(), _0x20d59e.areaBlip = undefined), _0x20d59e.areaBlip = _0xbd2c49.blips.new(0x9, new _0xbd2c49.Vector3(_0x569edf.center.x, _0x569edf.center.y, _0x569edf.center.z), {
            'radius': _0x569edf.center.radius,
            'alpha': 0x64,
            'dimension': -0x1,
            'color': 0x5
          }), _0x20d59e.timebars.timeLeft || (_0x20d59e.timebars.timeLeft = new _0x3be8f7.TimerBar('fun.minigames.deathmatch.timeLeft', null, {
            'value': '0 сек'
          })), _0x20d59e.timebars.playerLevel || (_0x20d59e.timebars.playerLevel = new _0x3be8f7.TimerBar('fun.minigames.deathmatch.kills', null, {
            'value': '0'
          })), _0x20d59e.timebars.thirdPlace || (_0x20d59e.timebars.thirdPlace = new _0x3be8f7.TimerBar('#1 ', 'playerScore', {
            'value': '0',
            'pbarBgColor': [0xb4, 0x82, 0x61, 0xff],
            'textColor': [0xff, 0xff, 0xff, 0xff]
          })), _0x20d59e.timebars.secondPlace || (_0x20d59e.timebars.secondPlace = new _0x3be8f7.TimerBar('#2 ', 'playerScore', {
            'value': '0',
            'pbarBgColor': [0x96, 0x99, 0xa1, 0xff],
            'textColor': [0xff, 0xff, 0xff, 0xff]
          })), _0x20d59e.timebars.firstPlace || (_0x20d59e.timebars.firstPlace = new _0x3be8f7.TimerBar('#3 ', 'playerScore', {
            'value': '0',
            'pbarBgColor': [0xd6, 0xb5, 0x63, 0xff],
            'textColor': [0xff, 0xff, 0xff, 0xff]
          })), _0x20d59e.isPlaying = true;
        }), _0xbd2c49.events.add('fun.minigames.deathmatch.updateLeaderBoard', _0x9d2ac8 => {
          _0x9d2ac8 = JSON.parse(_0x9d2ac8);
          const _0x531505 = [];

          for (const [_0x4e9c1e, _0x1e133e] of Object.entries(_0x9d2ac8)) _0x531505.push({
            'id': parseInt(_0x4e9c1e),
            'kills': parseInt(_0x1e133e)
          });

          if (_0x531505.sort((_0x264b96, _0x583033) => _0x583033.kills - _0x264b96.kills), _0x20d59e.leaderBoard = _0x531505, !(_0x20d59e.timebars.playerLevel && _0x20d59e.timebars.firstPlace && _0x20d59e.timebars.secondPlace && _0x20d59e.timebars.thirdPlace)) return;

          let _0x5dcaad, _0xe6d9eb, _0xa577ec, _0xa7b98e, _0x9fab02, _0x2553cb;

          _0x20d59e.timebars.playerLevel.value = '' + (_0x9d2ac8[_0x37727e.remoteId] || 0x0), _0x531505[0x0] && _0x531505[0x0].id >= 0x0 && (_0x5dcaad = _0xbd2c49.players.atRemoteId(_0x531505[0x0].id), _0xa7b98e = _0x531505[0x0].kills), _0x531505[0x1] && _0x531505[0x1].id >= 0x0 && (_0xe6d9eb = _0xbd2c49.players.atRemoteId(_0x531505[0x1].id), _0x9fab02 = _0x531505[0x1].kills), _0x531505[0x2] && _0x531505[0x2].id >= 0x0 && (_0xa577ec = _0xbd2c49.players.atRemoteId(_0x531505[0x2].id), _0x2553cb = _0x531505[0x2].kills), _0x20d59e.timebars.firstPlace.title = '#1: ' + (_0x5dcaad ? _0x258401.api.getName(_0x5dcaad) : ''), _0x20d59e.timebars.firstPlace.value = '' + (_0x5dcaad ? _0xa7b98e : ''), _0x20d59e.timebars.secondPlace.title = '#2: ' + (_0xe6d9eb ? _0x258401.api.getName(_0xe6d9eb) : ''), _0x20d59e.timebars.secondPlace.value = '' + (_0xe6d9eb ? _0x9fab02 : ''), _0x20d59e.timebars.thirdPlace.title = '#3: ' + (_0xa577ec ? _0x258401.api.getName(_0xa577ec) : ''), _0x20d59e.timebars.thirdPlace.value = '' + (_0xa577ec ? _0x2553cb : '');
        }), _0xbd2c49.events.add('fun.minigames.deathmatch.setGameTimer', _0x4373eb => {
          const _0x17ba56 = _0x20d59e.timebars.timeLeft;
          if (parseInt(_0x4373eb) <= 0x0 ? _0x17ba56 && _0x17ba56.visible && (_0x17ba56.visible = false) : parseInt(_0x4373eb) > 0x0 && _0x17ba56 && !_0x17ba56.visible && (_0x17ba56.visible = true), isNaN(_0x4373eb) && _0x17ba56) _0x17ba56.value = '0 сек';else {
            if (_0x17ba56) {
              const _0x4d26cc = parseInt(_0x4373eb / 0x3c),
                    _0x32b16a = parseInt(_0x4373eb % 0x3c);

              _0x17ba56.value = ('0' + _0x4d26cc).slice(-0x2) + ':' + ('0' + _0x32b16a).slice(-0x2), 0x12c === _0x4373eb ? _0x53fcec.includes(_0x258401.api.language.getPlayerLanguage()) && _0x258401.api.playSound('gungame/gungame_5min_left') : 0x3c === _0x4373eb ? _0x53fcec.includes(_0x258401.api.language.getPlayerLanguage()) && _0x258401.api.playSound('gungame/gungame_1min_left') : 0x1e === _0x4373eb ? _0x53fcec.includes(_0x258401.api.language.getPlayerLanguage()) && _0x258401.api.playSound('gungame/gungame_30sec_left') : 0xa === _0x4373eb && _0x53fcec.includes(_0x258401.api.language.getPlayerLanguage()) && _0x258401.api.playSound('gungame/gungame_10sec_left');
            }
          }
        }), _0xbd2c49.events.add('fun.minigames.deathmatch.setupFinishCamera', (_0x4e1475, _0x4177f2) => {
          _0x4e1475 && (_0x258401.api.toggleChat(false), _0x258401.api.toggleHud(false), _0x258401.api.toggleRadar(false), _0x20d59e.isPlaying = false, _0x27ca47(), _0xbd2c49.cameras.exists(_0x20d59e.garageCamera) && _0x20d59e.garageCamera.destroy(), _0x20d59e.garageCamera = _0xbd2c49.cameras.new('default', _0x4e1475, new _0xbd2c49.Vector3(0x0, 0x0, 0x0), 0x28), _0x20d59e.garageCamera.pointAtCoord(_0x4177f2.x, _0x4177f2.y, _0x4177f2.z), _0xbd2c49.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x258401.api.fadeIn(0x7d0));
        }), _0xbd2c49.events.add('fun.minigames.deathmatch.destroyCameras', () => {
          _0xbd2c49.cameras.exists(_0x20d59e.introCamera1) && _0x20d59e.introCamera1.destroy(), _0xbd2c49.cameras.exists(_0x20d59e.introCamera2) && _0x20d59e.introCamera2.destroy(), _0xbd2c49.cameras.exists(_0x20d59e.garageCamera) && _0x20d59e.garageCamera.destroy(), _0xbd2c49.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x20d59e.displayWinnersText = false;
        }), _0xbd2c49.events.add('fun.minigames.deathmatch.finishGame', (_0x158deb = false) => {
          _0x20d59e.isPlaying = false, _0x158deb ? _0xbd2c49.events.call('utils.disablePlayerMove', false) : (_0x258401.api.fadeOut(0x0), _0x258401.api.toggleChat(false), _0x258401.api.toggleHud(false), _0x258401.api.toggleRadar(false), _0xbd2c49.events.call('utils.disablePlayerMove', true)), _0x27ca47(), _0x20d59e.timebars.timeLeft && (_0x20d59e.timebars.timeLeft.visible = false, delete _0x20d59e.timebars.timeLeft), _0x20d59e.timebars.playerLevel && (_0x20d59e.timebars.playerLevel.visible = false, delete _0x20d59e.timebars.playerLevel), _0x20d59e.timebars.thirdPlace && (_0x20d59e.timebars.thirdPlace.visible = false, delete _0x20d59e.timebars.thirdPlace), _0x20d59e.timebars.secondPlace && (_0x20d59e.timebars.secondPlace.visible = false, delete _0x20d59e.timebars.secondPlace), _0x20d59e.timebars.firstPlace && (_0x20d59e.timebars.firstPlace.visible = false, delete _0x20d59e.timebars.firstPlace), _0x20d59e.timebars = {}, _0xbd2c49.colshapes.exists(_0x20d59e.gameArea) && (_0x20d59e.gameArea.destroy(), _0x20d59e.gameArea = undefined), _0xbd2c49.blips.exists(_0x20d59e.areaBlip) && (_0x20d59e.areaBlip.destroy(), _0x20d59e.areaBlip = undefined);
        }), _0xbd2c49.events.add('render', () => {
          const a0_0x2563d6 = {
            _0x5de21e: 0x18d2,
            _0x395454: 0x1349,
            _0x2c0832: 0xbb1,
            _0x188a11: 0x14eb,
            _0x513eeb: 0x1d66,
            _0x1a2bf4: 0x1e35,
            _0x3f011d: 0x1969,
            _0x1012ea: 0x1f30
          };
          _0x20d59e.displayWinnersText && _0x20d59e.leaderBoard.length && _0x20d59e.leaderBoard.forEach((_0x4b7fa8, _0x3edea9) => {
            const _0x8d934d = _0xbd2c49.players.atRemoteId(parseInt(_0x4b7fa8.id));

            if (!_0x8d934d) return;

            let _0x4559ca;

            switch (_0x3edea9) {
              case 0x0:
                _0x4559ca = _0x258401.api.language.translatePlayer('fun.minigames.deathmatch.firstPlace', {
                  'amount': _0x4b7fa8.kills || 0x0
                });
                break;

              case 0x1:
                _0x4559ca = _0x258401.api.language.translatePlayer('fun.minigames.deathmatch.secondPlace', {
                  'amount': _0x4b7fa8.kills || 0x0
                });
                break;

              case 0x2:
                _0x4559ca = _0x258401.api.language.translatePlayer('fun.minigames.deathmatch.thirdPlace', {
                  'amount': _0x4b7fa8.kills || 0x0
                });
            }

            _0xbd2c49.game.graphics.drawText(_0x4559ca, [_0x8d934d.position.x, _0x8d934d.position.y, _0x8d934d.position.z - 0.25], {
              'font': 0x0,
              'color': [0xff, 0xff, 0xff, 0xff],
              'scale': [0.25, 0.25],
              'outline': true
            });
          });
        }), _0xbd2c49.events.add('playerEnterColshape', _0x25f830 => {
          _0x258401.api.isAuthed() && _0x25f830 === _0x20d59e.gameArea && _0x20d59e.isPlaying && _0x27ca47();
        }), _0xbd2c49.events.add('playerExitColshape', _0x1580d5 => {
          _0x258401.api.isAuthed() && _0x1580d5 === _0x20d59e.gameArea && _0x20d59e.isPlaying && (_0xbd2c49.game.audio.playSoundFrontend(-0x1, 'Out_of_Bounds', 'MP_MISSION_COUNTDOWN_SOUNDSET', false), _0xbd2c49.game.ui.messages.showMidsizedShard(_0x258401.api.language.translatePlayer('fun.minigames.deathmatch.outOfZoneTitle'), _0x258401.api.language.translatePlayer('fun.minigames.deathmatch.outOfZoneBody', {
            'amount': 0xa
          }), 0x6, false, false, 0x44c, false), _0x2d5eee(0xa));
        }), _0xbd2c49.events.add('playerDeath2', _0x435924 => {
          _0x435924 === _0x37727e && _0x27ca47();
        });

        const _0x2d5eee = _0x422ad9 => {
          const a0_0x3a5024 = {
            _0x466ed3: 0x1d66,
            _0x41597e: 0x84b,
            _0x4561d4: 0x535,
            _0x4710a0: 0xbb1,
            _0x4447c3: 0x1f86
          };
          _0x20d59e.zoneTimer && _0x27ca47(), _0x20d59e.zoneTimer = _0xbd2c49.game.sleep(0x3e8).then(() => {
            _0x20d59e.isPlaying && (_0x422ad9 > 0x0 ? (_0x422ad9--, _0xbd2c49.game.ui.messages.showMidsizedShard(_0x258401.api.language.translatePlayer('fun.minigames.deathmatch.outOfZoneTitle'), _0x258401.api.language.translatePlayer('fun.minigames.deathmatch.outOfZoneBody', {
              'amount': _0x422ad9
            }), 0x6, false, false, 0x44c, false), _0x2d5eee(_0x422ad9)) : (_0x37727e.setHealth(0x0), _0x27ca47()));
          });
        },
              _0x27ca47 = () => {
          _0x20d59e.zoneTimer && (_0x20d59e.zoneTimer.cancel(), _0x20d59e.zoneTimer = undefined);
        };
      },
      0x3453: (_0x4ee4bf, _0x44ce5d, _0x2e586a) => {
        _0x2e586a(0x40e8), _0x2e586a(0x37de);
      },
      0x40e8: (_0x2f8076, _0x1171a2, _0x5327b9) => {
        'use strict';

        const a0_0x38edfc = {
          _0xfb1eb7: 0x2488,
          _0x223f07: 0x1d86
        },
              a0_0x1c2f10 = {
          _0x341e09: 0xa92,
          _0x96b888: 0x2488,
          _0x835d90: 0x2246,
          _0x32e1fa: 0x112d
        },
              a0_0x17348f = {
          _0x46e3e0: 0x535,
          _0x1b2b98: 0x253d,
          _0x3f7d56: 0x59d,
          _0x32b56a: 0x14d2,
          _0x1a64a6: 0x110c,
          _0x5eb59d: 0x1a5,
          _0xfed354: 0x22c4
        };

        _0x5327b9.r(_0x1171a2);

        var _0x237012 = _0x5327b9(0x16a21),
            _0x4c8959 = _0x5327b9(0x12a76),
            _0x507c9c = _0x5327b9(0x161cd);

        const _0x53f622 = _0x507c9c.players.local;
        let _0x28225e = true,
            _0x522af9 = 0x0;

        const _0x45325b = new _0x507c9c.Vector3(-264.67, -2015.91, 30.14);

        let _0x4933f4,
            _0x4ad0bd = _0x507c9c.colshapes.newSphere(_0x45325b.x, _0x45325b.y, 0x14, 0x14),
            _0x1c6f60 = _0x507c9c.colshapes.newSphere(_0x45325b.x, _0x45325b.y, _0x45325b.z, 0x1, 0x0);

        _0x1c6f60.marker = _0x507c9c.markers.new(0x1, new _0x507c9c.Vector3(_0x45325b.x, _0x45325b.y, _0x45325b.z - 0x1), 0x1, {
          'direction': _0x45325b,
          'rotation': new _0x507c9c.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        }), _0x507c9c.events.add('playerEnterColshape', _0x56d362 => {
          if (_0x237012.api.isAuthed() && !_0x53f622.isInAnyVehicle(true)) return _0x56d362 == _0x1c6f60 ? (_0x4933f4 = _0x56d362, _0x237012.api.displayHelpStringTrans('displayHelpString.toOpenMenu', false, true, 0x1388)) : undefined;
        }), _0x507c9c.events.add('playerExitColshape', _0x5c0386 => {
          _0x237012.api.isAuthed() && (_0x5c0386 == _0x1c6f60 && (_0x4933f4 = null, _0x507c9c.game.ui.clearHelp(true)), _0x5c0386 != _0x4ad0bd || _0x1fdda5() || _0x507c9c.events.callRemote('2973456334'), _0x4ad0bd === _0x5c0386 && _0x507c9c.events.call('fun.minigames.close'));
        }), _0x507c9c.events.add('keys.e', () => {
          if (_0x4933f4 && _0x4933f4 == _0x1c6f60) {
            if (_0x4933f4 = null, !_0x28225e) return _0x237012.api.longNotifyTrans('fun.minigames.onRepair', 'warn');

            _0x507c9c.events.callRemote('2989504199');
          }
        }), _0x507c9c.events.add('fun.minigames.init', _0x2d76c8 => {
          let _0x4b2f03 = {
            'type': 'shooterGames',
            'games': _0x2d76c8
          };
          _0x4c8959.globalBrowser.toggle('miniGames_old', {
            'value': true
          }), _0x4c8959.globalBrowser.emit('miniGames_old_changeGames', JSON.stringify(_0x4b2f03));
        }), _0x507c9c.events.add('fun.minigames.updateData', _0x525116 => {
          if (!_0x5327b9.g.interfaces.miniGames_old) return;
          if (!_0x525116) return;
          let _0x4059ff = {
            'type': 'shooterGames',
            'games': _0x525116
          };

          _0x4c8959.globalBrowser.emit('miniGames_old_changeGamesData', JSON.stringify(_0x4059ff));
        }), _0x507c9c.events.add('fun.minigames.close', () => {
          _0x4c8959.globalBrowser.toggle('miniGames_old', {
            'value': false
          });
        }), _0x507c9c.events.add('fun.minigames.register', _0x361d2d => {
          _0x237012.api.ePress(_0x522af9) || (_0x522af9 = _0x237012.api.ePressUpdate(0x3e8), _0x507c9c.events.callRemote('957831417', _0x361d2d));
        }), _0x507c9c.events.add('fun.minigames.unregister', _0x191119 => {
          _0x237012.api.ePress(_0x522af9) || (_0x522af9 = _0x237012.api.ePressUpdate(0x3e8), _0x507c9c.events.callRemote('1866511964', _0x191119));
        }), _0x507c9c.events.add('fun.minigames.resetData', () => {
          _0x4c8959.globalBrowser.emit('miniGames_old_resetShooters');
        }), _0x507c9c.events.add('fun.minigames.toggleminigames', _0x10d3cc => {
          _0x28225e = !!_0x10d3cc;
        });

        const _0x1fdda5 = () => !!_0x53f622.getVariable('fun.minigames.playing');
      },
      0x16ec4: (_0x1ef2c5, _0x9d0b17, _0x57e175) => {
        'use strict';

        const a0_0x2448cb = {
          _0x4e98df: 0xc55,
          _0x2a51e4: 0xe6d
        },
              a0_0xcc2104 = {
          _0x114112: 0x1708,
          _0x1e7e07: 0x535,
          _0x27c2f8: 0x1708
        },
              a0_0x58ef83 = {
          _0x4d47bb: 0x134d,
          _0x155e83: 0xc55
        },
              a0_0x23cc35 = {
          _0x480565: 0x24bc,
          _0x1eade2: 0x1dc9,
          _0x34fe51: 0x144e,
          _0xfb26a1: 0x137a,
          _0x12ad90: 0x14d2,
          _0x5ceaa7: 0x1da5,
          _0xb7fa4: 0x1da5,
          _0x502cd1: 0xd90,
          _0x15951e: 0x1708
        },
              a0_0x1d98cc = {
          _0x526a4a: 0x1d66,
          _0xe96c54: 0x59d,
          _0x5c516e: 0x14d2,
          _0x6466f8: 0x1da5,
          _0x47fcf1: 0x16a1,
          _0x42e511: 0x13e3
        },
              a0_0x41af45 = {
          _0x5b1732: 0x2405
        },
              a0_0x391f45 = {
          _0x2c56bf: 0x1793,
          _0x2ab059: 0xc49,
          _0x4517ee: 0x11dc,
          _0x2f799a: 0x2422,
          _0x309ec2: 0xc49,
          _0x9f765d: 0x1f30,
          _0xef89fe: 0x1793,
          _0x1a9f1d: 0x2606,
          _0x34035a: 0x2379,
          _0x36577e: 0x1d55,
          _0x83fb8: 0xc49
        };

        _0x57e175.r(_0x9d0b17);

        var _0x228026 = _0x57e175(0x16a21),
            _0x2cd29b = _0x57e175(0xb9cc),
            _0x2fb0f8 = _0x57e175(0x1647),
            _0x51d07d = _0x57e175(0x161cd);

        const _0x32e119 = _0x51d07d.players.local,
              _0x13c97a = 'piano/';

        let _0x11913f,
            _0x4ea7a3,
            _0x301ef9,
            _0x5862e9 = 0x0;

        const _0x9ab159 = [{
          'piano': null,
          'chair': _0x51d07d.objects.new(_0x51d07d.game.joaat('bkr_prop_biker_barstool_04'), new _0x51d07d.Vector3(-1880.29, 2069.03, 139.75), {
            'rotation': new _0x51d07d.Vector3(0x0, 0x0, 0xe4)
          })
        }, {
          'piano': _0x51d07d.objects.new(_0x51d07d.game.streaming.isModelInCdimage(_0x51d07d.game.joaat('prop_royal')) ? _0x51d07d.game.joaat('prop_royal') : _0x51d07d.game.joaat('v_corp_boxpapr1fd'), new _0x51d07d.Vector3(-542.2656, -254.7846, 34.93912), {
            'rotation': new _0x51d07d.Vector3(0x0, 0x0, 0x4b)
          })
        }, {
          'piano': _0x51d07d.objects.new(_0x51d07d.game.streaming.isModelInCdimage(_0x51d07d.game.joaat('prop_royal')) ? _0x51d07d.game.joaat('prop_royal') : _0x51d07d.game.joaat('v_corp_boxpapr1fd'), new _0x51d07d.Vector3(406.0414, 10.75634, 90.92564), {
            'rotation': new _0x51d07d.Vector3(0x0, 0x0, 0x11e)
          })
        }, {
          'piano': _0x51d07d.objects.new(_0x51d07d.game.streaming.isModelInCdimage(_0x51d07d.game.joaat('prop_royal')) ? _0x51d07d.game.joaat('prop_royal') : _0x51d07d.game.joaat('v_corp_boxpapr1fd'), new _0x51d07d.Vector3(-1498.966, 115.1484, 54.58981), {
            'rotation': new _0x51d07d.Vector3(0x0, 0x0, 0x5a)
          })
        }],
              _0xc99222 = [{
          'x': -1880.29,
          'y': 2069.03,
          'z': 0x8d,
          'r': 46.47
        }];
        _0x51d07d.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x9ab159.forEach(_0x550a4f => {
            if (null == _0x550a4f.chair && _0x550a4f.piano) {
              const _0x20777c = _0x51d07d.game.object.getObjectOffsetFromCoords(_0x550a4f.piano.position.x, _0x550a4f.piano.position.y, _0x550a4f.piano.position.z, _0x550a4f.piano.rotation.z, 0x0, 1.75, 0x0);

              _0x550a4f.chair = _0x51d07d.objects.new(_0x51d07d.game.joaat('bkr_prop_biker_barstool_04'), new _0x51d07d.Vector3(_0x20777c.x, _0x20777c.y, _0x20777c.z - 0.15), {
                'rotation': new _0x51d07d.Vector3(0x0, 0x0, _0x550a4f.piano.rotation.z)
              }), _0xc99222.push({
                'x': _0x20777c.x,
                'y': _0x20777c.y,
                'z': _0x20777c.z + 0x1,
                'r': _0x550a4f.piano.rotation.z - 0xb4
              });
            }
          }), _0xc99222.forEach((_0x1679da, _0xcd35d8) => {
            _0x51d07d.colshapes.newSphere(_0x1679da.x, _0x1679da.y, _0x1679da.z, 0x1, -0x1).pianoId = _0xcd35d8;
          });
        }), _0x51d07d.events.add('playerEnterColshape', _0x353b4c => {
          _0x228026.api.isAuthed() && undefined !== _0x353b4c.pianoId && null == _0x4ea7a3 && (_0x301ef9 = _0x353b4c, _0x228026.api.displayHelpStringTrans('displayHelpString.toPlay', false, true, 0x1388));
        }), _0x51d07d.events.add('playerExitColshape', _0x4ca0fe => {
          _0x228026.api.isAuthed() && undefined !== _0x4ca0fe.pianoId && (_0x301ef9 = null, _0x51d07d.game.ui.clearHelp(true));
        }), _0x51d07d.events.add('keys.e', async () => {
          null != _0x301ef9 && (_0x51d07d.game.ui.clearHelp(true), _0x51d07d.events.callRemote('2662060943', _0x301ef9.pianoId), _0x301ef9 = undefined);
        }), _0x51d07d.events.add('keys.tab', () => {
          _0x32e119.isDead() || _0x51d07d.gui.cursor.visible || null != _0x4ea7a3 && (_0x228026.api.stopAnim(), _0x51d07d.events.callRemote('2485156460'), _0x51d07d.game.ui.clearHelp(true), _0x4ea7a3 = null, _0x228026.api.usingSystemAnim(false));
        }), _0x51d07d.events.add('fun.piano.start', _0xd69ba7 => {
          _0x5862e9 = Date.now(), _0x57e175.g.piano = true, _0x4ea7a3 = _0xd69ba7;
          const _0x4c4ba5 = _0xc99222[_0xd69ba7];
          _0x228026.api.setPlayerPos(_0x32e119, new _0x51d07d.Vector3(_0x4c4ba5.x, _0x4c4ba5.y, _0x4c4ba5.z)), _0x32e119.setHeading(_0x4c4ba5.r), _0x228026.api.taskPlayAnim('misslester1aig_9', 'idle_sitting_peda', 0x1, true), _0x228026.api.displayHelpStringTrans('displayHelpString.keyboardToPlay', false, true, 0x2710), _0x3fa086(), _0x228026.api.usingSystemAnim(true), _0x228026.api.toggleChat(false), _0x32e119.freezePosition(true), _0x51d07d.objects.exists(_0x9ab159[_0xd69ba7].chair) && _0x9ab159[_0xd69ba7].chair.setNoCollision(_0x51d07d.players.local.handle, false);
        }), _0x51d07d.events.add('fun.piano.stop', () => {
          _0x57e175.g.piano = false, _0x4ea7a3 = null, _0x5d0c5b(), _0x228026.api.toggleChat(true), _0x32e119.freezePosition(false);
        }), _0x51d07d.events.add('render', () => {
          _0x57e175.g.piano && (Date.now() - _0x5862e9 < 0x1f4 || (_0x51d07d.game.ui.setPauseMenuActive(false), Object.values(_0x2fb0f8.Z).forEach(_0x3699ac => {
            !_0x51d07d.keys.isDown(_0x3699ac.Key) || _0x51d07d.keys.isUp(_0x3699ac.Key) || _0x3699ac.State ? _0x3699ac.State && _0x51d07d.keys.isUp(_0x3699ac.Key) && (_0x3699ac.State = false) : _0x3699ac.Shift && (_0x51d07d.keys.isDown(0xa0) || _0x51d07d.keys.isDown(0xa1)) ? (_0x3699ac.State = true, _0x51d07d.events.callRemote('63480962', _0x3699ac.Shift.Sound)) : (_0x3699ac.State = true, _0x51d07d.events.callRemote('63480962', _0x3699ac.Sound));
          })));
        }), _0x51d07d.events.add('auth.client.onPlayerAuthAccount', () => {
          Object.values(_0x2fb0f8.Z).forEach(_0x359b3d => {
            _0x359b3d.Shift && _0x359b3d.Shift.Sound ? _0x228026.api.cacheSound(_0x13c97a + _0x359b3d.Shift.Sound) : _0x359b3d.Sound && _0x228026.api.cacheSound(_0x13c97a + _0x359b3d.Sound);
          });
        });

        const _0x3fa086 = () => {
          try {
            _0x5d0c5b(), _0x11913f = new _0x2cd29b.InstructionalButtons(-0x1), _0x11913f.addButton('ibuttons.exit', 0x25), _0x11913f.toggleHud(true);
          } catch (_0x4db047) {
            _0x228026.api.sendError(_0x4db047);
          }
        },
              _0x5d0c5b = () => {
          try {
            _0x11913f && _0x11913f.resetBar();
          } catch (_0x3a53fc) {
            _0x228026.api.sendError(_0x3a53fc);
          }
        };
      },
      0xfab1: (_0x9b14a5, _0x1497a9, _0x448eb7) => {
        _0x448eb7(0x967f);
      },
      0x967f: (_0x3e6d82, _0x4ba7c0, _0x415b51) => {
        'use strict';

        const a0_0x598a7f = {
          _0x2d449e: 0x1be4,
          _0x2bf891: 0x1d66,
          _0x4adca4: 0x1be4,
          _0x48f940: 0x1fe9,
          _0x4d4cf2: 0x1d66,
          _0x524e06: 0x1be4,
          _0x3b426a: 0x2438
        },
              a0_0x4783de = {
          _0x2610e0: 0x1af1,
          _0x3152fc: 0x10c9,
          _0x2ffb34: 0x1a65,
          _0x1ddd8c: 0xf80,
          _0x2ef9a3: 0x1e2c,
          _0x122f0f: 0x943,
          _0x1dfb16: 0x135a,
          _0x5ae36b: 0x19d2,
          _0x2f5168: 0x235b,
          _0x3702d4: 0x1291,
          _0xd21c3c: 0xedd,
          _0x3be5a1: 0x19d2,
          _0xc2acd3: 0xedd,
          _0x551084: 0x14cf,
          _0x584981: 0x1d66,
          _0x2488b8: 0xf2f,
          _0x4f6ea6: 0x214,
          _0x21061f: 0x23ef,
          _0x45c2d6: 0x795
        },
              a0_0xb387d6 = {
          _0x201459: 0x1b37,
          _0xdb3568: 0xeac,
          _0x520734: 0x1af1,
          _0x42b95b: 0x1af1,
          _0x34e8bf: 0xf47,
          _0x524d85: 0xf39,
          _0x3c0212: 0x1af1,
          _0x5ea98c: 0x1e2c,
          _0x24cb0f: 0x943,
          _0x41b11e: 0x1a65,
          _0x517e94: 0x196c,
          _0x3c1097: 0x1f45,
          _0x8689e2: 0x196c,
          _0x42e93b: 0x1af1,
          _0x1d531b: 0x19d2,
          _0x1882a0: 0x235b,
          _0x1aad93: 0x16c5,
          _0x2b5f03: 0x2530,
          _0x3418d9: 0x135a,
          _0x8788f7: 0x1082
        },
              a0_0x4cb59a = {
          _0x397a2a: 0x135a,
          _0x4a3196: 0x2001,
          _0xb0e1f0: 0xedd,
          _0x4ced85: 0x2530
        },
              a0_0x1e63be = {
          _0x3c4973: 0x1e42,
          _0x4371a0: 0x1366,
          _0x8fba89: 0x16c5,
          _0x34a28c: 0x19e6,
          _0x22a844: 0x17f
        },
              a0_0x39e273 = {
          _0x36101f: 0x1e42,
          _0x11a02f: 0x1366,
          _0xdf5783: 0x16c5,
          _0xb23b94: 0x19e6,
          _0x5200ba: 0x12c8,
          _0x56c211: 0x135a,
          _0x5d70b0: 0x2323,
          _0x143e18: 0x2001
        },
              a0_0x153213 = {
          _0xc28180: 0xeb9,
          _0xd129ca: 0x1af1,
          _0x154674: 0x10c9,
          _0x2106b5: 0x1e2c,
          _0x5ba8d5: 0x1d87,
          _0x23a172: 0x1d87,
          _0x37e497: 0x95f,
          _0x27c4ac: 0x1f7f,
          _0x43499f: 0x196c,
          _0x2c07d5: 0x12e5,
          _0x154099: 0x135a,
          _0x21e508: 0xb11,
          _0x39c186: 0x1a2c,
          _0xc549e3: 0x135a,
          _0x3f8216: 0x1af1,
          _0x213bed: 0x1af1,
          _0x2e5046: 0x1a65,
          _0x867862: 0xf80,
          _0x2d72b7: 0xedd,
          _0x1147e5: 0x1293,
          _0x11db11: 0x2438,
          _0x19370f: 0x14cf,
          _0x1d186a: 0x14cf,
          _0x2f766d: 0xf2f,
          _0x46bb9b: 0x23ef,
          _0x1267dd: 0xedd,
          _0x31760a: 0x2530,
          _0x14c0eb: 0x795,
          _0x5633b8: 0x1af1,
          _0xf2c6e6: 0x2438,
          _0xce042e: 0x2247,
          _0x312da3: 0x2247,
          _0x13c7e9: 0x214,
          _0x36b229: 0x2530,
          _0x1dcee1: 0x19d2,
          _0x299b6b: 0x135a,
          _0x3debc8: 0x5d1,
          _0xcd7ad: 0x16c3,
          _0x873ced: 0x1e42,
          _0x14e36f: 0x1e42,
          _0x55322d: 0x1de9,
          _0x27e182: 0x2650,
          _0x303cbd: 0x1edc,
          _0x51e919: 0x2001,
          _0x206712: 0x1d66,
          _0x1b58fc: 0x9ba,
          _0x2813bc: 0x82a,
          _0xfd052d: 0x535,
          _0xf5bfe8: 0x91b,
          _0xfeab6f: 0x11ed,
          _0x19966f: 0x19d2,
          _0x28b2e2: 0x16c3,
          _0x453722: 0x1291,
          _0x5ae990: 0x17f1,
          _0xda995f: 0x2650,
          _0x108c3d: 0x2681,
          _0x5aae32: 0x235b,
          _0x42efd0: 0x1291
        },
              a0_0x4068fc = {
          _0xd2a5f3: 0x1f7f
        },
              a0_0xf876cc = {
          _0x4ca356: 0xe41
        },
              a0_0x2a5833 = {
          _0x169819: 0x72f,
          _0x5b7149: 0x2664,
          _0x15351c: 0x1d31,
          _0x581b3d: 0x19d2,
          _0x5b36cc: 0x1a54,
          _0x3a179a: 0x72f,
          _0x5dd137: 0xf45,
          _0x51d36b: 0x5f4
        },
              a0_0xf214fd = {
          _0x4223eb: 0x1d31,
          _0x129109: 0x1d55,
          _0x1ee483: 0x1d55,
          _0x9ee2c8: 0x565
        },
              a0_0x1d612a = {
          _0x54bb9f: 0x1e2c,
          _0x3a3c4c: 0x1e2c,
          _0x1a9dfc: 0x943,
          _0x2792de: 0x1e2c,
          _0x5a94b3: 0x1a65,
          _0x26bef2: 0xf80,
          _0x59b932: 0x1f45,
          _0x5a856f: 0x196c
        };

        _0x415b51.r(_0x4ba7c0);

        var _0x3c0717 = _0x415b51(0x16a21),
            _0x1f1b3c = _0x415b51(0xd194);

        const _0x1112c9 = new Uint8Array([0x0, 0x61, 0x73, 0x6d, 0x1, 0x0, 0x0, 0x0, 0x1, 0x5e, 0x11, 0x60, 0x0, 0x0, 0x60, 0x4, 0x7f, 0x7c, 0x7c, 0x7c, 0x0, 0x60, 0x2, 0x7f, 0x7c, 0x0, 0x60, 0x1, 0x7f, 0x1, 0x7f, 0x60, 0x0, 0x1, 0x7f, 0x60, 0x0, 0x1, 0x7c, 0x60, 0x1, 0x7c, 0x1, 0x7c, 0x60, 0x2, 0x7f, 0x7f, 0x0, 0x60, 0x2, 0x7f, 0x7f, 0x1, 0x7f, 0x60, 0x1, 0x7f, 0x0, 0x60, 0x1, 0x7c, 0x0, 0x60, 0x3, 0x7c, 0x7c, 0x7f, 0x1, 0x7c, 0x60, 0x2, 0x7c, 0x7f, 0x1, 0x7c, 0x60, 0x5, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x1, 0x7f, 0x60, 0x3, 0x7f, 0x7f, 0x7f, 0x1, 0x7f, 0x60, 0x2, 0x7c, 0x7f, 0x1, 0x7f, 0x60, 0x2, 0x7c, 0x7c, 0x1, 0x7c, 0x3, 0x1e, 0x1d, 0x0, 0x1, 0x2, 0x2, 0x3, 0x3, 0x4, 0x5, 0x7, 0x9, 0x4, 0x9, 0x5, 0xa, 0x5, 0xa, 0x5, 0x9, 0x4, 0x6, 0xb, 0xc, 0xd, 0xf, 0x10, 0x6, 0xe, 0x8, 0x0, 0x4, 0x5, 0x1, 0x70, 0x1, 0x1, 0x1, 0x5, 0x3, 0x1, 0x0, 0x2, 0x6, 0xf, 0x2, 0x7f, 0x1, 0x41, 0xf0, 0xc1, 0x4, 0xb, 0x7f, 0x0, 0x41, 0xf0, 0xc1, 0x4, 0xb, 0x7, 0xd4, 0x2, 0x15, 0x6, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2, 0x0, 0x6, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x0, 0x0, 0xc, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x1, 0xc, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x0, 0x2, 0x9, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x0, 0x3, 0x14, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x0, 0x4, 0x14, 0x67, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x0, 0x5, 0x7, 0x67, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x0, 0x6, 0xd, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x0, 0x7, 0x6, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x0, 0x8, 0x17, 0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x0, 0x9, 0x17, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x0, 0xa, 0xf, 0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x0, 0xb, 0xf, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x0, 0xc, 0xf, 0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x0, 0xd, 0xf, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x0, 0xe, 0xb, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x0, 0xf, 0xb, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x0, 0x10, 0xd, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x0, 0x11, 0xd, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x0, 0x12, 0xb, 0x5f, 0x5f, 0x68, 0x65, 0x61, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x3, 0x1, 0xa, 0xac, 0x3b, 0x1d, 0x2, 0x0, 0xb, 0x34, 0x0, 0x20, 0x0, 0x41, 0xc, 0x6c, 0x22, 0x0, 0x41, 0x84, 0x88, 0x80, 0x80, 0x0, 0x6a, 0x20, 0x2, 0xb6, 0x38, 0x2, 0x0, 0x20, 0x0, 0x41, 0x80, 0x88, 0x80, 0x80, 0x0, 0x6a, 0x20, 0x1, 0xb6, 0x38, 0x2, 0x0, 0x20, 0x0, 0x41, 0x88, 0x88, 0x80, 0x80, 0x0, 0x6a, 0x20, 0x3, 0xb6, 0x38, 0x2, 0x0, 0xb, 0x14, 0x0, 0x20, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x20, 0x1, 0xb6, 0x38, 0x2, 0x0, 0xb, 0x14, 0x0, 0x20, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0xa4, 0x80, 0x80, 0x0, 0x6a, 0x20, 0x1, 0xb6, 0x38, 0x2, 0x0, 0xb, 0x10, 0x0, 0x41, 0xde, 0x1, 0x20, 0x0, 0x41, 0x7f, 0x6a, 0x20, 0x0, 0x41, 0x1, 0x48, 0x1b, 0xb, 0x12, 0x0, 0x41, 0x1, 0x20, 0x0, 0x41, 0x1, 0x6a, 0x22, 0x0, 0x20, 0x0, 0x41, 0xdf, 0x1, 0x4b, 0x1b, 0xb, 0x5, 0x0, 0x41, 0xe0, 0x1, 0xb, 0xa4, 0x1, 0x3, 0x2, 0x7f, 0x1, 0x7d, 0x2, 0x7c, 0x41, 0x1, 0x41, 0x0, 0x28, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0x22, 0x0, 0x41, 0x1, 0x6a, 0x22, 0x1, 0x20, 0x1, 0x41, 0xdf, 0x1, 0x4b, 0x1b, 0x22, 0x1, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x20, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x93, 0x22, 0x2, 0xbb, 0x21, 0x3, 0x20, 0x0, 0x41, 0xc, 0x6c, 0x41, 0x88, 0x88, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x20, 0x1, 0x41, 0xc, 0x6c, 0x41, 0x88, 0x88, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x93, 0xbb, 0x21, 0x4, 0x2, 0x40, 0x20, 0x2, 0x43, 0x0, 0x0, 0x0, 0x0, 0x60, 0x20, 0x2, 0x20, 0x2, 0x5c, 0x72, 0xd, 0x0, 0x20, 0x3, 0x41, 0x0, 0x2a, 0x2, 0x90, 0xa4, 0x80, 0x80, 0x0, 0xbb, 0xa0, 0x21, 0x3, 0xb, 0x20, 0x4, 0x20, 0x3, 0xa3, 0x10, 0x93, 0x80, 0x80, 0x80, 0x0, 0x10, 0x99, 0x80, 0x80, 0x80, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x40, 0xa2, 0xb, 0x8f, 0x7, 0x4, 0x3, 0x7c, 0x1, 0x7d, 0x1, 0x7f, 0x1, 0x7c, 0x2, 0x40, 0x20, 0x0, 0x45, 0xd, 0x0, 0x2, 0x40, 0x41, 0x0, 0x28, 0x2, 0xb8, 0xab, 0x80, 0x80, 0x0, 0x22, 0x0, 0xd, 0x0, 0x41, 0x0, 0x20, 0x1, 0x36, 0x2, 0xb8, 0xab, 0x80, 0x80, 0x0, 0x20, 0x1, 0x21, 0x0, 0xb, 0x41, 0x0, 0x20, 0x1, 0x36, 0x2, 0xb8, 0xab, 0x80, 0x80, 0x0, 0x41, 0x0, 0x20, 0x1, 0x20, 0x0, 0x6b, 0x41, 0xe8, 0x7, 0x6e, 0xb8, 0x39, 0x3, 0xb0, 0xab, 0x80, 0x80, 0x0, 0xb, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x41, 0x0, 0x28, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0x22, 0x1, 0x41, 0x13, 0x4a, 0xd, 0x0, 0x41, 0x0, 0x2b, 0x3, 0xa8, 0xab, 0x80, 0x80, 0x0, 0x22, 0x2, 0x41, 0x0, 0x2b, 0x3, 0xb0, 0xab, 0x80, 0x80, 0x0, 0x22, 0x3, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x40, 0xa2, 0x20, 0x3, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0xc0, 0xa2, 0x20, 0x2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x40, 0x63, 0x1b, 0xa0, 0x22, 0x2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0xc0, 0xa0, 0x22, 0x4, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x1, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0x0, 0xc, 0x2, 0xb, 0x41, 0x1, 0x20, 0x1, 0x41, 0x1, 0x6a, 0x22, 0x0, 0x20, 0x0, 0x41, 0xdf, 0x1, 0x4b, 0x1b, 0x22, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x20, 0x1, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x93, 0x22, 0x5, 0xbb, 0x21, 0x3, 0x20, 0x1, 0x41, 0xc, 0x6c, 0x41, 0x88, 0x88, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x20, 0x0, 0x41, 0xc, 0x6c, 0x41, 0x88, 0x88, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0x93, 0xbb, 0x21, 0x2, 0x2, 0x40, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x60, 0x20, 0x5, 0x20, 0x5, 0x5c, 0x72, 0xd, 0x0, 0x20, 0x3, 0x41, 0x0, 0x2a, 0x2, 0x90, 0xa4, 0x80, 0x80, 0x0, 0xbb, 0xa0, 0x21, 0x3, 0xb, 0x20, 0x2, 0x20, 0x3, 0xa3, 0x10, 0x93, 0x80, 0x80, 0x80, 0x0, 0x10, 0x99, 0x80, 0x80, 0x80, 0x0, 0x21, 0x3, 0x41, 0x0, 0x2b, 0x3, 0xa8, 0xab, 0x80, 0x80, 0x0, 0x20, 0x3, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x40, 0xa2, 0x41, 0x0, 0x2b, 0x3, 0xb0, 0xab, 0x80, 0x80, 0x0, 0x22, 0x3, 0xa2, 0xa0, 0x21, 0x2, 0xc, 0x2, 0xb, 0x20, 0x4, 0xaa, 0x21, 0x0, 0xb, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x40, 0x20, 0x2, 0x20, 0x0, 0x20, 0x0, 0x41, 0x1f, 0x75, 0x22, 0x6, 0x6a, 0x20, 0x6, 0x73, 0x41, 0x1, 0x48, 0x1b, 0x21, 0x2, 0xb, 0x41, 0x0, 0x20, 0x2, 0x39, 0x3, 0xa8, 0xab, 0x80, 0x80, 0x0, 0x41, 0x0, 0x41, 0x0, 0x2b, 0x3, 0xa0, 0xab, 0x80, 0x80, 0x0, 0x22, 0x7, 0x20, 0x2, 0x20, 0x3, 0xa2, 0xa0, 0x22, 0x3, 0x20, 0x3, 0x41, 0x0, 0x2a, 0x2, 0x94, 0x9d, 0x80, 0x80, 0x0, 0xbb, 0x22, 0x4, 0x20, 0x3, 0x20, 0x4, 0x63, 0x20, 0x3, 0x20, 0x3, 0x62, 0x20, 0x4, 0x20, 0x4, 0x62, 0x22, 0x0, 0x72, 0x72, 0x1b, 0x20, 0x7, 0x20, 0x4, 0x66, 0x20, 0x7, 0x20, 0x7, 0x62, 0x20, 0x0, 0x72, 0x72, 0x1b, 0x22, 0x3, 0x39, 0x3, 0xa0, 0xab, 0x80, 0x80, 0x0, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x20, 0x2, 0x20, 0x2, 0x62, 0x72, 0x45, 0xd, 0x0, 0x2, 0x40, 0x20, 0x3, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x20, 0x3, 0x20, 0x3, 0x62, 0x72, 0xd, 0x0, 0x41, 0xde, 0x1, 0x21, 0x1, 0x41, 0x0, 0x41, 0xde, 0x1, 0x36, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0x41, 0x0, 0x20, 0x3, 0x41, 0x0, 0x2a, 0x2, 0x8c, 0xa4, 0x80, 0x80, 0x0, 0xbb, 0xa0, 0x22, 0x3, 0x39, 0x3, 0xa0, 0xab, 0x80, 0x80, 0x0, 0xb, 0x20, 0x3, 0x20, 0x1, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0xbb, 0x64, 0xd, 0x1, 0x3, 0x40, 0x20, 0x3, 0x41, 0xde, 0x1, 0x20, 0x1, 0x41, 0x7f, 0x6a, 0x20, 0x1, 0x41, 0x1, 0x48, 0x1b, 0x22, 0x1, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0xbb, 0x22, 0x2, 0x65, 0x20, 0x3, 0x20, 0x3, 0x62, 0x20, 0x2, 0x20, 0x2, 0x62, 0x72, 0x72, 0xd, 0x0, 0xc, 0x2, 0xb, 0xb, 0x2, 0x40, 0x20, 0x3, 0x41, 0x0, 0x2a, 0x2, 0x8c, 0xa4, 0x80, 0x80, 0x0, 0xbb, 0x22, 0x7, 0x63, 0x20, 0x3, 0x20, 0x3, 0x62, 0x20, 0x7, 0x20, 0x7, 0x62, 0x72, 0x72, 0xd, 0x0, 0x41, 0x0, 0x21, 0x1, 0x41, 0x0, 0x20, 0x3, 0x20, 0x7, 0xa1, 0x20, 0x4, 0x41, 0x8c, 0xab, 0x80, 0x80, 0x0, 0x41, 0xc0, 0xab, 0x80, 0x80, 0x0, 0x10, 0x9b, 0x80, 0x80, 0x80, 0x0, 0x1b, 0x22, 0x3, 0x39, 0x3, 0xa0, 0xab, 0x80, 0x80, 0x0, 0x41, 0x0, 0x41, 0x0, 0x36, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0xb, 0x2, 0x40, 0x20, 0x3, 0x41, 0x1, 0x20, 0x1, 0x41, 0x1, 0x6a, 0x22, 0x0, 0x20, 0x0, 0x41, 0xdf, 0x1, 0x4b, 0x1b, 0x22, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0xbb, 0x63, 0xd, 0x0, 0x3, 0x40, 0x20, 0x3, 0x41, 0x1, 0x20, 0x0, 0x41, 0x1, 0x6a, 0x22, 0x0, 0x20, 0x0, 0x41, 0xdf, 0x1, 0x4b, 0x1b, 0x22, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0xbb, 0x63, 0x45, 0xd, 0x0, 0xb, 0xb, 0x20, 0x1, 0x20, 0x0, 0x41, 0x7f, 0x6a, 0x22, 0x0, 0x46, 0xd, 0x0, 0x20, 0x2, 0x20, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0xa4, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0xbb, 0x22, 0x3, 0x61, 0xd, 0x1, 0x41, 0x0, 0x20, 0x3, 0x39, 0x3, 0xa8, 0xab, 0x80, 0x80, 0x0, 0x20, 0x0, 0x21, 0x1, 0xb, 0x41, 0x0, 0x20, 0x1, 0x36, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0xf, 0xb, 0x41, 0x0, 0x20, 0x0, 0x36, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0xb, 0xd, 0x0, 0x41, 0x0, 0x20, 0x0, 0x36, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0xb, 0xb, 0x0, 0x41, 0x0, 0x28, 0x2, 0x98, 0xab, 0x80, 0x80, 0x0, 0xb, 0x1b, 0x0, 0x41, 0x0, 0x20, 0x0, 0x41, 0x2, 0x74, 0x41, 0x90, 0x9d, 0x80, 0x80, 0x0, 0x6a, 0x2a, 0x2, 0x0, 0xbb, 0x39, 0x3, 0xa0, 0xab, 0x80, 0x80, 0x0, 0xb, 0xb, 0x0, 0x41, 0x0, 0x2b, 0x3, 0xa0, 0xab, 0x80, 0x80, 0x0, 0xb, 0xd, 0x0, 0x41, 0x0, 0x20, 0x0, 0x39, 0x3, 0xa8, 0xab, 0x80, 0x80, 0x0, 0xb, 0xb, 0x0, 0x41, 0x0, 0x2b, 0x3, 0xa8, 0xab, 0x80, 0x80, 0x0, 0xb, 0xd, 0x0, 0x41, 0x0, 0x20, 0x0, 0x39, 0x3, 0xb0, 0xab, 0x80, 0x80, 0x0, 0xb, 0xb, 0x0, 0x41, 0x0, 0x2b, 0x3, 0xb0, 0xab, 0x80, 0x80, 0x0, 0xb, 0xd, 0x0, 0x41, 0x0, 0x20, 0x0, 0x36, 0x2, 0xb8, 0xab, 0x80, 0x80, 0x0, 0xb, 0xb, 0x0, 0x41, 0x0, 0x28, 0x2, 0xb8, 0xab, 0x80, 0x80, 0x0, 0xb, 0xd2, 0x4, 0x3, 0x1, 0x7e, 0x1, 0x7f, 0x2, 0x7c, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x0, 0xbd, 0x22, 0x1, 0x42, 0x20, 0x88, 0xa7, 0x41, 0xff, 0xff, 0xff, 0xff, 0x7, 0x71, 0x22, 0x2, 0x41, 0x80, 0x80, 0xc0, 0xff, 0x3, 0x49, 0xd, 0x0, 0x20, 0x2, 0x41, 0x80, 0x80, 0xc0, 0x80, 0x7c, 0x6a, 0x20, 0x1, 0xa7, 0x72, 0x45, 0xd, 0x1, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x20, 0x0, 0xa1, 0xa3, 0xf, 0xb, 0x2, 0x40, 0x20, 0x2, 0x41, 0xff, 0xff, 0xff, 0xfe, 0x3, 0x4b, 0xd, 0x0, 0x20, 0x2, 0x41, 0x80, 0x80, 0x40, 0x6a, 0x41, 0x80, 0x80, 0x80, 0xf2, 0x3, 0x4f, 0xd, 0x2, 0x20, 0x0, 0xf, 0xb, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x20, 0x0, 0x99, 0xa1, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x3f, 0xa2, 0x22, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x44, 0x9, 0xf7, 0xfd, 0xd, 0xe1, 0x3d, 0x2, 0x3f, 0xa2, 0x44, 0x88, 0xb2, 0x1, 0x75, 0xe0, 0xef, 0x49, 0x3f, 0xa0, 0xa2, 0x44, 0x3b, 0x8f, 0x68, 0xb5, 0x28, 0x82, 0xa4, 0xbf, 0xa0, 0xa2, 0x44, 0x55, 0x44, 0x88, 0xe, 0x55, 0xc1, 0xc9, 0x3f, 0xa0, 0xa2, 0x44, 0x7d, 0x6f, 0xeb, 0x3, 0x12, 0xd6, 0xd4, 0xbf, 0xa0, 0xa2, 0x44, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xc5, 0x3f, 0xa0, 0xa2, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x44, 0x82, 0x92, 0x2e, 0xb1, 0xc5, 0xb8, 0xb3, 0x3f, 0xa2, 0x44, 0x59, 0x1, 0x8d, 0x1b, 0x6c, 0x6, 0xe6, 0xbf, 0xa0, 0xa2, 0x44, 0xc8, 0x8a, 0x59, 0x9c, 0xe5, 0x2a, 0x0, 0x40, 0xa0, 0xa2, 0x44, 0x4b, 0x2d, 0x8a, 0x1c, 0x27, 0x3a, 0x3, 0xc0, 0xa0, 0xa2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0xa0, 0xa3, 0x21, 0x3, 0x20, 0x0, 0x9f, 0x21, 0x4, 0x20, 0x2, 0x41, 0xb3, 0xe6, 0xbc, 0xff, 0x3, 0x49, 0xd, 0x2, 0x44, 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xf9, 0x3f, 0x20, 0x4, 0x20, 0x4, 0x20, 0x3, 0xa2, 0xa0, 0x22, 0x0, 0x20, 0x0, 0xa0, 0x44, 0x7, 0x5c, 0x14, 0x33, 0x26, 0xa6, 0x91, 0xbc, 0xa0, 0xa1, 0x21, 0x0, 0xc, 0x3, 0xb, 0x20, 0x0, 0x44, 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xf9, 0x3f, 0xa2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x38, 0xa0, 0xf, 0xb, 0x20, 0x0, 0x20, 0x0, 0xa2, 0x22, 0x4, 0x20, 0x4, 0x20, 0x4, 0x20, 0x4, 0x20, 0x4, 0x20, 0x4, 0x44, 0x9, 0xf7, 0xfd, 0xd, 0xe1, 0x3d, 0x2, 0x3f, 0xa2, 0x44, 0x88, 0xb2, 0x1, 0x75, 0xe0, 0xef, 0x49, 0x3f, 0xa0, 0xa2, 0x44, 0x3b, 0x8f, 0x68, 0xb5, 0x28, 0x82, 0xa4, 0xbf, 0xa0, 0xa2, 0x44, 0x55, 0x44, 0x88, 0xe, 0x55, 0xc1, 0xc9, 0x3f, 0xa0, 0xa2, 0x44, 0x7d, 0x6f, 0xeb, 0x3, 0x12, 0xd6, 0xd4, 0xbf, 0xa0, 0xa2, 0x44, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xc5, 0x3f, 0xa0, 0xa2, 0x20, 0x4, 0x20, 0x4, 0x20, 0x4, 0x20, 0x4, 0x44, 0x82, 0x92, 0x2e, 0xb1, 0xc5, 0xb8, 0xb3, 0x3f, 0xa2, 0x44, 0x59, 0x1, 0x8d, 0x1b, 0x6c, 0x6, 0xe6, 0xbf, 0xa0, 0xa2, 0x44, 0xc8, 0x8a, 0x59, 0x9c, 0xe5, 0x2a, 0x0, 0x40, 0xa0, 0xa2, 0x44, 0x4b, 0x2d, 0x8a, 0x1c, 0x27, 0x3a, 0x3, 0xc0, 0xa0, 0xa2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0xa0, 0xa3, 0x20, 0x0, 0xa2, 0x20, 0x0, 0xa0, 0xf, 0xb, 0x44, 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xe9, 0x3f, 0x20, 0x4, 0x20, 0x4, 0xa0, 0x20, 0x3, 0xa2, 0x44, 0x7, 0x5c, 0x14, 0x33, 0x26, 0xa6, 0x91, 0x3c, 0x20, 0x0, 0x20, 0x4, 0xbd, 0x42, 0x80, 0x80, 0x80, 0x80, 0x70, 0x83, 0xbf, 0x22, 0x3, 0x20, 0x3, 0xa2, 0xa1, 0x20, 0x4, 0x20, 0x3, 0xa0, 0xa3, 0x22, 0x0, 0x20, 0x0, 0xa0, 0xa1, 0xa1, 0x44, 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xe9, 0x3f, 0x20, 0x3, 0x20, 0x3, 0xa0, 0xa1, 0xa1, 0xa1, 0x21, 0x0, 0xb, 0x20, 0x0, 0x9a, 0x20, 0x0, 0x20, 0x1, 0x42, 0x0, 0x53, 0x1b, 0xb, 0x9b, 0x1, 0x1, 0x3, 0x7c, 0x20, 0x0, 0x20, 0x0, 0xa2, 0x22, 0x3, 0x20, 0x3, 0x20, 0x3, 0xa2, 0xa2, 0x20, 0x3, 0x44, 0x7c, 0xd5, 0xcf, 0x5a, 0x3a, 0xd9, 0xe5, 0x3d, 0xa2, 0x44, 0xeb, 0x9c, 0x2b, 0x8a, 0xe6, 0xe5, 0x5a, 0xbe, 0xa0, 0xa2, 0x20, 0x3, 0x20, 0x3, 0x44, 0x7d, 0xfe, 0xb1, 0x57, 0xe3, 0x1d, 0xc7, 0x3e, 0xa2, 0x44, 0xd5, 0x61, 0xc1, 0x19, 0xa0, 0x1, 0x2a, 0xbf, 0xa0, 0xa2, 0x44, 0xa6, 0xf8, 0x10, 0x11, 0x11, 0x11, 0x81, 0x3f, 0xa0, 0xa0, 0x21, 0x4, 0x20, 0x3, 0x20, 0x0, 0xa2, 0x21, 0x5, 0x2, 0x40, 0x20, 0x2, 0x45, 0xd, 0x0, 0x20, 0x0, 0x20, 0x5, 0x44, 0x49, 0x55, 0x55, 0x55, 0x55, 0x55, 0xc5, 0x3f, 0xa2, 0x20, 0x3, 0x20, 0x1, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x3f, 0xa2, 0x20, 0x5, 0x20, 0x4, 0xa2, 0xa1, 0xa2, 0x20, 0x1, 0xa1, 0xa0, 0xa1, 0xf, 0xb, 0x20, 0x5, 0x20, 0x3, 0x20, 0x4, 0xa2, 0x44, 0x49, 0x55, 0x55, 0x55, 0x55, 0x55, 0xc5, 0xbf, 0xa0, 0xa2, 0x20, 0x0, 0xa0, 0xb, 0xb2, 0x1, 0x0, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x1, 0x41, 0x80, 0x8, 0x48, 0xd, 0x0, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x7f, 0xa2, 0x21, 0x0, 0x20, 0x1, 0x41, 0xff, 0xf, 0x48, 0xd, 0x1, 0x20, 0x1, 0x41, 0x82, 0x70, 0x6a, 0x22, 0x1, 0x41, 0xff, 0x7, 0x20, 0x1, 0x41, 0xff, 0x7, 0x48, 0x1b, 0x21, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x7f, 0xa2, 0x21, 0x0, 0xc, 0x3, 0xb, 0x20, 0x1, 0x41, 0x81, 0x78, 0x4a, 0xd, 0x2, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x3, 0xa2, 0x21, 0x0, 0x20, 0x1, 0x41, 0xb8, 0x70, 0x4a, 0xd, 0x1, 0x20, 0x1, 0x41, 0x92, 0xf, 0x6a, 0x22, 0x1, 0x41, 0x82, 0x78, 0x20, 0x1, 0x41, 0x82, 0x78, 0x4a, 0x1b, 0x21, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x3, 0xa2, 0x21, 0x0, 0xc, 0x2, 0xb, 0x20, 0x1, 0x41, 0x81, 0x78, 0x6a, 0x21, 0x1, 0xc, 0x1, 0xb, 0x20, 0x1, 0x41, 0xc9, 0x7, 0x6a, 0x21, 0x1, 0xb, 0x20, 0x0, 0x20, 0x1, 0x41, 0xff, 0x7, 0x6a, 0xad, 0x42, 0x34, 0x86, 0xbf, 0xa2, 0xb, 0xcf, 0x16, 0x6, 0x7, 0x7f, 0x1, 0x7c, 0xa, 0x7f, 0x1, 0x7c, 0x3, 0x7f, 0x2, 0x7c, 0x23, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0xb0, 0x4, 0x6b, 0x22, 0x5, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x2, 0x20, 0x2, 0x41, 0x7d, 0x6a, 0x41, 0x18, 0x6d, 0x22, 0x6, 0x41, 0x0, 0x20, 0x6, 0x41, 0x0, 0x4a, 0x1b, 0x22, 0x7, 0x41, 0x68, 0x6c, 0x6a, 0x21, 0x8, 0x2, 0x40, 0x20, 0x4, 0x41, 0x2, 0x74, 0x41, 0xd0, 0xab, 0x80, 0x80, 0x0, 0x6a, 0x28, 0x2, 0x0, 0x22, 0x9, 0x20, 0x3, 0x41, 0x7f, 0x6a, 0x22, 0x2, 0x6a, 0x41, 0x0, 0x48, 0xd, 0x0, 0x20, 0x9, 0x20, 0x3, 0x6a, 0x21, 0xa, 0x20, 0x7, 0x20, 0x2, 0x6b, 0x21, 0x2, 0x20, 0x7, 0x41, 0x1, 0x6a, 0x20, 0x3, 0x6b, 0x41, 0x2, 0x74, 0x41, 0xe0, 0xab, 0x80, 0x80, 0x0, 0x6a, 0x21, 0xb, 0x20, 0x5, 0x41, 0xc0, 0x2, 0x6a, 0x21, 0x6, 0x3, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x2, 0x41, 0x0, 0x48, 0xd, 0x0, 0x20, 0xb, 0x28, 0x2, 0x0, 0xb7, 0x21, 0xc, 0xc, 0x1, 0xb, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0xb, 0x20, 0x6, 0x20, 0xc, 0x39, 0x3, 0x0, 0x20, 0x6, 0x41, 0x8, 0x6a, 0x21, 0x6, 0x20, 0xb, 0x41, 0x4, 0x6a, 0x21, 0xb, 0x20, 0x2, 0x41, 0x1, 0x6a, 0x21, 0x2, 0x20, 0xa, 0x41, 0x7f, 0x6a, 0x22, 0xa, 0xd, 0x0, 0xb, 0xb, 0x20, 0x8, 0x41, 0x68, 0x6a, 0x21, 0xd, 0x2, 0x40, 0x2, 0x40, 0x20, 0x3, 0x41, 0x1, 0x48, 0xd, 0x0, 0x20, 0x5, 0x41, 0xc0, 0x2, 0x6a, 0x20, 0x3, 0x41, 0x3, 0x74, 0x6a, 0x41, 0x78, 0x6a, 0x21, 0xe, 0x41, 0x0, 0x21, 0xa, 0x3, 0x40, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0x20, 0x0, 0x21, 0x2, 0x20, 0x3, 0x21, 0xb, 0x20, 0xe, 0x21, 0x6, 0x3, 0x40, 0x20, 0xc, 0x20, 0x2, 0x2b, 0x3, 0x0, 0x20, 0x6, 0x2b, 0x3, 0x0, 0xa2, 0xa0, 0x21, 0xc, 0x20, 0x2, 0x41, 0x8, 0x6a, 0x21, 0x2, 0x20, 0x6, 0x41, 0x78, 0x6a, 0x21, 0x6, 0x20, 0xb, 0x41, 0x7f, 0x6a, 0x22, 0xb, 0xd, 0x0, 0xb, 0x20, 0x5, 0x20, 0xa, 0x41, 0x3, 0x74, 0x6a, 0x20, 0xc, 0x39, 0x3, 0x0, 0x20, 0xe, 0x41, 0x8, 0x6a, 0x21, 0xe, 0x20, 0xa, 0x20, 0x9, 0x48, 0x21, 0x2, 0x20, 0xa, 0x41, 0x1, 0x6a, 0x21, 0xa, 0x20, 0x2, 0xd, 0x0, 0xc, 0x2, 0xb, 0xb, 0x20, 0x5, 0x41, 0x0, 0x20, 0x9, 0x41, 0x0, 0x20, 0x9, 0x41, 0x0, 0x4a, 0x1b, 0x41, 0x3, 0x74, 0x41, 0x8, 0x6a, 0x10, 0x9a, 0x80, 0x80, 0x80, 0x0, 0x1a, 0xb, 0x41, 0x17, 0x20, 0xd, 0x6b, 0x21, 0xf, 0x41, 0x18, 0x20, 0xd, 0x6b, 0x21, 0x10, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x9, 0x41, 0x2, 0x74, 0x6a, 0x41, 0x7c, 0x6a, 0x21, 0x11, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x41, 0x7c, 0x6a, 0x21, 0x12, 0x20, 0x5, 0x41, 0x78, 0x6a, 0x21, 0x13, 0x20, 0x5, 0x41, 0x8, 0x72, 0x21, 0x14, 0x20, 0x9, 0x21, 0x6, 0x3, 0x7f, 0x20, 0x5, 0x20, 0x6, 0x41, 0x3, 0x74, 0x22, 0x15, 0x6a, 0x2b, 0x3, 0x0, 0x21, 0xc, 0x2, 0x40, 0x20, 0x6, 0x41, 0x1, 0x48, 0x22, 0x16, 0xd, 0x0, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0xa, 0x20, 0x13, 0x20, 0x15, 0x6a, 0x21, 0x2, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x21, 0xb, 0x3, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x3e, 0xa2, 0x22, 0x17, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x0, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0xe, 0xc, 0x1, 0xb, 0x20, 0x17, 0xaa, 0x21, 0xe, 0xb, 0x2, 0x40, 0x2, 0x40, 0x20, 0xc, 0x20, 0xe, 0xb7, 0x22, 0x17, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0xc1, 0xa2, 0xa0, 0x22, 0xc, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x0, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0xe, 0xc, 0x1, 0xb, 0x20, 0xc, 0xaa, 0x21, 0xe, 0xb, 0x20, 0xb, 0x20, 0xe, 0x36, 0x2, 0x0, 0x20, 0xb, 0x41, 0x4, 0x6a, 0x21, 0xb, 0x20, 0x2, 0x2b, 0x3, 0x0, 0x20, 0x17, 0xa0, 0x21, 0xc, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0xa, 0x41, 0x7f, 0x6a, 0x22, 0xa, 0x41, 0x1, 0x4a, 0xd, 0x0, 0xb, 0xb, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0xc, 0x20, 0xd, 0x10, 0x95, 0x80, 0x80, 0x80, 0x0, 0x22, 0xc, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3f, 0xa2, 0x9c, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0xc0, 0xa2, 0xa0, 0x22, 0xc, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x0, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0x18, 0x20, 0xc, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0xb7, 0xa1, 0x21, 0xc, 0x20, 0xd, 0x41, 0x1, 0x48, 0x22, 0x19, 0x45, 0xd, 0x1, 0xc, 0x2, 0xb, 0x20, 0xc, 0x20, 0xc, 0xaa, 0x22, 0x18, 0xb7, 0xa1, 0x21, 0xc, 0x20, 0xd, 0x41, 0x1, 0x48, 0x22, 0x19, 0xd, 0x1, 0xb, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x41, 0x7c, 0x6a, 0x22, 0x2, 0x20, 0x2, 0x28, 0x2, 0x0, 0x22, 0x2, 0x20, 0x2, 0x20, 0x10, 0x75, 0x22, 0x2, 0x20, 0x10, 0x74, 0x6b, 0x22, 0xb, 0x36, 0x2, 0x0, 0x20, 0x2, 0x20, 0x18, 0x6a, 0x21, 0x18, 0x20, 0xb, 0x20, 0xf, 0x75, 0x22, 0x1a, 0x41, 0x1, 0x48, 0xd, 0x2, 0xc, 0x1, 0xb, 0x2, 0x40, 0x20, 0xd, 0x45, 0xd, 0x0, 0x41, 0x2, 0x21, 0x1a, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x3f, 0x63, 0x20, 0xc, 0x20, 0xc, 0x62, 0x72, 0x45, 0xd, 0x1, 0x41, 0x0, 0x21, 0x1a, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0xd, 0x3, 0xc, 0x4, 0xb, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x41, 0x7c, 0x6a, 0x28, 0x2, 0x0, 0x41, 0x17, 0x75, 0x22, 0x1a, 0x41, 0x1, 0x48, 0xd, 0x1, 0xb, 0x2, 0x40, 0x2, 0x40, 0x20, 0x16, 0xd, 0x0, 0x41, 0x0, 0x21, 0x16, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x21, 0x2, 0x20, 0x6, 0x21, 0xe, 0x3, 0x40, 0x20, 0x2, 0x28, 0x2, 0x0, 0x21, 0xb, 0x41, 0xff, 0xff, 0xff, 0x7, 0x21, 0xa, 0x2, 0x40, 0x2, 0x40, 0x20, 0x16, 0xd, 0x0, 0x20, 0xb, 0x45, 0xd, 0x1, 0x41, 0x1, 0x21, 0x16, 0x41, 0x80, 0x80, 0x80, 0x8, 0x21, 0xa, 0xb, 0x20, 0x2, 0x20, 0xa, 0x20, 0xb, 0x6b, 0x36, 0x2, 0x0, 0x20, 0x2, 0x41, 0x4, 0x6a, 0x21, 0x2, 0x20, 0xe, 0x41, 0x7f, 0x6a, 0x22, 0xe, 0xd, 0x1, 0xc, 0x3, 0xb, 0x41, 0x0, 0x21, 0x16, 0x20, 0x2, 0x41, 0x4, 0x6a, 0x21, 0x2, 0x20, 0xe, 0x41, 0x7f, 0x6a, 0x22, 0xe, 0xd, 0x0, 0xc, 0x2, 0xb, 0xb, 0x41, 0x0, 0x21, 0x16, 0xb, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x19, 0xd, 0x0, 0x20, 0xd, 0x41, 0x2, 0x46, 0xd, 0x1, 0x20, 0xd, 0x41, 0x1, 0x47, 0xd, 0x0, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x41, 0x7c, 0x6a, 0x22, 0x2, 0x20, 0x2, 0x28, 0x2, 0x0, 0x41, 0xff, 0xff, 0xff, 0x3, 0x71, 0x36, 0x2, 0x0, 0xb, 0x20, 0x18, 0x41, 0x1, 0x6a, 0x21, 0x18, 0x20, 0x1a, 0x41, 0x2, 0x47, 0xd, 0x2, 0xc, 0x1, 0xb, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x41, 0x7c, 0x6a, 0x22, 0x2, 0x20, 0x2, 0x28, 0x2, 0x0, 0x41, 0xff, 0xff, 0xff, 0x1, 0x71, 0x36, 0x2, 0x0, 0x20, 0x18, 0x41, 0x1, 0x6a, 0x21, 0x18, 0x20, 0x1a, 0x41, 0x2, 0x47, 0xd, 0x1, 0xb, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x20, 0xc, 0xa1, 0x21, 0xc, 0x41, 0x2, 0x21, 0x1a, 0x20, 0x16, 0x45, 0xd, 0x0, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x20, 0xd, 0x10, 0x95, 0x80, 0x80, 0x80, 0x0, 0xa1, 0x22, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0xd, 0x1, 0xc, 0x2, 0xb, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0xd, 0x1, 0xb, 0x2, 0x40, 0x20, 0x6, 0x20, 0x9, 0x4c, 0xd, 0x0, 0x20, 0x12, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x21, 0x2, 0x41, 0x0, 0x21, 0xb, 0x20, 0x6, 0x21, 0xa, 0x3, 0x40, 0x20, 0x2, 0x28, 0x2, 0x0, 0x20, 0xb, 0x72, 0x21, 0xb, 0x20, 0x2, 0x41, 0x7c, 0x6a, 0x21, 0x2, 0x20, 0xa, 0x41, 0x7f, 0x6a, 0x22, 0xa, 0x20, 0x9, 0x4a, 0xd, 0x0, 0xb, 0x20, 0xb, 0xd, 0x2, 0xb, 0x20, 0x11, 0x21, 0x2, 0x20, 0x6, 0x21, 0xe, 0x3, 0x40, 0x20, 0xe, 0x41, 0x1, 0x6a, 0x21, 0xe, 0x20, 0x2, 0x28, 0x2, 0x0, 0x21, 0xb, 0x20, 0x2, 0x41, 0x7c, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x45, 0xd, 0x0, 0xb, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0x2, 0x2, 0x40, 0x20, 0x3, 0x41, 0x1, 0x48, 0xd, 0x0, 0x20, 0x5, 0x41, 0xc0, 0x2, 0x6a, 0x20, 0x3, 0x20, 0x6, 0x6a, 0x41, 0x3, 0x74, 0x6a, 0x21, 0x16, 0x3, 0x40, 0x20, 0x5, 0x41, 0xc0, 0x2, 0x6a, 0x20, 0x6, 0x20, 0x3, 0x6a, 0x41, 0x3, 0x74, 0x6a, 0x20, 0x2, 0x22, 0xa, 0x20, 0x7, 0x6a, 0x41, 0x2, 0x74, 0x41, 0xe0, 0xab, 0x80, 0x80, 0x0, 0x6a, 0x28, 0x2, 0x0, 0xb7, 0x39, 0x3, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0x20, 0x0, 0x21, 0x2, 0x20, 0x16, 0x21, 0x6, 0x20, 0x3, 0x21, 0xb, 0x3, 0x40, 0x20, 0xc, 0x20, 0x2, 0x2b, 0x3, 0x0, 0x20, 0x6, 0x2b, 0x3, 0x0, 0xa2, 0xa0, 0x21, 0xc, 0x20, 0x2, 0x41, 0x8, 0x6a, 0x21, 0x2, 0x20, 0x6, 0x41, 0x78, 0x6a, 0x21, 0x6, 0x20, 0xb, 0x41, 0x7f, 0x6a, 0x22, 0xb, 0xd, 0x0, 0xb, 0x20, 0x5, 0x20, 0xa, 0x41, 0x3, 0x74, 0x6a, 0x20, 0xc, 0x39, 0x3, 0x0, 0x20, 0x16, 0x41, 0x8, 0x6a, 0x21, 0x16, 0x20, 0xa, 0x41, 0x1, 0x6a, 0x21, 0x2, 0x20, 0xa, 0x21, 0x6, 0x20, 0xa, 0x20, 0xe, 0x48, 0xd, 0x0, 0xc, 0xb, 0xb, 0xb, 0x20, 0x14, 0x20, 0x15, 0x6a, 0x41, 0x0, 0x20, 0xe, 0x20, 0x2, 0x20, 0xe, 0x20, 0x2, 0x4a, 0x1b, 0x20, 0x6, 0x6b, 0x41, 0x3, 0x74, 0x10, 0x9a, 0x80, 0x80, 0x80, 0x0, 0x1a, 0x20, 0x7, 0x20, 0x6, 0x6a, 0x41, 0x2, 0x74, 0x41, 0xe4, 0xab, 0x80, 0x80, 0x0, 0x6a, 0x21, 0x2, 0x20, 0x5, 0x41, 0xc0, 0x2, 0x6a, 0x20, 0x3, 0x20, 0x6, 0x6a, 0x41, 0x3, 0x74, 0x6a, 0x21, 0xb, 0x3, 0x40, 0x20, 0xb, 0x20, 0x2, 0x28, 0x2, 0x0, 0xb7, 0x39, 0x3, 0x0, 0x20, 0x2, 0x41, 0x4, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x41, 0x8, 0x6a, 0x21, 0xb, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x22, 0x6, 0x20, 0xe, 0x48, 0xd, 0x0, 0xb, 0x20, 0xe, 0x21, 0x6, 0xc, 0xa, 0xb, 0x2, 0x40, 0x20, 0xc, 0x41, 0x0, 0x20, 0xd, 0x6b, 0x10, 0x95, 0x80, 0x80, 0x80, 0x0, 0x22, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x41, 0x63, 0x20, 0xc, 0x20, 0xc, 0x62, 0x72, 0x45, 0xd, 0x0, 0x20, 0xc, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x2, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0x2, 0xc, 0x3, 0xb, 0x20, 0x6, 0x41, 0x2, 0x74, 0x21, 0xb, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x3e, 0xa2, 0x22, 0x17, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x3, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0x2, 0xc, 0x4, 0xb, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x41, 0x7c, 0x6a, 0x21, 0x2, 0x20, 0xd, 0x21, 0x8, 0x3, 0x40, 0x20, 0x6, 0x41, 0x7f, 0x6a, 0x21, 0x6, 0x20, 0x8, 0x41, 0x68, 0x6a, 0x21, 0x8, 0x20, 0x2, 0x28, 0x2, 0x0, 0x21, 0xb, 0x20, 0x2, 0x41, 0x7c, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x45, 0xd, 0x0, 0xb, 0x41, 0x0, 0x21, 0xe, 0x20, 0x6, 0x41, 0x0, 0x4e, 0xd, 0x5, 0xc, 0x6, 0xb, 0x20, 0xc, 0xaa, 0x21, 0x2, 0xb, 0x20, 0xd, 0x21, 0x8, 0xc, 0x2, 0xb, 0x20, 0x17, 0xaa, 0x21, 0x2, 0xb, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0xb, 0x6a, 0x21, 0xb, 0x2, 0x40, 0x2, 0x40, 0x20, 0xc, 0x20, 0x2, 0xb7, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0xc1, 0xa2, 0xa0, 0x22, 0xc, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x0, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0xa, 0xc, 0x1, 0xb, 0x20, 0xc, 0xaa, 0x21, 0xa, 0xb, 0x20, 0xb, 0x20, 0xa, 0x36, 0x2, 0x0, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0x6, 0xb, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x2, 0x36, 0x2, 0x0, 0x41, 0x0, 0x21, 0xe, 0x20, 0x6, 0x41, 0x0, 0x48, 0xd, 0x1, 0xb, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0xa, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x20, 0x8, 0x10, 0x95, 0x80, 0x80, 0x80, 0x0, 0x21, 0xc, 0x20, 0x5, 0x20, 0x6, 0x41, 0x3, 0x74, 0x6a, 0x21, 0x2, 0x20, 0x5, 0x41, 0xe0, 0x3, 0x6a, 0x20, 0x6, 0x41, 0x2, 0x74, 0x6a, 0x21, 0xb, 0x3, 0x40, 0x20, 0x2, 0x20, 0xc, 0x20, 0xb, 0x28, 0x2, 0x0, 0xb7, 0xa2, 0x39, 0x3, 0x0, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x41, 0x7c, 0x6a, 0x21, 0xb, 0x20, 0xc, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x3e, 0xa2, 0x21, 0xc, 0x20, 0xa, 0x41, 0x7f, 0x6a, 0x22, 0xa, 0x20, 0xe, 0x4a, 0xd, 0x0, 0xb, 0x20, 0x6, 0x41, 0x0, 0x48, 0xd, 0x0, 0x20, 0x5, 0x20, 0x6, 0x41, 0x3, 0x74, 0x6a, 0x21, 0xe, 0x20, 0x6, 0x21, 0x2, 0x3, 0x40, 0x20, 0x6, 0x20, 0x2, 0x22, 0x3, 0x6b, 0x21, 0x16, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0x41, 0x0, 0x21, 0x2, 0x41, 0x0, 0x21, 0xb, 0x2, 0x40, 0x3, 0x40, 0x20, 0xc, 0x20, 0x2, 0x41, 0xb0, 0xc1, 0x80, 0x80, 0x0, 0x6a, 0x2b, 0x3, 0x0, 0x20, 0xe, 0x20, 0x2, 0x6a, 0x2b, 0x3, 0x0, 0xa2, 0xa0, 0x21, 0xc, 0x20, 0xb, 0x20, 0x9, 0x4e, 0xd, 0x1, 0x20, 0x2, 0x41, 0x8, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x20, 0x16, 0x49, 0x21, 0xa, 0x20, 0xb, 0x41, 0x1, 0x6a, 0x21, 0xb, 0x20, 0xa, 0xd, 0x0, 0xb, 0xb, 0x20, 0x5, 0x41, 0xa0, 0x1, 0x6a, 0x20, 0x16, 0x41, 0x3, 0x74, 0x6a, 0x20, 0xc, 0x39, 0x3, 0x0, 0x20, 0xe, 0x41, 0x78, 0x6a, 0x21, 0xe, 0x20, 0x3, 0x41, 0x7f, 0x6a, 0x21, 0x2, 0x20, 0x3, 0x41, 0x0, 0x4a, 0xd, 0x0, 0xb, 0xb, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x4, 0x41, 0x7f, 0x6a, 0x41, 0x2, 0x49, 0xd, 0x0, 0x20, 0x4, 0x41, 0x3, 0x46, 0xd, 0x1, 0x20, 0x4, 0xd, 0x7, 0x20, 0x6, 0x41, 0x0, 0x48, 0xd, 0x4, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0xb, 0x20, 0x5, 0x41, 0xa0, 0x1, 0x6a, 0x20, 0x6, 0x41, 0x3, 0x74, 0x6a, 0x21, 0x2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0x3, 0x40, 0x20, 0xc, 0x20, 0x2, 0x2b, 0x3, 0x0, 0xa0, 0x21, 0xc, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x41, 0x7f, 0x6a, 0x22, 0xb, 0x41, 0x0, 0x4a, 0xd, 0x0, 0xc, 0x6, 0xb, 0xb, 0x20, 0x6, 0x41, 0x0, 0x48, 0xd, 0x1, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0xb, 0x20, 0x5, 0x41, 0xa0, 0x1, 0x6a, 0x20, 0x6, 0x41, 0x3, 0x74, 0x6a, 0x21, 0x2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0x3, 0x40, 0x20, 0xc, 0x20, 0x2, 0x2b, 0x3, 0x0, 0xa0, 0x21, 0xc, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x41, 0x7f, 0x6a, 0x22, 0xb, 0x41, 0x0, 0x4a, 0xd, 0x0, 0xc, 0x3, 0xb, 0xb, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x1b, 0x2, 0x40, 0x20, 0x6, 0x41, 0x1, 0x48, 0xd, 0x0, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0xb, 0x20, 0x5, 0x41, 0xa0, 0x1, 0x6a, 0x20, 0x6, 0x41, 0x3, 0x74, 0x6a, 0x22, 0xa, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0xa, 0x2b, 0x3, 0x0, 0x21, 0xc, 0x3, 0x40, 0x20, 0x2, 0x20, 0x2, 0x2b, 0x3, 0x0, 0x22, 0x1c, 0x20, 0xc, 0xa0, 0x22, 0x17, 0x39, 0x3, 0x0, 0x20, 0x2, 0x41, 0x8, 0x6a, 0x20, 0xc, 0x20, 0x1c, 0x20, 0x17, 0xa1, 0xa0, 0x39, 0x3, 0x0, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0x17, 0x21, 0xc, 0x20, 0xb, 0x41, 0x7f, 0x6a, 0x22, 0xb, 0x41, 0x1, 0x4a, 0xd, 0x0, 0xb, 0x20, 0x6, 0x41, 0x2, 0x48, 0xd, 0x0, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0xb, 0x20, 0x5, 0x41, 0xa0, 0x1, 0x6a, 0x20, 0x6, 0x41, 0x3, 0x74, 0x6a, 0x22, 0xa, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0xa, 0x2b, 0x3, 0x0, 0x21, 0xc, 0x3, 0x40, 0x20, 0x2, 0x20, 0x2, 0x2b, 0x3, 0x0, 0x22, 0x1c, 0x20, 0xc, 0xa0, 0x22, 0x17, 0x39, 0x3, 0x0, 0x20, 0x2, 0x41, 0x8, 0x6a, 0x20, 0xc, 0x20, 0x1c, 0x20, 0x17, 0xa1, 0xa0, 0x39, 0x3, 0x0, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0x17, 0x21, 0xc, 0x20, 0xb, 0x41, 0x7f, 0x6a, 0x22, 0xb, 0x41, 0x2, 0x4a, 0xd, 0x0, 0xb, 0x20, 0x6, 0x41, 0x2, 0x48, 0xd, 0x0, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0xb, 0x20, 0x5, 0x41, 0xa0, 0x1, 0x6a, 0x20, 0x6, 0x41, 0x3, 0x74, 0x6a, 0x21, 0x2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x1b, 0x3, 0x40, 0x20, 0x1b, 0x20, 0x2, 0x2b, 0x3, 0x0, 0xa0, 0x21, 0x1b, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x21, 0x2, 0x20, 0xb, 0x41, 0x7f, 0x6a, 0x22, 0xb, 0x41, 0x2, 0x4a, 0xd, 0x0, 0xb, 0xb, 0x20, 0x5, 0x2b, 0x3, 0xa0, 0x1, 0x21, 0xc, 0x20, 0x1a, 0x45, 0xd, 0x4, 0x20, 0x1, 0x20, 0xc, 0x9a, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x5, 0x2b, 0x3, 0xa8, 0x1, 0x9a, 0x39, 0x3, 0x8, 0x20, 0x1, 0x20, 0x1b, 0x9a, 0x39, 0x3, 0x10, 0xc, 0x5, 0xb, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0xb, 0x20, 0x1, 0x20, 0xc, 0x9a, 0x20, 0xc, 0x20, 0x1a, 0x1b, 0x39, 0x3, 0x0, 0x20, 0x5, 0x2b, 0x3, 0xa0, 0x1, 0x20, 0xc, 0xa1, 0x21, 0xc, 0x2, 0x40, 0x20, 0x6, 0x41, 0x1, 0x48, 0xd, 0x0, 0x20, 0x5, 0x41, 0xa0, 0x1, 0x6a, 0x41, 0x8, 0x72, 0x21, 0x2, 0x3, 0x40, 0x20, 0xc, 0x20, 0x2, 0x2b, 0x3, 0x0, 0xa0, 0x21, 0xc, 0x20, 0x2, 0x41, 0x8, 0x6a, 0x21, 0x2, 0x20, 0x6, 0x41, 0x7f, 0x6a, 0x22, 0x6, 0xd, 0x0, 0xb, 0xb, 0x20, 0x1, 0x20, 0xc, 0x9a, 0x20, 0xc, 0x20, 0x1a, 0x1b, 0x39, 0x3, 0x8, 0xc, 0x3, 0xb, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0xc, 0xb, 0x20, 0x1, 0x20, 0xc, 0x9a, 0x20, 0xc, 0x20, 0x1a, 0x1b, 0x39, 0x3, 0x0, 0xc, 0x1, 0xb, 0x20, 0x1, 0x20, 0xc, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x5, 0x29, 0x3, 0xa8, 0x1, 0x37, 0x3, 0x8, 0x20, 0x1, 0x20, 0x1b, 0x39, 0x3, 0x10, 0xb, 0x20, 0x5, 0x41, 0xb0, 0x4, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x18, 0x41, 0x7, 0x71, 0xf, 0xb, 0x20, 0xe, 0x21, 0x6, 0xc, 0x0, 0xb, 0xb, 0xff, 0xa, 0x6, 0x1, 0x7f, 0x1, 0x7e, 0x3, 0x7f, 0x3, 0x7c, 0x1, 0x7f, 0x1, 0x7c, 0x23, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x30, 0x6b, 0x22, 0x2, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0xbd, 0x22, 0x3, 0x42, 0x3f, 0x88, 0xa7, 0x21, 0x4, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x3, 0x42, 0x20, 0x88, 0xa7, 0x22, 0x5, 0x41, 0xff, 0xff, 0xff, 0xff, 0x7, 0x71, 0x22, 0x6, 0x41, 0xfa, 0xd4, 0xbd, 0x80, 0x4, 0x4b, 0xd, 0x0, 0x20, 0x5, 0x41, 0xff, 0xff, 0x3f, 0x71, 0x41, 0xfb, 0xc3, 0x24, 0x46, 0xd, 0x3, 0x20, 0x6, 0x41, 0xfc, 0xb2, 0x8b, 0x80, 0x4, 0x4b, 0xd, 0x1, 0x20, 0x4, 0x45, 0xd, 0x6, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x40, 0x54, 0xfb, 0x21, 0xf9, 0x3f, 0xa0, 0x22, 0x0, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xd0, 0x3d, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xd0, 0x3d, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x7f, 0xf, 0xb, 0x2, 0x40, 0x20, 0x6, 0x41, 0xbb, 0x8c, 0xf1, 0x80, 0x4, 0x4b, 0xd, 0x0, 0x20, 0x6, 0x41, 0xbc, 0xfb, 0xd7, 0x80, 0x4, 0x4b, 0xd, 0x2, 0x20, 0x6, 0x41, 0xfc, 0xb2, 0xcb, 0x80, 0x4, 0x46, 0xd, 0x3, 0x20, 0x4, 0x45, 0xd, 0xa, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x30, 0x7f, 0x7c, 0xd9, 0x12, 0x40, 0xa0, 0x22, 0x0, 0x44, 0xca, 0x94, 0x93, 0xa7, 0x91, 0xe, 0xe9, 0x3d, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0xca, 0x94, 0x93, 0xa7, 0x91, 0xe, 0xe9, 0x3d, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x7d, 0xf, 0xb, 0x20, 0x6, 0x41, 0xfa, 0xc3, 0xe4, 0x89, 0x4, 0x4d, 0xd, 0x2, 0x20, 0x6, 0x41, 0x80, 0x80, 0xc0, 0xff, 0x7, 0x49, 0xd, 0x3, 0x20, 0x1, 0x20, 0x0, 0x20, 0x0, 0xa1, 0x22, 0x0, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x0, 0xf, 0xb, 0x20, 0x4, 0x45, 0xd, 0x5, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x40, 0x54, 0xfb, 0x21, 0x9, 0x40, 0xa0, 0x22, 0x0, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xe0, 0x3d, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xe0, 0x3d, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x7e, 0xf, 0xb, 0x20, 0x6, 0x41, 0xfb, 0xc3, 0xe4, 0x80, 0x4, 0x47, 0xd, 0x2, 0xb, 0x20, 0x1, 0x20, 0x0, 0x20, 0x0, 0x44, 0x83, 0xc8, 0xc9, 0x6d, 0x30, 0x5f, 0xe4, 0x3f, 0xa2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x43, 0xa0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0xc3, 0xa0, 0x22, 0x7, 0x44, 0x0, 0x0, 0x40, 0x54, 0xfb, 0x21, 0xf9, 0xbf, 0xa2, 0xa0, 0x22, 0x8, 0x20, 0x7, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xd0, 0x3d, 0xa2, 0x22, 0x9, 0xa1, 0x22, 0x0, 0x39, 0x3, 0x0, 0x20, 0x6, 0x41, 0x14, 0x76, 0x22, 0xa, 0x20, 0x0, 0xbd, 0x42, 0x34, 0x88, 0xa7, 0x41, 0xff, 0xf, 0x71, 0x6b, 0x41, 0x11, 0x48, 0x21, 0x5, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x7, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x0, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0x6, 0x20, 0x5, 0x45, 0xd, 0x1, 0xc, 0x2, 0xb, 0x20, 0x7, 0xaa, 0x21, 0x6, 0x20, 0x5, 0xd, 0x1, 0xb, 0x20, 0x1, 0x20, 0x8, 0x20, 0x7, 0x44, 0x0, 0x0, 0x60, 0x1a, 0x61, 0xb4, 0xd0, 0x3d, 0xa2, 0x22, 0x0, 0xa1, 0x22, 0xb, 0x20, 0x7, 0x44, 0x73, 0x70, 0x3, 0x2e, 0x8a, 0x19, 0xa3, 0x3b, 0xa2, 0x20, 0x8, 0x20, 0xb, 0xa1, 0x20, 0x0, 0xa1, 0xa1, 0x22, 0x9, 0xa1, 0x22, 0x0, 0x39, 0x3, 0x0, 0x2, 0x40, 0x20, 0xa, 0x20, 0x0, 0xbd, 0x42, 0x34, 0x88, 0xa7, 0x41, 0xff, 0xf, 0x71, 0x6b, 0x41, 0x32, 0x48, 0xd, 0x0, 0x20, 0x1, 0x20, 0xb, 0x20, 0x7, 0x44, 0x0, 0x0, 0x0, 0x2e, 0x8a, 0x19, 0xa3, 0x3b, 0xa2, 0x22, 0x0, 0xa1, 0x22, 0x8, 0x20, 0x7, 0x44, 0xc1, 0x49, 0x20, 0x25, 0x9a, 0x83, 0x7b, 0x39, 0xa2, 0x20, 0xb, 0x20, 0x8, 0xa1, 0x20, 0x0, 0xa1, 0xa1, 0x22, 0x9, 0xa1, 0x22, 0x0, 0x39, 0x3, 0x0, 0xc, 0x1, 0xb, 0x20, 0xb, 0x21, 0x8, 0xb, 0x20, 0x1, 0x20, 0x8, 0x20, 0x0, 0xa1, 0x20, 0x9, 0xa1, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x6, 0xf, 0xb, 0x20, 0x3, 0x42, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7, 0x83, 0x42, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xb0, 0xc1, 0x0, 0x84, 0xbf, 0x22, 0x0, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x3, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0x5, 0xc, 0x4, 0xb, 0x20, 0x4, 0x45, 0xd, 0x5, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x40, 0x54, 0xfb, 0x21, 0x19, 0x40, 0xa0, 0x22, 0x0, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xf0, 0x3d, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xf0, 0x3d, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x7c, 0xf, 0xb, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x40, 0x54, 0xfb, 0x21, 0xf9, 0xbf, 0xa0, 0x22, 0x0, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xd0, 0xbd, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xd0, 0xbd, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x1, 0xf, 0xb, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x40, 0x54, 0xfb, 0x21, 0x9, 0xc0, 0xa0, 0x22, 0x0, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xe0, 0xbd, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xe0, 0xbd, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x2, 0xf, 0xb, 0x20, 0x0, 0xaa, 0x21, 0x5, 0xb, 0x20, 0x2, 0x20, 0x5, 0xb7, 0x22, 0x7, 0x39, 0x3, 0x10, 0x2, 0x40, 0x2, 0x40, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x41, 0xa2, 0x22, 0x0, 0x99, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x41, 0x63, 0xd, 0x0, 0x41, 0x80, 0x80, 0x80, 0x80, 0x78, 0x21, 0x5, 0xc, 0x1, 0xb, 0x20, 0x0, 0xaa, 0x21, 0x5, 0xb, 0x20, 0x2, 0x20, 0x5, 0xb7, 0x22, 0x7, 0x39, 0x3, 0x18, 0x20, 0x2, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x41, 0xa2, 0x22, 0x0, 0x39, 0x3, 0x20, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0xd, 0x2, 0x20, 0x2, 0x41, 0x10, 0x6a, 0x41, 0x8, 0x72, 0x21, 0x5, 0x41, 0x2, 0x21, 0xa, 0x3, 0x40, 0x20, 0xa, 0x41, 0x7f, 0x6a, 0x21, 0xa, 0x20, 0x5, 0x2b, 0x3, 0x0, 0x21, 0x0, 0x20, 0x5, 0x41, 0x78, 0x6a, 0x21, 0x5, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0xd, 0x0, 0xc, 0x4, 0xb, 0xb, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x30, 0x7f, 0x7c, 0xd9, 0x12, 0xc0, 0xa0, 0x22, 0x0, 0x44, 0xca, 0x94, 0x93, 0xa7, 0x91, 0xe, 0xe9, 0xbd, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0xca, 0x94, 0x93, 0xa7, 0x91, 0xe, 0xe9, 0xbd, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x3, 0xf, 0xb, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x40, 0x54, 0xfb, 0x21, 0x19, 0xc0, 0xa0, 0x22, 0x0, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xf0, 0xbd, 0xa0, 0x22, 0x7, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x0, 0x20, 0x7, 0xa1, 0x44, 0x31, 0x63, 0x62, 0x1a, 0x61, 0xb4, 0xf0, 0xbd, 0xa0, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x4, 0xf, 0xb, 0x41, 0x2, 0x21, 0xa, 0xb, 0x20, 0x2, 0x41, 0x10, 0x6a, 0x20, 0x2, 0x20, 0x6, 0x41, 0x14, 0x76, 0x41, 0xea, 0x77, 0x6a, 0x20, 0xa, 0x41, 0x1, 0x6a, 0x41, 0x1, 0x10, 0x96, 0x80, 0x80, 0x80, 0x0, 0x21, 0x5, 0x20, 0x2, 0x2b, 0x3, 0x0, 0x21, 0x0, 0x2, 0x40, 0x20, 0x4, 0x45, 0xd, 0x0, 0x20, 0x1, 0x20, 0x0, 0x9a, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x2, 0x2b, 0x3, 0x8, 0x9a, 0x39, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x0, 0x20, 0x5, 0x6b, 0xf, 0xb, 0x20, 0x1, 0x20, 0x0, 0x39, 0x3, 0x0, 0x20, 0x1, 0x20, 0x2, 0x29, 0x3, 0x8, 0x37, 0x3, 0x8, 0x20, 0x2, 0x41, 0x30, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x5, 0xb, 0x92, 0x1, 0x1, 0x3, 0x7c, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x20, 0x0, 0x20, 0x0, 0xa2, 0x22, 0x2, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x3f, 0xa2, 0x22, 0x3, 0xa1, 0x22, 0x4, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x20, 0x4, 0xa1, 0x20, 0x3, 0xa1, 0x20, 0x2, 0x20, 0x2, 0x20, 0x2, 0x20, 0x2, 0x44, 0x90, 0x15, 0xcb, 0x19, 0xa0, 0x1, 0xfa, 0x3e, 0xa2, 0x44, 0x77, 0x51, 0xc1, 0x16, 0x6c, 0xc1, 0x56, 0xbf, 0xa0, 0xa2, 0x44, 0x4c, 0x55, 0x55, 0x55, 0x55, 0x55, 0xa5, 0x3f, 0xa0, 0xa2, 0x20, 0x2, 0x20, 0x2, 0xa2, 0x22, 0x3, 0x20, 0x3, 0xa2, 0x20, 0x2, 0x20, 0x2, 0x44, 0xd4, 0x38, 0x88, 0xbe, 0xe9, 0xfa, 0xa8, 0xbd, 0xa2, 0x44, 0xc4, 0xb1, 0xb4, 0xbd, 0x9e, 0xee, 0x21, 0x3e, 0xa0, 0xa2, 0x44, 0xad, 0x52, 0x9c, 0x80, 0x4f, 0x7e, 0x92, 0xbe, 0xa0, 0xa2, 0xa0, 0xa2, 0x20, 0x0, 0x20, 0x1, 0xa2, 0xa1, 0xa0, 0xa0, 0xb, 0xe2, 0x2, 0x1, 0x2, 0x7f, 0x23, 0x80, 0x80, 0x80, 0x80, 0x0, 0x41, 0x10, 0x6b, 0x22, 0x1, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x0, 0xbd, 0x42, 0x20, 0x88, 0xa7, 0x41, 0xff, 0xff, 0xff, 0xff, 0x7, 0x71, 0x22, 0x2, 0x41, 0xfb, 0xc3, 0xa4, 0xff, 0x3, 0x4b, 0xd, 0x0, 0x20, 0x2, 0x41, 0xff, 0xff, 0xbf, 0xf2, 0x3, 0x4b, 0xd, 0x1, 0x20, 0x1, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x38, 0xa2, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x47, 0xa0, 0x20, 0x2, 0x41, 0x80, 0x80, 0xc0, 0x0, 0x49, 0x1b, 0x39, 0x3, 0x0, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0xf, 0xb, 0x20, 0x2, 0x41, 0x80, 0x80, 0xc0, 0xff, 0x7, 0x49, 0xd, 0x1, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0x20, 0x0, 0xa1, 0xf, 0xb, 0x20, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0x0, 0x10, 0x94, 0x80, 0x80, 0x80, 0x0, 0x21, 0x0, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0xf, 0xb, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x0, 0x20, 0x1, 0x10, 0x97, 0x80, 0x80, 0x80, 0x0, 0x41, 0x3, 0x71, 0x22, 0x2, 0x41, 0x2, 0x46, 0xd, 0x0, 0x20, 0x2, 0x41, 0x1, 0x46, 0xd, 0x1, 0x20, 0x2, 0xd, 0x2, 0x20, 0x1, 0x2b, 0x3, 0x0, 0x20, 0x1, 0x2b, 0x3, 0x8, 0x41, 0x1, 0x10, 0x94, 0x80, 0x80, 0x80, 0x0, 0x21, 0x0, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0xf, 0xb, 0x20, 0x1, 0x2b, 0x3, 0x0, 0x20, 0x1, 0x2b, 0x3, 0x8, 0x41, 0x1, 0x10, 0x94, 0x80, 0x80, 0x80, 0x0, 0x21, 0x0, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0x9a, 0xf, 0xb, 0x20, 0x1, 0x2b, 0x3, 0x0, 0x20, 0x1, 0x2b, 0x3, 0x8, 0x10, 0x98, 0x80, 0x80, 0x80, 0x0, 0x21, 0x0, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0xf, 0xb, 0x20, 0x1, 0x2b, 0x3, 0x0, 0x20, 0x1, 0x2b, 0x3, 0x8, 0x10, 0x98, 0x80, 0x80, 0x80, 0x0, 0x21, 0x0, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x0, 0x20, 0x0, 0x9a, 0xb, 0xfc, 0x2, 0x2, 0x3, 0x7f, 0x1, 0x7e, 0x2, 0x40, 0x20, 0x2, 0x45, 0xd, 0x0, 0x20, 0x0, 0x20, 0x1, 0x3a, 0x0, 0x0, 0x20, 0x0, 0x20, 0x2, 0x6a, 0x22, 0x3, 0x41, 0x7f, 0x6a, 0x20, 0x1, 0x3a, 0x0, 0x0, 0x20, 0x2, 0x41, 0x3, 0x49, 0xd, 0x0, 0x20, 0x0, 0x20, 0x1, 0x3a, 0x0, 0x2, 0x20, 0x0, 0x20, 0x1, 0x3a, 0x0, 0x1, 0x20, 0x3, 0x41, 0x7d, 0x6a, 0x20, 0x1, 0x3a, 0x0, 0x0, 0x20, 0x3, 0x41, 0x7e, 0x6a, 0x20, 0x1, 0x3a, 0x0, 0x0, 0x20, 0x2, 0x41, 0x7, 0x49, 0xd, 0x0, 0x20, 0x0, 0x20, 0x1, 0x3a, 0x0, 0x3, 0x20, 0x3, 0x41, 0x7c, 0x6a, 0x20, 0x1, 0x3a, 0x0, 0x0, 0x20, 0x2, 0x41, 0x9, 0x49, 0xd, 0x0, 0x20, 0x0, 0x41, 0x0, 0x20, 0x0, 0x6b, 0x41, 0x3, 0x71, 0x22, 0x4, 0x6a, 0x22, 0x3, 0x20, 0x1, 0x41, 0xff, 0x1, 0x71, 0x41, 0x81, 0x82, 0x84, 0x8, 0x6c, 0x22, 0x1, 0x36, 0x2, 0x0, 0x20, 0x3, 0x20, 0x2, 0x20, 0x4, 0x6b, 0x41, 0x7c, 0x71, 0x22, 0x4, 0x6a, 0x22, 0x2, 0x41, 0x7c, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x4, 0x41, 0x9, 0x49, 0xd, 0x0, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0x8, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0x4, 0x20, 0x2, 0x41, 0x78, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x2, 0x41, 0x74, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x4, 0x41, 0x19, 0x49, 0xd, 0x0, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0x10, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0xc, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0x14, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0x18, 0x20, 0x2, 0x41, 0x68, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x2, 0x41, 0x64, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x2, 0x41, 0x6c, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x2, 0x41, 0x70, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x4, 0x20, 0x3, 0x41, 0x4, 0x71, 0x41, 0x18, 0x72, 0x22, 0x5, 0x6b, 0x22, 0x2, 0x41, 0x20, 0x49, 0xd, 0x0, 0x20, 0x1, 0xad, 0x22, 0x6, 0x42, 0x20, 0x86, 0x20, 0x6, 0x84, 0x21, 0x6, 0x20, 0x3, 0x20, 0x5, 0x6a, 0x21, 0x1, 0x3, 0x40, 0x20, 0x1, 0x20, 0x6, 0x37, 0x3, 0x0, 0x20, 0x1, 0x41, 0x8, 0x6a, 0x20, 0x6, 0x37, 0x3, 0x0, 0x20, 0x1, 0x41, 0x10, 0x6a, 0x20, 0x6, 0x37, 0x3, 0x0, 0x20, 0x1, 0x41, 0x18, 0x6a, 0x20, 0x6, 0x37, 0x3, 0x0, 0x20, 0x1, 0x41, 0x20, 0x6a, 0x21, 0x1, 0x20, 0x2, 0x41, 0x60, 0x6a, 0x22, 0x2, 0x41, 0x1f, 0x4b, 0xd, 0x0, 0xb, 0xb, 0x20, 0x0, 0xb, 0x67, 0x1, 0x2, 0x7f, 0x20, 0x1, 0x2d, 0x0, 0x0, 0x21, 0x2, 0x2, 0x40, 0x20, 0x0, 0x2d, 0x0, 0x0, 0x22, 0x3, 0x45, 0xd, 0x0, 0x20, 0x3, 0x20, 0x2, 0x41, 0xff, 0x1, 0x71, 0x47, 0xd, 0x0, 0x20, 0x0, 0x41, 0x1, 0x6a, 0x21, 0x0, 0x20, 0x1, 0x41, 0x1, 0x6a, 0x21, 0x1, 0x3, 0x40, 0x20, 0x1, 0x2d, 0x0, 0x0, 0x21, 0x2, 0x20, 0x0, 0x2d, 0x0, 0x0, 0x22, 0x3, 0x45, 0xd, 0x1, 0x20, 0x0, 0x41, 0x1, 0x6a, 0x21, 0x0, 0x20, 0x1, 0x41, 0x1, 0x6a, 0x21, 0x1, 0x20, 0x3, 0x20, 0x2, 0x41, 0xff, 0x1, 0x71, 0x46, 0xd, 0x0, 0xb, 0xb, 0x20, 0x3, 0x20, 0x2, 0x41, 0xff, 0x1, 0x71, 0x6b, 0xb, 0x2, 0x0, 0xb, 0xb, 0xfd, 0x39, 0x3, 0x0, 0x41, 0x80, 0x8, 0xb, 0x94, 0x23, 0x52, 0x60, 0xcf, 0xc4, 0x21, 0xe4, 0x8e, 0xc4, 0x86, 0x5a, 0x8b, 0x41, 0xc5, 0x70, 0xcd, 0xc4, 0xcb, 0x95, 0x8c, 0xc4, 0xf7, 0x75, 0x8b, 0x41, 0xdf, 0xf3, 0xcc, 0xc4, 0xac, 0x0, 0x8c, 0xc4, 0xea, 0x15, 0x8d, 0x41, 0x5e, 0xc6, 0xcc, 0xc4, 0x1d, 0xca, 0x8b, 0xc4, 0x9, 0xf9, 0x8f, 0x41, 0x5a, 0xa0, 0xcc, 0xc4, 0xac, 0x9c, 0x8b, 0xc4, 0x5b, 0x53, 0x94, 0x41, 0xb4, 0x78, 0xcc, 0xc4, 0x58, 0x6d, 0x8b, 0xc4, 0xe1, 0xb, 0x9a, 0x41, 0x44, 0x47, 0xcc, 0xc4, 0x35, 0x32, 0x8b, 0xc4, 0x48, 0x61, 0xa1, 0x41, 0x25, 0x16, 0xcc, 0xc4, 0x7d, 0xf7, 0x8a, 0xc4, 0x2, 0xab, 0xa8, 0x41, 0xba, 0xe5, 0xcb, 0xc4, 0x81, 0xbd, 0x8a, 0xc4, 0x5d, 0xdc, 0xaf, 0x41, 0x25, 0xb6, 0xcb, 0xc4, 0xa4, 0x84, 0x8a, 0xc4, 0x85, 0xeb, 0xb6, 0x41, 0xc7, 0x87, 0xcb, 0xc4, 0x27, 0x4d, 0x8a, 0xc4, 0x36, 0xcd, 0xbd, 0x41, 0xe1, 0x5a, 0xcb, 0xc4, 0x75, 0x17, 0x8a, 0xc4, 0xc9, 0x76, 0xc4, 0x41, 0xb6, 0x2f, 0xcb, 0xc4, 0xd7, 0xe3, 0x89, 0xc4, 0xd3, 0xde, 0xca, 0x41, 0x98, 0x6, 0xcb, 0xc4, 0xa0, 0xb2, 0x89, 0xc4, 0x72, 0xf9, 0xd0, 0x41, 0xbe, 0xdf, 0xca, 0xc4, 0x29, 0x84, 0x89, 0xc4, 0x3c, 0xbd, 0xd6, 0x41, 0x12, 0x97, 0xca, 0xc4, 0x50, 0x2d, 0x89, 0xc4, 0x7b, 0x83, 0xe1, 0x41, 0xb6, 0x5b, 0xca, 0xc4, 0x46, 0xe6, 0x88, 0xc4, 0xe5, 0x50, 0xea, 0x41, 0xe, 0x31, 0xca, 0xc4, 0x4c, 0xb3, 0x88, 0xc4, 0xd1, 0xa2, 0xf0, 0x41, 0xe5, 0x18, 0xca, 0xc4, 0x5e, 0x96, 0x88, 0xc4, 0x20, 0x52, 0xf4, 0x41, 0xaa, 0xf5, 0xc9, 0xc4, 0x6a, 0x6c, 0x88, 0xc4, 0x26, 0x53, 0xf7, 0x41, 0x87, 0xda, 0xc9, 0xc4, 0x10, 0x4c, 0x88, 0xc4, 0xa3, 0x1, 0xf8, 0x41, 0x5a, 0xc0, 0xc9, 0xc4, 0xfe, 0x2c, 0x88, 0xc4, 0x9a, 0x88, 0xf7, 0x41, 0xae, 0x93, 0xc9, 0xc4, 0xe7, 0xf7, 0x87, 0xc4, 0x39, 0xc5, 0xf2, 0x41, 0xbe, 0x5f, 0xc9, 0xc4, 0x3d, 0xba, 0x87, 0xc4, 0x13, 0x61, 0xe9, 0x41, 0x4c, 0x27, 0xc9, 0xc4, 0x33, 0x77, 0x87, 0xc4, 0x8d, 0x97, 0xdf, 0x41, 0x71, 0x9, 0xc9, 0xc4, 0xae, 0x53, 0x87, 0xc4, 0x88, 0xe3, 0xdb, 0x41, 0xfc, 0xdd, 0xc8, 0xc4, 0x10, 0x20, 0x87, 0xc4, 0x60, 0x76, 0xdb, 0x41, 0x12, 0xaf, 0xc8, 0xc4, 0x42, 0xe8, 0x86, 0xc4, 0xf, 0x9c, 0xdc, 0x41, 0x17, 0x85, 0xc8, 0xc4, 0x6f, 0xb6, 0x86, 0xc4, 0x3d, 0x2c, 0xe0, 0x41, 0x5a, 0x50, 0xc8, 0xc4, 0xf8, 0x77, 0x86, 0xc4, 0xf9, 0x31, 0xe4, 0x41, 0xd3, 0x1d, 0xc8, 0xc4, 0xf0, 0x3b, 0x86, 0xc4, 0xb4, 0xd9, 0xe7, 0x41, 0xf2, 0xea, 0xc7, 0xc4, 0x75, 0xff, 0x85, 0xc4, 0xa1, 0x67, 0xe9, 0x41, 0x3b, 0xbb, 0xc7, 0xc4, 0x25, 0xc2, 0x85, 0xc4, 0xd9, 0x3d, 0xe9, 0x41, 0x23, 0x97, 0xc7, 0xc4, 0xd7, 0x7f, 0x85, 0xc4, 0x22, 0x7d, 0xe8, 0x41, 0xf0, 0x83, 0xc7, 0xc4, 0xa8, 0x36, 0x85, 0xc4, 0x37, 0x9a, 0xe7, 0x41, 0xb6, 0x7f, 0xc7, 0xc4, 0x54, 0xeb, 0x84, 0xc4, 0x1e, 0xa7, 0xe6, 0x41, 0xae, 0x8b, 0xc7, 0xc4, 0x50, 0xa1, 0x84, 0xc4, 0xc1, 0xa8, 0xe5, 0x41, 0x21, 0xa8, 0xc7, 0xc4, 0x6d, 0x5b, 0x84, 0xc4, 0xb2, 0x9d, 0xe4, 0x41, 0xfc, 0xd1, 0xc7, 0xc4, 0x9c, 0x1c, 0x84, 0xc4, 0xd5, 0x89, 0xe3, 0x41, 0xa4, 0x8, 0xc8, 0xc4, 0x58, 0xe9, 0x83, 0xc4, 0x9e, 0x6f, 0xe2, 0x41, 0x37, 0x49, 0xc8, 0xc4, 0x77, 0xc2, 0x83, 0xc4, 0xd3, 0x4d, 0xe1, 0x41, 0xe7, 0x8f, 0xc8, 0xc4, 0x71, 0xa9, 0x83, 0xc4, 0xe9, 0x26, 0xe0, 0x41, 0xa, 0xdb, 0xc8, 0xc4, 0x4, 0xa2, 0x83, 0xc4, 0x38, 0xf8, 0xde, 0x41, 0x2d, 0x26, 0xc9, 0xc4, 0x9a, 0xa9, 0x83, 0xc4, 0x6d, 0xc5, 0xdd, 0x41, 0x50, 0x6d, 0xc9, 0xc4, 0xee, 0xc0, 0x83, 0xc4, 0x56, 0x8e, 0xdc, 0x41, 0xd3, 0xad, 0xc9, 0xc4, 0xf0, 0xe7, 0x83, 0xc4, 0x83, 0x51, 0xdb, 0x41, 0x58, 0xe5, 0xc9, 0xc4, 0x2, 0x1b, 0x84, 0xc4, 0x97, 0x10, 0xda, 0x41, 0x8d, 0xf, 0xca, 0xc4, 0x6, 0x59, 0x84, 0xc4, 0x64, 0xcc, 0xd8, 0x41, 0xdf, 0x2b, 0xca, 0xc4, 0xd9, 0x9e, 0x84, 0xc4, 0x19, 0x84, 0xd7, 0x41, 0xb2, 0x39, 0xca, 0xc4, 0xfe, 0xe8, 0x84, 0xc4, 0x80, 0x37, 0xd6, 0x41, 0x68, 0x35, 0xca, 0xc4, 0x0, 0x34, 0x85, 0xc4, 0x10, 0xe9, 0xd4, 0x41, 0x46, 0x22, 0xca, 0xc4, 0xe5, 0x7c, 0x85, 0xc4, 0x53, 0x96, 0xd3, 0x41, 0x31, 0x0, 0xca, 0xc4, 0xcf, 0xbf, 0x85, 0xc4, 0xec, 0x40, 0xd2, 0x41, 0xa6, 0xcf, 0xc9, 0xc4, 0x89, 0xf9, 0x85, 0xc4, 0xd5, 0xe7, 0xd0, 0x41, 0xac, 0x94, 0xc9, 0xc4, 0x7b, 0x28, 0x86, 0xc4, 0x4a, 0x8c, 0xcf, 0x41, 0xbc, 0x50, 0xc9, 0xc4, 0xb4, 0x48, 0x86, 0xc4, 0x77, 0x2d, 0xce, 0x41, 0x64, 0x7, 0xc9, 0xc4, 0xd3, 0x59, 0x86, 0xc4, 0xfb, 0xcb, 0xcc, 0x41, 0x0, 0xbc, 0xc8, 0xc4, 0x10, 0x5c, 0x86, 0xc4, 0xa, 0x68, 0xcb, 0x41, 0x6f, 0x72, 0xc8, 0xc4, 0x52, 0x4c, 0x86, 0xc4, 0xc, 0x2, 0xca, 0x41, 0x58, 0x2d, 0xc8, 0xc4, 0x1d, 0x2e, 0x86, 0xc4, 0x31, 0x99, 0xc8, 0x41, 0x42, 0xf0, 0xc7, 0xc4, 0x25, 0x2, 0x86, 0xc4, 0xe0, 0x2d, 0xc7, 0x41, 0xc1, 0xbe, 0xc7, 0xc4, 0x3f, 0xc9, 0x85, 0xc4, 0x1a, 0xc0, 0xc5, 0x41, 0x89, 0x99, 0xc7, 0xc4, 0xb6, 0x87, 0x85, 0xc4, 0x7d, 0x50, 0xc4, 0x41, 0xdf, 0x83, 0xc7, 0xc4, 0x96, 0x3f, 0x85, 0xc4, 0x6a, 0xde, 0xc2, 0x41, 0x46, 0x7e, 0xc7, 0xc4, 0x62, 0xf4, 0x84, 0xc4, 0x7f, 0x6a, 0xc1, 0x41, 0xbe, 0x87, 0xc7, 0xc4, 0xa2, 0xa9, 0x84, 0xc4, 0x1f, 0xf4, 0xbf, 0x41, 0x87, 0xa2, 0xc7, 0xc4, 0x1b, 0x63, 0x84, 0xc4, 0x7f, 0x7b, 0xbe, 0x41, 0xa, 0xcb, 0xc7, 0xc4, 0x7d, 0x23, 0x84, 0xc4, 0xa3, 0x1, 0xbd, 0x41, 0xdf, 0xff, 0xc7, 0xc4, 0xa2, 0xed, 0x83, 0xc4, 0x1f, 0x85, 0xbb, 0x41, 0xb6, 0x3f, 0xc8, 0xc4, 0x81, 0xc5, 0x83, 0xc4, 0xf7, 0x6, 0xba, 0x41, 0x3d, 0x86, 0xc8, 0xc4, 0xd9, 0xaa, 0x83, 0xc4, 0x5f, 0x87, 0xb8, 0x41, 0xe, 0xd1, 0xc8, 0xc4, 0x52, 0xa0, 0x83, 0xc4, 0xb6, 0x4, 0xb7, 0x41, 0x31, 0x1c, 0xc9, 0xc4, 0x5e, 0xa6, 0x83, 0xc4, 0x6f, 0x81, 0xb5, 0x41, 0x9c, 0x64, 0xc9, 0xc4, 0x33, 0xbb, 0x83, 0xc4, 0xb9, 0xfc, 0xb3, 0x41, 0x5e, 0xa6, 0xc9, 0xc4, 0x7b, 0xe0, 0x83, 0xc4, 0x54, 0x74, 0xb2, 0x41, 0x6d, 0xdf, 0xc9, 0xc4, 0x98, 0x12, 0x84, 0xc4, 0x9b, 0xe6, 0xb0, 0x41, 0x71, 0x11, 0xca, 0xc4, 0xbc, 0x4c, 0x84, 0xc4, 0x76, 0x4f, 0xae, 0x41, 0x23, 0x43, 0xca, 0xc4, 0x5a, 0x88, 0x84, 0xc4, 0xca, 0xb2, 0xaa, 0x41, 0xa8, 0x72, 0xca, 0xc4, 0x60, 0xc1, 0x84, 0xc4, 0x5f, 0x7, 0xa6, 0x41, 0xdb, 0xa1, 0xca, 0xc4, 0x4, 0xfa, 0x84, 0xc4, 0x22, 0x6c, 0xa1, 0x41, 0x1f, 0xd1, 0xca, 0xc4, 0xa0, 0x32, 0x85, 0xc4, 0x1a, 0xd1, 0x9c, 0x41, 0x4a, 0x0, 0xcb, 0xc4, 0x44, 0x6b, 0x85, 0xc4, 0xa8, 0x35, 0x98, 0x41, 0x6d, 0x2f, 0xcb, 0xc4, 0xcf, 0xa3, 0x85, 0xc4, 0x21, 0x9f, 0x93, 0x41, 0x29, 0x5c, 0xcb, 0xc4, 0xcb, 0xd9, 0x85, 0xc4, 0xac, 0x9c, 0x8f, 0x41, 0xfa, 0x86, 0xcb, 0xc4, 0xa2, 0xd, 0x86, 0xc4, 0x7a, 0xa5, 0x8d, 0x41, 0x4a, 0xb0, 0xcb, 0xc4, 0x33, 0x3f, 0x86, 0xc4, 0x2a, 0xa9, 0x8d, 0x41, 0x79, 0xe1, 0xcb, 0xc4, 0x1d, 0x7a, 0x86, 0xc4, 0xc7, 0xa9, 0x8d, 0x41, 0x85, 0xb, 0xcc, 0xc4, 0x93, 0xac, 0x86, 0xc4, 0xc7, 0xa9, 0x8d, 0x41, 0xb4, 0x3c, 0xcc, 0xc4, 0x7d, 0xe7, 0x86, 0xc4, 0x30, 0xaa, 0x8d, 0x41, 0xb4, 0x6c, 0xcc, 0xc4, 0x1b, 0x1f, 0x87, 0xc4, 0xc1, 0xa8, 0x8d, 0x41, 0x91, 0x9d, 0xcc, 0xc4, 0xa2, 0x59, 0x87, 0xc4, 0xc1, 0xa8, 0x8d, 0x41, 0x42, 0xcc, 0xcc, 0xc4, 0x1f, 0x91, 0x87, 0xc4, 0x4c, 0xb7, 0x8e, 0x41, 0x9c, 0xf4, 0xcc, 0xc4, 0x29, 0xc0, 0x87, 0xc4, 0x32, 0xe6, 0x92, 0x41, 0x85, 0x1f, 0xcd, 0xc4, 0x4, 0xf2, 0x87, 0xc4, 0xa4, 0xf0, 0x9a, 0x41, 0x6d, 0x4f, 0xcd, 0xc4, 0xd5, 0x28, 0x88, 0xc4, 0xa3, 0xa3, 0xa4, 0x41, 0x75, 0x83, 0xcd, 0xc4, 0x12, 0x63, 0x88, 0xc4, 0x30, 0xbb, 0xac, 0x41, 0x2, 0xbb, 0xcd, 0xc4, 0xa, 0x9f, 0x88, 0xc4, 0xb9, 0x7c, 0xaf, 0x41, 0xf4, 0xf1, 0xcd, 0xc4, 0xfe, 0xd8, 0x88, 0xc4, 0xe1, 0xfa, 0xac, 0x41, 0xa6, 0x27, 0xce, 0xc4, 0x31, 0x10, 0x89, 0xc4, 0x9c, 0xb3, 0xa7, 0x41, 0x9c, 0x5c, 0xce, 0xc4, 0xbc, 0x44, 0x89, 0xc4, 0x40, 0x93, 0xa1, 0x41, 0x1f, 0x91, 0xce, 0xc4, 0x87, 0x76, 0x89, 0xc4, 0x33, 0x33, 0x9c, 0x41, 0xf0, 0xc7, 0xce, 0xc4, 0xe7, 0xa7, 0x89, 0xc4, 0x3b, 0xf0, 0x97, 0x41, 0x9a, 0x1, 0xcf, 0xc4, 0x68, 0xd9, 0x89, 0xc4, 0x3b, 0x81, 0x94, 0x41, 0x27, 0x3d, 0xcf, 0xc4, 0x14, 0xa, 0x8a, 0xc4, 0x16, 0xea, 0x91, 0x41, 0x89, 0x79, 0xcf, 0xc4, 0x6, 0x39, 0x8a, 0xc4, 0xda, 0x2c, 0x90, 0x41, 0xcb, 0xb5, 0xcf, 0xc4, 0x60, 0x65, 0x8a, 0xc4, 0xba, 0x49, 0x8f, 0x41, 0xcd, 0xf0, 0xcf, 0xc4, 0x3d, 0x8e, 0x8a, 0xc4, 0x4f, 0x40, 0x8f, 0x41, 0x60, 0x29, 0xd0, 0xc4, 0xa0, 0xb2, 0x8a, 0xc4, 0xac, 0xb, 0x90, 0x41, 0x25, 0x6a, 0xd0, 0xc4, 0xbc, 0xd8, 0x8a, 0xc4, 0x26, 0x64, 0x92, 0x41, 0x6a, 0xa8, 0xd0, 0xc4, 0xc1, 0xfa, 0x8a, 0xc4, 0x6, 0x92, 0x96, 0x41, 0x9c, 0xe4, 0xd0, 0xc4, 0x2f, 0x19, 0x8b, 0xc4, 0xa8, 0x35, 0x9c, 0x41, 0xb4, 0x20, 0xd1, 0xc4, 0xec, 0x35, 0x8b, 0xc4, 0xeb, 0xf3, 0xa2, 0x41, 0xa8, 0x5e, 0xd1, 0xc4, 0xa0, 0x52, 0x8b, 0xc4, 0x26, 0x64, 0xaa, 0x41, 0xd7, 0x9f, 0xd1, 0xc4, 0x17, 0x71, 0x8b, 0xc4, 0xf4, 0xfd, 0xb1, 0x41, 0xb0, 0xe2, 0xd1, 0xc4, 0x4c, 0x8f, 0x8b, 0xc4, 0x2b, 0x18, 0xb9, 0x41, 0x2, 0x27, 0xd2, 0xc4, 0x73, 0xac, 0x8b, 0xc4, 0x27, 0xa0, 0xbf, 0x41, 0xf8, 0x6b, 0xd2, 0xc4, 0x48, 0xc9, 0x8b, 0xc4, 0xdb, 0x79, 0xc5, 0x41, 0x8b, 0xb0, 0xd2, 0xc4, 0xa8, 0xe6, 0x8b, 0xc4, 0xc2, 0x86, 0xca, 0x41, 0xd7, 0xf3, 0xd2, 0xc4, 0x58, 0x5, 0x8c, 0xc4, 0xc7, 0xa9, 0xce, 0x41, 0x8f, 0x36, 0xd3, 0xc4, 0x4, 0x26, 0x8c, 0xc4, 0xe, 0xbe, 0xd1, 0x41, 0xb4, 0x78, 0xd3, 0xc4, 0x14, 0x4a, 0x8c, 0xc4, 0x73, 0x57, 0xd4, 0x41, 0x52, 0xb4, 0xd3, 0xc4, 0x0, 0x78, 0x8c, 0xc4, 0x8f, 0xc2, 0xd6, 0x41, 0x21, 0xe8, 0xd3, 0xc4, 0x2b, 0xaf, 0x8c, 0xc4, 0xa4, 0xf0, 0xd8, 0x41, 0x98, 0x12, 0xd4, 0xc4, 0x35, 0xee, 0x8c, 0xc4, 0xca, 0xb2, 0xda, 0x41, 0x5e, 0x32, 0xd4, 0xc4, 0x44, 0x33, 0x8d, 0xc4, 0x9d, 0x0, 0xdc, 0x41, 0xa0, 0x46, 0xd4, 0xc4, 0x39, 0x7c, 0x8d, 0xc4, 0xe7, 0xfb, 0xdc, 0x41, 0xe1, 0x4e, 0xd4, 0xc4, 0x7d, 0xc7, 0x8d, 0xc4, 0xe9, 0xc8, 0xdd, 0x41, 0x2, 0x4b, 0xd4, 0xc4, 0x44, 0x13, 0x8e, 0xc4, 0xf5, 0x5b, 0xde, 0x41, 0xe9, 0x3a, 0xd4, 0xc4, 0x79, 0x5d, 0x8e, 0xc4, 0x93, 0xa9, 0xde, 0x41, 0x1b, 0x1f, 0xd4, 0xc4, 0x31, 0xa4, 0x8e, 0xc4, 0x24, 0xa8, 0xde, 0x41, 0x4a, 0xf8, 0xd3, 0xc4, 0x91, 0xe5, 0x8e, 0xc4, 0x48, 0x50, 0xde, 0x41, 0x7d, 0xc7, 0xd3, 0xc4, 0xd7, 0x1f, 0x8f, 0xc4, 0x7e, 0x9d, 0xdd, 0x41, 0xec, 0x8d, 0xd3, 0xc4, 0x68, 0x51, 0x8f, 0xc4, 0xb3, 0x8c, 0xdc, 0x41, 0x48, 0x4d, 0xd3, 0xc4, 0x17, 0x79, 0x8f, 0xc4, 0xb8, 0x1e, 0xdb, 0x41, 0x3b, 0x7, 0xd3, 0xc4, 0xd3, 0x95, 0x8f, 0xc4, 0x39, 0x56, 0xd9, 0x41, 0xa2, 0xbd, 0xd2, 0xc4, 0xfa, 0xa6, 0x8f, 0xc4, 0x52, 0x38, 0xd7, 0x41, 0x6f, 0x72, 0xd2, 0xc4, 0x8, 0xac, 0x8f, 0xc4, 0x92, 0xcb, 0xd4, 0x41, 0x96, 0x27, 0xd2, 0xc4, 0x27, 0xa5, 0x8f, 0xc4, 0xd4, 0x1a, 0xd2, 0x41, 0xfa, 0xde, 0xd1, 0xc4, 0x7f, 0x92, 0x8f, 0xc4, 0x21, 0x30, 0xcf, 0x41, 0x66, 0x9a, 0xd1, 0xc4, 0xa4, 0x74, 0x8f, 0xc4, 0x2b, 0x18, 0xcc, 0x41, 0x96, 0x5b, 0xd1, 0xc4, 0x6a, 0x4c, 0x8f, 0xc4, 0x70, 0xdf, 0xc8, 0x41, 0xf8, 0x23, 0xd1, 0xc4, 0xd9, 0x1a, 0x8f, 0xc4, 0xc, 0x93, 0xc5, 0x41, 0xee, 0xf4, 0xd0, 0xc4, 0x3f, 0xe1, 0x8e, 0xc4, 0xf2, 0x41, 0xc2, 0x41, 0x8d, 0xcf, 0xd0, 0xc4, 0xfe, 0xa0, 0x8e, 0xc4, 0x9, 0xf9, 0xbe, 0x41, 0xc5, 0xb4, 0xd0, 0xc4, 0xae, 0x5b, 0x8e, 0xc4, 0xa8, 0xc6, 0xbb, 0x41, 0x37, 0xa5, 0xd0, 0xc4, 0xa, 0x13, 0x8e, 0xc4, 0xe9, 0xb7, 0xb8, 0x41, 0x48, 0xa1, 0xd0, 0xc4, 0xc5, 0xc8, 0x8d, 0xc4, 0x79, 0xd8, 0xb5, 0x41, 0x17, 0xa9, 0xd0, 0xc4, 0xc9, 0x7e, 0x8d, 0xc4, 0x6e, 0x34, 0xb3, 0x41, 0x6a, 0xbc, 0xd0, 0xc4, 0xd1, 0x36, 0x8d, 0xc4, 0x4, 0xd6, 0xb0, 0x41, 0xe9, 0xda, 0xd0, 0xc4, 0xb8, 0xf2, 0x8c, 0xc4, 0x39, 0xc5, 0xae, 0x41, 0xd7, 0x3, 0xd1, 0xc4, 0x39, 0xb4, 0x8c, 0xc4, 0x3, 0x9, 0xad, 0x41, 0x35, 0x36, 0xd1, 0xc4, 0xee, 0x7c, 0x8c, 0xc4, 0xaf, 0xa5, 0xab, 0x41, 0xbc, 0x70, 0xd1, 0xc4, 0x35, 0x4e, 0x8c, 0xc4, 0xb2, 0x9d, 0xaa, 0x41, 0x4, 0xb2, 0xd1, 0xc4, 0x48, 0x29, 0x8c, 0xc4, 0x76, 0xf1, 0xa9, 0x41, 0x62, 0xf8, 0xd1, 0xc4, 0x3b, 0xf, 0x8c, 0xc4, 0xe7, 0x9d, 0xa9, 0x41, 0xc, 0x42, 0xd2, 0xc4, 0x9c, 0x0, 0x8c, 0xc4, 0xb8, 0x9e, 0xa9, 0x41, 0x1f, 0x8d, 0xd2, 0xc4, 0xdb, 0xfd, 0x8b, 0xc4, 0x29, 0xed, 0xa9, 0x41, 0xbe, 0xd7, 0xd2, 0xc4, 0x12, 0x7, 0x8c, 0xc4, 0x0, 0x80, 0xaa, 0x41, 0x0, 0x20, 0xd3, 0xc4, 0x10, 0x1c, 0x8c, 0xc4, 0x64, 0x4c, 0xab, 0x41, 0x19, 0x64, 0xd3, 0xc4, 0x4a, 0x3c, 0x8c, 0xc4, 0x3f, 0x46, 0xac, 0x41, 0x35, 0xa2, 0xd3, 0xc4, 0xfa, 0x66, 0x8c, 0xc4, 0x42, 0x60, 0xad, 0x41, 0xee, 0xd8, 0xd3, 0xc4, 0x2b, 0x9b, 0x8c, 0xc4, 0x84, 0x8d, 0xae, 0x41, 0xc3, 0xfd, 0xd3, 0xc4, 0x5e, 0xca, 0x8c, 0xc4, 0x24, 0x39, 0xaf, 0x41, 0x19, 0x1c, 0xd4, 0xc4, 0xae, 0xff, 0x8c, 0xc4, 0xfe, 0xe5, 0xaf, 0x41, 0x91, 0x35, 0xd4, 0xc4, 0x19, 0x3c, 0x8d, 0xc4, 0x56, 0x9f, 0xb0, 0x41, 0x58, 0x49, 0xd4, 0xc4, 0xb8, 0x7e, 0x8d, 0xc4, 0x17, 0x59, 0xb1, 0x41, 0x5e, 0x56, 0xd4, 0xc4, 0x98, 0xc6, 0x8d, 0xc4, 0xc2, 0x6, 0xb2, 0x41, 0xb6, 0x5b, 0xd4, 0xc4, 0xc9, 0x12, 0x8e, 0xc4, 0xda, 0x9b, 0xb2, 0x41, 0x73, 0x58, 0xd4, 0xc4, 0x4e, 0x62, 0x8e, 0xc4, 0xac, 0xb, 0xb3, 0x41, 0x9e, 0x4b, 0xd4, 0xc4, 0x42, 0xb4, 0x8e, 0xc4, 0x23, 0x4a, 0xb3, 0x41, 0x42, 0x34, 0xd4, 0xc4, 0xae, 0x7, 0x8f, 0xc4, 0x58, 0x4a, 0xb3, 0x41, 0x79, 0x11, 0xd4, 0xc4, 0x9e, 0x5b, 0x8f, 0xc4, 0x34, 0x0, 0xb3, 0x41, 0xf4, 0xe1, 0xd3, 0xc4, 0x7d, 0xaf, 0x8f, 0xc4, 0x29, 0x5c, 0xb2, 0x41, 0xa6, 0xa7, 0xd3, 0xc4, 0x31, 0xfc, 0x8f, 0xc4, 0x77, 0x3e, 0xb1, 0x41, 0x33, 0x67, 0xd3, 0xc4, 0xe7, 0x3b, 0x90, 0xc4, 0x52, 0xb8, 0xaf, 0x41, 0x5e, 0x22, 0xd3, 0xc4, 0x75, 0x6f, 0x90, 0xc4, 0x60, 0xe5, 0xad, 0x41, 0xf2, 0xda, 0xd2, 0xc4, 0xae, 0x97, 0x90, 0xc4, 0x48, 0xe1, 0xab, 0x41, 0xa8, 0x92, 0xd2, 0xc4, 0x91, 0xb5, 0x90, 0xc4, 0x7a, 0xc7, 0xa9, 0x41, 0x3b, 0x4b, 0xd2, 0xc4, 0xf4, 0xc9, 0x90, 0xc4, 0x33, 0xb3, 0xa7, 0x41, 0x27, 0x5, 0xd2, 0xc4, 0x71, 0xd5, 0x90, 0xc4, 0x93, 0xba, 0xa5, 0x41, 0xa2, 0xc5, 0xd1, 0xc4, 0xaa, 0xd9, 0x90, 0xc4, 0xb6, 0x4, 0xa4, 0x41, 0x2, 0x8b, 0xd1, 0xc4, 0xc9, 0xd6, 0x90, 0xc4, 0x2d, 0xa1, 0xa2, 0x41, 0x29, 0x58, 0xd1, 0xc4, 0xfc, 0xcd, 0x90, 0xc4, 0x77, 0xad, 0xa1, 0x41, 0x64, 0x13, 0xd1, 0xc4, 0xe, 0xb5, 0x90, 0xc4, 0xa2, 0xc5, 0xa0, 0x41, 0xb0, 0xd2, 0xd0, 0xc4, 0x25, 0x8e, 0x90, 0xc4, 0xa8, 0xd7, 0x9f, 0x41, 0x98, 0x9a, 0xd0, 0xc4, 0xb6, 0x5b, 0x90, 0xc4, 0xe2, 0xe9, 0x9e, 0x41, 0x60, 0x6d, 0xd0, 0xc4, 0x8d, 0x1f, 0x90, 0xc4, 0x50, 0xfc, 0x9d, 0x41, 0x77, 0x4e, 0xd0, 0xc4, 0xa8, 0xda, 0x8f, 0xc4, 0x22, 0xe, 0x9d, 0x41, 0x27, 0x3d, 0xd0, 0xc4, 0x37, 0x91, 0x8f, 0xc4, 0x5c, 0x20, 0x9c, 0x41, 0x25, 0x3a, 0xd0, 0xc4, 0xcb, 0x45, 0x8f, 0xc4, 0x61, 0x32, 0x9b, 0x41, 0xa0, 0x46, 0xd0, 0xc4, 0x96, 0xfb, 0x8e, 0xc4, 0xd0, 0x44, 0x9a, 0x41, 0x56, 0x62, 0xd0, 0xc4, 0x60, 0xb5, 0x8e, 0xc4, 0xd6, 0x56, 0x99, 0x41, 0xd9, 0x8a, 0xd0, 0xc4, 0xba, 0x75, 0x8e, 0xc4, 0xdc, 0x68, 0x98, 0x41, 0xc9, 0xbe, 0xd0, 0xc4, 0xe1, 0x3e, 0x8e, 0xc4, 0xe1, 0x7a, 0x97, 0x41, 0x37, 0xfd, 0xd0, 0xc4, 0xcd, 0x14, 0x8e, 0xc4, 0x1b, 0x8d, 0x96, 0x41, 0xc9, 0x42, 0xd1, 0xc4, 0x96, 0xf7, 0x8d, 0xc4, 0x56, 0x9f, 0x95, 0x41, 0xb4, 0x8c, 0xd1, 0xc4, 0x31, 0xe8, 0x8d, 0xc4, 0x5b, 0xb1, 0x94, 0x41, 0x8, 0xd8, 0xd1, 0xc4, 0x96, 0xe7, 0x8d, 0xc4, 0x96, 0xc3, 0x93, 0x41, 0xdb, 0x21, 0xd2, 0xc4, 0x5c, 0xf7, 0x8d, 0xc4, 0x9b, 0xd5, 0x92, 0x41, 0x5c, 0x67, 0xd2, 0xc4, 0xcd, 0x14, 0x8e, 0xc4, 0xd5, 0xe7, 0x91, 0x41, 0xfc, 0xa5, 0xd2, 0xc4, 0xfa, 0x3e, 0x8e, 0xc4, 0xa7, 0xf9, 0x90, 0x41, 0x5e, 0xda, 0xd2, 0xc4, 0x27, 0x75, 0x8e, 0xc4, 0x15, 0xc, 0x90, 0x41, 0x98, 0x2, 0xd3, 0xc4, 0x6, 0xb5, 0x8e, 0xc4, 0xe7, 0x1d, 0x8f, 0x41, 0x4, 0x1e, 0xd3, 0xc4, 0x5c, 0xfb, 0x8e, 0xc4, 0x21, 0x30, 0x8e, 0x41, 0x7d, 0x2b, 0xd3, 0xc4, 0xaa, 0x45, 0x8f, 0xc4, 0xbe, 0x41, 0x8d, 0x41, 0x52, 0x28, 0xd3, 0xc4, 0x6, 0x91, 0x8f, 0xc4, 0x2c, 0x54, 0x8c, 0x41, 0xb8, 0x16, 0xd3, 0xc4, 0x6f, 0xda, 0x8f, 0xc4, 0x66, 0x66, 0x8b, 0x41, 0x75, 0xf7, 0xd2, 0xc4, 0x3b, 0x1f, 0x90, 0xc4, 0x38, 0x78, 0x8a, 0x41, 0xf2, 0xca, 0xd2, 0xc4, 0x62, 0x5c, 0x90, 0xc4, 0x3e, 0x68, 0x89, 0x41, 0x56, 0x92, 0xd2, 0xc4, 0xc9, 0x8e, 0x90, 0xc4, 0x4d, 0x4, 0x88, 0x41, 0x48, 0x51, 0xd2, 0xc4, 0x68, 0xb5, 0x90, 0xc4, 0xbd, 0x63, 0x86, 0x41, 0x4, 0xa, 0xd2, 0xc4, 0xe9, 0xce, 0x90, 0xc4, 0x9f, 0xab, 0x84, 0x41, 0x23, 0xbf, 0xd1, 0xc4, 0xa4, 0xd8, 0x90, 0xc4, 0x64, 0xbb, 0x82, 0x41, 0x8, 0x74, 0xd1, 0xc4, 0x3b, 0xd3, 0x90, 0xc4, 0x27, 0xc2, 0x80, 0x41, 0x8d, 0x2b, 0xd1, 0xc4, 0xcf, 0xbf, 0x90, 0xc4, 0x5e, 0xba, 0x7e, 0x41, 0x29, 0xe8, 0xd0, 0xc4, 0xe9, 0x9e, 0x90, 0xc4, 0x85, 0xeb, 0x7c, 0x41, 0xec, 0xad, 0xd0, 0xc4, 0x5a, 0x70, 0x90, 0xc4, 0xb4, 0x59, 0x7c, 0x41, 0x23, 0x7b, 0xd0, 0xc4, 0x1f, 0x35, 0x90, 0xc4, 0x89, 0x41, 0x7c, 0x41, 0x8f, 0x4a, 0xd0, 0xc4, 0x44, 0xfb, 0x8f, 0xc4, 0x26, 0x53, 0x7c, 0x41, 0x0, 0x1c, 0xd0, 0xc4, 0xbe, 0xc3, 0x8f, 0xc4, 0xd9, 0x5f, 0x7e, 0x41, 0xb8, 0xee, 0xcf, 0xc4, 0xcb, 0x8d, 0x8f, 0xc4, 0x81, 0x95, 0x81, 0x41, 0xe, 0xc1, 0xcf, 0xc4, 0x64, 0x57, 0x8f, 0xc4, 0x2d, 0x21, 0x85, 0x41, 0xcb, 0x91, 0xcf, 0xc4, 0xa, 0x1f, 0x8f, 0xc4, 0x7d, 0x50, 0x89, 0x41, 0x52, 0x60, 0xcf, 0xc4, 0x21, 0xe4, 0x8e, 0xc4, 0x86, 0x5a, 0x8b, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8a, 0xb0, 0xc0, 0x41, 0x66, 0x58, 0xf1, 0x41, 0x7c, 0xab, 0x1, 0x42, 0x82, 0x63, 0x9, 0x42, 0x8b, 0x9e, 0x11, 0x42, 0xb3, 0xed, 0x1b, 0x42, 0x18, 0x2b, 0x26, 0x42, 0xc3, 0x45, 0x30, 0x42, 0xb0, 0x30, 0x3a, 0x42, 0xa1, 0xdc, 0x43, 0x42, 0x3d, 0x39, 0x4d, 0x42, 0x51, 0x39, 0x56, 0x42, 0x46, 0xcd, 0x5e, 0x42, 0x10, 0xe7, 0x66, 0x42, 0x60, 0xc, 0x76, 0x42, 0xea, 0x36, 0x81, 0x42, 0xbc, 0xa8, 0x85, 0x42, 0x3f, 0x30, 0x88, 0x42, 0xa0, 0xb1, 0x8b, 0x42, 0xa4, 0x56, 0x8e, 0x42, 0x66, 0xe1, 0x90, 0x42, 0x9d, 0x60, 0x95, 0x42, 0xb5, 0xef, 0x9a, 0x42, 0x7c, 0xef, 0xa0, 0x42, 0xd0, 0xfa, 0xa3, 0x42, 0xbb, 0x32, 0xa8, 0x42, 0x88, 0xc3, 0xac, 0x42, 0xa7, 0xee, 0xb0, 0x42, 0xba, 0x23, 0xb6, 0x42, 0xca, 0x20, 0xbb, 0x42, 0x44, 0x15, 0xc0, 0x42, 0x56, 0xf0, 0xc4, 0x42, 0x2d, 0xa9, 0xc9, 0x42, 0x14, 0x65, 0xce, 0x42, 0xbf, 0x1d, 0xd3, 0x42, 0x11, 0xcf, 0xd7, 0x42, 0x36, 0x88, 0xdc, 0x42, 0xea, 0x41, 0xe1, 0x42, 0xf4, 0xf2, 0xe5, 0x42, 0x29, 0xab, 0xea, 0x42, 0x36, 0x5d, 0xef, 0x42, 0x9c, 0x17, 0xf4, 0x42, 0x53, 0xd2, 0xf8, 0x42, 0xa9, 0x82, 0xfd, 0x42, 0xbd, 0x1d, 0x1, 0x43, 0x92, 0x7a, 0x3, 0x43, 0x12, 0xd4, 0x5, 0x43, 0x41, 0x30, 0x8, 0x43, 0xf, 0x8d, 0xa, 0x43, 0x8e, 0xe7, 0xc, 0x43, 0xf7, 0x43, 0xf, 0x43, 0x35, 0x9e, 0x11, 0x43, 0x27, 0xfb, 0x13, 0x43, 0xbe, 0x57, 0x16, 0x43, 0xde, 0xb2, 0x18, 0x43, 0x3, 0xf, 0x1b, 0x43, 0xd, 0x6c, 0x1d, 0x43, 0x95, 0xc7, 0x1f, 0x43, 0x7e, 0x24, 0x22, 0x43, 0x54, 0x80, 0x24, 0x43, 0x66, 0xdd, 0x26, 0x43, 0x13, 0x3a, 0x29, 0x43, 0x56, 0x96, 0x2b, 0x43, 0x64, 0xf3, 0x2d, 0x43, 0x1, 0x50, 0x30, 0x43, 0x60, 0xad, 0x32, 0x43, 0x96, 0xa, 0x35, 0x43, 0x1, 0x68, 0x37, 0x43, 0x20, 0xc5, 0x39, 0x43, 0x35, 0x22, 0x3c, 0x43, 0x8f, 0x80, 0x3e, 0x43, 0x88, 0xdd, 0x40, 0x43, 0x4f, 0x3a, 0x43, 0x43, 0x8, 0x99, 0x45, 0x43, 0x92, 0xfa, 0x47, 0x43, 0xb7, 0x65, 0x4a, 0x43, 0x48, 0xdd, 0x4c, 0x43, 0xa0, 0x41, 0x4f, 0x43, 0x98, 0xa1, 0x51, 0x43, 0xaf, 0x1, 0x54, 0x43, 0x81, 0x61, 0x56, 0x43, 0x71, 0xc0, 0x58, 0x43, 0xd1, 0xff, 0x5a, 0x43, 0x5e, 0x1d, 0x5d, 0x43, 0x94, 0x21, 0x5f, 0x43, 0x88, 0x87, 0x61, 0x43, 0x5, 0x95, 0x63, 0x43, 0xfa, 0xfa, 0x65, 0x43, 0xb2, 0x46, 0x68, 0x43, 0xa7, 0xa8, 0x6a, 0x43, 0xc6, 0xed, 0x6c, 0x43, 0x56, 0xef, 0x6e, 0x43, 0x1d, 0x39, 0x71, 0x43, 0xb, 0xcd, 0x73, 0x43, 0x5c, 0x71, 0x76, 0x43, 0x3c, 0x5, 0x79, 0x43, 0x1e, 0x89, 0x7b, 0x43, 0xeb, 0x7, 0x7e, 0x43, 0xf, 0x3e, 0x80, 0x43, 0x7, 0x6c, 0x81, 0x43, 0xe7, 0x9a, 0x82, 0x43, 0xd2, 0xcf, 0x83, 0x43, 0x3f, 0x6, 0x85, 0x43, 0x73, 0x39, 0x86, 0x43, 0x10, 0x65, 0x87, 0x43, 0x2b, 0x84, 0x88, 0x43, 0x88, 0x91, 0x89, 0x43, 0x76, 0xc0, 0x8a, 0x43, 0xf, 0xe4, 0x8b, 0x43, 0x8a, 0x0, 0x8d, 0x43, 0x1, 0x20, 0x8e, 0x43, 0xec, 0x49, 0x8f, 0x43, 0x5e, 0x82, 0x90, 0x43, 0x8, 0xbd, 0x91, 0x43, 0xfe, 0xf7, 0x92, 0x43, 0x48, 0x31, 0x94, 0x43, 0x71, 0x66, 0x95, 0x43, 0x9b, 0x95, 0x96, 0x43, 0xd2, 0xc2, 0x97, 0x43, 0x6, 0xf3, 0x98, 0x43, 0x81, 0x22, 0x9a, 0x43, 0x3b, 0x53, 0x9b, 0x43, 0x90, 0x84, 0x9c, 0x43, 0x58, 0xb5, 0x9d, 0x43, 0xa1, 0xe4, 0x9e, 0x43, 0xc3, 0x13, 0xa0, 0x43, 0x66, 0x43, 0xa1, 0x43, 0x2c, 0x73, 0xa2, 0x43, 0x23, 0xa3, 0xa3, 0x43, 0x4f, 0xd3, 0xa4, 0x43, 0x8b, 0x3, 0xa6, 0x43, 0xe4, 0x33, 0xa7, 0x43, 0x24, 0x64, 0xa8, 0x43, 0x56, 0x94, 0xa9, 0x43, 0x84, 0xc4, 0xaa, 0x43, 0x7b, 0xf4, 0xab, 0x43, 0x33, 0x24, 0xad, 0x43, 0xad, 0x53, 0xae, 0x43, 0xea, 0x82, 0xaf, 0x43, 0xb3, 0xb1, 0xb0, 0x43, 0x55, 0xe0, 0xb1, 0x43, 0x80, 0xe, 0xb3, 0x43, 0x74, 0x3c, 0xb4, 0x43, 0xd, 0x6a, 0xb5, 0x43, 0x32, 0x97, 0xb6, 0x43, 0x3b, 0xc4, 0xb7, 0x43, 0xcb, 0xf0, 0xb8, 0x43, 0x44, 0x1d, 0xba, 0x43, 0x8b, 0x49, 0xbb, 0x43, 0xa6, 0x75, 0xbc, 0x43, 0xa9, 0xa1, 0xbd, 0x43, 0xab, 0xcd, 0xbe, 0x43, 0xdd, 0xf9, 0xbf, 0x43, 0xc, 0x26, 0xc1, 0x43, 0x74, 0x52, 0xc2, 0x43, 0xfc, 0x7e, 0xc3, 0x43, 0xe3, 0xab, 0xc4, 0x43, 0x22, 0xd9, 0xc5, 0x43, 0xe1, 0x6, 0xc7, 0x43, 0xdd, 0x34, 0xc8, 0x43, 0xed, 0x63, 0xc9, 0x43, 0xa5, 0x53, 0xca, 0x43, 0x3d, 0x49, 0xcb, 0x43, 0xc2, 0x4f, 0xcc, 0x43, 0xfd, 0x65, 0xcd, 0x43, 0x5c, 0x8a, 0xce, 0x43, 0x5, 0xbc, 0xcf, 0x43, 0x72, 0xfa, 0xd0, 0x43, 0x45, 0x46, 0xd2, 0x43, 0xcd, 0xa0, 0xd3, 0x43, 0x43, 0xc, 0xd5, 0x43, 0xfe, 0x8d, 0xd6, 0x43, 0xcc, 0xf, 0xd8, 0x43, 0x1d, 0x7b, 0xd9, 0x43, 0x56, 0xd4, 0xda, 0x43, 0xce, 0x1d, 0xdc, 0x43, 0x7f, 0x58, 0xdd, 0x43, 0x75, 0x83, 0xde, 0x43, 0x44, 0xa1, 0xdf, 0x43, 0x5f, 0xa1, 0xe0, 0x43, 0x33, 0x8d, 0xe1, 0x43, 0x2d, 0x5c, 0xe2, 0x43, 0x1f, 0x81, 0xe3, 0x43, 0x80, 0xaf, 0xe4, 0x43, 0x99, 0xdd, 0xe5, 0x43, 0xff, 0xa, 0xe7, 0x43, 0x6a, 0x39, 0xe8, 0x43, 0x97, 0x67, 0xe9, 0x43, 0xe5, 0x95, 0xea, 0x43, 0x42, 0xc3, 0xeb, 0x43, 0x8b, 0xf1, 0xec, 0x43, 0xb3, 0x1f, 0xee, 0x43, 0x35, 0x4e, 0xef, 0x43, 0xbb, 0x7b, 0xf0, 0x43, 0xe9, 0xa9, 0xf1, 0x43, 0x4d, 0xd8, 0xf2, 0x43, 0xfd, 0x5, 0xf4, 0x43, 0x51, 0x34, 0xf5, 0x43, 0x9c, 0x62, 0xf6, 0x43, 0xfc, 0x90, 0xf7, 0x43, 0xcb, 0xbe, 0xf8, 0x43, 0x16, 0xed, 0xf9, 0x43, 0x6d, 0x1b, 0xfb, 0x43, 0xdb, 0x49, 0xfc, 0x43, 0xed, 0x77, 0xfd, 0x43, 0x3f, 0xa6, 0xfe, 0x43, 0xe5, 0xd4, 0xff, 0x43, 0xf5, 0x81, 0x0, 0x44, 0xf4, 0x19, 0x1, 0x44, 0xd4, 0xb1, 0x1, 0x44, 0xd5, 0x49, 0x2, 0x44, 0xa5, 0xe1, 0x2, 0x44, 0x11, 0x79, 0x3, 0x44, 0x8e, 0xf, 0x4, 0x44, 0xb7, 0xa5, 0x4, 0x44, 0xdc, 0x3a, 0x5, 0x44, 0xe7, 0xd6, 0x5, 0x44, 0xfe, 0x6d, 0x6, 0x44, 0x24, 0xff, 0x6, 0x44, 0x4f, 0x8d, 0x7, 0x44, 0x2a, 0x1e, 0x8, 0x44, 0x6, 0xb5, 0x8, 0x44, 0xbf, 0x4f, 0x9, 0x44, 0x9a, 0x99, 0x99, 0x3e, 0x9a, 0x99, 0x99, 0x3e, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x0, 0x0, 0x40, 0x40, 0x4a, 0x7b, 0x4b, 0x40, 0x14, 0xae, 0x99, 0x40, 0xa2, 0x45, 0xd8, 0x40, 0x4d, 0x84, 0x5, 0x41, 0x63, 0x7f, 0xd, 0x41, 0xd5, 0x78, 0xe, 0x41, 0x1a, 0x51, 0xb, 0x41, 0xdd, 0x24, 0x3, 0x41, 0x7c, 0xf2, 0xf2, 0x40, 0x76, 0x4f, 0xe0, 0x40, 0xd0, 0x44, 0xd6, 0x40, 0x71, 0x1b, 0xd7, 0x40, 0x34, 0x11, 0xdc, 0x40, 0xe, 0xbe, 0xe0, 0x40, 0x8f, 0xc2, 0xe5, 0x40, 0xf9, 0xf, 0xeb, 0x40, 0x9e, 0xef, 0xf1, 0x40, 0x5b, 0x42, 0xf6, 0x40, 0xe0, 0x2d, 0xfc, 0x40, 0xed, 0xd, 0x1, 0x41, 0xbb, 0x27, 0x4, 0x41, 0x37, 0x89, 0x6, 0x41, 0xc7, 0xba, 0x9, 0x41, 0xd7, 0x34, 0xc, 0x41, 0x69, 0x6f, 0xf, 0x41, 0xbf, 0xe, 0x12, 0x41, 0x56, 0x9f, 0x14, 0x41, 0x86, 0x38, 0x17, 0x41, 0x6d, 0xc5, 0x19, 0x41, 0x8d, 0x28, 0x1d, 0x41, 0x27, 0xc2, 0x1f, 0x41, 0x42, 0x60, 0x22, 0x41, 0xad, 0xfa, 0x24, 0x41, 0x36, 0xab, 0x27, 0x41, 0x35, 0x5e, 0x2a, 0x41, 0x4f, 0x40, 0x2c, 0x41, 0x3b, 0x1, 0x2f, 0x41, 0xe3, 0xc7, 0x31, 0x41, 0x5c, 0x8f, 0x34, 0x41, 0xf7, 0x75, 0x36, 0x41, 0x89, 0x41, 0x39, 0x41, 0xce, 0x19, 0x3c, 0x41, 0x21, 0x1f, 0x3e, 0x41, 0xce, 0x19, 0x40, 0x41, 0x9, 0xf9, 0x42, 0x41, 0xdb, 0xf9, 0x44, 0x41, 0x17, 0xd9, 0x47, 0x41, 0xc9, 0xe5, 0x49, 0x41, 0x31, 0x8, 0x4c, 0x41, 0x50, 0xfc, 0x4e, 0x41, 0xa0, 0x1a, 0x51, 0x41, 0x5, 0x34, 0x53, 0x41, 0xcd, 0x3b, 0x55, 0x41, 0xa8, 0x35, 0x58, 0x41, 0xe9, 0x48, 0x5a, 0x41, 0xf2, 0xb0, 0x5d, 0x41, 0xe2, 0x58, 0x62, 0x41, 0x26, 0x53, 0x6b, 0x41, 0x28, 0x7e, 0x71, 0x41, 0xff, 0xb2, 0x77, 0x41, 0x3, 0x9, 0x7b, 0x41, 0x75, 0x93, 0x80, 0x41, 0x2f, 0x6e, 0x83, 0x41, 0x29, 0xed, 0x84, 0x41, 0x85, 0xeb, 0x84, 0x41, 0x1c, 0xeb, 0x84, 0x41, 0x1c, 0xeb, 0x84, 0x41, 0xe8, 0xea, 0x84, 0x41, 0xba, 0xeb, 0x84, 0x41, 0xba, 0xeb, 0x84, 0x41, 0x19, 0x84, 0x84, 0x41, 0xf6, 0x28, 0x81, 0x41, 0x74, 0x24, 0x77, 0x41, 0x37, 0x1a, 0x6b, 0x41, 0x71, 0x3d, 0x61, 0x41, 0xb7, 0x62, 0x5c, 0x41, 0x8a, 0x8e, 0x5f, 0x41, 0x71, 0x3d, 0x66, 0x41, 0x7c, 0x61, 0x6e, 0x41, 0x27, 0xa0, 0x75, 0x41, 0x88, 0x63, 0x7b, 0x41, 0x79, 0xe9, 0x7f, 0x41, 0xbb, 0xa7, 0x81, 0x41, 0x7d, 0xd0, 0x82, 0x41, 0xbb, 0x27, 0x83, 0x41, 0x7d, 0x2e, 0x83, 0x41, 0xbc, 0x96, 0x82, 0x41, 0x28, 0xfe, 0x80, 0x41, 0x1, 0xde, 0x7e, 0x41, 0x0, 0x0, 0x77, 0x41, 0x54, 0x74, 0x6d, 0x41, 0x8c, 0x4a, 0x63, 0x41, 0x5, 0x34, 0x59, 0x41, 0xd3, 0xbc, 0x4b, 0x41, 0x1d, 0x5a, 0x43, 0x41, 0x86, 0x5a, 0x38, 0x41, 0xde, 0x93, 0x31, 0x41, 0x4c, 0xa6, 0x29, 0x41, 0x62, 0xa1, 0x23, 0x41, 0xde, 0x93, 0x1e, 0x41, 0x9, 0x8a, 0x18, 0x41, 0x76, 0x4f, 0x14, 0x41, 0xcc, 0xee, 0x10, 0x41, 0x27, 0xa0, 0xd, 0x41, 0x2a, 0xa9, 0xb, 0x41, 0x34, 0xa2, 0x9, 0x41, 0xf6, 0x28, 0x8, 0x41, 0xa3, 0x92, 0x7, 0x41, 0x53, 0x96, 0x7, 0x41, 0x6c, 0x78, 0x8, 0x41, 0xe8, 0xd9, 0x9, 0x41, 0xf3, 0x8e, 0xc, 0x41, 0x22, 0x6c, 0xf, 0x41, 0xd7, 0x12, 0x14, 0x41, 0x58, 0x39, 0x18, 0x41, 0xd0, 0x44, 0x1d, 0x41, 0x4b, 0xc8, 0x21, 0x41, 0xcc, 0x7f, 0x28, 0x41, 0xd8, 0x81, 0x2e, 0x41, 0x39, 0xd6, 0x32, 0x41, 0x6d, 0x56, 0x39, 0x41, 0x6f, 0xf0, 0x3f, 0x41, 0x95, 0x65, 0x44, 0x41, 0x78, 0x9c, 0x4a, 0x41, 0xc0, 0xec, 0x4e, 0x41, 0xd3, 0xbc, 0x52, 0x41, 0x9b, 0x55, 0x56, 0x41, 0x2e, 0xff, 0x5a, 0x41, 0x7a, 0xc7, 0x5d, 0x41, 0xff, 0x21, 0x60, 0x41, 0x40, 0x13, 0x62, 0x41, 0xb0, 0x72, 0x63, 0x41, 0x7, 0x5f, 0x64, 0x41, 0x4e, 0xd1, 0x64, 0x41, 0x14, 0xd0, 0x64, 0x41, 0xc3, 0x64, 0x64, 0x41, 0x2, 0x9a, 0x63, 0x41, 0xf0, 0x85, 0x62, 0x41, 0x3d, 0x2c, 0x61, 0x41, 0x19, 0x4, 0x5f, 0x41, 0x7f, 0x6a, 0x5d, 0x41, 0x29, 0xcb, 0x5c, 0x41, 0x7d, 0xae, 0x5b, 0x41, 0xa0, 0x89, 0x5a, 0x41, 0x76, 0x71, 0x59, 0x41, 0x28, 0x7e, 0x58, 0x41, 0x46, 0xb6, 0x57, 0x41, 0x9b, 0xe6, 0x56, 0x41, 0x6b, 0x9a, 0x56, 0x41, 0x2, 0x9a, 0x56, 0x41, 0x91, 0xed, 0x56, 0x41, 0x1c, 0xeb, 0x57, 0x41, 0x71, 0xac, 0x59, 0x41, 0xe, 0x2d, 0x5c, 0x41, 0x98, 0x4c, 0x5e, 0x41, 0x1c, 0xeb, 0x61, 0x41, 0x9f, 0xab, 0x64, 0x41, 0xb6, 0x84, 0x67, 0x41, 0xe, 0x4f, 0x6a, 0x41, 0x14, 0xd0, 0x6b, 0x41, 0x58, 0x39, 0x6e, 0x41, 0xc4, 0x42, 0x6f, 0x41, 0xce, 0x88, 0x70, 0x41, 0x5b, 0xd3, 0x71, 0x41, 0xa9, 0x13, 0x73, 0x41, 0xd6, 0x56, 0x74, 0x41, 0x31, 0x99, 0x75, 0x41, 0x8c, 0xdb, 0x76, 0x41, 0xe7, 0x1d, 0x78, 0x41, 0xb7, 0xd1, 0x78, 0x41, 0x12, 0x14, 0x7a, 0x41, 0xca, 0x54, 0x7b, 0x41, 0xc, 0x93, 0x7c, 0x41, 0xd0, 0xd5, 0x7d, 0x41, 0x2b, 0x18, 0x7f, 0x41, 0x49, 0x2e, 0x80, 0x41, 0x19, 0x84, 0x80, 0x41, 0x3a, 0x23, 0x81, 0x41, 0x39, 0xc5, 0x81, 0x41, 0x95, 0x65, 0x82, 0x41, 0xc2, 0x6, 0x83, 0x41, 0x7c, 0x61, 0x83, 0x41, 0x9d, 0x0, 0x84, 0x41, 0x5, 0xa3, 0x84, 0x41, 0x30, 0x4c, 0x85, 0x41, 0xdd, 0xa4, 0x85, 0x41, 0x5, 0x45, 0x86, 0x41, 0xb3, 0xfb, 0x86, 0x41, 0xf4, 0xec, 0x87, 0x41, 0x5f, 0x87, 0x88, 0x41, 0x9c, 0xb3, 0x89, 0x41, 0x41, 0x2, 0x8b, 0x41, 0x4f, 0xc0, 0x8b, 0x41, 0xd7, 0xb4, 0x8c, 0x41, 0x83, 0x51, 0x8d, 0x41, 0x29, 0x6d, 0x8d, 0x41, 0x25, 0x75, 0x8d, 0x41, 0xde, 0x71, 0x8d, 0x41, 0xf5, 0xb9, 0x8c, 0x41, 0xcf, 0xf7, 0x8a, 0x41, 0xbc, 0x96, 0x89, 0x41, 0x33, 0xc4, 0x86, 0x41, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x0, 0x0, 0x41, 0x98, 0x2b, 0xb, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0xc0, 0x2b, 0xb, 0xb0, 0x16, 0x41, 0x52, 0x52, 0x49, 0x56, 0x41, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x83, 0xf9, 0xa2, 0x0, 0x44, 0x4e, 0x6e, 0x0, 0xfc, 0x29, 0x15, 0x0, 0xd1, 0x57, 0x27, 0x0, 0xdd, 0x34, 0xf5, 0x0, 0x62, 0xdb, 0xc0, 0x0, 0x3c, 0x99, 0x95, 0x0, 0x41, 0x90, 0x43, 0x0, 0x63, 0x51, 0xfe, 0x0, 0xbb, 0xde, 0xab, 0x0, 0xb7, 0x61, 0xc5, 0x0, 0x3a, 0x6e, 0x24, 0x0, 0xd2, 0x4d, 0x42, 0x0, 0x49, 0x6, 0xe0, 0x0, 0x9, 0xea, 0x2e, 0x0, 0x1c, 0x92, 0xd1, 0x0, 0xeb, 0x1d, 0xfe, 0x0, 0x29, 0xb1, 0x1c, 0x0, 0xe8, 0x3e, 0xa7, 0x0, 0xf5, 0x35, 0x82, 0x0, 0x44, 0xbb, 0x2e, 0x0, 0x9c, 0xe9, 0x84, 0x0, 0xb4, 0x26, 0x70, 0x0, 0x41, 0x7e, 0x5f, 0x0, 0xd6, 0x91, 0x39, 0x0, 0x53, 0x83, 0x39, 0x0, 0x9c, 0xf4, 0x39, 0x0, 0x8b, 0x5f, 0x84, 0x0, 0x28, 0xf9, 0xbd, 0x0, 0xf8, 0x1f, 0x3b, 0x0, 0xde, 0xff, 0x97, 0x0, 0xf, 0x98, 0x5, 0x0, 0x11, 0x2f, 0xef, 0x0, 0xa, 0x5a, 0x8b, 0x0, 0x6d, 0x1f, 0x6d, 0x0, 0xcf, 0x7e, 0x36, 0x0, 0x9, 0xcb, 0x27, 0x0, 0x46, 0x4f, 0xb7, 0x0, 0x9e, 0x66, 0x3f, 0x0, 0x2d, 0xea, 0x5f, 0x0, 0xba, 0x27, 0x75, 0x0, 0xe5, 0xeb, 0xc7, 0x0, 0x3d, 0x7b, 0xf1, 0x0, 0xf7, 0x39, 0x7, 0x0, 0x92, 0x52, 0x8a, 0x0, 0xfb, 0x6b, 0xea, 0x0, 0x1f, 0xb1, 0x5f, 0x0, 0x8, 0x5d, 0x8d, 0x0, 0x30, 0x3, 0x56, 0x0, 0x7b, 0xfc, 0x46, 0x0, 0xf0, 0xab, 0x6b, 0x0, 0x20, 0xbc, 0xcf, 0x0, 0x36, 0xf4, 0x9a, 0x0, 0xe3, 0xa9, 0x1d, 0x0, 0x5e, 0x61, 0x91, 0x0, 0x8, 0x1b, 0xe6, 0x0, 0x85, 0x99, 0x65, 0x0, 0xa0, 0x14, 0x5f, 0x0, 0x8d, 0x40, 0x68, 0x0, 0x80, 0xd8, 0xff, 0x0, 0x27, 0x73, 0x4d, 0x0, 0x6, 0x6, 0x31, 0x0, 0xca, 0x56, 0x15, 0x0, 0xc9, 0xa8, 0x73, 0x0, 0x7b, 0xe2, 0x60, 0x0, 0x6b, 0x8c, 0xc0, 0x0, 0x19, 0xc4, 0x47, 0x0, 0xcd, 0x67, 0xc3, 0x0, 0x9, 0xe8, 0xdc, 0x0, 0x59, 0x83, 0x2a, 0x0, 0x8b, 0x76, 0xc4, 0x0, 0xa6, 0x1c, 0x96, 0x0, 0x44, 0xaf, 0xdd, 0x0, 0x19, 0x57, 0xd1, 0x0, 0xa5, 0x3e, 0x5, 0x0, 0x5, 0x7, 0xff, 0x0, 0x33, 0x7e, 0x3f, 0x0, 0xc2, 0x32, 0xe8, 0x0, 0x98, 0x4f, 0xde, 0x0, 0xbb, 0x7d, 0x32, 0x0, 0x26, 0x3d, 0xc3, 0x0, 0x1e, 0x6b, 0xef, 0x0, 0x9f, 0xf8, 0x5e, 0x0, 0x35, 0x1f, 0x3a, 0x0, 0x7f, 0xf2, 0xca, 0x0, 0xf1, 0x87, 0x1d, 0x0, 0x7c, 0x90, 0x21, 0x0, 0x6a, 0x24, 0x7c, 0x0, 0xd5, 0x6e, 0xfa, 0x0, 0x30, 0x2d, 0x77, 0x0, 0x15, 0x3b, 0x43, 0x0, 0xb5, 0x14, 0xc6, 0x0, 0xc3, 0x19, 0x9d, 0x0, 0xad, 0xc4, 0xc2, 0x0, 0x2c, 0x4d, 0x41, 0x0, 0xc, 0x0, 0x5d, 0x0, 0x86, 0x7d, 0x46, 0x0, 0xe3, 0x71, 0x2d, 0x0, 0x9b, 0xc6, 0x9a, 0x0, 0x33, 0x62, 0x0, 0x0, 0xb4, 0xd2, 0x7c, 0x0, 0xb4, 0xa7, 0x97, 0x0, 0x37, 0x55, 0xd5, 0x0, 0xd7, 0x3e, 0xf6, 0x0, 0xa3, 0x10, 0x18, 0x0, 0x4d, 0x76, 0xfc, 0x0, 0x64, 0x9d, 0x2a, 0x0, 0x70, 0xd7, 0xab, 0x0, 0x63, 0x7c, 0xf8, 0x0, 0x7a, 0xb0, 0x57, 0x0, 0x17, 0x15, 0xe7, 0x0, 0xc0, 0x49, 0x56, 0x0, 0x3b, 0xd6, 0xd9, 0x0, 0xa7, 0x84, 0x38, 0x0, 0x24, 0x23, 0xcb, 0x0, 0xd6, 0x8a, 0x77, 0x0, 0x5a, 0x54, 0x23, 0x0, 0x0, 0x1f, 0xb9, 0x0, 0xf1, 0xa, 0x1b, 0x0, 0x19, 0xce, 0xdf, 0x0, 0x9f, 0x31, 0xff, 0x0, 0x66, 0x1e, 0x6a, 0x0, 0x99, 0x57, 0x61, 0x0, 0xac, 0xfb, 0x47, 0x0, 0x7e, 0x7f, 0xd8, 0x0, 0x22, 0x65, 0xb7, 0x0, 0x32, 0xe8, 0x89, 0x0, 0xe6, 0xbf, 0x60, 0x0, 0xef, 0xc4, 0xcd, 0x0, 0x6c, 0x36, 0x9, 0x0, 0x5d, 0x3f, 0xd4, 0x0, 0x16, 0xde, 0xd7, 0x0, 0x58, 0x3b, 0xde, 0x0, 0xde, 0x9b, 0x92, 0x0, 0xd2, 0x22, 0x28, 0x0, 0x28, 0x86, 0xe8, 0x0, 0xe2, 0x58, 0x4d, 0x0, 0xc6, 0xca, 0x32, 0x0, 0x8, 0xe3, 0x16, 0x0, 0xe0, 0x7d, 0xcb, 0x0, 0x17, 0xc0, 0x50, 0x0, 0xf3, 0x1d, 0xa7, 0x0, 0x18, 0xe0, 0x5b, 0x0, 0x2e, 0x13, 0x34, 0x0, 0x83, 0x12, 0x62, 0x0, 0x83, 0x48, 0x1, 0x0, 0xf5, 0x8e, 0x5b, 0x0, 0xad, 0xb0, 0x7f, 0x0, 0x1e, 0xe9, 0xf2, 0x0, 0x48, 0x4a, 0x43, 0x0, 0x10, 0x67, 0xd3, 0x0, 0xaa, 0xdd, 0xd8, 0x0, 0xae, 0x5f, 0x42, 0x0, 0x6a, 0x61, 0xce, 0x0, 0xa, 0x28, 0xa4, 0x0, 0xd3, 0x99, 0xb4, 0x0, 0x6, 0xa6, 0xf2, 0x0, 0x5c, 0x77, 0x7f, 0x0, 0xa3, 0xc2, 0x83, 0x0, 0x61, 0x3c, 0x88, 0x0, 0x8a, 0x73, 0x78, 0x0, 0xaf, 0x8c, 0x5a, 0x0, 0x6f, 0xd7, 0xbd, 0x0, 0x2d, 0xa6, 0x63, 0x0, 0xf4, 0xbf, 0xcb, 0x0, 0x8d, 0x81, 0xef, 0x0, 0x26, 0xc1, 0x67, 0x0, 0x55, 0xca, 0x45, 0x0, 0xca, 0xd9, 0x36, 0x0, 0x28, 0xa8, 0xd2, 0x0, 0xc2, 0x61, 0x8d, 0x0, 0x12, 0xc9, 0x77, 0x0, 0x4, 0x26, 0x14, 0x0, 0x12, 0x46, 0x9b, 0x0, 0xc4, 0x59, 0xc4, 0x0, 0xc8, 0xc5, 0x44, 0x0, 0x4d, 0xb2, 0x91, 0x0, 0x0, 0x17, 0xf3, 0x0, 0xd4, 0x43, 0xad, 0x0, 0x29, 0x49, 0xe5, 0x0, 0xfd, 0xd5, 0x10, 0x0, 0x0, 0xbe, 0xfc, 0x0, 0x1e, 0x94, 0xcc, 0x0, 0x70, 0xce, 0xee, 0x0, 0x13, 0x3e, 0xf5, 0x0, 0xec, 0xf1, 0x80, 0x0, 0xb3, 0xe7, 0xc3, 0x0, 0xc7, 0xf8, 0x28, 0x0, 0x93, 0x5, 0x94, 0x0, 0xc1, 0x71, 0x3e, 0x0, 0x2e, 0x9, 0xb3, 0x0, 0xb, 0x45, 0xf3, 0x0, 0x88, 0x12, 0x9c, 0x0, 0xab, 0x20, 0x7b, 0x0, 0x2e, 0xb5, 0x9f, 0x0, 0x47, 0x92, 0xc2, 0x0, 0x7b, 0x32, 0x2f, 0x0, 0xc, 0x55, 0x6d, 0x0, 0x72, 0xa7, 0x90, 0x0, 0x6b, 0xe7, 0x1f, 0x0, 0x31, 0xcb, 0x96, 0x0, 0x79, 0x16, 0x4a, 0x0, 0x41, 0x79, 0xe2, 0x0, 0xf4, 0xdf, 0x89, 0x0, 0xe8, 0x94, 0x97, 0x0, 0xe2, 0xe6, 0x84, 0x0, 0x99, 0x31, 0x97, 0x0, 0x88, 0xed, 0x6b, 0x0, 0x5f, 0x5f, 0x36, 0x0, 0xbb, 0xfd, 0xe, 0x0, 0x48, 0x9a, 0xb4, 0x0, 0x67, 0xa4, 0x6c, 0x0, 0x71, 0x72, 0x42, 0x0, 0x8d, 0x5d, 0x32, 0x0, 0x9f, 0x15, 0xb8, 0x0, 0xbc, 0xe5, 0x9, 0x0, 0x8d, 0x31, 0x25, 0x0, 0xf7, 0x74, 0x39, 0x0, 0x30, 0x5, 0x1c, 0x0, 0xd, 0xc, 0x1, 0x0, 0x4b, 0x8, 0x68, 0x0, 0x2c, 0xee, 0x58, 0x0, 0x47, 0xaa, 0x90, 0x0, 0x74, 0xe7, 0x2, 0x0, 0xbd, 0xd6, 0x24, 0x0, 0xf7, 0x7d, 0xa6, 0x0, 0x6e, 0x48, 0x72, 0x0, 0x9f, 0x16, 0xef, 0x0, 0x8e, 0x94, 0xa6, 0x0, 0xb4, 0x91, 0xf6, 0x0, 0xd1, 0x53, 0x51, 0x0, 0xcf, 0xa, 0xf2, 0x0, 0x20, 0x98, 0x33, 0x0, 0xf5, 0x4b, 0x7e, 0x0, 0xb2, 0x63, 0x68, 0x0, 0xdd, 0x3e, 0x5f, 0x0, 0x40, 0x5d, 0x3, 0x0, 0x85, 0x89, 0x7f, 0x0, 0x55, 0x52, 0x29, 0x0, 0x37, 0x64, 0xc0, 0x0, 0x6d, 0xd8, 0x10, 0x0, 0x32, 0x48, 0x32, 0x0, 0x5b, 0x4c, 0x75, 0x0, 0x4e, 0x71, 0xd4, 0x0, 0x45, 0x54, 0x6e, 0x0, 0xb, 0x9, 0xc1, 0x0, 0x2a, 0xf5, 0x69, 0x0, 0x14, 0x66, 0xd5, 0x0, 0x27, 0x7, 0x9d, 0x0, 0x5d, 0x4, 0x50, 0x0, 0xb4, 0x3b, 0xdb, 0x0, 0xea, 0x76, 0xc5, 0x0, 0x87, 0xf9, 0x17, 0x0, 0x49, 0x6b, 0x7d, 0x0, 0x1d, 0x27, 0xba, 0x0, 0x96, 0x69, 0x29, 0x0, 0xc6, 0xcc, 0xac, 0x0, 0xad, 0x14, 0x54, 0x0, 0x90, 0xe2, 0x6a, 0x0, 0x88, 0xd9, 0x89, 0x0, 0x2c, 0x72, 0x50, 0x0, 0x4, 0xa4, 0xbe, 0x0, 0x77, 0x7, 0x94, 0x0, 0xf3, 0x30, 0x70, 0x0, 0x0, 0xfc, 0x27, 0x0, 0xea, 0x71, 0xa8, 0x0, 0x66, 0xc2, 0x49, 0x0, 0x64, 0xe0, 0x3d, 0x0, 0x97, 0xdd, 0x83, 0x0, 0xa3, 0x3f, 0x97, 0x0, 0x43, 0x94, 0xfd, 0x0, 0xd, 0x86, 0x8c, 0x0, 0x31, 0x41, 0xde, 0x0, 0x92, 0x39, 0x9d, 0x0, 0xdd, 0x70, 0x8c, 0x0, 0x17, 0xb7, 0xe7, 0x0, 0x8, 0xdf, 0x3b, 0x0, 0x15, 0x37, 0x2b, 0x0, 0x5c, 0x80, 0xa0, 0x0, 0x5a, 0x80, 0x93, 0x0, 0x10, 0x11, 0x92, 0x0, 0xf, 0xe8, 0xd8, 0x0, 0x6c, 0x80, 0xaf, 0x0, 0xdb, 0xff, 0x4b, 0x0, 0x38, 0x90, 0xf, 0x0, 0x59, 0x18, 0x76, 0x0, 0x62, 0xa5, 0x15, 0x0, 0x61, 0xcb, 0xbb, 0x0, 0xc7, 0x89, 0xb9, 0x0, 0x10, 0x40, 0xbd, 0x0, 0xd2, 0xf2, 0x4, 0x0, 0x49, 0x75, 0x27, 0x0, 0xeb, 0xb6, 0xf6, 0x0, 0xdb, 0x22, 0xbb, 0x0, 0xa, 0x14, 0xaa, 0x0, 0x89, 0x26, 0x2f, 0x0, 0x64, 0x83, 0x76, 0x0, 0x9, 0x3b, 0x33, 0x0, 0xe, 0x94, 0x1a, 0x0, 0x51, 0x3a, 0xaa, 0x0, 0x1d, 0xa3, 0xc2, 0x0, 0xaf, 0xed, 0xae, 0x0, 0x5c, 0x26, 0x12, 0x0, 0x6d, 0xc2, 0x4d, 0x0, 0x2d, 0x7a, 0x9c, 0x0, 0xc0, 0x56, 0x97, 0x0, 0x3, 0x3f, 0x83, 0x0, 0x9, 0xf0, 0xf6, 0x0, 0x2b, 0x40, 0x8c, 0x0, 0x6d, 0x31, 0x99, 0x0, 0x39, 0xb4, 0x7, 0x0, 0xc, 0x20, 0x15, 0x0, 0xd8, 0xc3, 0x5b, 0x0, 0xf5, 0x92, 0xc4, 0x0, 0xc6, 0xad, 0x4b, 0x0, 0x4e, 0xca, 0xa5, 0x0, 0xa7, 0x37, 0xcd, 0x0, 0xe6, 0xa9, 0x36, 0x0, 0xab, 0x92, 0x94, 0x0, 0xdd, 0x42, 0x68, 0x0, 0x19, 0x63, 0xde, 0x0, 0x76, 0x8c, 0xef, 0x0, 0x68, 0x8b, 0x52, 0x0, 0xfc, 0xdb, 0x37, 0x0, 0xae, 0xa1, 0xab, 0x0, 0xdf, 0x15, 0x31, 0x0, 0x0, 0xae, 0xa1, 0x0, 0xc, 0xfb, 0xda, 0x0, 0x64, 0x4d, 0x66, 0x0, 0xed, 0x5, 0xb7, 0x0, 0x29, 0x65, 0x30, 0x0, 0x57, 0x56, 0xbf, 0x0, 0x47, 0xff, 0x3a, 0x0, 0x6a, 0xf9, 0xb9, 0x0, 0x75, 0xbe, 0xf3, 0x0, 0x28, 0x93, 0xdf, 0x0, 0xab, 0x80, 0x30, 0x0, 0x66, 0x8c, 0xf6, 0x0, 0x4, 0xcb, 0x15, 0x0, 0xfa, 0x22, 0x6, 0x0, 0xd9, 0xe4, 0x1d, 0x0, 0x3d, 0xb3, 0xa4, 0x0, 0x57, 0x1b, 0x8f, 0x0, 0x36, 0xcd, 0x9, 0x0, 0x4e, 0x42, 0xe9, 0x0, 0x13, 0xbe, 0xa4, 0x0, 0x33, 0x23, 0xb5, 0x0, 0xf0, 0xaa, 0x1a, 0x0, 0x4f, 0x65, 0xa8, 0x0, 0xd2, 0xc1, 0xa5, 0x0, 0xb, 0x3f, 0xf, 0x0, 0x5b, 0x78, 0xcd, 0x0, 0x23, 0xf9, 0x76, 0x0, 0x7b, 0x8b, 0x4, 0x0, 0x89, 0x17, 0x72, 0x0, 0xc6, 0xa6, 0x53, 0x0, 0x6f, 0x6e, 0xe2, 0x0, 0xef, 0xeb, 0x0, 0x0, 0x9b, 0x4a, 0x58, 0x0, 0xc4, 0xda, 0xb7, 0x0, 0xaa, 0x66, 0xba, 0x0, 0x76, 0xcf, 0xcf, 0x0, 0xd1, 0x2, 0x1d, 0x0, 0xb1, 0xf1, 0x2d, 0x0, 0x8c, 0x99, 0xc1, 0x0, 0xc3, 0xad, 0x77, 0x0, 0x86, 0x48, 0xda, 0x0, 0xf7, 0x5d, 0xa0, 0x0, 0xc6, 0x80, 0xf4, 0x0, 0xac, 0xf0, 0x2f, 0x0, 0xdd, 0xec, 0x9a, 0x0, 0x3f, 0x5c, 0xbc, 0x0, 0xd0, 0xde, 0x6d, 0x0, 0x90, 0xc7, 0x1f, 0x0, 0x2a, 0xdb, 0xb6, 0x0, 0xa3, 0x25, 0x3a, 0x0, 0x0, 0xaf, 0x9a, 0x0, 0xad, 0x53, 0x93, 0x0, 0xb6, 0x57, 0x4, 0x0, 0x29, 0x2d, 0xb4, 0x0, 0x4b, 0x80, 0x7e, 0x0, 0xda, 0x7, 0xa7, 0x0, 0x76, 0xaa, 0xe, 0x0, 0x7b, 0x59, 0xa1, 0x0, 0x16, 0x12, 0x2a, 0x0, 0xdc, 0xb7, 0x2d, 0x0, 0xfa, 0xe5, 0xfd, 0x0, 0x89, 0xdb, 0xfe, 0x0, 0x89, 0xbe, 0xfd, 0x0, 0xe4, 0x76, 0x6c, 0x0, 0x6, 0xa9, 0xfc, 0x0, 0x3e, 0x80, 0x70, 0x0, 0x85, 0x6e, 0x15, 0x0, 0xfd, 0x87, 0xff, 0x0, 0x28, 0x3e, 0x7, 0x0, 0x61, 0x67, 0x33, 0x0, 0x2a, 0x18, 0x86, 0x0, 0x4d, 0xbd, 0xea, 0x0, 0xb3, 0xe7, 0xaf, 0x0, 0x8f, 0x6d, 0x6e, 0x0, 0x95, 0x67, 0x39, 0x0, 0x31, 0xbf, 0x5b, 0x0, 0x84, 0xd7, 0x48, 0x0, 0x30, 0xdf, 0x16, 0x0, 0xc7, 0x2d, 0x43, 0x0, 0x25, 0x61, 0x35, 0x0, 0xc9, 0x70, 0xce, 0x0, 0x30, 0xcb, 0xb8, 0x0, 0xbf, 0x6c, 0xfd, 0x0, 0xa4, 0x0, 0xa2, 0x0, 0x5, 0x6c, 0xe4, 0x0, 0x5a, 0xdd, 0xa0, 0x0, 0x21, 0x6f, 0x47, 0x0, 0x62, 0x12, 0xd2, 0x0, 0xb9, 0x5c, 0x84, 0x0, 0x70, 0x61, 0x49, 0x0, 0x6b, 0x56, 0xe0, 0x0, 0x99, 0x52, 0x1, 0x0, 0x50, 0x55, 0x37, 0x0, 0x1e, 0xd5, 0xb7, 0x0, 0x33, 0xf1, 0xc4, 0x0, 0x13, 0x6e, 0x5f, 0x0, 0x5d, 0x30, 0xe4, 0x0, 0x85, 0x2e, 0xa9, 0x0, 0x1d, 0xb2, 0xc3, 0x0, 0xa1, 0x32, 0x36, 0x0, 0x8, 0xb7, 0xa4, 0x0, 0xea, 0xb1, 0xd4, 0x0, 0x16, 0xf7, 0x21, 0x0, 0x8f, 0x69, 0xe4, 0x0, 0x27, 0xff, 0x77, 0x0, 0xc, 0x3, 0x80, 0x0, 0x8d, 0x40, 0x2d, 0x0, 0x4f, 0xcd, 0xa0, 0x0, 0x20, 0xa5, 0x99, 0x0, 0xb3, 0xa2, 0xd3, 0x0, 0x2f, 0x5d, 0xa, 0x0, 0xb4, 0xf9, 0x42, 0x0, 0x11, 0xda, 0xcb, 0x0, 0x7d, 0xbe, 0xd0, 0x0, 0x9b, 0xdb, 0xc1, 0x0, 0xab, 0x17, 0xbd, 0x0, 0xca, 0xa2, 0x81, 0x0, 0x8, 0x6a, 0x5c, 0x0, 0x2e, 0x55, 0x17, 0x0, 0x27, 0x0, 0x55, 0x0, 0x7f, 0x14, 0xf0, 0x0, 0xe1, 0x7, 0x86, 0x0, 0x14, 0xb, 0x64, 0x0, 0x96, 0x41, 0x8d, 0x0, 0x87, 0xbe, 0xde, 0x0, 0xda, 0xfd, 0x2a, 0x0, 0x6b, 0x25, 0xb6, 0x0, 0x7b, 0x89, 0x34, 0x0, 0x5, 0xf3, 0xfe, 0x0, 0xb9, 0xbf, 0x9e, 0x0, 0x68, 0x6a, 0x4f, 0x0, 0x4a, 0x2a, 0xa8, 0x0, 0x4f, 0xc4, 0x5a, 0x0, 0x2d, 0xf8, 0xbc, 0x0, 0xd7, 0x5a, 0x98, 0x0, 0xf4, 0xc7, 0x95, 0x0, 0xd, 0x4d, 0x8d, 0x0, 0x20, 0x3a, 0xa6, 0x0, 0xa4, 0x57, 0x5f, 0x0, 0x14, 0x3f, 0xb1, 0x0, 0x80, 0x38, 0x95, 0x0, 0xcc, 0x20, 0x1, 0x0, 0x71, 0xdd, 0x86, 0x0, 0xc9, 0xde, 0xb6, 0x0, 0xbf, 0x60, 0xf5, 0x0, 0x4d, 0x65, 0x11, 0x0, 0x1, 0x7, 0x6b, 0x0, 0x8c, 0xb0, 0xac, 0x0, 0xb2, 0xc0, 0xd0, 0x0, 0x51, 0x55, 0x48, 0x0, 0x1e, 0xfb, 0xe, 0x0, 0x95, 0x72, 0xc3, 0x0, 0xa3, 0x6, 0x3b, 0x0, 0xc0, 0x40, 0x35, 0x0, 0x6, 0xdc, 0x7b, 0x0, 0xe0, 0x45, 0xcc, 0x0, 0x4e, 0x29, 0xfa, 0x0, 0xd6, 0xca, 0xc8, 0x0, 0xe8, 0xf3, 0x41, 0x0, 0x7c, 0x64, 0xde, 0x0, 0x9b, 0x64, 0xd8, 0x0, 0xd9, 0xbe, 0x31, 0x0, 0xa4, 0x97, 0xc3, 0x0, 0x77, 0x58, 0xd4, 0x0, 0x69, 0xe3, 0xc5, 0x0, 0xf0, 0xda, 0x13, 0x0, 0xba, 0x3a, 0x3c, 0x0, 0x46, 0x18, 0x46, 0x0, 0x55, 0x75, 0x5f, 0x0, 0xd2, 0xbd, 0xf5, 0x0, 0x6e, 0x92, 0xc6, 0x0, 0xac, 0x2e, 0x5d, 0x0, 0xe, 0x44, 0xed, 0x0, 0x1c, 0x3e, 0x42, 0x0, 0x61, 0xc4, 0x87, 0x0, 0x29, 0xfd, 0xe9, 0x0, 0xe7, 0xd6, 0xf3, 0x0, 0x22, 0x7c, 0xca, 0x0, 0x6f, 0x91, 0x35, 0x0, 0x8, 0xe0, 0xc5, 0x0, 0xff, 0xd7, 0x8d, 0x0, 0x6e, 0x6a, 0xe2, 0x0, 0xb0, 0xfd, 0xc6, 0x0, 0x93, 0x8, 0xc1, 0x0, 0x7c, 0x5d, 0x74, 0x0, 0x6b, 0xad, 0xb2, 0x0, 0xcd, 0x6e, 0x9d, 0x0, 0x3e, 0x72, 0x7b, 0x0, 0xc6, 0x11, 0x6a, 0x0, 0xf7, 0xcf, 0xa9, 0x0, 0x29, 0x73, 0xdf, 0x0, 0xb5, 0xc9, 0xba, 0x0, 0xb7, 0x0, 0x51, 0x0, 0xe2, 0xb2, 0xd, 0x0, 0x74, 0xba, 0x24, 0x0, 0xe5, 0x7d, 0x60, 0x0, 0x74, 0xd8, 0x8a, 0x0, 0xd, 0x15, 0x2c, 0x0, 0x81, 0x18, 0xc, 0x0, 0x7e, 0x66, 0x94, 0x0, 0x1, 0x29, 0x16, 0x0, 0x9f, 0x7a, 0x76, 0x0, 0xfd, 0xfd, 0xbe, 0x0, 0x56, 0x45, 0xef, 0x0, 0xd9, 0x7e, 0x36, 0x0, 0xec, 0xd9, 0x13, 0x0, 0x8b, 0xba, 0xb9, 0x0, 0xc4, 0x97, 0xfc, 0x0, 0x31, 0xa8, 0x27, 0x0, 0xf1, 0x6e, 0xc3, 0x0, 0x94, 0xc5, 0x36, 0x0, 0xd8, 0xa8, 0x56, 0x0, 0xb4, 0xa8, 0xb5, 0x0, 0xcf, 0xcc, 0xe, 0x0, 0x12, 0x89, 0x2d, 0x0, 0x6f, 0x57, 0x34, 0x0, 0x2c, 0x56, 0x89, 0x0, 0x99, 0xce, 0xe3, 0x0, 0xd6, 0x20, 0xb9, 0x0, 0x6b, 0x5e, 0xaa, 0x0, 0x3e, 0x2a, 0x9c, 0x0, 0x11, 0x5f, 0xcc, 0x0, 0xfd, 0xb, 0x4a, 0x0, 0xe1, 0xf4, 0xfb, 0x0, 0x8e, 0x3b, 0x6d, 0x0, 0xe2, 0x86, 0x2c, 0x0, 0xe9, 0xd4, 0x84, 0x0, 0xfc, 0xb4, 0xa9, 0x0, 0xef, 0xee, 0xd1, 0x0, 0x2e, 0x35, 0xc9, 0x0, 0x2f, 0x39, 0x61, 0x0, 0x38, 0x21, 0x44, 0x0, 0x1b, 0xd9, 0xc8, 0x0, 0x81, 0xfc, 0xa, 0x0, 0xfb, 0x4a, 0x6a, 0x0, 0x2f, 0x1c, 0xd8, 0x0, 0x53, 0xb4, 0x84, 0x0, 0x4e, 0x99, 0x8c, 0x0, 0x54, 0x22, 0xcc, 0x0, 0x2a, 0x55, 0xdc, 0x0, 0xc0, 0xc6, 0xd6, 0x0, 0xb, 0x19, 0x96, 0x0, 0x1a, 0x70, 0xb8, 0x0, 0x69, 0x95, 0x64, 0x0, 0x26, 0x5a, 0x60, 0x0, 0x3f, 0x52, 0xee, 0x0, 0x7f, 0x11, 0xf, 0x0, 0xf4, 0xb5, 0x11, 0x0, 0xfc, 0xcb, 0xf5, 0x0, 0x34, 0xbc, 0x2d, 0x0, 0x34, 0xbc, 0xee, 0x0, 0xe8, 0x5d, 0xcc, 0x0, 0xdd, 0x5e, 0x60, 0x0, 0x67, 0x8e, 0x9b, 0x0, 0x92, 0x33, 0xef, 0x0, 0xc9, 0x17, 0xb8, 0x0, 0x61, 0x58, 0x9b, 0x0, 0xe1, 0x57, 0xbc, 0x0, 0x51, 0x83, 0xc6, 0x0, 0xd8, 0x3e, 0x10, 0x0, 0xdd, 0x71, 0x48, 0x0, 0x2d, 0x1c, 0xdd, 0x0, 0xaf, 0x18, 0xa1, 0x0, 0x21, 0x2c, 0x46, 0x0, 0x59, 0xf3, 0xd7, 0x0, 0xd9, 0x7a, 0x98, 0x0, 0x9e, 0x54, 0xc0, 0x0, 0x4f, 0x86, 0xfa, 0x0, 0x56, 0x6, 0xfc, 0x0, 0xe5, 0x79, 0xae, 0x0, 0x89, 0x22, 0x36, 0x0, 0x38, 0xad, 0x22, 0x0, 0x67, 0x93, 0xdc, 0x0, 0x55, 0xe8, 0xaa, 0x0, 0x82, 0x26, 0x38, 0x0, 0xca, 0xe7, 0x9b, 0x0, 0x51, 0xd, 0xa4, 0x0, 0x99, 0x33, 0xb1, 0x0, 0xa9, 0xd7, 0xe, 0x0, 0x69, 0x5, 0x48, 0x0, 0x65, 0xb2, 0xf0, 0x0, 0x7f, 0x88, 0xa7, 0x0, 0x88, 0x4c, 0x97, 0x0, 0xf9, 0xd1, 0x36, 0x0, 0x21, 0x92, 0xb3, 0x0, 0x7b, 0x82, 0x4a, 0x0, 0x98, 0xcf, 0x21, 0x0, 0x40, 0x9f, 0xdc, 0x0, 0xdc, 0x47, 0x55, 0x0, 0xe1, 0x74, 0x3a, 0x0, 0x67, 0xeb, 0x42, 0x0, 0xfe, 0x9d, 0xdf, 0x0, 0x5e, 0xd4, 0x5f, 0x0, 0x7b, 0x67, 0xa4, 0x0, 0xba, 0xac, 0x7a, 0x0, 0x55, 0xf6, 0xa2, 0x0, 0x2b, 0x88, 0x23, 0x0, 0x41, 0xba, 0x55, 0x0, 0x59, 0x6e, 0x8, 0x0, 0x21, 0x2a, 0x86, 0x0, 0x39, 0x47, 0x83, 0x0, 0x89, 0xe3, 0xe6, 0x0, 0xe5, 0x9e, 0xd4, 0x0, 0x49, 0xfb, 0x40, 0x0, 0xff, 0x56, 0xe9, 0x0, 0x1c, 0xf, 0xca, 0x0, 0xc5, 0x59, 0x8a, 0x0, 0x94, 0xfa, 0x2b, 0x0, 0xd3, 0xc1, 0xc5, 0x0, 0xf, 0xc5, 0xcf, 0x0, 0xdb, 0x5a, 0xae, 0x0, 0x47, 0xc5, 0x86, 0x0, 0x85, 0x43, 0x62, 0x0, 0x21, 0x86, 0x3b, 0x0, 0x2c, 0x79, 0x94, 0x0, 0x10, 0x61, 0x87, 0x0, 0x2a, 0x4c, 0x7b, 0x0, 0x80, 0x2c, 0x1a, 0x0, 0x43, 0xbf, 0x12, 0x0, 0x88, 0x26, 0x90, 0x0, 0x78, 0x3c, 0x89, 0x0, 0xa8, 0xc4, 0xe4, 0x0, 0xe5, 0xdb, 0x7b, 0x0, 0xc4, 0x3a, 0xc2, 0x0, 0x26, 0xf4, 0xea, 0x0, 0xf7, 0x67, 0x8a, 0x0, 0xd, 0x92, 0xbf, 0x0, 0x65, 0xa3, 0x2b, 0x0, 0x3d, 0x93, 0xb1, 0x0, 0xbd, 0x7c, 0xb, 0x0, 0xa4, 0x51, 0xdc, 0x0, 0x27, 0xdd, 0x63, 0x0, 0x69, 0xe1, 0xdd, 0x0, 0x9a, 0x94, 0x19, 0x0, 0xa8, 0x29, 0x95, 0x0, 0x68, 0xce, 0x28, 0x0, 0x9, 0xed, 0xb4, 0x0, 0x44, 0x9f, 0x20, 0x0, 0x4e, 0x98, 0xca, 0x0, 0x70, 0x82, 0x63, 0x0, 0x7e, 0x7c, 0x23, 0x0, 0xf, 0xb9, 0x32, 0x0, 0xa7, 0xf5, 0x8e, 0x0, 0x14, 0x56, 0xe7, 0x0, 0x21, 0xf1, 0x8, 0x0, 0xb5, 0x9d, 0x2a, 0x0, 0x6f, 0x7e, 0x4d, 0x0, 0xa5, 0x19, 0x51, 0x0, 0xb5, 0xf9, 0xab, 0x0, 0x82, 0xdf, 0xd6, 0x0, 0x96, 0xdd, 0x61, 0x0, 0x16, 0x36, 0x2, 0x0, 0xc4, 0x3a, 0x9f, 0x0, 0x83, 0xa2, 0xa1, 0x0, 0x72, 0xed, 0x6d, 0x0, 0x39, 0x8d, 0x7a, 0x0, 0x82, 0xb8, 0xa9, 0x0, 0x6b, 0x32, 0x5c, 0x0, 0x46, 0x27, 0x5b, 0x0, 0x0, 0x34, 0xed, 0x0, 0xd2, 0x0, 0x77, 0x0, 0xfc, 0xf4, 0x55, 0x0, 0x1, 0x59, 0x4d, 0x0, 0xe0, 0x71, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0xfb, 0x21, 0xf9, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x2d, 0x44, 0x74, 0x3e, 0x0, 0x0, 0x0, 0x80, 0x98, 0x46, 0xf8, 0x3c, 0x0, 0x0, 0x0, 0x60, 0x51, 0xcc, 0x78, 0x3b, 0x0, 0x0, 0x0, 0x80, 0x83, 0x1b, 0xf0, 0x39, 0x0, 0x0, 0x0, 0x40, 0x20, 0x25, 0x7a, 0x38, 0x0, 0x0, 0x0, 0x80, 0x22, 0x82, 0xe3, 0x36, 0x0, 0x0, 0x0, 0x0, 0x1d, 0xf3, 0x69, 0x35, 0x0, 0xc, 0x7, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x3, 0x2, 0xf0, 0x39, 0x0, 0x94, 0x3, 0x4, 0x6e, 0x61, 0x6d, 0x65, 0x1, 0x8c, 0x3, 0x1d, 0x0, 0x6, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x1, 0xc, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2, 0xc, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3, 0x9, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x4, 0x14, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x5, 0x14, 0x67, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x6, 0x7, 0x67, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x7, 0xd, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x8, 0x6, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x9, 0x17, 0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0xa, 0x17, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0xb, 0xf, 0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0xc, 0xf, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0xd, 0xf, 0x73, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0xe, 0xf, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0xf, 0xb, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x10, 0xb, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x11, 0xd, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xd, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x13, 0x4, 0x61, 0x73, 0x69, 0x6e, 0x14, 0x5, 0x5f, 0x5f, 0x73, 0x69, 0x6e, 0x15, 0x6, 0x73, 0x63, 0x61, 0x6c, 0x62, 0x6e, 0x16, 0x10, 0x5f, 0x5f, 0x72, 0x65, 0x6d, 0x5f, 0x70, 0x69, 0x6f, 0x32, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x17, 0xa, 0x5f, 0x5f, 0x72, 0x65, 0x6d, 0x5f, 0x70, 0x69, 0x6f, 0x32, 0x18, 0x5, 0x5f, 0x5f, 0x63, 0x6f, 0x73, 0x19, 0x3, 0x73, 0x69, 0x6e, 0x1a, 0x6, 0x6d, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x1b, 0x6, 0x73, 0x74, 0x72, 0x63, 0x6d, 0x70, 0x1c, 0x11, 0x5f, 0x5f, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x74, 0x6f, 0x72, 0x73]),
              _0x4e3c06 = new WebAssembly.Module(_0x1112c9),
              _0x52f4d3 = new WebAssembly.Instance(_0x4e3c06).exports;

        var _0x321503 = _0x415b51(0x48c4),
            _0x2b36b5 = _0x415b51(0x5d90),
            _0x3403fd = _0x415b51(0xc5cf),
            _0xaef244 = _0x415b51(0x16a7d),
            _0x143b1a = _0x415b51(0x161cd);

        const _0xd7d63e = 0.008333333333333333,
              _0x1bee10 = _0x143b1a.players.local;
        let _0x445f35 = false;

        const _0x6c1e0a = [new _0x143b1a.Vector3(-1644.316, -1123.53, 17.3447), new _0x143b1a.Vector3(-1644.92, -1124.281, 17.3447), new _0x143b1a.Vector3(-1645.845, -1125.413, 17.3447), new _0x143b1a.Vector3(-1646.562, -1126.302, 17.3447), new _0x143b1a.Vector3(-1647.498, -1127.438, 17.3447), new _0x143b1a.Vector3(-1648.23, -1128.184, 17.3447), new _0x143b1a.Vector3(-1649.233, -1129.399, 17.3447), new _0x143b1a.Vector3(-1649.937, -1130.203, 17.3447)],
              _0x3386e7 = [{
          'position': new _0x143b1a.Vector3(-0.2139641195535, -0.03828150779, 0.9173934459686279),
          'heading': 177.8191748046875
        }, {
          'position': new _0x143b1a.Vector3(0.37584877014160156, 0.9482621550559998, 0.9204424023628235),
          'heading': 182.81474975585937
        }],
              _0x25341f = {
          'dataInited': false,
          'cars': [],
          'streamedCars': 0x0,
          'chairs': [-0x1, -0x1, -0x1, -0x1, -0x1, -0x1, -0x1, -0x1],
          'state': 0x0,
          'active': false,
          'lastCallHandsUp': Date.now(),
          'blockedUpdater': true,
          'skipFirstStop': true
        },
              _0x16230b = (_0x51a8a5 = false, _0x3cf916 = false, _0x4f5127 = false) => {
          if (_0x51a8a5) {
            const _0xaa3728 = (0x0, _0x321503.getServerTime)();

            _0x25341f.lastUpdate || (_0x25341f.lastUpdate = _0xaa3728);

            const _0x3789d5 = (_0xaa3728 - _0x25341f.lastUpdate) / 0x3e8;

            if (_0x3789d5 >= 0.1) {
              _0x25341f.lastUpdate = _0x25341f.stateStart;

              let _0xb45f20 = (_0xaa3728 - _0x25341f.stateStart) / 0x3e8;

              _0x25341f.lastUpdate = _0xaa3728, _0x52f4d3.setCurrentPositionIndex(0x1), _0x52f4d3.setCurrentPoint(0x1), _0x52f4d3.setCurrentSpeed(0x0);
              let _0x2d4b9b = true;

              for (_0x52f4d3.setTimeDiff(_0xd7d63e); _0xb45f20 > 0x0;) {
                _0xb45f20 -= _0xd7d63e;

                const _0x5766b9 = _0x52f4d3.getCurrentPositionIndex();

                if (0x1 === _0x5766b9 && !_0x2d4b9b) break;
                0x1 !== _0x5766b9 && (_0x2d4b9b = false), _0x16230b(false, true);
              }

              _0x25341f.blockedUpdater = false;
            } else _0x25341f.lastUpdate = _0xaa3728, _0x52f4d3.setTimeDiff(_0x3789d5);
          }

          _0x4f5127 || _0x52f4d3.update(0x0, 0x0), _0x3cf916 || _0x3c172b();
        },
              _0x55e728 = (_0x2faf51, _0x4e2346) => {
          let _0x34f75a, _0x58817b;

          _0x2faf51 <= 0x0 && (_0x2faf51 += _0x3403fd.Z[_0x3403fd.Z.length - 0x1]), _0x52f4d3.getCurrentSpeed() >= 0x0 ? (_0x34f75a = _0x4e2346, _0x58817b = _0x52f4d3.getNextPositionIndex(_0x4e2346)) : (_0x34f75a = _0x52f4d3.getNextPositionIndex(_0x4e2346), _0x58817b = _0x4e2346);

          const _0x10ae69 = Math.abs(_0x3403fd.Z[_0x58817b] - _0x3403fd.Z[_0x34f75a]),
                _0x449037 = (_0x2faf51 - _0x3403fd.Z[_0x34f75a]) / _0x10ae69,
                _0x33ea1c = new _0x143b1a.Vector3(_0x2b36b5.Z[_0x58817b].x - _0x2b36b5.Z[_0x34f75a].x, _0x2b36b5.Z[_0x58817b].y - _0x2b36b5.Z[_0x34f75a].y, _0x2b36b5.Z[_0x58817b].z - _0x2b36b5.Z[_0x34f75a].z),
                _0x2d567d = new _0x143b1a.Vector3(_0x33ea1c.x * _0x449037, _0x33ea1c.y * _0x449037, _0x33ea1c.z * _0x449037);

          return _0x52f4d3.getCurrentSpeed() >= 0x0 ? new _0x143b1a.Vector3(_0x2b36b5.Z[_0x34f75a].x + _0x2d567d.x, _0x2b36b5.Z[_0x34f75a].y + _0x2d567d.y, _0x2b36b5.Z[_0x34f75a].z + _0x2d567d.z) : new _0x143b1a.Vector3(_0x2b36b5.Z[_0x34f75a].x - _0x2d567d.x, _0x2b36b5.Z[_0x34f75a].y - _0x2d567d.y, _0x2b36b5.Z[_0x34f75a].z - _0x2d567d.z);
        },
              _0x3c172b = () => {
          for (let _0x4a70dd = 0x0; _0x4a70dd < _0x25341f.cars.length; _0x4a70dd++) {
            const _0x324e8f = _0x25341f.cars[_0x4a70dd],
                  _0x4a750a = _0x52f4d3.getCurrentPoint() - 2.55 * _0x4a70dd,
                  _0x2021ca = _0x2f2a80(_0x4a750a),
                  _0x41ca33 = _0x55e728(_0x4a750a, _0x2021ca);

            _0x324e8f.setCoordsNoOffset(_0x41ca33.x, _0x41ca33.y, _0x41ca33.z, true, false, false), _0x503b3d(_0x324e8f, _0x2021ca, _0x4a750a);
          }
        },
              _0x503b3d = (_0x35cb80, _0x23b515, _0x5e31ce) => {
          let _0x4615b4 = 0x0,
              _0x3777bb = new _0x1f1b3c.Quaternion(),
              _0x4f28cf = new _0x1f1b3c.Quaternion();

          const _0x5be99d = _0x52f4d3.getPrevPositionIndex(_0x23b515),
                _0x3b92de = _0x23b515,
                _0x206089 = _0x52f4d3.getNextPositionIndex(_0x23b515),
                _0x41c0b5 = _0x52f4d3.getNextPositionIndex(_0x206089);

          _0x5e31ce < 0x0 && (_0x5e31ce += _0x3403fd.Z[_0x3403fd.Z.length - 0x1]);

          const _0x12f200 = (_0x5e31ce - _0x3403fd.Z[_0x3b92de]) / (_0x3403fd.Z[_0x206089] - _0x3403fd.Z[_0x3b92de]);

          _0x12f200 < 0.5 ? (_0x4615b4 = _0x12f200 + 0.5, _0x3777bb = _0x1f1b3c.Quaternion.fromEuler(_0x566c8e(_0x5be99d, _0x3b92de), false), _0x4f28cf = _0x1f1b3c.Quaternion.fromEuler(_0x566c8e(_0x3b92de, _0x206089), false)) : (_0x4615b4 = _0x12f200 - 0.5, _0x3777bb = _0x1f1b3c.Quaternion.fromEuler(_0x566c8e(_0x3b92de, _0x206089), false), _0x4f28cf = _0x1f1b3c.Quaternion.fromEuler(_0x566c8e(_0x206089, _0x41c0b5), false));

          const _0x491f88 = _0x1f1b3c.Quaternion.slerp(_0x3777bb, _0x4f28cf, _0x4615b4);

          _0x35cb80.setQuaternion(_0x491f88.x, _0x491f88.y, _0x491f88.z, _0x491f88.w);
        },
              _0x566c8e = (_0x3436ba, _0x3344c4) => {
          const _0x2eb53f = _0x5e8c78(_0x2b36b5.Z[_0x3344c4], _0x2b36b5.Z[_0x3436ba]),
                _0x2c9344 = Math.atan2(_0x2eb53f.x, _0x2eb53f.y),
                _0x3b31ad = Math.atan2(_0x2eb53f.z, Math.sqrt(_0x2eb53f.x * _0x2eb53f.x + _0x2eb53f.y * _0x2eb53f.y));

          return new _0x143b1a.Vector3(-_0x3b31ad, 0x0, -_0x2c9344 - _0x3c0717.api.degToRad(0xb4));
        },
              _0x5e8c78 = (_0x211941, _0x50ec02) => {
          const _0x5d8633 = new _0x143b1a.Vector3(_0x211941.x - _0x50ec02.x, _0x211941.y - _0x50ec02.y, _0x211941.z - _0x50ec02.z),
                _0x4c31f3 = 0x1 / (Math.sqrt(_0x5d8633.x * _0x5d8633.x + _0x5d8633.y * _0x5d8633.y + _0x5d8633.z * _0x5d8633.z) || 0x1);

          return _0x5d8633.x *= _0x4c31f3, _0x5d8633.y *= _0x4c31f3, _0x5d8633.z *= _0x4c31f3, _0x5d8633;
        },
              _0x2f2a80 = _0x33c9c4 => {
          let _0x576f4e = _0x52f4d3.getCurrentPositionIndex();

          for (_0x33c9c4 <= 0x0 && (_0x33c9c4 += _0x3403fd.Z[_0x2b36b5.Z.length - 0x1], _0x576f4e = _0x2b36b5.Z.length - 0x1); _0x576f4e >= 0x0;) {
            if (_0x3403fd.Z[_0x576f4e] < _0x33c9c4) return _0x576f4e;
            _0x576f4e += -0x1;
          }

          return 0x0;
        },
              _0x549bd7 = _0x506358 => Math.floor(_0x506358 / 0x2),
              _0x4f2e93 = _0x27dfe3 => _0x27dfe3 % 0x2;

        _0x143b1a.events.add('keys.e', () => {
          if (_0x143b1a.game.player.isFreeAiming() || _0x143b1a.gui.cursor.visible || _0x143b1a.players.local.getVariable('fun.minigames.playing') || _0x415b51.g.playableInstrument || _0x143b1a.players.local.vehicle || _0x415b51.g.currentInterface || _0x143b1a.players.local.activeItemId || _0x143b1a.players.local.getVariable('playerInTrunk')) return;
          if (_0x25341f.active || _0x1bee10.rollerStartSit || _0x1bee10.rollerStartExit) return;
          const _0x5e51f3 = _0x1bee10.remoteId,
                _0x466450 = _0x1bee10.position;

          if (-0x1 === _0x25341f.chairs.indexOf(_0x5e51f3) || 0x1 !== _0x25341f.state) {
            if (0x2 !== _0x25341f.state && 0x3 !== _0x25341f.state) for (let _0x50bcb8 = 0x0; _0x50bcb8 < _0x6c1e0a.length; _0x50bcb8++) {
              const _0x43cf02 = _0x6c1e0a[_0x50bcb8];

              if (_0x3c0717.api.vdist2(_0x466450, _0x43cf02) <= 1.3) {
                if (-0x1 !== _0x25341f.chairs[_0x50bcb8]) return void _0x143b1a.game.graphics.notify('~r~Это место занято');

                _0x143b1a.events.callRemote('2677365581', _0x50bcb8);
              }
            }
          } else _0x143b1a.events.callRemote('2404629678');
        });

        const _0x4fb8af = async (_0x2110c0, _0x7bf677 = false) => {
          if (!_0x2110c0 || !_0x143b1a.players.exists(_0x2110c0)) return;
          if ((_0x2110c0.rollerStartSit || _0x2110c0.rollerSitActive || _0x2110c0.rollerStartExit) && !_0x7bf677) return;
          _0x2110c0.rollerStartSit = true, _0x2110c0.rollerStartExit = false;

          const _0x13474d = _0x25341f.chairs.indexOf(_0x2110c0.remoteId);

          _0x2110c0.currentSitIndex = _0x13474d;

          const _0x4aa386 = _0x549bd7(_0x13474d),
                _0x15342a = _0x4f2e93(_0x13474d),
                _0x570fab = _0x25341f.cars[_0x4aa386],
                _0x3e12d4 = _0x6c1e0a[_0x13474d],
                _0x54fbaa = _0x15342a ? 'two' : 'one';

          _0x2110c0.currentPlace = _0x54fbaa;

          const _0x5d40b5 = 0x0 !== _0x15342a ? 0x0 : -1.017,
                _0x38d2a1 = _0x3386e7[_0x15342a],
                _0x508b2f = _0x570fab.getOffsetFromInWorldCoords(0x0, _0x5d40b5, 0x0);

          _0x2110c0.currentCar = _0x570fab;
          let _0x5b911f = _0x2110c0;

          if (_0x2110c0 !== _0x1bee10) {
            if (await _0x3c0717.api.streamIn(_0x2110c0), await _0x143b1a.game.sleep(0x64), !_0x143b1a.players.exists(_0x2110c0)) return;

            const _0x1f31d5 = _0x143b1a.peds.new(_0x2110c0.model, _0x2110c0.position, _0x2110c0.getHeading());

            _0x5b911f = _0x1f31d5, _0x2110c0.cloneToTarget(_0x1f31d5.handle), await _0x3c0717.api.streamIn(_0x1f31d5), _0x143b1a.players.exists(_0x2110c0) && _0x2110c0.setAlpha(0x0), _0x143b1a.peds.exists(_0x1f31d5) && (_0x1f31d5.setNoCollision(_0x2110c0.handle, false), _0x2110c0.attachTo(_0x1f31d5.handle, 0x0, 0x0, 0.25, 0x0, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true));
          } else _0x3c0717.api.usingSystemAnim(true);

          if (_0x2110c0.rollerAnimTarget = _0x5b911f, _0x7bf677) {
            _0x5b911f.attachTo(_0x570fab.handle, 0x0, _0x38d2a1.position.x, _0x38d2a1.position.y, _0x38d2a1.position.z, 0x0, 0x0, _0x38d2a1.heading, false, false, false, false, 0x2, true);

            const _0x1b1cd7 = 0x2 === _0x25341f.state || 0x3 === _0x25341f.state ? 'safety_bar_enter_player_' + _0x54fbaa : 'idle_a_player_' + _0x54fbaa;

            _0x5b911f.taskPlayAnim('anim@mp_rollarcoaster', _0x1b1cd7, 0x8, -0x8, -0x1, 0x2, 0x1, false, false, false);
          } else {
            _0x5b911f.taskGoStraightToCoord(_0x3e12d4.x, _0x3e12d4.y, _0x3e12d4.z, 0x1, -0x1, 229.3511, 0.2), await _0x3c0717.api.isTaskGoStraightToCoordComplete();

            const _0x558188 = _0x143b1a.game.ped.createSynchronizedScene(_0x508b2f.x, _0x508b2f.y, _0x508b2f.z, 0x0, 0x0, 139.96, 0x2);

            (_0x143b1a.peds.exists(_0x5b911f) || _0x143b1a.players.exists(_0x5b911f)) && _0x5b911f.taskSynchronizedScene(_0x558188, 'anim@mp_rollarcoaster', 'enter_player_' + _0x54fbaa, 0x8, -0x8, 0x0, -0x1, 0x0, 0x0), _0x25341f.sitScene = _0x558188, await _0x3c0717.api.isSceneEnd(_0x558188);

            const _0x6f2db1 = _0x143b1a.game.ped.createSynchronizedScene(_0x508b2f.x, _0x508b2f.y, _0x508b2f.z, 0x0, 0x0, 139.96, 0x2);

            (_0x143b1a.peds.exists(_0x5b911f) || _0x143b1a.players.exists(_0x5b911f)) && _0x5b911f.taskSynchronizedScene(_0x6f2db1, 'anim@mp_rollarcoaster', 'idle_a_player_' + _0x54fbaa, 0x8, -0x8, 0x0, -0x1, 0x0, 0x0), await _0x143b1a.game.sleep(0x1f4), (_0x143b1a.peds.exists(_0x5b911f) || _0x143b1a.players.exists(_0x5b911f)) && _0x5b911f.attachTo(_0x570fab.handle, 0x0, _0x38d2a1.position.x, _0x38d2a1.position.y, _0x38d2a1.position.z, 0x0, 0x0, _0x38d2a1.heading, false, false, false, false, 0x2, true);
          }

          _0x2110c0.rollerStartSit = false, _0x2110c0.rollerSitActive = true;
        },
              _0x47c739 = async (_0x1ac0f8, _0x43a44a = false) => {
          if (!_0x1ac0f8 || !_0x143b1a.players.exists(_0x1ac0f8)) return;
          if (_0x1ac0f8.rollerStartExit || !_0x1ac0f8.handle) return void (_0x1ac0f8.handle && _0x1ac0f8.setAlpha(0xff));
          _0x1ac0f8.rollerStartSit = false, _0x1ac0f8.rollerSitActive = false, _0x1ac0f8.rollerStartExit = true, _0x1ac0f8 == _0x1bee10 && _0x445f35 && _0x143b1a.events.callRemote('598319279');
          let _0x5438e3 = _0x1ac0f8;

          if (_0x1ac0f8.detach(true, true), _0x1ac0f8 !== _0x1bee10) {
            if (_0x1ac0f8.rollerAnimTarget && _0x143b1a.peds.exists(_0x1ac0f8.rollerAnimTarget)) _0x5438e3 = _0x1ac0f8.rollerAnimTarget, _0x1ac0f8.attachTo(_0x5438e3.handle, 0x0, 0x0, 0.25, 0x0, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true);else {
              if (await _0x3c0717.api.streamIn(_0x1ac0f8), await _0x143b1a.game.sleep(0x64), !_0x143b1a.players.exists(_0x1ac0f8)) return;

              const _0x563d2d = _0x143b1a.peds.new(_0x1ac0f8.model, _0x1ac0f8.position, _0x1ac0f8.getHeading());

              _0x5438e3 = _0x563d2d, _0x1ac0f8.cloneToTarget(_0x563d2d.handle), await _0x3c0717.api.streamIn(_0x563d2d), _0x1ac0f8.setAlpha(0x0), _0x143b1a.peds.exists(_0x563d2d) && (_0x563d2d.setNoCollision(_0x1ac0f8.handle, false), _0x1ac0f8.attachTo(_0x563d2d.handle, 0x0, 0x0, 0.25, 0x0, 0x0, 0x0, 0x0, false, false, false, false, 0x2, true));
            }
          }

          const _0x4cc31b = _0x549bd7(_0x1ac0f8.currentSitIndex),
                _0x6b1f7 = 0x0 !== _0x4f2e93(_0x1ac0f8.currentSitIndex) ? 0x0 : -1.017,
                _0x9d186b = _0x25341f.cars[_0x4cc31b].getOffsetFromInWorldCoords(0x0, _0x6b1f7, 0x0);

          if (!_0x43a44a) {
            const _0x18055e = _0x143b1a.game.ped.createSynchronizedScene(_0x9d186b.x, _0x9d186b.y, _0x9d186b.z, 0x0, 0x0, 139.96, 0x2);

            _0x5438e3.taskSynchronizedScene(_0x18055e, 'anim@mp_rollarcoaster', 'safety_bar_exit_player_' + _0x1ac0f8.currentPlace, 0x8, -0x8, 0x0, -0x1, 0x0, 0x0), await _0x3c0717.api.isSceneEnd(_0x18055e);
          }

          const _0xbbdac2 = _0x143b1a.game.ped.createSynchronizedScene(_0x9d186b.x, _0x9d186b.y, _0x9d186b.z, 0x0, 0x0, 139.96, 0x2);

          (_0x143b1a.peds.exists(_0x5438e3) || _0x143b1a.players.exists(_0x5438e3)) && _0x5438e3.taskSynchronizedScene(_0xbbdac2, 'anim@mp_rollarcoaster', 'exit_player_' + _0x1ac0f8.currentPlace, 0x8, -0x8, 0x0, -0x1, 0x0, 0x0), await _0x3c0717.api.isSceneEnd(_0xbbdac2), _0x5438e3.clearTasks(), _0x5438e3 !== _0x1ac0f8 ? (_0x1ac0f8.detach(true, true), _0x5438e3.destroy(), _0x1ac0f8.rollerAnimTarget = null) : _0x3c0717.api.usingSystemAnim(false), _0x1ac0f8.setAlpha(0xff), _0x1ac0f8.rollerStartExit = false;
        };

        _0x143b1a.keys.bind(_0xaef244.t.X, true, async () => {
          const _0x459211 = Date.now();

          if (!_0x1bee10.rollerSitActive || 0x2 !== _0x25341f.state && 0x3 !== _0x25341f.state || _0x459211 < _0x25341f.lastCallHandsUp + 0x3e8) return;
          _0x25341f.lastCallHandsUp = _0x459211;

          const _0x54e558 = _0x1bee10.isPlayingAnim('anim@mp_rollarcoaster', 'hands_up_idle_a_player_' + _0x1bee10.currentPlace, 0x3);

          _0x54e558 ? (_0x1bee10.taskPlayAnim('anim@mp_rollarcoaster', 'hands_up_exit_player_' + _0x1bee10.currentPlace, 0x8, -0x8, -0x1, 0x2, 0x0, false, false, false), await _0x3c0717.api.isAnimComplete('anim@mp_rollarcoaster', 'hands_up_exit_player_' + _0x1bee10.currentPlace), _0x1bee10.taskPlayAnim('anim@mp_rollarcoaster', 'safety_bar_grip_move_a_player_' + _0x1bee10.currentPlace, 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false)) : (_0x1bee10.taskPlayAnim('anim@mp_rollarcoaster', 'hands_up_enter_player_' + _0x1bee10.currentPlace, 0x8, -0x8, -0x1, 0x2, 0x0, false, false, false), await _0x3c0717.api.isAnimComplete('anim@mp_rollarcoaster', 'hands_up_enter_player_' + _0x1bee10.currentPlace), _0x1bee10.taskPlayAnim('anim@mp_rollarcoaster', 'hands_up_idle_a_player_' + _0x1bee10.currentPlace, 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false)), _0x143b1a.events.callRemote('3576139960', !_0x54e558);
        }), _0x143b1a.events.add('roller.handsUp', async (_0x1c4c4a, _0x55dcf5) => {
          try {
            const _0x471ffa = _0x143b1a.players.atRemoteId(_0x1c4c4a),
                  _0x4b3da9 = _0x471ffa.rollerAnimTarget;

            if (!_0x4b3da9 || !_0x143b1a.players.exists(_0x4b3da9) && !_0x143b1a.peds.exists(_0x4b3da9)) return;

            if (_0x55dcf5) {
              if (_0x4b3da9.taskPlayAnim('anim@mp_rollarcoaster', 'hands_up_enter_player_' + _0x471ffa.currentPlace, 0x8, -0x8, -0x1, 0x2, 0x0, false, false, false), await _0x3c0717.api.isAnimComplete('anim@mp_rollarcoaster', 'hands_up_enter_player_' + _0x471ffa.currentPlace, _0x4b3da9), !_0x143b1a.players.exists(_0x4b3da9) && !_0x143b1a.peds.exists(_0x4b3da9)) return;

              _0x4b3da9.taskPlayAnim('anim@mp_rollarcoaster', 'hands_up_idle_a_player_' + _0x471ffa.currentPlace, 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false);
            } else {
              if (_0x4b3da9.taskPlayAnim('anim@mp_rollarcoaster', 'hands_up_exit_player_' + _0x471ffa.currentPlace, 0x8, -0x8, -0x1, 0x2, 0x0, false, false, false), await _0x3c0717.api.isAnimComplete('anim@mp_rollarcoaster', 'hands_up_exit_player_' + _0x471ffa.currentPlace, _0x4b3da9), !_0x143b1a.players.exists(_0x4b3da9) && !_0x143b1a.peds.exists(_0x4b3da9)) return;

              _0x4b3da9.taskPlayAnim('anim@mp_rollarcoaster', 'safety_bar_grip_move_a_player_' + _0x471ffa.currentPlace, 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false);
            }
          } catch (_0x366d1d) {
            if (_0x366d1d instanceof _0x3c0717.api.ExpiredEntityError) return;
            throw _0x366d1d;
          }
        });

        const _0x9b429f = _0x9f4f60 => {
          const a0_0x2fab56 = {
            _0x5beef5: 0x1985,
            _0x1eaa3d: 0x1089,
            _0x9869ff: 0x2530
          },
                a0_0x9d918b = {
            _0x3a7ad7: 0x19d2,
            _0x308feb: 0x12dd
          },
                _0x44c3ad = ((_0x32309 = _0x143b1a.world.data.rollerData) => {
            if ('string' != typeof _0x32309 || !_0x32309.length) return null;

            const [_0x2b60c8, _0x3c0a8f, _0x2b8194, _0x6ffa50] = _0x32309.split('&');

            return {
              'updateDataTime': parseInt(_0x2b60c8, 0x24),
              'state': parseInt(_0x3c0a8f),
              'stateStartTime': parseInt(_0x2b8194, 0x24),
              'chairs': _0x6ffa50.split('^').map(_0x3230a2 => parseInt(_0x3230a2))
            };
          })(_0x9f4f60);

          if (!_0x44c3ad) return;
          let _0x1f8eac = false;

          if (!_0x25341f.dataInited) {
            if (0x3 === _0x44c3ad.state) {
              if (_0x25341f.streamedCars) {
                const _0x212ab5 = (0x0, _0x321503.getServerTime)();

                _0x25341f.lastUpdate = _0x44c3ad.stateStartTime;

                let _0x61c16b = (_0x212ab5 - _0x44c3ad.stateStartTime) / 0x3e8;

                _0x25341f.lastUpdate = _0x212ab5, _0x52f4d3.setCurrentPositionIndex(0x1), _0x52f4d3.setCurrentPoint(0x1), _0x52f4d3.setCurrentSpeed(0x0), _0x25341f.blockedUpdater = true;
                let _0x2dfcc3 = true;

                for (_0x52f4d3.setTimeDiff(_0xd7d63e); _0x61c16b > 0x0;) {
                  _0x61c16b -= _0xd7d63e;

                  const _0x4101de = _0x52f4d3.getCurrentPositionIndex();

                  if (0x1 === _0x4101de && !_0x2dfcc3) break;
                  0x1 !== _0x4101de && (_0x2dfcc3 = false), _0x16230b(false, true);
                }

                _0x25341f.blockedUpdater = false, _0x3c172b();
              }

              _0x25341f.active = true;
            }

            _0x25341f.chairs = _0x44c3ad.chairs, _0x25341f.dataInited = true, _0x1f8eac = true;
          }

          _0x25341f.prevState = _0x25341f.state, _0x25341f.state = _0x44c3ad.state, _0x25341f.updateDataTime = _0x44c3ad.updateDataTime, _0x25341f.stateStart = _0x44c3ad.stateStartTime;

          const _0x59b730 = _0x25341f.chairs.filter(_0x4ed2f1 => -0x1 === _0x44c3ad.chairs.indexOf(_0x4ed2f1)),
                _0x4beab2 = _0x44c3ad.chairs.filter(_0x50e044 => -0x1 === _0x25341f.chairs.indexOf(_0x50e044));

          if (_0x25341f.chairs = _0x44c3ad.chairs, _0x25341f.prevState !== _0x25341f.state) {
            if (0x0 === _0x25341f.state) {
              _0x25341f.active = false, _0x52f4d3.setCurrentPositionIndex(0x1), _0x52f4d3.setCurrentPoint(0x1), _0x52f4d3.setCurrentSpeed(0x0), _0x25341f.lastUpdate = _0x25341f.stateStart, _0x445f35 = false, _0x16230b(false);
              let _0x5d4192 = false;

              for (let _0x32d378 = 0x0; _0x32d378 < _0x25341f.cars.length; _0x32d378++) {
                const _0x20ced8 = _0x25341f.cars[_0x32d378];
                _0x20ced8.isPlayingAnim('anim@mp_rollarcoaster', 'safety_bar_exit_roller_car', 0x3) || (_0x20ced8.playAnim('safety_bar_exit_roller_car', 'anim@mp_rollarcoaster', 0x8, false, true, false, 0x0, 0x0), _0x5d4192 = true);
              }

              _0x5d4192 && _0x143b1a.game.audio.playSoundFromEntity(-0x1, 'Bar_Unlock_And_Raise', _0x25341f.cars[0x1].handle, 'DLC_IND_ROLLERCOASTER_SOUNDS', false, 0x0);
            } else {
              if (0x2 === _0x25341f.state) {
                let _0x21fb60 = false;
                _0x445f35 = false;

                for (let _0x5824c3 = 0x0; _0x5824c3 < _0x25341f.cars.length; _0x5824c3++) {
                  const _0x15dcca = _0x25341f.cars[_0x5824c3];
                  _0x15dcca.isPlayingAnim('anim@mp_rollarcoaster', 'safety_bar_enter_roller_car', 0x3) || (_0x15dcca.playAnim('safety_bar_enter_roller_car', 'anim@mp_rollarcoaster', 0x8, false, true, false, 0x0, 0x0), _0x21fb60 = true);
                }

                _0x21fb60 && _0x143b1a.game.audio.playSoundFromEntity(-0x1, 'Bar_Lower_And_Lock', _0x25341f.cars[0x1].handle, 'DLC_IND_ROLLERCOASTER_SOUNDS', false, 0x0);

                for (let _0x3c6d91 = 0x0; _0x3c6d91 < _0x25341f.chairs.length; _0x3c6d91++) {
                  const _0x5acc60 = _0x25341f.chairs[_0x3c6d91],
                        _0x5cf987 = _0x4f2e93(_0x3c6d91) ? 'two' : 'one';

                  if (-0x1 === _0x5acc60) continue;

                  const _0x38bb79 = _0x143b1a.players.atRemoteId(_0x5acc60);

                  _0x38bb79 && _0x38bb79.rollerSitActive && _0x38bb79.rollerAnimTarget && _0x38bb79.rollerAnimTarget.taskPlayAnim('anim@mp_rollarcoaster', 'safety_bar_enter_player_' + _0x5cf987, 0x8, -0x8, -0x1, 0x2, 0x0, false, false, false);
                }
              } else {
                if (0x3 === _0x25341f.state) {
                  if (_0x25341f.chairs.includes(_0x1bee10.remoteId) ? (_0x445f35 = true, _0x143b1a.game.audio.startAudioScene('FAIRGROUND_RIDES_LEVIATHAN'), _0x3c0717.api.loadStreamWithStartOffset('Player_Ride', 0x0, 'DLC_IND_ROLLERCOASTER_SOUNDS').then(() => {
                    _0x3c0717.api.invokeNative('PLAY_STREAM_FROM_PED', _0x1bee10.handle);
                  })) : _0x3c0717.api.loadStreamWithStartOffset('Ambient_Ride', 0x1, 'DLC_IND_ROLLERCOASTER_SOUNDS').then(() => _0x143b1a.game.audio.playStreamFromObject(_0x25341f.cars[0x2].handle)), _0x1f8eac) for (let _0x5b13b2 = 0x0; _0x5b13b2 < _0x25341f.chairs.length; _0x5b13b2++) {
                    const _0x226aea = _0x25341f.chairs[_0x5b13b2],
                          _0x137aff = _0x4f2e93(_0x5b13b2) ? 'two' : 'one';

                    if (-0x1 === _0x226aea) continue;

                    const _0x5ba743 = _0x143b1a.players.atRemoteId(_0x226aea);

                    _0x5ba743 && _0x5ba743.rollerSitActive && _0x5ba743.rollerAnimTarget && _0x5ba743.rollerAnimTarget.taskPlayAnim('anim@mp_rollarcoaster', 'safety_bar_enter_player_' + _0x137aff, 0x8, -0x8, -0x1, 0x2, 0x0, false, false, false);
                  } else _0x25341f.lastUpdate = _0x25341f.stateStart, _0x25341f.skipFirstStop = true, _0x52f4d3.setCurrentPositionIndex(0x1), _0x52f4d3.setCurrentPoint(0x1), _0x52f4d3.setCurrentSpeed(0x0), _0x25341f.active = true;
                }
              }
            }
          }

          for (let _0x1d41e2 = 0x0; _0x1d41e2 < _0x59b730.length; _0x1d41e2++) {
            const _0x2f63a3 = _0x59b730[_0x1d41e2];
            if (-0x1 === _0x2f63a3) continue;

            const _0x93606a = _0x143b1a.players.atRemoteId(_0x2f63a3);

            _0x47c739(_0x93606a, true);
          }

          for (let _0x206607 = 0x0; _0x206607 < _0x4beab2.length; _0x206607++) {
            const _0x5b2b06 = _0x4beab2[_0x206607];
            if (-0x1 === _0x5b2b06) continue;

            const _0x31c3d3 = _0x143b1a.players.atRemoteId(_0x5b2b06);

            _0x4fb8af(_0x31c3d3);
          }
        };

        _0x143b1a.events.add('worldDataChanged', (_0x26c670, _0x30f9cb) => {
          'rollerData' === _0x26c670 && _0x9b429f(_0x30f9cb);
        }),
          _0x317f99 && _0x143b1a.peds.exists(_0x317f99) && 'ped' === _0x317f99.type && (_0x317f99.destroy(), _0x96c9c.rollerAnimTarget = null), _0x96c9c.currentCar && (_0x96c9c.currentCar = null, _0x25341f.chairs[_0x25341f.chairs.indexOf(_0x96c9c.remoteId)] = -0x1);
        }), _0x143b1a.events.add('entityStreamOut', _0x45a9eb => {
          const _0x43d3af = _0x45a9eb.rollerAnimTarget;
          _0x43d3af && _0x143b1a.peds.exists(_0x43d3af) && 'ped' === _0x43d3af.type && (_0x43d3af.destroy(), _0x45a9eb.rollerAnimTarget = null);
        }), _0x143b1a.events.add('entityStreamIn', _0x247676 => {
          if ('player' !== _0x247676.type) return;

          const _0x553ebc = _0x25341f.chairs.indexOf(_0x247676.remoteId);

          if (-0x1 === _0x553ebc) return;

          const _0x3d45d2 = _0x549bd7(_0x553ebc);

          _0x25341f.cars[_0x3d45d2].handle && _0x4fb8af(_0x247676, true);
        });

        const _0x3b6c7a = async _0x31e40b => {
          const a0_0x23367c = {
            _0x8836ec: 0x135a
          };

          if (await _0x3c0717.api.requestAnimDict('anim@mp_rollarcoaster'), _0x31e40b.freezePosition(true), _0x31e40b.setLodDist(0x3e8), 0x0 === _0x25341f.state || 0x1 === _0x25341f.state) {
            _0x31e40b.playAnim('safety_bar_exit_roller_car', 'anim@mp_rollarcoaster', 0x8, false, true, false, 0x0, 0x0);

            const _0x433cd9 = _0x52f4d3.getCurrentPoint() - 2.55 * _0x31e40b.rollerId,
                  _0x5e5e5a = _0x2f2a80(_0x433cd9),
                  _0x801ae8 = _0x55e728(_0x433cd9, _0x5e5e5a);

            _0x31e40b.setCoordsNoOffset(_0x801ae8.x, _0x801ae8.y, _0x801ae8.z, true, false, false), _0x503b3d(_0x31e40b, _0x5e5e5a, _0x433cd9);
          }

          if (0x2 === _0x25341f.state && _0x31e40b.playAnim('safety_bar_enter_roller_car', 'anim@mp_rollarcoaster', 0x8, false, true, false, 0x1, 0x0), 0x3 === _0x25341f.state) {
            if (!_0x25341f.streamedCars) {
              const _0xf5a10e = (0x0, _0x321503.getServerTime)();

              _0x25341f.lastUpdate = _0x25341f.stateStart;

              let _0x10a5ef = (_0xf5a10e - _0x25341f.stateStart) / 0x3e8;

              _0x25341f.lastUpdate = _0xf5a10e, _0x52f4d3.setCurrentPositionIndex(0x1), _0x52f4d3.setCurrentPoint(0x1), _0x52f4d3.setCurrentSpeed(0x0), _0x25341f.blockedUpdater = true;
              let _0x81d01f = true;

              for (_0x52f4d3.setTimeDiff(_0xd7d63e); _0x10a5ef > 0x0;) {
                _0x10a5ef -= _0xd7d63e;

                const _0x28b456 = _0x52f4d3.getCurrentPositionIndex();

                if (0x1 === _0x28b456 && !_0x81d01f) break;
                0x1 !== _0x28b456 && (_0x81d01f = false), _0x16230b(false, true);
              }

              _0x25341f.blockedUpdater = false;
            }
          } else _0x16230b(false, false, true);

          if (0x1 === _0x25341f.state || 0x2 === _0x25341f.state || 0x3 === _0x25341f.state) {
            const _0x3a970b = (_0x566331 => {
              const _0x60a1ad = (_0x566331 *= 0x2) + _0x566331 % 0x2;

              return [_0x25341f.chairs[_0x60a1ad], _0x25341f.chairs[_0x60a1ad + 0x1]];
            })(_0x31e40b.rollerId);

            for (let _0x38032f = 0x0; _0x38032f < _0x3a970b.length; _0x38032f++) {
              const _0x2753b7 = _0x3a970b[_0x38032f];
              if (-0x1 === _0x2753b7) continue;

              const _0x8f874 = 0x2 * _0x31e40b.rollerId + _0x38032f,
                    _0x1e775d = _0x143b1a.players.atRemoteId(_0x2753b7);

              _0x143b1a.players.exists(_0x1e775d) ? _0x1e775d.handle && _0x4fb8af(_0x1e775d, true) : _0x25341f.chairs[_0x8f874] = -0x1;
            }
          }

          _0x25341f.streamedCars += 0x1;
        };

        _0x143b1a.events.add('render', () => {
          if (!_0x3c0717.api.isAuthed()) return;

          for (let _0x10fe3d = 0x0; _0x10fe3d < _0x25341f.cars.length; _0x10fe3d++) {
            const _0x1ab9ac = _0x25341f.cars[_0x10fe3d];
            _0x143b1a.objects.exists(_0x1ab9ac) && _0x1ab9ac.handle && !_0x1ab9ac.streamed ? (_0x1ab9ac.streamed = true, _0x3b6c7a(_0x1ab9ac)) : _0x143b1a.objects.exists(_0x1ab9ac) && _0x1ab9ac.handle || !_0x1ab9ac.streamed || (_0x1ab9ac.streamed = false, _0x25341f.streamedCars -= 0x1);
          }

          const _0x567f84 = _0x1bee10.position;
          if (_0x25341f.chairs.includes(_0x1bee10.remoteId)) _0x1bee10.rollerStartSit || _0x1bee10.rollerStartExit || 0x1 !== _0x25341f.state || _0x3c0717.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388);else for (let _0x13eac9 = 0x0; _0x13eac9 < _0x6c1e0a.length; _0x13eac9++) {
            const _0x1cb2be = _0x6c1e0a[_0x13eac9];
            _0x3c0717.api.vdist2(_0x567f84, _0x1cb2be) <= 1.3 && (-0x1 === _0x25341f.chairs[_0x13eac9] ? _0x3c0717.api.displayHelpStringTrans('displayHelpString.toEnterCabin', false, true, 0x1388) : _0x3c0717.api.displayHelpStringTrans('displayHelpString.seatOccupied', false, true, 0xbb8));
          }

          if (_0x1bee10.rollerSitActive && (0x2 === _0x25341f.state || 0x3 === _0x25341f.state)) {
            const _0xfa7ac2 = _0x1bee10.isPlayingAnim('anim@mp_rollarcoaster', 'hands_up_idle_a_player_' + _0x1bee10.currentPlace, 0x3);

            _0x3c0717.api.displayHelpStringTrans('displayHelpString.toggleHands', {
              'isHandsUp': _0xfa7ac2 ? 0x1 : 0x0
            }, false, false, -0x1);
          }

          if (_0x25341f.active && _0x25341f.dataInited && _0x25341f.streamedCars && !_0x25341f.blockedUpdater) {
            const _0x178829 = _0x52f4d3.getCurrentPositionIndex();

            0x1 !== _0x178829 || _0x25341f.skipFirstStop ? (0x1 !== _0x178829 && (_0x25341f.skipFirstStop = false), _0x16230b(true)) : (_0x25341f.active = false, (async () => {
              _0x25341f.state = 0x0, _0x25341f.stateStart = (0x0, _0x321503.getServerTime)(), _0x25341f.updateDataTime = _0x25341f.stateStart, _0x52f4d3.setCurrentPositionIndex(0x1), _0x52f4d3.setCurrentPoint(0x1), _0x25341f.lastUpdate = _0x25341f.stateStart, _0x16230b(false);

              for (let _0x2654d2 = 0x0; _0x2654d2 < _0x25341f.chairs.length; _0x2654d2++) {
                const _0x20cbfa = _0x25341f.chairs[_0x2654d2];
                if (-0x1 === _0x20cbfa) continue;

                const _0x2ad04e = _0x143b1a.players.atRemoteId(_0x20cbfa);

                _0x47c739(_0x2ad04e);
              }

              _0x25341f.chairs = [-0x1, -0x1, -0x1, -0x1, -0x1, -0x1, -0x1, -0x1];

              for (let _0x15bd71 = 0x0; _0x15bd71 < _0x25341f.cars.length; _0x15bd71++) _0x25341f.cars[_0x15bd71].playAnim('safety_bar_exit_roller_car', 'anim@mp_rollarcoaster', 0x8, false, true, false, 0x0, 0x0);

              await _0x143b1a.game.sleep(0x5dc), _0x143b1a.game.audio.playSoundFromEntity(-0x1, 'Bar_Unlock_And_Raise', _0x25341f.cars[0x1].handle, 'DLC_IND_ROLLERCOASTER_SOUNDS', false, 0x0);
            })());
          }
        });

        for (let _0x133f0f = 0x0; _0x133f0f < 0x4; _0x133f0f++) {
          const _0x22fe31 = _0x52f4d3.getCurrentPoint() - 2.55 * _0x133f0f,
                _0x5cf303 = _0x2f2a80(_0x22fe31),
                _0x2fdc37 = _0x55e728(_0x22fe31, _0x5cf303),
                _0x4a51c3 = _0x143b1a.objects.new(_0x143b1a.game.joaat(0x0 === _0x133f0f ? 'ind_prop_dlc_roller_car' : 'ind_prop_dlc_roller_car_02'), _0x2fdc37, {
            'dimension': -0x1
          });

          _0x4a51c3.rollerId = _0x133f0f, _0x4a51c3.handle && (_0x4a51c3.freezePosition(true), _0x4a51c3.setLodDist(0x12c), _0x4a51c3.setInvincible(true), _0x4a51c3.playAnim('safety_bar_exit_roller_car', 'anim@mp_rollarcoaster', 0x8, true, false, false, 0x1, 0x0)), _0x25341f.cars.push(_0x4a51c3);
        }

        _0x52f4d3.setCurrentPositionIndex(0x1), _0x52f4d3.setCurrentPoint(0x1), _0x16230b(false), _0x143b1a.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x143b1a.game.entity.createModelHide(-1643.524, -1124.681, 17.43256, 0x1, _0x143b1a.game.joaat('prop_roller_car_01'), true), _0x143b1a.game.entity.createModelHide(-1645.146, -1126.613, 17.43256, 0x1, _0x143b1a.game.joaat('prop_roller_car_02'), true), _0x143b1a.game.entity.createModelHide(-1646.768, -1128.545, 17.43256, 0x1, _0x143b1a.game.joaat('prop_roller_car_02'), true), _0x143b1a.game.entity.createModelHide(-1648.39, -1130.478, 17.43256, 0x1, _0x143b1a.game.joaat('prop_roller_car_02'), true), _0x3c0717.api.requestAnimDict('anim@mp_rollarcoaster', true), _0x9b429f();
        });
      },
      0x5f2d: (_0x39f8f7, _0x19e5b7, _0x3d230c) => {
        'use strict';

        const a0_0x3d2cea = {
          _0x2ae7e7: 0x1d66,
          _0xdbc1df: 0x15e0,
          _0x24b538: 0x1151,
          _0x234046: 0x15e0,
          _0x3a18a8: 0x1d66
        },
              a0_0x1ca0ce = {
          _0x59329d: 0x4b9,
          _0xd60718: 0x535,
          _0x2d8dd3: 0x535,
          _0x294440: 0x3e9,
          _0x464c56: 0x1cff,
          _0x2434d9: 0x535,
          _0x2624d6: 0x1870,
          _0x8f8d82: 0x49e,
          _0x1613a1: 0x1a5,
          _0x39d481: 0x10fa,
          _0x4b5007: 0x1916
        };

        _0x3d230c.r(_0x19e5b7);

        var _0x1e0b79 = _0x3d230c(0x16a21),
            _0x155d0a = _0x3d230c(0x9555),
            _0x350356 = _0x3d230c(0x5d14),
            _0x151e7f = _0x3d230c(0x6ecd),
            _0x33d636 = _0x3d230c(0x161cd);

        const _0x4add74 = _0x33d636.players.local;

        let _0x517d8c,
            _0x1cc6fb,
            _0x5825de = false;

        _0x33d636.events.add('playerEnterColshape', async _0x3676c4 => {
          if (_0x1e0b79.api.isAuthed() && !_0x4add74.vehicle) return _0x3676c4.hasVariable('halloween.pumpkin') ? (_0x1cc6fb = _0x3676c4, void _0x1e0b79.api.displayHelpStringTrans('displayHelpString.toCollect', false, true, 0x1388)) : undefined;
        }), _0x33d636.events.add('playerExitColshape', async _0x226256 => {
          if (_0x1e0b79.api.isAuthed()) return _0x1cc6fb && _0x1cc6fb === _0x226256 ? (_0x1cc6fb = null, void _0x33d636.game.ui.clearHelp(true)) : undefined;
        }), _0x33d636.events.add('keys.e', async () => {
          _0x4add74.vehicle || _0x1cc6fb && _0x33d636.colshapes.exists(_0x1cc6fb) && _0x1cc6fb.hasVariable('halloween.pumpkin') && (_0x517d8c = _0x1cc6fb.getVariable('halloween.pumpkin'), _0x1cc6fb = null, _0x33d636.events.callRemote('476377610', _0x517d8c));
        }), _0x33d636.events.add('fun.halloween.harvestRequest.success', async () => {
          if (_0x4add74.vehicle) return;
          _0x1cc6fb = null, _0x1e0b79.api.usingSystemAnim(true), _0x1e0b79.api.setDiscordStatus('pumpkinCollect');

          const _0x1abfbd = await _0x1e0b79.api.taskPlayAnim('amb@world_human_gardener_plant@female@enter', 'enter_female', 0x2, false);

          await _0x33d636.game.sleep(0x3e8 * _0x1abfbd), await _0x1e0b79.api.taskPlayAnim('amb@world_human_gardener_plant@female@base', 'base_female', 0x1, true), _0x33d636.events.call('buttonPress.init', 'halloween_pumpkin_harvest');
        }), _0x33d636.events.add('buttonPress.halloween_pumpkin_harvest.stop', async () => {
          if (_0x4add74.vehicle) return _0x1e0b79.api.usingSystemAnim(false);
          if (null == _0x517d8c) return;

          const _0x517438 = await _0x1e0b79.api.taskPlayAnim('amb@world_human_gardener_plant@female@exit', 'exit_female', 0x0, false);

          await _0x33d636.game.sleep(0x3e8 * _0x517438), _0x1e0b79.api.usingSystemAnim(false), _0x33d636.events.callRemote('1749605410', _0x517d8c), _0x1e0b79.api.setDiscordStatus();
        }), _0x33d636.events.add('fun.halloween.killByManiac', async () => {
          _0x1e0b79.api.play3DSound('halloween/maniac/' + _0x350356.u.integer({
            'min': 0x1,
            'max': 0x9
          }), {
            'volume': 0x46
          }), await _0x33d636.game.sleep(0xbb8), _0x1e0b79.api.setPlayerPos(_0x4add74, _0x4add74.position, false, true), _0x4add74.freezePosition(true);

          const _0x32b504 = _0x33d636.game.object.getObjectOffsetFromCoords(_0x4add74.position.x, _0x4add74.position.y, _0x4add74.position.z, _0x4add74.getHeading(), 0x0, -0x1, 0x0);

          await _0x1e0b79.api.loadModel('s_m_y_mime');

          const _0x4990db = _0x33d636.peds.new(_0x33d636.game.joaat('s_m_y_mime'), _0x32b504, _0x4add74.getHeading(), _0x4add74.dimension);

          for (let _0x37e77c = 0x0; 0x0 === _0x4990db.handle && !_0x33d636.peds.exists(_0x4990db) && _0x37e77c < 0xf; ++_0x37e77c) await _0x33d636.game.sleep(0x64);

          _0x33d636.game.entity.freezePosition(_0x4990db.handle, false), _0x1e0b79.api.invokeNative('SET_PED_COMBAT_ATTRIBUTES', _0x4990db.handle, 0x5, true), _0x1e0b79.api.invokeNative('SET_PED_COMBAT_ATTRIBUTES', _0x4990db.handle, 0x2e, true), _0x1e0b79.api.invokeNative('SET_PED_FLEE_ATTRIBUTES', _0x4990db.handle, 0x0, true), _0x1e0b79.api.invokeNative('SET_PED_RELATIONSHIP_GROUP_HASH', _0x4990db.handle, _0x155d0a.greenZoneController.hashes.nonFriendly), _0x1e0b79.api.invokeNative('GIVE_WEAPON_TO_PED', _0x4990db.handle, _0x33d636.game.joaat('weapon_knife') >> 0x0, 0x1, false, true), _0x1e0b79.api.invokeNative('TASK_COMBAT_PED', _0x4990db.handle, _0x33d636.players.local.handle, 0x0, 0x10), await _0x33d636.game.sleep(0x7d0), _0x4add74.freezePosition(false), _0x4add74.setHealth(0x0), _0x1e0b79.api.invokeNative('SET_PED_RELATIONSHIP_GROUP_HASH', _0x4990db.handle, _0x155d0a.greenZoneController.hashes.friendly), _0x1e0b79.api.invokeNative('TASK_SMART_FLEE_PED', _0x4990db.handle, _0x4add74.handle, 100.1, -0x1, false, false), await _0x33d636.game.sleep(0x1388), _0x33d636.peds.exists(_0x4990db) && _0x4990db.destroy();
        });

        const _0x806fb3 = () => {
          const _0x39529e = new Date().getFullYear();

          return _0x1e0b79.api.isTimeBetween(_0x39529e + '-10-20 00:00', _0x39529e + '-11-15 03:00');
        },
              _0x4948df = _0x22c1df => {
          for (const _0x3b7197 of _0x151e7f.Z) _0x22c1df ? _0x33d636.game.streaming.isIplActive(_0x3b7197) || _0x33d636.game.streaming.requestIpl(_0x3b7197) : _0x33d636.game.streaming.isIplActive(_0x3b7197) && _0x33d636.game.streaming.removeIpl(_0x3b7197);
        };

        _0x806fb3() ? (_0x4948df(true), _0x5825de = true) : _0x4948df(false), _0x33d636.events.add('time.everyHour', () => {
          !_0x5825de && _0x806fb3() ? (_0x4948df(true), _0x5825de = true) : _0x5825de && !_0x806fb3() && (_0x4948df(false), _0x5825de = false);
        });
      },
      0x91d8: (_0x21d14a, _0x46fe75, _0x68f15b) => {
        _0x68f15b(0x3064), _0x68f15b(0x5f2d), _0x68f15b(0xf38a);
      },
      0xf38a: (_0x1bc145, _0x327a00, _0x5ccdc7) => {
        'use strict';

        const a0_0xf96a93 = {
          _0x52bbc5: 0x535,
          _0x5df73e: 0x1de9,
          _0x1de0d4: 0x1870,
          _0x500764: 0x535,
          _0x1e44f1: 0x1c66,
          _0x58558b: 0x1da5,
          _0x394e58: 0x535
        },
              a0_0x1708ca = {
          _0x2a5981: 0x1b8d,
          _0x2b4832: 0x14d2,
          _0x1b173c: 0x1da5
        },
              a0_0x2c2f94 = {
          _0x140b88: 0x535,
          _0x4091f6: 0x253d,
          _0x5b55fc: 0x1d66,
          _0x416806: 0x59d
        },
              a0_0x4cfb70 = {
          _0x4d7594: 0x535,
          _0x2c9fe8: 0x4b9,
          _0x561664: 0x1b8d,
          _0x39729: 0x535
        };

        _0x5ccdc7.r(_0x327a00);

        var _0x4de0fd = _0x5ccdc7(0x16a21),
            _0x2f260a = _0x5ccdc7(0x161cd);

        const _0xe677c1 = _0x2f260a.players.local;

        let _0x2b03e7, _0x24ddf9;

        _0x2f260a.events.add('playerEnterColshape', async _0x3d4b3e => {
          if (_0x4de0fd.api.isAuthed() && !_0xe677c1.vehicle) return _0x3d4b3e.hasVariable('schoolday.book') ? (_0x24ddf9 = _0x3d4b3e, void _0x4de0fd.api.displayHelpStringTrans('displayHelpString.toCollect', false, true, 0x1388)) : undefined;
        }), _0x2f260a.events.add('playerExitColshape', async _0x50291b => {
          if (_0x4de0fd.api.isAuthed()) return _0x24ddf9 && _0x24ddf9 === _0x50291b ? (_0x24ddf9 = null, void _0x2f260a.game.ui.clearHelp(true)) : undefined;
        }), _0x2f260a.events.add('keys.e', async () => {
          _0xe677c1.vehicle || _0x24ddf9 && _0x2f260a.colshapes.exists(_0x24ddf9) && _0x24ddf9.hasVariable('schoolday.book') && (_0x2b03e7 = _0x24ddf9.getVariable('schoolday.book'), _0x24ddf9 = null, _0x2f260a.events.callRemote('1599866585', _0x2b03e7));
        }), _0x2f260a.events.add('fun.schoolday.harvestRequest.success', async () => {
          if (_0xe677c1.vehicle) return;
          _0x24ddf9 = null, _0x4de0fd.api.usingSystemAnim(true), _0x4de0fd.api.setDiscordStatus('bookCollect');

          const _0x5c27ca = await _0x4de0fd.api.taskPlayAnim('amb@world_human_gardener_plant@female@enter', 'enter_female', 0x2, false);

          await _0x2f260a.game.sleep(0x3e8 * _0x5c27ca), await _0x4de0fd.api.taskPlayAnim('amb@world_human_gardener_plant@female@base', 'base_female', 0x1, true), _0x2f260a.events.call('buttonPress.init', 'schoolday_pumpkin_harvest');
        }), _0x2f260a.events.add('buttonPress.schoolday_pumpkin_harvest.stop', async () => {
          if (_0xe677c1.vehicle) return _0x4de0fd.api.usingSystemAnim(false);
          if (null == _0x2b03e7) return;

          const _0x26c858 = await _0x4de0fd.api.taskPlayAnim('amb@world_human_gardener_plant@female@exit', 'exit_female', 0x0, false);

          await _0x2f260a.game.sleep(0x3e8 * _0x26c858), _0x4de0fd.api.usingSystemAnim(false), _0x2f260a.events.callRemote('1189999728', _0x2b03e7), _0x4de0fd.api.setDiscordStatus();
        });
      },
      0x3064: (_0x4e235b, _0x133fb1, _0x557b7f) => {
        'use strict';

        const a0_0x3d8092 = {
          _0x579bcb: 0x2422,
          _0x529243: 0x1f30,
          _0x200b09: 0x11a8,
          _0x5b6609: 0x11a8,
          _0x44fbc0: 0x35c,
          _0x1d9bf3: 0x191a,
          _0xd5727f: 0x735,
          _0x1e50b2: 0x2074,
          _0x34535b: 0x11a8,
          _0x54498c: 0x13b0,
          _0x342fe4: 0x1d71,
          _0x485132: 0x1d71,
          _0x2f80a6: 0x157d,
          _0x316473: 0x48c,
          _0x46e778: 0x1d71,
          _0x3b672c: 0x535,
          _0x1b09d7: 0x1ca6,
          _0x327dfb: 0x188f
        },
              a0_0x46008b = {
          _0x13e90f: 0xb59,
          _0x49d3d4: 0xe6d
        },
              a0_0x1879f1 = {
          _0x312c44: 0x11dc
        },
              a0_0x3f51a0 = {
          _0x5e1b6f: 0x11dc,
          _0x5b6369: 0x2606,
          _0xb02a26: 0x16c5,
          _0x2c2b47: 0x11dc
        },
              a0_0x30fcf3 = {
          _0x142423: 0x1d66,
          _0x8e5c61: 0x2379,
          _0xde92c0: 0x1f30,
          _0x183f9e: 0xb59
        },
              a0_0x20d386 = {
          _0x3bdc1c: 0x1d66,
          _0x45f480: 0x15e0,
          _0x521700: 0x140a,
          _0x52f2f1: 0x815
        },
              a0_0x10e10f = {
          _0x5ef6f7: 0x4ed,
          _0x3ba510: 0x1b8c,
          _0x194db3: 0xb32,
          _0x2c9242: 0xb32,
          _0x5aa864: 0x179b,
          _0x2931ed: 0xb32
        };
        _0x557b7f.r(_0x133fb1), _0x557b7f.d(_0x133fb1, {
          'isChristmas': () => _0xe1e993,
          'isWinter': () => _0x57e0d7
        });

        var _0x10c583 = _0x557b7f(0x16a21),
            _0x395e58 = _0x557b7f(0x16e6c),
            _0x24e964 = _0x557b7f.n(_0x395e58),
            _0x259ad7 = _0x557b7f(0xd194),
            _0x3793f6 = _0x557b7f(0x5d14),
            _0xc94545 = (_0x557b7f(0x48c4), _0x557b7f(0x3d40)),
            _0xea3c6 = _0x557b7f(0x15e87),
            _0x2a0c7e = _0x557b7f(0x176d8),
            _0xa7dc07 = _0x557b7f(0xb9cc),
            _0x7f61e2 = _0x557b7f(0x161cd);

        const _0xdfd900 = _0x7f61e2.players.local;

        let _0x4e6378,
            _0x23c1ba,
            _0x29a5ce = false,
            _0x3d4bd4 = false;

        const _0x3db9a6 = {
          'shape': null,
          'presents': []
        },
              _0x4b9689 = {
          'isBuilding': false,
          'pendingPosition': null,
          'lastBuildPress': 0x0,
          'instructionList': null,
          'progressBar': null
        },
              _0x57e0d7 = () => {
          const _0x34f575 = new Date().getFullYear();

          return 'TEST0' === _0x557b7f.g.server ? _0x10c583.api.isTimeBetween(_0x34f575 + '-11-30 20:00', _0x34f575 + '-12-31 23:59', true) || _0x10c583.api.isTimeBetween(_0x34f575 + '-01-01 00:00', _0x34f575 + '-01-30 23:59', true) : _0x10c583.api.isTimeBetween(_0x34f575 + '-11-30 23:55', _0x34f575 + '-12-31 23:59', true) || _0x10c583.api.isTimeBetween(_0x34f575 + '-01-01 00:00', _0x34f575 + '-01-30 03:00', true);
        },
              _0xe1e993 = () => {
          const _0x5761bb = new Date().getFullYear();

          return 'TEST0' === _0x557b7f.g.server ? _0x10c583.api.isTimeBetween(_0x5761bb + '-12-05 00:00', _0x5761bb + '-12-31 23:59', true) || _0x10c583.api.isTimeBetween(_0x5761bb + '-01-01 00:00', _0x5761bb + '-01-15 23:59', true) : _0x10c583.api.isTimeBetween(_0x5761bb + '-12-25 00:00', _0x5761bb + '-12-31 23:59', true) || _0x10c583.api.isTimeBetween(_0x5761bb + '-01-01 00:00', _0x5761bb + '-01-15 23:59', true);
        };

        _0x7f61e2.events.add('playerEnterColshape', async _0x3a6685 => {
          if (_0x10c583.api.isAuthed() && !_0xdfd900.vehicle) return _0x3a6685.hasVariable('xmas.snowman') ? (_0x23c1ba = _0x3a6685, void _0x10c583.api.displayHelpStringTrans('displayHelpString.toCollect', false, true, 0x1388)) : _0x3a6685 && _0x3a6685 === _0x3db9a6.shape ? (_0x23c1ba = _0x3a6685, void _0x10c583.api.displayHelpStringTrans('displayHelpString.toCollectPresent', false, true, 0x1388)) : undefined;
        }), _0x7f61e2.events.add('playerExitColshape', async _0x170fe0 => {
          if (_0x10c583.api.isAuthed()) return _0x23c1ba && _0x23c1ba === _0x170fe0 ? (_0x23c1ba = null, void _0x7f61e2.game.ui.clearHelp(true)) : undefined;
        }), _0x7f61e2.events.add('keys.e', async () => {
          _0xdfd900.vehicle || (_0x23c1ba && _0x7f61e2.colshapes.exists(_0x23c1ba) && _0x23c1ba.hasVariable('xmas.snowman') ? (_0x4e6378 = _0x23c1ba.getVariable('xmas.snowman'), _0x23c1ba = null, _0x7f61e2.events.callRemote('259375600', _0x4e6378)) : _0x23c1ba && _0x7f61e2.colshapes.exists(_0x23c1ba) && _0x23c1ba === _0x3db9a6.shape ? (_0x23c1ba = null, _0x7f61e2.events.callRemote('827738267')) : _0x4b9689.isBuilding && (_0x4b9689.isBuilding = false, _0x4b9689.instructionList && (_0x4b9689.instructionList.resetBar(), _0x4b9689.instructionList.destroy(), _0x4b9689.instructionList = undefined), _0x4b9689.progressBar && (_0x4b9689.progressBar.visible = false, _0x4b9689.progressBar = undefined), _0x10c583.api.stopAnim(), _0x10c583.api.usingSystemAnim(false)));
        }), _0x7f61e2.events.add('fun.xmas.harvestRequest.success', async () => {
          if (_0xdfd900.vehicle) return;
          _0x23c1ba = null, _0x10c583.api.usingSystemAnim(true), _0x10c583.api.setDiscordStatus('snowmanCollect');

          const _0x378474 = await _0x10c583.api.taskPlayAnim('amb@world_human_gardener_plant@female@enter', 'enter_female', 0x2, false);

          await _0x7f61e2.game.sleep(0x3e8 * _0x378474), await _0x10c583.api.taskPlayAnim('amb@world_human_gardener_plant@female@base', 'base_female', 0x1, true), _0x7f61e2.events.call('buttonPress.init', 'xmas_snowman_harvest');
        }), _0x7f61e2.events.add('buttonPress.xmas_snowman_harvest.stop', async () => {
          if (_0xdfd900.vehicle) return _0x10c583.api.usingSystemAnim(false);
          if (null == _0x4e6378) return;

          const _0x23dd04 = await _0x10c583.api.taskPlayAnim('amb@world_human_gardener_plant@female@exit', 'exit_female', 0x0, false);

          await _0x7f61e2.game.sleep(0x3e8 * _0x23dd04), _0x10c583.api.usingSystemAnim(false), _0x7f61e2.events.callRemote('2500616812', _0x4e6378), _0x10c583.api.setDiscordStatus();
        }), _0x7f61e2.events.add('fun.xmas.startFireworksNewYear', async () => {
          await _0x10c583.api.requestNamedPtfxAsset('scr_indep_fireworks');

          const _0xc5627f = _0x10c583.api.chunkArray(_0x3793f6.u.pickset(_0x24e964(), 0x64), 0x19);

          for await (const _0x22545d of _0xc5627f) {
            for await (const _0x22d876 of _0x22545d) {
              const _0x2d65f0 = new _0x7f61e2.Vector3(_0x22d876.pos.x, _0x22d876.pos.y, _0x22d876.pos.z + 0x19);

              _0x5edbc9(_0x2d65f0, 0xf), new _0x259ad7.Sounds3DPos(_0x3793f6.u.natural(), 'fireworks/firework' + _0x3793f6.u.integer({
                'min': 0x1,
                'max': 0x4
              }), _0x2d65f0, {
                'maxDistance': 0x270f,
                'rolloffFactor': 0x1,
                'refDistance': 0.5
              }), await _0x7f61e2.game.sleep(0x15e);
            }

            await _0x7f61e2.game.sleep(0x7d0);
          }

          await _0x7f61e2.game.sleep(0x1388);

          const _0x3780c1 = new _0x7f61e2.Vector3(-75.16, -818.95, 326.17);

          _0x5edbc9(_0x3780c1, 0x32), new _0x259ad7.Sounds3DPos(_0x3793f6.u.natural(), 'fireworks/firework' + _0x3793f6.u.integer({
            'min': 0x1,
            'max': 0x4
          }), _0x3780c1, {
            'maxDistance': 0x270f,
            'rolloffFactor': 0x1,
            'refDistance': 0.5
          });
        }), _0x7f61e2.events.add('fun.xmas.startFirework', async (_0x134dfa, _0x37298a) => {
          await _0x10c583.api.requestNamedPtfxAsset('scr_indep_fireworks'), _0x5edbc9(_0x134dfa, _0x37298a);
        });

        const _0x5edbc9 = async (_0x173665, _0x1a1c46 = 0x1) => {
          _0x7f61e2.game.graphics.setPtfxAssetNextCall('scr_indep_fireworks');

          const _0x2c730c = _0x7f61e2.game.graphics.startParticleFxLoopedAtCoord('scr_indep_firework_starburst', _0x173665.x, _0x173665.y, _0x173665.z, 0x0, 0x0, 0x0, _0x1a1c46, false, false, false, false);

          _0x7f61e2.game.graphics.setParticleFxLoopedColour(_0x2c730c, 0x1 * Math.random(), 0x1 * Math.random(), 0x1 * Math.random(), false), await _0x7f61e2.game.sleep(0xdac), _0x7f61e2.game.graphics.doesParticleFxLoopedExist(_0x2c730c) && (_0x7f61e2.game.graphics.stopParticleFxLooped(_0x2c730c, true), _0x7f61e2.game.graphics.removeParticleFx(_0x2c730c, false));
        },
              _0x557f2b = _0x1def89 => {
          for (const _0x347c35 of _0xc94545.Z) _0x1def89 ? _0x7f61e2.game.streaming.isIplActive(_0x347c35) || _0x7f61e2.game.streaming.requestIpl(_0x347c35) : _0x7f61e2.game.streaming.isIplActive(_0x347c35) && _0x7f61e2.game.streaming.removeIpl(_0x347c35);
        },
              _0x4dd344 = _0x528408 => {
          _0x528408 ? (_0xea3c6.Z.presentPositions.forEach((_0x592724, _0x336760) => {
            const _0xd92606 = _0x7f61e2.objects.new(_0x7f61e2.game.joaat(_0x592724.model), _0x592724.position, {
              'dimension': 0x0
            });

            _0x3db9a6.presents.push({
              'id': _0x336760,
              'object': _0xd92606
            });
          }), _0x3db9a6.shape = _0x7f61e2.colshapes.newSphere(_0xea3c6.Z.shapePosition.x, _0xea3c6.Z.shapePosition.y, _0xea3c6.Z.shapePosition.z, 0x4), _0x3db9a6.shape.isXmasPresents = true) : (_0x3db9a6.presents.forEach(_0x57f767 => {
            _0x57f767.object && _0x7f61e2.objects.exists(_0x57f767.object) && _0x57f767.object.destroy();
          }), _0x3db9a6.shape && _0x7f61e2.colshapes.exists(_0x3db9a6.shape) && (_0x3db9a6.shape.destroy(), delete _0x3db9a6.shape), _0x3db9a6.presents = []);
        };

        _0x7f61e2.events.add('fun.xmas.setCurrentXmasPresents', (_0x2cb37f = []) => {
          _0x3db9a6.presents.filter(_0x15c02a => _0x2cb37f.indexOf(_0x15c02a.id) > 0x0).forEach(_0x67d400 => {
            _0x67d400.object && _0x7f61e2.objects.exists(_0x67d400.object) && _0x67d400.object.destroy();
          }), _0x3db9a6.presents = _0x3db9a6.presents.filter(_0x4066a5 => -0x1 === _0x2cb37f.indexOf(_0x4066a5.id));
        }), _0x7f61e2.events.add('render', () => {
          _0x4b9689.isBuilding && !_0xdfd900.vehicle && !_0xdfd900.activeItemId && _0x4b9689.progressBar && _0x4b9689.progressBar.visible && Date.now() - _0x4b9689.lastBuildPress > 0x3e8 && (_0x7f61e2.game.controls.isControlJustPressed(0x0, 0x18) || _0x7f61e2.game.controls.isDisabledControlJustPressed(0x0, 0x18)) && (_0x4b9689.progressBar.value = _0x10c583.api.clamp(_0x4b9689.progressBar.value + 0.05, 0x0, 0x1), _0x4b9689.lastBuildPress = Date.now(), _0xdfd900.isPlayingAnim('amb@world_human_bum_wash@male@high@idle_a', 'idle_a', 0x3) || _0x10c583.api.taskPlayAnim('amb@world_human_bum_wash@male@high@idle_a', 'idle_a', 0x1, true), _0x10c583.api.playSyncFXonEntityBone('core_snow', 'bang_snow', 0x188e, 0x3e8, {
            'zOffset': -0.5,
            'yOffset': _0xdfd900.getForwardY() - 0.5,
            'zRot': _0xdfd900.getHeading()
          }), _0x10c583.api.play3DSound('xmas/snow_use_' + _0x3793f6.u.integer({
            'min': 0x1,
            'max': 0x3
          }), {
            'volume': 0xa
          }), _0x4b9689.progressBar.value >= 0x1 && (_0x4b9689.progressBar.visible = false, _0x4b9689.progressBar = undefined, _0x4b9689.instructionList && (_0x4b9689.instructionList.resetBar(), _0x4b9689.instructionList.destroy(), _0x4b9689.instructionList = undefined), _0x4b9689.isBuilding = false, _0x10c583.api.taskPlayAnim('amb@world_human_bum_wash@male@high@idle_a', 'idle_a', 0x0, false), _0x10c583.api.usingSystemAnim(false), _0x7f61e2.events.callRemote('2825866267', _0x4b9689.pendingPosition.x, _0x4b9689.pendingPosition.y, _0x4b9689.pendingPosition.z)));
        }), _0x7f61e2.events.add('fun.seasonEvents.xmas.createSnowman', () => {
          const _0x534d7d = _0x7f61e2.game.object.getObjectOffsetFromCoords(_0xdfd900.position.x, _0xdfd900.position.y, _0xdfd900.position.z, _0xdfd900.getHeading(), 0x0, 0.5, -0.9);

          _0x4b9689.pendingPosition = _0x534d7d, _0x4b9689.isBuilding = true, _0x10c583.api.usingSystemAnim(true), _0x4b9689.instructionList || (_0x4b9689.instructionList = new _0xa7dc07.InstructionalButtons(-0x1), _0x4b9689.instructionList.addButton('ibuttons.stopSnowman', 0x33), _0x4b9689.instructionList.addButton('ibuttons.snowmanBuild', 0x18), _0x4b9689.instructionList.toggleHud(true)), _0x4b9689.progressBar || (_0x4b9689.progressBar = new _0x2a0c7e.TimerBar('fun.seasonEvents.xmas.creatingSnowman', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          })), _0x10c583.api.taskPlayAnim('amb@world_human_bum_wash@male@high@idle_a', 'idle_a', 0x1, true);
        }), _0x7f61e2.events.add('playerDeath2', _0x37cbf4 => {
          _0x4b9689.isBuilding && _0x37cbf4 === _0xdfd900 && (_0x4b9689.isBuilding = false, _0x4b9689.instructionList && (_0x4b9689.instructionList.resetBar(), _0x4b9689.instructionList.destroy(), _0x4b9689.instructionList = undefined), _0x4b9689.progressBar && (_0x4b9689.progressBar.visible = false, _0x4b9689.progressBar = undefined), _0x10c583.api.stopAnim(), _0x10c583.api.usingSystemAnim(false));
        }), _0x57e0d7() ? (_0x557f2b(true), _0x29a5ce = true) : _0x557f2b(false), _0xe1e993() ? (_0x4dd344(true), _0x3d4bd4 = true) : _0x4dd344(false), _0x7f61e2.events.add('time.everyHour', () => {
          !_0x29a5ce && _0x57e0d7() ? (_0x557f2b(true), _0x29a5ce = true) : _0x29a5ce && !_0x57e0d7() && (_0x557f2b(false), _0x29a5ce = false), !_0x3d4bd4 && _0xe1e993() ? (_0x4dd344(true), _0x3d4bd4 = true) : _0x3d4bd4 && !_0xe1e993() && (_0x4dd344(false), _0x3d4bd4 = false);
        });
      },
      0x5b63: (_0x589fcf, _0x34ecda, _0x297507) => {
        'use strict';

        const a0_0x415d2e = {
          _0x3abeed: 0x16c5,
          _0x4715a6: 0x725,
          _0x3c6381: 0xae6,
          _0x4c6240: 0x725,
          _0x15b6c4: 0xae6,
          _0x195c48: 0xbff,
          _0x38422e: 0x1d66,
          _0x41912a: 0x6d5,
          _0x44d773: 0x535,
          _0x6290d7: 0x1b37,
          _0x9d846d: 0x235b,
          _0x163529: 0x2530,
          _0x852436: 0x2134,
          _0xc6bc2e: 0x10c9,
          _0x16316e: 0x1e21,
          _0x1d611e: 0x4bd,
          _0x52aa2e: 0x19d2,
          _0x46df00: 0x17f,
          _0x429b23: 0x8ea,
          _0x1aa7b4: 0x1f8f,
          _0x211485: 0x3f6,
          _0x53f3f8: 0x24de,
          _0x295d69: 0x82d,
          _0x13a801: 0x82d,
          _0x156423: 0x101c,
          _0x218d84: 0x10e6,
          _0x2683bd: 0xffb,
          _0x263dfe: 0x1c9c,
          _0x4ff149: 0x1d2,
          _0x4e0b4f: 0x207b,
          _0x4ab4dd: 0x167b,
          _0xc5ef48: 0x648,
          _0x1bbef9: 0xcf8,
          _0x5ab124: 0x1f5a,
          _0x5c0f80: 0x2236,
          _0x23dada: 0x648
        },
              a0_0x292f53 = {
          _0x3df5bf: 0x22ff
        },
              a0_0x54df77 = {
          _0xeb3ab3: 0x1de9
        };

        _0x297507.d(_0x34ecda, {
          'v': () => _0x39c57c
        });

        var _0x3b7359 = _0x297507(0x16a21),
            _0x4d7cac = _0x297507(0x11178),
            _0xd51c1d = _0x297507(0x1249d),
            _0x2d7f4c = _0x297507(0x704e),
            _0x546172 = _0x297507(0x48c4),
            _0x23c101 = _0x297507(0x161cd);

        class _0x3b6b5a {
          constructor() {
            this.currentAnim = undefined;
          }

          static ['isFlagLooped'](_0x16cb69) {
            return [0x20, 0x80].includes(_0x16cb69);
          }

          ['_taskPlayAnim'](_0x12d3c1, _0x2f0b68, _0x30eace, _0xf25e6a, _0x5d5de6, _0x345a9e, _0x5cc8ff, _0x1c555a, _0x3acc4b, _0x462025, _0x5671ff) {
            _0x12d3c1.taskPlayAnim(_0x2f0b68, _0x30eace, _0xf25e6a, _0x5d5de6, _0x345a9e, _0x5cc8ff, _0x1c555a, _0x3acc4b, _0x462025, _0x5671ff);
          }

          ['_stopAnimTask'](_0xef4eec, _0x59075e, _0x240fa2, _0x3affa7) {
            _0xef4eec.stopAnimTask(_0x59075e, _0x240fa2, _0x3affa7);
          }

          ['taskPlayAnim'](_0x5ebd38, _0x526fc1, _0x309b50 = 0x0, _0x2e6ce4 = true, _0x5e8d48 = false, _0x3c7d78 = false, _0x575f3c = null, _0x4a98e8) {
            return new Promise(async (_0x13613c, _0x154b10) => !_0x3c7d78 && _0x23c101.players.local.vehicle ? _0x13613c(0x0) : _0x23c101.game.streaming.doesAnimDictExist(_0x5ebd38) ? (_0x23c101.game.streaming.hasAnimDictLoaded(_0x5ebd38) || (await _0x3b7359.api.requestAnimDict(_0x5ebd38)), this.stopAnims(), this._taskPlayAnim(_0x23c101.players.local, _0x5ebd38, _0x526fc1, 0x8, 0x8, -0x1, _0x309b50, 0x0, false, false, false), _0x575f3c && _0x23c101.attachments.addLocal(_0x23c101.game.joaat(_0x575f3c)), this.currentAnim = {
              'animDict': _0x5ebd38,
              'animName': _0x526fc1,
              'flag': _0x309b50,
              'propId': _0x575f3c
            }, _0x23c101.events.callRemote('941672133', _0x5ebd38, _0x526fc1, _0x309b50, (0x0, _0x546172.getServerTime)().toString(0x10), JSON.stringify(_0x4a98e8)), _0x13613c(_0x23c101.game.entity.getEntityAnimDuration(_0x5ebd38, _0x526fc1))) : (_0x3b7359.api.sendError('animDict doesnt exists: ' + _0x5ebd38 + ', ' + _0x526fc1), _0x13613c(0x0)));
          }

          ['stopAnims']() {
            this.currentAnim && (this._stopAnimTask(_0x23c101.players.local, this.currentAnim.animDict, this.currentAnim.animName, 0x8), this.currentAnim = undefined), _0x23c101.players.local.clearTasks(), _0x23c101.game.task.clearPedSecondaryTask(_0x23c101.players.local.handle);
          }

        }

        const _0x39c57c = new _0x3b6b5a();

        _0x23c101.events.add('animations.client.selfPlay', (_0x1c379a, _0x10fd79, _0x5b5118, _0x27f8e6, _0x151f54, _0x15e083, _0x3e134b) => {
          _0x39c57c.taskPlayAnim(_0x1c379a, _0x10fd79, _0x5b5118, _0x27f8e6, _0x151f54, _0x15e083, _0x3e134b);
        }), _0x23c101.events.add('animations.client.selfStop', () => {
          _0x39c57c.stopAnims();
        }), _0x23c101.events.add('render', () => {
          if (_0x39c57c.currentAnim && !_0x23c101.players.local.isPlayingAnim(_0x39c57c.currentAnim.animDict, _0x39c57c.currentAnim.animName, 0x3)) {
            const _0x561f40 = _0x39c57c.currentAnim;
            _0x39c57c._stopAnimTask(_0x23c101.players.local, _0x561f40.animDict, _0x561f40.animName, 0x3), _0x23c101.events.callRemote('4099472089', _0x561f40.animDict, _0x561f40.animName, _0x561f40.flag), _0x23c101.attachments.removeLocal(_0x23c101.game.joaat(_0x561f40.propId)), _0x39c57c.currentAnim = undefined;
          }
        }), _0x23c101.events.add('animations.client.sync', async (_0x18a9f9, _0x209da6, _0x227d4e, _0x19281f, _0xf2b270 = {}) => {
          if (!_0x23c101.players.exists(_0x18a9f9) || !_0x18a9f9.handle) return;
          if (_0x18a9f9.lastAnim && (_0x18a9f9.lastAnim.animDict != _0x209da6 && _0x18a9f9.lastAnim.animName != _0x227d4e || _0x18a9f9.lastAnim.animDict == _0x209da6 && _0x18a9f9.lastAnim.animName != _0x227d4e) && (_0x39c57c._stopAnimTask(_0x18a9f9, _0x18a9f9.lastAnim.animDict, _0x18a9f9.lastAnim.animName, 0x3), delete _0x18a9f9.lastAnim), _0x23c101.game.streaming.hasAnimDictLoaded(_0x209da6) || (await _0x3b7359.api.requestAnimDict(_0x209da6)), !_0x23c101.players.exists(_0x18a9f9) || !_0x18a9f9.handle) return;

          const _0x350999 = 0x3e8 * _0x23c101.game.entity.getEntityAnimDuration(_0x209da6, _0x227d4e),
                _0x1f4701 = ((0x0, _0x546172.getServerTime)() - (parseInt(_0xf2b270.start || 0x0, 0x10) || 0x0)) / _0x350999 % 0x1 || 0x0;

          if (_0x18a9f9.localAnimObjectList && _0x18a9f9.localAnimObjectList.length) {
            for (const _0x47d553 of _0x18a9f9.localAnimObjectList) _0x47d553.destroy();

            _0x18a9f9.localAnimObjectList = [];
          }

          if (_0xf2b270.animExclusiveId >= 0x0) {
            const _0x5ae61d = _0x4d7cac.exclusiveAnimations.items[_0xf2b270.animExclusiveId],
                  _0x958f67 = [];

            let _0x212fa3,
                _0x45e2bd = [];

            if (_0x5ae61d) {
              if (_0x5ae61d.music && (_0x2d7f4c.AnimSounds3D.stop(_0x3b7359.api.getPlayerStatic(_0x18a9f9).toString(0x24)), _0x212fa3 = new _0x2d7f4c.AnimSounds3D(_0x3b7359.api.getPlayerStatic(_0x18a9f9).toString(0x24), 'animations/' + _0x5ae61d.music, _0x18a9f9, {
                'volume': 0x23,
                'pannerAttr': {
                  'maxDistance': 0x8,
                  'refDistance': 0x1
                },
                'losPannerAttr': {
                  'maxDistance': 0x3,
                  'refDistance': 0x1
                },
                'syncAudio': parseInt(_0xf2b270.start || 0x0, 0x10) || Date.now(),
                'loop': _0x5ae61d.looped
              }), _0x958f67.push(_0x212fa3.load())), _0x5ae61d.propList) {
                Array.isArray(_0x18a9f9.localAnimObjectList) || (_0x18a9f9.localAnimObjectList = []);

                for (const _0x5e7b6b of _0x5ae61d.propList) {
                  const _0x3a2224 = new _0xd51c1d.$(_0x18a9f9, _0x5e7b6b.prop, _0x5e7b6b.propAnimData, _0x5e7b6b.propAttachData, _0x3b7359.api.roundNumber(_0x1f4701, 0x4));

                  _0x18a9f9.localAnimObjectList.push(_0x3a2224), _0x45e2bd.push(_0x3a2224), _0x958f67.push(_0x3a2224.load());
                }
              }

              if (_0x958f67.length && (await Promise.all(_0x958f67)), !_0x23c101.players.exists(_0x18a9f9) || !_0x18a9f9.handle) {
                _0x212fa3.destroy();

                for (const _0x97e8d of _0x45e2bd) _0x97e8d.destroy();

                return;
              }

              if (_0x212fa3 && _0x212fa3.play(), _0x45e2bd.length) {
                for (const _0x4e53c7 of _0x45e2bd) _0x4e53c7.play();
              }
            }
          }

          const _0x50cd6e = _0x3b6b5a.isFlagLooped(_0x19281f) ? 0x0 : 0x8;

          _0x39c57c._taskPlayAnim(_0x18a9f9, _0x209da6, _0x227d4e, 0x8, _0x50cd6e, -0x1, _0x19281f, _0x3b7359.api.roundNumber(_0x1f4701, 0x4), false, false, false), _0x18a9f9.lastAnim = {
            'animDict': _0x209da6,
            'animName': _0x227d4e,
            'flag': _0x19281f
          };
        }), _0x23c101.events.add('animations.client.stop', (_0x2f60aa, _0x372a89, _0x581ff8, _0x24f212) => {
          _0x23c101.players.exists(_0x2f60aa) && _0x2f60aa.handle && (_0x39c57c._taskPlayAnim(_0x2f60aa, _0x372a89, _0x581ff8, 0x8, 0x8, -0x1, 0x0, 0x1, false, false, false), _0x39c57c._stopAnimTask(_0x2f60aa, _0x372a89, _0x581ff8, 0x3), _0x2f60aa.lastAnim && _0x2f60aa.lastAnim.animDict === _0x372a89 && _0x2f60aa.lastAnim.animName === _0x581ff8 && delete _0x2f60aa.lastAnim);
        });
      },
      0xd86a: (_0x3c9081, _0x259631, _0x435025) => {
        'use strict';

        const a0_0x2df0c3 = {
          _0x247d33: 0x74c,
          _0x58a246: 0x253d,
          _0x4cd125: 0x242c,
          _0x4edf15: 0xc49,
          _0x7b48bd: 0x557,
          _0x94cc7b: 0x535,
          _0x3f4eb9: 0x12a3,
          _0x3c72c7: 0x14d2
        },
              a0_0x3fb7ee = {
          _0x534630: 0x13a1,
          _0x5ce026: 0x535,
          _0x48c85d: 0x242c,
          _0xd097e0: 0x12a3,
          _0x144450: 0x14d2,
          _0x5ed946: 0x1a5,
          _0x5855af: 0x535
        },
              a0_0x2bd4bb = {
          _0x13d672: 0x535,
          _0x27a168: 0x74c,
          _0x1577ad: 0x253d,
          _0x1335c0: 0x23c9,
          _0x1b0d08: 0xc49,
          _0x22eb00: 0x146b,
          _0x461249: 0x535,
          _0x91da39: 0x12a3,
          _0x2e21b4: 0x14d2,
          _0x306b1f: 0xc08,
          _0x204a17: 0x1063
        },
              a0_0x43ad9f = {
          _0x5651d2: 0x535,
          _0x5d6fde: 0x74c,
          _0x48a0fe: 0x253d,
          _0x3016a5: 0x242c,
          _0x1f36b4: 0x23c9,
          _0x3e9d66: 0x146b,
          _0x223dc7: 0x1063
        },
              a0_0x2d1b34 = {
          _0x3f3244: 0x535,
          _0x17ff27: 0x253d,
          _0x672281: 0xc49,
          _0x254fe1: 0x146b,
          _0x57c092: 0x14d2,
          _0x349ddd: 0x1063
        },
              a0_0xdc2438 = {
          _0x205dec: 0x535,
          _0x21c20c: 0x8ce,
          _0x5433ef: 0x253d,
          _0xff03df: 0x242c,
          _0x1c1c9c: 0x23c9,
          _0x5721da: 0xc49,
          _0x41898d: 0x146b,
          _0x14e438: 0x14d2,
          _0x182d33: 0x1a5,
          _0x10b9fe: 0xa30
        },
              a0_0x5c328a = {
          _0x1e4e8c: 0x74c,
          _0x848b7e: 0x242c,
          _0x491c5a: 0x23c9,
          _0x7e0671: 0x213a,
          _0x12ffc9: 0x146b,
          _0x433b35: 0x14d2,
          _0x165cd9: 0x1a5
        };

        _0x435025.r(_0x259631);

        var _0x3f0bba = _0x435025(0x16a21),
            _0x519275 = _0x435025(0x16a7d),
            _0xdf3baf = _0x435025(0x161cd);

        let _0x3d32e5 = {
          'e': 0x0,
          'i': 0x0,
          'f': 0x0,
          'left': 0x0,
          'right': 0x0,
          'up': 0x0,
          'down': 0x0,
          'b': 0x0,
          'backspace': 0x0,
          'f7': 0x0,
          'enter': 0x0,
          'space': 0x0,
          'tab': 0x0,
          'j': 0x0,
          'x': 0x0,
          'f9': 0x0,
          'f6': 0x0,
          'esc': 0x0
        };
        _0xdf3baf.keys.bind(_0x519275.t.E, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.e) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0xdf3baf.gui.cursor.visible || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.e = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.e');
          } catch (_0x4804b4) {
            _0x3f0bba.api.sendError(_0x4804b4);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.F, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.f) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.f = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.f');
          } catch (_0x6ec740) {
            _0x3f0bba.api.sendError(_0x6ec740);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.I, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.i) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.i = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.i');
          } catch (_0x1a6bec) {
            _0x3f0bba.api.sendError(_0x1a6bec);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.ARROW_LEFT, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.left) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.left = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.left');
          } catch (_0x5538ba) {
            _0x3f0bba.api.sendError(_0x5538ba);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.ARROW_RIGHT, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.right) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.right = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.right');
          } catch (_0x28176a) {
            _0x3f0bba.api.sendError(_0x28176a);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.ARROW_UP, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.up) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.up = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.up');
          } catch (_0x4c14df) {
            _0x3f0bba.api.sendError(_0x4c14df);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.ARROW_DOWN, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.down) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.down = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.down');
          } catch (_0xd9b12e) {
            _0x3f0bba.api.sendError(_0xd9b12e);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.B, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.b) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.b = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.b');
          } catch (_0x4bfe14) {
            _0x3f0bba.api.sendError(_0x4bfe14);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.BACKSPACE, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.backspace) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.backspace = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.backspace');
          } catch (_0x5c6f8a) {
            _0x3f0bba.api.sendError(_0x5c6f8a);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.F7, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.f7) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.f7 = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.f7');
          } catch (_0x5f0360) {
            _0x3f0bba.api.sendError(_0x5f0360);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.ENTER, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.enter) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.enter = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.enter');
          } catch (_0x5511f9) {
            _0x3f0bba.api.sendError(_0x5511f9);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.SPACE, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.space) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.space = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.space');
          } catch (_0x4c2067) {
            _0x3f0bba.api.sendError(_0x4c2067);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.TAB, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.tab) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat) return;
            _0x3d32e5.tab = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.tab');
          } catch (_0x3f6049) {
            _0x3f0bba.api.sendError(_0x3f6049);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.P, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.p) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.p = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.p');
          } catch (_0xf6cd99) {
            _0x3f0bba.api.sendError(_0xf6cd99);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.J, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.j) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0xdf3baf.gui.cursor.visible || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.j = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.j');
          } catch (_0x1d5d21) {
            _0x3f0bba.api.sendError(_0x1d5d21);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.X, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.x) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0xdf3baf.gui.cursor.visible || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.x = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.x');
          } catch (_0x40d00e) {
            _0x3f0bba.api.sendError(_0x40d00e);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.F9, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.f9) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.f9 = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.f9');
          } catch (_0xc943e2) {
            _0x3f0bba.api.sendError(_0xc943e2);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.F6, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.f6) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.f6 = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.f6');
          } catch (_0x455cdf) {
            _0x3f0bba.api.sendError(_0x455cdf);
          }
        }), _0xdf3baf.keys.bind(_0x519275.t.ESC, false, () => {
          try {
            if (_0x3f0bba.api.ePress(_0x3d32e5.esc) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.esc = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.esc');
          } catch (_0x541cd3) {
            _0x3f0bba.api.sendError(_0x541cd3);
          }
        }), _0xdf3baf.events.add('render', () => {
          const _0x85dfe4 = _0xdf3baf.game.controls;

          if (_0x85dfe4.isControlJustPressed(0x8, 0x33) && !_0xdf3baf.game.pad.isUsingKeyboard(0x2)) {
            if (_0x3f0bba.api.ePress(_0x3d32e5.e) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
            _0x3d32e5.e = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.e');
          } else {
            if (_0x85dfe4.isControlJustPressed(0x8, 0xbc) && !_0xdf3baf.game.pad.isUsingKeyboard(0x2)) {
              if (_0x3f0bba.api.ePress(_0x3d32e5.b) || !_0x3f0bba.api.isAuthed() || _0x435025.g.interfaces.chat || _0x435025.g.piano || _0x435025.g.playableInstrument) return;
              _0x3d32e5.b = _0x3f0bba.api.ePressUpdate(), _0xdf3baf.events.call('keys.b'), _0xdf3baf.players.local.vehicle && _0xdf3baf.events.call('vehicle.toggleEngine');
            }
          }
        });
      },
      0x202a: (_0x2b4914, _0x2ad6d4, _0x1b01b3) => {
        'use strict';

        const a0_0x11771a = {
          _0x171228: 0x535,
          _0x244531: 0xfc0,
          _0x2c5a49: 0xf6b,
          _0x4ebfb: 0x1d66,
          _0xefe6a2: 0x1992,
          _0x21295e: 0x1329,
          _0x19437f: 0x17bd,
          _0x14725c: 0x185b,
          _0x50f5ba: 0x535,
          _0x4b20d2: 0xf6b,
          _0x43b6e4: 0x1dd9,
          _0x5f2123: 0x2549,
          _0x1552af: 0x19d6,
          _0x67dd22: 0x385,
          _0x2e071e: 0x830,
          _0x1f8f2e: 0xf6b,
          _0x4e4c3f: 0x213a,
          _0x19b84d: 0x104a,
          _0x174131: 0xf6b,
          _0x3e38ba: 0xf6b,
          _0x2304ba: 0x1e94,
          _0x2257a3: 0x535,
          _0x6ed314: 0xf6b,
          _0x49d3d8: 0x19cf,
          _0x51d899: 0x1dd9,
          _0xb4150b: 0x2207,
          _0x473706: 0x13f4,
          _0x6c9c5a: 0x2207,
          _0x574aaf: 0x535,
          _0x7c39a2: 0xf6b,
          _0x55b017: 0x19cf,
          _0x9ca652: 0x7aa,
          _0x4f83ab: 0x2207,
          _0x20bc4d: 0x535,
          _0x5b3dee: 0x2c5
        },
              a0_0x3668cc = {
          _0x617b51: 0x16db,
          _0x12a5c5: 0x16db
        },
              a0_0x48fcc4 = {
          _0x1828df: 0x16c5,
          _0x1f5937: 0x1a4a,
          _0x30472c: 0x248,
          _0x4a5b4b: 0x28c,
          _0x502073: 0x1a4d,
          _0x5e5db8: 0x28c,
          _0xb21990: 0x28c,
          _0x3b0262: 0x1d66,
          _0x58fe49: 0x1870,
          _0x49ebd8: 0x1870,
          _0x5584f4: 0x11dc,
          _0x18ffde: 0x2422,
          _0x4598be: 0xaa1,
          _0x45437d: 0x7fe,
          _0x3eb2ac: 0x250a,
          _0x52b949: 0x250a,
          _0x36c024: 0x248,
          _0x4ee360: 0x22e6
        },
              a0_0x4136b5 = {
          _0xb34513: 0xa9d,
          _0x8e15a4: 0x16c5,
          _0x4c68a0: 0x2072,
          _0x2b8891: 0x2a2
        },
              a0_0x43251f = {
          _0x34b086: 0x1e9b
        },
              a0_0x2c5133 = {
          _0x406e75: 0x24c9
        },
              a0_0x5e41d7 = {
          _0x28c516: 0x2564,
          _0x49f83d: 0x1d55,
          _0x3ba342: 0xa9d,
          _0x1af86e: 0x255f
        };

        _0x1b01b3.r(_0x2ad6d4);

        var _0x4f1a85 = _0x1b01b3(0x16a21),
            _0x5e50e0 = _0x1b01b3(0x161cd);

        _0x4f1a85.api.cameraRotation = new class {
          ['start'](_0x38c723, _0x3ef8b9, _0x58eaab, _0x4debe8, _0x5f5bf2, _0x251bec = 0x28, _0xa49852 = false) {
            this.camera = _0x38c723, this.initPos = _0x3ef8b9, this.lookAtPos = _0x58eaab, this.offsetVector = _0x4debe8, this.heading = _0x5f5bf2, this.initHeading = _0x5f5bf2, this.currentMousePoint = {
              'x': 0x0,
              'y': 0x0
            }, this.isPaused = false, this.zUp = 0x0, this.zUpMultipler = 0x1, this.xBoderMultiplier = [0x0, 0x0], this.zBoderMultiplier = [-0.01, 0.8], this.fov = _0x251bec, this.zoomFov = _0x251bec, this.allowZoom = _0xa49852, this.isInMovingState = false, this.canMouseMove = true, this.mouseOn = false, this.updatePosition(), _0x38c723.pointAtCoord(_0x58eaab.x, _0x58eaab.y, _0x58eaab.z), _0x251bec && _0x38c723.setFov(_0x251bec), this.enable(true);
          }

          ['pause'](_0x5b340b) {
            this.isPaused = _0x5b340b;
          }

          ['stop']() {
            this.enable(false);
          }

          ['reset'](_0xce1277 = false, _0x553466 = 0x0, _0x13de37 = 0x0, _0xba631e = 0x0) {
            if (this.heading = this.initHeading, this.zUp = _0xba631e, _0xce1277) {
              const _0x440f2d = _0x5e50e0.game.object.getObjectOffsetFromCoords(this.initPos.x, this.initPos.y, this.initPos.z + this.zUp, this.heading, this.offsetVector.x, this.offsetVector.y, this.offsetVector.z),
                    _0x40e64a = _0x5e50e0.cameras.new('default');

              _0x40e64a.setCoord(_0x440f2d.x + _0x553466, _0x440f2d.y + _0x13de37, _0x440f2d.z), _0x40e64a.setFov(this.fov), _0x40e64a.pointAtCoord(this.lookAtPos.x + _0x553466, this.lookAtPos.y + _0x13de37, this.lookAtPos.z + _0xba631e), this.updatePosition(_0xce1277, _0x40e64a);
            } else this.updatePosition();
          }

          ['pointCamAtEntityBone'](_0x6a3ccd, _0x197643 = 0x0, _0x5dff90 = 0x0, _0x39d7a3 = 0x0, _0xc0c5bc = 0x0, _0x54ca7d = 0x0, _0x30b7b0 = 2.5, _0xd6ca10 = 0x0) {
            this.isInMovingState = true;

            const _0x1147a9 = _0x6a3ccd.getBoneCoords(_0x197643, 0x0, 0x0, 0x0),
                  _0x44b28d = _0x6a3ccd.getOffsetFromGivenWorldCoords(_0x1147a9.x, _0x1147a9.y, _0x1147a9.z),
                  _0x383a39 = _0x44b28d.x,
                  _0x65d631 = _0x44b28d.y,
                  _0x513045 = _0x44b28d.z,
                  _0x513c94 = _0x6a3ccd.getOffsetFromInWorldCoords(_0x383a39, _0x65d631, _0x513045),
                  _0x23fd01 = new _0x5e50e0.Vector3(_0x54ca7d, _0x30b7b0, _0xd6ca10),
                  _0x389714 = _0x5e50e0.game.object.getObjectOffsetFromCoords(this.initPos.x, this.initPos.y, this.initPos.z + this.zUp, this.heading, _0x23fd01.x, _0x23fd01.y, _0x23fd01.z),
                  _0x57e140 = _0x5e50e0.cameras.new('default');

            _0x57e140.setCoord(_0x389714.x + _0x5dff90, _0x389714.y + _0x39d7a3, _0x389714.z), _0x57e140.setFov(this.fov), _0x57e140.pointAtCoord(_0x513c94.x + _0x5dff90, _0x513c94.y + _0x39d7a3, _0x513c94.z + _0xc0c5bc), this.updatePosition(true, _0x57e140, _0x23fd01);
          }

          ['pointCamAtPos'](_0x37bfe6 = new _0x5e50e0.Vector3(0x0, 0x0, 0x0), _0x1769bd = new _0x5e50e0.Vector3(0x0, 0x0, 0x0), _0x2a92c8 = 0x0, _0x13d19d = 0x0, _0x34f401 = 0x0) {
            this.isInMovingState = true;

            const _0xbb90a4 = new _0x5e50e0.Vector3(_0x2a92c8, _0x13d19d, _0x34f401),
                  _0x37d2e5 = _0x5e50e0.cameras.new('default');

            _0x37d2e5.setCoord(_0x37bfe6.x, _0x37bfe6.y, _0x37bfe6.z), _0x37d2e5.setFov(this.fov), _0x37d2e5.pointAtCoord(_0x1769bd.x, _0x1769bd.y, _0x1769bd.z), this.updatePosition(true, _0x37d2e5, _0xbb90a4);
          }

          ['setXBoderMultiplier'](_0x47ab4a, _0x33e856) {
            this.xBoderMultiplier = [_0x47ab4a, _0x33e856];
          }

          ['setZBoderMultiplier'](_0x3ede7b, _0x4ad291) {
            this.zBoderMultiplier = [_0x3ede7b, _0x4ad291];
          }

          ['setZUpMultipler'](_0x297555) {
            this.zUpMultipler = _0x297555;
          }

          ['getNormilizedHeading']() {
            return this.normilizeHeading(this.initHeading - this.heading);
          }

          ['enable'](_0x360324) {
            _0x5e50e0.cameras.exists(this.camera) && this.camera.setActive(_0x360324), _0x5e50e0.game.cam.renderScriptCams(_0x360324, false, 0xbb8, true, false, 0x0), this.isActive = _0x360324, this.canMouseMove = true;
          }

          ['mouseMoved'](_0xd301fe, _0x34a823) {
            if (!this.canMouseMove) return;
            this.heading = this.normilizeHeading(this.heading + 0xa * _0xd301fe);

            let _0x2e25f3 = this.getNormilizedHeading();

            _0x2e25f3 > this.xBoderMultiplier[0x0] && _0x2e25f3 < this.xBoderMultiplier[0x1] && (_0x2e25f3 = Math.abs(this.xBoderMultiplier[0x0] - _0x2e25f3) > Math.abs(this.xBoderMultiplier[0x1] - _0x2e25f3) ? this.xBoderMultiplier[0x1] : this.xBoderMultiplier[0x0]), this.heading = this.normilizeHeading(-_0x2e25f3 + this.initHeading), this.zUp += _0x34a823 * this.zUpMultipler * -0x1, this.zUp > this.zBoderMultiplier[0x1] ? this.zUp = this.zBoderMultiplier[0x1] : this.zUp < this.zBoderMultiplier[0x0] && (this.zUp = this.zBoderMultiplier[0x0]), this.updatePosition();
          }

          ['updatePosition'](_0x16247f, _0x4fe293, _0x2e34ab) {
            const a0_0x1e4ed6 = {
              _0x51b5ce: 0xa9d,
              _0x453bd8: 0x250a
            };
            if (_0x16247f) _0x5e50e0.cameras.exists(this.camera) && _0x5e50e0.cameras.exists(_0x4fe293) && (_0x4fe293.setActiveWithInterp(this.camera.handle, 0x1f4, 0x1, 0x1), this.movingTimer && (this.movingTimer.cancel(), delete this.movingTimer), this.movingTimer = _0x5e50e0.game.sleep(0x1f4).then(() => {
              this.isInMovingState = false, delete this.movingTimer;
            })), _0x5e50e0.game.sleep(0x5).then(() => {
              _0x5e50e0.cameras.exists(_0x4fe293) && (this.camera.destroy(), this.camera = _0x4fe293, _0x2e34ab && (this.offsetVector = _0x2e34ab));
            });else {
              const _0x997dfd = _0x5e50e0.game.object.getObjectOffsetFromCoords(this.initPos.x, this.initPos.y, this.initPos.z + this.zUp, this.heading, this.offsetVector.x, this.offsetVector.y, this.offsetVector.z);

              this.camera.setCoord(_0x997dfd.x, _0x997dfd.y, _0x997dfd.z);
            }
          }

          ['isPointEmpty']() {
            return 0x0 === this.currentMousePoint.x && 0x0 === this.currentMousePoint.y;
          }

          ['setPoint'](_0x2742b8, _0x55703d) {
            this.currentMousePoint = {
              'x': _0x2742b8,
              'y': _0x55703d
            };
          }

          ['getPoint']() {
            return this.currentMousePoint;
          }

          ['normilizeHeading'](_0x3bcc5c) {
            return _0x3bcc5c > 0x168 ? _0x3bcc5c -= 0x168 : _0x3bcc5c < 0x0 && (_0x3bcc5c = 0x168 + _0x3bcc5c), _0x3bcc5c;
          }

        }(), _0x5e50e0.events.add('render', () => {
          if (!_0x4f1a85.api.cameraRotation.isActive || _0x4f1a85.api.cameraRotation.isPaused || !_0x4f1a85.api.cameraRotation.canMouseMove) return;

          const _0x12d834 = _0x5e50e0.game.controls.getDisabledControlNormal(0x0, 0x1),
                _0x200cdd = _0x5e50e0.game.controls.getDisabledControlNormal(0x0, 0x2);

          if (_0x4f1a85.api.cameraRotation.isPointEmpty() && _0x4f1a85.api.cameraRotation.setPoint(_0x12d834, _0x200cdd), _0x4f1a85.api.cameraRotation.setPoint(_0x12d834, _0x200cdd), _0x5e50e0.game.controls.isDisabledControlPressed(0x2, 0xed) && !_0x4f1a85.api.cameraRotation.mouseOn ? (_0x5e50e0.gui.cursor.visible && _0x5e50e0.gui.cursor.show(false, false), _0x4f1a85.api.cameraRotation.mouseMoved(-_0x12d834, -_0x200cdd)) : _0x5e50e0.gui.cursor.visible || _0x5e50e0.gui.cursor.show(true, true), _0x4f1a85.api.cameraRotation.allowZoom && !_0x4f1a85.api.cameraRotation.isInMovingState && !_0x4f1a85.api.cameraRotation.mouseOn) {
            _0x5e50e0.game.controls.isDisabledControlPressed(0x0, 0xf1) && (_0x4f1a85.api.cameraRotation.zoomFov = Math.max(_0x4f1a85.api.cameraRotation.zoomFov - 0xa, _0x4f1a85.api.cameraRotation.fov / 0x2)), _0x5e50e0.game.controls.isDisabledControlPressed(0x0, 0xf2) && (_0x4f1a85.api.cameraRotation.zoomFov = Math.min(_0x4f1a85.api.cameraRotation.zoomFov + 0xa, _0x4f1a85.api.cameraRotation.fov));

            const _0x1372a3 = _0x4f1a85.api.cameraRotation.camera.getFov();

            Math.abs(_0x4f1a85.api.cameraRotation.zoomFov - _0x1372a3) < 0.1 && (_0x4f1a85.api.cameraRotation.zoomFov = _0x1372a3), _0x4f1a85.api.cameraRotation.camera.setFov(_0x1372a3 + 0.05 * (_0x4f1a85.api.cameraRotation.zoomFov - _0x1372a3));
          }
        }), _0x5e50e0.events.add('interfaces.mouseOn', _0x2aa956 => {
          _0x4f1a85.api.cameraRotation.mouseOn = !!_0x2aa956;
        });
      },
      0xb73: (_0x5f4f36, _0x43ee4b, _0xc6c131) => {
        _0xc6c131(0x757f), _0xc6c131(0xd86a), _0xc6c131(0x176d8), _0xc6c131(0x202a), _0xc6c131(0x11a8c), _0xc6c131(0xb9cc), _0xc6c131(0xb342), _0xc6c131(0xe0e4), _0xc6c131(0xef1);
      },
      0xb9cc: (_0x7694e6, _0x1a4047, _0x5c1a01) => {
        'use strict';

        const a0_0x1f7546 = {
          _0x342e18: 0x1cfb
        },
              a0_0x5372f5 = {
          _0x2d7660: 0x1cfb,
          _0x9e3e3b: 0x1cfb,
          _0x3e868f: 0xdca,
          _0x5dbd26: 0x12d8,
          _0x3948c3: 0x2069
        },
              a0_0x3d6aca = {
          _0x4332a4: 0x1cfb,
          _0xb5e26b: 0x1f8,
          _0x1575c6: 0xe6d,
          _0x590c7a: 0xe3d,
          _0x182909: 0xe3d,
          _0x57ff28: 0x1f80,
          _0x325e53: 0x8e5,
          _0x1a5163: 0x121d,
          _0x5d5a82: 0x19c5,
          _0x48ca71: 0xadd,
          _0xb7548b: 0x121d,
          _0xe8195: 0x1af1
        },
              a0_0xde4e93 = {
          _0x13e311: 0x424,
          _0x81e23a: 0x1561,
          _0x959bf2: 0x535,
          _0x1bce7a: 0xbb1,
          _0x1c257d: 0x1cfb,
          _0x245ab0: 0x1349,
          _0xa9faf5: 0xbb1
        },
              a0_0x129fca = {
          _0x4b1646: 0x190
        },
              a0_0x105743 = {
          _0xb00544: 0x11f5,
          _0x164dd4: 0x1f8,
          _0x3a083c: 0x1f8,
          _0x4890bc: 0x21e0,
          _0x2f1d75: 0x1a2c,
          _0x28cffb: 0x1cfb,
          _0x3bd369: 0x12d8
        },
              a0_0x125abf = {
          _0x5bfaf2: 0x424,
          _0x1e7ade: 0x1cfb,
          _0x5b746a: 0x12d8,
          _0x28de60: 0x1561
        },
              a0_0x50ff02 = {
          _0x36d707: 0x1f8,
          _0x4f3a40: 0x1a2c,
          _0x1b97d5: 0x6da,
          _0x4cc47c: 0x1f8,
          _0x5ed6ca: 0x21e0,
          _0x21b751: 0x2a2,
          _0x23bd67: 0x1cfb,
          _0x1c6b6d: 0x1f80
        },
              a0_0x3b897b = {
          _0x3e0a8c: 0x424,
          _0x5dcd2a: 0x424,
          _0xbc7f78: 0x424,
          _0x2b8c31: 0x12d8,
          _0x3cc60c: 0x1561
        },
              a0_0x26f349 = {
          _0x52547c: 0x12d8,
          _0x5c39a3: 0x1561,
          _0x378f60: 0x1349,
          _0xda787: 0x145f
        },
              a0_0x12bbfd = {
          _0x2b7b5: 0x1a2c
        },
              a0_0x59f92e = {
          _0x59a261: 0xe6d,
          _0x593f5b: 0x1cfb,
          _0x3ea176: 0x12d8
        },
              a0_0x83a82a = {
          _0x3917a8: 0x424,
          _0x3fdaf2: 0x145f
        },
              a0_0x1fe986 = {
          _0x212644: 0xe6d,
          _0x5925bb: 0xbb1,
          _0x46cb35: 0x12d8,
          _0x168a8b: 0x1561,
          _0x17f4ce: 0x1349
        },
              a0_0x5bc06 = {
          _0x31b442: 0x1f8
        },
              a0_0x47f48e = {
          _0x2ddf6c: 0x1edc,
          _0x317fe2: 0xf01,
          _0xc93e98: 0x1a7f,
          _0x542ea9: 0x2a2,
          _0x45b69d: 0x1cfb,
          _0x3230b2: 0x8e5,
          _0x39b963: 0x535
        },
              a0_0x49a6af = {
          _0x53edc9: 0x8e5,
          _0x2e7f53: 0x1cfb,
          _0x32335e: 0x4e3
        };
        _0x5c1a01.r(_0x1a4047), _0x5c1a01.d(_0x1a4047, {
          'InstructionalButtons': () => _0x4572bb
        });

        var _0x245adf = _0x5c1a01(0x16a21),
            _0x2dee30 = _0x5c1a01(0xd194),
            _0x579b6b = _0x5c1a01(0x161cd);

        const _0x2efe51 = [-0x1, 0x1];

        _0x579b6b.game.graphics.requestScaleformMovie('INSTRUCTIONAL_BUTTONS');

        const _0x1193df = new Set();

        class _0x4572bb {
          constructor(_0x55b0ae, _0x56384a) {
            this.state = false, this.style = null, this.hud = new _0x2dee30.Scaleform('INSTRUCTIONAL_BUTTONS'), this.render = null, this.buttons = [], this.backgroundColors = [0x0, 0x0, 0x0, 0xb4], _0x55b0ae && this.changeStyle(_0x55b0ae), this.setBackgroundColor(_0x56384a), this.resetBar();
          }

          ['changeStyle'](_0x1a4764) {
            return _0x2efe51.includes(_0x1a4764) ? this.style === _0x1a4764 ? _0x245adf.api.chatPush('!{red}[ERROR] !{white}You\'re already using that style.') : (this.style = _0x1a4764, void (this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style))) : _0x245adf.api.chatPush('!{red}[ERROR] !{white}Invalid style. Please use styles (-1 or 1).');
          }

          ['setBackgroundColor'](_0x4897a1) {
            if (_0x4897a1) {
              if (Array.isArray(_0x4897a1)) this.backgroundColors[0x0] = [_0x4897a1[0x0], _0x4897a1[0x1], _0x4897a1[0x2], 0x4 === _0x4897a1.length ? 0xb4 : _0x4897a1[0x3]];else {
                if (_0x4897a1.match(/[0-9A-Fa-f]{6}/)) {
                  let _0x22bf06 = function (_0x1579e4) {
                    let _0x227f88 = parseInt(_0x1579e4.replace(/[^0-9A-F]/gi, ''), 0x10);

                    return [_0x227f88 >> 0x10 & 0xff, _0x227f88 >> 0x8 & 0xff, 0xff & _0x227f88];
                  }(_0x4897a1);

                  this.backgroundColors[0x0] = [_0x22bf06[0x0], _0x22bf06[0x1], _0x22bf06[0x2], 0xb4];
                } else _0x245adf.api.chatPush('!{orange}[WARNING] !{white}Invalid color given. Make sure it suits as specified in resource\'s description');
              }
            }

            this.hud.callFunction('SET_BACKGROUND_COLOUR', this.backgroundColors[0x0], this.backgroundColors[0x1], this.backgroundColors[0x2], this.backgroundColors[0x3]), this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
          }

          ['addButton'](_0x5ca3d4, _0x801e79) {
            const a0_0x328b0d = {
              _0x1b369b: 0x77b,
              _0x10b63a: 0x535,
              _0x267ed0: 0xe4d
            };

            if (Array.isArray(_0x801e79)) {
              let _0x1939e5 = [];

              _0x801e79.forEach(_0x5b74a0 => {
                let _0x481b2a = _0x546a7f(_0x5b74a0);

                't_ERR' === _0x481b2a && (_0x481b2a = '', _0x245adf.api.chatPush('!{orange}[WARNING] !{white}Invalid control_id, make sure its between (0, 356).')), _0x1939e5.push(_0x481b2a);
              });

              let _0x104ce2 = this.buttons.push({
                'control': _0x1939e5 || '',
                'title': _0x5ca3d4 || ''
              }) - 0x1;

              this.hud.callFunction('SET_DATA_SLOT', _0x104ce2, ..._0x1939e5, _0x245adf.api.language.translatePlayer(_0x5ca3d4)), this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
            } else {
              let _0x434d28 = _0x546a7f(_0x801e79);

              't_ERR' === _0x434d28 && (_0x434d28 = '', _0x245adf.api.chatPush('!{orange}[WARNING] !{white}Invalid control_id, make sure its between (0, 356).'));

              let _0x4d6191 = this.buttons.push({
                'control': _0x434d28 || '',
                'title': _0x5ca3d4 || ''
              }) - 0x1;

              this.hud.callFunction('SET_DATA_SLOT', _0x4d6191, _0x434d28, _0x245adf.api.language.translatePlayer(_0x5ca3d4)), this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
            }
          }

          ['hasControl'](_0xa0552e) {
            return _0xa0552e = _0x546a7f(_0xa0552e), !!this.buttons.find(_0x4c97c2 => _0x4c97c2.control === _0xa0552e);
          }

          ['hasButton'](_0x1c509) {
            return !!this.buttons.find(_0x1715d8 => _0x1715d8.title === _0x1c509);
          }

          ['hasSimilarButton'](_0xcccef1) {
            return !!this.buttons.find(_0xbb9557 => _0xbb9557.title.includes(_0xcccef1));
          }

          ['addButtons'](_0x1f5d68) {
            const a0_0x43e060 = {
              _0x4d6854: 0x77b,
              _0x2f7d73: 0xf01,
              _0x4481f3: 0xe4d,
              _0x99c67f: 0x1d2
            };
            if ('object' != typeof _0x1f5d68) return _0x245adf.api.chatPush('!{red}[ERROR] !{white}Invalid arguement form, please use object form that is instructed on the resource\'s description.');
            Object.keys(_0x1f5d68).forEach(_0x40806e => {
              if (Array.isArray(_0x1f5d68[_0x40806e])) {
                let _0xa87e9d = [];

                _0x1f5d68[_0x40806e].forEach(_0x36c63 => {
                  let _0x471e89 = _0x546a7f(_0x36c63);

                  't_ERR' === _0x471e89 && (_0x471e89 = '', _0x245adf.api.chatPush('!{orange}[WARNING] !{white}Invalid control_id, make sure its between (0, 356).')), _0xa87e9d.push(_0x471e89);
                });

                let _0x259503 = this.buttons.push({
                  'title': _0x40806e || '',
                  'control': _0xa87e9d || ''
                }) - 0x1;

                this.hud.callFunction('SET_DATA_SLOT', _0x259503, ..._0xa87e9d, _0x245adf.api.language.translatePlayer(_0x40806e));
              } else {
                let _0x38f4c4 = _0x40806e,
                    _0x17712d = _0x546a7f(_0x1f5d68[_0x40806e]),
                    _0x519c67 = this.buttons.push({
                  'title': _0x38f4c4 || '',
                  'control': _0x17712d || ''
                }) - 0x1;

                this.hud.callFunction('SET_DATA_SLOT', _0x519c67, _0x17712d, _0x245adf.api.language.translatePlayer(_0x38f4c4));
              }
            }), this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
          }

          ['changeButtonTitle'](_0x4d87d1, _0x9cecb7) {
            _0x4d87d1 = _0x546a7f(_0x4d87d1), this.buttons.forEach((_0x1c7fa7, _0x4c0491) => {
              _0x1c7fa7.title != _0x9cecb7 && _0x1c7fa7.control === _0x4d87d1 && (_0x1c7fa7.title = _0x9cecb7, this.hud.callFunction('SET_DATA_SLOT', _0x4c0491, _0x1c7fa7.control, _0x245adf.api.language.translatePlayer(_0x1c7fa7.title)));
            }), this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
          }

          ['changeButtonTitle2'](_0x336025, _0x459488) {
            const a0_0x422614 = {
              _0x4d594b: 0x145f
            };
            this.buttons.filter(_0x2c2919 => _0x2c2919.title === _0x336025).forEach((_0x1a16c0, _0xd9526e) => {
              _0x1a16c0.title = _0x459488;
            }), this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
          }

          ['changeButtonControl'](_0x3f2097, _0x5718c7) {
            this.buttons.forEach((_0x11e398, _0x442269) => {
              _0x11e398.title === _0x3f2097 && (_0x11e398.control = _0x546a7f(_0x5718c7), this.hud.callFunction('SET_DATA_SLOT', _0x442269, _0x11e398.control, _0x245adf.api.language.translatePlayer(_0x11e398.title)));
            }), this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
          }

          ['removeButton'](_0x5ab151) {
            const a0_0xc69946 = {
              _0x26d085: 0x145f,
              _0x2299fc: 0x12d8
            };

            switch (typeof _0x5ab151) {
              case 'string':
                this.buttons.find(_0x578756 => _0x578756.title === _0x5ab151) && (this.buttons = this.buttons.filter((_0x4cf4db, _0x3ed207) => {
                  if (_0x4cf4db.title !== _0x5ab151) return true;
                  this.hud.callFunction('SET_DATA_SLOT', _0x3ed207, '', '');
                }));
                break;

              case 'number':
                this.buttons.find(_0x4bbe1e => Array.isArray(_0x4bbe1e.control) ? _0x4bbe1e.control.includes(_0x546a7f(_0x5ab151)) : _0x4bbe1e.control === _0x546a7f(_0x5ab151)) && (this.buttons = this.buttons.filter((_0x3aee5f, _0x4951f6) => {
                  if (!(Array.isArray(_0x3aee5f.control) ? _0x3aee5f.control.includes(_0x546a7f(_0x5ab151)) : _0x3aee5f.control === _0x546a7f(_0x5ab151))) return true;
                  this.hud.callFunction('SET_DATA_SLOT', _0x4951f6, '', '');
                }));
            }

            this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
          }

          ['removeSimilarButton'](_0x5e1420) {
            const a0_0x37569e = {
              _0x382113: 0x145f,
              _0x255314: 0x1edc
            };

            switch (typeof _0x5e1420) {
              case 'string':
                this.buttons.find(_0x4d177d => _0x4d177d.title.includes(_0x5e1420)) && (this.buttons = this.buttons.filter((_0x8abb78, _0x23772e) => {
                  if (!_0x8abb78.title.includes(_0x5e1420)) return true;
                  this.hud.callFunction('SET_DATA_SLOT', _0x23772e, '', '');
                }));
                break;

              case 'number':
                this.buttons.find(_0x4ae6b8 => Array.isArray(_0x4ae6b8.control) ? _0x4ae6b8.control.includes(_0x546a7f(_0x5e1420)) : _0x4ae6b8.control === _0x546a7f(_0x5e1420)) && (this.buttons = this.buttons.filter((_0x5ed8d3, _0xd8091f) => {
                  if (!(Array.isArray(_0x5ed8d3.control) ? _0x5ed8d3.control.includes(_0x546a7f(_0x5e1420)) : _0x5ed8d3.control === _0x546a7f(_0x5e1420))) return true;
                  this.hud.callFunction('SET_DATA_SLOT', _0xd8091f, '', '');
                }));
            }

            this.isActive() && this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style);
          }

          ['removeButtons']() {
            this.buttons = [], this.resetBar();
          }

          ['getButtonCount']() {
            return this.buttons.length;
          }

          ['toggleHud'](_0x53dbcb) {
            if (_0x53dbcb) this.hud.callFunction('CLEAR_ALL'), this.buttons.forEach((_0x160c0f, _0x24568d) => {
              Array.isArray(_0x160c0f.control) ? this.hud.callFunction('SET_DATA_SLOT', _0x24568d, ..._0x160c0f.control, _0x245adf.api.language.translatePlayer(_0x160c0f.title)) : this.hud.callFunction('SET_DATA_SLOT', _0x24568d, _0x160c0f.control, _0x245adf.api.language.translatePlayer(_0x160c0f.title));
            }), this.hud.callFunction('SET_BACKGROUND_COLOUR', this.backgroundColors[0x0], this.backgroundColors[0x1], this.backgroundColors[0x2], this.backgroundColors[0x3]), this.hud.callFunction('DRAW_INSTRUCTIONAL_BUTTONS', this.style), null === this.render && (this.render = _0x1193df.add(() => this.hud.renderFullscreen())), this.state = true;else {
              if (null === this.render) return false;
              _0x1193df.delete(this.render), this.render = undefined, this.state = false;
            }
          }

          ['isActive']() {
            return this.state;
          }

          ['resetBar']() {
            this.hud.callFunction('CLEAR_ALL'), this.hud.callFunction('TOGGLE_MOUSE_BUTTONS', 0x0), this.hud.callFunction('CREATE_CONTAINER'), this.hud.callFunction('SET_CLEAR_SPACE', 0x64);
          }

          ['destroy']() {
            this.hud.destroy();
          }

        }

        function _0x546a7f(_0x14641b) {
          return 'number' == typeof _0x14641b && _0x14641b >= 0x0 && _0x14641b <= 0x167 ? _0x579b6b.game.controls.getControlActionName(0x2, _0x14641b, true) : 'string' == typeof _0x14641b ? 't_' + _0x14641b : 't_ERR';
        }

        _0x579b6b.events.add('render', () => {
          if (_0x1193df.size) {
            for (const _0x4a69b9 of _0x1193df) 'function' == typeof _0x4a69b9 && _0x4a69b9();
          }
        });
      },
      0x11a8c: (_0x565820, _0x56473e, _0x24e5b2) => {
        'use strict';

        const a0_0x32cc31 = {
          _0x2cd1a6: 0x1d66,
          _0x2e8c58: 0x1d66
        },
              a0_0x2f106f = {
          _0x4bbb20: 0x6c8
        };
        _0x24e5b2.r(_0x56473e), _0x24e5b2.d(_0x56473e, {
          'default': () => _0x3bf2fd
        }), _0x24e5b2(0x16a21);

        var _0x55b163 = _0x24e5b2(0x161cd);

        _0x55b163.events.add('utils.showLoadingPrompt', () => {
          _0x3df245.show('MP_SPINLOADING');
        }), _0x55b163.events.add('utils.showLoadingPromptWithText', _0x1c6fb1 => {
          _0x3df245.showMessage(_0x1c6fb1);
        }), _0x55b163.events.add('utils.hideLoadingPrompt', () => {
          _0x3df245.hide();
        });

        const _0x3df245 = new class {
          ['show'](_0x3101b2, _0x433323 = 0x4) {
            _0x55b163.game.ui.setLoadingPromptTextEntry(_0x3101b2), _0x55b163.game.ui.showLoadingPrompt(_0x433323);
          }

          ['showMessage'](_0x394795, _0x192452 = 0x4) {
            _0x55b163.game.ui.setLoadingPromptTextEntry('STRING'), _0x55b163.game.ui.addTextComponentSubstringPlayerName(_0x394795), _0x55b163.game.ui.showLoadingPrompt(_0x192452);
          }

          ['hide']() {
            _0x55b163.game.hud.busyspinnerOff();
          }

        }(),
              _0x3bf2fd = _0x3df245;
      },
      0xe0e4: (_0x2d5e55, _0x239965, _0x432944) => {
        'use strict';

        const a0_0x60b4b2 = {
          _0x2316b0: 0xffb,
          _0x34662f: 0x2173,
          _0x53d1b3: 0xdd0,
          _0x37b041: 0x6da,
          _0x4618c1: 0x245e,
          _0x56f848: 0x6da,
          _0x3ac876: 0x1893,
          _0xd3ceb5: 0x38b,
          _0x5ed112: 0x1e82,
          _0x3995a6: 0x1ceb,
          _0x5b3880: 0x19c5,
          _0x3f07ee: 0x14d2,
          _0x228482: 0x1ceb,
          _0x183e2b: 0x1a5,
          _0x222c3f: 0x38b,
          _0x32ccad: 0x1caf,
          _0x5f10cc: 0x1b2e,
          _0x30d975: 0x19d2,
          _0x80a73d: 0x1d55,
          _0x403e84: 0x1893,
          _0x48316d: 0x1d66,
          _0x3a3f61: 0x2197,
          _0x173b1a: 0x1e35,
          _0x5e0d1a: 0x2197,
          _0x19023f: 0x1d66,
          _0x272a28: 0x2197,
          _0x2061b2: 0x16d6,
          _0x5b934b: 0x1d55,
          _0x106d94: 0x35f,
          _0x2cce0f: 0x1e35,
          _0x403942: 0x245e
        };

        _0x432944.r(_0x239965);

        var _0x26af5c = _0x432944(0x175a1),
            _0x18e8cc = _0x432944(0x16a21),
            _0x5e12b8 = _0x432944(0xf01d),
            _0x263bfa = _0x432944(0x2558);

        const _0x5e0c36 = new Uint8Array([0x0, 0x61, 0x73, 0x6d, 0x1, 0x0, 0x0, 0x0, 0x1, 0x3e, 0xb, 0x60, 0x2, 0x7f, 0x7f, 0x0, 0x60, 0x1, 0x7f, 0x1, 0x7f, 0x60, 0x1, 0x7f, 0x0, 0x60, 0x0, 0x0, 0x60, 0x2, 0x7f, 0x7f, 0x1, 0x7f, 0x60, 0x3, 0x7f, 0x7f, 0x7f, 0x0, 0x60, 0x3, 0x7c, 0x7c, 0x7f, 0x1, 0x7f, 0x60, 0x4, 0x7c, 0x7c, 0x7f, 0x7f, 0x1, 0x7f, 0x60, 0x4, 0x7f, 0x7f, 0x7f, 0x7f, 0x0, 0x60, 0x0, 0x1, 0x7f, 0x60, 0x2, 0x7f, 0x7f, 0x1, 0x7c, 0x2, 0xd, 0x1, 0x3, 0x65, 0x6e, 0x76, 0x5, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x0, 0x8, 0x3, 0x2c, 0x2b, 0x0, 0x0, 0x1, 0x1, 0x1, 0x3, 0x0, 0x0, 0x2, 0x5, 0x2, 0x2, 0x1, 0x0, 0x0, 0x0, 0x5, 0x3, 0x9, 0x4, 0x4, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x1, 0xa, 0x6, 0x4, 0x4, 0x1, 0x2, 0x3, 0x2, 0x2, 0x3, 0x3, 0x1, 0x7, 0x6, 0x7, 0x5, 0x3, 0x1, 0x0, 0x1, 0x6, 0x4a, 0xe, 0x7f, 0x0, 0x41, 0x3, 0xb, 0x7f, 0x0, 0x41, 0x4, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x0, 0x41, 0x80, 0xe, 0xb, 0x7f, 0x1, 0x41, 0xb4, 0x8e, 0x1, 0xb, 0x7, 0x84, 0x1, 0xb, 0xb, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x0, 0x1c, 0xf, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x41, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x49, 0x44, 0x3, 0x0, 0xd, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x49, 0x44, 0x3, 0x1, 0x5, 0x5f, 0x5f, 0x6e, 0x65, 0x77, 0x0, 0x19, 0x5, 0x5f, 0x5f, 0x70, 0x69, 0x6e, 0x0, 0x21, 0x7, 0x5f, 0x5f, 0x75, 0x6e, 0x70, 0x69, 0x6e, 0x0, 0x22, 0x9, 0x5f, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x0, 0x23, 0xb, 0x5f, 0x5f, 0x72, 0x74, 0x74, 0x69, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x3, 0xc, 0x6, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2, 0x0, 0xb, 0x69, 0x73, 0x49, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x0, 0x2a, 0x5, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x0, 0x2b, 0x8, 0x1, 0x26, 0xa, 0xa7, 0x22, 0x2b, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x4, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x8, 0xb, 0x10, 0x0, 0x20, 0x0, 0x20, 0x0, 0x10, 0x1, 0x20, 0x0, 0x20, 0x0, 0x10, 0x2, 0x20, 0x0, 0xb, 0xa, 0x0, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x7c, 0x71, 0xb, 0xa, 0x0, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x3, 0x71, 0xb, 0x56, 0x1, 0x2, 0x7f, 0x41, 0xd0, 0xa, 0x10, 0xc, 0x41, 0xa0, 0x8, 0x10, 0xc, 0x41, 0x90, 0x9, 0x10, 0xc, 0x41, 0x90, 0xd, 0x10, 0xc, 0x41, 0xd0, 0xd, 0x10, 0xc, 0x23, 0x6, 0x22, 0x1, 0x10, 0x4, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x20, 0x1, 0x47, 0x4, 0x40, 0x20, 0x0, 0x10, 0x5, 0x41, 0x3, 0x47, 0x4, 0x40, 0x41, 0x0, 0x41, 0xd0, 0x9, 0x41, 0x9f, 0x1, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0x14, 0x6a, 0x10, 0x25, 0x20, 0x0, 0x10, 0x4, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0xb, 0x11, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x7c, 0x71, 0x72, 0x10, 0x1, 0xb, 0x11, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x3, 0x71, 0x72, 0x10, 0x1, 0xb, 0x53, 0x1, 0x1, 0x7f, 0x20, 0x0, 0x10, 0x4, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x20, 0x0, 0x41, 0xb4, 0x8e, 0x1, 0x49, 0x20, 0x0, 0x28, 0x2, 0x8, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xd0, 0x9, 0x41, 0xff, 0x0, 0x41, 0x12, 0x10, 0x0, 0x0, 0xb, 0xf, 0xb, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x0, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xd0, 0x9, 0x41, 0x83, 0x1, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2, 0x20, 0x0, 0x20, 0x1, 0x10, 0x8, 0xb, 0x26, 0x1, 0x1, 0x7f, 0x20, 0x1, 0x28, 0x2, 0x8, 0x21, 0x3, 0x20, 0x0, 0x20, 0x1, 0x20, 0x2, 0x72, 0x10, 0x1, 0x20, 0x0, 0x20, 0x3, 0x10, 0x2, 0x20, 0x3, 0x20, 0x0, 0x10, 0x8, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2, 0xb, 0x7d, 0x1, 0x2, 0x7f, 0x20, 0x0, 0x23, 0x7, 0x46, 0x4, 0x40, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xd0, 0x9, 0x41, 0x93, 0x1, 0x41, 0x1e, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x24, 0x7, 0xb, 0x20, 0x0, 0x10, 0x9, 0x23, 0x8, 0x21, 0x2, 0x20, 0x0, 0x22, 0x1, 0x28, 0x2, 0xc, 0x22, 0x0, 0x41, 0x1, 0x4d, 0x4, 0x7f, 0x41, 0x1, 0x5, 0x20, 0x0, 0x41, 0x80, 0xe, 0x28, 0x2, 0x0, 0x4b, 0x4, 0x40, 0x41, 0xd0, 0xa, 0x41, 0x90, 0xb, 0x41, 0x16, 0x41, 0x1c, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0x3, 0x74, 0x41, 0x84, 0xe, 0x6a, 0x28, 0x2, 0x0, 0x41, 0x20, 0x71, 0xb, 0x4, 0x7f, 0x23, 0x9, 0x45, 0x5, 0x41, 0x2, 0xb, 0x21, 0x0, 0x20, 0x1, 0x20, 0x2, 0x20, 0x0, 0x10, 0xa, 0xb, 0x23, 0x0, 0x20, 0x0, 0x45, 0x4, 0x40, 0xf, 0xb, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x0, 0x10, 0x5, 0x23, 0x9, 0x46, 0x4, 0x40, 0x20, 0x0, 0x10, 0xb, 0x23, 0x5, 0x41, 0x1, 0x6a, 0x24, 0x5, 0xb, 0xb, 0xd, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x41, 0x4, 0x6a, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x0, 0xb, 0x99, 0x2, 0x1, 0x4, 0x7f, 0x20, 0x1, 0x28, 0x2, 0x0, 0x22, 0x2, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0x8c, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x2, 0x41, 0x7c, 0x71, 0x22, 0x2, 0x41, 0xc, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0x8e, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x2, 0x41, 0x80, 0x2, 0x49, 0x4, 0x40, 0x20, 0x2, 0x41, 0x4, 0x76, 0x21, 0x2, 0x5, 0x41, 0x1f, 0x20, 0x2, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x20, 0x2, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x49, 0x1b, 0x22, 0x2, 0x67, 0x6b, 0x21, 0x3, 0x20, 0x2, 0x20, 0x3, 0x41, 0x4, 0x6b, 0x76, 0x41, 0x10, 0x73, 0x21, 0x2, 0x20, 0x3, 0x41, 0x7, 0x6b, 0x21, 0x3, 0xb, 0x20, 0x2, 0x41, 0x10, 0x49, 0x41, 0x0, 0x20, 0x3, 0x41, 0x17, 0x49, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0x9c, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x28, 0x2, 0x8, 0x21, 0x4, 0x20, 0x1, 0x28, 0x2, 0x4, 0x22, 0x5, 0x4, 0x40, 0x20, 0x5, 0x20, 0x4, 0x10, 0x2, 0xb, 0x20, 0x4, 0x4, 0x40, 0x20, 0x4, 0x20, 0x5, 0x10, 0x1, 0xb, 0x20, 0x1, 0x20, 0x0, 0x20, 0x2, 0x20, 0x3, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x46, 0x4, 0x40, 0x20, 0x0, 0x20, 0x2, 0x20, 0x3, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x4, 0x36, 0x2, 0x60, 0x20, 0x4, 0x45, 0x4, 0x40, 0x20, 0x0, 0x20, 0x3, 0x41, 0x2, 0x74, 0x6a, 0x22, 0x4, 0x28, 0x2, 0x4, 0x41, 0x7e, 0x20, 0x2, 0x77, 0x71, 0x21, 0x1, 0x20, 0x4, 0x20, 0x1, 0x36, 0x2, 0x4, 0x20, 0x1, 0x45, 0x4, 0x40, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x7e, 0x20, 0x3, 0x77, 0x71, 0x10, 0xe, 0xb, 0xb, 0xb, 0xb, 0xc1, 0x3, 0x1, 0x5, 0x7f, 0x20, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xc9, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x28, 0x2, 0x0, 0x22, 0x3, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xcb, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x4, 0x28, 0x2, 0x0, 0x22, 0x2, 0x41, 0x1, 0x71, 0x4, 0x40, 0x2, 0x7f, 0x20, 0x0, 0x20, 0x4, 0x10, 0xf, 0x20, 0x1, 0x20, 0x3, 0x41, 0x4, 0x6a, 0x20, 0x2, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x3, 0x10, 0xe, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x4, 0x28, 0x2, 0x0, 0xb, 0x21, 0x2, 0xb, 0x20, 0x3, 0x41, 0x2, 0x71, 0x4, 0x40, 0x20, 0x1, 0x41, 0x4, 0x6b, 0x28, 0x2, 0x0, 0x22, 0x1, 0x28, 0x2, 0x0, 0x22, 0x6, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xdd, 0x1, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x1, 0x10, 0xf, 0x20, 0x1, 0x20, 0x6, 0x41, 0x4, 0x6a, 0x20, 0x3, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x3, 0x10, 0xe, 0xb, 0x20, 0x4, 0x20, 0x2, 0x41, 0x2, 0x72, 0x10, 0xe, 0x20, 0x3, 0x41, 0x7c, 0x71, 0x22, 0x3, 0x41, 0xc, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xe9, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x3, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x6a, 0x20, 0x4, 0x47, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xea, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x4, 0x41, 0x4, 0x6b, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x3, 0x41, 0x80, 0x2, 0x49, 0x4, 0x7f, 0x20, 0x3, 0x41, 0x4, 0x76, 0x5, 0x41, 0x1f, 0x20, 0x3, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x20, 0x3, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x49, 0x1b, 0x22, 0x3, 0x67, 0x6b, 0x22, 0x4, 0x41, 0x7, 0x6b, 0x21, 0x5, 0x20, 0x3, 0x20, 0x4, 0x41, 0x4, 0x6b, 0x76, 0x41, 0x10, 0x73, 0xb, 0x22, 0x3, 0x41, 0x10, 0x49, 0x41, 0x0, 0x20, 0x5, 0x41, 0x17, 0x49, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xfb, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x3, 0x20, 0x5, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x21, 0x4, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1, 0x20, 0x1, 0x20, 0x4, 0x10, 0x2, 0x20, 0x4, 0x4, 0x40, 0x20, 0x4, 0x20, 0x1, 0x10, 0x1, 0xb, 0x20, 0x0, 0x20, 0x3, 0x20, 0x5, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x60, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x1, 0x20, 0x5, 0x74, 0x72, 0x10, 0xe, 0x20, 0x0, 0x20, 0x5, 0x41, 0x2, 0x74, 0x6a, 0x22, 0x0, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x1, 0x20, 0x3, 0x74, 0x72, 0x36, 0x2, 0x4, 0xb, 0xd0, 0x1, 0x1, 0x2, 0x7f, 0x20, 0x1, 0x20, 0x2, 0x4b, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xf9, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x41, 0x13, 0x6a, 0x41, 0x70, 0x71, 0x41, 0x4, 0x6b, 0x21, 0x1, 0x20, 0x2, 0x41, 0x70, 0x71, 0x21, 0x3, 0x20, 0x0, 0x28, 0x2, 0xa0, 0xc, 0x22, 0x2, 0x4, 0x40, 0x20, 0x1, 0x20, 0x2, 0x41, 0x4, 0x6a, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0x80, 0x3, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x2, 0x20, 0x1, 0x41, 0x10, 0x6b, 0x46, 0x4, 0x40, 0x2, 0x7f, 0x20, 0x2, 0x28, 0x2, 0x0, 0x21, 0x4, 0x20, 0x1, 0x41, 0x10, 0x6b, 0xb, 0x21, 0x1, 0xb, 0x5, 0x20, 0x1, 0x20, 0x0, 0x41, 0xa4, 0xc, 0x6a, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0x8d, 0x3, 0x41, 0x5, 0x10, 0x0, 0x0, 0xb, 0xb, 0x20, 0x3, 0x20, 0x1, 0x6b, 0x22, 0x2, 0x41, 0x14, 0x49, 0x4, 0x40, 0xf, 0xb, 0x20, 0x1, 0x20, 0x4, 0x41, 0x2, 0x71, 0x20, 0x2, 0x41, 0x8, 0x6b, 0x22, 0x2, 0x41, 0x1, 0x72, 0x72, 0x10, 0xe, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1, 0x20, 0x1, 0x41, 0x0, 0x10, 0x2, 0x20, 0x2, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x6a, 0x22, 0x2, 0x41, 0x2, 0x10, 0xe, 0x20, 0x0, 0x20, 0x2, 0x36, 0x2, 0xa0, 0xc, 0x20, 0x0, 0x20, 0x1, 0x10, 0x10, 0xb, 0x95, 0x1, 0x1, 0x2, 0x7f, 0x3f, 0x0, 0x22, 0x0, 0x41, 0x1, 0x48, 0x4, 0x7f, 0x41, 0x1, 0x20, 0x0, 0x6b, 0x40, 0x0, 0x41, 0x0, 0x48, 0x5, 0x41, 0x0, 0xb, 0x4, 0x40, 0x0, 0xb, 0x41, 0xc0, 0x8e, 0x1, 0x41, 0x0, 0x10, 0xe, 0x41, 0xe0, 0x9a, 0x1, 0x41, 0x0, 0x36, 0x2, 0x0, 0x3, 0x40, 0x20, 0x1, 0x41, 0x17, 0x49, 0x4, 0x40, 0x20, 0x1, 0x41, 0x2, 0x74, 0x41, 0xc0, 0x8e, 0x1, 0x6a, 0x41, 0x0, 0x36, 0x2, 0x4, 0x41, 0x0, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x41, 0x10, 0x49, 0x4, 0x40, 0x20, 0x0, 0x20, 0x1, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x41, 0xc0, 0x8e, 0x1, 0x6a, 0x41, 0x0, 0x36, 0x2, 0x60, 0x20, 0x0, 0x41, 0x1, 0x6a, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x20, 0x1, 0x41, 0x1, 0x6a, 0x21, 0x1, 0xc, 0x1, 0xb, 0xb, 0x41, 0xc0, 0x8e, 0x1, 0x41, 0xe4, 0x9a, 0x1, 0x3f, 0x0, 0x41, 0x10, 0x74, 0x10, 0x11, 0x41, 0xc0, 0x8e, 0x1, 0x24, 0xb, 0xb, 0xa6, 0x3, 0x1, 0x3, 0x7f, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x23, 0x4, 0xe, 0x3, 0x0, 0x1, 0x2, 0x3, 0xb, 0x41, 0x1, 0x24, 0x4, 0x41, 0x0, 0x24, 0x5, 0x10, 0x6, 0x23, 0x8, 0x24, 0x7, 0xc, 0x3, 0xb, 0x23, 0x9, 0x45, 0x21, 0x1, 0x23, 0x7, 0x10, 0x4, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x23, 0x8, 0x47, 0x4, 0x40, 0x20, 0x0, 0x24, 0x7, 0x20, 0x0, 0x10, 0x5, 0x20, 0x1, 0x47, 0x4, 0x40, 0x20, 0x0, 0x20, 0x1, 0x10, 0x7, 0x41, 0x0, 0x24, 0x5, 0x20, 0x0, 0x41, 0x14, 0x6a, 0x10, 0x25, 0xc, 0x5, 0xb, 0x20, 0x0, 0x10, 0x4, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x41, 0x0, 0x24, 0x5, 0x10, 0x6, 0x23, 0x7, 0x10, 0x4, 0x23, 0x8, 0x46, 0x4, 0x40, 0x23, 0xd, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x41, 0xb4, 0x8e, 0x1, 0x49, 0x4, 0x40, 0x20, 0x0, 0x28, 0x2, 0x0, 0x10, 0xc, 0x20, 0x0, 0x41, 0x4, 0x6a, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x23, 0x7, 0x10, 0x4, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x23, 0x8, 0x47, 0x4, 0x40, 0x20, 0x0, 0x10, 0x5, 0x20, 0x1, 0x47, 0x4, 0x40, 0x20, 0x0, 0x20, 0x1, 0x10, 0x7, 0x20, 0x0, 0x41, 0x14, 0x6a, 0x10, 0x25, 0xb, 0x20, 0x0, 0x10, 0x4, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x23, 0xa, 0x21, 0x0, 0x23, 0x8, 0x24, 0xa, 0x20, 0x0, 0x24, 0x8, 0x20, 0x1, 0x24, 0x9, 0x20, 0x0, 0x10, 0x4, 0x24, 0x7, 0x41, 0x2, 0x24, 0x4, 0xb, 0xc, 0x2, 0xb, 0x23, 0x7, 0x22, 0x0, 0x23, 0x8, 0x47, 0x4, 0x40, 0x20, 0x0, 0x10, 0x4, 0x24, 0x7, 0x20, 0x0, 0x10, 0x5, 0x23, 0x9, 0x45, 0x47, 0x4, 0x40, 0x41, 0x0, 0x41, 0xd0, 0x9, 0x41, 0xe4, 0x1, 0x41, 0x14, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0xb4, 0x8e, 0x1, 0x49, 0x4, 0x40, 0x20, 0x0, 0x41, 0x0, 0x10, 0x1, 0x20, 0x0, 0x41, 0x0, 0x10, 0x2, 0x5, 0x23, 0x2, 0x20, 0x0, 0x10, 0xd, 0x6b, 0x24, 0x2, 0x20, 0x0, 0x41, 0x4, 0x6a, 0x22, 0x1, 0x41, 0xb4, 0x8e, 0x1, 0x4f, 0x4, 0x40, 0x23, 0xb, 0x45, 0x4, 0x40, 0x10, 0x12, 0xb, 0x23, 0xb, 0x21, 0x2, 0x20, 0x1, 0x41, 0x4, 0x6b, 0x21, 0x0, 0x20, 0x1, 0x41, 0xf, 0x71, 0x45, 0x41, 0x0, 0x20, 0x1, 0x1b, 0x4, 0x7f, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x1, 0x71, 0x45, 0x5, 0x41, 0x0, 0xb, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xaf, 0x4, 0x41, 0x3, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x1, 0x72, 0x10, 0xe, 0x20, 0x2, 0x20, 0x0, 0x10, 0x10, 0xb, 0xb, 0x41, 0xa, 0xf, 0xb, 0x23, 0x8, 0x23, 0x8, 0x10, 0x1, 0x23, 0x8, 0x23, 0x8, 0x10, 0x2, 0x41, 0x0, 0x24, 0x4, 0xb, 0x41, 0x0, 0xf, 0xb, 0x23, 0x5, 0xb, 0xdc, 0x1, 0x1, 0x1, 0x7f, 0x20, 0x1, 0x41, 0x80, 0x2, 0x49, 0x4, 0x40, 0x20, 0x1, 0x41, 0x4, 0x76, 0x21, 0x1, 0x5, 0x41, 0x1f, 0x20, 0x1, 0x41, 0x1, 0x41, 0x1b, 0x20, 0x1, 0x67, 0x6b, 0x74, 0x6a, 0x41, 0x1, 0x6b, 0x20, 0x1, 0x20, 0x1, 0x41, 0xfe, 0xff, 0xff, 0xff, 0x1, 0x49, 0x1b, 0x22, 0x1, 0x67, 0x6b, 0x21, 0x2, 0x20, 0x1, 0x20, 0x2, 0x41, 0x4, 0x6b, 0x76, 0x41, 0x10, 0x73, 0x21, 0x1, 0x20, 0x2, 0x41, 0x7, 0x6b, 0x21, 0x2, 0xb, 0x20, 0x1, 0x41, 0x10, 0x49, 0x41, 0x0, 0x20, 0x2, 0x41, 0x17, 0x49, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xca, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x2, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x4, 0x41, 0x7f, 0x20, 0x1, 0x74, 0x71, 0x22, 0x1, 0x4, 0x7f, 0x20, 0x0, 0x20, 0x1, 0x68, 0x20, 0x2, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x5, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x7f, 0x20, 0x2, 0x41, 0x1, 0x6a, 0x74, 0x71, 0x22, 0x1, 0x4, 0x7f, 0x20, 0x0, 0x20, 0x1, 0x68, 0x22, 0x1, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x4, 0x22, 0x2, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xd7, 0x2, 0x41, 0x12, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x2, 0x68, 0x20, 0x1, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x5, 0x41, 0x0, 0xb, 0xb, 0xb, 0xe5, 0x2, 0x1, 0x3, 0x7f, 0x20, 0x1, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x4b, 0x4, 0x40, 0x41, 0x90, 0x9, 0x41, 0xe0, 0xb, 0x41, 0xca, 0x3, 0x41, 0x1d, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0xc, 0x20, 0x1, 0x41, 0x13, 0x6a, 0x41, 0x70, 0x71, 0x41, 0x4, 0x6b, 0x20, 0x1, 0x41, 0xc, 0x4d, 0x1b, 0x22, 0x2, 0x10, 0x14, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x4, 0x3f, 0x0, 0x22, 0x1, 0x41, 0x10, 0x74, 0x41, 0x4, 0x6b, 0x20, 0x0, 0x28, 0x2, 0xa0, 0xc, 0x47, 0x74, 0x20, 0x2, 0x41, 0x1, 0x41, 0x1b, 0x20, 0x2, 0x67, 0x6b, 0x74, 0x41, 0x1, 0x6b, 0x6a, 0x20, 0x2, 0x20, 0x2, 0x41, 0xfe, 0xff, 0xff, 0xff, 0x1, 0x49, 0x1b, 0x6a, 0x41, 0xff, 0xff, 0x3, 0x6a, 0x41, 0x80, 0x80, 0x7c, 0x71, 0x41, 0x10, 0x76, 0x21, 0x3, 0x20, 0x1, 0x20, 0x3, 0x20, 0x1, 0x20, 0x3, 0x4a, 0x1b, 0x40, 0x0, 0x41, 0x0, 0x48, 0x4, 0x40, 0x20, 0x3, 0x40, 0x0, 0x41, 0x0, 0x48, 0x4, 0x40, 0x0, 0xb, 0xb, 0x20, 0x0, 0x20, 0x1, 0x41, 0x10, 0x74, 0x3f, 0x0, 0x41, 0x10, 0x74, 0x10, 0x11, 0x20, 0x0, 0x20, 0x2, 0x10, 0x14, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xf0, 0x3, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0xb, 0x20, 0x2, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x4b, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xf2, 0x3, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x1, 0x10, 0xf, 0x20, 0x1, 0x28, 0x2, 0x0, 0x21, 0x3, 0x20, 0x2, 0x41, 0x4, 0x6a, 0x41, 0xf, 0x71, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0xb, 0x41, 0xe5, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x3, 0x41, 0x7c, 0x71, 0x20, 0x2, 0x6b, 0x22, 0x4, 0x41, 0x10, 0x4f, 0x4, 0x40, 0x20, 0x1, 0x20, 0x2, 0x20, 0x3, 0x41, 0x2, 0x71, 0x72, 0x10, 0xe, 0x20, 0x2, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x6a, 0x22, 0x2, 0x20, 0x4, 0x41, 0x4, 0x6b, 0x41, 0x1, 0x72, 0x10, 0xe, 0x20, 0x0, 0x20, 0x2, 0x10, 0x10, 0x5, 0x20, 0x1, 0x20, 0x3, 0x41, 0x7e, 0x71, 0x10, 0xe, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x22, 0x0, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x20, 0x0, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x28, 0x2, 0x0, 0x41, 0x7d, 0x71, 0x10, 0xe, 0xb, 0x20, 0x1, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0xc, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x10, 0xb, 0x25, 0x1, 0x1, 0x7f, 0x3, 0x40, 0x20, 0x1, 0x4, 0x40, 0x20, 0x0, 0x22, 0x2, 0x41, 0x1, 0x6a, 0x21, 0x0, 0x20, 0x2, 0x41, 0x0, 0x3a, 0x0, 0x0, 0x20, 0x1, 0x41, 0x1, 0x6b, 0x21, 0x1, 0xc, 0x1, 0xb, 0xb, 0xb, 0xac, 0x1, 0x1, 0x1, 0x7f, 0x20, 0x0, 0x41, 0xec, 0xff, 0xff, 0xff, 0x3, 0x4f, 0x4, 0x40, 0x41, 0x90, 0x9, 0x41, 0xd0, 0x9, 0x41, 0x84, 0x2, 0x41, 0x1f, 0x10, 0x0, 0x0, 0xb, 0x23, 0x2, 0x23, 0x3, 0x4f, 0x4, 0x40, 0x2, 0x40, 0x41, 0x80, 0x10, 0x21, 0x2, 0x3, 0x40, 0x20, 0x2, 0x10, 0x13, 0x6b, 0x21, 0x2, 0x23, 0x4, 0x45, 0x4, 0x40, 0x23, 0x2, 0xad, 0x42, 0xc8, 0x1, 0x7e, 0x42, 0xe4, 0x0, 0x80, 0xa7, 0x41, 0x80, 0x8, 0x6a, 0x24, 0x3, 0xc, 0x2, 0xb, 0x20, 0x2, 0x41, 0x0, 0x4a, 0xd, 0x0, 0xb, 0x23, 0x2, 0x23, 0x2, 0x23, 0x3, 0x6b, 0x41, 0x80, 0x8, 0x49, 0x41, 0xa, 0x74, 0x6a, 0x24, 0x3, 0xb, 0xb, 0x2, 0x7f, 0x20, 0x0, 0x41, 0x10, 0x6a, 0x21, 0x2, 0x23, 0xb, 0x45, 0x4, 0x40, 0x10, 0x12, 0xb, 0x23, 0xb, 0x20, 0x2, 0x10, 0x15, 0x22, 0x2, 0xb, 0x20, 0x1, 0x10, 0x16, 0x20, 0x2, 0x20, 0x0, 0x10, 0x17, 0x20, 0x2, 0x23, 0xa, 0x23, 0x9, 0x10, 0xa, 0x23, 0x2, 0x20, 0x2, 0x10, 0xd, 0x6a, 0x24, 0x2, 0x20, 0x2, 0x41, 0x14, 0x6a, 0x22, 0x1, 0x20, 0x0, 0x10, 0x18, 0x20, 0x1, 0xb, 0x54, 0x0, 0x20, 0x1, 0x45, 0x4, 0x40, 0xf, 0xb, 0x20, 0x0, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xd0, 0x9, 0x41, 0xa6, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x41, 0x14, 0x6b, 0x22, 0x1, 0x10, 0x5, 0x23, 0x9, 0x46, 0x4, 0x40, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x10, 0x5, 0x22, 0x0, 0x23, 0x9, 0x45, 0x46, 0x4, 0x40, 0x20, 0x1, 0x10, 0xb, 0x5, 0x23, 0x4, 0x41, 0x1, 0x46, 0x41, 0x0, 0x20, 0x0, 0x41, 0x3, 0x46, 0x1b, 0x4, 0x40, 0x20, 0x1, 0x10, 0xb, 0xb, 0xb, 0xb, 0xb, 0xf, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x1, 0x10, 0x1a, 0xb, 0x6, 0x0, 0x20, 0x0, 0x10, 0x28, 0xb, 0x2d, 0x0, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x8, 0x41, 0x3, 0x76, 0x4f, 0x4, 0x40, 0x41, 0xd0, 0xa, 0x41, 0xa0, 0xc, 0x41, 0xde, 0xa, 0x41, 0xc0, 0x0, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x28, 0x2, 0x4, 0x20, 0x1, 0x41, 0x3, 0x74, 0x6a, 0x2b, 0x3, 0x0, 0xb, 0x84, 0x1, 0x2, 0x5, 0x7f, 0x3, 0x7c, 0x20, 0x2, 0x28, 0x2, 0x8, 0x41, 0x4, 0x76, 0x22, 0x6, 0x41, 0x1, 0x6b, 0x21, 0x3, 0x3, 0x40, 0x20, 0x4, 0x20, 0x6, 0x48, 0x4, 0x40, 0x20, 0x2, 0x20, 0x4, 0x41, 0x1, 0x74, 0x22, 0x7, 0x10, 0x1d, 0x21, 0x9, 0x20, 0x2, 0x20, 0x7, 0x41, 0x1, 0x6a, 0x10, 0x1d, 0x21, 0x8, 0x20, 0x5, 0x45, 0x20, 0x5, 0x20, 0x0, 0x20, 0x2, 0x20, 0x3, 0x41, 0x1, 0x74, 0x22, 0x3, 0x10, 0x1d, 0x20, 0x9, 0xa1, 0x20, 0x1, 0x20, 0x8, 0xa1, 0xa2, 0x20, 0x2, 0x20, 0x3, 0x41, 0x1, 0x6a, 0x10, 0x1d, 0x22, 0xa, 0x20, 0x8, 0xa1, 0xa3, 0x20, 0x9, 0xa0, 0x63, 0x41, 0x0, 0x20, 0x1, 0x20, 0x8, 0x63, 0x20, 0x1, 0x20, 0xa, 0x63, 0x47, 0x1b, 0x1b, 0x21, 0x5, 0x20, 0x4, 0x22, 0x3, 0x41, 0x1, 0x6a, 0x21, 0x4, 0xc, 0x1, 0xb, 0xb, 0x20, 0x5, 0xb, 0x2d, 0x0, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x8, 0x41, 0x2, 0x76, 0x4f, 0x4, 0x40, 0x41, 0xd0, 0xa, 0x41, 0xa0, 0xc, 0x41, 0xbb, 0x5, 0x41, 0xc0, 0x0, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x28, 0x2, 0x4, 0x20, 0x1, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x0, 0xb, 0xa0, 0x1, 0x1, 0x4, 0x7f, 0x20, 0x1, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x2, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x41, 0x10, 0x6b, 0x4d, 0x4, 0x40, 0x20, 0x2, 0x20, 0x1, 0x10, 0x17, 0x20, 0x0, 0xf, 0xb, 0x20, 0x1, 0x20, 0x2, 0x28, 0x2, 0xc, 0x10, 0x19, 0x22, 0x5, 0x21, 0x3, 0x20, 0x1, 0x20, 0x2, 0x28, 0x2, 0x10, 0x22, 0x2, 0x20, 0x1, 0x20, 0x2, 0x49, 0x1b, 0x21, 0x4, 0x20, 0x0, 0x20, 0x3, 0x47, 0x4, 0x40, 0x20, 0x0, 0x20, 0x3, 0x4b, 0x4, 0x40, 0x3, 0x40, 0x20, 0x4, 0x4, 0x40, 0x20, 0x3, 0x22, 0x1, 0x41, 0x1, 0x6a, 0x21, 0x3, 0x20, 0x0, 0x22, 0x2, 0x41, 0x1, 0x6a, 0x21, 0x0, 0x20, 0x1, 0x20, 0x2, 0x2d, 0x0, 0x0, 0x3a, 0x0, 0x0, 0x20, 0x4, 0x41, 0x1, 0x6b, 0x21, 0x4, 0xc, 0x1, 0xb, 0xb, 0x5, 0x3, 0x40, 0x20, 0x4, 0x4, 0x40, 0x20, 0x3, 0x20, 0x4, 0x41, 0x1, 0x6b, 0x22, 0x4, 0x6a, 0x20, 0x0, 0x20, 0x4, 0x6a, 0x2d, 0x0, 0x0, 0x3a, 0x0, 0x0, 0xc, 0x1, 0xb, 0xb, 0xb, 0xb, 0x20, 0x5, 0xb, 0x34, 0x1, 0x1, 0x7f, 0x20, 0x0, 0x4, 0x40, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x1, 0x10, 0x5, 0x41, 0x3, 0x46, 0x4, 0x40, 0x41, 0x90, 0xd, 0x41, 0xd0, 0x9, 0x41, 0xd1, 0x2, 0x41, 0x7, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x10, 0x9, 0x20, 0x1, 0x23, 0x6, 0x41, 0x3, 0x10, 0xa, 0xb, 0x20, 0x0, 0xb, 0x3f, 0x0, 0x20, 0x0, 0x45, 0x4, 0x40, 0xf, 0xb, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x0, 0x10, 0x5, 0x41, 0x3, 0x47, 0x4, 0x40, 0x41, 0xd0, 0xd, 0x41, 0xd0, 0x9, 0x41, 0xdf, 0x2, 0x41, 0x5, 0x10, 0x0, 0x0, 0xb, 0x23, 0x4, 0x41, 0x1, 0x46, 0x4, 0x40, 0x20, 0x0, 0x10, 0xb, 0x5, 0x20, 0x0, 0x10, 0x9, 0x20, 0x0, 0x23, 0xa, 0x23, 0x9, 0x10, 0xa, 0xb, 0xb, 0x39, 0x0, 0x23, 0x4, 0x41, 0x0, 0x4a, 0x4, 0x40, 0x3, 0x40, 0x23, 0x4, 0x4, 0x40, 0x10, 0x13, 0x1a, 0xc, 0x1, 0xb, 0xb, 0xb, 0x10, 0x13, 0x1a, 0x3, 0x40, 0x23, 0x4, 0x4, 0x40, 0x10, 0x13, 0x1a, 0xc, 0x1, 0xb, 0xb, 0x23, 0x2, 0xad, 0x42, 0xc8, 0x1, 0x7e, 0x42, 0xe4, 0x0, 0x80, 0xa7, 0x41, 0x80, 0x8, 0x6a, 0x24, 0x3, 0xb, 0x10, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x22, 0x0, 0x4, 0x40, 0x20, 0x0, 0x10, 0xc, 0xb, 0xb, 0x39, 0x0, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x0, 0x41, 0x8, 0x6b, 0x28, 0x2, 0x0, 0xe, 0x6, 0x0, 0x1, 0x2, 0x5, 0x5, 0x3, 0x4, 0xb, 0xf, 0xb, 0xf, 0xb, 0x20, 0x0, 0x10, 0x24, 0xf, 0xb, 0x20, 0x0, 0x28, 0x2, 0x0, 0x10, 0xc, 0xf, 0xb, 0x0, 0xb, 0x20, 0x0, 0x10, 0x24, 0xb, 0x26, 0x0, 0x3f, 0x0, 0x41, 0x10, 0x74, 0x41, 0xb4, 0x8e, 0x1, 0x6b, 0x41, 0x1, 0x76, 0x24, 0x3, 0x41, 0x80, 0xa, 0x10, 0x3, 0x24, 0x6, 0x41, 0xa0, 0xa, 0x10, 0x3, 0x24, 0x8, 0x41, 0xb0, 0xb, 0x10, 0x3, 0x24, 0xa, 0xb, 0x1a, 0x0, 0x23, 0xd, 0x41, 0xb4, 0xe, 0x48, 0x4, 0x40, 0x41, 0xd0, 0x8e, 0x1, 0x41, 0x80, 0x8f, 0x1, 0x41, 0x1, 0x41, 0x1, 0x10, 0x0, 0x0, 0xb, 0xb, 0xb3, 0x1, 0x1, 0x3, 0x7f, 0x23, 0xd, 0x41, 0x4, 0x6b, 0x24, 0xd, 0x10, 0x27, 0x23, 0xd, 0x41, 0x0, 0x36, 0x2, 0x0, 0x23, 0xd, 0x41, 0xc, 0x41, 0x3, 0x10, 0x19, 0x22, 0x1, 0x36, 0x2, 0x0, 0x23, 0xd, 0x21, 0x3, 0x23, 0xd, 0x41, 0x8, 0x6b, 0x24, 0xd, 0x10, 0x27, 0x23, 0xd, 0x42, 0x0, 0x37, 0x3, 0x0, 0x20, 0x1, 0x45, 0x4, 0x40, 0x23, 0xd, 0x41, 0xc, 0x41, 0x2, 0x10, 0x19, 0x22, 0x1, 0x36, 0x2, 0x0, 0xb, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1b, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1, 0x20, 0x1, 0x41, 0x0, 0x10, 0x2, 0x20, 0x0, 0x41, 0xff, 0xff, 0xff, 0x3f, 0x4b, 0x4, 0x40, 0x41, 0xa0, 0x8, 0x41, 0xd0, 0x8, 0x41, 0x12, 0x41, 0x39, 0x10, 0x0, 0x0, 0xb, 0x23, 0xd, 0x20, 0x0, 0x41, 0x3, 0x74, 0x22, 0x0, 0x41, 0x0, 0x10, 0x19, 0x22, 0x2, 0x36, 0x2, 0x4, 0x20, 0x2, 0x20, 0x0, 0x10, 0x18, 0x20, 0x1, 0x20, 0x2, 0x10, 0x1b, 0x20, 0x1, 0x20, 0x2, 0x10, 0x1, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2, 0x23, 0xd, 0x41, 0x8, 0x6a, 0x24, 0xd, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0x0, 0x23, 0xd, 0x41, 0x4, 0x6a, 0x24, 0xd, 0x20, 0x1, 0xb, 0xe7, 0x3, 0x2, 0x9, 0x7f, 0x1, 0x7c, 0x23, 0xd, 0x41, 0x8, 0x6b, 0x24, 0xd, 0x10, 0x27, 0x23, 0xd, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0xd, 0x21, 0x6, 0x23, 0xd, 0x41, 0x8, 0x6b, 0x24, 0xd, 0x10, 0x27, 0x23, 0xd, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0xd, 0x41, 0x10, 0x41, 0x5, 0x10, 0x19, 0x22, 0x5, 0x36, 0x2, 0x0, 0x20, 0x5, 0x41, 0x0, 0x10, 0x1b, 0x20, 0x5, 0x41, 0x0, 0x10, 0x1, 0x20, 0x5, 0x41, 0x0, 0x10, 0x2, 0x20, 0x5, 0x41, 0x0, 0x10, 0x16, 0x23, 0xd, 0x41, 0x20, 0x41, 0x0, 0x10, 0x19, 0x22, 0x4, 0x36, 0x2, 0x4, 0x20, 0x4, 0x41, 0x20, 0x10, 0x18, 0x20, 0x5, 0x20, 0x4, 0x10, 0x1b, 0x20, 0x5, 0x20, 0x4, 0x10, 0x1, 0x20, 0x5, 0x41, 0x20, 0x10, 0x2, 0x20, 0x5, 0x41, 0x0, 0x10, 0x16, 0x23, 0xd, 0x41, 0x8, 0x6a, 0x24, 0xd, 0x20, 0x6, 0x20, 0x5, 0x36, 0x2, 0x0, 0x20, 0x3, 0x28, 0x2, 0x8, 0x41, 0x3, 0x76, 0x21, 0xa, 0x3, 0x40, 0x20, 0x8, 0x20, 0xa, 0x48, 0x4, 0x40, 0x20, 0x3, 0x20, 0x8, 0x41, 0x1, 0x74, 0x22, 0x4, 0x10, 0x1f, 0x21, 0x6, 0x20, 0x3, 0x20, 0x4, 0x41, 0x1, 0x6a, 0x10, 0x1f, 0x21, 0x9, 0x23, 0xd, 0x20, 0x9, 0x20, 0x6, 0x6b, 0x10, 0x28, 0x22, 0x7, 0x36, 0x2, 0x4, 0x41, 0x0, 0x21, 0x4, 0x3, 0x40, 0x20, 0x6, 0x20, 0x9, 0x48, 0x4, 0x40, 0x20, 0x2, 0x20, 0x6, 0x10, 0x1d, 0x21, 0xd, 0x20, 0x4, 0x20, 0x7, 0x28, 0x2, 0x8, 0x41, 0x3, 0x76, 0x4f, 0x4, 0x40, 0x41, 0xd0, 0xa, 0x41, 0xa0, 0xc, 0x41, 0xe9, 0xa, 0x41, 0xc0, 0x0, 0x10, 0x0, 0x0, 0xb, 0x20, 0x7, 0x28, 0x2, 0x4, 0x20, 0x4, 0x41, 0x3, 0x74, 0x6a, 0x20, 0xd, 0x39, 0x3, 0x0, 0x20, 0x4, 0x41, 0x1, 0x6a, 0x21, 0x4, 0x20, 0x6, 0x41, 0x1, 0x6a, 0x21, 0x6, 0xc, 0x1, 0xb, 0xb, 0x20, 0x0, 0x20, 0x1, 0x20, 0x7, 0x10, 0x1e, 0x4, 0x40, 0x20, 0x5, 0x28, 0x2, 0xc, 0x22, 0x9, 0x41, 0x1, 0x6a, 0x22, 0xb, 0x22, 0x4, 0x20, 0x5, 0x28, 0x2, 0x8, 0x22, 0x6, 0x41, 0x2, 0x76, 0x4b, 0x4, 0x40, 0x20, 0x4, 0x41, 0xff, 0xff, 0xff, 0xff, 0x0, 0x4b, 0x4, 0x40, 0x41, 0xa0, 0x8, 0x41, 0xe0, 0xc, 0x41, 0x11, 0x41, 0x30, 0x10, 0x0, 0x0, 0xb, 0x20, 0x6, 0x20, 0x5, 0x28, 0x2, 0x0, 0x22, 0xc, 0x20, 0x6, 0x41, 0x1, 0x74, 0x22, 0x7, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x20, 0x7, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x49, 0x1b, 0x22, 0x7, 0x20, 0x4, 0x41, 0x8, 0x20, 0x4, 0x41, 0x8, 0x4b, 0x1b, 0x41, 0x2, 0x74, 0x22, 0x4, 0x20, 0x4, 0x20, 0x7, 0x49, 0x1b, 0x22, 0x7, 0x10, 0x20, 0x22, 0x4, 0x6a, 0x20, 0x7, 0x20, 0x6, 0x6b, 0x10, 0x18, 0x20, 0x4, 0x20, 0xc, 0x47, 0x4, 0x40, 0x20, 0x5, 0x20, 0x4, 0x36, 0x2, 0x0, 0x20, 0x5, 0x20, 0x4, 0x36, 0x2, 0x4, 0x20, 0x5, 0x20, 0x4, 0x10, 0x1a, 0xb, 0x20, 0x5, 0x20, 0x7, 0x36, 0x2, 0x8, 0xb, 0x20, 0x5, 0x28, 0x2, 0x4, 0x20, 0x9, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x8, 0x36, 0x2, 0x0, 0x20, 0x5, 0x20, 0xb, 0x10, 0x16, 0xb, 0x20, 0x8, 0x41, 0x1, 0x6a, 0x21, 0x8, 0xc, 0x1, 0xb, 0xb, 0x23, 0xd, 0x41, 0x8, 0x6a, 0x24, 0xd, 0x20, 0x5, 0xb, 0x25, 0x0, 0x23, 0xd, 0x41, 0x4, 0x6b, 0x24, 0xd, 0x10, 0x27, 0x23, 0xd, 0x20, 0x2, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x2, 0x10, 0x1e, 0x21, 0x2, 0x23, 0xd, 0x41, 0x4, 0x6a, 0x24, 0xd, 0x20, 0x2, 0xb, 0x2e, 0x0, 0x23, 0xd, 0x41, 0x8, 0x6b, 0x24, 0xd, 0x10, 0x27, 0x23, 0xd, 0x20, 0x2, 0x36, 0x2, 0x0, 0x23, 0xd, 0x20, 0x3, 0x36, 0x2, 0x4, 0x20, 0x0, 0x20, 0x1, 0x20, 0x2, 0x20, 0x3, 0x10, 0x29, 0x21, 0x2, 0x23, 0xd, 0x41, 0x8, 0x6a, 0x24, 0xd, 0x20, 0x2, 0xb, 0xb, 0xf8, 0x4, 0x18, 0x0, 0x41, 0x8c, 0x8, 0xb, 0x1, 0x2c, 0x0, 0x41, 0x98, 0x8, 0xb, 0x23, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x49, 0x0, 0x6e, 0x0, 0x76, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x64, 0x0, 0x20, 0x0, 0x6c, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x67, 0x0, 0x74, 0x0, 0x68, 0x0, 0x41, 0xbc, 0x8, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xc8, 0x8, 0xb, 0x2d, 0x1, 0x0, 0x0, 0x0, 0x26, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x61, 0x0, 0x72, 0x0, 0x72, 0x0, 0x61, 0x0, 0x79, 0x0, 0x62, 0x0, 0x75, 0x0, 0x66, 0x0, 0x66, 0x0, 0x65, 0x0, 0x72, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xfc, 0x8, 0xb, 0x1, 0x3c, 0x0, 0x41, 0x88, 0x9, 0xb, 0x2f, 0x1, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x41, 0x0, 0x6c, 0x0, 0x6c, 0x0, 0x6f, 0x0, 0x63, 0x0, 0x61, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x20, 0x0, 0x74, 0x0, 0x6f, 0x0, 0x6f, 0x0, 0x20, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x72, 0x0, 0x67, 0x0, 0x65, 0x0, 0x41, 0xbc, 0x9, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xc8, 0x9, 0xb, 0x27, 0x1, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x72, 0x0, 0x74, 0x0, 0x2f, 0x0, 0x69, 0x0, 0x74, 0x0, 0x63, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xbc, 0xa, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xc8, 0xa, 0xb, 0x2b, 0x1, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x0, 0x49, 0x0, 0x6e, 0x0, 0x64, 0x0, 0x65, 0x0, 0x78, 0x0, 0x20, 0x0, 0x6f, 0x0, 0x75, 0x0, 0x74, 0x0, 0x20, 0x0, 0x6f, 0x0, 0x66, 0x0, 0x20, 0x0, 0x72, 0x0, 0x61, 0x0, 0x6e, 0x0, 0x67, 0x0, 0x65, 0x0, 0x41, 0xfc, 0xa, 0xb, 0x1, 0x2c, 0x0, 0x41, 0x88, 0xb, 0xb, 0x1b, 0x1, 0x0, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x72, 0x0, 0x74, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xcc, 0xb, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xd8, 0xb, 0xb, 0x25, 0x1, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x72, 0x0, 0x74, 0x0, 0x2f, 0x0, 0x74, 0x0, 0x6c, 0x0, 0x73, 0x0, 0x66, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0x8c, 0xc, 0xb, 0x1, 0x3c, 0x0, 0x41, 0x98, 0xc, 0xb, 0x2b, 0x1, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x74, 0x0, 0x79, 0x0, 0x70, 0x0, 0x65, 0x0, 0x64, 0x0, 0x61, 0x0, 0x72, 0x0, 0x72, 0x0, 0x61, 0x0, 0x79, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xcc, 0xc, 0xb, 0x1, 0x2c, 0x0, 0x41, 0xd8, 0xc, 0xb, 0x21, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x61, 0x0, 0x72, 0x0, 0x72, 0x0, 0x61, 0x0, 0x79, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xfc, 0xc, 0xb, 0x1, 0x3c, 0x0, 0x41, 0x88, 0xd, 0xb, 0x31, 0x1, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x62, 0x0, 0x6a, 0x0, 0x65, 0x0, 0x63, 0x0, 0x74, 0x0, 0x20, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x72, 0x0, 0x65, 0x0, 0x61, 0x0, 0x64, 0x0, 0x79, 0x0, 0x20, 0x0, 0x70, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x6e, 0x0, 0x65, 0x0, 0x64, 0x0, 0x41, 0xbc, 0xd, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xc8, 0xd, 0xb, 0x2f, 0x1, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x62, 0x0, 0x6a, 0x0, 0x65, 0x0, 0x63, 0x0, 0x74, 0x0, 0x20, 0x0, 0x69, 0x0, 0x73, 0x0, 0x20, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x74, 0x0, 0x20, 0x0, 0x70, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x6e, 0x0, 0x65, 0x0, 0x64, 0x0, 0x41, 0x80, 0xe, 0xb, 0xd, 0x6, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x41, 0x9c, 0xe, 0xb, 0x12, 0x1, 0x1a, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x1, 0x9, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2, 0x9]);

        var _0x15c9e3 = _0x432944(0x161cd);

        const _0x59efab = {
          'currentPolygons': new Set(),
          'newPolygons': new Set(),
          'prevPolygons': new Set(),
          'lastUpdateStream': Date.now(),
          'activeStremer': true,
          'currentFrame': 0x0,
          'queueEnter': new Set(),
          'wasmReady': false
        },
              _0x1fc2b0 = _0x15c9e3.players.local,
              _0x56a4ef = [..._0x5e12b8.p.map(_0x18486b => ({ ..._0x18486b,
          'isGreenZone': true
        })), ..._0x263bfa.S],
              _0x213e41 = _0x18e8cc.api.chunkArray(_0x56a4ef, 0x64),
              _0x2b8fd4 = [];

        let _0xd7a3e,
            _0x33afef = 0x0,
            _0x569b9a = null,
            _0x17db6d = null,
            _0x1c54e3 = null,
            _0x1739a4 = null,
            _0x47aeb3 = null,
            _0x4d102d = null,
            _0x25235e = null;

        _0x15c9e3.events.add('auth.client.onPlayerAuthAccount', () => {
          const {
            exports: _0x524627
          } = _0x26af5c.ZP.instantiateSync(_0x5e0c36, {});

          _0x569b9a = _0x524627.__getArray, _0x17db6d = _0x524627.__pin, _0x1c54e3 = _0x524627.__unpin, _0x1739a4 = _0x524627.__newArray, _0x47aeb3 = _0x524627.check, _0x4d102d = _0x524627.Float64Array_ID, _0x25235e = _0x524627.Int32Array_ID;

          for (const _0x33ecb7 of _0x213e41) {
            const _0xcb65b8 = [],
                  _0x21d46b = [];

            for (const _0x78cd11 of _0x33ecb7) {
              const _0x2e12fc = _0xcb65b8.length;

              for (const _0x318355 of _0x78cd11.positions) _0xcb65b8.push(_0x318355.x, _0x318355.y);

              const _0x4e26c8 = _0xcb65b8.length;

              _0x21d46b.push(_0x2e12fc, _0x4e26c8);
            }

            let _0x9bcaf1 = _0x17db6d(_0x1739a4(_0x4d102d, _0xcb65b8)),
                _0x2f2e6a = _0x17db6d(_0x1739a4(_0x25235e, _0x21d46b));

            _0x2b8fd4.push({
              'flatten': _0xcb65b8,
              'flattenPtr': _0x9bcaf1,
              'offset': _0x21d46b,
              'offsetPtr': _0x2f2e6a,
              'lengthOffset': _0x33afef
            }), _0x33afef += _0x33ecb7.length;
          }

          _0x59efab.wasmReady = true;
        }), _0x15c9e3.events.add('render', () => {
          if (!_0x59efab.wasmReady) return;
          Date.now();

          if (_0x59efab.activeStremer) {
            const _0x16bbfc = _0x2b8fd4[_0x59efab.currentFrame++];

            if (_0x16bbfc) {
              const _0xdd79f5 = _0x1fc2b0.position,
                    {
                flattenPtr: _0x50c5f4,
                offsetPtr: _0x5c36ff,
                lengthOffset: _0x47caf5
              } = _0x16bbfc,
                    _0x4f74d7 = _0x17db6d(_0x47aeb3(_0xdd79f5.x, _0xdd79f5.y, _0x50c5f4, _0x5c36ff)),
                    _0x1cc0b2 = _0x569b9a(_0x4f74d7);

              _0x1c54e3(_0x4f74d7);

              for (let _0x6a12f3 = 0x0; _0x6a12f3 < _0x1cc0b2.length; _0x6a12f3++) {
                const _0x35db7a = _0x1cc0b2[_0x6a12f3] + _0x47caf5,
                      _0x304720 = _0x56a4ef[_0x35db7a];

                _0x304720 && null != _0x304720 && ('number' == typeof _0x304720.minZ && _0xdd79f5.z < _0x304720.minZ || 'number' == typeof _0x304720.maxZ && _0xdd79f5.z > _0x304720.maxZ || (_0x59efab.prevPolygons.has(_0x35db7a) || _0x59efab.queueEnter.add(_0x35db7a), _0x59efab.newPolygons.add(_0x35db7a)));
              }
            } else {
              _0x59efab.currentPolygons = new Set(_0x59efab.newPolygons);

              for (const _0x235a8d of _0x59efab.prevPolygons) _0x59efab.currentPolygons.has(_0x235a8d) || _0x15c9e3.events.call('playerPolygonExit', _0x235a8d, _0x56a4ef[_0x235a8d]);

              for (const _0x130522 of _0x59efab.queueEnter) _0x15c9e3.events.call('playerPolygonEnter', _0x130522, _0x56a4ef[_0x130522]);

              _0x59efab.queueEnter.clear(), _0x59efab.currentFrame = 0x0, _0x59efab.prevPolygons = new Set(_0x59efab.currentPolygons), _0x59efab.newPolygons.clear();
            }
          }

          if (_0xd7a3e) for (const _0xb86b79 in _0x56a4ef) {
            const _0x3b4b9b = _0x56a4ef[_0xb86b79];

            for (let _0x256ba7 in _0x3b4b9b.positions) if (_0x256ba7 != parseInt(_0x3b4b9b.positions.length, 0xa) - 0x1) {
              _0x256ba7 = parseInt(_0x256ba7, 0xa);

              const _0x590754 = _0x3b4b9b.positions[_0x256ba7],
                    _0x15e9a4 = _0x3b4b9b.positions[_0x256ba7 + 0x1],
                    _0x3e5e47 = new _0x15c9e3.Vector3(_0x590754.x, _0x590754.y, parseFloat(_0x3b4b9b.maxZ)),
                    _0x56a6e9 = new _0x15c9e3.Vector3(_0x15e9a4.x, _0x15e9a4.y, parseFloat(_0x3b4b9b.maxZ));

              let _0x226228 = [0xc4, 0x33, 0x33, 0xff];
              _0x3b4b9b.isGreenZone && (_0x226228 = [0x33, 0xc4, 0x4b, 0xff]), _0x15c9e3.game.graphics.drawLine(_0x590754.x, _0x590754.y, _0x3b4b9b.minZ, _0x15e9a4.x, _0x15e9a4.y, _0x3b4b9b.minZ, _0x226228[0x0], _0x226228[0x1], _0x226228[0x2], _0x226228[0x3]), _0x15c9e3.game.graphics.drawLine(_0x590754.x, _0x590754.y, _0x3b4b9b.minZ, _0x3e5e47.x, _0x3e5e47.y, _0x3e5e47.z, _0x226228[0x0], _0x226228[0x1], _0x226228[0x2], _0x226228[0x3]), _0x15c9e3.game.graphics.drawLine(_0x15e9a4.x, _0x15e9a4.y, _0x3b4b9b.minZ, _0x56a6e9.x, _0x56a6e9.y, _0x56a6e9.z, _0x226228[0x0], _0x226228[0x1], _0x226228[0x2], _0x226228[0x3]), _0x15c9e3.game.graphics.drawLine(_0x3e5e47.x, _0x3e5e47.y, _0x3e5e47.z, _0x56a6e9.x, _0x56a6e9.y, _0x56a6e9.z, _0x226228[0x0], _0x226228[0x1], _0x226228[0x2], _0x226228[0x3]);
            } else {
              const _0x3dbeee = _0x3b4b9b.positions[_0x256ba7],
                    _0x57b54f = _0x3b4b9b.positions[0x0],
                    _0x588d93 = new _0x15c9e3.Vector3(_0x3dbeee.x, _0x3dbeee.y, parseFloat(_0x3b4b9b.maxZ)),
                    _0x248c3c = new _0x15c9e3.Vector3(_0x57b54f.x, _0x57b54f.y, parseFloat(_0x3b4b9b.maxZ));

              let _0x58afa6 = [0xc4, 0x33, 0x33, 0xff];
              _0x3b4b9b.isGreenZone && (_0x58afa6 = [0x33, 0xc4, 0x4b, 0xff]), _0x15c9e3.game.graphics.drawLine(_0x3dbeee.x, _0x3dbeee.y, _0x3b4b9b.minZ, _0x57b54f.x, _0x57b54f.y, _0x3b4b9b.minZ, _0x58afa6[0x0], _0x58afa6[0x1], _0x58afa6[0x2], _0x58afa6[0x3]), _0x15c9e3.game.graphics.drawLine(_0x3dbeee.x, _0x3dbeee.y, _0x3b4b9b.minZ, _0x588d93.x, _0x588d93.y, _0x588d93.z, _0x58afa6[0x0], _0x58afa6[0x1], _0x58afa6[0x2], _0x58afa6[0x3]), _0x15c9e3.game.graphics.drawLine(_0x57b54f.x, _0x57b54f.y, _0x3b4b9b.minZ, _0x248c3c.x, _0x248c3c.y, _0x248c3c.z, _0x58afa6[0x0], _0x58afa6[0x1], _0x58afa6[0x2], _0x58afa6[0x3]), _0x15c9e3.game.graphics.drawLine(_0x588d93.x, _0x588d93.y, _0x588d93.z, _0x248c3c.x, _0x248c3c.y, _0x248c3c.z, _0x58afa6[0x0], _0x58afa6[0x1], _0x58afa6[0x2], _0x58afa6[0x3]);
            }
          }
        }), _0x15c9e3.events.add('playerCommand', async _0x54f825 => {
          const _0x332241 = _0x54f825.split(/[ ]+/),
                _0x26f274 = _0x332241[0x0];

          if (_0x332241.shift(), 'zzdebug' === _0x26f274) {
            if (!_0x18e8cc.api.getAdmin(_0x15c9e3.players.local) || _0x18e8cc.api.getAdmin(_0x15c9e3.players.local) < 0x3) return;
            _0xd7a3e = !_0xd7a3e;
          }
        });
      },
      0x43dc: (_0x7a32e8, _0x55f2df, _0x69c39d) => {
        'use strict';

        const a0_0x4776eb = {
          _0x450ba3: 0x4e3
        };

        _0x69c39d.r(_0x55f2df);

        var _0x59e786 = _0x69c39d(0xd194),
            _0x5ca7f3 = _0x69c39d(0x161cd);

        let _0x106dbf = null,
            _0x63763e = 0x0,
            _0x61272e = 0x1388,
            _0x112118 = false;
        _0x5ca7f3.events.add('ShowWeaponPurchasedMessage', (_0x2dd478, _0x1d20bb, _0x114bf0, _0x23a980 = 0x1388) => {
          null == _0x106dbf && (_0x106dbf = new _0x59e786.Scaleform('mp_big_message_freemode')), _0x106dbf.callFunction('SHOW_WEAPON_PURCHASED', _0x2dd478, _0x1d20bb, _0x114bf0), _0x63763e = Date.now(), _0x61272e = _0x23a980, _0x112118 = false;
        }), _0x5ca7f3.events.add('ShowPlaneMessage', (_0x3b4b87, _0x4da644, _0x274b46, _0x4b00e3 = 0x1388) => {
          null == _0x106dbf && (_0x106dbf = new _0x59e786.Scaleform('mp_big_message_freemode')), _0x106dbf.callFunction('SHOW_PLANE_MESSAGE', _0x3b4b87, _0x4da644, _0x274b46), _0x63763e = Date.now(), _0x61272e = _0x4b00e3, _0x112118 = false;
        }), _0x5ca7f3.events.add('ShowShardMessage', (_0x25f240, _0x3d8934, _0x42086f, _0x5edf88, _0x3955fe = 0x1388) => {
          null == _0x106dbf && (_0x106dbf = new _0x59e786.Scaleform('mp_big_message_freemode')), _0x106dbf.callFunction('SHOW_SHARD_CENTERED_MP_MESSAGE', _0x25f240, _0x3d8934, _0x42086f, _0x5edf88), _0x63763e = Date.now(), _0x61272e = _0x3955fe, _0x112118 = false;
        }), _0x5ca7f3.events.add('render', () => {
          null != _0x106dbf && (_0x106dbf.render2D(), _0x63763e > 0x0 && Date.now() - _0x63763e > _0x61272e && (_0x112118 ? (_0x63763e = 0x0, _0x106dbf.dispose(), _0x106dbf = null) : (_0x106dbf.callFunction('TRANSITION_OUT'), _0x112118 = true, _0x61272e += 0x2ee)));
        });
      },
      0x1297e: (_0x4c220d, _0xf570b0, _0x1427dd) => {
        'use strict';

        _0x1427dd.r(_0xf570b0);

        var _0xc196dd = _0x1427dd(0xd194),
            _0x4662ab = _0x1427dd(0x161cd);

        let _0x4414bb = null,
            _0x1c61d1 = 0x0,
            _0x48d0f1 = 0x1388,
            _0x4640e1 = false,
            _0x31fff1 = 0x0;
        _0x4662ab.events.add('ShowMidsizedMessage', (_0x40c795, _0x155c02, _0x106a19 = 0x1388) => {
          null == _0x4414bb && (_0x4414bb = new _0xc196dd.Scaleform('midsized_message')), _0x4414bb.callFunction('SHOW_MIDSIZED_MESSAGE', _0x40c795, _0x155c02), _0x1c61d1 = Date.now(), _0x48d0f1 = _0x106a19, _0x4640e1 = false;
        }), _0x4662ab.events.add('ShowMidsizedShardMessage', (_0x35b491, _0x18748d, _0x290e2b, _0x8e096a, _0x2c1435, _0x4835d5 = 0x1388) => {
          null == _0x4414bb && (_0x4414bb = new _0xc196dd.Scaleform('midsized_message')), _0x4414bb.callFunction('SHOW_SHARD_MIDSIZED_MESSAGE', _0x35b491, _0x18748d, _0x290e2b, _0x8e096a, _0x2c1435), _0x1c61d1 = Date.now(), _0x48d0f1 = _0x4835d5, _0x4640e1 = false, _0x31fff1 = _0x290e2b;
        }), _0x4662ab.events.add('render', () => {
          null != _0x4414bb && (_0x4414bb.render2D(), _0x1c61d1 > 0x0 && Date.now() - _0x1c61d1 > _0x48d0f1 && (_0x4640e1 ? (_0x1c61d1 = 0x0, _0x4414bb.dispose(), _0x4414bb = null) : (_0x4414bb.callFunction('SHARD_ANIM_OUT', _0x31fff1), _0x4640e1 = true, _0x48d0f1 += 0x2ee)));
        });
      },
      0x757f: (_0x217e23, _0x128f59, _0x30cceb) => {
        var _0x2f4be3 = _0x30cceb(0x161cd);

        _0x30cceb(0x43dc), _0x30cceb(0x1297e), _0x2f4be3.game.ui.messages = {
          'showShard': (_0x54e99c, _0x265b0a, _0x4e80cf, _0x3feea6, _0x5974c9 = 0x1388) => _0x2f4be3.events.call('ShowShardMessage', _0x54e99c, _0x265b0a, _0x4e80cf, _0x3feea6, _0x5974c9),
          'showWeaponPurchased': (_0x5d0d5f, _0x2b5402, _0x2c2abb, _0x1223bd = 0x1388) => _0x2f4be3.events.call('ShowWeaponPurchasedMessage', _0x5d0d5f, _0x2b5402, _0x2c2abb, _0x1223bd),
          'showPlane': (_0x777424, _0x315828, _0x43cbdb, _0x4e380a = 0x1388) => _0x2f4be3.events.call('ShowPlaneMessage', _0x777424, _0x315828, _0x43cbdb, _0x4e380a),
          'showMidsized': (_0x376a35, _0x9de3f7, _0x108e54 = 0x1388) => _0x2f4be3.events.call('ShowMidsizedMessage', _0x376a35, _0x9de3f7, _0x108e54),
          'showMidsizedShard': (_0x50cc76, _0x40f475, _0x4280ae, _0x3c265, _0x19e76f, _0x200a8e = 0x1388) => _0x2f4be3.events.call('ShowMidsizedShardMessage', _0x50cc76, _0x40f475, _0x4280ae, _0x3c265, _0x19e76f, _0x200a8e)
        };
      },
      0xb2e6: (_0x5757ad, _0xa9cd27, _0x8c70ba) => {
        'use strict';

        _0x8c70ba.d(_0xa9cd27, {
          'P': () => _0x41c0d8
        });

        var _0x2b0c63 = _0x8c70ba(0x12a76),
            _0x1b858b = _0x8c70ba(0x161cd);

        const _0x41c0d8 = _0x1b858b.browsers.new('https://cdn2.majestic-files.com/workers/sounds/index.html');

        (0x0, _0x2b0c63.patchBrowser)(_0x41c0d8), _0x1b858b.events.add('browserDomReady', _0x453478 => {
          _0x453478 === _0x41c0d8 && (_0x41c0d8.isReady = true);
        });
      },
      0x17d19: (_0x42c786, _0x4df7e0, _0x3196d6) => {
        'use strict';

        const a0_0x1930fb = {
          _0x20fc29: 0x535,
          _0x13389b: 0xdde,
          _0x200c17: 0x1e82
        };

        _0x3196d6.d(_0x4df7e0, {
          'Z': () => _0x34400a
        });

        var _0x3a1475 = _0x3196d6(0x175a1),
            _0x5d5241 = _0x3196d6(0x16a21);

        const _0x52b571 = new Uint8Array([0x0, 0x61, 0x73, 0x6d, 0x1, 0x0, 0x0, 0x0, 0x1, 0x71, 0x11, 0x60, 0x2, 0x7f, 0x7f, 0x0, 0x60, 0x1, 0x7f, 0x1, 0x7f, 0x60, 0x2, 0x7f, 0x7d, 0x0, 0x60, 0x2, 0x7f, 0x7f, 0x1, 0x7f, 0x60, 0x1, 0x7f, 0x0, 0x60, 0x0, 0x0, 0x60, 0x3, 0x7f, 0x7f, 0x7f, 0x1, 0x7f, 0x60, 0x3, 0x7f, 0x7f, 0x7f, 0x0, 0x60, 0x0, 0x1, 0x7f, 0x60, 0x5, 0x7d, 0x7d, 0x7d, 0x7f, 0x7d, 0x1, 0x7f, 0x60, 0x4, 0x7f, 0x7f, 0x7f, 0x7f, 0x0, 0x60, 0x5, 0x7f, 0x7f, 0x7d, 0x7d, 0x7d, 0x0, 0x60, 0x6, 0x7f, 0x7f, 0x7d, 0x7d, 0x7d, 0x7d, 0x0, 0x60, 0x5, 0x7f, 0x7d, 0x7d, 0x7d, 0x7d, 0x1, 0x7f, 0x60, 0x3, 0x7d, 0x7d, 0x7f, 0x1, 0x7f, 0x60, 0x4, 0x7d, 0x7d, 0x7d, 0x7d, 0x1, 0x7d, 0x60, 0x6, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x1, 0x7d, 0x2, 0xd, 0x1, 0x3, 0x65, 0x6e, 0x76, 0x5, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x0, 0xa, 0x3, 0x49, 0x48, 0x0, 0x0, 0x1, 0x1, 0x1, 0x5, 0x0, 0x0, 0x4, 0x7, 0x4, 0x4, 0x1, 0x0, 0x0, 0x0, 0x7, 0x5, 0x8, 0x3, 0x3, 0x0, 0x0, 0x0, 0x3, 0x7, 0x0, 0x0, 0x0, 0x1, 0xf, 0x10, 0x1, 0x6, 0x3, 0x0, 0x3, 0x2, 0x2, 0x2, 0x3, 0x0, 0x0, 0x6, 0x0, 0x0, 0x2, 0x2, 0x2, 0x2, 0x2, 0x6, 0x1, 0x4, 0x5, 0x4, 0x4, 0x5, 0x5, 0xb, 0x0, 0x9, 0x9, 0xc, 0x0, 0xe, 0x1, 0x7, 0x1, 0x8, 0x3, 0xd, 0x4, 0x4, 0x1, 0x70, 0x0, 0x3, 0x5, 0x3, 0x1, 0x0, 0x1, 0x6, 0x5e, 0x12, 0x7f, 0x0, 0x41, 0x3, 0xb, 0x7f, 0x0, 0x41, 0x4, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x7f, 0xb, 0x7f, 0x1, 0x41, 0x0, 0xb, 0x7f, 0x1, 0x41, 0x7f, 0xb, 0x7f, 0x0, 0x41, 0xf0, 0xf, 0xb, 0x7f, 0x1, 0x41, 0xe4, 0x90, 0x1, 0xb, 0x7, 0xe6, 0x1, 0x12, 0xb, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x0, 0x1e, 0xf, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x41, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x49, 0x44, 0x3, 0x0, 0xd, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x49, 0x44, 0x3, 0x1, 0x7, 0x76, 0x64, 0x69, 0x73, 0x74, 0x32, 0x64, 0x0, 0x1f, 0x7, 0x76, 0x64, 0x69, 0x73, 0x74, 0x33, 0x64, 0x0, 0x20, 0xb, 0x61, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x3c, 0xd, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x3d, 0x7, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x32, 0x64, 0x0, 0x3e, 0x7, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x33, 0x64, 0x0, 0x3f, 0xc, 0x61, 0x64, 0x64, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x0, 0x40, 0xf, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x0, 0x41, 0xe, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x0, 0x42, 0x5, 0x5f, 0x5f, 0x6e, 0x65, 0x77, 0x0, 0x19, 0x5, 0x5f, 0x5f, 0x70, 0x69, 0x6e, 0x0, 0x35, 0x7, 0x5f, 0x5f, 0x75, 0x6e, 0x70, 0x69, 0x6e, 0x0, 0x36, 0x9, 0x5f, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x0, 0x37, 0xb, 0x5f, 0x5f, 0x72, 0x74, 0x74, 0x69, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x3, 0x10, 0x6, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2, 0x0, 0x8, 0x1, 0x3a, 0x9, 0x8, 0x1, 0x0, 0x41, 0x1, 0xb, 0x2, 0x2c, 0x34, 0xa, 0xc6, 0x39, 0x48, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x4, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x8, 0xb, 0x10, 0x0, 0x20, 0x0, 0x20, 0x0, 0x10, 0x1, 0x20, 0x0, 0x20, 0x0, 0x10, 0x2, 0x20, 0x0, 0xb, 0xa, 0x0, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x7c, 0x71, 0xb, 0xa, 0x0, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x3, 0x71, 0xb, 0x76, 0x1, 0x2, 0x7f, 0x23, 0xc, 0x22, 0x0, 0x4, 0x40, 0x20, 0x0, 0x10, 0xc, 0xb, 0x23, 0xe, 0x22, 0x0, 0x4, 0x40, 0x20, 0x0, 0x10, 0xc, 0xb, 0x41, 0xe0, 0x9, 0x10, 0xc, 0x41, 0xb0, 0xb, 0x10, 0xc, 0x41, 0xe0, 0xd, 0x10, 0xc, 0x41, 0xd0, 0xc, 0x10, 0xc, 0x41, 0xa0, 0x8, 0x10, 0xc, 0x41, 0x80, 0xf, 0x10, 0xc, 0x41, 0xc0, 0xf, 0x10, 0xc, 0x23, 0x6, 0x22, 0x1, 0x10, 0x4, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x20, 0x1, 0x47, 0x4, 0x40, 0x20, 0x0, 0x10, 0x5, 0x41, 0x3, 0x47, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0x8, 0x41, 0x9f, 0x1, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0x14, 0x6a, 0x10, 0x39, 0x20, 0x0, 0x10, 0x4, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0xb, 0x11, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x7c, 0x71, 0x72, 0x10, 0x1, 0xb, 0x11, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x3, 0x71, 0x72, 0x10, 0x1, 0xb, 0x53, 0x1, 0x1, 0x7f, 0x20, 0x0, 0x10, 0x4, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x20, 0x0, 0x41, 0xe4, 0x90, 0x1, 0x49, 0x20, 0x0, 0x28, 0x2, 0x8, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0x8, 0x41, 0xff, 0x0, 0x41, 0x12, 0x10, 0x0, 0x0, 0xb, 0xf, 0xb, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x0, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0x8, 0x41, 0x83, 0x1, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2, 0x20, 0x0, 0x20, 0x1, 0x10, 0x8, 0xb, 0x26, 0x1, 0x1, 0x7f, 0x20, 0x1, 0x28, 0x2, 0x8, 0x21, 0x3, 0x20, 0x0, 0x20, 0x1, 0x20, 0x2, 0x72, 0x10, 0x1, 0x20, 0x0, 0x20, 0x3, 0x10, 0x2, 0x20, 0x3, 0x20, 0x0, 0x10, 0x8, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2, 0xb, 0x7d, 0x1, 0x2, 0x7f, 0x20, 0x0, 0x23, 0x7, 0x46, 0x4, 0x40, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0x8, 0x41, 0x93, 0x1, 0x41, 0x1e, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x24, 0x7, 0xb, 0x20, 0x0, 0x10, 0x9, 0x23, 0x8, 0x21, 0x2, 0x20, 0x0, 0x22, 0x1, 0x28, 0x2, 0xc, 0x22, 0x0, 0x41, 0x1, 0x4d, 0x4, 0x7f, 0x41, 0x1, 0x5, 0x20, 0x0, 0x41, 0xf0, 0xf, 0x28, 0x2, 0x0, 0x4b, 0x4, 0x40, 0x41, 0xe0, 0x9, 0x41, 0xa0, 0xa, 0x41, 0x16, 0x41, 0x1c, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0x3, 0x74, 0x41, 0xf4, 0xf, 0x6a, 0x28, 0x2, 0x0, 0x41, 0x20, 0x71, 0xb, 0x4, 0x7f, 0x23, 0x9, 0x45, 0x5, 0x41, 0x2, 0xb, 0x21, 0x0, 0x20, 0x1, 0x20, 0x2, 0x20, 0x0, 0x10, 0xa, 0xb, 0x23, 0x0, 0x20, 0x0, 0x45, 0x4, 0x40, 0xf, 0xb, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x0, 0x10, 0x5, 0x23, 0x9, 0x46, 0x4, 0x40, 0x20, 0x0, 0x10, 0xb, 0x23, 0x5, 0x41, 0x1, 0x6a, 0x24, 0x5, 0xb, 0xb, 0xd, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x41, 0x4, 0x6a, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x0, 0xb, 0x99, 0x2, 0x1, 0x4, 0x7f, 0x20, 0x1, 0x28, 0x2, 0x0, 0x22, 0x2, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0x8c, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x2, 0x41, 0x7c, 0x71, 0x22, 0x2, 0x41, 0xc, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0x8e, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x2, 0x41, 0x80, 0x2, 0x49, 0x4, 0x40, 0x20, 0x2, 0x41, 0x4, 0x76, 0x21, 0x2, 0x5, 0x41, 0x1f, 0x20, 0x2, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x20, 0x2, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x49, 0x1b, 0x22, 0x2, 0x67, 0x6b, 0x21, 0x3, 0x20, 0x2, 0x20, 0x3, 0x41, 0x4, 0x6b, 0x76, 0x41, 0x10, 0x73, 0x21, 0x2, 0x20, 0x3, 0x41, 0x7, 0x6b, 0x21, 0x3, 0xb, 0x20, 0x2, 0x41, 0x10, 0x49, 0x41, 0x0, 0x20, 0x3, 0x41, 0x17, 0x49, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0x9c, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x28, 0x2, 0x8, 0x21, 0x4, 0x20, 0x1, 0x28, 0x2, 0x4, 0x22, 0x5, 0x4, 0x40, 0x20, 0x5, 0x20, 0x4, 0x10, 0x2, 0xb, 0x20, 0x4, 0x4, 0x40, 0x20, 0x4, 0x20, 0x5, 0x10, 0x1, 0xb, 0x20, 0x1, 0x20, 0x0, 0x20, 0x2, 0x20, 0x3, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x46, 0x4, 0x40, 0x20, 0x0, 0x20, 0x2, 0x20, 0x3, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x4, 0x36, 0x2, 0x60, 0x20, 0x4, 0x45, 0x4, 0x40, 0x20, 0x0, 0x20, 0x3, 0x41, 0x2, 0x74, 0x6a, 0x22, 0x4, 0x28, 0x2, 0x4, 0x41, 0x7e, 0x20, 0x2, 0x77, 0x71, 0x21, 0x1, 0x20, 0x4, 0x20, 0x1, 0x36, 0x2, 0x4, 0x20, 0x1, 0x45, 0x4, 0x40, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x7e, 0x20, 0x3, 0x77, 0x71, 0x10, 0xe, 0xb, 0xb, 0xb, 0xb, 0xc1, 0x3, 0x1, 0x5, 0x7f, 0x20, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xc9, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x28, 0x2, 0x0, 0x22, 0x3, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xcb, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x4, 0x28, 0x2, 0x0, 0x22, 0x2, 0x41, 0x1, 0x71, 0x4, 0x40, 0x2, 0x7f, 0x20, 0x0, 0x20, 0x4, 0x10, 0xf, 0x20, 0x1, 0x20, 0x3, 0x41, 0x4, 0x6a, 0x20, 0x2, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x3, 0x10, 0xe, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x4, 0x28, 0x2, 0x0, 0xb, 0x21, 0x2, 0xb, 0x20, 0x3, 0x41, 0x2, 0x71, 0x4, 0x40, 0x20, 0x1, 0x41, 0x4, 0x6b, 0x28, 0x2, 0x0, 0x22, 0x1, 0x28, 0x2, 0x0, 0x22, 0x6, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xdd, 0x1, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x1, 0x10, 0xf, 0x20, 0x1, 0x20, 0x6, 0x41, 0x4, 0x6a, 0x20, 0x3, 0x41, 0x7c, 0x71, 0x6a, 0x22, 0x3, 0x10, 0xe, 0xb, 0x20, 0x4, 0x20, 0x2, 0x41, 0x2, 0x72, 0x10, 0xe, 0x20, 0x3, 0x41, 0x7c, 0x71, 0x22, 0x3, 0x41, 0xc, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xe9, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x3, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x6a, 0x20, 0x4, 0x47, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xea, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x4, 0x41, 0x4, 0x6b, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x3, 0x41, 0x80, 0x2, 0x49, 0x4, 0x7f, 0x20, 0x3, 0x41, 0x4, 0x76, 0x5, 0x41, 0x1f, 0x20, 0x3, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x20, 0x3, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x49, 0x1b, 0x22, 0x3, 0x67, 0x6b, 0x22, 0x4, 0x41, 0x7, 0x6b, 0x21, 0x5, 0x20, 0x3, 0x20, 0x4, 0x41, 0x4, 0x6b, 0x76, 0x41, 0x10, 0x73, 0xb, 0x22, 0x3, 0x41, 0x10, 0x49, 0x41, 0x0, 0x20, 0x5, 0x41, 0x17, 0x49, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xfb, 0x1, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x3, 0x20, 0x5, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x21, 0x4, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1, 0x20, 0x1, 0x20, 0x4, 0x10, 0x2, 0x20, 0x4, 0x4, 0x40, 0x20, 0x4, 0x20, 0x1, 0x10, 0x1, 0xb, 0x20, 0x0, 0x20, 0x3, 0x20, 0x5, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x60, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x1, 0x20, 0x5, 0x74, 0x72, 0x10, 0xe, 0x20, 0x0, 0x20, 0x5, 0x41, 0x2, 0x74, 0x6a, 0x22, 0x0, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x1, 0x20, 0x3, 0x74, 0x72, 0x36, 0x2, 0x4, 0xb, 0xd0, 0x1, 0x1, 0x2, 0x7f, 0x20, 0x1, 0x20, 0x2, 0x4b, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xf9, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x41, 0x13, 0x6a, 0x41, 0x70, 0x71, 0x41, 0x4, 0x6b, 0x21, 0x1, 0x20, 0x2, 0x41, 0x70, 0x71, 0x21, 0x3, 0x20, 0x0, 0x28, 0x2, 0xa0, 0xc, 0x22, 0x2, 0x4, 0x40, 0x20, 0x1, 0x20, 0x2, 0x41, 0x4, 0x6a, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0x80, 0x3, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0x20, 0x2, 0x20, 0x1, 0x41, 0x10, 0x6b, 0x46, 0x4, 0x40, 0x2, 0x7f, 0x20, 0x2, 0x28, 0x2, 0x0, 0x21, 0x4, 0x20, 0x1, 0x41, 0x10, 0x6b, 0xb, 0x21, 0x1, 0xb, 0x5, 0x20, 0x1, 0x20, 0x0, 0x41, 0xa4, 0xc, 0x6a, 0x49, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0x8d, 0x3, 0x41, 0x5, 0x10, 0x0, 0x0, 0xb, 0xb, 0x20, 0x3, 0x20, 0x1, 0x6b, 0x22, 0x2, 0x41, 0x14, 0x49, 0x4, 0x40, 0xf, 0xb, 0x20, 0x1, 0x20, 0x4, 0x41, 0x2, 0x71, 0x20, 0x2, 0x41, 0x8, 0x6b, 0x22, 0x2, 0x41, 0x1, 0x72, 0x72, 0x10, 0xe, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1, 0x20, 0x1, 0x41, 0x0, 0x10, 0x2, 0x20, 0x2, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x6a, 0x22, 0x2, 0x41, 0x2, 0x10, 0xe, 0x20, 0x0, 0x20, 0x2, 0x36, 0x2, 0xa0, 0xc, 0x20, 0x0, 0x20, 0x1, 0x10, 0x10, 0xb, 0x95, 0x1, 0x1, 0x2, 0x7f, 0x3f, 0x0, 0x22, 0x0, 0x41, 0x1, 0x48, 0x4, 0x7f, 0x41, 0x1, 0x20, 0x0, 0x6b, 0x40, 0x0, 0x41, 0x0, 0x48, 0x5, 0x41, 0x0, 0xb, 0x4, 0x40, 0x0, 0xb, 0x41, 0xf0, 0x90, 0x1, 0x41, 0x0, 0x10, 0xe, 0x41, 0x90, 0x9d, 0x1, 0x41, 0x0, 0x36, 0x2, 0x0, 0x3, 0x40, 0x20, 0x1, 0x41, 0x17, 0x49, 0x4, 0x40, 0x20, 0x1, 0x41, 0x2, 0x74, 0x41, 0xf0, 0x90, 0x1, 0x6a, 0x41, 0x0, 0x36, 0x2, 0x4, 0x41, 0x0, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x41, 0x10, 0x49, 0x4, 0x40, 0x20, 0x0, 0x20, 0x1, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x41, 0xf0, 0x90, 0x1, 0x6a, 0x41, 0x0, 0x36, 0x2, 0x60, 0x20, 0x0, 0x41, 0x1, 0x6a, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x20, 0x1, 0x41, 0x1, 0x6a, 0x21, 0x1, 0xc, 0x1, 0xb, 0xb, 0x41, 0xf0, 0x90, 0x1, 0x41, 0x94, 0x9d, 0x1, 0x3f, 0x0, 0x41, 0x10, 0x74, 0x10, 0x11, 0x41, 0xf0, 0x90, 0x1, 0x24, 0xb, 0xb, 0xa6, 0x3, 0x1, 0x3, 0x7f, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x23, 0x4, 0xe, 0x3, 0x0, 0x1, 0x2, 0x3, 0xb, 0x41, 0x1, 0x24, 0x4, 0x41, 0x0, 0x24, 0x5, 0x10, 0x6, 0x23, 0x8, 0x24, 0x7, 0xc, 0x3, 0xb, 0x23, 0x9, 0x45, 0x21, 0x1, 0x23, 0x7, 0x10, 0x4, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x23, 0x8, 0x47, 0x4, 0x40, 0x20, 0x0, 0x24, 0x7, 0x20, 0x0, 0x10, 0x5, 0x20, 0x1, 0x47, 0x4, 0x40, 0x20, 0x0, 0x20, 0x1, 0x10, 0x7, 0x41, 0x0, 0x24, 0x5, 0x20, 0x0, 0x41, 0x14, 0x6a, 0x10, 0x39, 0xc, 0x5, 0xb, 0x20, 0x0, 0x10, 0x4, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x41, 0x0, 0x24, 0x5, 0x10, 0x6, 0x23, 0x7, 0x10, 0x4, 0x23, 0x8, 0x46, 0x4, 0x40, 0x23, 0x11, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x41, 0xe4, 0x90, 0x1, 0x49, 0x4, 0x40, 0x20, 0x0, 0x28, 0x2, 0x0, 0x10, 0xc, 0x20, 0x0, 0x41, 0x4, 0x6a, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x23, 0x7, 0x10, 0x4, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x23, 0x8, 0x47, 0x4, 0x40, 0x20, 0x0, 0x10, 0x5, 0x20, 0x1, 0x47, 0x4, 0x40, 0x20, 0x0, 0x20, 0x1, 0x10, 0x7, 0x20, 0x0, 0x41, 0x14, 0x6a, 0x10, 0x39, 0xb, 0x20, 0x0, 0x10, 0x4, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x23, 0xa, 0x21, 0x0, 0x23, 0x8, 0x24, 0xa, 0x20, 0x0, 0x24, 0x8, 0x20, 0x1, 0x24, 0x9, 0x20, 0x0, 0x10, 0x4, 0x24, 0x7, 0x41, 0x2, 0x24, 0x4, 0xb, 0xc, 0x2, 0xb, 0x23, 0x7, 0x22, 0x0, 0x23, 0x8, 0x47, 0x4, 0x40, 0x20, 0x0, 0x10, 0x4, 0x24, 0x7, 0x20, 0x0, 0x10, 0x5, 0x23, 0x9, 0x45, 0x47, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0x8, 0x41, 0xe4, 0x1, 0x41, 0x14, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0xe4, 0x90, 0x1, 0x49, 0x4, 0x40, 0x20, 0x0, 0x41, 0x0, 0x10, 0x1, 0x20, 0x0, 0x41, 0x0, 0x10, 0x2, 0x5, 0x23, 0x2, 0x20, 0x0, 0x10, 0xd, 0x6b, 0x24, 0x2, 0x20, 0x0, 0x41, 0x4, 0x6a, 0x22, 0x1, 0x41, 0xe4, 0x90, 0x1, 0x4f, 0x4, 0x40, 0x23, 0xb, 0x45, 0x4, 0x40, 0x10, 0x12, 0xb, 0x23, 0xb, 0x21, 0x2, 0x20, 0x1, 0x41, 0x4, 0x6b, 0x21, 0x0, 0x20, 0x1, 0x41, 0xf, 0x71, 0x45, 0x41, 0x0, 0x20, 0x1, 0x1b, 0x4, 0x7f, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x1, 0x71, 0x45, 0x5, 0x41, 0x0, 0xb, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xaf, 0x4, 0x41, 0x3, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x1, 0x72, 0x10, 0xe, 0x20, 0x2, 0x20, 0x0, 0x10, 0x10, 0xb, 0xb, 0x41, 0xa, 0xf, 0xb, 0x23, 0x8, 0x23, 0x8, 0x10, 0x1, 0x23, 0x8, 0x23, 0x8, 0x10, 0x2, 0x41, 0x0, 0x24, 0x4, 0xb, 0x41, 0x0, 0xf, 0xb, 0x23, 0x5, 0xb, 0xdc, 0x1, 0x1, 0x1, 0x7f, 0x20, 0x1, 0x41, 0x80, 0x2, 0x49, 0x4, 0x40, 0x20, 0x1, 0x41, 0x4, 0x76, 0x21, 0x1, 0x5, 0x41, 0x1f, 0x20, 0x1, 0x41, 0x1, 0x41, 0x1b, 0x20, 0x1, 0x67, 0x6b, 0x74, 0x6a, 0x41, 0x1, 0x6b, 0x20, 0x1, 0x20, 0x1, 0x41, 0xfe, 0xff, 0xff, 0xff, 0x1, 0x49, 0x1b, 0x22, 0x1, 0x67, 0x6b, 0x21, 0x2, 0x20, 0x1, 0x20, 0x2, 0x41, 0x4, 0x6b, 0x76, 0x41, 0x10, 0x73, 0x21, 0x1, 0x20, 0x2, 0x41, 0x7, 0x6b, 0x21, 0x2, 0xb, 0x20, 0x1, 0x41, 0x10, 0x49, 0x41, 0x0, 0x20, 0x2, 0x41, 0x17, 0x49, 0x1b, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xca, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x2, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x4, 0x41, 0x7f, 0x20, 0x1, 0x74, 0x71, 0x22, 0x1, 0x4, 0x7f, 0x20, 0x0, 0x20, 0x1, 0x68, 0x20, 0x2, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x5, 0x20, 0x0, 0x28, 0x2, 0x0, 0x41, 0x7f, 0x20, 0x2, 0x41, 0x1, 0x6a, 0x74, 0x71, 0x22, 0x1, 0x4, 0x7f, 0x20, 0x0, 0x20, 0x1, 0x68, 0x22, 0x1, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x4, 0x22, 0x2, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xd7, 0x2, 0x41, 0x12, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x2, 0x68, 0x20, 0x1, 0x41, 0x4, 0x74, 0x6a, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x60, 0x5, 0x41, 0x0, 0xb, 0xb, 0xb, 0xe5, 0x2, 0x1, 0x3, 0x7f, 0x20, 0x1, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x4b, 0x4, 0x40, 0x41, 0xa0, 0x8, 0x41, 0xf0, 0xa, 0x41, 0xca, 0x3, 0x41, 0x1d, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x41, 0xc, 0x20, 0x1, 0x41, 0x13, 0x6a, 0x41, 0x70, 0x71, 0x41, 0x4, 0x6b, 0x20, 0x1, 0x41, 0xc, 0x4d, 0x1b, 0x22, 0x2, 0x10, 0x14, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x4, 0x3f, 0x0, 0x22, 0x1, 0x41, 0x10, 0x74, 0x41, 0x4, 0x6b, 0x20, 0x0, 0x28, 0x2, 0xa0, 0xc, 0x47, 0x74, 0x20, 0x2, 0x41, 0x1, 0x41, 0x1b, 0x20, 0x2, 0x67, 0x6b, 0x74, 0x41, 0x1, 0x6b, 0x6a, 0x20, 0x2, 0x20, 0x2, 0x41, 0xfe, 0xff, 0xff, 0xff, 0x1, 0x49, 0x1b, 0x6a, 0x41, 0xff, 0xff, 0x3, 0x6a, 0x41, 0x80, 0x80, 0x7c, 0x71, 0x41, 0x10, 0x76, 0x21, 0x3, 0x20, 0x1, 0x20, 0x3, 0x20, 0x1, 0x20, 0x3, 0x4a, 0x1b, 0x40, 0x0, 0x41, 0x0, 0x48, 0x4, 0x40, 0x20, 0x3, 0x40, 0x0, 0x41, 0x0, 0x48, 0x4, 0x40, 0x0, 0xb, 0xb, 0x20, 0x0, 0x20, 0x1, 0x41, 0x10, 0x74, 0x3f, 0x0, 0x41, 0x10, 0x74, 0x10, 0x11, 0x20, 0x0, 0x20, 0x2, 0x10, 0x14, 0x22, 0x1, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xf0, 0x3, 0x41, 0x10, 0x10, 0x0, 0x0, 0xb, 0xb, 0x20, 0x2, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x4b, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xf2, 0x3, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x20, 0x1, 0x10, 0xf, 0x20, 0x1, 0x28, 0x2, 0x0, 0x21, 0x3, 0x20, 0x2, 0x41, 0x4, 0x6a, 0x41, 0xf, 0x71, 0x4, 0x40, 0x41, 0x0, 0x41, 0xf0, 0xa, 0x41, 0xe5, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x3, 0x41, 0x7c, 0x71, 0x20, 0x2, 0x6b, 0x22, 0x4, 0x41, 0x10, 0x4f, 0x4, 0x40, 0x20, 0x1, 0x20, 0x2, 0x20, 0x3, 0x41, 0x2, 0x71, 0x72, 0x10, 0xe, 0x20, 0x2, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x6a, 0x22, 0x2, 0x20, 0x4, 0x41, 0x4, 0x6b, 0x41, 0x1, 0x72, 0x10, 0xe, 0x20, 0x0, 0x20, 0x2, 0x10, 0x10, 0x5, 0x20, 0x1, 0x20, 0x3, 0x41, 0x7e, 0x71, 0x10, 0xe, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x22, 0x0, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x20, 0x0, 0x20, 0x1, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x6a, 0x28, 0x2, 0x0, 0x41, 0x7d, 0x71, 0x10, 0xe, 0xb, 0x20, 0x1, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0xc, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x10, 0xb, 0x25, 0x1, 0x1, 0x7f, 0x3, 0x40, 0x20, 0x1, 0x4, 0x40, 0x20, 0x0, 0x22, 0x2, 0x41, 0x1, 0x6a, 0x21, 0x0, 0x20, 0x2, 0x41, 0x0, 0x3a, 0x0, 0x0, 0x20, 0x1, 0x41, 0x1, 0x6b, 0x21, 0x1, 0xc, 0x1, 0xb, 0xb, 0xb, 0xac, 0x1, 0x1, 0x1, 0x7f, 0x20, 0x0, 0x41, 0xec, 0xff, 0xff, 0xff, 0x3, 0x4f, 0x4, 0x40, 0x41, 0xa0, 0x8, 0x41, 0xe0, 0x8, 0x41, 0x84, 0x2, 0x41, 0x1f, 0x10, 0x0, 0x0, 0xb, 0x23, 0x2, 0x23, 0x3, 0x4f, 0x4, 0x40, 0x2, 0x40, 0x41, 0x80, 0x10, 0x21, 0x2, 0x3, 0x40, 0x20, 0x2, 0x10, 0x13, 0x6b, 0x21, 0x2, 0x23, 0x4, 0x45, 0x4, 0x40, 0x23, 0x2, 0xad, 0x42, 0xc8, 0x1, 0x7e, 0x42, 0xe4, 0x0, 0x80, 0xa7, 0x41, 0x80, 0x8, 0x6a, 0x24, 0x3, 0xc, 0x2, 0xb, 0x20, 0x2, 0x41, 0x0, 0x4a, 0xd, 0x0, 0xb, 0x23, 0x2, 0x23, 0x2, 0x23, 0x3, 0x6b, 0x41, 0x80, 0x8, 0x49, 0x41, 0xa, 0x74, 0x6a, 0x24, 0x3, 0xb, 0xb, 0x2, 0x7f, 0x20, 0x0, 0x41, 0x10, 0x6a, 0x21, 0x2, 0x23, 0xb, 0x45, 0x4, 0x40, 0x10, 0x12, 0xb, 0x23, 0xb, 0x20, 0x2, 0x10, 0x15, 0x22, 0x2, 0xb, 0x20, 0x1, 0x10, 0x16, 0x20, 0x2, 0x20, 0x0, 0x10, 0x17, 0x20, 0x2, 0x23, 0xa, 0x23, 0x9, 0x10, 0xa, 0x23, 0x2, 0x20, 0x2, 0x10, 0xd, 0x6a, 0x24, 0x2, 0x20, 0x2, 0x41, 0x14, 0x6a, 0x22, 0x1, 0x20, 0x0, 0x10, 0x18, 0x20, 0x1, 0xb, 0x62, 0x1, 0x1, 0x7f, 0x20, 0x1, 0x45, 0x4, 0x40, 0xf, 0xb, 0x20, 0x0, 0x45, 0x4, 0x40, 0x41, 0x0, 0x41, 0xe0, 0x8, 0x41, 0xa6, 0x2, 0x41, 0xe, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x41, 0x14, 0x6b, 0x22, 0x1, 0x10, 0x5, 0x23, 0x9, 0x46, 0x4, 0x40, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x0, 0x10, 0x5, 0x22, 0x3, 0x23, 0x9, 0x45, 0x46, 0x4, 0x40, 0x20, 0x2, 0x4, 0x40, 0x20, 0x0, 0x10, 0xb, 0x5, 0x20, 0x1, 0x10, 0xb, 0xb, 0x5, 0x23, 0x4, 0x41, 0x1, 0x46, 0x41, 0x0, 0x20, 0x3, 0x41, 0x3, 0x46, 0x1b, 0x4, 0x40, 0x20, 0x1, 0x10, 0xb, 0xb, 0xb, 0xb, 0xb, 0x11, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1a, 0xb, 0x11, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x8, 0x20, 0x0, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1a, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x14, 0xb, 0xb3, 0x1, 0x1, 0x3, 0x7f, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x23, 0x11, 0x41, 0xc, 0x41, 0x3, 0x10, 0x19, 0x22, 0x1, 0x36, 0x2, 0x0, 0x23, 0x11, 0x21, 0x3, 0x23, 0x11, 0x41, 0x8, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x20, 0x1, 0x45, 0x4, 0x40, 0x23, 0x11, 0x41, 0xc, 0x41, 0x2, 0x10, 0x19, 0x22, 0x1, 0x36, 0x2, 0x0, 0xb, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1b, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1, 0x20, 0x1, 0x41, 0x0, 0x10, 0x2, 0x20, 0x0, 0x41, 0xff, 0xff, 0xff, 0x3f, 0x4b, 0x4, 0x40, 0x41, 0xb0, 0xb, 0x41, 0xe0, 0xb, 0x41, 0x12, 0x41, 0x39, 0x10, 0x0, 0x0, 0xb, 0x23, 0x11, 0x20, 0x0, 0x41, 0x3, 0x74, 0x22, 0x0, 0x41, 0x0, 0x10, 0x19, 0x22, 0x2, 0x36, 0x2, 0x4, 0x20, 0x2, 0x20, 0x0, 0x10, 0x18, 0x20, 0x1, 0x20, 0x2, 0x10, 0x1b, 0x20, 0x1, 0x20, 0x2, 0x10, 0x1, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2, 0x23, 0x11, 0x41, 0x8, 0x6a, 0x24, 0x11, 0x20, 0x3, 0x20, 0x1, 0x36, 0x2, 0x0, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x20, 0x1, 0xb, 0x18, 0x0, 0x20, 0x1, 0x20, 0x3, 0x93, 0x22, 0x1, 0x20, 0x1, 0x94, 0x20, 0x0, 0x20, 0x2, 0x93, 0x22, 0x0, 0x20, 0x0, 0x94, 0x92, 0x91, 0xb, 0x23, 0x0, 0x20, 0x1, 0x20, 0x4, 0x93, 0x22, 0x1, 0x20, 0x1, 0x94, 0x20, 0x0, 0x20, 0x3, 0x93, 0x22, 0x0, 0x20, 0x0, 0x94, 0x92, 0x20, 0x2, 0x20, 0x5, 0x93, 0x22, 0x0, 0x20, 0x0, 0x94, 0x92, 0x91, 0xb, 0x42, 0x0, 0x20, 0x0, 0x41, 0xbd, 0xdc, 0xca, 0x95, 0x7c, 0x6c, 0x41, 0xb5, 0xcf, 0xd9, 0xb2, 0x1, 0x6a, 0x41, 0x11, 0x77, 0x41, 0xaf, 0xd6, 0xd3, 0xbe, 0x2, 0x6c, 0x22, 0x0, 0x20, 0x0, 0x41, 0xf, 0x76, 0x73, 0x41, 0xf7, 0x94, 0xaf, 0xaf, 0x78, 0x6c, 0x22, 0x0, 0x20, 0x0, 0x41, 0xd, 0x76, 0x73, 0x41, 0xbd, 0xdc, 0xca, 0x95, 0x7c, 0x6c, 0x22, 0x0, 0x20, 0x0, 0x41, 0x10, 0x76, 0x73, 0xb, 0x49, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x20, 0x2, 0x20, 0x0, 0x28, 0x2, 0x4, 0x71, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x0, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x4, 0x40, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x2, 0x41, 0x1, 0x71, 0x4, 0x7f, 0x41, 0x0, 0x5, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x0, 0x46, 0xb, 0x4, 0x40, 0x20, 0x0, 0xf, 0xb, 0x20, 0x2, 0x41, 0x7e, 0x71, 0x21, 0x0, 0xc, 0x1, 0xb, 0xb, 0x41, 0x0, 0xb, 0xf, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x1, 0x10, 0x21, 0x10, 0x22, 0x41, 0x0, 0x47, 0xb, 0xd6, 0x1, 0x1, 0x7, 0x7f, 0x23, 0x11, 0x41, 0x8, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x20, 0x1, 0x41, 0x1, 0x6a, 0x22, 0x3, 0x41, 0x2, 0x74, 0x10, 0x43, 0x22, 0x6, 0x36, 0x2, 0x0, 0x23, 0x11, 0x20, 0x3, 0x41, 0x3, 0x74, 0x41, 0x3, 0x6d, 0x22, 0x5, 0x41, 0xc, 0x6c, 0x10, 0x43, 0x22, 0x3, 0x36, 0x2, 0x4, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x8, 0x20, 0x0, 0x28, 0x2, 0x10, 0x41, 0xc, 0x6c, 0x6a, 0x21, 0x4, 0x20, 0x3, 0x21, 0x2, 0x3, 0x40, 0x20, 0x4, 0x20, 0x8, 0x47, 0x4, 0x40, 0x20, 0x8, 0x28, 0x2, 0x8, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x2, 0x7f, 0x20, 0x2, 0x20, 0x8, 0x28, 0x2, 0x0, 0x22, 0x7, 0x10, 0xe, 0x20, 0x2, 0x20, 0x8, 0x28, 0x2, 0x4, 0x10, 0x1, 0x20, 0x2, 0x20, 0x6, 0x20, 0x7, 0x10, 0x21, 0x20, 0x1, 0x71, 0x41, 0x2, 0x74, 0x6a, 0x22, 0x7, 0x28, 0x2, 0x0, 0x10, 0x2, 0x20, 0x7, 0x20, 0x2, 0x36, 0x2, 0x0, 0x20, 0x2, 0x41, 0xc, 0x6a, 0xb, 0x21, 0x2, 0xb, 0x20, 0x8, 0x41, 0xc, 0x6a, 0x21, 0x8, 0xc, 0x1, 0xb, 0xb, 0x20, 0x0, 0x20, 0x6, 0x10, 0x1b, 0x20, 0x0, 0x20, 0x1, 0x10, 0x1, 0x20, 0x0, 0x20, 0x3, 0x10, 0x1c, 0x20, 0x0, 0x20, 0x5, 0x10, 0x16, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x14, 0x10, 0x17, 0x23, 0x11, 0x41, 0x8, 0x6a, 0x24, 0x11, 0xb, 0x25, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x1, 0x10, 0x21, 0x10, 0x22, 0x22, 0x0, 0x45, 0x4, 0x40, 0x41, 0xd0, 0xc, 0x41, 0x90, 0xd, 0x41, 0xe9, 0x0, 0x41, 0x11, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x28, 0x2, 0x4, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0x4, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0x8, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0xc, 0xb, 0xa0, 0x1, 0x1, 0x4, 0x7f, 0x20, 0x1, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x2, 0x28, 0x2, 0x0, 0x41, 0x7c, 0x71, 0x41, 0x10, 0x6b, 0x4d, 0x4, 0x40, 0x20, 0x2, 0x20, 0x1, 0x10, 0x17, 0x20, 0x0, 0xf, 0xb, 0x20, 0x1, 0x20, 0x2, 0x28, 0x2, 0xc, 0x10, 0x19, 0x22, 0x5, 0x21, 0x3, 0x20, 0x1, 0x20, 0x2, 0x28, 0x2, 0x10, 0x22, 0x2, 0x20, 0x1, 0x20, 0x2, 0x49, 0x1b, 0x21, 0x4, 0x20, 0x0, 0x20, 0x3, 0x47, 0x4, 0x40, 0x20, 0x0, 0x20, 0x3, 0x4b, 0x4, 0x40, 0x3, 0x40, 0x20, 0x4, 0x4, 0x40, 0x20, 0x3, 0x22, 0x1, 0x41, 0x1, 0x6a, 0x21, 0x3, 0x20, 0x0, 0x22, 0x2, 0x41, 0x1, 0x6a, 0x21, 0x0, 0x20, 0x1, 0x20, 0x2, 0x2d, 0x0, 0x0, 0x3a, 0x0, 0x0, 0x20, 0x4, 0x41, 0x1, 0x6b, 0x21, 0x4, 0xc, 0x1, 0xb, 0xb, 0x5, 0x3, 0x40, 0x20, 0x4, 0x4, 0x40, 0x20, 0x3, 0x20, 0x4, 0x41, 0x1, 0x6b, 0x22, 0x4, 0x6a, 0x20, 0x0, 0x20, 0x4, 0x6a, 0x2d, 0x0, 0x0, 0x3a, 0x0, 0x0, 0xc, 0x1, 0xb, 0xb, 0xb, 0xb, 0x20, 0x5, 0xb, 0x97, 0x1, 0x1, 0x3, 0x7f, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x3, 0x41, 0x2, 0x76, 0x4b, 0x4, 0x40, 0x20, 0x1, 0x41, 0xff, 0xff, 0xff, 0xff, 0x0, 0x4b, 0x4, 0x40, 0x41, 0xb0, 0xb, 0x41, 0xa0, 0xc, 0x41, 0x11, 0x41, 0x30, 0x10, 0x0, 0x0, 0xb, 0x20, 0x0, 0x28, 0x2, 0x0, 0x22, 0x4, 0x20, 0x3, 0x41, 0x1, 0x74, 0x22, 0x2, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x20, 0x2, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x49, 0x1b, 0x22, 0x2, 0x20, 0x1, 0x41, 0x8, 0x20, 0x1, 0x41, 0x8, 0x4b, 0x1b, 0x41, 0x2, 0x74, 0x22, 0x1, 0x20, 0x1, 0x20, 0x2, 0x49, 0x1b, 0x22, 0x1, 0x10, 0x29, 0x22, 0x2, 0x20, 0x3, 0x6a, 0x20, 0x1, 0x20, 0x3, 0x6b, 0x10, 0x18, 0x20, 0x2, 0x20, 0x4, 0x47, 0x4, 0x40, 0x20, 0x0, 0x20, 0x2, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x2, 0x36, 0x2, 0x4, 0x20, 0x0, 0x20, 0x2, 0x41, 0x0, 0x10, 0x1a, 0xb, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x8, 0xb, 0xb, 0x32, 0x1, 0x2, 0x7f, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0xc, 0x22, 0x2, 0x41, 0x1, 0x6a, 0x22, 0x3, 0x10, 0x2a, 0x20, 0x0, 0x28, 0x2, 0x4, 0x20, 0x2, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x1, 0x41, 0x1, 0x10, 0x1a, 0x20, 0x0, 0x20, 0x3, 0x10, 0x16, 0xb, 0xa, 0x0, 0x23, 0xd, 0x20, 0x0, 0x28, 0x2, 0x0, 0x47, 0xb, 0x6a, 0x1, 0x1, 0x7f, 0x20, 0x0, 0x20, 0x1, 0x20, 0x1, 0x10, 0x21, 0x10, 0x22, 0x22, 0x1, 0x45, 0x4, 0x40, 0xf, 0xb, 0x20, 0x1, 0x20, 0x1, 0x28, 0x2, 0x8, 0x41, 0x1, 0x72, 0x10, 0x2, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x14, 0x41, 0x1, 0x6b, 0x10, 0x1d, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x1, 0x76, 0x22, 0x2, 0x41, 0x1, 0x6a, 0x41, 0x4, 0x20, 0x0, 0x28, 0x2, 0x14, 0x22, 0x1, 0x20, 0x1, 0x41, 0x4, 0x49, 0x1b, 0x4f, 0x4, 0x7f, 0x20, 0x0, 0x28, 0x2, 0x14, 0x20, 0x0, 0x28, 0x2, 0xc, 0x41, 0x3, 0x6c, 0x41, 0x4, 0x6d, 0x48, 0x5, 0x41, 0x0, 0xb, 0x4, 0x40, 0x20, 0x0, 0x20, 0x2, 0x10, 0x24, 0xb, 0xb, 0x2a, 0x1, 0x2, 0x7f, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0xc, 0x22, 0x2, 0x41, 0x1, 0x6a, 0x22, 0x3, 0x10, 0x2a, 0x20, 0x0, 0x28, 0x2, 0x4, 0x20, 0x2, 0x41, 0x2, 0x74, 0x6a, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x3, 0x10, 0x16, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0x10, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0x14, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0x18, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0x1c, 0xb, 0x9, 0x0, 0x20, 0x0, 0x20, 0x1, 0x38, 0x2, 0x20, 0xb, 0xa, 0x0, 0x23, 0xf, 0x20, 0x0, 0x28, 0x2, 0x0, 0x47, 0xb, 0x34, 0x1, 0x1, 0x7f, 0x20, 0x0, 0x4, 0x40, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x1, 0x10, 0x5, 0x41, 0x3, 0x46, 0x4, 0x40, 0x41, 0x80, 0xf, 0x41, 0xe0, 0x8, 0x41, 0xd1, 0x2, 0x41, 0x7, 0x10, 0x0, 0x0, 0xb, 0x20, 0x1, 0x10, 0x9, 0x20, 0x1, 0x23, 0x6, 0x41, 0x3, 0x10, 0xa, 0xb, 0x20, 0x0, 0xb, 0x3f, 0x0, 0x20, 0x0, 0x45, 0x4, 0x40, 0xf, 0xb, 0x20, 0x0, 0x41, 0x14, 0x6b, 0x22, 0x0, 0x10, 0x5, 0x41, 0x3, 0x47, 0x4, 0x40, 0x41, 0xc0, 0xf, 0x41, 0xe0, 0x8, 0x41, 0xdf, 0x2, 0x41, 0x5, 0x10, 0x0, 0x0, 0xb, 0x23, 0x4, 0x41, 0x1, 0x46, 0x4, 0x40, 0x20, 0x0, 0x10, 0xb, 0x5, 0x20, 0x0, 0x10, 0x9, 0x20, 0x0, 0x23, 0xa, 0x23, 0x9, 0x10, 0xa, 0xb, 0xb, 0x39, 0x0, 0x23, 0x4, 0x41, 0x0, 0x4a, 0x4, 0x40, 0x3, 0x40, 0x23, 0x4, 0x4, 0x40, 0x10, 0x13, 0x1a, 0xc, 0x1, 0xb, 0xb, 0xb, 0x10, 0x13, 0x1a, 0x3, 0x40, 0x23, 0x4, 0x4, 0x40, 0x10, 0x13, 0x1a, 0xc, 0x1, 0xb, 0xb, 0x23, 0x2, 0xad, 0x42, 0xc8, 0x1, 0x7e, 0x42, 0xe4, 0x0, 0x80, 0xa7, 0x41, 0x80, 0x8, 0x6a, 0x24, 0x3, 0xb, 0x10, 0x0, 0x20, 0x0, 0x28, 0x2, 0x0, 0x22, 0x0, 0x4, 0x40, 0x20, 0x0, 0x10, 0xc, 0xb, 0xb, 0xdf, 0x1, 0x1, 0x3, 0x7f, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x2, 0x40, 0x20, 0x0, 0x41, 0x8, 0x6b, 0x28, 0x2, 0x0, 0xe, 0xe, 0x0, 0x1, 0x2, 0x7, 0x7, 0x3, 0x8, 0x9, 0x4, 0x8, 0x9, 0xa, 0x5, 0xa, 0x6, 0xb, 0xf, 0xb, 0xf, 0xb, 0x20, 0x0, 0x10, 0x38, 0xf, 0xb, 0xf, 0xb, 0xf, 0xb, 0x20, 0x0, 0x28, 0x2, 0x0, 0x10, 0xc, 0xf, 0xb, 0x0, 0xb, 0x20, 0x0, 0x10, 0x38, 0xf, 0xb, 0x20, 0x0, 0x28, 0x2, 0x4, 0x22, 0x1, 0x20, 0x0, 0x28, 0x2, 0xc, 0x41, 0x2, 0x74, 0x6a, 0x21, 0x2, 0x3, 0x40, 0x20, 0x1, 0x20, 0x2, 0x49, 0x4, 0x40, 0x20, 0x1, 0x28, 0x2, 0x0, 0x22, 0x3, 0x4, 0x40, 0x20, 0x3, 0x10, 0xc, 0xb, 0x20, 0x1, 0x41, 0x4, 0x6a, 0x21, 0x1, 0xc, 0x1, 0xb, 0xb, 0x20, 0x0, 0x28, 0x2, 0x0, 0x10, 0xc, 0xf, 0xb, 0x20, 0x0, 0x28, 0x2, 0x0, 0x10, 0xc, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x2, 0x22, 0x1, 0x20, 0x0, 0x28, 0x2, 0x10, 0x41, 0xc, 0x6c, 0x6a, 0x21, 0x0, 0x3, 0x40, 0x20, 0x0, 0x20, 0x1, 0x4b, 0x4, 0x40, 0x20, 0x1, 0x28, 0x2, 0x8, 0x41, 0x1, 0x71, 0x45, 0x4, 0x40, 0x20, 0x1, 0x28, 0x2, 0x4, 0x10, 0xc, 0xb, 0x20, 0x1, 0x41, 0xc, 0x6a, 0x21, 0x1, 0xc, 0x1, 0xb, 0xb, 0x20, 0x2, 0x10, 0xc, 0xf, 0xb, 0x20, 0x0, 0x28, 0x2, 0x4, 0x10, 0xc, 0xb, 0xc8, 0x1, 0x1, 0x1, 0x7f, 0x3f, 0x0, 0x41, 0x10, 0x74, 0x41, 0xe4, 0x90, 0x1, 0x6b, 0x41, 0x1, 0x76, 0x24, 0x3, 0x41, 0x90, 0x9, 0x10, 0x3, 0x24, 0x6, 0x41, 0xb0, 0x9, 0x10, 0x3, 0x24, 0x8, 0x41, 0xc0, 0xa, 0x10, 0x3, 0x24, 0xa, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x23, 0x11, 0x41, 0x18, 0x41, 0x7, 0x10, 0x19, 0x22, 0x0, 0x36, 0x2, 0x0, 0x20, 0x0, 0x41, 0x10, 0x10, 0x43, 0x10, 0x1b, 0x20, 0x0, 0x41, 0x3, 0x10, 0x1, 0x20, 0x0, 0x41, 0x30, 0x10, 0x43, 0x10, 0x1c, 0x20, 0x0, 0x41, 0x4, 0x10, 0x16, 0x20, 0x0, 0x41, 0x0, 0x10, 0x17, 0x20, 0x0, 0x41, 0x0, 0x10, 0x1d, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x20, 0x0, 0x24, 0xc, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x23, 0x11, 0x41, 0x18, 0x41, 0xa, 0x10, 0x19, 0x22, 0x0, 0x36, 0x2, 0x0, 0x20, 0x0, 0x41, 0x10, 0x10, 0x43, 0x10, 0x1b, 0x20, 0x0, 0x41, 0x3, 0x10, 0x1, 0x20, 0x0, 0x41, 0x30, 0x10, 0x43, 0x10, 0x1c, 0x20, 0x0, 0x41, 0x4, 0x10, 0x16, 0x20, 0x0, 0x41, 0x0, 0x10, 0x17, 0x20, 0x0, 0x41, 0x0, 0x10, 0x1d, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x20, 0x0, 0x24, 0xe, 0xb, 0x1a, 0x0, 0x23, 0x11, 0x41, 0xe4, 0x10, 0x48, 0x4, 0x40, 0x41, 0x80, 0x91, 0x1, 0x41, 0xb0, 0x91, 0x1, 0x41, 0x1, 0x41, 0x1, 0x10, 0x0, 0x0, 0xb, 0xb, 0xb8, 0x2, 0x1, 0x3, 0x7f, 0x23, 0x11, 0x41, 0xc, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x8, 0x23, 0x11, 0x23, 0xc, 0x22, 0x5, 0x36, 0x2, 0x0, 0x20, 0x5, 0x20, 0x0, 0x10, 0x23, 0x4, 0x40, 0x23, 0x11, 0x23, 0xc, 0x22, 0x5, 0x36, 0x2, 0x0, 0x23, 0x11, 0x20, 0x5, 0x20, 0x0, 0x10, 0x25, 0x22, 0x5, 0x36, 0x2, 0x4, 0x5, 0x23, 0x11, 0x21, 0x6, 0x23, 0x11, 0x41, 0x8, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x10, 0x41, 0x6, 0x10, 0x19, 0x22, 0x5, 0x36, 0x2, 0x0, 0x20, 0x5, 0x41, 0x0, 0x10, 0x1b, 0x20, 0x5, 0x41, 0x0, 0x10, 0x1, 0x20, 0x5, 0x41, 0x0, 0x10, 0x2, 0x20, 0x5, 0x41, 0x0, 0x10, 0x16, 0x23, 0x11, 0x41, 0x20, 0x41, 0x0, 0x10, 0x19, 0x22, 0x7, 0x36, 0x2, 0x4, 0x20, 0x7, 0x41, 0x20, 0x10, 0x18, 0x20, 0x5, 0x20, 0x7, 0x10, 0x1b, 0x20, 0x5, 0x20, 0x7, 0x10, 0x1, 0x20, 0x5, 0x41, 0x20, 0x10, 0x2, 0x20, 0x5, 0x41, 0x0, 0x10, 0x16, 0x23, 0x11, 0x41, 0x8, 0x6a, 0x24, 0x11, 0x20, 0x6, 0x20, 0x5, 0x36, 0x2, 0x4, 0x23, 0x11, 0x23, 0xc, 0x22, 0x6, 0x36, 0x2, 0x0, 0x20, 0x6, 0x20, 0x0, 0x20, 0x5, 0x10, 0x44, 0xb, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x23, 0x11, 0x41, 0x10, 0x41, 0x5, 0x10, 0x19, 0x22, 0x0, 0x36, 0x2, 0x0, 0x20, 0x0, 0x41, 0x0, 0x10, 0xe, 0x20, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x26, 0x20, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x27, 0x20, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x28, 0x20, 0x0, 0x20, 0x1, 0x10, 0xe, 0x20, 0x0, 0x20, 0x2, 0x10, 0x26, 0x20, 0x0, 0x20, 0x3, 0x10, 0x27, 0x20, 0x0, 0x20, 0x4, 0x10, 0x28, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x23, 0x11, 0x20, 0x0, 0x36, 0x2, 0x8, 0x20, 0x5, 0x20, 0x0, 0x10, 0x2b, 0x23, 0x11, 0x41, 0xc, 0x6a, 0x24, 0x11, 0xb, 0x9c, 0x2, 0x1, 0x5, 0x7f, 0x23, 0x11, 0x41, 0xc, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x8, 0x20, 0x1, 0x24, 0xd, 0x23, 0x11, 0x23, 0xc, 0x22, 0x1, 0x36, 0x2, 0x0, 0x2, 0x40, 0x20, 0x1, 0x20, 0x0, 0x10, 0x23, 0x4, 0x7f, 0x23, 0xd, 0x41, 0x7f, 0x46, 0x5, 0x41, 0x1, 0xb, 0xd, 0x0, 0x23, 0x11, 0x23, 0xc, 0x22, 0x1, 0x36, 0x2, 0x0, 0x23, 0x11, 0x20, 0x1, 0x20, 0x0, 0x10, 0x25, 0x22, 0x2, 0x36, 0x2, 0x4, 0x23, 0x11, 0x41, 0xc0, 0xd, 0x36, 0x2, 0x8, 0x23, 0x11, 0x21, 0x6, 0x23, 0x11, 0x41, 0x8, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x6, 0x10, 0x45, 0x22, 0x1, 0x36, 0x2, 0x0, 0x20, 0x2, 0x28, 0x2, 0xc, 0x21, 0x5, 0x3, 0x40, 0x20, 0x3, 0x20, 0x5, 0x20, 0x2, 0x28, 0x2, 0xc, 0x22, 0x4, 0x20, 0x4, 0x20, 0x5, 0x4a, 0x1b, 0x48, 0x4, 0x40, 0x23, 0x11, 0x20, 0x2, 0x28, 0x2, 0x4, 0x20, 0x3, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x0, 0x22, 0x4, 0x36, 0x2, 0x4, 0x20, 0x4, 0x20, 0x3, 0x20, 0x2, 0x41, 0xc0, 0xd, 0x28, 0x2, 0x0, 0x11, 0x6, 0x0, 0x4, 0x40, 0x20, 0x1, 0x20, 0x4, 0x10, 0x2b, 0xb, 0x20, 0x3, 0x41, 0x1, 0x6a, 0x21, 0x3, 0xc, 0x1, 0xb, 0xb, 0x23, 0x11, 0x41, 0x8, 0x6a, 0x24, 0x11, 0x20, 0x6, 0x20, 0x1, 0x36, 0x2, 0x4, 0x41, 0x7f, 0x24, 0xd, 0x20, 0x1, 0x28, 0x2, 0xc, 0x45, 0x4, 0x40, 0x23, 0x11, 0x23, 0xc, 0x22, 0x1, 0x36, 0x2, 0x0, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2d, 0xc, 0x1, 0xb, 0x23, 0x11, 0x23, 0xc, 0x22, 0x2, 0x36, 0x2, 0x0, 0x20, 0x2, 0x20, 0x0, 0x20, 0x1, 0x10, 0x44, 0x23, 0x11, 0x41, 0xc, 0x6a, 0x24, 0x11, 0xf, 0xb, 0x23, 0x11, 0x41, 0xc, 0x6a, 0x24, 0x11, 0xb, 0xa3, 0x1, 0x1, 0x3, 0x7f, 0x23, 0x11, 0x41, 0x10, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x8, 0x23, 0x11, 0x10, 0x46, 0x22, 0x6, 0x36, 0x2, 0x0, 0x23, 0x11, 0x23, 0xc, 0x22, 0x5, 0x36, 0x2, 0x4, 0x20, 0x5, 0x20, 0x3, 0x10, 0x23, 0x45, 0x4, 0x40, 0x23, 0x11, 0x41, 0x10, 0x6a, 0x24, 0x11, 0x20, 0x6, 0xf, 0xb, 0x23, 0x11, 0x23, 0xc, 0x22, 0x5, 0x36, 0x2, 0x4, 0x23, 0x11, 0x20, 0x5, 0x20, 0x3, 0x10, 0x25, 0x22, 0x5, 0x36, 0x2, 0x8, 0x3, 0x40, 0x20, 0x7, 0x20, 0x5, 0x28, 0x2, 0xc, 0x48, 0x4, 0x40, 0x23, 0x11, 0x20, 0x5, 0x20, 0x7, 0x10, 0x47, 0x22, 0x3, 0x36, 0x2, 0xc, 0x20, 0x0, 0x20, 0x1, 0x20, 0x3, 0x2a, 0x2, 0x4, 0x20, 0x3, 0x2a, 0x2, 0x8, 0x10, 0x1f, 0x20, 0x4, 0x5f, 0x4, 0x40, 0x20, 0x6, 0x20, 0x3, 0x28, 0x2, 0x0, 0x10, 0x2e, 0xb, 0x20, 0x7, 0x41, 0x1, 0x6a, 0x21, 0x7, 0xc, 0x1, 0xb, 0xb, 0x23, 0x11, 0x41, 0x10, 0x6a, 0x24, 0x11, 0x20, 0x6, 0xb, 0xaa, 0x1, 0x1, 0x3, 0x7f, 0x23, 0x11, 0x41, 0x10, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x8, 0x23, 0x11, 0x10, 0x46, 0x22, 0x6, 0x36, 0x2, 0x0, 0x23, 0x11, 0x23, 0xc, 0x22, 0x5, 0x36, 0x2, 0x4, 0x20, 0x5, 0x20, 0x3, 0x10, 0x23, 0x45, 0x4, 0x40, 0x23, 0x11, 0x41, 0x10, 0x6a, 0x24, 0x11, 0x20, 0x6, 0xf, 0xb, 0x23, 0x11, 0x23, 0xc, 0x22, 0x5, 0x36, 0x2, 0x4, 0x23, 0x11, 0x20, 0x5, 0x20, 0x3, 0x10, 0x25, 0x22, 0x5, 0x36, 0x2, 0x8, 0x3, 0x40, 0x20, 0x7, 0x20, 0x5, 0x28, 0x2, 0xc, 0x48, 0x4, 0x40, 0x23, 0x11, 0x20, 0x5, 0x20, 0x7, 0x10, 0x47, 0x22, 0x3, 0x36, 0x2, 0xc, 0x20, 0x0, 0x20, 0x1, 0x20, 0x2, 0x20, 0x3, 0x2a, 0x2, 0x4, 0x20, 0x3, 0x2a, 0x2, 0x8, 0x20, 0x3, 0x2a, 0x2, 0xc, 0x10, 0x20, 0x20, 0x4, 0x5f, 0x4, 0x40, 0x20, 0x6, 0x20, 0x3, 0x28, 0x2, 0x0, 0x10, 0x2e, 0xb, 0x20, 0x7, 0x41, 0x1, 0x6a, 0x21, 0x7, 0xc, 0x1, 0xb, 0xb, 0x23, 0x11, 0x41, 0x10, 0x6a, 0x24, 0x11, 0x20, 0x6, 0xb, 0xe9, 0x1, 0x1, 0x3, 0x7f, 0x23, 0x11, 0x41, 0xc, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x8, 0x23, 0x11, 0x23, 0xe, 0x22, 0x6, 0x36, 0x2, 0x0, 0x20, 0x6, 0x20, 0x0, 0x10, 0x23, 0x4, 0x40, 0x23, 0x11, 0x23, 0xe, 0x22, 0x6, 0x36, 0x2, 0x0, 0x23, 0x11, 0x20, 0x6, 0x20, 0x0, 0x10, 0x25, 0x22, 0x6, 0x36, 0x2, 0x4, 0x5, 0x23, 0x11, 0x21, 0x7, 0x23, 0x11, 0x41, 0x8, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x10, 0x41, 0x9, 0x10, 0x19, 0x22, 0x6, 0x36, 0x2, 0x0, 0x20, 0x6, 0x41, 0x0, 0x10, 0x1b, 0x20, 0x6, 0x41, 0x0, 0x10, 0x1, 0x20, 0x6, 0x41, 0x0, 0x10, 0x2, 0x20, 0x6, 0x41, 0x0, 0x10, 0x16, 0x23, 0x11, 0x41, 0x20, 0x41, 0x0, 0x10, 0x19, 0x22, 0x8, 0x36, 0x2, 0x4, 0x20, 0x8, 0x41, 0x20, 0x10, 0x18, 0x20, 0x6, 0x20, 0x8, 0x10, 0x1b, 0x20, 0x6, 0x20, 0x8, 0x10, 0x1, 0x20, 0x6, 0x41, 0x20, 0x10, 0x2, 0x20, 0x6, 0x41, 0x0, 0x10, 0x16, 0x23, 0x11, 0x41, 0x8, 0x6a, 0x24, 0x11, 0x20, 0x7, 0x20, 0x6, 0x36, 0x2, 0x4, 0x23, 0x11, 0x23, 0xe, 0x22, 0x7, 0x36, 0x2, 0x0, 0x20, 0x7, 0x20, 0x0, 0x20, 0x6, 0x10, 0x44, 0xb, 0x20, 0x1, 0x20, 0x2, 0x20, 0x3, 0x20, 0x4, 0x20, 0x5, 0x10, 0x48, 0x21, 0x0, 0x23, 0x11, 0x20, 0x0, 0x36, 0x2, 0x8, 0x20, 0x6, 0x20, 0x0, 0x10, 0x2b, 0x23, 0x11, 0x41, 0xc, 0x6a, 0x24, 0x11, 0xb, 0x9c, 0x2, 0x1, 0x5, 0x7f, 0x23, 0x11, 0x41, 0xc, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x8, 0x20, 0x1, 0x24, 0xf, 0x23, 0x11, 0x23, 0xe, 0x22, 0x1, 0x36, 0x2, 0x0, 0x2, 0x40, 0x20, 0x1, 0x20, 0x0, 0x10, 0x23, 0x4, 0x7f, 0x23, 0xf, 0x41, 0x7f, 0x46, 0x5, 0x41, 0x1, 0xb, 0xd, 0x0, 0x23, 0x11, 0x23, 0xe, 0x22, 0x1, 0x36, 0x2, 0x0, 0x23, 0x11, 0x20, 0x1, 0x20, 0x0, 0x10, 0x25, 0x22, 0x2, 0x36, 0x2, 0x4, 0x23, 0x11, 0x41, 0xe0, 0xe, 0x36, 0x2, 0x8, 0x23, 0x11, 0x21, 0x6, 0x23, 0x11, 0x41, 0x8, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x9, 0x10, 0x45, 0x22, 0x1, 0x36, 0x2, 0x0, 0x20, 0x2, 0x28, 0x2, 0xc, 0x21, 0x5, 0x3, 0x40, 0x20, 0x3, 0x20, 0x5, 0x20, 0x2, 0x28, 0x2, 0xc, 0x22, 0x4, 0x20, 0x4, 0x20, 0x5, 0x4a, 0x1b, 0x48, 0x4, 0x40, 0x23, 0x11, 0x20, 0x2, 0x28, 0x2, 0x4, 0x20, 0x3, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x0, 0x22, 0x4, 0x36, 0x2, 0x4, 0x20, 0x4, 0x20, 0x3, 0x20, 0x2, 0x41, 0xe0, 0xe, 0x28, 0x2, 0x0, 0x11, 0x6, 0x0, 0x4, 0x40, 0x20, 0x1, 0x20, 0x4, 0x10, 0x2b, 0xb, 0x20, 0x3, 0x41, 0x1, 0x6a, 0x21, 0x3, 0xc, 0x1, 0xb, 0xb, 0x23, 0x11, 0x41, 0x8, 0x6a, 0x24, 0x11, 0x20, 0x6, 0x20, 0x1, 0x36, 0x2, 0x4, 0x41, 0x7f, 0x24, 0xf, 0x20, 0x1, 0x28, 0x2, 0xc, 0x45, 0x4, 0x40, 0x23, 0x11, 0x23, 0xe, 0x22, 0x1, 0x36, 0x2, 0x0, 0x20, 0x1, 0x20, 0x0, 0x10, 0x2d, 0xc, 0x1, 0xb, 0x23, 0x11, 0x23, 0xe, 0x22, 0x2, 0x36, 0x2, 0x0, 0x20, 0x2, 0x20, 0x0, 0x20, 0x1, 0x10, 0x44, 0x23, 0x11, 0x41, 0xc, 0x6a, 0x24, 0x11, 0xf, 0xb, 0x23, 0x11, 0x41, 0xc, 0x6a, 0x24, 0x11, 0xb, 0xc2, 0x1, 0x1, 0x3, 0x7f, 0x23, 0x11, 0x41, 0x10, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x8, 0x23, 0x11, 0x10, 0x46, 0x22, 0x4, 0x36, 0x2, 0x0, 0x23, 0x11, 0x23, 0xe, 0x22, 0x3, 0x36, 0x2, 0x4, 0x20, 0x3, 0x20, 0x2, 0x10, 0x23, 0x45, 0x4, 0x40, 0x23, 0x11, 0x41, 0x10, 0x6a, 0x24, 0x11, 0x20, 0x4, 0xf, 0xb, 0x23, 0x11, 0x23, 0xe, 0x22, 0x3, 0x36, 0x2, 0x4, 0x23, 0x11, 0x20, 0x3, 0x20, 0x2, 0x10, 0x25, 0x22, 0x3, 0x36, 0x2, 0x8, 0x3, 0x40, 0x20, 0x5, 0x20, 0x3, 0x28, 0x2, 0xc, 0x48, 0x4, 0x40, 0x23, 0x11, 0x20, 0x3, 0x20, 0x5, 0x10, 0x47, 0x22, 0x2, 0x36, 0x2, 0xc, 0x20, 0x0, 0x20, 0x2, 0x2a, 0x2, 0x14, 0x60, 0x4, 0x7f, 0x20, 0x0, 0x20, 0x2, 0x2a, 0x2, 0x18, 0x5f, 0x5, 0x41, 0x0, 0xb, 0x4, 0x7f, 0x20, 0x1, 0x20, 0x2, 0x2a, 0x2, 0x1c, 0x60, 0x5, 0x41, 0x0, 0xb, 0x4, 0x7f, 0x20, 0x1, 0x20, 0x2, 0x2a, 0x2, 0x20, 0x5f, 0x5, 0x41, 0x0, 0xb, 0x4, 0x40, 0x20, 0x4, 0x20, 0x2, 0x28, 0x2, 0x0, 0x10, 0x2e, 0xb, 0x20, 0x5, 0x41, 0x1, 0x6a, 0x21, 0x5, 0xc, 0x1, 0xb, 0xb, 0x23, 0x11, 0x41, 0x10, 0x6a, 0x24, 0x11, 0x20, 0x4, 0xb, 0x49, 0x1, 0x1, 0x7f, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x20, 0x0, 0x41, 0xfc, 0xff, 0xff, 0xff, 0x3, 0x4b, 0x4, 0x40, 0x41, 0xb0, 0xb, 0x41, 0xe0, 0xb, 0x41, 0x31, 0x41, 0x2b, 0x10, 0x0, 0x0, 0xb, 0x23, 0x11, 0x20, 0x0, 0x41, 0x0, 0x10, 0x19, 0x22, 0x1, 0x36, 0x2, 0x0, 0x20, 0x1, 0x20, 0x0, 0x10, 0x18, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x20, 0x1, 0xb, 0xd5, 0x1, 0x1, 0x3, 0x7f, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x1, 0x20, 0x1, 0x10, 0x21, 0x22, 0x4, 0x10, 0x22, 0x22, 0x3, 0x4, 0x40, 0x20, 0x3, 0x20, 0x2, 0x10, 0x1, 0x20, 0x0, 0x20, 0x2, 0x41, 0x1, 0x10, 0x1a, 0x5, 0x20, 0x0, 0x28, 0x2, 0x10, 0x20, 0x0, 0x28, 0x2, 0xc, 0x46, 0x4, 0x40, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x14, 0x20, 0x0, 0x28, 0x2, 0xc, 0x41, 0x3, 0x6c, 0x41, 0x4, 0x6d, 0x48, 0x4, 0x7f, 0x20, 0x0, 0x28, 0x2, 0x4, 0x5, 0x20, 0x0, 0x28, 0x2, 0x4, 0x41, 0x1, 0x74, 0x41, 0x1, 0x72, 0xb, 0x10, 0x24, 0xb, 0x23, 0x11, 0x20, 0x0, 0x28, 0x2, 0x8, 0x22, 0x3, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x10, 0x22, 0x5, 0x41, 0x1, 0x6a, 0x10, 0x17, 0x20, 0x3, 0x20, 0x5, 0x41, 0xc, 0x6c, 0x6a, 0x22, 0x3, 0x20, 0x1, 0x10, 0xe, 0x20, 0x3, 0x20, 0x2, 0x10, 0x1, 0x20, 0x0, 0x20, 0x2, 0x41, 0x1, 0x10, 0x1a, 0x20, 0x0, 0x20, 0x0, 0x28, 0x2, 0x14, 0x41, 0x1, 0x6a, 0x10, 0x1d, 0x20, 0x3, 0x20, 0x0, 0x28, 0x2, 0x0, 0x20, 0x4, 0x20, 0x0, 0x28, 0x2, 0x4, 0x71, 0x41, 0x2, 0x74, 0x6a, 0x22, 0x0, 0x28, 0x2, 0x0, 0x10, 0x2, 0x20, 0x0, 0x20, 0x3, 0x36, 0x2, 0x0, 0xb, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0xb, 0x54, 0x1, 0x1, 0x7f, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x23, 0x11, 0x41, 0x0, 0x41, 0x0, 0x10, 0x19, 0x22, 0x1, 0x36, 0x2, 0x0, 0x41, 0x10, 0x20, 0x0, 0x10, 0x19, 0x22, 0x0, 0x20, 0x1, 0x36, 0x2, 0x0, 0x20, 0x0, 0x20, 0x1, 0x41, 0x0, 0x10, 0x1a, 0x20, 0x0, 0x20, 0x1, 0x36, 0x2, 0x4, 0x20, 0x0, 0x41, 0x0, 0x36, 0x2, 0x8, 0x20, 0x0, 0x41, 0x0, 0x36, 0x2, 0xc, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x20, 0x0, 0xb, 0x6d, 0x1, 0x2, 0x7f, 0x23, 0x11, 0x41, 0x8, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x42, 0x0, 0x37, 0x3, 0x0, 0x23, 0x11, 0x41, 0x10, 0x41, 0xc, 0x10, 0x19, 0x22, 0x0, 0x36, 0x2, 0x0, 0x20, 0x0, 0x41, 0x0, 0x10, 0x1b, 0x20, 0x0, 0x41, 0x0, 0x10, 0x1, 0x20, 0x0, 0x41, 0x0, 0x10, 0x2, 0x20, 0x0, 0x41, 0x0, 0x10, 0x16, 0x23, 0x11, 0x41, 0x20, 0x41, 0x0, 0x10, 0x19, 0x22, 0x1, 0x36, 0x2, 0x4, 0x20, 0x1, 0x41, 0x20, 0x10, 0x18, 0x20, 0x0, 0x20, 0x1, 0x10, 0x1b, 0x20, 0x0, 0x20, 0x1, 0x10, 0x1, 0x20, 0x0, 0x41, 0x20, 0x10, 0x2, 0x20, 0x0, 0x41, 0x0, 0x10, 0x16, 0x23, 0x11, 0x41, 0x8, 0x6a, 0x24, 0x11, 0x20, 0x0, 0xb, 0x5d, 0x0, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x20, 0x1, 0x20, 0x0, 0x28, 0x2, 0xc, 0x4f, 0x4, 0x40, 0x41, 0xe0, 0x9, 0x41, 0xa0, 0xc, 0x41, 0xe3, 0x0, 0x41, 0x2a, 0x10, 0x0, 0x0, 0xb, 0x23, 0x11, 0x20, 0x0, 0x28, 0x2, 0x4, 0x20, 0x1, 0x41, 0x2, 0x74, 0x6a, 0x28, 0x2, 0x0, 0x22, 0x0, 0x36, 0x2, 0x0, 0x20, 0x0, 0x45, 0x4, 0x40, 0x41, 0xe0, 0xd, 0x41, 0xa0, 0xc, 0x41, 0xe7, 0x0, 0x41, 0x28, 0x10, 0x0, 0x0, 0xb, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x20, 0x0, 0xb, 0xd6, 0x1, 0x1, 0x1, 0x7f, 0x23, 0x11, 0x41, 0x4, 0x6b, 0x24, 0x11, 0x10, 0x3b, 0x23, 0x11, 0x41, 0x0, 0x36, 0x2, 0x0, 0x23, 0x11, 0x41, 0x24, 0x41, 0x8, 0x10, 0x19, 0x22, 0x5, 0x36, 0x2, 0x0, 0x20, 0x5, 0x41, 0x0, 0x10, 0xe, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x26, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x27, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x28, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x2f, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x30, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x31, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x32, 0x20, 0x5, 0x43, 0x0, 0x0, 0x0, 0x0, 0x10, 0x33, 0x20, 0x5, 0x20, 0x0, 0x10, 0xe, 0x20, 0x5, 0x20, 0x1, 0x10, 0x26, 0x20, 0x5, 0x20, 0x2, 0x10, 0x27, 0x20, 0x5, 0x20, 0x3, 0x10, 0x28, 0x20, 0x5, 0x20, 0x4, 0x10, 0x2f, 0x20, 0x5, 0x20, 0x5, 0x2a, 0x2, 0x4, 0x20, 0x3, 0x43, 0x0, 0x0, 0x0, 0x3f, 0x94, 0x22, 0x1, 0x93, 0x10, 0x30, 0x20, 0x5, 0x20, 0x5, 0x2a, 0x2, 0x4, 0x20, 0x1, 0x92, 0x10, 0x31, 0x20, 0x5, 0x20, 0x5, 0x2a, 0x2, 0x8, 0x20, 0x4, 0x43, 0x0, 0x0, 0x0, 0x3f, 0x94, 0x22, 0x1, 0x93, 0x10, 0x32, 0x20, 0x5, 0x20, 0x5, 0x2a, 0x2, 0x8, 0x20, 0x1, 0x92, 0x10, 0x33, 0x23, 0x11, 0x41, 0x4, 0x6a, 0x24, 0x11, 0x20, 0x5, 0xb, 0xb, 0xf1, 0x6, 0x21, 0x0, 0x41, 0x8c, 0x8, 0xb, 0x1, 0x3c, 0x0, 0x41, 0x98, 0x8, 0xb, 0x2f, 0x1, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x41, 0x0, 0x6c, 0x0, 0x6c, 0x0, 0x6f, 0x0, 0x63, 0x0, 0x61, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x20, 0x0, 0x74, 0x0, 0x6f, 0x0, 0x6f, 0x0, 0x20, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x72, 0x0, 0x67, 0x0, 0x65, 0x0, 0x41, 0xcc, 0x8, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xd8, 0x8, 0xb, 0x27, 0x1, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x72, 0x0, 0x74, 0x0, 0x2f, 0x0, 0x69, 0x0, 0x74, 0x0, 0x63, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xcc, 0x9, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xd8, 0x9, 0xb, 0x2b, 0x1, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x0, 0x49, 0x0, 0x6e, 0x0, 0x64, 0x0, 0x65, 0x0, 0x78, 0x0, 0x20, 0x0, 0x6f, 0x0, 0x75, 0x0, 0x74, 0x0, 0x20, 0x0, 0x6f, 0x0, 0x66, 0x0, 0x20, 0x0, 0x72, 0x0, 0x61, 0x0, 0x6e, 0x0, 0x67, 0x0, 0x65, 0x0, 0x41, 0x8c, 0xa, 0xb, 0x1, 0x2c, 0x0, 0x41, 0x98, 0xa, 0xb, 0x1b, 0x1, 0x0, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x72, 0x0, 0x74, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xdc, 0xa, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xe8, 0xa, 0xb, 0x25, 0x1, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x72, 0x0, 0x74, 0x0, 0x2f, 0x0, 0x74, 0x0, 0x6c, 0x0, 0x73, 0x0, 0x66, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0x9c, 0xb, 0xb, 0x1, 0x2c, 0x0, 0x41, 0xa8, 0xb, 0xb, 0x23, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x49, 0x0, 0x6e, 0x0, 0x76, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x64, 0x0, 0x20, 0x0, 0x6c, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x67, 0x0, 0x74, 0x0, 0x68, 0x0, 0x41, 0xcc, 0xb, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xd8, 0xb, 0xb, 0x2d, 0x1, 0x0, 0x0, 0x0, 0x26, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x61, 0x0, 0x72, 0x0, 0x72, 0x0, 0x61, 0x0, 0x79, 0x0, 0x62, 0x0, 0x75, 0x0, 0x66, 0x0, 0x66, 0x0, 0x65, 0x0, 0x72, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0x8c, 0xc, 0xb, 0x1, 0x2c, 0x0, 0x41, 0x98, 0xc, 0xb, 0x21, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x61, 0x0, 0x72, 0x0, 0x72, 0x0, 0x61, 0x0, 0x79, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xbc, 0xc, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xc8, 0xc, 0xb, 0x2b, 0x1, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x0, 0x4b, 0x0, 0x65, 0x0, 0x79, 0x0, 0x20, 0x0, 0x64, 0x0, 0x6f, 0x0, 0x65, 0x0, 0x73, 0x0, 0x20, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x74, 0x0, 0x20, 0x0, 0x65, 0x0, 0x78, 0x0, 0x69, 0x0, 0x73, 0x0, 0x74, 0x0, 0x41, 0xfc, 0xc, 0xb, 0x1, 0x2c, 0x0, 0x41, 0x88, 0xd, 0xb, 0x1d, 0x1, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x62, 0x0, 0x2f, 0x0, 0x6d, 0x0, 0x61, 0x0, 0x70, 0x0, 0x2e, 0x0, 0x74, 0x0, 0x73, 0x0, 0x41, 0xac, 0xd, 0xb, 0x1, 0x1c, 0x0, 0x41, 0xb8, 0xd, 0xb, 0x9, 0xb, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x1, 0x0, 0x41, 0xcc, 0xd, 0xb, 0x1, 0x7c, 0x0, 0x41, 0xd8, 0xd, 0xb, 0x65, 0x1, 0x0, 0x0, 0x0, 0x5e, 0x0, 0x0, 0x0, 0x45, 0x0, 0x6c, 0x0, 0x65, 0x0, 0x6d, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x74, 0x0, 0x20, 0x0, 0x74, 0x0, 0x79, 0x0, 0x70, 0x0, 0x65, 0x0, 0x20, 0x0, 0x6d, 0x0, 0x75, 0x0, 0x73, 0x0, 0x74, 0x0, 0x20, 0x0, 0x62, 0x0, 0x65, 0x0, 0x20, 0x0, 0x6e, 0x0, 0x75, 0x0, 0x6c, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x62, 0x0, 0x6c, 0x0, 0x65, 0x0, 0x20, 0x0, 0x69, 0x0, 0x66, 0x0, 0x20, 0x0, 0x61, 0x0, 0x72, 0x0, 0x72, 0x0, 0x61, 0x0, 0x79, 0x0, 0x20, 0x0, 0x69, 0x0, 0x73, 0x0, 0x20, 0x0, 0x68, 0x0, 0x6f, 0x0, 0x6c, 0x0, 0x65, 0x0, 0x79, 0x0, 0x41, 0xcc, 0xe, 0xb, 0x1, 0x1c, 0x0, 0x41, 0xd8, 0xe, 0xb, 0x9, 0xd, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2, 0x0, 0x41, 0xec, 0xe, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xf8, 0xe, 0xb, 0x31, 0x1, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x62, 0x0, 0x6a, 0x0, 0x65, 0x0, 0x63, 0x0, 0x74, 0x0, 0x20, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x72, 0x0, 0x65, 0x0, 0x61, 0x0, 0x64, 0x0, 0x79, 0x0, 0x20, 0x0, 0x70, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x6e, 0x0, 0x65, 0x0, 0x64, 0x0, 0x41, 0xac, 0xf, 0xb, 0x1, 0x3c, 0x0, 0x41, 0xb8, 0xf, 0xb, 0x2f, 0x1, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x62, 0x0, 0x6a, 0x0, 0x65, 0x0, 0x63, 0x0, 0x74, 0x0, 0x20, 0x0, 0x69, 0x0, 0x73, 0x0, 0x20, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x74, 0x0, 0x20, 0x0, 0x70, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x6e, 0x0, 0x65, 0x0, 0x64, 0x0, 0x41, 0xf0, 0xf, 0xb, 0xd, 0xe, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x41, 0x8c, 0x10, 0xb, 0x3b, 0x1, 0x1a, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x1, 0x9, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x41, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x41, 0x12, 0x0, 0x41, 0xd4, 0x10, 0xb, 0x2, 0x2, 0x9]);

        var _0x4a451b = _0x3196d6(0x161cd);

        const _0xf8b094 = _0x4a451b.players.local,
              _0x6531d2 = Symbol('id'),
              _0x312b98 = Symbol('frameId'),
              _0x12049a = {
          'distance': 0x64,
          'positionResolver': (_0x2d4e1e, _0x3d48b1) => _0x2d4e1e,
          'streamDelay': 0x0,
          'isCheck3d': false,
          'type': 'point',
          'sizeResolver': (_0x1cc837, _0x83c6b1) => ({
            'width': 0x0,
            'height': 0x0
          })
        },
              _0x34400a = class {
          constructor(_0x280e09 = {}) {
            _0x280e09 = { ..._0x12049a,
              ..._0x280e09
            }, this.positionResolver = _0x280e09.positionResolver, this.sizeResolver = _0x280e09.sizeResolver, this.dataItems = _0x280e09.dataItems, this.chunkSize = _0x280e09.chunkSize, this.distance = _0x280e09.distance, this.streamDelay = _0x280e09.streamDelay, this.useDelayMode = _0x280e09.streamDelay > 0x0, this.isCheck3d = _0x280e09.isCheck3d, this.lastUpdateStream = Date.now(), this.activeStremer = !this.useDelayMode, this.currentFrame = 0x0, this.currentItems = new Set(), this.currentItemsIds = new Set(), this.prevItemsIds = new Set(), this.newItemsIds = new Set(), this.queueEnterIds = new Set(), this.itemsMap = new Map(), this.ready = false, this.type = _0x280e09.type, this.__init = this.__init.bind(this), _0x4a451b.events.add('auth.client.onPlayerAuthAccount', this.__init);
          }

          ['getFreeId']() {
            let _0x3cb808 = null;

            do {
              _0x3cb808 = _0x5d5241.api.randomInteger(0x0, 0x989680);
            } while (this.itemsMap.has(_0x3cb808));

            return _0x3cb808;
          }

          async ['__init']() {
            if (this.ready || !this.dataItems) return;

            const {
              exports: {
                __getArray: _0x1d29fc,
                __pin: _0x5e57f6,
                __unpin: _0x10e98b,
                addPosition: _0x442f3e,
                removePostion: _0x5621b5,
                check2d: _0x22ec85,
                check3d: _0x51b497,
                addRectangle: _0x22b3c6,
                removeRectangle: _0x4741ae,
                checkRectangle: _0x11485d
              }
            } = _0x3a1475.ZP.instantiateSync(_0x52b571, {}),
                  _0x517b75 = _0x5d5241.api.chunkArray(this.dataItems, this.chunkSize);

            for (let _0x2d790a = 0x0; _0x2d790a < _0x517b75.length; _0x2d790a++) {
              const _0xd7b2f7 = _0x517b75[_0x2d790a];

              for (let _0x5a6733 = 0x0; _0x5a6733 < _0xd7b2f7.length; _0x5a6733++) {
                const _0x49183d = _0xd7b2f7[_0x5a6733];
                _0x49183d[_0x6531d2] = this.getFreeId(), _0x49183d[_0x312b98] = _0x2d790a, this.itemsMap.set(_0x49183d[_0x6531d2], _0x49183d);

                const _0x22c280 = this.positionResolver(_0x49183d, _0x5a6733);

                if ('point' === this.type) _0x442f3e(_0x2d790a, _0x49183d[_0x6531d2], _0x22c280.x, _0x22c280.y, _0x22c280.z);else {
                  if ('rectangle' === this.type) {
                    const {
                      width: _0x202bc3,
                      height: _0x3bf92f
                    } = this.sizeResolver(_0x49183d, _0x5a6733);

                    _0x22b3c6(_0x2d790a, _0x49183d[_0x6531d2], _0x22c280.x, _0x22c280.y, _0x202bc3, _0x3bf92f);
                  }
                }
              }
            }

            this.splittedDataItems = _0x517b75, this.check2d = _0x22ec85, this.check3d = _0x51b497, this.check = this.isCheck3d ? _0x51b497 : _0x22ec85, this.addPosition = _0x442f3e, this.removePostion = _0x5621b5, this.checkRectangle = _0x11485d, this.addRectangle = _0x22b3c6, this.removeRectangle = _0x4741ae, this.__getArray = _0x1d29fc, this.__pin = _0x5e57f6, this.__unpin = _0x10e98b, this.ready = true;
          }

          ['addNewItem'](_0x1fdcc7) {
            const _0x4ab1a6 = this.positionResolver(_0x1fdcc7);

            let _0x12580c = this.splittedDataItems.find(_0x1dc0e7 => _0x1dc0e7.length < this.chunkSize),
                _0x15edd3 = this.splittedDataItems.indexOf(_0x12580c);

            if (_0x12580c || (_0x12580c = [], _0x15edd3 = this.splittedDataItems.length, this.splittedDataItems[_0x15edd3] = _0x12580c), _0x1fdcc7[_0x6531d2] = this.getFreeId(), _0x1fdcc7[_0x312b98] = _0x15edd3, this.itemsMap.set(_0x1fdcc7[_0x6531d2], _0x1fdcc7), _0x12580c.push(_0x1fdcc7), 'point' === this.type) this.addPosition(_0x15edd3, _0x1fdcc7[_0x6531d2], _0x4ab1a6.x, _0x4ab1a6.y, _0x4ab1a6.z);else {
              if ('rectangle' === this.type) {
                const {
                  width: _0x5e6bc0,
                  height: _0x2b782b
                } = this.sizeResolver(_0x1fdcc7);
                this.addRectangle(_0x15edd3, _0x1fdcc7[_0x6531d2], _0x4ab1a6.x, _0x4ab1a6.y, _0x5e6bc0, _0x2b782b);
              }
            }
          }

          ['removeItem'](_0x388d4f) {
            if ('number' != typeof _0x388d4f[_0x312b98] || 'number' != typeof _0x388d4f[_0x6531d2] || !this.itemsMap.has(_0x388d4f[_0x6531d2])) return;
            const _0x50ae76 = _0x388d4f[_0x312b98];
            'point' === this.type ? this.removePostion(_0x50ae76, _0x388d4f[_0x6531d2]) : 'rectangle' === this.type && this.removeRectangle(_0x50ae76, _0x388d4f[_0x6531d2]), this.itemsMap.delete(_0x50ae76), this.splittedDataItems[_0x50ae76] = this.splittedDataItems[_0x50ae76].filter(_0x51810c => _0x51810c !== _0x388d4f), this.splittedDataItems[_0x50ae76].length || (this.splittedDataItems = this.splittedDataItems.filter(_0x545950 => _0x545950 !== this.splittedDataItems[_0x50ae76]));
          }

          ['update'](_0x26efa9 = Date.now(), _0x558417 = false) {
            if (this.ready && (this.useDelayMode && _0x26efa9 >= this.lastUpdateStream + this.streamDelay && (this.lastUpdateStream = _0x26efa9, this.activeStremer || (this.activeStremer = true, this.currentFrame = 0x0, this.prevItemsIds = new Set(this.currentItemsIds), this.newItemsIds.clear())), _0x558417 && (this.activeStremer = true, this.currentFrame = 0x0, this.prevItemsIds = new Set(this.currentItemsIds), this.newItemsIds.clear()), this.activeStremer)) {
              const _0x54d0fb = this.currentFrame++;

              if (_0x54d0fb < this.splittedDataItems.length) {
                const _0x443ec4 = _0xf8b094.position;
                let _0x914970 = null;
                'point' === this.type ? _0x914970 = this.__pin(this.check(_0x443ec4.x, _0x443ec4.y, _0x443ec4.z, _0x54d0fb, this.distance)) : 'rectangle' === this.type && (_0x914970 = this.__pin(this.checkRectangle(_0x443ec4.x, _0x443ec4.y, _0x54d0fb)));

                const _0xc40caf = this.__getArray(_0x914970);

                this.__unpin(_0x914970);

                for (let _0x11938c = 0x0; _0x11938c < _0xc40caf.length; _0x11938c++) {
                  const _0x51adc5 = _0xc40caf[_0x11938c];
                  this.prevItemsIds.has(_0x51adc5) || this.queueEnterIds.add(_0x51adc5), this.newItemsIds.add(_0x51adc5);
                }
              } else {
                this.currentItemsIds = new Set(this.newItemsIds), this.currentItems.clear();

                for (const _0x334857 of this.currentItemsIds) this.currentItems.add(this.itemsMap.get(_0x334857));

                let _0x79da2 = false;

                if ('function' == typeof this.onExit) {
                  for (const _0xdf27e3 of this.prevItemsIds) this.currentItemsIds.has(_0xdf27e3) || (this.onExit(this.itemsMap.get(_0xdf27e3), _0xdf27e3), _0x79da2 = true);
                }

                if (_0x79da2 && 'function' == typeof this.onExitComplete && this.onExitComplete(), 'function' == typeof this.onEnter) {
                  for (const _0x546cb1 of this.queueEnterIds) this.onEnter(this.itemsMap.get(_0x546cb1), _0x546cb1);
                }

                this.queueEnterIds.clear(), this.useDelayMode ? (this.lastUpdateStream = _0x26efa9, this.activeStremer = false) : (this.currentFrame = 0x0, this.prevItemsIds = new Set(this.currentItemsIds), this.newItemsIds.clear());
              }
            }
          }

        };
      },
      0xef1: (_0x27f68b, _0xbe5b27, _0x128d04) => {
        var _0x501bfd = _0x128d04(0x161cd);

        const _0x1569dd = _0x501bfd.players.local;
        _0x501bfd.events.add('setVehiclePositionWithPlayer', (_0x2b49b7, _0x321cc1, _0x240729, _0x19515c, _0x242df8) => {
          _0x2b49b7.setCoordsNoOffset(_0x321cc1, _0x240729, _0x19515c, false, false, false), _0x2b49b7.setRotation(0x0, 0x0, _0x242df8, 0x2, true), _0x1569dd.__vehicle__ = _0x2b49b7;
        }), _0x501bfd.events.add('render', () => {
          _0x1569dd.__vehicle__ && _0x501bfd.vehicles.exists(_0x1569dd.__vehicle__) && 0x0 !== _0x1569dd.__vehicle__.handle && (_0x1569dd.taskEnterVehicle(_0x1569dd.__vehicle__.handle, 0x1, -0x1, 0x2, 0x10, 0x0), _0x1569dd.vehicle && delete _0x1569dd.__vehicle__);
        });
      },
      0xb342: (_0x387195, _0x1989e1, _0x468ad3) => {
        const a0_0x2c2278 = {
          _0x43f709: 0xffb,
          _0x24d11f: 0x14d2,
          _0x1a61fc: 0x1a5,
          _0x1b1b89: 0x1c0e,
          _0x122d83: 0x14d2,
          _0x158544: 0x1a5,
          _0x130a75: 0x265c,
          _0x1a60d1: 0x14d2,
          _0x646363: 0x1a5,
          _0x4be054: 0x14d2,
          _0x152adb: 0x2136,
          _0x190161: 0x46f,
          _0x799f27: 0x14d2
        },
              a0_0x112748 = {
          _0x55ee54: 0x14d2,
          _0x3437b6: 0x1008
        };

        var _0x2ced20 = _0x468ad3(0x161cd);

        let _0x37fa63 = 0x0,
            _0x3f63c6 = 0x0,
            _0x3d0b52 = 0x0,
            _0x233c7e = 0x0,
            _0x44dc5d = 0x0,
            _0x58a387 = 0x0,
            _0x213653 = 0x0,
            _0xc62db9 = 0x0,
            _0x122b13 = 0x0,
            _0x393769 = 0x0,
            _0x1911d4 = 0x0;
        setInterval(() => {
          _0x2ced20.events.call('render2');
        }, 0x0), setInterval(() => {
          _0x2ced20.events.call('render15');
        }, 0xf), setInterval(() => {
          _0x2ced20.events.call('render30');
        }, 0x1e), setInterval(() => {
          const _0x320651 = Date.now();

          _0x320651 - _0x1911d4 >= 0x493e0 && (_0x2ced20.events.call('time.every5Min'), _0x1911d4 = _0x320651), _0x320651 - _0x393769 >= 0xea60 && (_0x2ced20.events.call('time.everyMinute'), _0x393769 = _0x320651), _0x320651 - _0x122b13 >= 0x7530 && (_0x2ced20.events.call('time.every30Sec'), _0x122b13 = _0x320651), _0x320651 - _0xc62db9 >= 0x2710 && (_0x2ced20.events.call('time.every10Sec'), _0xc62db9 = _0x320651), _0x320651 - _0x213653 >= 0x1388 && (_0x2ced20.events.call('time.every5Sec'), _0x213653 = _0x320651), _0x320651 - _0x58a387 >= 0x7d0 && (_0x2ced20.events.call('time.every2Sec'), _0x58a387 = _0x320651), _0x320651 - _0x44dc5d >= 0x3e8 && (_0x2ced20.events.call('time.everySec'), _0x44dc5d = _0x320651), _0x320651 - _0x233c7e >= 0x1f4 && (_0x2ced20.events.call('time.every05Sec'), _0x233c7e = _0x320651), _0x320651 - _0x3d0b52 >= 0xfa && (_0x2ced20.events.call('time.every025Sec'), _0x3d0b52 = _0x320651), _0x320651 - _0x3f63c6 >= 0xc8 && (_0x2ced20.events.call('time.every02Sec'), _0x3f63c6 = _0x320651), _0x320651 - _0x37fa63 >= 0x64 && (_0x2ced20.events.call('time.every01Sec'), _0x37fa63 = _0x320651);
        }, 0x32);
      },
      0x176d8: (_0xe7b5d9, _0x3b133d, _0x95e684) => {
        'use strict';

        const a0_0x32a1c1 = {
          _0x32927c: 0xa7d,
          _0x323bcc: 0xa12,
          _0x36d336: 0x1a3,
          _0x346c77: 0x20c9
        },
              a0_0x38586f = {
          _0x3d7e28: 0x2323,
          _0x311aec: 0x2488,
          _0x436710: 0x1a3,
          _0x501456: 0xc0c,
          _0x16f209: 0x1d2,
          _0x45a284: 0x1a3,
          _0x46944f: 0x76e,
          _0x129233: 0x2143
        },
              a0_0x13dd79 = {
          _0x4a207c: 0x2098
        },
              a0_0x2eb002 = {
          _0x27dcb4: 0x145f,
          _0x444bac: 0xbb1,
          _0x368a4c: 0x145f,
          _0x90bfb9: 0xffb,
          _0xfe9b76: 0x19d2,
          _0x52c9d8: 0xecb,
          _0x509c3b: 0xe74,
          _0x257022: 0xd9e,
          _0x31d209: 0x180b,
          _0x425ef4: 0x30a,
          _0x37c925: 0xa12,
          _0x3f89c5: 0x2098,
          _0x16363f: 0x1edc,
          _0x25bcbe: 0xac2,
          _0x28474e: 0x19e6,
          _0x5285e7: 0x19d6,
          _0x59df01: 0x19d6
        };
        _0x95e684.r(_0x3b133d), _0x95e684.d(_0x3b133d, {
          'TimerBar': () => _0x21803a
        });

        var _0x555d49 = _0x95e684(0x16a21),
            _0xaf49b9 = _0x95e684(0x12a76),
            _0x39e8ff = _0x95e684(0x161cd);

        let _0x11df27 = [];

        class _0x21803a {
          static get ['typesEnum']() {
            return [null, 'progressBar', 'playerScore', 'stages'];
          }

          static ['hashId'](_0x2c7b20, _0x2494cf = 0x0) {
            let _0x486b5d = 0xdeadbeef ^ _0x2494cf,
                _0x1d7c52 = 0x41c6ce57 ^ _0x2494cf;

            for (let _0x35d2d7, _0x1923eb = 0x0; _0x1923eb < _0x2c7b20.length; _0x1923eb++) _0x35d2d7 = _0x2c7b20.charCodeAt(_0x1923eb), _0x486b5d = Math.imul(_0x486b5d ^ _0x35d2d7, 0x9e3779b1), _0x1d7c52 = Math.imul(_0x1d7c52 ^ _0x35d2d7, 0x5f356495);

            return _0x486b5d = Math.imul(_0x486b5d ^ _0x486b5d >>> 0x10, 0x85ebca6b) ^ Math.imul(_0x1d7c52 ^ _0x1d7c52 >>> 0xd, 0xc2b2ae35), _0x1d7c52 = Math.imul(_0x1d7c52 ^ _0x1d7c52 >>> 0x10, 0x85ebca6b) ^ Math.imul(_0x486b5d ^ _0x486b5d >>> 0xd, 0xc2b2ae35), 0x100000000 * (0x1fffff & _0x1d7c52) + (_0x486b5d >>> 0x0);
          }

          constructor(_0xe621f3, _0x19d71e = null, _0x259b3e = {}) {
            this.title = _0x555d49.api.language.translatePlayer(_0xe621f3, {}), this.id = _0x21803a.hashId('' + this.title + Date.now() + _0x11df27.length), this._params = _0x259b3e, this._pbarValue = _0x259b3e.value || 0x0, this._textColor = _0x259b3e.textColor || [0xf0, 0xf0, 0xf0, 0xff], this._pbarBgColor = _0x259b3e.pbarBgColor || [0x9b, 0x9b, 0x9b, 0xff], this._pbarFgColor = _0x259b3e.pbarFgColor || [0xff, 0xff, 0xff, 0xff], this._title = this.title, _0x21803a.typesEnum.includes(_0x19d71e) ? this.type = _0x19d71e : (console.log('[TimerBar] warn: type ' + _0x19d71e + ' does not exist. Default type \'null\' will be used instead'), this.type = null), null != _0x259b3e.visible ? this.visible = !!_0x259b3e.visible : this.visible = true;
          }

          get ['title']() {
            return this._title;
          }

          set ['title'](_0x173c90) {
            this._title = _0x173c90, _0xaf49b9.globalBrowser.emit('main_updateTimebarProps', {
              'id': this.id,
              '_title': _0x173c90
            });
          }

          get ['value']() {
            return this._pbarValue;
          }

          set ['value'](_0x1c8c3) {
            'number' == typeof _0x1c8c3 && (_0x1c8c3 = Math.min(Math.max(_0x1c8c3, 0x0), 0x1)), this._pbarValue = _0x1c8c3, _0xaf49b9.globalBrowser.emit('main_updateTimebarProps', {
              'id': this.id,
              '_pbarValue': _0x1c8c3
            });
          }

          get ['visible']() {
            return this._enabled;
          }

          set ['visible'](_0x5ce327) {
            let _0x907998 = _0x11df27.indexOf(this);

            _0x5ce327 && -0x1 === _0x907998 ? (_0xaf49b9.globalBrowser.emit('main_pushTimebar', this), _0x11df27.push(this)) : -0x1 !== _0x907998 && (_0xaf49b9.globalBrowser.emit('main_deleteTimebar', this.id), _0x11df27.splice(_0x907998, 0x1)), this._enabled = _0x5ce327;
          }

          get ['textColor']() {
            return this._textColor;
          }

          set ['textColor'](_0x961e43) {
            if (Array.isArray(_0x961e43)) this._textColor = _0x961e43;else {
              let _0x3bce0d = _0x39e8ff.game.ui.getHudColour(_0x961e43, 0x0, 0x0, 0x0, 0x0);

              this._textColor = [_0x3bce0d.r, _0x3bce0d.g, _0x3bce0d.b, _0x3bce0d.a];
            }

            _0xaf49b9.globalBrowser.emit('main_updateTimebarProps', {
              'id': this.id,
              '_textColor': this.textColor
            });
          }

          get ['pbarBgColor']() {
            return this._pbarBgColor;
          }

          set ['pbarBgColor'](_0x1aa066) {
            if (Array.isArray(_0x1aa066)) this._pbarBgColor = _0x1aa066;else {
              let _0x43705e = _0x39e8ff.game.ui.getHudColour(_0x1aa066, 0x0, 0x0, 0x0, 0x0);

              this._pbarBgColor = [_0x43705e.r, _0x43705e.g, _0x43705e.b, _0x43705e.a];
            }

            _0xaf49b9.globalBrowser.emit('main_updateTimebarProps', {
              'id': this.id,
              '_pbarBgColor': this._pbarBgColor
            });
          }

          get ['pbarFgColor']() {
            return this._pbarFgColor;
          }

          set ['pbarFgColor'](_0x60e668) {
            if (Array.isArray(_0x60e668)) this._pbarFgColor = _0x60e668;else {
              let _0x2af5f3 = _0x39e8ff.game.ui.getHudColour(_0x2af5f3, 0x0, 0x0, 0x0, 0x0);

              this._pbarFgColor = [_0x2af5f3.r, _0x2af5f3.g, _0x2af5f3.b, _0x2af5f3.a];
            }

            _0xaf49b9.globalBrowser.emit('main_updateTimebarProps', {
              'id': this.id,
              '_pbarFgColor': this._pbarFgColor
            });
          }

        }
      },
      0x1032: (_0x5c9f09, _0x4eac87, _0x4458af) => {
        _0x4458af(0x987), _0x4458af(0x12e5e), _0x4458af(0x7515), _0x4458af(0x172e), _0x4458af(0x12a76), _0x4458af(0x7df9), _0x4458af(0xb73), _0x4458af(0x63e4), _0x4458af(0x105ab), _0x4458af(0x12d88), _0x4458af(0x1657), _0x4458af(0xb5d5), _0x4458af(0xed37), _0x4458af(0x27d8), _0x4458af(0x1137f), _0x4458af(0x2123), _0x4458af(0x12e5e), _0x4458af(0x853e), _0x4458af(0x9911), _0x4458af(0xa5f6), _0x4458af(0x11351), _0x4458af(0x8c8c), _0x4458af(0x45c6), _0x4458af(0x4386), _0x4458af(0x2535), _0x4458af(0xfd0c), _0x4458af(0x5337), _0x4458af(0x18fa);
      },
      0x116b: (_0x31543f, _0x23df9a, _0x50ed96) => {
        'use strict';

        const a0_0x180855 = {
          _0x245d64: 0x535,
          _0x20d6c1: 0x1d55
        },
              a0_0x4be481 = {
          _0x424dab: 0x535,
          _0x1b7604: 0x59d
        },
              a0_0x4d81cc = {
          _0x3d68d7: 0x253d,
          _0x553d80: 0x535,
          _0x101a6b: 0xc3d
        };

        _0x50ed96.r(_0x23df9a);

        var _0x3ca105 = _0x50ed96(0x16a21),
            _0xcafaf3 = _0x50ed96(0x161cd);

        const _0x1a5d27 = _0xcafaf3.colshapes.newSphere(-1029.2, -2486.56, 20.16, 0x1);

        _0x1a5d27.marker = _0xcafaf3.markers.new(0x1, new _0xcafaf3.Vector3(-1029.2, -2486.56, 19.16), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x34863b = _0xcafaf3.colshapes.newSphere(4494.26, -4525.62, 4.41, 0x1);

        let _0x5a5b10;

        _0x34863b.marker = _0xcafaf3.markers.new(0x1, new _0xcafaf3.Vector3(4494.26, -4525.62, 3.41), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        }), _0xcafaf3.events.add('playerEnterColshape', async _0x20cfcd => {
          if (_0x3ca105.api.isAuthed()) return _0x1a5d27 === _0x20cfcd || _0x34863b === _0x20cfcd ? (_0x5a5b10 = _0x20cfcd, void _0x3ca105.api.displayHelpStringTrans('displayHelpString.toSeeAirlineTickets', false, true, 0x1388)) : undefined;
        }), _0xcafaf3.events.add('playerExitColshape', async _0x47f43f => {
          if (_0x3ca105.api.isAuthed()) return _0x1a5d27 === _0x47f43f || _0x34863b === _0x47f43f ? (_0x5a5b10 = null, void _0xcafaf3.game.ui.clearHelp(true)) : undefined;
        }), _0xcafaf3.events.add('keys.e', async () => _0x5a5b10 && _0x5a5b10 == _0x1a5d27 ? (_0xcafaf3.game.ui.clearHelp(true), _0x5a5b10 = false, void _0xcafaf3.events.callRemote('3445189604', 0x1)) : _0x5a5b10 && _0x5a5b10 == _0x34863b ? (_0xcafaf3.game.ui.clearHelp(true), _0x5a5b10 = false, void _0xcafaf3.events.callRemote('3445189604', 0x2)) : undefined), _0xcafaf3.events.add('interiors.airport.taskTeleport', _0x357a45 => {
          0x1 === _0x357a45 && _0x3ca105.api.teleportAndLoad(new _0xcafaf3.Vector3(4495.87, -4519.81, 4.41), 0xb4, {
            'fadeTime': 0x9c4
          }), 0x2 === _0x357a45 && _0x3ca105.api.teleportAndLoad(new _0xcafaf3.Vector3(-1029.2, -2486.56, 20.16), 0xb4, {
            'fadeTime': 0x9c4
          });
        });
      },
      0x171a3: (_0x463cea, _0x2f83c0, _0x213d22) => {
        'use strict';

        const a0_0x2dc84f = {
          _0x389e5b: 0x535,
          _0x4d02e1: 0x535,
          _0x4b44ba: 0x1ea6,
          _0x537e9e: 0x1d55,
          _0x4ab095: 0x1d55,
          _0x1cec5b: 0x1d55,
          _0x39bd92: 0x1ea6,
          _0x5e9286: 0x13f7
        },
              a0_0x5094d2 = {
          _0xf3e0fb: 0x253d
        },
              a0_0x73e5d9 = {
          _0x8559b2: 0x535,
          _0x497860: 0xd6b,
          _0x1abb74: 0x535,
          _0xafbbf5: 0xf86,
          _0x25aeda: 0xf86,
          _0x819349: 0xa81
        };

        _0x213d22.r(_0x2f83c0);

        var _0x2dba6e = _0x213d22(0x16a21),
            _0x55eaac = _0x213d22(0x161cd);

        const _0x450aac = _0x55eaac.colshapes.newSphere(327.24, -603.34, 43.28, 0x1, 0x0);

        _0x450aac.marker = _0x55eaac.markers.new(0x1, new _0x55eaac.Vector3(327.24, -603.34, 42.28), 0x1, {
          'direction': new _0x55eaac.Vector3(327.24, -603.34, 43.28),
          'rotation': new _0x55eaac.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x2f6928 = _0x55eaac.colshapes.newSphere(338.99, -583.98, 74.16, 0x1, 0x0);

        _0x2f6928.marker = _0x55eaac.markers.new(0x1, new _0x55eaac.Vector3(338.99, -583.98, 73.16), 0x1, {
          'direction': new _0x55eaac.Vector3(338.99, -583.98, 74.16),
          'rotation': new _0x55eaac.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x3006da = _0x55eaac.colshapes.newSphere(339.77, -584.73, 28.79, 0x1, 0x0);

        _0x3006da.marker = _0x55eaac.markers.new(0x1, new _0x55eaac.Vector3(339.77, -584.73, 27.79), 0x1, {
          'direction': new _0x55eaac.Vector3(339.77, -584.73, 28.79),
          'rotation': new _0x55eaac.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x5a03b3 = _0x55eaac.colshapes.newSphere(330.06, -601.01, 43.28, 0x1, 0x0);

        _0x5a03b3.marker = _0x55eaac.markers.new(0x1, new _0x55eaac.Vector3(330.06, -601.01, 42.28), 0x1, {
          'direction': new _0x55eaac.Vector3(330.06, -601.01, 43.28),
          'rotation': new _0x55eaac.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x2df596 = _0x55eaac.colshapes.newSphere(345.93, -582.68, 28.79, 0x1, 0x0);

        _0x2df596.marker = _0x55eaac.markers.new(0x1, new _0x55eaac.Vector3(345.93, -582.68, 27.79), 0x1, {
          'direction': new _0x55eaac.Vector3(345.93, -582.68, 28.79),
          'rotation': new _0x55eaac.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x41ee8b = _0x55eaac.colshapes.newSphere(332.05, -595.69, 43.28, 0x1, 0x0);

        let _0x404f2f;

        _0x41ee8b.marker = _0x55eaac.markers.new(0x1, new _0x55eaac.Vector3(332.05, -595.69, 42.28), 0x1, {
          'direction': new _0x55eaac.Vector3(332.05, -595.69, 43.28),
          'rotation': new _0x55eaac.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        }), _0x55eaac.events.add('playerEnterColshape', _0x4e2ffc => {
          if (_0x2dba6e.api.isAuthed()) return _0x4e2ffc === _0x450aac ? (_0x404f2f = _0x4e2ffc, _0x2dba6e.api.displayHelpStringTrans('displayHelpString.exitRoof', false, true, 0x1388)) : _0x4e2ffc === _0x5a03b3 ? (_0x404f2f = _0x4e2ffc, _0x2dba6e.api.displayHelpStringTrans('displayHelpString.exitToGarages', false, true, 0x1388)) : _0x4e2ffc === _0x41ee8b ? (_0x404f2f = _0x4e2ffc, _0x2dba6e.api.displayHelpStringTrans('displayHelpString.elevatorDown', false, true, 0x1388)) : _0x4e2ffc === _0x2df596 ? (_0x404f2f = _0x4e2ffc, _0x2dba6e.api.displayHelpStringTrans('displayHelpString.elevatorUp', false, true, 0x1388)) : [_0x3006da, _0x2f6928].includes(_0x4e2ffc) ? (_0x404f2f = _0x4e2ffc, _0x2dba6e.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : undefined;
        }), _0x55eaac.events.add('playerExitColshape', _0x1b66d4 => {
          _0x2dba6e.api.isAuthed() && [_0x3006da, _0x5a03b3, _0x450aac, _0x2f6928, _0x2df596, _0x41ee8b].includes(_0x1b66d4) && (_0x404f2f = null, _0x55eaac.game.ui.clearHelp(true));
        }), _0x55eaac.events.add('keys.e', () => {
          if (!_0x2dba6e.api.isUsingSystemAnim()) return _0x404f2f && _0x404f2f == _0x450aac ? (_0x404f2f = null, void _0x2dba6e.api.teleportAndLoad(new _0x55eaac.Vector3(341.33, -584.96, 74.16), 0xfa, {
            'fadeTime': 0x3e8,
            'sound': 'elevator'
          })) : _0x404f2f && _0x404f2f == _0x2f6928 ? (_0x404f2f = null, void _0x2dba6e.api.teleportAndLoad(new _0x55eaac.Vector3(328.02, -601.93, 43.28), 0x142, {
            'fadeTime': 0x3e8,
            'sound': 'elevator'
          })) : _0x404f2f && _0x404f2f == _0x3006da ? (_0x404f2f = null, void _0x2dba6e.api.teleportAndLoad(new _0x55eaac.Vector3(329.07, -600.65, 43.28), 0x46, {
            'fadeTime': 0x3e8,
            'sound': 'elevator'
          })) : _0x404f2f && _0x404f2f == _0x5a03b3 ? (_0x404f2f = null, void _0x2dba6e.api.teleportAndLoad(new _0x55eaac.Vector3(338.43, -583.9, 28.79), 0x46, {
            'fadeTime': 0x3e8,
            'sound': 'elevator'
          })) : _0x404f2f && _0x404f2f == _0x2df596 ? (_0x404f2f = null, void _0x2dba6e.api.teleportAndLoad(new _0x55eaac.Vector3(330.64, -595.26, 43.28), 0x46, {
            'fadeTime': 0x3e8,
            'sound': 'elevator'
          })) : _0x404f2f && _0x404f2f == _0x41ee8b ? (_0x404f2f = null, void _0x2dba6e.api.teleportAndLoad(new _0x55eaac.Vector3(346.77, -582.82, 28.79), 252.29, {
            'fadeTime': 0x3e8,
            'sound': 'elevator'
          })) : undefined;
        });
      },
      0xc4d3: (_0x46fc99, _0x51237a, _0x29cebf) => {
        var _0x1caf06 = _0x29cebf(0x161cd);

        const _0x419e9a = ['MJ_VinewoodBowl_Stand1', 'MJ_VinewoodBowl_Stand2', 'MJ_VinewoodBowl_Stand3', 'MJ_VinewoodBowl_Stand4', 'MJ_VinewoodBowl_USFlags', 'MJ_VinewoodBowl_Cams', 'MJ_VinewoodBowl_FameOrShame'];
        _0x1caf06.events.add('worldDataRemoved', _0x253fb9 => {
          'amphitheater' == _0x253fb9 && _0x471aa6();
        }), _0x1caf06.events.add('worldDataChanged', (_0x3e6a55, _0xfe3632, _0x4a9330) => {
          'amphitheater' == _0x3e6a55 && _0x471aa6(_0xfe3632);
        });

        const _0x471aa6 = (_0x30e03f = _0x1caf06.world.data.amphitheater) => {
          const a0_0xed71d8 = {
            _0x51f731: 0x1edc,
            _0x472d17: 0x140a,
            _0x5cd720: 0x1d66,
            _0x158944: 0x1151,
            _0x378859: 0x1d66,
            _0x5eba45: 0x15e0
          },
                _0x582be0 = _0x30e03f ? JSON.parse(_0x30e03f) : [];

          _0x419e9a.forEach((_0x5c5ba4, _0x211d8b) => {
            _0x582be0.includes(_0x211d8b) ? _0x1caf06.game.streaming.isIplActive(_0x5c5ba4) || _0x1caf06.game.streaming.requestIpl(_0x5c5ba4) : _0x1caf06.game.streaming.isIplActive(_0x5c5ba4) && _0x1caf06.game.streaming.removeIpl(_0x5c5ba4);
          });
        };

        _0x1caf06.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x471aa6();
        });
      },
      0xa88f: (_0x2afc3f, _0x201fb9, _0x1e8bb4) => {
        'use strict';

        const a0_0x5568a9 = {
          _0x23f749: 0x1ec2,
          _0x466d50: 0x9ce,
          _0x3afe9c: 0x1d66,
          _0x23e0b4: 0x106d,
          _0x3501ef: 0x1bd3,
          _0x469499: 0xadb,
          _0x8ab638: 0x106d,
          _0x245dd7: 0xea7,
          _0x55125f: 0x1f87,
          _0x2ed0bb: 0x1f87
        };

        _0x1e8bb4.r(_0x201fb9);

        var _0x42b052 = _0x1e8bb4(0x16a21),
            _0x5bdecd = _0x1e8bb4(0x161cd);

        const _0x397b38 = {
          'del_arcade': ['Entity_Set_Plushie_01', 'Entity_Set_Plushie_02', 'Entity_Set_Plushie_03', 'Entity_Set_Plushie_04', 'Entity_Set_Plushie_05', 'Entity_Set_Plushie_06', 'Entity_Set_Plushie_07', 'Entity_Set_Plushie_08', 'Entity_Set_Plushie_09', 'Set_Plan_Cockroaches', 'Set_Plan_Drone_Parts', 'Set_Plan_Electric_Drill', 'Set_Plan_Fireman_Helmet', 'Set_Plan_Gruppe_Sechs_Outfits', 'Set_Plan_Hacking_Device', 'Set_Plan_Plastic_Explosives', 'Set_Plan_Stealth_Outfits', 'Set_Plan_Swipe_Card_01a', 'Set_Plan_Swipe_Card_01b', 'Set_Plan_Vault_Drill', 'Set_Plan_Vault_Drill_Alt', 'Set_Plan_Vault_KeyCard_01a', 'Set_Plan_Vault_Laser', 'Set_Plan_Vault_Laser_Alt', 'entity_set_arcade_set_ceiling_beams', 'entity_set_arcade_set_ceiling_flat', 'entity_set_arcade_set_ceiling_mirror', 'entity_set_arcade_set_derelict', 'entity_set_arcade_set_derelict_carpet', 'entity_set_arcade_set_derelict_clean_up', 'entity_set_arcade_set_streetx4', 'entity_set_arcade_set_trophy_brawler', 'entity_set_arcade_set_trophy_cabs', 'entity_set_arcade_set_trophy_claw', 'entity_set_arcade_set_trophy_gunner', 'entity_set_arcade_set_trophy_king', 'entity_set_arcade_set_trophy_love', 'entity_set_arcade_set_trophy_monkey', 'entity_set_arcade_set_trophy_patriot', 'entity_set_arcade_set_trophy_racer', 'entity_set_arcade_set_trophy_retro', 'entity_set_arcade_set_trophy_strife', 'entity_set_arcade_set_trophy_teller', 'entity_set_big_screen', 'entity_set_constant_geometry', 'entity_set_floor_option_01', 'entity_set_floor_option_02', 'entity_set_floor_option_03', 'entity_set_floor_option_04', 'entity_set_floor_option_05', 'entity_set_floor_option_06', 'entity_set_floor_option_07', 'entity_set_floor_option_08', 'entity_set_hip_light_no_neon', 'entity_set_mural_neon_option_01', 'entity_set_mural_neon_option_02', 'entity_set_mural_neon_option_03', 'entity_set_mural_neon_option_04', 'entity_set_mural_neon_option_05', 'entity_set_mural_neon_option_06', 'entity_set_mural_neon_option_07', 'entity_set_mural_neon_option_08', 'entity_set_mural_option_01', 'entity_set_mural_option_02', 'entity_set_mural_option_03', 'entity_set_mural_option_04', 'entity_set_mural_option_05', 'entity_set_mural_option_06', 'entity_set_mural_option_07', 'entity_set_mural_option_08', 'entity_set_ret_light_no_neon', 'entity_set_screens        '],
          'del_planRoom': ['set_plan_arcade_x4', 'set_plan_bed', 'set_plan_casino', 'set_plan_computer', 'set_plan_garage', 'set_plan_hacker', 'set_plan_keypad', 'set_plan_mechanic', 'set_plan_no_bed', 'set_plan_plans', 'set_plan_pre_setup', 'set_plan_scribbles', 'set_plan_setup', 'set_plan_vault', 'set_plan_wall', 'set_plan_weapons'],
          'arcade': ['Entity_Set_Plushie_01', 'Entity_Set_Plushie_02', 'Entity_Set_Plushie_03', 'Entity_Set_Plushie_04', 'Entity_Set_Plushie_05', 'Entity_Set_Plushie_06', 'Entity_Set_Plushie_07', 'Entity_Set_Plushie_08', 'Entity_Set_Plushie_09', 'entity_set_arcade_set_ceiling_beams', 'entity_set_arcade_set_streetx4', 'entity_set_arcade_set_trophy_brawler', 'entity_set_arcade_set_trophy_cabs', 'entity_set_arcade_set_trophy_claw', 'entity_set_arcade_set_trophy_gunner', 'entity_set_arcade_set_trophy_king', 'entity_set_arcade_set_trophy_love', 'entity_set_arcade_set_trophy_monkey', 'entity_set_arcade_set_trophy_patriot', 'entity_set_arcade_set_trophy_racer', 'entity_set_arcade_set_trophy_retro', 'entity_set_arcade_set_trophy_strife', 'entity_set_arcade_set_trophy_teller', 'entity_set_big_screen', 'entity_set_floor_option_05', 'entity_set_constant_geometry', 'entity_set_hip_light_no_neon', 'entity_set_ret_light_no_neon', 'entity_set_mural_neon_option_06', 'entity_set_mural_option_06', 'entity_set_screens'],
          'planRoom': ['set_plan_bed', 'set_plan_garage', 'set_plan_setup', 'set_plan_scribbles', 'set_plan_computer', 'set_plan_arcade_x4', 'set_plan_plans', 'set_plan_casino', 'set_plan_keypad', 'set_plan_vault', 'set_plan_mechanic', 'set_plan_hacker', 'set_plan_weapons', 'Set_Plan_Vault_Laser', 'Set_Plan_Vault_Drill', 'Set_Plan_Electric_Drill', 'Set_Plan_Plastic_Explosives', 'Set_Plan_Hacking_Device', 'Set_Plan_Cockroaches', 'Set_Plan_Stealth_Outfits', 'Set_Plan_Gruppe_Sechs_Outfits', 'Set_Plan_Fireman_Helmet', 'Set_Plan_Drone_Parts', 'Set_Plan_Vault_KeyCard_01a', 'Set_Plan_Swipe_Card_01a', 'Set_Plan_Swipe_Card_01b']
        },
              _0x21ba1a = _0x5bdecd.colshapes.newSphere(-600.93, 279.31, 82.04, 0x1);

        _0x21ba1a.marker = _0x5bdecd.markers.new(0x1, new _0x5bdecd.Vector3(-600.93, 279.31, 81.04), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x12adda = _0x5bdecd.colshapes.newSphere(2737.86, -374.18, -47.99, 0x1);

        let _0x5623d4;

        _0x12adda.marker = _0x5bdecd.markers.new(0x1, new _0x5bdecd.Vector3(2737.86, -374.18, -48.99), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        }), _0x5bdecd.events.add('playerEnterColshape', async _0x2560ee => {
          if (_0x42b052.api.isAuthed()) return _0x21ba1a === _0x2560ee ? (_0x5623d4 = _0x2560ee, void _0x42b052.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0x12adda === _0x2560ee ? (_0x5623d4 = _0x2560ee, void _0x42b052.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : undefined;
        }), _0x5bdecd.events.add('playerExitColshape', async _0x227cb3 => {
          if (_0x42b052.api.isAuthed()) return _0x21ba1a === _0x227cb3 || _0x12adda === _0x227cb3 ? (_0x5623d4 = null, void _0x5bdecd.game.ui.clearHelp(true)) : undefined;
        }), _0x5bdecd.events.add('keys.e', async () => {
          const a0_0x55e9ba = {
            _0x272f75: 0x106d,
            _0x23b9e0: 0x1ec2,
            _0x401c99: 0x106d,
            _0x3048d6: 0x1938,
            _0x2976d9: 0x2ae,
            _0x3efa8c: 0x233c,
            _0x142da6: 0x1d66,
            _0x3c9996: 0x1faa,
            _0x503cae: 0x106d,
            _0x439ef2: 0x1f87
          };
          if (!_0x42b052.api.isUsingSystemAnim()) return _0x5623d4 && _0x5623d4 == _0x21ba1a ? ((() => {
            let _0x4f9ca3 = false;

            const _0x333645 = _0x5bdecd.game.interior.getInteriorAtCoordsWithType(0xaaa, -0x17c, -0x31, 'ch_DLC_Arcade'),
                  _0x3ebfed = _0x5bdecd.game.interior.getInteriorAtCoordsWithType(0xaaa, -0x17c, -0x31, 'ch_DLC_Plan');

            for (const [_0x35146d, _0x4cbe8c] of Object.entries(_0x397b38)) if ('arcade' == _0x35146d || 'planRoom' == _0x35146d) for (const _0x1d3aac of _0x4cbe8c) {
              const _0xe61f7 = 'arcade' === _0x35146d ? _0x333645 : _0x3ebfed;

              _0x5bdecd.game.interior.isInteriorPropEnabled(_0xe61f7, _0x1d3aac) || (_0x5bdecd.game.interior.enableInteriorProp(_0xe61f7, _0x1d3aac), _0x4f9ca3 = true);
            }

            _0x4f9ca3 && (_0x5bdecd.game.interior.refreshInterior(_0x333645), _0x5bdecd.game.interior.refreshInterior(_0x3ebfed));
          })(), await _0x42b052.api.teleportAndLoad(new _0x5bdecd.Vector3(2737.91, -375.93, -47.99), 0xb4, {
            'fadeTime': 0x3e8
          }), _0x5bdecd.game.ui.clearHelp(true), _0x5623d4 = false, void _0x5bdecd.events.callRemote('3404531499', 'arcade')) : _0x5623d4 && _0x5623d4 == _0x12adda ? (await _0x42b052.api.teleportAndLoad(new _0x5bdecd.Vector3(-600.07, 277.32, 82.06), 0xb4, {
            'fadeTime': 0x3e8
          }), (() => {
            let _0x1fd38e = false;

            const _0x460f42 = _0x5bdecd.game.interior.getInteriorAtCoordsWithType(0xaaa, -0x17c, -0x31, 'ch_DLC_Arcade'),
                  _0x5e7812 = _0x5bdecd.game.interior.getInteriorAtCoordsWithType(0xaaa, -0x17c, -0x31, 'ch_DLC_Plan');

            for (const [_0xb17b76, _0x3d5b5f] of Object.entries(_0x397b38)) if ('del_arcade' == _0xb17b76 || 'del_planRoom' == _0xb17b76) for (const _0x20d830 of _0x3d5b5f) {
              const _0x1ec8ae = 'del_arcade' === _0xb17b76 ? _0x460f42 : _0x5e7812;

              _0x5bdecd.game.interior.isInteriorPropEnabled(_0x1ec8ae, _0x20d830) && (_0x5bdecd.game.interior.disableInteriorProp(_0x1ec8ae, _0x20d830), _0x1fd38e = true);
            }

            _0x1fd38e && (_0x5bdecd.game.interior.refreshInterior(_0x460f42), _0x5bdecd.game.interior.refreshInterior(_0x5e7812));
          })(), _0x5bdecd.game.ui.clearHelp(true), _0x5623d4 = false, void _0x5bdecd.events.callRemote('3404531499', null)) : undefined;
        });
      },
      0xfaa1: (_0xc0aa63, _0x3b3b89, _0x127d75) => {
        'use strict';

        const a0_0x5d0dc5 = {
          _0x414404: 0x1ea6,
          _0x398e9c: 0x99f,
          _0x54a980: 0x1da5,
          _0x294d41: 0x131a,
          _0x225d4c: 0x1ea6,
          _0x515cce: 0x3df,
          _0x26191d: 0x1da5
        },
              a0_0x447ba4 = {
          _0x35e990: 0x59d,
          _0x21b934: 0x1d66
        },
              a0_0xdab3f5 = {
          _0x383e83: 0x535,
          _0x2afe07: 0x183f,
          _0x12bd9c: 0x535,
          _0x24d127: 0xa81,
          _0x4eed57: 0x535
        };

        _0x127d75.r(_0x3b3b89);

        var _0x1416db = _0x127d75(0x16a21),
            _0x2510e3 = _0x127d75(0x161cd);

        const _0x5c4e41 = _0x2510e3.players.local,
              _0x236812 = {
          'entrancePos': new _0x2510e3.Vector3(-117.11, -604.44, 36.28),
          'entranceSpawnPos': new _0x2510e3.Vector3(-141.19, -620.91, 168.82),
          'exitPos': new _0x2510e3.Vector3(-139.76, -617.59, 168.82),
          'exitSpawnPos': new _0x2510e3.Vector3(-114.14, -601.15, 36.28)
        },
              _0xab12cc = _0x2510e3.colshapes.newSphere(_0x236812.entrancePos.x, _0x236812.entrancePos.y, _0x236812.entrancePos.z, 0x1, 0x0);

        _0xab12cc.marker = _0x2510e3.markers.new(0x1, new _0x2510e3.Vector3(_0x236812.entrancePos.x, _0x236812.entrancePos.y, _0x236812.entrancePos.z - 0x1), 0x1, {
          'direction': new _0x2510e3.Vector3(_0x236812.entrancePos.x, _0x236812.entrancePos.y, _0x236812.entrancePos.z),
          'rotation': new _0x2510e3.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x5ce20b = _0x2510e3.colshapes.newSphere(_0x236812.exitPos.x, _0x236812.exitPos.y, _0x236812.exitPos.z, 0x1, 0x0);

        let _0x1592ee;

        _0x5ce20b.marker = _0x2510e3.markers.new(0x1, new _0x2510e3.Vector3(_0x236812.exitPos.x, _0x236812.exitPos.y, _0x236812.exitPos.z - 0x1), 0x1, {
          'direction': new _0x2510e3.Vector3(_0x236812.exitPos.x, _0x236812.exitPos.y, _0x236812.exitPos.z),
          'rotation': new _0x2510e3.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        }), _0x2510e3.events.add('playerEnterColshape', _0x1fcaac => {
          if (_0x1416db.api.isAuthed() && !_0x5c4e41.isInAnyVehicle(true)) return _0x1fcaac == _0xab12cc ? (_0x1592ee = _0x1fcaac, _0x1416db.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0x1fcaac == _0x5ce20b ? (_0x1592ee = _0x1fcaac, _0x1416db.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : undefined;
        }), _0x2510e3.events.add('playerExitColshape', _0x27d2ce => {
          _0x1416db.api.isAuthed() && (_0x27d2ce == _0xab12cc && (_0x1592ee = null, _0x2510e3.game.ui.clearHelp(true)), _0x27d2ce == _0x5ce20b && (_0x1592ee = null, _0x2510e3.game.ui.clearHelp(true)));
        }), _0x2510e3.events.add('keys.e', () => {
          _0x1592ee && _0x1592ee == _0xab12cc && (_0x1592ee = null, _0x1416db.api.teleportAndLoad(_0x236812.entranceSpawnPos, 0xb4, {
            'fadeTime': 0x3e8
          }), _0x2510e3.events.callRemote('3404531499', 'arcadius')), _0x1592ee && _0x1592ee == _0x5ce20b && (_0x1592ee = null, _0x1416db.api.teleportAndLoad(_0x236812.exitSpawnPos, 0xb4, {
            'fadeTime': 0x3e8
          }), _0x2510e3.events.callRemote('3404531499', null));
        });
      },
      0x1853a: (_0x502c21, _0x2eea40, _0x1fe320) => {
        'use strict';

        const a0_0x233110 = {
          _0x179588: 0xfa6,
          _0x3c841b: 0x1ea6,
          _0x481119: 0x1d55,
          _0xb5c0b0: 0x21e0,
          _0x5453b2: 0x535,
          _0x38e985: 0x1dc6,
          _0x55ab7d: 0xd95,
          _0x51e7ee: 0x1ea6
        },
              a0_0xc68bd = {
          _0x218ad6: 0x535,
          _0x439380: 0x253d,
          _0x4c67ca: 0x1edc,
          _0x372df8: 0x1d66,
          _0x69c6cc: 0x59d
        },
              a0_0x761454 = {
          _0x150254: 0x535,
          _0x30313: 0x1be2,
          _0xf644f3: 0x535,
          _0x152ba6: 0xf86,
          _0x39386c: 0xa81,
          _0x5973a2: 0xf86,
          _0x53458e: 0x20ee,
          _0x2faa8a: 0x1edc,
          _0x50571e: 0xf86,
          _0x453ed0: 0xfec
        };

        _0x1fe320.r(_0x2eea40);

        var _0x4784ac = _0x1fe320(0x16a21),
            _0x159665 = _0x1fe320(0x161cd);

        const _0x53bf22 = _0x159665.players.local,
              _0x469fd7 = _0x159665.colshapes.newSphere(-2361.3, 3250.55, 32.81, 0x1, 0x0);

        _0x469fd7.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(-2361.3, 3250.55, 31.810000000000002), 0x1, {
          'direction': new _0x159665.Vector3(-2361.3, 3250.55, 32.81),
          'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x1eb620 = _0x159665.colshapes.newSphere(-2361.24, 3250.61, 92.9, 0x1, 0x0);

        _0x1eb620.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(-2361.24, 3250.61, 91.9), 0x1, {
          'direction': new _0x159665.Vector3(-2361.24, 3250.61, 92.9),
          'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x4bc92d = _0x159665.colshapes.newSphere(2033.52, 2941.3, -61.9, 0x1, 0x0);

        _0x4bc92d.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(2033.52, 2941.3, -62.9), 0x1, {
          'direction': new _0x159665.Vector3(2033.52, 2941.3, -61.9),
          'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x1616e2 = _0x159665.colshapes.newSphere(-2054.53, 3238.73, 31.49, 0x1, 0x0);

        _0x1616e2.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(-2054.53, 3238.73, 30.49), 0x1, {
          'direction': new _0x159665.Vector3(-2054.53, 3238.73, 31.49),
          'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x40c8f4 = _0x159665.colshapes.newSphere(2155.02, 2921.86, -61.9, 0x1, 0x0);

        _0x40c8f4.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(2155.02, 2921.86, -62.9), 0x1, {
          'direction': new _0x159665.Vector3(2155.02, 2921.86, -61.9),
          'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x18fa86 = _0x159665.colshapes.newSphere(-2350.1, 3265.91, 32.81, 0x1, 0x0);

        _0x18fa86.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(-2350.1, 3265.91, 31.810000000000002), 0x1, {
          'direction': new _0x159665.Vector3(-2350.1, 3265.91, 32.81),
          'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        const _0x2a793c = _0x159665.colshapes.newSphere(5013.201, -5792.338, 17.676, 0x1, 0x0);

        _0x2a793c.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(5013.201, -5792.338, 16.676), 0x1, {
          'direction': new _0x159665.Vector3(5013.201, -5792.338, 17.676),
          'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        let _0x532991,
            _0xf9bac = [];

        [{
          'pos': new _0x159665.Vector3(-2424.612, 3274.206, 32.978),
          'rot': 0x12c,
          'fracId': 0x4
        }, {
          'pos': new _0x159665.Vector3(435.75, -985.527, 43.691),
          'rot': 90.55,
          'fracId': 0x1
        }, {
          'pos': new _0x159665.Vector3(-481.894, 5982.564, 31.316),
          'rot': 129.804,
          'fracId': 0x3
        }, {
          'pos': new _0x159665.Vector3(2478.434, -384.112, 94.404),
          'rot': -94.623,
          'fracId': 0x7
        }].forEach(_0x14d98b => {
          const _0x4ed2e2 = _0x159665.colshapes.newSphere(_0x14d98b.pos.x, _0x14d98b.pos.y, _0x14d98b.pos.z, 0x1, 0x0);

          _0x4ed2e2.pos = _0x14d98b.pos, _0x4ed2e2.rot = _0x14d98b.rot, _0x4ed2e2.fracId = _0x14d98b.fracId, _0x4ed2e2.marker = _0x159665.markers.new(0x1, new _0x159665.Vector3(_0x14d98b.pos.x, _0x14d98b.pos.y, _0x14d98b.pos.z - 0x1), 0x1, {
            'direction': _0x14d98b.pos,
            'rotation': new _0x159665.Vector3(0x0, 0x0, 0x0),
            'color': [0x34, 0x98, 0xdb, 0xff],
            'visible': true,
            'dimension': 0x0
          }), _0xf9bac.push(_0x4ed2e2);
        }), _0x159665.events.add('playerEnterColshape', _0x1c93c5 => {
          if (_0x4784ac.api.isAuthed()) return [_0x4bc92d, _0x469fd7, _0x40c8f4].includes(_0x1c93c5) ? (_0x532991 = _0x1c93c5, _0x4784ac.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : [_0x1616e2, _0x1eb620, _0x18fa86].includes(_0x1c93c5) ? (_0x532991 = _0x1c93c5, _0x4784ac.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0x1c93c5 === _0x2a793c ? (_0x532991 = _0x1c93c5, _0x4784ac.api.displayHelpStringTrans('displayHelpString.toEnterArmy', false, true, 0x1388)) : _0xf9bac.includes(_0x1c93c5) ? (_0x532991 = _0x1c93c5, _0x4784ac.api.displayHelpStringTrans('displayHelpString.toEnterIsland', false, true, 0x1388)) : undefined;
        }), _0x159665.events.add('playerExitColshape', _0x60f8e2 => {
          _0x4784ac.api.isAuthed() && [_0x4bc92d, _0x1616e2, _0x469fd7, _0x1eb620, _0x40c8f4, _0x18fa86, _0x2a793c, ..._0xf9bac].includes(_0x60f8e2) && (_0x532991 = null, _0x159665.game.ui.clearHelp(true));
        }), _0x159665.events.add('keys.e', () => {
          if (!_0x532991) return;
          if (_0x4784ac.api.isUsingSystemAnim()) return;

          const _0x252ed9 = _0x53bf22.getVariable('member');

          if (0x4 === _0x252ed9) {
            if (_0x532991 && _0x532991 == _0x469fd7) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(new _0x159665.Vector3(-2361.04, 3249.17, 92.9), 0x14a, {
              'fadeTime': 0x3e8
            });
            if (_0x532991 && _0x532991 == _0x1eb620) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(new _0x159665.Vector3(-2361.09, 3249.08, 32.81), 0x14a, {
              'fadeTime': 0x3e8
            });
            if (_0x532991 && _0x532991 == _0x4bc92d) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(new _0x159665.Vector3(-2056.04, 3239.49, 31.49), 0x3c, {
              'fadeTime': 0x3e8
            });
            if (_0x532991 && _0x532991 == _0x1616e2) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(new _0x159665.Vector3(2033.7, 2942.15, -61.9), 0xfa, {
              'fadeTime': 0x3e8
            });
            if (_0x532991 && _0x532991 == _0x40c8f4) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(new _0x159665.Vector3(-2348.01, 3266.93, 32.81), 0x10e, {
              'fadeTime': 0x3e8
            });
            if (_0x532991 && _0x532991 == _0x18fa86) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(new _0x159665.Vector3(2155.02, 2920.91, -61.9), 0x5a, {
              'fadeTime': 0x3e8
            });
          }

          if (_0x532991) {
            if (_0x532991 == _0x2a793c) {
              const _0x94fb6e = _0xf9bac.find(_0x5b6fa0 => _0x5b6fa0.fracId === _0x252ed9);

              if (_0x94fb6e) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(_0x94fb6e.pos, _0x94fb6e.rot, {
                'fadeTime': 0x3e8
              });
            }

            const _0x2d1efa = _0xf9bac.find(_0x3a5d11 => _0x3a5d11 === _0x532991);

            if (_0x2d1efa && _0x2d1efa.fracId === _0x252ed9) return _0x532991 = null, void _0x4784ac.api.teleportAndLoad(new _0x159665.Vector3(5013.201, -5792.338, 17.676), 327.46, {
              'fadeTime': 0x3e8
            });
          }
        });
      },
      0xaba1: (_0x19c7ef, _0x3ecb07, _0x4e335f) => {
        'use strict';

        const a0_0x494984 = {
          _0x4eade8: 0x535,
          _0x5ee716: 0x1d66
        };

        _0x4e335f.r(_0x3ecb07);

        var _0x462449 = _0x4e335f(0x16a21),
            _0x572096 = _0x4e335f(0x161cd);

        _0x572096.players.local;

        const _0x507f61 = _0x572096.colshapes.newSphere(-827.46, -699.8, 28.05, 0x1);

        _0x507f61.marker = _0x572096.markers.new(0x1, new _0x572096.Vector3(-827.46, -699.8, 27.05), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x341968 = _0x572096.colshapes.newSphere(-825.5, -732.08, 28.05, 0x1);

        _0x341968.marker = _0x572096.markers.new(0x1, new _0x572096.Vector3(-825.5, -732.08, 27.05), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x6ea67 = _0x572096.colshapes.newSphere(-1159.13, -385.77, -162.37, 0x1, -0x1);

        let _0x2d4110;

        _0x6ea67.marker = _0x572096.markers.new(0x1, new _0x572096.Vector3(-1159.13, -385.77, -163.37), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': -0x1
        }), _0x572096.events.add('playerEnterColshape', async _0xd6665e => {
          if (_0x462449.api.isAuthed()) return [_0x507f61, _0x341968].includes(_0xd6665e) ? (_0x2d4110 = _0xd6665e, void _0x462449.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0x6ea67 === _0xd6665e ? (_0x2d4110 = _0xd6665e, void _0x462449.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : undefined;
        }), _0x572096.events.add('playerExitColshape', async _0x223a37 => {
          if (_0x462449.api.isAuthed()) return [_0x507f61, _0x341968].includes(_0x223a37) || _0x6ea67 === _0x223a37 ? (_0x2d4110 = null, void _0x572096.game.ui.clearHelp(true)) : undefined;
        }), _0x572096.events.add('keys.e', async () => {
          if (!_0x462449.api.isUsingSystemAnim()) return _0x2d4110 && _0x2d4110 == _0x507f61 || _0x2d4110 == _0x341968 ? (_0x462449.api.teleportAndLoad(new _0x572096.Vector3(-1159.13, -385.77, -162.37), 0xb4, {
            'smartDimension': 'auction'
          }), _0x572096.game.ui.clearHelp(true), _0x572096.events.callRemote('3404531499', 'auction'), void (_0x2d4110 = false)) : _0x2d4110 && _0x2d4110 == _0x6ea67 ? (_0x462449.api.teleportAndLoad(new _0x572096.Vector3(-827.46, -699.8, 28.05), 0x57, {
            'dimension': 0x0
          }), _0x572096.game.ui.clearHelp(true), _0x572096.events.callRemote('3404531499', null), void (_0x2d4110 = false)) : undefined;
        });
      },
      0x75fd: (_0x4341a6, _0x50b739, _0x5c8dc8) => {
        'use strict';

        const a0_0x4014e9 = {
          _0x38c849: 0x4b9,
          _0xc64a58: 0x4b9,
          _0x5c1026: 0x1e13
        },
              a0_0x8f0a44 = {
          _0x71eb66: 0x4b9,
          _0x56bb11: 0x14d2,
          _0x46b798: 0x1a5,
          _0x1b6e18: 0x93f,
          _0x215252: 0x1da5,
          _0x210cbf: 0x14ab,
          _0x3b73ac: 0x1231,
          _0x5d8390: 0x1a5,
          _0x3ac267: 0x313
        },
              a0_0x572eeb = {
          _0x12a41f: 0x14d2,
          _0x5557d0: 0x1da5,
          _0x5c14ff: 0x313
        },
              a0_0x3b5d96 = {
          _0x3314da: 0x535,
          _0x2f64a3: 0x1d66,
          _0x50b3b9: 0x59d
        };

        _0x5c8dc8.r(_0x50b739);

        var _0x21308b = _0x5c8dc8(0x16a21),
            _0x188d6b = _0x5c8dc8(0x12a76),
            _0x4abfbc = _0x5c8dc8(0x3db3),
            _0x51e756 = _0x5c8dc8(0x161cd);

        const _0x4f73d4 = _0x51e756.players.local,
              _0x2abad6 = -1379.52,
              _0x5ddbbe = -499.82,
              _0x482e99 = 33.15,
              _0x496f57 = 0x8,
              _0x139241 = -1396.06,
              _0x3abe9b = -0x1df,
              _0x54160d = 72.04,
              _0x3e0133 = 0x10e;

        let _0x1141c2 = null,
            _0x15fd43 = _0x51e756.colshapes.newSphere(_0x2abad6, _0x5ddbbe, _0x482e99, 0x1, 0x0),
            _0x3a52a3 = _0x51e756.colshapes.newSphere(_0x139241, _0x3abe9b, _0x54160d, 0x1, 0x0);

        _0x51e756.markers.new(0x1, new _0x51e756.Vector3(_0x2abad6, _0x5ddbbe, _0x482e99 - 0x1), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff]
        }), _0x51e756.markers.new(0x1, new _0x51e756.Vector3(_0x139241, _0x3abe9b, _0x54160d - 0x1), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff]
        }), (_0x51e756.events.add('keys.e', () => _0x1141c2 && _0x1141c2 == _0x15fd43 ? (_0x21308b.api.teleportAndLoad(new _0x51e756.Vector3(_0x139241, _0x3abe9b, _0x54160d), _0x3e0133, {
          'sound': 'elevator'
        }), void _0x51e756.events.callRemote('3404531499', 'autoschool')) : _0x1141c2 && _0x1141c2 == _0x3a52a3 ? (_0x21308b.api.teleportAndLoad(new _0x51e756.Vector3(_0x2abad6, _0x5ddbbe, _0x482e99), _0x496f57, {
          'sound': 'elevator'
        }), void _0x51e756.events.callRemote('3404531499', null)) : undefined), _0x51e756.events.add('playerEnterColshape', _0x271d6d => {
          _0x21308b.api.isAuthed() && (_0x271d6d == _0x15fd43 && (_0x1141c2 = _0x271d6d, _0x21308b.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)), _0x271d6d == _0x3a52a3 && (_0x1141c2 = _0x271d6d, _0x21308b.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)));
        }), _0x51e756.events.add('playerExitColshape', _0x53fbf7 => {
          _0x21308b.api.isAuthed() && (_0x53fbf7 == _0x15fd43 && (_0x1141c2 = null, _0x51e756.game.ui.clearHelp(true)), _0x53fbf7 == _0x3a52a3 && (_0x1141c2 = null, _0x51e756.game.ui.clearHelp(true)));
        }));
        const _0x2ee968 = [[-698.6846, -2218.9638, 5.4438], [-594.0919, -2252.0454, 5.5948], [-518.4127, -2163.8156, 7.1273], [-430.4526, -2159.5283, 9.7572], [-267.6979, -2194.1989, 9.8079], [-90.7409, -2156.7377, 9.7731], [6.508, -2053.5217, 9.7518], [-224.2945, -1862.1308, 28.4248], [-273.7565, -1826.3107, 27.0347], [-446.3153, -1862.953, 18.1328], [-613.7388, -2018.7169, 16.8334], [-780.275, -2199.3242, 15.8608], [-919.061, -2386.2717, 13.4534], [-1039.119, -2550.3803, 13.2865], [-1029.3673, -2704.4636, 13.2363], [-892.6002, -2663.1083, 13.2855], [-822.5467, -2562.4611, 13.2869], [-769.8825, -2472.2927, 13.6505], [-649.0633, -2315.8034, 7.1107], [-718.6427, -2211.4453, 5.4773]];

        let _0x12775a,
            _0x185538,
            _0x2ca7b9,
            _0x178a08 = [],
            _0xf1e8a9 = {
          'position': 0x0,
          'point': null
        },
            _0x1fa7c3 = false,
            _0x1ea88e = false,
            _0x706d38 = false;

        _0x51e756.events.add('autoschool.drive.init', async (_0x51dfd, _0x46e21f) => {
          _0x51e756.events.call('autoschool.test.close'), _0x51e756.game.ui.clearHelp(true), _0x1ea88e = true, _0x178a08 = _0x2ee968, _0x21308b.api.setPlayerPos(_0x4f73d4, new _0x51e756.Vector3(-758.02, -2207.69, 5.5)), _0x12775a = _0x51e756.vehicles.new(_0x51e756.game.joaat(_0x51dfd), new _0x51e756.Vector3(-758.02, -2207.69, 5.5), {
            'dimension': _0x46e21f,
            'numberPlate': 'SCHOOL',
            'heading': 0x3c,
            'locked': true,
            'engine': true
          }), _0x12775a.sync = {}, _0x12775a.sync.locked = true, _0x12775a.sync.engine = true, _0x12775a.sync.gas = 0x3c;

          for (let _0x40b9aa = 0x0; 0x0 === _0x12775a.handle && _0x40b9aa < 0xf; ++_0x40b9aa) await _0x51e756.game.sleep(0x64);

          _0x12775a.setHeading(261.75), _0x12775a.setColours(0x21, 0x21), _0x4f73d4.posX = -758.02, _0x4f73d4.posY = -2207.69, _0x4f73d4.posZ = 5.5, _0x4f73d4.taskWarpIntoVehicle(_0x12775a.handle, -0x1), _0x12775a.setEngineOn(true, true, false), _0x12775a.setHeading(261.75), _0x51e756.events.call('setTraffic', 0x3), _0x185538 = _0x51e756.checkpoints.new(0x1, new _0x51e756.Vector3(_0x178a08[0x0][0x0], _0x178a08[0x0][0x1], _0x178a08[0x0][0x2] - 0x1), 0xa, {
            'direction': new _0x51e756.Vector3(_0x178a08[_0xf1e8a9.position + 0x1][0x0], _0x178a08[_0xf1e8a9.position + 0x1][0x1], _0x178a08[_0xf1e8a9.position + 0x1][0x2]),
            'color': [0xf2, 0xb6, 0x11, 0x64],
            'visible': true,
            'dimension': -0x1
          }), _0x2ca7b9 = _0x51e756.blips.new(0x1, new _0x51e756.Vector3(_0x178a08[0x0][0x0], _0x178a08[0x0][0x1], _0x178a08[0x0][0x2]), {
            'color': 0x5,
            'shortRange': false,
            'dimension': -0x1
          }), (0x0, _0x4abfbc.markAsTranslatedBlip)(_0x2ca7b9, 'blips.checkpoint'), _0x21308b.api.fadeIn(0x1f4);
        }), _0x51e756.events.add('autoschool.drive.finish.fail', () => {
          _0x1ea88e = false, _0x51e756.events.call('setTraffic', 0x0), _0x51e756.events.call('cleartraffic'), _0xf1e8a9.position = 0x0, _0xf1e8a9.point = null, _0x2ca7b9 && (_0x2ca7b9 = _0x2ca7b9.destroy()), _0x185538 && (_0x185538 = _0x185538.destroy());
        }), _0x51e756.events.add('playerEnterCheckpoint', _0xcd9b85 => {
          if (_0x185538 && _0xcd9b85 == _0x185538) {
            if (!_0x51e756.players.local.isInAnyVehicle(false)) return;
            _0xf1e8a9.position + 0x1 == _0x178a08.length ? (_0xf1e8a9.position = 0x0, _0xf1e8a9.point = null, _0x2ca7b9 && (_0x2ca7b9 = _0x2ca7b9.destroy()), _0x185538 && (_0x185538 = _0x185538.destroy()), _0x51e756.events.callRemote('973067502'), _0x51e756.events.call('setTraffic', 0x0), _0x51e756.events.call('cleartraffic'), _0x1ea88e = false) : (_0xf1e8a9.position += 0x1, _0xf1e8a9.point = _0x185538, _0x2ca7b9 && (_0x2ca7b9 = _0x2ca7b9.destroy()), _0x185538 && (_0x185538 = _0x185538.destroy()), _0x185538 = _0x178a08[_0xf1e8a9.position + 0x1] ? _0x51e756.checkpoints.new(0x1, new _0x51e756.Vector3(_0x178a08[_0xf1e8a9.position][0x0], _0x178a08[_0xf1e8a9.position][0x1], _0x178a08[_0xf1e8a9.position][0x2] - 0x1), 0xa, {
              'direction': new _0x51e756.Vector3(_0x178a08[_0xf1e8a9.position + 0x1][0x0], _0x178a08[_0xf1e8a9.position + 0x1][0x1], _0x178a08[_0xf1e8a9.position + 0x1][0x2]),
              'color': [0xf2, 0xb6, 0x11, 0x64],
              'visible': true,
              'dimension': -0x1
            }) : _0x51e756.checkpoints.new(0x4, new _0x51e756.Vector3(_0x178a08[_0xf1e8a9.position][0x0], _0x178a08[_0xf1e8a9.position][0x1], _0x178a08[_0xf1e8a9.position][0x2] - 0x1), 0xa, {
              'color': [0xf2, 0xb6, 0x11, 0x64],
              'visible': true,
              'dimension': -0x1
            }), _0x2ca7b9 = _0x51e756.blips.new(0x1, new _0x51e756.Vector3(_0x178a08[_0xf1e8a9.position][0x0], _0x178a08[_0xf1e8a9.position][0x1], _0x178a08[_0xf1e8a9.position][0x2]), {
              'color': 0x5,
              'shortRange': false,
              'dimension': -0x1
            }), (0x0, _0x4abfbc.markAsTranslatedBlip)(_0x2ca7b9, 'blips.checkpoint'));
          }
        }), _0x51e756.events.add('playerLeaveVehicle', () => {
          _0x1ea88e && (_0x51e756.events.callRemote('187810195', 'Вы вышли из транспорта'), _0x51e756.events.call('autoschool.drive.finish.fail'));
        }), _0x51e756.events.add('render2', () => {
          _0x1ea88e && _0x4f73d4.vehicle && _0x4f73d4.vehicle.getEngineHealth() <= 0x3e3 && (_0x1ea88e = false, _0x51e756.events.call('api.playSoundFrontend', 'Hack_Failed', 'DLC_HEIST_BIOLAB_PREP_HACKING_SOUNDS'), _0x51e756.events.callRemote('187810195', 'Получен урон авто'), _0x51e756.events.call('autoschool.drive.finish.fail'));
        }), _0x51e756.events.add('time.everySec', () => {
          _0x1ea88e && _0x4f73d4.vehicle && _0x4f73d4.vehicle.setMaxSpeed(20.833333333333332);
        }), _0x51e756.events.add('autoschool.removeVehicle', () => {
          _0x51e756.vehicles.exists(_0x12775a) && (_0x12775a.destroy(), _0x12775a = null);
        }), _0x51e756.events.add('autoschool.test.startTheory', _0x48fd31 => {
          _0x1fa7c3 = true, _0x188d6b.globalBrowser.toggle('ipad', {
            'value': true,
            'biz': null,
            'member': 0x0,
            'leader': 0x0,
            'houseId': 0x0
          }), _0x188d6b.globalBrowser.emit('ipad_openAutoshoolApp', _0x48fd31);
        }), _0x51e756.events.add('autoschool.test.stopTheory', () => {
          _0x1fa7c3 = false, _0x706d38 = false, _0x188d6b.globalBrowser.toggle('ipad', {
            'value': false
          });
        }), _0x51e756.events.add('autoschool.test.fail', () => {
          _0x706d38 || (_0x706d38 = true, _0x1fa7c3 = false, _0x51e756.events.callRemote('2491706015'));
        }), _0x51e756.events.add('autoschool.test.success', () => {
          _0x706d38 || (_0x706d38 = true, _0x1fa7c3 = false, _0x51e756.events.callRemote('2485793594'));
        }), _0x51e756.events.add('autoschool.test.close', () => {
          _0x1fa7c3 = false, _0x51e756.events.callRemote('191717357');
        });
      },
      0x159ff: (_0x55ebf0, _0x2dfe3d, _0x51191c) => {
        'use strict';

        const a0_0x5e1b7b = {
          _0x46278d: 0x535,
          _0x988501: 0x253d
        },
              a0_0x163d8c = {
          _0x95c1ec: 0x535,
          _0x43a57f: 0xf86,
          _0x43b895: 0x1be2
        };

        _0x51191c.r(_0x2dfe3d);

        var _0x3c094d = _0x51191c(0x16a21),
            _0x358a5a = _0x51191c(0x161cd);

        _0x358a5a.players.local;

        const _0x230194 = _0x358a5a.colshapes.newSphere(502.05, 112.43, 96.63, 0x2);

        _0x230194.marker = _0x358a5a.markers.new(0x1, new _0x358a5a.Vector3(502.05, 112.43, 95.63), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0xe676ef = _0x358a5a.colshapes.newSphere(501.76, 110.71, 49.44, 0x2, -0x1);

        let _0x21afe2;

        _0xe676ef.marker = _0x358a5a.markers.new(0x1, new _0x358a5a.Vector3(501.76, 110.71, 48.44), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': -0x1
        }), _0x358a5a.events.add('playerEnterColshape', async _0x53cbbe => {
          if (_0x3c094d.api.isAuthed()) return _0x230194 === _0x53cbbe ? (_0x21afe2 = _0x53cbbe, void _0x3c094d.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0xe676ef === _0x53cbbe ? (_0x21afe2 = _0x53cbbe, void _0x3c094d.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : undefined;
        }), _0x358a5a.events.add('playerExitColshape', async _0x3e0269 => {
          if (_0x3c094d.api.isAuthed()) return _0x230194 === _0x3e0269 || _0xe676ef === _0x3e0269 ? (_0x21afe2 = null, void _0x358a5a.game.ui.clearHelp(true)) : undefined;
        }), _0x358a5a.events.add('keys.e', async () => {
          if (!_0x3c094d.api.isUsingSystemAnim()) return _0x21afe2 && _0x21afe2 == _0x230194 ? (_0x3c094d.api.teleportAndLoad(new _0x358a5a.Vector3(501.76, 110.71, 49.44), 0x166, {
            'dimension': 0x3e9
          }), _0x358a5a.game.ui.clearHelp(true), _0x358a5a.events.callRemote('3404531499', 'bets'), void (_0x21afe2 = false)) : _0x21afe2 && _0x21afe2 == _0xe676ef ? (_0x3c094d.api.teleportAndLoad(new _0x358a5a.Vector3(502.05, 112.43, 96.63), 0xa3, {
            'dimension': 0x0
          }), _0x358a5a.game.ui.clearHelp(true), _0x358a5a.events.callRemote('3404531499', null), void (_0x21afe2 = false)) : undefined;
        });
      },
      0xbf7b: (_0x51203c, _0x58ba33, _0x1f6067) => {
        'use strict';

        const a0_0x308a94 = {
          _0x2f9d18: 0x535,
          _0x4679e4: 0x1d66
        };
        _0x1f6067.r(_0x58ba33), _0x1f6067.d(_0x58ba33, {
          'removeInterior': () => _0x48ea4d,
          'requestInteior': () => _0x1e7b3b
        });

        var _0xae3346 = _0x1f6067(0x16a21),
            _0x373e1c = _0x1f6067(0x3db3),
            _0x56058f = _0x1f6067(0x161cd);

        const _0x3bea1e = _0x56058f.players.local;

        let _0x49a5a0;

        const _0x2d9edd = ['entity_set_meet_crew', 'entity_set_meet_lights', 'entity_set_meet_lights_cheap', 'entity_set_player', 'entity_set_test_crew', 'entity_set_test_lights', 'entity_set_test_lights_cheap', 'entity_set_time_trial'],
              _0x48ea4d = () => {
          const _0x50375c = _0x56058f.game.interior.getInteriorAtCoords(-0x7d0, 1113.211, 27.66735);

          let _0x3383b7 = false;

          if (_0x50375c) {
            for (const _0x15eb44 of _0x2d9edd) _0x56058f.game.interior.isInteriorPropEnabled(_0x50375c, _0x15eb44) && (_0x56058f.game.interior.disableInteriorProp(_0x50375c, _0x15eb44), _0x3383b7 = true);
          }

          _0x3383b7 && _0x56058f.game.interior.refreshInterior(_0x50375c), _0x56058f.blips.exists(_0x49a5a0) && (_0x49a5a0.destroy(), _0x49a5a0 = null);
        },
              _0x1e7b3b = () => {
          const _0x7d2458 = _0x56058f.game.interior.getInteriorAtCoords(-0x7d0, 1113.211, 27.66735);

          let _0x235057 = false;

          if (_0x7d2458) {
            for (const _0x5979f4 of _0x2d9edd) _0x56058f.game.interior.isInteriorPropEnabled(_0x7d2458, _0x5979f4) || (_0x56058f.game.interior.enableInteriorProp(_0x7d2458, _0x5979f4), _0x235057 = true);
          }

          _0x235057 && _0x56058f.game.interior.refreshInterior(_0x7d2458), _0x56058f.blips.exists(_0x49a5a0) || (_0x49a5a0 = _0x56058f.blips.new(0x1e8, new _0x56058f.Vector3(-2161.89, 1130.29, 28.65), {
            'name': 'Дрифт',
            'scale': 0x1,
            'color': 0x4,
            'shortRange': true
          }), (0x0, _0x373e1c.markAsTranslatedBlip)(_0x49a5a0, 'blips.drift'));
        },
              _0x2657bd = _0x56058f.colshapes.newSphere(784.47, -1868.26, 29.22, 0x3);

        _0x2657bd.marker = _0x56058f.markers.new(0x1, new _0x56058f.Vector3(784.47, -1868.26, 27.22), 0x4, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x177662 = _0x56058f.colshapes.newSphere(-2218.05, 1154.91, 29.77, 0x3);

        let _0x2e386c;

        _0x177662.marker = _0x56058f.markers.new(0x1, new _0x56058f.Vector3(-2218.05, 1154.91, 27.77), 0x4, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        }), _0x56058f.events.add('playerEnterColshape', async _0x2fa822 => {
          if (_0xae3346.api.isAuthed()) return _0x2657bd === _0x2fa822 ? (_0x2e386c = _0x2fa822, void _0xae3346.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0x177662 === _0x2fa822 ? (_0x2e386c = _0x2fa822, void _0xae3346.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : undefined;
        }), _0x56058f.events.add('playerExitColshape', async _0xa65058 => {
          if (_0xae3346.api.isAuthed()) return _0x2657bd === _0xa65058 || _0x177662 === _0xa65058 ? (_0x2e386c = null, void _0x56058f.game.ui.clearHelp(true)) : undefined;
        }), _0x56058f.events.add('keys.e', async () => {
          if (!_0xae3346.api.isUsingSystemAnim()) return _0x2e386c && _0x3bea1e.vehicle && (!_0x56058f.game.vehicle.isThisModelACar(_0x3bea1e.vehicle.model) || _0x3bea1e.vehicle.isBig()) ? _0xae3346.api.longNotifyTrans('interiors.carMeet.cantEnterVehicle', 'error') : _0x2e386c && _0x2e386c == _0x2657bd ? (_0x56058f.game.ui.clearHelp(true), _0x2e386c = false, _0x56058f.events.callRemote('3404531499', 'carmeet'), _0x48ea4d(), _0x1e7b3b(), void (await _0xae3346.api.teleportAndLoad(new _0x56058f.Vector3(-2218.05, 1154.91, 29.77), 0xb4, {
            'fadeTime': 0x3e8,
            'vehicle': true,
            'setOnGroundProperly': true
          }))) : _0x2e386c && _0x2e386c == _0x177662 ? (_0x56058f.game.ui.clearHelp(true), _0x2e386c = false, _0x56058f.events.callRemote('3404531499', null), await _0xae3346.api.teleportAndLoad(new _0x56058f.Vector3(784.47, -1868.26, 29.22), 0xb4, {
            'fadeTime': 0x3e8,
            'vehicle': true,
            'setOnGroundProperly': true
          }), void _0x48ea4d()) : undefined;
        });
      },
      0xb85b: (_0x4d4f3b, _0x1503d2, _0x506970) => {
        'use strict';

        const a0_0x2cc527 = {
          _0x3e6f20: 0xfa6,
          _0x2f0073: 0x535,
          _0x51968c: 0x1ea6,
          _0x40c377: 0x1d66,
          _0x4191ef: 0x59d
        },
              a0_0x42de7b = {
          _0x4adfa4: 0x253d,
          _0x4789b6: 0xf86,
          _0x2506f1: 0x237,
          _0x385003: 0x535,
          _0x44f231: 0x19c2
        },
              a0_0x42f421 = {
          _0x341392: 0xe6d,
          _0xfe12f7: 0x1d66
        },
              a0_0x1a1aef = {
          _0x4c63d2: 0x1d66,
          _0x2bb6b6: 0x1d66,
          _0x52d482: 0x106d
        };

        _0x506970.r(_0x1503d2);

        var _0x24f78d = _0x506970(0x16a21),
            _0x6ef123 = _0x506970(0x161cd);

        const _0x2ffbcb = 0x43101,
              _0x49986e = ['Set_Pent_Tint_Shell', 'Set_Pent_Pattern_01', 'Set_Pent_Spa_Bar_Open', 'Set_Pent_Media_Bar_Open', 'Set_Pent_Dealer', 'Set_Pent_Arcade_Retro', 'Set_Pent_Bar_Clutter', 'Set_Pent_Clutter_01', 'set_pent_bar_light_01', 'set_pent_bar_party_0'],
              _0x563303 = () => {
          const _0x5a60f = _0x2ffbcb;
          let _0x2b8a1d = false;
          _0x49986e.forEach(_0x30311a => {
            _0x6ef123.game.interior.isInteriorPropEnabled(_0x5a60f, _0x30311a) && (_0x6ef123.game.interior.disableInteriorProp(_0x5a60f, _0x30311a), _0x2b8a1d = true);
          }), _0x2b8a1d && _0x6ef123.game.interior.refreshInterior(_0x5a60f);
        },
              _0x5997e6 = _0x6ef123.colshapes.newSphere(967.55, 63.76, 112.55, 0x1);

        _0x5997e6.marker = _0x6ef123.markers.new(0x1, new _0x6ef123.Vector3(967.55, 63.76, 111.55), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x1700a7 = _0x6ef123.colshapes.newSphere(969.58, 63.17, 112.55, 0x1);

        let _0x4b3ce4;

        _0x1700a7.marker = _0x6ef123.markers.new(0x1, new _0x6ef123.Vector3(969.58, 63.17, 111.55), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        }), _0x6ef123.events.add('playerEnterColshape', async _0x1b0a10 => {
          if (_0x24f78d.api.isAuthed()) return _0x5997e6 === _0x1b0a10 ? (_0x4b3ce4 = _0x1b0a10, void _0x24f78d.api.displayHelpStringTrans('displayHelpString.toEnterPenthouse', false, true, 0x1388)) : _0x1700a7 === _0x1b0a10 ? (_0x4b3ce4 = _0x1b0a10, void _0x24f78d.api.displayHelpStringTrans('displayHelpString.exitRoof', false, true, 0x1388)) : undefined;
        }), _0x6ef123.events.add('playerExitColshape', async _0x27c047 => {
          if (_0x24f78d.api.isAuthed()) return _0x5997e6 === _0x27c047 || _0x1700a7 === _0x27c047 ? (_0x4b3ce4 = null, void _0x6ef123.game.ui.clearHelp(true)) : undefined;
        }), _0x6ef123.events.add('keys.e', async () => {
          const a0_0x4fb9b5 = {
            _0x27911f: 0xe6d,
            _0x13faf8: 0x1d66
          },
                a0_0x551361 = {
            _0x12ba78: 0x106d,
            _0x382151: 0x59a,
            _0x22c96b: 0x535
          };
          if (!_0x24f78d.api.isUsingSystemAnim()) return _0x4b3ce4 && _0x4b3ce4 == _0x5997e6 ? (_0x563303(), (() => {
            const _0x202271 = _0x2ffbcb;
            let _0x16c8bc = false;
            _0x49986e.forEach(_0x2e9963 => {
              _0x6ef123.game.interior.isInteriorPropEnabled(_0x202271, _0x2e9963) || (_0x6ef123.game.interior.enableInteriorProp(_0x202271, _0x2e9963), _0x24f78d.api.invokeNative('_SET_INTERIOR_PROP_COLOR', _0x202271, _0x2e9963, 0x1), _0x16c8bc = true);
            }), _0x16c8bc && _0x6ef123.game.interior.refreshInterior(_0x202271);
          })(), await _0x24f78d.api.teleportAndLoad(new _0x6ef123.Vector3(971.34, 62.62, 112.56), 0xf0), _0x6ef123.game.ui.clearHelp(true), void (_0x4b3ce4 = false)) : _0x4b3ce4 && _0x4b3ce4 == _0x1700a7 ? (await _0x24f78d.api.teleportAndLoad(new _0x6ef123.Vector3(965.71, 65.42, 112.55), 0x39), _0x6ef123.game.ui.clearHelp(true), _0x563303(), void (_0x4b3ce4 = false)) : undefined;
        });
      },
      0xa0fc: (_0x1afb1f, _0x5f1b89, _0x4151e5) => {
        'use strict';

        const a0_0x27a12a = {
          _0x46df29: 0x15e0,
          _0x4f0621: 0x140a,
          _0x5585c3: 0x1151,
          _0x4e2659: 0x1870,
          _0x32baf4: 0x1d66,
          _0x491007: 0x106d,
          _0x52cc04: 0x1f87,
          _0x13d7ef: 0x1513,
          _0x5d76cb: 0x17dc,
          _0xe17148: 0x25d3,
          _0x339f50: 0x1d66,
          _0x2b5c89: 0xf2f,
          _0x1e5ceb: 0xf2f,
          _0x430c52: 0x1513,
          _0x34e74: 0x17dc,
          _0x13a26f: 0x1030,
          _0x33cf56: 0x1d66,
          _0x116270: 0xf2f,
          _0x234c89: 0x1063
        },
              a0_0x262b58 = {
          _0x38bc2c: 0x1d66,
          _0x3ffddf: 0x21ca,
          _0x1bed20: 0x1e35,
          _0x5a2de6: 0x1250,
          _0x5937f3: 0x186d,
          _0x46f5d9: 0x535
        },
              a0_0x49cad7 = {
          _0x1b6773: 0xa81,
          _0x770f78: 0x535
        };

        _0x4151e5.r(_0x5f1b89);

        var _0x1a68f5 = _0x4151e5(0x16a21),
            _0x2d3381 = _0x4151e5(0x161cd);

        const _0x58b64d = 0x44a01,
              _0x115e0c = _0x2d3381.players.local;
        let _0x16f172 = null,
            _0x9315b0 = ['dj_04_lights_01', 'dj_04_lights_02', 'dj_04_lights_03', 'dj_04_lights_04', 'int01_ba_bar_content', 'int01_ba_booze_01', 'int01_ba_dj04', 'int01_ba_dj_moodyman', 'int01_ba_dry_ice', 'int01_ba_equipment_upgrade', 'int01_ba_lightgrid_01', 'int01_ba_lights_screen', 'int01_ba_screen', 'int01_ba_security_upgrade', 'int01_ba_style02_podium', 'EntitySet_DJ_Lighting'];

        const _0x3c45c7 = _0x2d3381.colshapes.newSphere(987.81, 80.09, 80.99, 0x1, 0x0),
              _0x80b5ea = _0x2d3381.colshapes.newSphere(1578.37, 254.02, -0x2e, 0x1, 0x0);

        _0x3c45c7.marker = _0x2d3381.markers.new(0x1, new _0x2d3381.Vector3(987.81, 80.09, 79.99), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff]
        }), _0x80b5ea.marker = _0x2d3381.markers.new(0x1, new _0x2d3381.Vector3(1578.37, 254.02, -0x2f), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff]
        });
        let _0x477aaf = false;
        _0x2d3381.events.add('keys.e', async () => {
          if (!_0x1a68f5.api.isUsingSystemAnim()) return _0x16f172 == _0x3c45c7 ? (_0x115e0c.freezePosition(true), await _0x4120fd(), _0x16f172 = false, _0x477aaf = true, _0x115e0c.freezePosition(false), await _0x1a68f5.api.teleportAndLoad(new _0x2d3381.Vector3(1578.15, 252.4, -0x2e), 168.87), void _0x2d3381.events.callRemote('3404531499', 'casino_club')) : _0x16f172 == _0x80b5ea ? (_0x1a68f5.api.teleportAndLoad(new _0x2d3381.Vector3(987.81, 80.09, 80.99), 0x0), _0x12b7f5(), _0x16f172 = false, _0x477aaf = false, void _0x2d3381.events.callRemote('3404531499', null)) : undefined;
        }), _0x2d3381.events.add('playerEnterColshape', _0x25411b => {
          _0x1a68f5.api.isAuthed() && (_0x25411b == _0x3c45c7 && (_0x16f172 = _0x25411b, _0x1a68f5.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)), _0x25411b == _0x80b5ea && (_0x16f172 = _0x25411b, _0x1a68f5.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)));
        }), _0x2d3381.events.add('playerExitColshape', _0x13cfe4 => {
          _0x1a68f5.api.isAuthed() && (_0x13cfe4 == _0x3c45c7 && (_0x16f172 = null, _0x2d3381.game.ui.clearHelp(true)), _0x13cfe4 == _0x80b5ea && (_0x16f172 = null, _0x2d3381.game.ui.clearHelp(true)));
        });

        let _0x397dde, _0x540523;

        const _0x3b8cd2 = () => {
          const a0_0x5ef6ca = {
            _0x31372c: 0x1551,
            _0x3a862e: 0x193,
            _0x22c170: 0x260e,
            _0x30a696: 0x1d66,
            _0x13924b: 0x1292,
            _0x49d66f: 0x1d66,
            _0x190e5c: 0x188e,
            _0x3f58b5: 0x535,
            _0x2da59d: 0x1063
          };

          try {
            let _0x55c33e = _0x2d3381.game.joaat('h4_prop_battle_club_screen'),
                _0x4b622b = {
              'x': 1553.505,
              'y': 249.8525,
              'z': -47.1915
            };

            _0x397dde = _0x2d3381.game.object.getClosestObjectOfType(_0x4b622b.x, _0x4b622b.y, _0x4b622b.z, 0x14, _0x55c33e, false, false, false), _0x540523 = ((_0x5e9110, _0x41f59b) => {
              try {
                let _0x90bd6e = 0x0;
                return _0x2d3381.game.ui.isNamedRendertargetRegistered(_0x5e9110) || _0x2d3381.game.ui.registerNamedRendertarget(_0x5e9110, false), _0x2d3381.game.ui.isNamedRendertargetLinked(_0x41f59b) || _0x2d3381.game.ui.linkNamedRendertarget(_0x41f59b), _0x2d3381.game.ui.isNamedRendertargetRegistered(_0x5e9110) && (_0x90bd6e = _0x2d3381.game.ui.getNamedRendertargetRenderId(_0x5e9110)), _0x90bd6e;
              } catch (_0x1db77b) {
                _0x1a68f5.api.sendError(_0x1db77b);
              }
            })('club_projector', _0x55c33e), _0x2d3381.game.audio.registerScriptWithAudio(0x0), _0x2d3381.game.graphics.setTvChannel(-0x1), _0x2d3381.game.graphics.setTvChannelPlaylist(0x0, 'PL_CN_MOODYMANN_GEO', true), _0x2d3381.game.graphics.setTvChannel(0x0), _0x2d3381.game.graphics.enableMovieSubtitles(true);
          } catch (_0xa69893) {
            _0x1a68f5.api.sendError(_0xa69893);
          }
        };

        _0x2d3381.events.add('render', () => {
          _0x477aaf && (_0x2d3381.game.graphics.setTvAudioFrontend(false), _0x2d3381.game.graphics.attachTvAudioToEntity(_0x397dde), _0x2d3381.game.ui.setTextRenderId(_0x540523), _0x2d3381.game.graphics.set2dLayer(0x4), _0x2d3381.game.graphics.setScriptGfxDrawBehindPausemenu(true), _0x2d3381.game.graphics.drawTvChannel(0.5, 0.5, 0x1, 0x1, 0x0, 0xff, 0xff, 0xff, 0xff), _0x2d3381.game.ui.setTextRenderId(_0x2d3381.game.hud.getDefaultScriptRendertargetRenderId()));
        });

        const _0x4120fd = () => new Promise(async (_0x722948, _0x24bfc7) => {
          const a0_0x3fc18e = {
            _0x13d744: 0x106d,
            _0x49587d: 0xea7
          };

          try {
            _0x2d3381.game.streaming.isIplActive('h4_dlc_int_02_h4') || _0x2d3381.game.streaming.requestIpl('h4_dlc_int_02_h4'), await _0x2d3381.game.sleep(0x64);
            let _0x59204a = false;
            return _0x9315b0.forEach(_0x213b81 => {
              _0x2d3381.game.interior.isInteriorPropEnabled(_0x58b64d, _0x213b81) || (_0x2d3381.game.interior.enableInteriorProp(_0x58b64d, _0x213b81), _0x59204a = true);
            }), _0x3b8cd2(), _0x59204a && _0x2d3381.game.interior.refreshInterior(_0x58b64d), _0x2d3381.game.audio.setEmitterRadioStation('SE_h4_dlc_int_02_h4_main_front_02', 'RADIO_32_DLC_HEI4_MM_CLUB'), _0x2d3381.game.audio.setEmitterRadioStation('SE_h4_dlc_int_02_h4_main_front_01', 'RADIO_32_DLC_HEI4_MM_CLUB'), _0x2d3381.game.audio.setEmitterRadioStation('SE_h4_dlc_int_02_h4_main_bar', 'RADIO_32_DLC_HEI4_MM_CLUB'), _0x2d3381.game.audio.setEmitterRadioStation('SE_h4_dlc_int_02_h4_lobby', 'RADIO_32_DLC_HEI4_MM_CLUB'), _0x2d3381.game.audio.setEmitterRadioStation('SE_h4_dlc_int_02_h4_Entrance_Doorway', 'RADIO_32_DLC_HEI4_MM_CLUB'), _0x2d3381.game.audio.setEmitterRadioStation('SE_h4_dlc_int_02_h4_Bogs', 'RADIO_32_DLC_HEI4_MM_CLUB'), _0x722948(true);
          } catch (_0x5f496e) {
            _0x1a68f5.api.sendError(_0x5f496e);
          }
        }),
              _0x12b7f5 = () => {
          const a0_0x3e0e60 = {
            _0xea7681: 0x106d,
            _0x4fe150: 0x59a,
            _0x404a44: 0x1d66,
            _0x4d0c90: 0x1faa
          };

          try {
            _0x1a68f5.api.invokeNative('RELEASE_SCRIPT_AUDIO_BANK'), _0x1a68f5.api.invokeNative('STOP_AUDIO_SCENES');
            let _0x3eb0e3 = false;
            _0x9315b0.forEach(_0x467853 => {
              _0x2d3381.game.interior.isInteriorPropEnabled(_0x58b64d, _0x467853) && (_0x2d3381.game.interior.disableInteriorProp(_0x58b64d, _0x467853), _0x3eb0e3 = true);
            }), _0x3eb0e3 && _0x2d3381.game.interior.refreshInterior(_0x58b64d), _0x2d3381.game.streaming.isIplActive('h4_dlc_int_02_h4') && _0x2d3381.game.streaming.removeIpl('h4_dlc_int_02_h4');
          } catch (_0x4a943f) {
            _0x1a68f5.api.sendError(_0x4a943f);
          }
        };
      },
      0x6222: (_0x114207, _0x3cec3a, _0xa34f99) => {
        'use strict';

        const a0_0x18b635 = {
          _0x2213aa: 0x15e0,
          _0x3b6302: 0x15e0
        };
        _0xa34f99.r(_0x3cec3a), _0xa34f99.d(_0x3cec3a, {
          'toggleCayoPericoIPL': () => _0x2f556b
        });

        var _0x4d49ce = _0xa34f99(0x16a21),
            _0x416553 = _0xa34f99(0x161cd);

        const _0x160e27 = new _0x416553.Vector3(4840.571, -5174.425, 0x2);

        let _0x5ecfc2 = false;
        const _0x5b8d53 = ['h4_islandairstrip', 'h4_islandairstrip_props', 'h4_islandx_mansion', 'h4_islandx_mansion_props', 'h4_islandx_props', 'h4_islandxdock', 'h4_islandxdock_props', 'h4_islandxdock_props_2', 'h4_islandxtower', 'h4_islandx_maindock', 'h4_islandx_maindock_props', 'h4_islandx_maindock_props_2', 'h4_IslandX_Mansion_Vault', 'h4_islandairstrip_propsb', 'h4_beach', 'h4_beach_props', 'h4_beach_bar_props', 'h4_islandx_barrack_props', 'h4_islandx_checkpoint', 'h4_islandx_checkpoint_props', 'h4_islandx_Mansion_Office', 'h4_islandx_Mansion_LockUp_01', 'h4_islandx_Mansion_LockUp_02', 'h4_islandx_Mansion_LockUp_03', 'h4_islandairstrip_hangar_props', 'h4_IslandX_Mansion_B', 'h4_islandairstrip_doorsclosed', 'h4_Underwater_Gate_Closed', 'h4_mansion_gate_closed', 'h4_aa_guns', 'h4_IslandX_Mansion_GuardFence', 'h4_IslandX_Mansion_Entrance_Fence', 'h4_IslandX_Mansion_B_Side_Fence', 'h4_IslandX_Mansion_Lights', 'h4_islandxcanal_props', 'h4_beach_props_party', 'h4_islandX_Terrain_props_06_a', 'h4_islandX_Terrain_props_06_b', 'h4_islandX_Terrain_props_06_c', 'h4_islandX_Terrain_props_05_a', 'h4_islandX_Terrain_props_05_b', 'h4_islandX_Terrain_props_05_c', 'h4_islandX_Terrain_props_05_d', 'h4_islandX_Terrain_props_05_e', 'h4_islandX_Terrain_props_05_f', 'H4_islandx_terrain_01', 'H4_islandx_terrain_02', 'H4_islandx_terrain_03', 'H4_islandx_terrain_04', 'H4_islandx_terrain_05', 'H4_islandx_terrain_06', 'h4_ne_ipl_00', 'h4_ne_ipl_01', 'h4_ne_ipl_02', 'h4_ne_ipl_03', 'h4_ne_ipl_04', 'h4_ne_ipl_05', 'h4_ne_ipl_06', 'h4_ne_ipl_07', 'h4_ne_ipl_08', 'h4_ne_ipl_09', 'h4_nw_ipl_00', 'h4_nw_ipl_01', 'h4_nw_ipl_02', 'h4_nw_ipl_03', 'h4_nw_ipl_04', 'h4_nw_ipl_05', 'h4_nw_ipl_06', 'h4_nw_ipl_07', 'h4_nw_ipl_08', 'h4_nw_ipl_09', 'h4_se_ipl_00', 'h4_se_ipl_01', 'h4_se_ipl_02', 'h4_se_ipl_03', 'h4_se_ipl_04', 'h4_se_ipl_05', 'h4_se_ipl_06', 'h4_se_ipl_07', 'h4_se_ipl_08', 'h4_se_ipl_09', 'h4_sw_ipl_00', 'h4_sw_ipl_01', 'h4_sw_ipl_02', 'h4_sw_ipl_03', 'h4_sw_ipl_04', 'h4_sw_ipl_05', 'h4_sw_ipl_06', 'h4_sw_ipl_07', 'h4_sw_ipl_08', 'h4_sw_ipl_09', 'h4_islandx_mansion', 'h4_islandxtower_veg', 'h4_islandx_barrack_hatch', 'h4_islandxdock_water_hatch', 'h4_beach_party', 'h4_mph4_air_airstrip_office_int', 'h4_mph4_air_airstrip_detail_002', 'h4_mph4_air_airstrip_01_detail', 'h4_mph4_air_airstrip_00', 'h4_islandairstrip_hangar_props', 'h4_mph4_airstrip', 'h4_airstrip_hanger', 'h4_mph4_airstrip_interior_0_airstrip_hanger'];
        let _0x4b5336 = 0x0;

        _0x416553.events.add('render', () => {
          if (_0x5ecfc2 && _0x4d49ce.api.invokeNative('DISABLE_OCCLUSION_THIS_FRAME'), Date.now() - _0x4b5336 < 0x64) return;
          _0x4b5336 = Date.now(), _0x4d49ce.api.vdist2(_0x160e27, _0x416553.players.local.position) < 0x9c4 ? _0x5ecfc2 || (_0x5ecfc2 = true, _0x391e74(true)) : _0x5ecfc2 && (_0x5ecfc2 = false, _0x391e74(false));
        });

        const _0x391e74 = _0x43292b => {
          _0x4d49ce.api.invokeNative('TOGGLE_GAMEMAP', 'HeistIsland', _0x43292b), _0x4d49ce.api.invokeNative('TOGGLE_CAYOMINIMAP', _0x43292b), _0x43292b ? _0x416553.events.callRemote('422761503', false) : _0x416553.events.callRemote('1192110719', false);
        },
              _0x2f556b = _0x469cc5 => {
          const a0_0x286458 = {
            _0x76c16a: 0x1d66,
            _0x14b670: 0x140a,
            _0x4940a8: 0x15e0,
            _0x2fb802: 0x1151
          };
          _0x469cc5 ? _0x5b8d53.forEach(_0xf51290 => {
            _0x416553.game.streaming.isIplActive(_0xf51290) || _0x416553.game.streaming.requestIpl(_0xf51290);
          }) : _0x5b8d53.forEach(_0x1f2abe => {
            _0x416553.game.streaming.isIplActive(_0x1f2abe) && _0x416553.game.streaming.removeIpl(_0x1f2abe);
          });
        };

        _0x4d49ce.api.invokeNative('TOGGLE_GAMEMAP', 'HeistIsland', false);
      },
      0x26c3: (_0x2d9a36, _0x29c993, _0x440682) => {
        'use strict';

        _0x440682.r(_0x29c993);

        var _0x1c0281 = _0x440682(0x16a21),
            _0x442d30 = _0x440682(0x161cd);

        const _0x3b75b0 = [],
              _0x65b1e2 = [{
          'x': -748.1721,
          'y': 248.4383,
          'z': 76.3366,
          'type': 'qnx_if_store_tinkle'
        }, {
          'x': -774.5333,
          'y': -600.7365,
          'z': 29.2789,
          'type': 'qnx_if_store_whiz'
        }, {
          'x': -644.1272,
          'y': -281.783,
          'z': 34.5775,
          'type': 'qnx_if_store_bager'
        }];

        let _0x23f0cf, _0x37403d;

        _0x442d30.events.add('playerEnterInterior', _0x5a80a9 => {
          _0x3b75b0.includes(_0x5a80a9) && (_0x37403d = 'SHOPASSISTANT', _0x1c0281.api.playPedSpeech(_0x1c0281.api.getNearestPed(0x64).id, 'SHOP_GREET', _0x37403d, 'SPEECH_PARAMS_FORCE')), _0x23f0cf = _0x5a80a9;
        }), _0x442d30.events.add('playerExitInterior', _0x3c9bbc => {
          _0x3b75b0.includes(_0x23f0cf) && (_0x1c0281.api.playPedSpeech(_0x1c0281.api.getNearestPed(0x64).id, 'SHOP_GOODBYE', _0x37403d, 'SPEECH_PARAMS_FORCE'), _0x37403d = null), _0x23f0cf = _0x3c9bbc;
        }), _0x442d30.events.add('auth.client.onPlayerAuthAccount', () => {
          const a0_0x185495 = {
            _0x3e469b: 0x1d66,
            _0x3a62d9: 0x106d,
            _0x247db4: 0x59a,
            _0x148c30: 0x1d66,
            _0x276f4e: 0xea7,
            _0x58227: 0x19e6,
            _0x401fb0: 0x1d66,
            _0x56dbe9: 0x1f87
          };

          _0x65b1e2.forEach((_0x20c846, _0x26f437) => {
            const _0x550b61 = _0x442d30.game.interior.getInteriorAtCoords(_0x20c846.x, _0x20c846.y, _0x20c846.z);

            _0x550b61 > 0x0 && (_0x3b75b0.push(_0x550b61), _0x442d30.game.interior.isInteriorPropEnabled(_0x550b61, _0x20c846.type) || (_0x442d30.game.interior.enableInteriorProp(_0x550b61, _0x20c846.type), _0x442d30.game.interior.refreshInterior(_0x550b61)));
          });
        });
      },
      0x4666: (_0x18fad6, _0x353206, _0x38099e) => {
        'use strict';

        const a0_0x2a71e9 = {
          _0x166e2b: 0x1d66
        },
              a0_0x13705d = {
          _0x2870cf: 0x2236
        },
              a0_0x2e9266 = {
          _0x53514b: 0x1edc,
          _0x248fd5: 0x927
        },
              a0_0x462492 = {
          _0x4b3984: 0x1edc,
          _0x4b9987: 0x235b,
          _0x21c1e9: 0x185e,
          _0x4e63e3: 0x1dc,
          _0x48acb8: 0x212a,
          _0x562ca6: 0x927
        },
              a0_0x42b79d = {
          _0x2146ee: 0x1d66,
          _0x1d668e: 0x106d,
          _0x268ed3: 0xe6d,
          _0x680ae4: 0x1d66,
          _0x10bce9: 0x1f87
        };

        _0x38099e.r(_0x353206);

        var _0x5b0779 = _0x38099e(0x16a21),
            _0x552ac4 = _0x38099e(0x16e5f),
            _0x1e823c = _0x38099e(0x161cd);

        const _0x4353ae = [{
          'x': -1675.199,
          'y': -283.1182,
          'z': 59.93,
          'type': 'q_chur'
        }, {
          'x': -314.6444,
          'y': 6153.321,
          'z': 40.35388,
          'type': 'q_chur'
        }, {
          'x': -318.4994,
          'y': 2804.191,
          'z': 67.49039,
          'type': 'q_chur'
        }],
              _0xeb6b2a = [],
              _0x590814 = ['ipl_pohoroni', 'ipl_wedd', 'ipl_molitva'];
        _0x1e823c.events.add('worldDataRemoved', _0x580df7 => {
          'churchInterior' == _0x580df7 && _0x541ae6();
        }), _0x1e823c.events.add('worldDataChanged', (_0x40dcff, _0x2f00de, _0xd3836d) => {
          'churchInterior' == _0x40dcff && _0x541ae6(_0x2f00de);
        });

        const _0x541ae6 = (_0x40b98a = _0x1e823c.world.data.churchInterior) => {
          _0x4353ae.forEach((_0x3849cf, _0x277d57) => {
            const _0x5d9725 = _0x1e823c.game.interior.getInteriorAtCoords(_0x3849cf.x, _0x3849cf.y, _0x3849cf.z),
                  _0x90eeb9 = _0x40b98a[_0x277d57],
                  _0x1ac164 = _0x590814[_0x90eeb9];

            _0x1e823c.game.interior.isInteriorPropEnabled(_0x5d9725, _0x1ac164) || (_0x590814.forEach(_0x23eebe => {
              _0x23eebe != _0x1ac164 && _0x1e823c.game.interior.disableInteriorProp(_0x5d9725, _0x23eebe);
            }), _0x1e823c.game.interior.enableInteriorProp(_0x5d9725, _0x1ac164), _0x1e823c.game.interior.refreshInterior(_0x5d9725));
          });
        };

        let _0x4bc6d8 = false;
        _0x1e823c.events.add('playerEnterInterior', _0x38ebb5 => {
          _0xeb6b2a.includes(_0x38ebb5) && (null == _0x1e823c.players.local.settings.ambientMusic || _0x5b0779.api.getPlayerSetting('ambientMusic')) && (_0x4bc6d8 && _0x552ac4.Z.stop(), _0x1e6d59(), _0x4bc6d8 = true);
        }), _0x1e823c.events.add('playerExitInterior', _0x5c959f => {
          _0xeb6b2a.includes(_0x5c959f) && _0x4bc6d8 && (_0x552ac4.Z.stop(), _0x4bc6d8 = false);
        });

        const _0x1e6d59 = () => {
          _0x552ac4.Z.play('church', {
            'volume': 0xa
          });
        };

        _0x1e823c.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x4353ae.forEach((_0x21163b, _0x2236a4) => {
            const _0x1cd3f9 = _0x1e823c.game.interior.getInteriorAtCoords(_0x21163b.x, _0x21163b.y, _0x21163b.z);

            _0xeb6b2a.push(_0x1cd3f9);
          }), _0x541ae6();
        });
      },
      0xbf59: (_0x4cfa1e, _0x13d512, _0x2637a3) => {
        'use strict';

        const a0_0x17b518 = {
          _0x164ece: 0xf86,
          _0x3d0752: 0xf86,
          _0x17612b: 0x1e4b,
          _0xf2a333: 0x535,
          _0x66921a: 0xf86,
          _0x27a77d: 0xf86,
          _0x252ff4: 0x21f4,
          _0x3fe35e: 0xf86
        },
              a0_0x29ccef = {
          _0x146c75: 0xfa6,
          _0x2e78bc: 0x1dda,
          _0x4f61fb: 0xc95,
          _0x4abca8: 0x14d2,
          _0x784bab: 0x1da5,
          _0x25a9f5: 0x1a4f,
          _0x27beef: 0x535,
          _0x22ad2d: 0x1ea6,
          _0x1cba63: 0x13f7,
          _0x3c67df: 0xd11,
          _0x529936: 0x1598,
          _0xeaa7f8: 0xf79,
          _0x3253ed: 0x1ce6,
          _0x50c42f: 0x1d55,
          _0x49f918: 0x535,
          _0x346b3c: 0x535,
          _0x58b672: 0x1d55,
          _0x576579: 0x13f7
        };

        _0x2637a3.r(_0x13d512);

        var _0x546e2c = _0x2637a3(0x16a21),
            _0x472975 = _0x2637a3(0x161cd);

        const _0x25e169 = _0x472975.players.local,
              _0x856323 = {
          'firstFloor': new _0x472975.Vector3(136.72, -762.58, 45.75),
          'lastFloor': new _0x472975.Vector3(136.84, -762.6, 242.1)
        },
              _0x45d620 = {
          'x': 136.04,
          'y': -761.67,
          'z': 45.75,
          'r': 155.6
        },
              _0x53f5d4 = {
          'x': 136.22,
          'y': -0x2fa,
          'z': 242.15,
          'r': 155.6
        };
        let _0x2fd20e = null;

        const _0x47b4e9 = _0x472975.colshapes.newSphere(_0x856323.firstFloor.x, _0x856323.firstFloor.y, _0x856323.firstFloor.z, 0x1, 0x0),
              _0x5e19f7 = _0x472975.colshapes.newSphere(_0x856323.lastFloor.x, _0x856323.lastFloor.y, _0x856323.lastFloor.z, 0x1, 0x0),
              _0x2c9748 = _0x472975.colshapes.newSphere(131.18, -762.16, 242.15, 0x1);

        _0x2c9748.marker = _0x472975.markers.new(0x1, new _0x472975.Vector3(131.18, -762.16, 241.15), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x56a22c = _0x472975.colshapes.newSphere(156.68, -757.64, 258.15, 0x1);

        _0x56a22c.marker = _0x472975.markers.new(0x1, new _0x472975.Vector3(156.68, -757.64, 257.15), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x57e65b = _0x472975.colshapes.newSphere(133.74, -768.67, 45.75, 0x1);

        _0x57e65b.marker = _0x472975.markers.new(0x1, new _0x472975.Vector3(133.74, -768.67, 44.75), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        });

        const _0x95bf0d = _0x472975.colshapes.newSphere(65.74, -749.64, 31.63, 0x1);

        _0x95bf0d.marker = _0x472975.markers.new(0x1, new _0x472975.Vector3(65.74, -749.64, 30.63), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64],
          'visible': true,
          'dimension': 0x0
        }), _0x472975.events.add('keys.e', () => {
          if (!_0x546e2c.api.isUsingSystemAnim()) return _0x2fd20e == _0x47b4e9 ? (_0x25e169.getVariable('job') && 'floorwasher' == JSON.parse(_0x25e169.getVariable('job')).name && _0x472975.events.callRemote('557376767', true), void _0x546e2c.api.teleportAndLoad(new _0x472975.Vector3(_0x53f5d4.x, _0x53f5d4.y, _0x53f5d4.z), _0x53f5d4.r, {
            'sound': 'elevator'
          })) : _0x2fd20e == _0x5e19f7 ? (_0x25e169.getVariable('job') && 'floorwasher' == JSON.parse(_0x25e169.getVariable('job')).name && _0x472975.events.callRemote('2958836261'), void _0x546e2c.api.teleportAndLoad(new _0x472975.Vector3(_0x45d620.x, _0x45d620.y, _0x45d620.z), _0x45d620.r, {
            'sound': 'elevator'
          })) : void (_0x2fd20e != _0x2c9748 ? _0x2fd20e != _0x56a22c ? _0x2fd20e != _0x57e65b ? _0x2fd20e != _0x95bf0d || _0x546e2c.api.teleportAndLoad(new _0x472975.Vector3(133.74, -768.67, 45.75), 0x15c, {
            'sound': 'elevator'
          }) : _0x546e2c.api.teleportAndLoad(new _0x472975.Vector3(65.74, -749.64, 31.63), 61.08, {
            'sound': 'elevator'
          }) : _0x546e2c.api.teleportAndLoad(new _0x472975.Vector3(131.18, -762.16, 242.15), 348.82, {
            'sound': 'elevator'
          }) : _0x546e2c.api.teleportAndLoad(new _0x472975.Vector3(156.68, -757.64, 258.15), 160.36, {
            'sound': 'elevator'
          }));
        }), _0x472975.events.add('playerEnterColshape', _0x3ca6e3 => {
          if (_0x546e2c.api.isAuthed()) return _0x3ca6e3 == _0x47b4e9 && (_0x2fd20e = _0x3ca6e3, _0x546e2c.api.displayHelpStringTrans('displayHelpString.toUseElevator', false, true, 0x1388)), _0x3ca6e3 == _0x5e19f7 && (_0x2fd20e = _0x3ca6e3, _0x546e2c.api.displayHelpStringTrans('displayHelpString.toUseElevator', false, true, 0x1388)), _0x2c9748 === _0x3ca6e3 ? (_0x2fd20e = _0x3ca6e3, void _0x546e2c.api.displayHelpStringTrans('displayHelpString.goUp', false, true, 0x1388)) : _0x56a22c === _0x3ca6e3 || _0x57e65b === _0x3ca6e3 ? (_0x2fd20e = _0x3ca6e3, void _0x546e2c.api.displayHelpStringTrans('displayHelpString.goDown', false, true, 0x1388)) : _0x95bf0d === _0x3ca6e3 ? (_0x2fd20e = _0x3ca6e3, void _0x546e2c.api.displayHelpStringTrans('displayHelpString.goUp', false, true, 0x1388)) : undefined;
        }), _0x472975.events.add('playerExitColshape', _0x1e512a => {
          _0x546e2c.api.isAuthed() && (_0x1e512a == _0x47b4e9 && (_0x2fd20e = null, _0x472975.game.ui.clearHelp(true)), _0x1e512a == _0x5e19f7 && (_0x2fd20e = null, _0x472975.game.ui.clearHelp(true)), _0x1e512a === _0x2c9748 && (_0x2fd20e = null, _0x472975.game.ui.clearHelp(true)), _0x1e512a === _0x56a22c && (_0x2fd20e = null, _0x472975.game.ui.clearHelp(true)), _0x1e512a === _0x57e65b && (_0x2fd20e = null, _0x472975.game.ui.clearHelp(true)), _0x1e512a === _0x95bf0d && (_0x2fd20e = null, _0x472975.game.ui.clearHelp(true)));
        });
      },
      0x120c5: (_0x1a4bb4, _0xfb4c66, _0x45dbea) => {
        'use strict';

        const a0_0x2fadcb = {
          _0x11caaf: 0x1e35,
          _0x10eba3: 0x157f,
          _0x44fe7b: 0x1d66,
          _0x1fe90a: 0x1d35,
          _0x5b9019: 0x1e35,
          _0x382910: 0x1d35,
          _0x47c547: 0x1d66,
          _0x2fa057: 0x17fa
        },
              a0_0x2d50e3 = {
          _0x538837: 0x1fe9,
          _0x2b08c0: 0x1f30
        },
              a0_0x27f52b = {
          _0x294e27: 0x253d,
          _0x402936: 0x1d66
        };

        _0x45dbea.r(_0xfb4c66);

        var _0x20ba44 = _0x45dbea(0x16a21),
            _0x1bf888 = _0x45dbea(0x46da),
            _0x4dddce = _0x45dbea(0x161cd);

        const _0x1fef14 = _0x4dddce.players.local;

        let _0x2c70a1,
            _0x50574d = {
          'type': 'apartments',
          'id': 0x0
        },
            _0x1b2933 = [];

        Object.values(_0x1bf888.Z).forEach((_0x2b5bf9, _0x5beba5) => {
          if (_0x5beba5 >= 0x1 && _0x5beba5 <= 0x4) return;

          const _0x3d2933 = _0x4dddce.colshapes.newSphere(_0x2b5bf9.position.x, _0x2b5bf9.position.y, _0x2b5bf9.position.z, 0x1, -0x1);

          _0x1b2933.push(_0x3d2933);
        }), _0x4dddce.events.add('playerEnterColshape', _0x42f94d => {
          _0x20ba44.api.isAuthed() && 0x0 !== _0x1fef14.dimension && _0x1b2933.includes(_0x42f94d) && (_0x20ba44.api.displayHelpStringTrans('displayHelpString.interactTV', false, true, 0x1388), _0x2c70a1 = _0x42f94d);
        }), _0x4dddce.events.add('playerExitColshape', _0x4f026f => {
          _0x20ba44.api.isAuthed() && 0x0 !== _0x1fef14.dimension && _0x1b2933.includes(_0x4f026f) && (_0x4dddce.game.ui.clearHelp(true), _0x2c70a1 = undefined);
        }), _0x4dddce.events.add('keys.e', () => {
          _0x2c70a1 && _0x50574d && 'apartments' && _0x50574d.id && _0x4dddce.events.callRemote('1857457398', 'apartments', _0x50574d.id);
        });
        let _0x8db274 = 0x0,
            _0x28190e = 0x0;

        const _0x1dead6 = (_0x358b86, _0x247a74, _0x358b8b = new _0x4dddce.Vector3(0x0, 0x0, 0x0)) => {
          _0x358b86 ? (_0x8db274 && _0x4dddce.game.ui.releaseNamedRendertarget('tvscreen'), _0x8db274 = _0x20ba44.api.createNamedRenderTargetForModel('tvscreen', _0x247a74), _0x28190e = _0x4dddce.game.object.getClosestObjectOfType(_0x358b8b.x, _0x358b8b.y, _0x358b8b.z, 0x3c, _0x247a74, false, false, false), _0x4dddce.game.audio.registerScriptWithAudio(0x0), _0x4dddce.game.graphics.setTvChannel(-0x1), _0x4dddce.game.graphics.setTvChannelPlaylist(0x2, 'PL_STD_CNT', true), _0x4dddce.game.graphics.setTvChannel(0x2), _0x4dddce.game.graphics.setTvVolume(0x64)) : (_0x8db274 && _0x4dddce.game.ui.releaseNamedRendertarget('tvscreen'), _0x4dddce.game.graphics.setTvChannel(-0x1), _0x8db274 = null);
        };

        _0x4dddce.events.add('interiors.houses.setTv', (_0x33fef2, _0x192ec8) => {
          if (isNaN(_0x192ec8)) return;
          const _0x16c310 = _0x1bf888.Z[_0x192ec8];
          _0x16c310 && _0x1dead6(!!_0x33fef2, _0x4dddce.game.joaat(_0x16c310.entity), _0x16c310.position);
        }), _0x4dddce.events.add('interiors.houses.enteredIn', (_0x236f67, _0x59477d) => {
          isNaN(_0x59477d) || (_0x50574d = {
            'type': _0x236f67,
            'id': _0x59477d
          });
        }), _0x4dddce.events.add('render', () => {
          _0x8db274 && (_0x4dddce.game.graphics.setTvAudioFrontend(false), _0x4dddce.game.graphics.attachTvAudioToEntity(_0x28190e), _0x4dddce.game.ui.setTextRenderId(_0x8db274), _0x4dddce.game.graphics.set2dLayer(0x4), _0x4dddce.game.graphics.setScriptGfxDrawBehindPausemenu(true), _0x4dddce.game.graphics.drawTvChannel(0.5, 0.5, 0x1, 0x1, 0x0, 0xff, 0xff, 0xff, 0xff), _0x4dddce.game.ui.setTextRenderId(_0x4dddce.game.hud.getDefaultScriptRendertargetRenderId()), _0x4dddce.game.graphics.setScriptGfxDrawBehindPausemenu(false));
        }), _0x4dddce.events.add('playerExitInterior', () => {
          _0x8db274 && _0x1dead6(false);
        });
      },
      0xb5d5: (_0x214ee6, _0x32d7c0, _0x4d8579) => {
        _0x4d8579(0x4fc8), _0x4d8579(0x171a3), _0x4d8579(0xfaa1), _0x4d8579(0xd3fd), _0x4d8579(0xbf59), _0x4d8579(0x75fd), _0x4d8579(0x3fba), _0x4d8579(0xb85b), _0x4d8579(0x1c9c), _0x4d8579(0x1853a), _0x4d8579(0xa88f), _0x4d8579(0x2c20), _0x4d8579(0x120c5), _0x4d8579(0xfa68), _0x4d8579(0x116b), _0x4d8579(0xa0fc), _0x4d8579(0x6222), _0x4d8579(0xaba1), _0x4d8579(0x4666), _0x4d8579(0xb959), _0x4d8579(0x41b7), _0x4d8579(0xc4d3), _0x4d8579(0x159ff), _0x4d8579(0x26c3), _0x4d8579(0xbf7b), _0x4d8579(0x7112), _0x4d8579(0x1700c);
      },
      0x4fc8: (_0x238684, _0x4cc921, _0x87f135) => {
        'use strict';

        const a0_0x381deb = {
          _0x18bc62: 0xe6d,
          _0x31e746: 0x1d66,
          _0x54cd01: 0x1fe9,
          _0x4f20cf: 0x1be4,
          _0x3c0014: 0x1d66,
          _0x37fb85: 0x1fe9,
          _0xbf7467: 0x2379,
          _0x265f5e: 0x1bac,
          _0x494fe9: 0x1fe9,
          _0x3035ad: 0x1be4,
          _0x2e7056: 0x1d66,
          _0x44e2cb: 0x2379,
          _0xc74066: 0x124d,
          _0x492241: 0x1d66,
          _0x348262: 0x1be4,
          _0x4c6632: 0x1be4,
          _0x4e2696: 0x1d66,
          _0x351c49: 0x1fe9,
          _0x5a91ec: 0x1fe9,
          _0x1abc17: 0x1fe9,
          _0x18a2e6: 0x1be4,
          _0x195ecf: 0x1be4,
          _0x934670: 0x1fe9,
          _0xc6ea63: 0x1fe9,
          _0x16db6f: 0x1be4,
          _0x195d52: 0x1d66,
          _0x50ed75: 0x1fe9,
          _0x3fa990: 0x1d66,
          _0x203a7c: 0x1fe9,
          _0x3873b8: 0x1d66,
          _0x188d65: 0x1fe9,
          _0x1ecc8b: 0x1d66,
          _0x6d1ab6: 0x1d66,
          _0x4e5583: 0x1be4,
          _0x31c5ae: 0x1d66,
          _0x3aba59: 0x1be4,
          _0x2456f2: 0x1be4,
          _0x256cfb: 0x1fe9,
          _0x4e7969: 0x1d66,
          _0x15d0fc: 0x1fe9,
          _0x3bc7cf: 0x1fe9,
          _0x4276f7: 0x1fe9,
          _0xdfbb40: 0x1be4,
          _0x26558b: 0x1be4,
          _0xeb5ebb: 0x1d66,
          _0x54ebda: 0x1be4,
          _0x123f4c: 0x1fe9,
          _0x3e9bba: 0x1be4,
          _0x59a105: 0x1d66,
          _0xd486b1: 0x1be4,
          _0x2a7654: 0x1d66,
          _0x31852c: 0x1fe9,
          _0x34c519: 0x1be4,
          _0xff159b: 0x1fe9,
          _0x5eb4e1: 0x1be4,
          _0x2a9d9b: 0x1d66,
          _0x15126e: 0x1d66,
          _0x1c753d: 0x1fe9,
          _0x358f6b: 0x1be4,
          _0x48f47e: 0x1be4,
          _0x583548: 0x1d66,
          _0x41e81a: 0x1d66,
          _0x2f5d7a: 0x1be4,
          _0x5c0cb1: 0x1be4,
          _0x2e30ca: 0x1fe9,
          _0x179e3f: 0x1d66,
          _0x1a34c2: 0x1fe9,
          _0x294eeb: 0x1be4,
          _0x46a821: 0x1d66,
          _0x38e051: 0x1d66,
          _0x49236e: 0x1d66,
          _0xd7b7e6: 0x1be4,
          _0x6c2c0e: 0x1d66,
          _0x5c5205: 0x1d66,
          _0x204bcb: 0x1fe9,
          _0x190adc: 0x1be4,
          _0x3fb56e: 0x1fe9,
          _0x36108d: 0x1be4,
          _0x4cccec: 0x1fe9,
          _0x19d1cc: 0x1d66,
          _0x2d60ed: 0x1fe9,
          _0xa88077: 0x1fe9,
          _0x5b462a: 0x1be4,
          _0x5397da: 0x2379,
          _0x297c94: 0x19fa,
          _0x32a709: 0x1d66,
          _0x9bcfdc: 0x1fe9,
          _0x5d4661: 0x1fe9,
          _0x47b24c: 0x2379,
          _0x205fc9: 0x1fe9,
          _0x52cff7: 0x1fe9,
          _0x4d74bc: 0x1d66,
          _0x28add8: 0x1be4,
          _0x37522b: 0x1fe9,
          _0xbe567b: 0x1be4,
          _0x141964: 0x1be4,
          _0x2578a0: 0x1d66,
          _0x3a7cc2: 0x1be4,
          _0x44ef59: 0x1d66,
          _0x454a4b: 0x1d66,
          _0xc702c8: 0x1be4,
          _0x548520: 0x1be4,
          _0x54de68: 0x1fe9,
          _0x10f6d5: 0x1be4,
          _0x411e9a: 0x1be4,
          _0x3f3727: 0x1be4,
          _0xaa82d1: 0x1fe9,
          _0x520304: 0x1d66,
          _0xfd6bb7: 0x1d66
        },
              a0_0x9f5d31 = {
          _0x58d94e: 0x15e0,
          _0xdf5200: 0x815
        };

        _0x87f135.r(_0x4cc921);

        var _0x209ef7 = _0x87f135(0x10c56),
            _0x7a325f = _0x87f135(0x161cd);

        const _0x5e4332 = ['bh1_47_joshhse_unburnt', 'imp_dt1_02_modgarage', 'shr_int', 'trevorstrailertidy', 'post_hiest_unload', 'FINBANK', 'Coroner_Int_on', 'CS1_02_cf_onmission1', 'CS1_02_cf_onmission2', 'CS1_02_cf_onmission3', 'CS1_02_cf_onmission4', 'farm', 'farm_int', 'farm_lod', 'farm_props', 'des_farmhouse', 'FIBlobby', 'dt1_05_fib2_normal', 'FruitBB', 'sc1_01_newbill', 'hw1_02_newbill', 'hw1_emissive_newbill', 'sc1_14_newbill', 'dt1_17_newbill', 'id2_14_during_door', 'id2_14_during1', 'facelobby', 'hei_carrier', 'hei_carrier_distantlights', 'hei_carrier_int1', 'hei_carrier_int1_lod', 'hei_carrier_int2', 'hei_carrier_int2_lod', 'hei_carrier_int3', 'hei_carrier_int3_lod', 'hei_carrier_int4', 'hei_carrier_int4_lod', 'hei_carrier_int5', 'hei_carrier_int5_lod', 'hei_carrier_int6', 'hei_carrier_lod', 'hei_carrier_lodlights', 'hei_carrier_slod', 'hei_yacht_heist', 'hei_yacht_heist_enginrm', 'hei_yacht_heist_Lounge', 'hei_yacht_heist_Bridge', 'hei_yacht_heist_Bar', 'hei_yacht_heist_Bedrm', 'hei_yacht_heist_DistantLights', 'hei_yacht_heist_LODLights', 'gr_heist_yacht2', 'gr_heist_yacht2_bar', 'gr_heist_yacht2_bedrm', 'gr_heist_yacht2_bridge', 'gr_heist_yacht2_enginrm', 'gr_heist_yacht2_lounge', 'gr_grdlc_interior_placement_interior_0_grdlc_int_01_milo_', 'v_tunnel_hole', 'Carwash_with_spinners', 'sp1_10_real_interior', 'sp1_10_real_interior_lod', 'ch1_02_open', 'bkr_bi_id1_23_door', 'lr_cs6_08_grave_closed', 'methtrailer_grp1', 'CanyonRvrShallow', 'bh1_47_joshhse_unburnt', 'bh1_47_joshhse_unburnt_lod', 'cargoship', 'ex_sm_13_office_02b', 'ex_dt1_02_office_02b', 'ex_sm_15_office_01a', 'ex_dt1_11_office_01b', 'hei_sm_16_interior_v_bahama_milo_', 'hei_hw1_blimp_interior_v_studio_lo_milo_', 'hei_hw1_blimp_interior_v_apart_midspaz_milo_', 'hei_hw1_blimp_interior_32_dlc_apart_high2_new_milo_', 'hei_hw1_blimp_interior_10_dlc_apart_high_new_milo_', 'hei_hw1_blimp_interior_28_dlc_apart_high2_new_milo_', 'hei_hw1_blimp_interior_27_dlc_apart_high_new_milo_', 'hei_hw1_blimp_interior_29_dlc_apart_high2_new_milo_', 'hei_hw1_blimp_interior_30_dlc_apart_high2_new_milo_', 'hei_hw1_blimp_interior_31_dlc_apart_high2_new_milo_', 'apa_ch2_05e_interior_0_v_mp_stilts_b_milo_', 'apa_ch2_04_interior_0_v_mp_stilts_b_milo_', 'apa_ch2_04_interior_1_v_mp_stilts_a_milo_', 'apa_ch2_09c_interior_2_v_mp_stilts_b_milo_', 'apa_ch2_09b_interior_1_v_mp_stilts_b_milo_', 'apa_ch2_09b_interior_0_v_mp_stilts_a_milo_', 'apa_ch2_05c_interior_1_v_mp_stilts_a_milo_', 'apa_ch2_12b_interior_0_v_mp_stilts_a_milo_', 'bkr_biker_interior_placement_interior_0_biker_dlc_int_01_milo', 'apa_v_mp_h_03_b', 'ferris_finale_Anim', 'bkr_biker_interior_placement_interior_6_biker_dlc_int_ware05_milo', 'ballas_milo_', 'bkr_bi_hw1_13_int', 'gabz_pillbox_milo_', 'vw_casino_penthouse', 'hei_dlc_windows_casino', 'hei_dlc_casino_aircon', 'hei_dlc_casino_door', 'vw_dlc_casino_door', 'h4_dlc_int_02_h4', 'tr_tuner_meetup'],
              _0x399dfe = ['rc12b_default', 'rc12b_fixed', 'rc12b_destroyed', 'rc12b_hospitalinterior_lod', 'rc12b_hospitalinterior', 'hei_bi_hw1_13_door', 'CS3_07_MPGates', 'occl_meth_grp1', 'sunkcargoship', 'hei_occl_meth_grp1', 'ch1_01_church_lod'];

        _0x7a325f.events.add('auth.client.onPlayerAuthAccount', () => {
          const a0_0x5c524f = {
            _0x258eb0: 0x2045,
            _0x2161fe: 0x1d66,
            _0x17af04: 0x1be4,
            _0x44a2cb: 0x13b4,
            _0x1f7fed: 0xce5,
            _0x47f5b0: 0x1fe9,
            _0x1053d9: 0x2379
          },
                a0_0x68b33d = {
            _0x68cf1b: 0x15e0,
            _0x29dbc3: 0x1d66,
            _0x4476d: 0x1151
          };
          _0x5e4332.forEach(_0x2d10fd => {
            _0x7a325f.game.streaming.isIplActive(_0x2d10fd) || _0x7a325f.game.streaming.requestIpl(_0x2d10fd);
          }), _0x399dfe.forEach(_0x5f37b0 => {
            _0x7a325f.game.streaming.isIplActive(_0x5f37b0) && _0x7a325f.game.streaming.removeIpl(_0x5f37b0);
          }), _0x7a325f.game.entity.createModelHide(-72.77863, -682.1697, 34.5284, 0x1, 0xff3fcb5, true), _0x7a325f.game.entity.createModelHide(-1383.038, 476.2039, 105.174, 0x1, 0xf4e5268, true), _0x7a325f.game.entity.createModelHide(-875.4845, 18.12612, 44.4434, 0x1, 0xcda4f5e3, true), _0x7a325f.game.entity.createModelHide(-880.5942, -9.556821, 41.97635, 0x1, 0x81509c7b, true), _0x7a325f.game.entity.createModelHide(-1044.749, 4914.972, 209.1932, 0x1, 0xa1e58f89, true), _0x7a325f.game.entity.createModelHide(-1041.233, 4906.101, 209.2002, 0x1, 0xff374a2b, true), _0x7a325f.game.entity.createModelHide(-802.73, 167.5, 77.58, 0x1, _0x7a325f.game.joaat('v_ilev_mm_windowwc'), false), _0x7a325f.game.entity.createModelHide(-1880.29, 2069.03, 141.81, 0x1, _0x7a325f.game.joaat('v_res_m_l_chair1'), true), _0x7a325f.game.entity.createModelHide(150.8952, -1004.56, -99.00565, 0x1, _0x7a325f.game.joaat('v_49_motelmp_screen'), true), _0x7a325f.game.entity.createModelHide(-2307.562, 3390.592, 30.997, 0x1, 0xb965b659, true), _0x7a325f.game.entity.createModelHide(-2307.326, 3390.5, 29.97321, 0x1, 0x12583968, true), _0x7a325f.game.entity.createModelHide(-2299.757, 3385.049, 30.0539, 0x1, 0x12583968, true), _0x7a325f.game.entity.createModelHide(-2299.539, 3384.949, 31.06581, 0x1, 0xb965b659, true), _0x7a325f.game.entity.createModelHide(-1589.583, 2793.671, 16.85906, 0x1, 0xb965b659, true), _0x7a325f.game.entity.createModelHide(-1589.373, 2793.529, 15.83527, 0x1, 0x12583968, true), _0x7a325f.game.entity.createModelHide(-1588.458, 2794.356, 15.83527, 0x1, 0x12583968, true), _0x7a325f.game.entity.createModelHide(-1588.267, 2794.213, 16.84719, 0x1, 0xb965b659, true), _0x7a325f.game.entity.createModelHide(2574.63, -300.6415, 92.84311, 0x1, -0x469a49a7, true), _0x7a325f.game.entity.createModelHide(2575.3, -288.4294, 92.75156, 0x1, 0x4951d513, true), _0x7a325f.game.entity.createModelHide(2575.011, -288.4294, 91.98873, 0x1, 0x12583968, true), _0x7a325f.game.entity.createModelHide(2575.011, -282.4543, 91.98873, 0x1, 0x12583968, true), _0x7a325f.game.entity.createModelHide(2575.3, -282.4543, 92.75156, 0x1, 0x4951d513, true), _0x7a325f.game.entity.createModelHide(2574.919, -300.6415, 92.08029, 0x1, 0x12583968, true), _0x7a325f.game.entity.createModelHide(1966.822, 3043.718, 46.0582, 0x1, -0x38123be1, true), _0x7a325f.game.entity.createModelHide(1969.74, 3049.177, 46.04954, 0x1, 0x46a74190, true), _0x7a325f.game.entity.createModelHide(2006.448, 3045.547, 46.02565, 0x1, -0x7017accf, true), _0x7a325f.game.entity.createModelHide(2006.6, 3044.611, 46.47127, 0x1, -0x324a18f, true), _0x7a325f.game.entity.createModelHide(1980.815, 3058.477, 46.66528, 0x1, -0x3354d318, true), _0x7a325f.game.entity.createModelHide(1980.059, 3059.865, 46.41807, 0x1, 0x4d6410f7, true), _0x7a325f.game.entity.createModelHide(1982.894, 3057.215, 46.61264, 0x1, 0x115d9ea5, true), _0x7a325f.game.entity.createModelHide(1983.346, 3058.649, 46.1945, 0x1, -0x7cc0bef, true), _0x7a325f.game.entity.createModelHide(419.338, -1008.28, 28.26529, 0x1, 0x6ba514ac, true), _0x7a325f.game.entity.createModelHide(419.2487, -1006.582, 28.23309, 0x1, 0x55aea3b1, true), _0x7a325f.game.entity.createModelHide(419.2702, -1004.966, 28.24855, 0x1, 0x6ba514ac, true), _0x7a325f.game.entity.createModelHide(410.3891, -1032.776, 28.40844, 0x1, 0x55aea3b1, true), _0x7a325f.game.entity.createModelHide(-1022.328, -2739.539, 19.25438, 0x1, -0x721b0862, true), _0x7a325f.game.entity.createModelHide(-1022.923, -2738.708, 19.35189, 0x1, -0xdc29fe7, true), _0x7a325f.game.entity.createModelHide(-1023.534, -2738.595, 19.59954, 0x1, 0x54e961ab, true), _0x7a325f.game.entity.createModelHide(-1046.949, -2725.104, 19.35166, 0x1, -0xdc29fe7, true), _0x7a325f.game.entity.createModelHide(-1047.492, -2724.769, 19.59894, 0x1, 0x54e961ab, true), _0x7a325f.game.entity.createModelHide(-1044.369, -2726.45, 19.41925, 0x1, 0x3680ec2f, true), _0x7a325f.game.entity.createModelHide(-1021.59, -2739.903, 19.35189, 0x1, -0xdc29fe7, true), _0x7a325f.game.entity.createModelHide(-1019.179, -2740.425, 19.60119, 0x1, 0x54e961ab, true), _0x7a325f.game.entity.createModelHide(-1053.601, -2721.075, 19.25341, 0x1, -0x721b0862, true), _0x7a325f.game.entity.createModelHide(-1030.793, -2742.295, 19.25439, 0x1, -0x721b0862, true), _0x7a325f.game.entity.createModelHide(-201.7962, -1498.426, 30.87855, 0x1, 0x671c5c38, true), _0x7a325f.game.entity.createModelHide(1975.287, 3049.166, 46.2095, 0x1, 0xfd3d779f, true), _0x7a325f.game.entity.createModelHide(-176.0664, 424.4883, 110.2434, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-167.8585, 432.1422, 110.2436, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(184.1877, 578.3342, 184.2537, 0x1, 0x38ac5b36, true), _0x7a325f.game.entity.createModelHide(-434.9148, 542.8821, 121.0423, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-409.4202, 533.9944, 121.2892, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(364.9819, 434.037, 143.7466, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(385.248, 425.1648, 143.1868, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-547.3046, 826.7041, 196.4687, 0x1, 0xb4f8051e, true), _0x7a325f.game.entity.createModelHide(-559.3168, 828.5708, 196.512, 0x1, 0xb4f8051e, true), _0x7a325f.game.entity.createModelHide(-515.1345, 682.9652, 151.0006, 0x1, 0x8ade8ca1, true), _0x7a325f.game.entity.createModelHide(-1037.598, 800.7673, 165.9778, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-1065.943, 791.6977, 165.5848, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-1062.719, 791.9962, 165.5848, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-1080.213, 803.355, 165.2247, 0x1, 0x5c03531a, true), _0x7a325f.game.entity.createModelHide(-1077.041, 803.855, 165.2247, 0x1, 0xb4f8051e, true), _0x7a325f.game.entity.createModelHide(-1256.289, 639.9202, 139.2554, 0x1, 0x5c03531a, true), _0x7a325f.game.entity.createModelHide(-1350.465, 565.9646, 129.7136, 0x1, 0x38ac5b36, true), _0x7a325f.game.entity.createModelHide(-1351.902, 563.8221, 129.7136, 0x1, 0x38ac5b36, true), _0x7a325f.game.entity.createModelHide(-1354.269, 553.8091, 129.7342, 0x1, 0x38ac5b36, true), _0x7a325f.game.entity.createModelHide(-1494.779, 514.3879, 117.7995, 0x1, 0xe9f788ec, true), _0x7a325f.game.entity.createModelHide(-1494.786, 514.3803, 117.7965, 0x1, 0xe9f788ec, true), _0x7a325f.game.entity.createModelHide(-1262.418, 454.9982, 93.71999, 0x1, 0x3bc852f, true), _0x7a325f.game.entity.createModelHide(-1271.905, 446.8963, 93.71999, 0x1, 0x3bc852f, true), _0x7a325f.game.entity.createModelHide(-1169.074, 478.3818, 86.06844, 0x1, 0x8ade8ca1, true), _0x7a325f.game.entity.createModelHide(-765.2456, 472.71, 99.10361, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-648.4714, 477.9445, 108.9459, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-683.7669, 468.4725, 108.9459, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-295.5367, 420.5471, 108.638, 0x1, 0x5c03531a, true), _0x7a325f.game.entity.createModelHide(-324.3489, 427.7606, 108.8202, 0x1, 0x5c03531a, true), _0x7a325f.game.entity.createModelHide(-323.0628, 409.7471, 108.8219, 0x1, 0x5c03531a, true), _0x7a325f.game.entity.createModelHide(-954.308, 179.4609, 65.79164, 0x1, 0x7b9e4c31, true), _0x7a325f.game.entity.createModelHide(-1946.367, 404.5041, 95.481, 0x1, 0x152d3486, true), _0x7a325f.game.entity.createModelHide(-1946.274, 403.4175, 95.47678, 0x1, 0x3bc852f, true), _0x7a325f.game.entity.createModelHide(-1945.802, 400.1891, 95.48609, 0x1, 0x3bc852f, true), _0x7a325f.game.entity.createModelHide(-1945.71, 399.0884, 95.481, 0x1, 0x152d3486, true), _0x7a325f.game.entity.createModelHide(-1886.203, 664.0438, 128.9875, 0x1, 0x5c03531a, true), _0x7a325f.game.entity.createModelHide(-1882.436, 627.6765, 128.972, 0x1, 0x5c03531a, true), _0x7a325f.game.entity.createModelHide(-1774.098, 352.5338, 88.30749, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(-1810.3, 319.443, 88.30784, 0x1, 0x6fc5ce03, true), _0x7a325f.game.entity.createModelHide(40.17747, 362.2587, 115.2082, 0x1, 0x38ac5b36, true), _0x7a325f.game.entity.createModelHide(68.90746, 383.5768, 115.517, 0x1, 0x38ac5b36, true), _0x7a325f.game.entity.createModelHide(-1278.189, -1410.358, 4.317085, 0x1, 0x481d324f, true), _0x7a325f.game.entity.createModelHide(-1278.778, -1411.031, 4.125084, 0x1, 0x7dba1470, true), _0x7a325f.game.entity.createModelHide(-1278.336, -1410.561, 3.736446, 0x1, 0x2f537ec6, true), _0x7a325f.game.entity.createModelHide(-1278.377, -1411.638, 3.377634, 0x1, 0x64d085ec, true), _0x7a325f.game.entity.createModelHide(-1276.204, -1411.221, 3.332264, 0x1, 0x64d085ec, true), _0x7a325f.game.entity.createModelHide(-1276.649, -1413.103, 3.742641, 0x1, 0x2f537ec6, true), _0x7a325f.game.entity.createModelHide(-1276.158, -1409.998, 3.61, 0x1, 0x88a75cf, true), _0x7a325f.game.entity.createModelHide(-1276.958, -1412.598, 3.3601, 0x1, 0x43d4d056, true), _0x7a325f.game.entity.createModelHide(309.7491, -280.1797, 54.43926, 0x1, _0x7a325f.game.joaat('v_ilev_gb_teldr'), true), _0x7a325f.game.entity.createModelHide(-355.3892, -51.06768, 49.31105, 0x1, _0x7a325f.game.joaat('v_ilev_gb_teldr'), true), _0x7a325f.game.entity.createModelHide(145.4186, -1041.813, 29.64255, 0x1, _0x7a325f.game.joaat('v_ilev_gb_teldr'), true), _0x7a325f.game.entity.createModelHide(1178.87, 2709.365, 38.36251, 0x1, _0x7a325f.game.joaat('v_ilev_gb_teldr'), true), _0x7a325f.game.entity.createModelHide(-1215.87, -334.365, 37.78, 0x1, _0x7a325f.game.joaat('v_ilev_gb_teldr'), true), _0x7a325f.game.entity.createModelHide(-2958.538, 482.2705, 15.83594, 0x1, _0x7a325f.game.joaat('hei_prop_heist_sec_door'), true), _0x7a325f.game.entity.createModelHide(-2960.176, 479.0105, 15.97156, 0x1, _0x7a325f.game.joaat('v_ilev_gb_teldr'), true), Object.values(_0x209ef7).forEach(_0x23d620 => {
            _0x23d620.vault && _0x7a325f.game.entity.createModelHide(_0x23d620.vault.x, _0x23d620.vault.y, _0x23d620.vault.z, 0x1, _0x7a325f.game.joaat(_0x23d620.vault.model), true), _0x23d620.cage && _0x7a325f.game.entity.createModelHide(_0x23d620.cage.x, _0x23d620.cage.y, _0x23d620.cage.z, 0x1, _0x7a325f.game.joaat(_0x23d620.cage.model), true);
          }), _0x7a325f.game.entity.createModelHide(-1229.996, -1508.94, 3.36269, 0x1, 0x261cf98d, true), _0x7a325f.game.entity.createModelHide(-1242.666, -1496.863, 3.349514, 0x1, -0x39f9886, true), _0x7a325f.game.entity.createModelHide(-1243.961, -1490.307, 3.363453, 0x1, 0x261cf98d, true), _0x7a325f.game.entity.createModelHide(-1246.702, -1486.897, 3.362278, 0x1, 0x261cf98d, true), _0x7a325f.game.entity.createModelHide(-1251.821, -1489.001, 3.339603, 0x1, 0x261cf98d, true), _0x7a325f.game.entity.createModelHide(-1268.152, -1486.676, 3.320831, 0x1, 0x380ed26b, true), _0x7a325f.game.entity.createModelHide(-1269.669, -1484.087, 3.320831, 0x1, 0x380ed26b, true), _0x7a325f.game.entity.createModelHide(-1270.367, -1481.484, 3.320831, 0x1, 0x380ed26b, true), _0x7a325f.game.entity.createModelHide(-1270.663, -1478.812, 3.320831, 0x1, 0x380ed26b, true), _0x7a325f.game.entity.createModelHide(-1271.588, -1477.106, 3.332527, 0x1, 0x4f3fa437, true), _0x7a325f.game.entity.createModelHide(-1262.496, -1465.496, 3.353596, 0x1, -0x635df18, true), _0x7a325f.game.entity.createModelHide(-1248.626, -1473.7, 3.257412, 0x1, -0x5e43d06a, true), _0x7a325f.game.entity.createModelHide(-1268.346, -1458.405, 3.42955, 0x1, 0x17e65d20, true), _0x7a325f.game.entity.createModelHide(-1269.104, -1456.721, 3.471973, 0x1, -0x39f9886, true), _0x7a325f.game.entity.createModelHide(-1274.699, -1448.602, 3.55867, 0x1, -0x13df7a6b, true), _0x7a325f.game.entity.createModelHide(-1290.731, -1421.719, 3.480656, 0x1, -0x13df7a6b, true), _0x7a325f.game.entity.createModelHide(-1292.964, -1417.754, 3.431164, 0x1, 0x261cf98d, true), _0x7a325f.game.entity.createModelHide(-1296.463, -1416.723, 3.417683, 0x1, -0x39f9886, true), _0x7a325f.game.entity.createModelHide(-1295.363, -1418.248, 3.413971, 0x1, 0x17e65d20, true), _0x7a325f.game.entity.createModelHide(-2148.653, 1101.464, 29.48058, 0x1, _0x7a325f.game.joaat('tr_prop_tr_gate_l_01a'), true), _0x7a325f.game.entity.createModelHide(-2148.653, 1110.646, 29.48058, 0x1, _0x7a325f.game.joaat('tr_prop_tr_gate_r_01a'), true);
        });
      },
      0x7112: (_0x1b3b80, _0x4aaca3, _0x4ab028) => {
        'use strict';

        const a0_0x54225a = {
          _0xb0a78a: 0x1d66
        },
              a0_0x332329 = {
          _0x3e3948: 0x535,
          _0x57be50: 0x212a,
          _0x1a548b: 0x18f6
        };

        _0x4ab028.r(_0x4aaca3);

        var _0x4fca19 = _0x4ab028(0x16a21),
            _0x50c7c8 = _0x4ab028(0x16e5f),
            _0x54a2c6 = _0x4ab028(0x161cd);

        let _0x56f11b,
            _0x82d4d1 = false,
            _0x20a494 = false;

        _0x54a2c6.events.add('playerEnterInterior', _0x3c3db9 => {
          _0x56f11b && _0x56f11b == _0x3c3db9 && _0x4fca19.api.getPlayerSetting('ambientMusic') && (_0x82d4d1 && _0x50c7c8.Z.stop(), _0x20a494 && (_0x4fca19.api.stopAmbientMusic2(), _0x20a494 = false), _0x42b84c(), _0x82d4d1 = true);
        }), _0x54a2c6.events.add('playerExitInterior', _0xaf5908 => {
          _0x56f11b && _0x56f11b == _0xaf5908 && (_0x82d4d1 && (_0x50c7c8.Z.stop(), _0x82d4d1 = false), _0x20a494 && (_0x4fca19.api.stopAmbientMusic2(), _0x20a494 = false));
        });

        const _0x42b84c = () => {
          _0x20a494 || (_0x4fca19.api.playAmbientMusic2('Library_Hall_Ambience', 0x19, true), _0x20a494 = true), _0x50c7c8.Z.play('library', {
            'volume': 0x19
          });
        };

        _0x54a2c6.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x56f11b = _0x54a2c6.game.interior.getInteriorAtCoords(-1576.476, 222.0801, 66.39406);
        });
      },
      0xfa68: (_0x5cd57f, _0x156c52, _0x36fa87) => {
        'use strict';

        const a0_0x51f9ac = {
          _0x293fc8: 0x6f9,
          _0x250c67: 0x2236,
          _0x4970dc: 0x2124
        },
              a0_0x4654f8 = {
          _0x31ca1b: 0x35f,
          _0x4e35ab: 0x253d,
          _0x25d834: 0x1a60,
          _0x585d0b: 0x1dc,
          _0x207b72: 0x535,
          _0xd1557c: 0x212a,
          _0x276918: 0x535,
          _0xe543c7: 0x18f6
        };

        _0x36fa87.r(_0x156c52);

        var _0x27fe6e = _0x36fa87(0x16a21),
            _0x59d777 = _0x36fa87(0x16e5f),
            _0x18fc2c = (_0x36fa87(0x5d14), _0x36fa87(0x161cd));

        const _0x35aa5c = _0x18fc2c.players.local;
        let _0x50f703 = false,
            _0x48c834 = false;
        _0x18fc2c.events.add('playerPolygonEnter', (_0x3a6f3d, _0x1b15e2) => {
          _0x1b15e2.isGreenZone && _0x27fe6e.api.isAuthed() && _0x1b15e2.variable && 'isAmbientMarket' == _0x1b15e2.variable.key && (null == _0x35aa5c.settings.ambientMusic || _0x27fe6e.api.getPlayerSetting('ambientMusic')) && (_0x50f703 && (_0x59d777.Z.stop(), _0x50f703 = false), _0x48c834 && (_0x27fe6e.api.stopAmbientMusic2(), _0x48c834 = false), _0x19e082());
        }), _0x18fc2c.events.add('playerPolygonExit', (_0x1a5f2f, _0x5bb22b) => {
          _0x5bb22b.isGreenZone && _0x27fe6e.api.isAuthed() && _0x5bb22b.variable && 'isAmbientMarket' == _0x5bb22b.variable.key && (_0x50f703 && (_0x59d777.Z.stop(), _0x50f703 = false), _0x48c834 && (_0x27fe6e.api.stopAmbientMusic2(), _0x48c834 = false));
        });

        const _0x19e082 = () => {
          _0x48c834 || (_0x27fe6e.api.playAmbientMusic2('crowd', 0x8, true), _0x48c834 = true), _0x59d777.Z.play('market', {
            'volume': 17.5
          }), _0x50f703 = true;
        };
      },
      0x41b7: (_0x393d13, _0x47d931, _0x526c84) => {
        'use strict';

        const a0_0x302403 = {
          _0x13d4bb: 0x1d55
        };

        _0x526c84.r(_0x47d931);

        var _0x1c0f11 = _0x526c84(0x16a21),
            _0xfda55e = _0x526c84(0x161cd);

        const {
          ActionColshape: _0x93c021
        } = _0x526c84(0xda37);

        [{
          'x': 485.8492,
          'y': 214.471,
          'z': 107.3095,
          'toX': 487.4581,
          'toY': 218.9726,
          'toZ': 107.3095
        }, {
          'x': 487.4581,
          'y': 218.9726,
          'z': 107.3095,
          'toX': 485.8492,
          'toY': 214.471,
          'toZ': 107.3095
        }, {
          'x': 523.112,
          'y': 201.1281,
          'z': 107.3095,
          'toX': 524.6083,
          'toY': 205.3904,
          'toZ': 107.3095
        }, {
          'x': 524.6083,
          'y': 205.3904,
          'z': 107.3095,
          'toX': 523.112,
          'toY': 201.1281,
          'toZ': 107.3095
        }].forEach(_0x8e7903 => {
          const a0_0x251e1f = {
            _0x17518c: 0x535,
            _0x3e6d08: 0x1ea6,
            _0x27dcdb: 0x1d55,
            _0x128cda: 0x1ee1,
            _0x17b862: 0x235b
          };
          new _0x93c021({
            'text': 'displayHelpString.toEnter',
            'textDuration': 0xbb8,
            'vehicle': false,
            'position': new _0xfda55e.Vector3(_0x8e7903.x, _0x8e7903.y, _0x8e7903.z),
            'range': 0x1,
            'onTrigger': () => {
              _0x1c0f11.api.teleportAndLoad(new _0xfda55e.Vector3(_0x8e7903.toX, _0x8e7903.toY, _0x8e7903.toZ), _0xfda55e.players.local.getHeading(), {
                'dimension': 0x0
              });
            }
          }).marker = _0xfda55e.markers.new(0x1, new _0xfda55e.Vector3(_0x8e7903.x, _0x8e7903.y, _0x8e7903.z), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x64],
            'visible': true,
            'scale': 0.7
          });
        });
      },
      0x3fba: (_0x5d46d1, _0x5b423c, _0x183544) => {
        'use strict';

        const a0_0x2b954e = {
          _0x701a6b: 0x535,
          _0x4774c3: 0x253d
        },
              a0_0x22a472 = {
          _0x20a6d9: 0x1ea6,
          _0x27c8ab: 0x169,
          _0x5260f0: 0x1d55,
          _0x576213: 0x14d2,
          _0x27e0c1: 0x1da5,
          _0x40ae9d: 0x131a
        };

        _0x183544.r(_0x5b423c);

        var _0x168c2d = _0x183544(0x16a21),
            _0x333338 = _0x183544(0x161cd);

        const _0x5d78bf = _0x333338.players.local,
              _0x217ece = 0x42501;

        let _0x225b42 = null,
            _0x55bf4e = ['Int01_ba_clubname_02', 'Int01_ba_Style03', 'Int01_ba_style03_podium', 'Int01_ba_security_upgrade', 'Int01_ba_dj03', 'DJ_01_Lights_04', 'DJ_02_Lights_04', 'DJ_03_Lights_04', 'DJ_04_Lights_04', 'DJ_01_Lights_02', 'DJ_03_Lights_02', 'DJ_01_Lights_03', 'DJ_02_Lights_03', 'DJ_03_Lights_03', 'DJ_01_Lights_01', 'DJ_02_Lights_01', 'DJ_04_Lights_01', 'Int01_ba_bar_content', 'Int01_ba_trophy03', 'Int01_ba_trophy02', 'Int01_ba_deliverytruck', 'Int01_ba_dry_ice', 'ba_prop_door_club_edgy_generic'],
            _0x268d4d = _0x333338.colshapes.newSphere(4.59, 220.3, 107.71, 0x1, 0x0),
            _0x46b7bb = _0x333338.colshapes.newSphere(-1569.54, -3017.46, -74.3, 0x1, 0x0);

        _0x268d4d.marker = _0x333338.markers.new(0x1, new _0x333338.Vector3(4.59, 220.3, 106.71), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff]
        }), _0x46b7bb.marker = _0x333338.markers.new(0x1, new _0x333338.Vector3(-1569.54, -3017.46, -75.3), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff]
        });
        let _0x25277e = false;
        _0x333338.events.add('keys.e', async () => {
          if (!_0x168c2d.api.isUsingSystemAnim()) return _0x225b42 == _0x268d4d ? (_0x5d78bf.freezePosition(true), await _0x287b6d(), _0x225b42 = false, _0x25277e = true, _0x5d78bf.freezePosition(false), await _0x168c2d.api.teleportAndLoad(new _0x333338.Vector3(-1569.63, -3013.52, -0x4a), 0x0), void _0x333338.events.callRemote('3404531499', 'nightclub')) : _0x225b42 == _0x46b7bb ? (_0x168c2d.api.teleportAndLoad(new _0x333338.Vector3(5.97, 219.77, 0x6c), 0x0), _0x404e26(), _0x225b42 = false, _0x25277e = false, void _0x333338.events.callRemote('3404531499', null)) : undefined;
        }), _0x333338.events.add('playerEnterColshape', _0x162634 => {
          _0x168c2d.api.isAuthed() && (_0x162634 == _0x268d4d && (_0x225b42 = _0x162634, _0x168c2d.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)), _0x162634 == _0x46b7bb && (_0x225b42 = _0x162634, _0x168c2d.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)));
        }), _0x333338.events.add('playerExitColshape', _0x476144 => {
          _0x168c2d.api.isAuthed() && (_0x476144 == _0x268d4d && (_0x225b42 = null, _0x333338.game.ui.clearHelp(true)), _0x476144 == _0x46b7bb && (_0x225b42 = null, _0x333338.game.ui.clearHelp(true)));
        });

        let _0x26107e = false,
            _0x31b22d,
            _0x30a23a;

        const _0xa94e2d = () => {
          const a0_0x1412f2 = {
            _0x3d44e8: 0x1d66,
            _0x817062: 0x260e,
            _0x143494: 0x1292,
            _0x509ead: 0x1d66,
            _0x372649: 0x1063
          };

          try {
            let _0xb3f8c6 = _0x333338.game.joaat('ba_prop_club_screens_01'),
                _0x412976 = {
              'x': -810.59,
              'y': 170.46,
              'z': 77.25
            };

            _0x31b22d = _0x333338.game.object.getClosestObjectOfType(_0x412976.x, _0x412976.y, _0x412976.z, 0x14, _0xb3f8c6, false, false, false), _0x30a23a = ((_0x178d3b, _0x49fcb6) => {
              try {
                let _0x227b87 = 0x0;
                return _0x333338.game.ui.isNamedRendertargetRegistered(_0x178d3b) || _0x333338.game.ui.registerNamedRendertarget(_0x178d3b, false), _0x333338.game.ui.isNamedRendertargetLinked(_0x49fcb6) || _0x333338.game.ui.linkNamedRendertarget(_0x49fcb6), _0x333338.game.ui.isNamedRendertargetRegistered(_0x178d3b) && (_0x227b87 = _0x333338.game.ui.getNamedRendertargetRenderId(_0x178d3b)), _0x227b87;
              } catch (_0x5f0545) {
                _0x168c2d.api.sendError(_0x5f0545);
              }
            })('club_projector', _0xb3f8c6), _0x333338.game.audio.registerScriptWithAudio(0x0), _0x333338.game.graphics.setTvChannel(-0x1), _0x333338.game.graphics.setTvChannelPlaylist(0x2, 'PL_DIX_RIB_PALACE', false), _0x333338.game.graphics.setTvChannel(0x2), _0x333338.game.graphics.enableMovieSubtitles(true);
          } catch (_0x79d75d) {
            _0x168c2d.api.sendError(_0x79d75d);
          }
        };

        _0x333338.events.add('render', () => {
          _0x25277e && (_0x333338.game.graphics.setTvAudioFrontend(false), _0x333338.game.graphics.attachTvAudioToEntity(_0x31b22d), _0x333338.game.ui.setTextRenderId(_0x30a23a), _0x333338.game.graphics.set2dLayer(0x4), _0x333338.game.graphics.setScriptGfxDrawBehindPausemenu(true), _0x333338.game.graphics.drawTvChannel(0.5, 0.5, 0x1, 0x1, 0x0, 0xff, 0xff, 0xff, 0xff), _0x333338.game.ui.setTextRenderId(_0x333338.game.hud.getDefaultScriptRendertargetRenderId()));
        });

        const _0x287b6d = () => new Promise(async (_0xd471fe, _0xb09008) => {
          const a0_0x28d7f8 = {
            _0x4a5411: 0x20c4,
            _0x3479c6: 0x1063
          },
                a0_0x1939f9 = {
            _0x3c55ef: 0x106d
          };

          try {
            _0x333338.game.streaming.isIplActive('ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_') && _0x333338.game.streaming.removeIpl('ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_'), _0x333338.game.streaming.requestIpl('ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_'), _0x333338.game.audio.requestScriptAudioBank('DLC_BATTLE/BTL_CLUB_OPEN_TRANSITION_CROWD', false), _0x333338.game.audio.setAmbientZoneStatePersistent('IZ_ba_dlc_int_01_ba_Int_01_main_area', false, false), await _0x333338.game.sleep(0x64);
            let _0x4f1efd = false;
            return _0x55bf4e.forEach(_0xb1792 => {
              _0x333338.game.interior.isInteriorPropEnabled(_0x217ece, _0xb1792) || (_0x333338.game.interior.enableInteriorProp(_0x217ece, _0xb1792), _0x4f1efd = true);
            }), _0xa94e2d(), await new Promise(async (_0x17c001, _0x2b2b6b) => {
              try {
                if (_0x26107e) return _0x17c001('loaded');
                _0x26107e = true, _0x17c001();
              } catch (_0xe7fc5f) {
                _0x168c2d.api.sendError(_0xe7fc5f), _0x17c001();
              }
            }), _0x4f1efd && _0x333338.game.interior.refreshInterior(_0x217ece), _0xd471fe(true);
          } catch (_0x24be4b) {
            _0x168c2d.api.sendError(_0x24be4b);
          }
        }),
              _0x404e26 = () => {
          const a0_0x317d1 = {
            _0x58e46e: 0x106d
          };

          try {
            _0x168c2d.api.invokeNative('RELEASE_SCRIPT_AUDIO_BANK'), _0x168c2d.api.invokeNative('STOP_AUDIO_SCENES');
            let _0x32b49f = false;
            _0x55bf4e.forEach(_0x1a8659 => {
              _0x333338.game.interior.isInteriorPropEnabled(_0x217ece, _0x1a8659) && (_0x333338.game.interior.disableInteriorProp(_0x217ece, _0x1a8659), _0x32b49f = true);
            }), _0x32b49f && _0x333338.game.interior.refreshInterior(_0x217ece), _0x333338.game.streaming.isIplActive('ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_') && _0x333338.game.streaming.removeIpl('ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_'), _0x26107e = false;
          } catch (_0x1ae20e) {
            _0x168c2d.api.sendError(_0x1ae20e);
          }
        };
      },
      0x1700c: (_0xb155db, _0x31d126, _0x3bd4bd) => {
        const a0_0x2a4eb7 = {
          _0x2734ca: 0x1427,
          _0x4cea00: 0xf79,
          _0x2ea532: 0x1d6c,
          _0x4725a5: 0x1d66,
          _0x29775b: 0x15e0,
          _0x55f6cd: 0x4f8,
          _0x2e1c69: 0x15e0,
          _0x442630: 0xf10,
          _0x81c4e6: 0x15e0,
          _0x1d4b5b: 0x2ae,
          _0x58cfeb: 0x14ac,
          _0x371967: 0x41b,
          _0x594916: 0x1d66,
          _0x4e1243: 0x106d,
          _0x286886: 0x2ae,
          _0x22ee4d: 0x1151,
          _0x35c41a: 0x15e0,
          _0x3ec230: 0x140a
        };

        var _0x5bdaf5 = _0x3bd4bd(0x161cd);

        const _0x43b835 = {
          'qnx_pb_int_3': {
            'enable': true,
            'ymap': 'qnx_pb_int_3_milo_',
            'name': 'qnx_pb_int_3',
            'coords': new _0x5bdaf5.Vector3(-1534.742, 83.44898, 57.83928),
            'color': false,
            'colorSet': 0x1,
            'ipl': {
              'warehouse_empty': false,
              'warehouse_meduim': false,
              'warehouse_full': true
            }
          },
          'qnx_pb_int_1': {
            'enable': true,
            'ymap': 'qnx_pb_int_1_milo_',
            'name': 'qnx_pb_int_1',
            'coords': new _0x5bdaf5.Vector3(-1527.524, 107.2302, 48.81472),
            'color': false,
            'colorSet': 0x1,
            'ipl': {
              'Under_Ipl_Base': true,
              'doors_open_1': true,
              'doors_open_2': true,
              'doors_closed_2': false,
              'doors_closed_1': false,
              'full_ipl_under_drugs': true,
              'easy_ipl_under_weed': false,
              'meduim_ipl_under_weed': true,
              'under_lab_meth_qnx': false,
              'full_pb_cocaine': false,
              'ipl_r3_meth_and_human': true,
              'ipl_r3_weapon_storage': false,
              'weapon_room_ipl': true
            }
          },
          'qnx_pb_int_4': {
            'enable': true,
            'ymap': 'qnx_pb_int_4_milo_',
            'name': 'qnx_pb_int_4',
            'coords': new _0x5bdaf5.Vector3(-1524.108, 107.7025, 56.06447),
            'color': false,
            'colorSet': 0x1,
            'ipl': {
              'ipl_r1': true,
              'ipl_r2': true,
              'ipl_r3': true,
              'ipl_r4': true,
              'ipl_r5': true,
              'ipl_r6': true,
              'ipl_r7': true,
              'ipl_r8': true,
              'ipl_r9': true,
              'ipl_r10': true,
              'ipl_r11': true,
              'ipl_r12': true
            }
          },
          'qnx_pb_int_5': {
            'enable': true,
            'ymap': 'qnx_pb_int_5_milo_',
            'name': 'qnx_pb_int_5',
            'coords': new _0x5bdaf5.Vector3(-1520.722, 132.8905, 58.25869),
            'color': false,
            'colorSet': 0x1,
            'ipl': {
              'ipl_b2_r1': true,
              'ipl_b2_r2': true,
              'ipl_b2_r3': true,
              'ipl_b2_r4': true,
              'ipl_b2_r6': true,
              'ipl_b2_r7': true,
              'ipl_b2_r8': true
            }
          }
        };

        _0x5bdaf5.events.add('auth.client.onPlayerAuthAccount', () => {
          for (const _0x50bf0d in _0x43b835) {
            const _0x1c2b0e = _0x43b835[_0x50bf0d],
                  _0x4f78ee = _0x5bdaf5.game.interior.getInteriorAtCoordsWithType(_0x1c2b0e.coords.x, _0x1c2b0e.coords.y, _0x1c2b0e.coords.z, _0x1c2b0e.name);

            if (!_0x4f78ee) return;
            _0x1c2b0e.enable ? _0x5bdaf5.game.streaming.isIplActive(_0x1c2b0e.ymap) || (_0x5bdaf5.game.streaming.requestIpl(_0x1c2b0e.ymap), _0x1c2b0e.disableYmap && _0x5bdaf5.game.streaming.removeIpl(_0x1c2b0e.disableYmap)) : _0x5bdaf5.game.streaming.isIplActive(_0x1c2b0e.ymap) && (_0x5bdaf5.game.streaming.removeIpl(_0x1c2b0e.ymap), _0x1c2b0e.disableYmap && _0x5bdaf5.game.streaming.requestIpl(_0x1c2b0e.disableYmap));

            for (const [_0xf791d, _0x307021] of Object.entries(_0x1c2b0e.ipl)) _0x307021 ? (_0x5bdaf5.game.interior.activateEntitySet(_0x4f78ee, _0xf791d), _0x1c2b0e.color && _0x5bdaf5.game.interior.setEntitySetColor(_0x4f78ee, _0xf791d, _0x1c2b0e.colorSet), _0x5bdaf5.game.interior.refreshInterior(_0x4f78ee)) : (_0x5bdaf5.game.interior.deactivateEntitySet(_0x4f78ee, _0xf791d), _0x5bdaf5.game.interior.refreshInterior(_0x4f78ee));

            if (_0x1c2b0e.ymaps) {
              for (const [_0x3a43e7, _0x5e6a7f] of Object.entries(_0x1c2b0e.ymaps)) _0x5e6a7f ? _0x5bdaf5.game.streaming.isIplActive(_0x3a43e7) || _0x5bdaf5.game.streaming.requestIpl(_0x3a43e7) : _0x5bdaf5.game.streaming.isIplActive(_0x3a43e7) && _0x5bdaf5.game.streaming.removeIpl(_0x3a43e7);
            }
          }
        });
      },
      0x2c20: (_0x3f39ea, _0x1412a8, _0xc5903c) => {
        'use strict';

        _0xc5903c.r(_0x1412a8);

        var _0x54c69e = _0xc5903c(0x16a21),
            _0x430aeb = _0xc5903c(0x161cd);

        _0x430aeb.events.add('auth.client.onPlayerAuthAccount', () => {
          const _0x2c5532 = _0x430aeb.game.interior.getInteriorAtCoords(-46.84232, -1096.113, 26.06662);

          _0x2c5532 && (_0x54c69e.api.setIplPropState(_0x2c5532, 'csr_beforeMission'), _0x54c69e.api.setIplPropState(_0x2c5532, 'shutter_open'), _0x430aeb.game.interior.refreshInterior(_0x2c5532));
        });
      },
      0x1c9c: (_0x21fcea, _0x3c9e3f, _0x3ceaa4) => {
        'use strict';

        const a0_0x186a81 = {
          _0xb9d359: 0x2072,
          _0x1e76f3: 0x1f41,
          _0x2b1a95: 0x1d66,
          _0x42c75e: 0x1992,
          _0x268cff: 0x24fe,
          _0x496bbb: 0x24fe,
          _0x516193: 0x24fe,
          _0x18297a: 0x24fe
        },
              a0_0x32e897 = {
          _0x2b2e9e: 0x535,
          _0x28531d: 0x1b65
        },
              a0_0x46f196 = {
          _0x34be39: 0x1aab,
          _0x554655: 0x16c5,
          _0x337813: 0x14d2,
          _0x2f3732: 0x1da5,
          _0x509aca: 0x73e,
          _0x453f27: 0x1d66,
          _0x151733: 0x59d
        },
              a0_0x37ef02 = {
          _0x43f2b1: 0x1aab,
          _0xb50abc: 0x16c5,
          _0x4a232e: 0x14d2,
          _0x1b698d: 0x1da5,
          _0x58368c: 0xf3a
        };

        _0x3ceaa4.r(_0x3c9e3f);

        var _0xb857e5 = _0x3ceaa4(0x16a21),
            _0x324b6f = _0x3ceaa4(0x14619),
            _0x41ce90 = _0x3ceaa4(0x161cd);

        const _0x14fcfc = _0x41ce90.players.local;

        let _0x183396 = -0x1;

        const _0x19aec1 = new _0x41ce90.Vector3(108.79, -0x509, 29.24),
              _0x1ecd20 = [{
          'ped': 'player_one',
          'animDic': 'mini@strip_club@lap_dance@ld_girl_a_song_a_p1',
          'animName': 'ld_girl_a_song_a_p1_m',
          'x': 120.74,
          'y': -1297.65,
          'z': 28.7,
          'r': 33.8
        }, {
          'ped': 'mp_f_stripperlite',
          'animDic': 'mini@strip_club@lap_dance@ld_girl_a_song_a_p1',
          'animName': 'ld_girl_a_song_a_p1_f',
          'x': 120.3,
          'y': -1297.0205,
          'z': 29.26,
          'r': 203.41
        }];

        _0x41ce90.events.add('auth.client.onPlayerAuthAccount', () => {
          const a0_0x453407 = {
            _0x4807e0: 0x1366,
            _0x537f1a: 0x1d66,
            _0x41e344: 0x2379,
            _0xf90d60: 0x1d55
          },
                a0_0x3e741b = {
            _0x3107e7: 0x2140,
            _0x5b289c: 0x91b
          };
          _0x41ce90.peds.newLegacy(_0x41ce90.game.joaat('mp_f_stripperlite'), _0x19aec1, 265.902, _0x9f950a => {
            const a0_0x594671 = {
              _0x4cecf2: 0x2530,
              _0xfd2144: 0x1d66,
              _0xd3d7e2: 0xe1b,
              _0x2d5b04: 0x13bd,
              _0x53e44a: 0x1d66,
              _0x3867e5: 0xf73,
              _0x5405e9: 0x1d66,
              _0x28a072: 0x1cad,
              _0x3051ec: 0xc5f,
              _0x23c710: 0x629
            };
            _0x9f950a.setAlpha(0xff, false), _0x9f950a.setInvincible(true), _0x9f950a.setBlockingOfNonTemporaryEvents(true), _0xb857e5.api.requestAnimDict('mini@strip_club@pole_dance@pole_dance3').then(() => {
              _0x9f950a && _0x9f950a.handle && (-0x1 !== _0x183396 && (_0x41ce90.game.ped.detachSynchronizedScene(_0x183396), _0x41ce90.game.ped.disposeSynchronizedScene(_0x183396), _0x183396 = -0x1), _0x183396 = _0x41ce90.game.ped.createSynchronizedScene(_0x19aec1.x, _0x19aec1.y, _0x19aec1.z, 0x0, 0x0, 0x0, 0x2), _0x9f950a.taskSynchronizedScene(_0x183396, 'mini@strip_club@pole_dance@pole_dance3', 'pd_dance_03', 0x1, -0x4, 0x105, 0x0, 0x447a0000, 0x0), _0x41ce90.game.ped.setSynchronizedSceneLooped(_0x183396, true));
            });
          }, 0x0), _0x1ecd20.forEach(_0x458f05 => {
            const a0_0x2bcbc5 = {
              _0x2d045c: 0x2530,
              _0x1e99c7: 0x5bf,
              _0x143164: 0x220f,
              _0x3a0b96: 0x15db,
              _0x4047a3: 0x535,
              _0xad7482: 0x1b37,
              _0x4db373: 0xe4a
            },
                  a0_0x1e44d1 = {
              _0x209899: 0x1de9,
              _0x2fc3d3: 0xe4a,
              _0x1faa01: 0xae6
            };

            _0x41ce90.peds.newLegacy(_0x41ce90.game.joaat(_0x458f05.ped), new _0x41ce90.Vector3(_0x458f05.x, _0x458f05.y, _0x458f05.z), _0x458f05.r, _0x35ce65 => {
              _0x35ce65 && _0x35ce65.handle && ('mp_f_stripperlite' === _0x458f05.ped && (_0x35ce65.setComponentVariation(0x0, 0x1, 0x0, 0x2), _0x35ce65.setComponentVariation(0x1, 0x1, 0x0, 0x2), _0x35ce65.setComponentVariation(0x2, 0x1, 0x0, 0x2), _0x35ce65.setComponentVariation(0x3, 0x1, 0x0, 0x2)), _0x35ce65.setAlpha(0xff, false), _0x35ce65.setInvincible(true), _0x35ce65.setBlockingOfNonTemporaryEvents(true), _0xb857e5.api.requestAnimDict(_0x458f05.animDic).then(() => {
                _0x35ce65.handle && _0x35ce65.taskPlayAnim(_0x458f05.animDic, _0x458f05.animName, 0x1, 0x1, -0x1, 0x9, 0x1, false, false, false);
              }));
            }, 0x0);
          });
        });

        const _0x34a9c9 = _0x41ce90.colshapes.newSphere(120.2, -1280.33, 29.48, 0x1, 0x0);

        _0x41ce90.markers.new(0x1, new _0x41ce90.Vector3(120.2, -1280.33, 28.48), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0x64]
        });

        let _0x4ef028;

        _0x41ce90.events.add('playerEnterColshape', _0x1d56dc => {
          if (_0xb857e5.api.isAuthed() && !_0x1c37bf) return _0x1d56dc && _0x1d56dc === _0x34a9c9 ? (_0x4ef028 = _0x1d56dc, _0xb857e5.api.displayHelpStringTrans('displayHelpString.toggleMusic', false, true, 0x1388)) : undefined;
        }), _0x41ce90.events.add('playerExitColshape', _0x1680ba => {
          _0xb857e5.api.isAuthed() && _0x4ef028 && _0x1680ba == _0x34a9c9 && (_0x4ef028 = null, _0x41ce90.game.ui.clearHelp(true));
        }), _0x41ce90.events.add('keys.e', () => {
          if (_0x4ef028 && _0x41ce90.colshapes.exists(_0x4ef028)) return _0x41ce90.events.callRemote('3830103237'), _0x4ef028 = null, void _0x41ce90.game.ui.clearHelp(true);
        }), _0x41ce90.events.add('worldDataRemoved', _0x4590ad => {
          'stripClubMusic' == _0x4590ad && _0x2eb9a9();
        }), _0x41ce90.events.add('worldDataChanged', (_0x439154, _0xd864c4, _0x1e2a9a) => {
          'stripClubMusic' == _0x439154 && _0x2eb9a9(_0xd864c4);
        });

        const _0x2eb9a9 = (_0x4cf3ab = _0x41ce90.world.data.stripClubMusic) => {
          _0x41ce90.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_01_STAGE', !!_0x4cf3ab), _0x41ce90.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM', !!_0x4cf3ab), _0x41ce90.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM', !!_0x4cf3ab);
        },
              _0x56c53b = [];

        let _0x5854b9;

        for (const [_0x133a1b, _0x232360] of Object.entries(_0x324b6f.s)) {
          const _0x2a3023 = _0x41ce90.game.object.getObjectOffsetFromCoords(_0x232360.x, _0x232360.y, _0x232360.z - 0.5, _0x232360.r, 0x0, 0.75, 0x0),
                _0x1cf06e = _0x41ce90.colshapes.newSphere(_0x2a3023.x, _0x2a3023.y, _0x2a3023.z, 0x1, 0x0);

          _0x1cf06e.lapDanceId = parseInt(_0x133a1b), _0x56c53b.push(_0x1cf06e);
        }

        let _0x1c37bf = false,
            _0x3a6e6f = 0x0,
            _0x27f177 = 0x0,
            _0x458d44 = {};
        _0x41ce90.events.add('playerEnterColshape', _0x1e9b66 => {
          if (_0xb857e5.api.isAuthed() && !_0x1c37bf) return _0x1e9b66 && _0x1e9b66.lapDanceId > 0x0 ? (_0x5854b9 = _0x1e9b66, _0xb857e5.api.displayHelpStringTrans('displayHelpString.privateDanceOrder', {
            'amount': 0x1f4
          }, false, true, 0x1388)) : undefined;
        }), _0x41ce90.events.add('playerExitColshape', _0x193bb3 => {
          _0xb857e5.api.isAuthed() && _0x5854b9 && _0x193bb3 == _0x5854b9 && (_0x5854b9 = null, _0x41ce90.game.ui.clearHelp(true));
        }), _0x41ce90.events.add('keys.e', () => {
          if (_0x5854b9 && _0x41ce90.colshapes.exists(_0x5854b9)) return _0x41ce90.events.callRemote('1508226874', _0x5854b9.lapDanceId), _0x5854b9 = null, void _0x41ce90.game.ui.clearHelp(true);
        }), _0x41ce90.events.add('stripclub.stopPrivateDance', () => {
          _0x1c37bf && (_0x1c37bf = false, _0xb857e5.api.stopAnim());
        }), _0x41ce90.events.add('stripclub.initPrivateDance', async _0x5a9b26 => {
          if (!_0x5a9b26) return;

          const _0x43c547 = _0x324b6f.s[_0x5a9b26],
                _0x2922dd = _0x41ce90.game.object.getObjectOffsetFromCoords(_0x43c547.x, _0x43c547.y, _0x43c547.z, _0x43c547.r, 0x0, -0.5, -0.5);

          _0xb857e5.api.fadeOut(0x0), _0x3a6e6f = _0xb857e5.api.invokeNative('GET_FOLLOW_PED_CAM_VIEW_MODE'), _0x27f177 = _0x43c547.r, _0x1c37bf = true, _0x23d560(true), _0xb857e5.api.toggleChat(false), _0xb857e5.api.toggleRadar(false), _0xb857e5.api.toggleHud(false), _0x14fcfc.freezePosition(true), _0xb857e5.api.setPlayerPos(_0x14fcfc, _0x2922dd), _0x14fcfc.setHeading(_0x43c547.r), _0xb857e5.api.usingSystemAnim(true), await _0xb857e5.api.taskPlayAnim('mini@strip_club@lap_dance_2g@ld_2g_reach', 'ld_2g_sit_idle', 0x1, true), _0xb857e5.api.fadeIn(0x1f4), _0x1c37bf && (await _0x41ce90.game.sleep(0xfde8), _0x1c37bf && _0x41ce90.events.call('stripclub.playerExitDance'));
        }), _0x41ce90.events.add('render', async () => {
          if (_0x1c37bf) {
            _0x41ce90.game.cam.setFollowPedCamViewMode(0x4), _0x14fcfc.setHeading(_0x27f177);
            const _0xa988a4 = _0x41ce90.game.controls;
            _0xa988a4.disableControlAction(0x0, 0x0, true), _0xa988a4.disableControlAction(0x0, 0x8, true), _0xa988a4.disableControlAction(0x0, 0x9, true), _0xa988a4.disableControlAction(0x0, 0x18, true), _0xa988a4.disableControlAction(0x0, 0x19, true), _0xa988a4.disableControlAction(0x0, 0x20, true), _0xa988a4.disableControlAction(0x0, 0x22, true), _0xa988a4.disableControlAction(0x0, 0x101, true), _0xa988a4.disableControlAction(0x0, 0x107, true);
          }
        }), _0x41ce90.events.add('stripclub.playerExitDance', async () => {
          _0x1c37bf = false, await _0xb857e5.api.fadeOut(0x1f4);

          const _0x475dcf = _0x41ce90.game.object.getObjectOffsetFromCoords(_0x14fcfc.position.x, _0x14fcfc.position.y, _0x14fcfc.position.z, _0x14fcfc.getHeading(), 0x0, 0x1, 0x0),
                _0xb16c29 = _0x41ce90.game.object.getObjectOffsetFromCoords(_0x14fcfc.position.x, _0x14fcfc.position.y, _0x14fcfc.position.z, _0x14fcfc.getHeading(), 0x0, 0x2, 0x0);

          _0xb857e5.api.setPlayerPos(_0x14fcfc, _0x475dcf), _0xb857e5.api.stopAnim(), _0x14fcfc.freezePosition(false), _0x41ce90.game.cam.setFollowPedCamViewMode(_0x3a6e6f), _0x14fcfc.taskGoStraightToCoord(_0xb16c29.x, _0xb16c29.y, _0xb16c29.z, 0.5, 0x7d0, _0x14fcfc.getHeading(), 0x1), await _0x41ce90.game.sleep(0x1f4), _0xb857e5.api.fadeIn(0x1f4), _0xb857e5.api.usingSystemAnim(false), _0x14fcfc.freezePosition(false), _0x23d560(false), _0xb857e5.api.toggleChat(true), _0xb857e5.api.toggleRadar(true), _0xb857e5.api.toggleHud(true), _0xb857e5.api.stopAnim();
        }), _0x41ce90.events.add('worldDataRemoved', _0x1e49c3 => {
          _0x1e49c3.includes('stripDancer') && _0x1c1451(_0x1e49c3);
        }), _0x41ce90.events.add('worldDataChanged', (_0x4c8807, _0x532219, _0x11d529) => {
          _0x4c8807.includes('stripDancer') && _0x1c1451(_0x4c8807, _0x532219);
        });

        const _0x1c1451 = async (_0xd43410, _0x3c4fde = _0x41ce90.world.data[_0xd43410]) => {
          if (null == _0xd43410) return;

          const _0x3e25cc = parseInt(_0xd43410.slice(0xb));

          if (_0x3548c2(_0x3e25cc), _0x3c4fde) {
            const _0xdd633d = _0x324b6f.s[_0x3e25cc],
                  _0x4ebf21 = _0x41ce90.game.object.getObjectOffsetFromCoords(_0xdd633d.x, _0xdd633d.y, _0xdd633d.z, _0xdd633d.r, 0x0, 0.25, 0x0);

            if (_0xb857e5.api.vdist2(_0x41ce90.players.local.position, _0x4ebf21) > 0x1f4) return;

            const _0x148c07 = _0x458d44[_0x3e25cc] = _0x41ce90.peds.new(_0xdd633d.stripper.model, _0x4ebf21, _0xdd633d.r + 0xb4, 0x0);

            if (_0x148c07.setHeading(_0xdd633d.r + 0xb4), _0x148c07.freezePosition(true), _0x148c07.setAlpha(0x0, false), _0x148c07.setNoCollision(_0x14fcfc.handle, false), await _0xb857e5.api.requestAnimDict('mini@strip_club@private_dance@part2', true), !_0x41ce90.world.data[_0xd43410] || !_0x41ce90.peds.exists(_0x148c07)) return _0x3548c2(_0x3e25cc);
            if (_0x148c07.setAlpha(0xff, false), _0x148c07.taskPlayAnim('mini@strip_club@private_dance@part2', 'priv_dance_p2', 0x8, -0x8, -0x1, 0x1, 0x0, false, false, false), await _0x41ce90.game.sleep(0xea60), !_0x41ce90.world.data[_0xd43410] || !_0x41ce90.peds.exists(_0x148c07)) return _0x3548c2(_0x3e25cc);
            if (_0x41ce90.game.task.clearPedSecondaryTask(_0x148c07.handle), _0x148c07.freezePosition(false), _0x148c07.taskGoToCoordAnyMeans(112.31, -1303.39, 29.28, 174.93, 0.5, false, 0xc00ab, 0xbf800000), await _0x41ce90.game.sleep(0x1388), await _0xb857e5.api.requestAnimDict('mini@strip_club@idles@stripper', true), !_0x41ce90.world.data[_0xd43410] || !_0x41ce90.peds.exists(_0x148c07)) return _0x3548c2(_0x3e25cc);
            _0x148c07.taskPlayAnim('mini@strip_club@idles@stripper', 'stripper_idle_02', 0x8, -0x8, -0x1, 0x0, 0x0, false, false, false), _0x148c07.setHeading(308.6), await _0x41ce90.game.sleep(0x7d0), _0x3548c2(_0x3e25cc);
          }
        },
              _0x3548c2 = _0x3ef102 => {
          _0x41ce90.peds.exists(_0x458d44[_0x3ef102]) && _0x458d44[_0x3ef102].destroy(), _0x458d44[_0x3ef102] = undefined;
        },
              _0x23d560 = _0x266e16 => {
          let _0x3b8092 = _0x266e16;
          _0x41ce90.world.data.stripClubMusic && !_0x266e16 && (_0x3b8092 = true), _0x41ce90.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_01_STAGE', !!_0x3b8092), _0x41ce90.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM', !!_0x3b8092), _0x41ce90.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM', !!_0x3b8092);
        };

        _0x41ce90.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x2eb9a9(), _0x1c1451();
        });
      },
      0xd3fd: (_0x248886, _0x3a6be6, _0x3a60c8) => {
        'use strict';

        const a0_0x549de4 = {
          _0x19ff33: 0x1ea6,
          _0x2433aa: 0x1d55,
          _0x5c92f6: 0x131a,
          _0x1f9423: 0x14d2,
          _0x942f0d: 0x1da5
        },
              a0_0x1c2632 = {
          _0x534668: 0xe6d
        },
              a0_0x4ac3db = {
          _0x1b3027: 0x535,
          _0x99c699: 0x253d,
          _0x5b8cd6: 0x59d,
          _0x14170d: 0x59d
        },
              a0_0xf5eca9 = {
          _0x4a32cf: 0xe6d,
          _0x43620f: 0x1f87
        };

        _0x3a60c8.r(_0x3a6be6);

        var _0xfe2dba = _0x3a60c8(0x16a21),
            _0x278828 = _0x3a60c8(0x161cd);

        const _0x564f5a = 0x3c401,
              _0x36347d = ['equipment_upgrade', 'production', 'security_high', 'set_up', 'clutter', 'interior_upgrade', 'chair01', 'chair02', 'chair03', 'chair04', 'chair05', 'chair06', 'chair07'];

        let _0x570d14 = _0x278828.colshapes.newSphere(895.2882, -179.2658, 74.7003, 0x1, 0x0);

        _0x570d14.marker = _0x278828.markers.new(0x1, new _0x278828.Vector3(895.2882, -179.2658, 73.7003), 0x1, {
          'direction': new _0x278828.Vector3(895.2882, -179.2658, 74.7003),
          'rotation': new _0x278828.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0x0
        });

        let _0xbc548 = _0x278828.colshapes.newSphere(1173.3984, -3196.5529, -39.0079, 0x1, 0xa);

        _0xbc548.marker = _0x278828.markers.new(0x1, new _0x278828.Vector3(1173.3984, -3196.5529, -40.0079), 0x1, {
          'direction': new _0x278828.Vector3(1173.3984, -3196.5529, -39.0079),
          'rotation': new _0x278828.Vector3(0x0, 0x0, 0x0),
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': 0xa
        });

        const _0x2b2b73 = () => {
          const a0_0x7724f9 = {
            _0x50dd67: 0x106d,
            _0x23a9a8: 0x59a,
            _0xdb6fbe: 0x1d66,
            _0x27b5fe: 0x106d,
            _0x26d3eb: 0x1faa
          },
                _0x2f05f6 = _0x564f5a;
          let _0x140562 = false;
          _0x36347d.forEach(_0x25413b => {
            _0x278828.game.interior.isInteriorPropEnabled(_0x2f05f6, _0x25413b) && (_0x278828.game.interior.disableInteriorProp(_0x2f05f6, _0x25413b), _0x140562 = true);
          }), _0x140562 && _0x278828.game.interior.refreshInterior(_0x2f05f6);
        };

        let _0x212ae0;

        _0x278828.events.add('playerEnterColshape', _0x150d37 => {
          if (_0xfe2dba.api.isAuthed()) return _0x150d37 == _0x570d14 ? (_0x212ae0 = _0x150d37, _0xfe2dba.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388)) : _0x150d37 == _0xbc548 ? (_0x212ae0 = _0x150d37, _0xfe2dba.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : undefined;
        }), _0x278828.events.add('playerExitColshape', _0x2d8cf0 => {
          _0xfe2dba.api.isAuthed() && (_0x2d8cf0 == _0x570d14 && (_0x212ae0 = null, _0x278828.game.ui.clearHelp(true)), _0x2d8cf0 == _0xbc548 && (_0x212ae0 = null, _0x278828.game.ui.clearHelp(true)));
        }), _0x278828.events.add('keys.e', async () => {
          _0x212ae0 && _0x212ae0 == _0x570d14 && (_0x212ae0 = null, _0x2b2b73(), (() => {
            const a0_0x39cfe0 = {
              _0x239e50: 0x1d66,
              _0x38644f: 0x59a,
              _0x2a758d: 0x1d66,
              _0x2514e3: 0x106d,
              _0x850a23: 0xea7,
              _0xa50e61: 0x1985,
              _0x575343: 0x1570
            },
                  _0x462737 = _0x564f5a;
            let _0x2e0597 = false;
            _0x36347d.forEach(_0x44cbc4 => {
              _0x278828.game.interior.isInteriorPropEnabled(_0x462737, _0x44cbc4) || (_0x278828.game.interior.enableInteriorProp(_0x462737, _0x44cbc4), _0xfe2dba.api.invokeNative('_SET_INTERIOR_PROP_COLOR', _0x462737, _0x44cbc4, 0x1), _0x2e0597 = true);
            }), _0x2e0597 && _0x278828.game.interior.refreshInterior(_0x462737);
          })(), await _0xfe2dba.api.teleportAndLoad(new _0x278828.Vector3(1171.4362, -3198.0791, -39.0079), 0x54, {
            'dimension': 0xa
          }), _0x278828.events.callRemote('3404531499', 'taxi')), _0x212ae0 && _0x212ae0 == _0xbc548 && (_0x212ae0 = null, await _0xfe2dba.api.teleportAndLoad(new _0x278828.Vector3(898.9038, -177.6808, 73.8011), 0xee, {
            'dimension': 0x0
          }), _0x2b2b73(), _0x278828.events.callRemote('3404531499', null));
        });
      },
      0xb959: (_0x4e7baa, _0xd05aeb, _0x1e4703) => {
        const a0_0x4db6bf = {
          _0x42293b: 0xe6d,
          _0x240274: 0x1d66,
          _0x1105b2: 0x106d
        },
              a0_0x450895 = {
          _0x2b0d28: 0xe6d,
          _0x1ac9f6: 0x1f87
        },
              a0_0x4bb3ff = {
          _0x1d3ad9: 0x1d66,
          _0x234126: 0xea7
        },
              a0_0x3b6ef1 = {
          _0x1b7fd2: 0xea7
        };

        var _0x4736fa = _0x1e4703(0x161cd);

        const _0x2b47c9 = _0x4736fa.game.interior.getInteriorAtCoords(-0x47f, -0x5ed, 0xb),
              _0x2c6dd3 = ['swap_clean_apt', 'swap_sofa_a', 'layer_debra_pic'];

        _0x4736fa.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x2c6dd3.forEach(_0x50a5fc => {
            _0x4736fa.game.interior.isInteriorPropEnabled(_0x2b47c9, _0x50a5fc) || _0x4736fa.game.interior.enableInteriorProp(_0x2b47c9, _0x50a5fc);
          }), _0x4736fa.game.interior.refreshInterior(_0x2b47c9);
        }), _0x4736fa.events.add('playerEnterInterior', async _0xaf5275 => {
          if (_0x2b47c9 && _0xaf5275 === _0x2b47c9) {
            let _0x4789a2 = false;
            _0x2c6dd3.forEach(_0x1eeb13 => {
              _0x4736fa.game.interior.isInteriorPropEnabled(_0x2b47c9, _0x1eeb13) || (_0x4736fa.game.interior.enableInteriorProp(_0x2b47c9, _0x1eeb13), _0x4789a2 = true);
            }), _0x4789a2 && _0x4736fa.game.interior.refreshInterior(_0x2b47c9);
          }
        }), _0x4736fa.events.add('playerExitInterior', _0x1984e5 => {
          if (_0x2b47c9 && _0x1984e5 === _0x2b47c9) {
            let _0x4e1370 = false;
            _0x2c6dd3.forEach(_0x35c67c => {
              _0x4736fa.game.interior.isInteriorPropEnabled(_0x2b47c9, _0x35c67c) && (_0x4736fa.game.interior.disableInteriorProp(_0x2b47c9, _0x35c67c), _0x4e1370 = true);
            }), _0x4e1370 && _0x4736fa.game.interior.refreshInterior(_0x2b47c9);
          }
        });
      },
      0x11351: (_0x28699c, _0x230283, _0x5f14de) => {
        'use strict';

        const a0_0x6ff2ba = {
          _0x2d2b18: 0x1d66,
          _0x59347d: 0x1273,
          _0x50da7b: 0x535,
          _0x3b317b: 0x1cd8,
          _0x1d117f: 0x52c,
          _0x169cd4: 0x1d66,
          _0x4102a1: 0x821,
          _0x2b6152: 0x1d66,
          _0xf65d83: 0x15e0,
          _0xcc55a6: 0xf2f,
          _0x1c2c92: 0x9ba,
          _0x8d110d: 0x1eec,
          _0x195f6b: 0x1d66,
          _0x1eb1c6: 0x3b4,
          _0x36030: 0x1870,
          _0x5291bb: 0x1497,
          _0xb69e21: 0xd58,
          _0x200b1a: 0x2379,
          _0x900dd4: 0x16f7,
          _0x547f75: 0x1fe9,
          _0x59274d: 0x16f7,
          _0x2bf9b2: 0x15a7,
          _0x3bf690: 0x1d66,
          _0x40c782: 0x229c,
          _0x11608a: 0x11da,
          _0x26c20b: 0xcf8,
          _0x2d3be2: 0x1a3,
          _0xebbfe6: 0x2292,
          _0x94725c: 0x15e0,
          _0x2a3b26: 0x1303,
          _0x58b8d1: 0x15e0,
          _0x4adc9d: 0x54d,
          _0x244ba8: 0x1383,
          _0x3c0271: 0x19ee,
          _0x5e9148: 0x2121,
          _0x213902: 0x198c,
          _0x577d05: 0x1a6d,
          _0x5ec95e: 0xcae,
          _0x14d28e: 0xf4d,
          _0x3dbcaf: 0x186b,
          _0x2ebac5: 0xa9d,
          _0x5da0c8: 0xf82,
          _0x49ec9f: 0x3b1,
          _0x2cc393: 0x1d55,
          _0x584afc: 0xd95,
          _0x54fe6f: 0xe48,
          _0x2cd4c9: 0xd95,
          _0x59b85d: 0x2417,
          _0x2560a5: 0x1a6d,
          _0x41c2ce: 0x3b1,
          _0x4ffa85: 0x1dc6,
          _0x58c554: 0x19cf,
          _0x2546a6: 0xd95,
          _0x29b208: 0x2521,
          _0x53c686: 0x16c5,
          _0x43bede: 0x1dc6,
          _0x116692: 0x18d6,
          _0x1ba924: 0x1289,
          _0x1af069: 0x15e0,
          _0x5bd0de: 0x15e0,
          _0x5bcea2: 0x246a,
          _0x5a69e5: 0x1303,
          _0x4548f0: 0x55c,
          _0x447052: 0x880,
          _0x5cbc72: 0x535,
          _0x3980a8: 0x880,
          _0x193d32: 0x6ac,
          _0x493ba8: 0xff4,
          _0x160513: 0x1d66,
          _0x323936: 0x1870,
          _0x3c17e9: 0xcae,
          _0x5b882a: 0x1a4a,
          _0x3d87e8: 0xd79,
          _0x1d8d79: 0x1199,
          _0x11e5d4: 0x1d66,
          _0x5e41bd: 0x2072,
          _0x2eb9aa: 0x1d66,
          _0x38d746: 0x2652,
          _0xeff8ea: 0xc36,
          _0x590f6b: 0x1d66,
          _0x312d4d: 0x91b,
          _0x3b3019: 0x1d66,
          _0x2d9af5: 0x15e0,
          _0x805b66: 0x25df,
          _0x3a2f47: 0x1749,
          _0x31c593: 0x111b,
          _0x43d1ff: 0x1eec,
          _0x369509: 0xd79,
          _0x4b17eb: 0x1d66,
          _0x591341: 0x205b,
          _0x156487: 0x1f30,
          _0x263b00: 0x186b,
          _0x119a09: 0x3c9,
          _0xe1c61f: 0x1f30,
          _0x1e98f3: 0x535,
          _0x1c4a1a: 0x1933,
          _0x62cf7c: 0x2140,
          _0x3e1a9e: 0x8a5,
          _0x45eb63: 0xf82,
          _0x37f98f: 0x1d55,
          _0x2cf25d: 0x326,
          _0x3619e7: 0x326,
          _0x37f668: 0x15b3,
          _0x28d879: 0x1d66,
          _0xa6a985: 0x535,
          _0x20ddb7: 0x1d66,
          _0x13fe17: 0x2a2,
          _0x38beaa: 0xc47,
          _0x1122ff: 0xa9d,
          _0x1c2471: 0x17f,
          _0x524bdb: 0xa9d
        };

        _0x5f14de.r(_0x230283);

        var _0x2c29b1 = _0x5f14de(0x13888),
            _0x58fe5a = _0x5f14de.n(_0x2c29b1),
            _0x5d5a3a = _0x5f14de(0x48c4),
            _0x28c1dd = _0x5f14de(0x16a21),
            _0x39e793 = _0x5f14de(0xd194),
            _0x16db88 = _0x5f14de(0x12a76),
            _0x210461 = _0x5f14de(0xb2e6),
            _0x531003 = _0x5f14de(0xa04a),
            _0x3362da = (_0x5f14de(0x4f42), _0x5f14de(0x11ed7)),
            _0x701205 = _0x5f14de.n(_0x3362da),
            _0x54f7ce = _0x5f14de(0x11a8c),
            _0x4ead46 = _0x5f14de(0x161cd);

        const _0xa468b6 = _0x4ead46.players.local;

        let _0x4ed226;

        const _0x4047b0 = -1212.79,
              _0x2563cc = -1673.52,
              _0x18424e = 0x7,
              _0x93862c = -1466.79,
              _0x4939db = -2507.52,
              _0x4bf5ce = 0x0,
              _0x31b3d3 = {
          'isActive': false,
          'time': {
            'from': {
              'hour': 0x4,
              'minute': 0x0,
              'second': 0x0
            },
            'to': {
              'hour': 0x8,
              'minute': 0x0,
              'second': 0x0
            }
          }
        },
              _0x2e704a = [{
          'from': {
            'pos': new _0x4ead46.Vector3(-0x4ad, 4898.5, 229.5),
            'rot': new _0x4ead46.Vector3(0x2, 0x0, -61.7),
            'fov': 0x28
          },
          'duration': 0x13ba,
          'fadeIn': 0xdac,
          'doTimeTransition': 0x125c,
          'doTimeTransitionCurve': _0x701205()(0x1, -0.01, 0.8, 0.99)
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-0x37d, 4430.2, 22.3),
            'rot': new _0x4ead46.Vector3(4.3, 0x0, -0x5a),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-888.2, 4429.78, 22.95),
            'rot': new _0x4ead46.Vector3(0x6, 0x0, -93.27),
            'fov': 0x32
          },
          'duration': 0xb54
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(2272.9, 4953.25, 49.82),
            'rot': new _0x4ead46.Vector3(1.5, 0x0, -0x55),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(0x8ef, 4954.55, 50.27),
            'rot': new _0x4ead46.Vector3(1.5, 0x0, -0x55),
            'fov': 0x32
          },
          'duration': 0x866,
          'interpDuration': 0x1388
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(3303.12, 5192.86, 18.57),
            'rot': new _0x4ead46.Vector3(-6.5, 0x0, -0x4f),
            'fov': 0x28
          },
          'to': {
            'pos': new _0x4ead46.Vector3(3302.91, 5195.69, 19.04),
            'rot': new _0x4ead46.Vector3(0x4, 0x0, -0x5d),
            'fov': 0x28
          },
          'duration': 0xb54,
          'interpDuration': 0x1388
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(2252.81, 0x79b, 179.72),
            'rot': new _0x4ead46.Vector3(-16.5, 0x0, 0xb4),
            'fov': 0x28
          },
          'to': {
            'pos': new _0x4ead46.Vector3(2274.37, 1946.9, 0xb1),
            'rot': new _0x4ead46.Vector3(-16.5, 0x0, 0xb4),
            'fov': 0x28
          },
          'duration': 0xb68,
          'interpDuration': 0x1388
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(0x982, 0xc2b, 0x30),
            'rot': new _0x4ead46.Vector3(0x5, 0x0, 0x8d),
            'fov': 0x28
          },
          'to': {
            'pos': new _0x4ead46.Vector3(0x97d, 0xc2b, 0x30),
            'rot': new _0x4ead46.Vector3(7.2, 0x0, 0x8b),
            'fov': 0x28
          },
          'duration': 0x13ce,
          'interpDuration': 0x1f40
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(660.27, -705.668, 25.34),
            'rot': new _0x4ead46.Vector3(8.7, 0x0, -151.31),
            'fov': 0x28
          },
          'to': {
            'pos': new _0x4ead46.Vector3(659.28, -721.83, 25.34),
            'rot': new _0x4ead46.Vector3(0xa, 0x0, -127.89),
            'fov': 0x28
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'time': {
            'hour': 0x7,
            'minute': 0x1e,
            'second': 0x0
          },
          'duration': 0x132e
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(793.58, -48.69, 87.8),
            'rot': new _0x4ead46.Vector3(0x5, 0x0, -76.3),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(791.1, -42.2, 86.64),
            'rot': new _0x4ead46.Vector3(5.5, 0x0, -68.1),
            'fov': 0x30
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'time': {
            'hour': 0x7,
            'minute': 0x1e,
            'second': 0x0
          },
          'duration': 0x1414
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(608.74, 1144.65, 314.7),
            'rot': new _0x4ead46.Vector3(16.2, 0x0, -55.3),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(633.84, 1115.76, 314.7),
            'rot': new _0x4ead46.Vector3(0xd, 0x0, -43.3),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'time': {
            'hour': 0x8,
            'minute': 0x0,
            'second': 0x0
          },
          'duration': 0x16ee
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-0x248, -0x4e, 0x2a),
            'rot': new _0x4ead46.Vector3(0xa, 0x0, 0x9a),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-0x24b, -0x54, 0x2a),
            'rot': new _0x4ead46.Vector3(0x37, 0x0, 0x99),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0x13ce,
          'interpDuration': 0x1f40
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-0x5a6, -0x40d, 0x7),
            'rot': new _0x4ead46.Vector3(0x0, 0x0, 0x76),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-0x5aa, -0x412, 0x7),
            'rot': new _0x4ead46.Vector3(0x4, 0x0, 0x71),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0x1356
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-1988.82, -539.83, 15.42),
            'rot': new _0x4ead46.Vector3(-0x2, 0x0, -101.44),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-2017.64, -520.63, 35.41),
            'rot': new _0x4ead46.Vector3(-0xa, 0x0, -0x50),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0x141e,
          'interpDuration': 0x2710
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-1502.14, -944.87, 8.8),
            'rot': new _0x4ead46.Vector3(12.4, 0x0, 102.96),
            'fov': 0x3c
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-1502.72, -943.15, 9.2),
            'rot': new _0x4ead46.Vector3(14.3, 0x0, 77.96),
            'fov': 0x3c
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0x514,
          'interpDuration': 0x1388
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-1746.76, -1104.43, 20.98),
            'rot': new _0x4ead46.Vector3(2.1, 0x0, -0x5e),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-1749.87, -1088.95, 20.84),
            'rot': new _0x4ead46.Vector3(0x3, 0x0, -89.6),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0x1036,
          'interpDuration': 0x186a
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-0x4de, -0x5bf, 4.5),
            'rot': new _0x4ead46.Vector3(0x4, 0x0, -0x71),
            'fov': 0x28
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-1243.1, -1469.3, 4.5),
            'rot': new _0x4ead46.Vector3(5.3, 0x0, -120.5),
            'fov': 0x28
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0x1342,
          'interpDuration': 0x1770
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-1258.64, -0x5bd, 4.63),
            'pointAt': new _0x4ead46.Vector3(-1261.67, -1468.11, 0x4),
            'fov': 0x23
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-1261.4, -1471.16, 4.63),
            'pointAt': new _0x4ead46.Vector3(-1261.67, -1468.11, 0x4),
            'fov': 0x23
          },
          'duration': 0x497,
          'interpDuration': 0x2710
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-1264.8, -1448.89, 4.8),
            'rot': new _0x4ead46.Vector3(1.3, 0x0, 0x59),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-1268.62, -1442.5, 4.8),
            'rot': new _0x4ead46.Vector3(1.3, 0x0, 0x92),
            'fov': 0x32
          },
          'duration': 0x66d,
          'interpDuration': 0x2710
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(116.16, -0x9ef, 11.94),
            'rot': new _0x4ead46.Vector3(4.5, 0x0, -0x50),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(128.44, -2545.29, 11.7),
            'rot': new _0x4ead46.Vector3(11.6, 0x0, -0x65),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0xe24,
          'interpDuration': 0x1770
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-0x2b8, -0x7ff, 0x1f),
            'rot': new _0x4ead46.Vector3(0x6, 0x0, -0x87),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-0x2be, -0x805, 0x1f),
            'rot': new _0x4ead46.Vector3(0x6, 0x0, -0x81),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'duration': 0xaeb,
          'interpDuration': 0x1388
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(7.35, -1111.46, 0x2b),
            'rot': new _0x4ead46.Vector3(31.6, 0x0, 22.11),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(12.9, -1100.14, 43.5),
            'rot': new _0x4ead46.Vector3(16.25, 0x0, 3.4),
            'fov': 0x32
          },
          'time': {
            'hour': 0x12,
            'minute': 0x0,
            'second': 0x0
          },
          'duration': 0x4c4,
          'interpDuration': 0x157c,
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true
        }, {
          'from': {
            'pos': new _0x4ead46.Vector3(-26.6, -473.96, 155.5),
            'rot': new _0x4ead46.Vector3(0x0, 0x0, 158.5),
            'fov': 0x32
          },
          'to': {
            'pos': new _0x4ead46.Vector3(-79.128, -607.62, 155.5),
            'rot': new _0x4ead46.Vector3(0x0, 0x0, 158.5),
            'fov': 0x32
          },
          'instantlyFillPedPopulation': true,
          'instantlyFillVehiclePopulation': true,
          'showLogo': {
            'offset': 0x1f4,
            'duration': 0x1388
          },
          'time': {
            'hour': 0x12,
            'minute': 0x0,
            'second': 0x0
          },
          'duration': 0x1798,
          'interpDuration': 0x2710
        }];

        let _0x8072be,
            _0x2cbd8f = [];

        _0x4ead46.events.add('startIntro', async (_0x38861f = 0x44c, _0x56d605, _0x5a4e7b, _0xdd2f6) => {
          const a0_0x31f19f = {
            _0x6037de: 0xbc8,
            _0x5d775c: 0x1f41,
            _0x2e62c6: 0x535,
            _0x3b452e: 0x1d66,
            _0x581aed: 0x1d66,
            _0x2c6ed0: 0x1870,
            _0x2dcbbf: 0x91b
          },
                a0_0xf1e60b = {
            _0x3c25c8: 0x1383
          };
          _0x54f7ce.default.hide(), await ((_0x37d05e = 0x7d0, _0x17dd3f = true, _0x36a1eb, _0x3279ab, _0xee1f5f) => new Promise(async (_0x5e6d9b, _0x56cf5b) => {
            const a0_0x2a2eac = {
              _0x46b844: 0x17f
            },
                  a0_0x4de5a8 = {
              _0x2871f0: 0x1a3,
              _0x206d5b: 0x20fc,
              _0x549d68: 0x1870,
              _0x2d2b68: 0xff4,
              _0x4f328a: 0x1a3,
              _0x2a3036: 0x18c
            };

            for (_0x31b3d3.isActive = true, _0x4ead46.game.cam.doScreenFadeOut(0x0), _0x28c1dd.api.toggleHud(false), _0x28c1dd.api.toggleRadar(false), _0x28c1dd.api.toggleChat(false), _0x4ead46.game.streaming.setVehiclePopulationBudget(0x3), _0x4ead46.game.streaming.setPedPopulationBudget(0x3), _0x4ead46.game.audio.prepareMusicEvent('GLOBAL_KILL_MUSIC'), _0x4ead46.game.audio.triggerMusicEvent('GLOBAL_KILL_MUSIC'), _0x4ead46.game.audio.startAudioScene('CHARACTER_CHANGE_IN_SKY_SCENE'), _0x4ead46.game.cutscene.requestCutscene('mp_intro_concat', 0x1); !_0x4ead46.game.cutscene.hasThisCutsceneLoaded('mp_intro_concat');) await _0x4ead46.game.sleep(0x0);

            _0x4ed226 = _0xa468b6.clone(0x0, false, false), _0xa468b6.isMale() ? (_0x4ead46.game.cutscene.registerEntityForCutscene(0x0, 'MP_Female_Character', 0x3, _0x4ead46.game.joaat('mp_f_freemode_01'), 0x0), _0x4ead46.game.cutscene.registerEntityForCutscene(_0x4ed226, 'MP_Male_Character', 0x0, 0x0, 0x0)) : (_0x4ead46.game.cutscene.registerEntityForCutscene(0x0, 'MP_Male_Character', 0x3, _0x4ead46.game.joaat('mp_m_freemode_01'), 0x0), _0x4ead46.game.cutscene.registerEntityForCutscene(_0x4ed226, 'MP_Female_Character', 0x0, 0x0, 0x0)), _0x4ead46.game.entity.setVisible(_0x4ed226, true, false);

            for (let _0xe9f6a7 = 0x1; _0xe9f6a7 < 0x8; _0xe9f6a7++) _0x4ead46.game.cutscene.registerEntityForCutscene(0x0, 'MP_Plane_Passenger_' + _0xe9f6a7, 0x3, _0x4ead46.game.joaat('mp_m_freemode_01'), 0x0), _0x4ead46.game.cutscene.setEntityStreamingFlags('MP_Plane_Passenger_' + _0xe9f6a7, 0x0, 0x0);

            _0x8072be = new _0x39e793.Sounds2D('music/mushoku_tensei', {
              'id': _0x28c1dd.api.shortUUID_5(),
              'volume': 0x28,
              'autoplay': false
            }), await _0x8072be.load(), _0x210461.P.emit('playHudSoundById', {
              'id': _0x8072be.id
            }), _0xa468b6.freezePosition(true), _0xa468b6.setAlpha(0x0);
            const _0x2d9a60 = _0x2e704a[0x0].from.pos;
            _0x4ead46.game.streaming.newLoadSceneStartSphere(_0x2d9a60.x, _0x2d9a60.y, _0x2d9a60.z, 0x1f4, 0x0), _0x4ead46.game.streaming.setHdArea(_0x2d9a60.x, _0x2d9a60.y, _0x2d9a60.z, 0x1f4), await _0x4ead46.game.sleep(_0x37d05e), _0x531003.clockController.freezeTime = true, _0x531003.clockController.setTime(_0x31b3d3.time.from.hour, _0x31b3d3.time.from.minute, _0x31b3d3.time.from.second), _0x4ead46.game.gameplay.setWeatherTypeNowPersist('EXTRASUNNY');
            let _0x300456 = 0x0;

            for (const _0x2c9d7c of _0x2e704a) {
              let _0x23bfc4,
                  _0xa088e9 = _0x4ead46.cameras.new('default', _0x2c9d7c.from.pos, new _0x4ead46.Vector3(0x0, 0x0, 0x0), _0x2c9d7c.from.fov);

              _0x2c9d7c.from.rot ? _0xa088e9.setRot(_0x2c9d7c.from.rot.x, _0x2c9d7c.from.rot.y, _0x2c9d7c.from.rot.z, 0x2) : _0xa088e9.pointAtCoord(_0x2c9d7c.from.pointAt.x, _0x2c9d7c.from.pointAt.y, _0x2c9d7c.from.pointAt.z), _0x2c9d7c.to && (_0x23bfc4 = _0x4ead46.cameras.new('default', _0x2c9d7c.to.pos, new _0x4ead46.Vector3(0x0, 0x0, 0x0), _0x2c9d7c.to.fov), _0x2c9d7c.to.rot ? _0x23bfc4.setRot(_0x2c9d7c.to.rot.x, _0x2c9d7c.to.rot.y, _0x2c9d7c.to.rot.z, 0x2) : _0x23bfc4.pointAtCoord(_0x2c9d7c.to.pointAt.x, _0x2c9d7c.to.pointAt.y, _0x2c9d7c.to.pointAt.z));
              const _0x342c62 = _0x2cbd8f[_0x300456 - 0x1];
              null != _0x342c62 && (_0x342c62.from && _0x4ead46.cameras.exists(_0x342c62.from) && _0x342c62.from.destroy(), _0x342c62.to && _0x4ead46.cameras.exists(_0x342c62.to) && _0x342c62.to.destroy(), _0x2cbd8f[_0x300456 - 0x1] = null);

              const _0x3ac8c4 = _0xa088e9,
                    _0x318db1 = _0x23bfc4,
                    _0xe72e8a = _0x2c9d7c.from.pos,
                    _0x4857f8 = (_0x2c9d7c.to && _0x2c9d7c.to.pos, _0x2c9d7c.duration),
                    _0x337aa6 = _0x2c9d7c.interpDuration;

              _0x2cbd8f.push({
                'from': _0xa088e9,
                'to': _0x23bfc4,
                'fromPos': _0x2c9d7c.from.pos,
                'toPos': _0x2c9d7c.to ? _0x2c9d7c.to.pos : null,
                'duration': _0x2c9d7c.duration,
                'interpDuration': _0x2c9d7c.interpDuration
              }), _0x28c1dd.api.setPlayerPos(_0xa468b6, new _0x4ead46.Vector3(_0xe72e8a.x, _0xe72e8a.y, _0xe72e8a.z + 0x2)), _0xa468b6.freezePosition(true), _0x4ead46.game.streaming.setFocusArea(_0xe72e8a.x, _0xe72e8a.y, _0xe72e8a.z, 0x0, 0x0, 0x0);
              const _0xf89da6 = _0x2e704a[_0x300456 + 0x1];

              if (_0xf89da6) {
                const _0x2ff157 = _0xf89da6.from.pos;
                _0x4ead46.game.streaming.newLoadSceneStartSphere(_0x2ff157.x, _0x2ff157.y, _0x2ff157.z, 0x1f4, 0x0), _0x4ead46.game.streaming.setHdArea(_0x2ff157.x, _0x2ff157.y, _0x2ff157.z, 0x1f4);
              } else _0xee1f5f ? (_0x4ead46.game.streaming.newLoadSceneStartSphere(_0xee1f5f.x, _0xee1f5f.y, _0xee1f5f.z, 0x1f4, 0x0), _0x4ead46.game.streaming.setHdArea(_0xee1f5f.x, _0xee1f5f.y, _0xee1f5f.z, 0x1f4)) : (_0x4ead46.game.streaming.newLoadSceneStartSphere(_0x4047b0, _0x2563cc, _0x18424e, 0x3e8, 0x0), _0x4ead46.game.gameplay.setWeatherTypeNowPersist('EXTRASUNNY'));

              if (_0x2c9d7c.fadeIn && (_0x4ead46.game.cam.doScreenFadeOut(0x0), _0x28c1dd.api.fadeIn(_0x2c9d7c.fadeIn)), _0x2c9d7c.doTimeTransition && _0x531003.clockController.transition(_0x31b3d3.time.to.hour, _0x31b3d3.time.to.minute, {
                'animationTime': _0x2c9d7c.doTimeTransition,
                'bezierEasing': _0x2c9d7c.doTimeTransitionCurve
              }), _0x2c9d7c.showLogo && _0x4ead46.game.sleep(_0x2c9d7c.showLogo.offset).then(async () => {
                _0x16db88.globalBrowser.emit('main_toggleHud', {
                  'key': 'showIntroLogo',
                  'value': true
                }), await _0x4ead46.game.sleep(_0x2c9d7c.showLogo.duration), _0x16db88.globalBrowser.emit('main_toggleHud', {
                  'key': 'showIntroLogo',
                  'value': false
                });
              }), _0x2c9d7c.time && _0x531003.clockController.setTime(_0x2c9d7c.time.hour, _0x2c9d7c.time.minute, _0x2c9d7c.time.second), _0x318db1) {
                const _0x5f2849 = _0x3ac8c4;
                _0x318db1.setActiveWithInterp(_0x5f2849.handle, parseInt(_0x337aa6 || _0x4857f8), 0x0, 0x0), _0x4ead46.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), await _0x4ead46.game.sleep(_0x4857f8 - 0x1);
              } else _0x3ac8c4.setActive(true), _0x4ead46.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), await _0x4ead46.game.sleep(_0x4857f8 - 0x1);

              _0x300456++;
            }

            _0x4ead46.game.streaming.clearFocus(), _0x4ead46.game.cutscene.startCutscene(0x4), _0x28c1dd.api.invokeNative('N_0xbeb2d9a1d9a8f55a', 0x9, 0x9, 0x9, 0x9), _0x4ead46.game.sleep(0x2710).then(() => {
              _0x531003.clockController.syncTimeWithTransition(0x2328);
            }), await _0x4ead46.game.sleep(0x55f0), _0x4ead46.game.streaming.newLoadSceneStartSphere(_0x93862c, _0x4939db, _0x4bf5ce, 0x3e8, 0x0), await _0x4ead46.game.sleep(0xfa0), await _0x28c1dd.api.fadeOut(0x7d0), _0x4ead46.game.cutscene.stopImmediately(), _0x4ead46.game.audio.triggerMusicEvent('GLOBAL_KILL_MUSIC'), _0x4ead46.game.audio.stopAudioScene('CHARACTER_CHANGE_IN_SKY_SCENE'), _0x4ead46.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x4ead46.game.streaming.setVehiclePopulationBudget(0x0), _0x4ead46.game.streaming.setPedPopulationBudget(0x0), _0x4ead46.game.gameplay.clearArea(_0xa468b6.position.x, _0xa468b6.position.y, _0xa468b6.position.z, 0x2710, true, false, true, false), _0x4ead46.game.gameplay.clearAreaOfPeds(_0xa468b6.position.x, _0xa468b6.position.y, _0xa468b6.position.z, 0x2710, 0x1), _0x28c1dd.api.stopSoundFade(_0x8072be.id, 0x7d0), _0x17dd3f ? (_0xa468b6.setAlpha(0xff), _0xa468b6.freezePosition(false), _0x28c1dd.api.setPlayerPos(_0xa468b6, new _0x4ead46.Vector3(-1045.2, -2750.65, 21.3)), _0xa468b6.taskGoStraightToCoord(-1042.15, -2745.16, 21.35, 0x1, -0x1, 0x147, 0x0), _0x31b3d3.airportCameraStart = _0x4ead46.cameras.new('default', new _0x4ead46.Vector3(-0x3e2, -2728.6, 30.7), new _0x4ead46.Vector3(-0x7, 0x0, 103.3), 0x32), _0x31b3d3.airportCameraEnd = _0x4ead46.cameras.new('default', new _0x4ead46.Vector3(-1015.25, -2730.6, 23.9), new _0x4ead46.Vector3(-0x4, 0x0, 116.2), 0x32), _0x31b3d3.airportCameraEnd.setActiveWithInterp(_0x31b3d3.airportCameraStart.handle, 0x1770, 0x0, 0x0), _0x4ead46.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x4ead46.game.sleep(0x176f).then(() => {
              _0xa468b6.clearTasksImmediately(), _0xa468b6.setAlpha(0xff), _0xa468b6.setHeading(0x147), _0x28c1dd.api.setPlayerPos(_0xa468b6, new _0x4ead46.Vector3(-1041.36, -2744.53, 21.359)), _0x28c1dd.api.toggleHud(true), _0x28c1dd.api.toggleRadar(true), _0x28c1dd.api.toggleChat(true), _0x4ead46.game.cam.renderScriptCams(false, true, 0x3e8, false, false, 0x0), _0x4ead46.game.sleep(0x3e8).then(() => {
                _0x5e6d9b(), _0x31b3d3.airportCameraStart.destroy(), _0x31b3d3.airportCameraEnd.destroy(), _0x31b3d3.isActive = false;
              });
            })) : (_0x28c1dd.api.setPlayerPos(_0xa468b6, _0x36a1eb), _0xa468b6.setHeading(_0x3279ab)), await _0x4ead46.game.sleep(0x7d0), await _0x28c1dd.api.fadeIn(0x3e8), _0x17dd3f || (_0x5e6d9b(), _0x31b3d3.isActive = false), _0x4ead46.game.streaming.newLoadSceneStop();

            for (const _0x416465 of _0x2cbd8f) null != _0x416465 && (_0x416465.from && _0x4ead46.cameras.exists(_0x416465.from) && _0x416465.from.destroy(), _0x416465.to && _0x4ead46.cameras.exists(_0x416465.to) && _0x416465.to.destroy());

            _0x2cbd8f = [];
          }))(_0x38861f, _0x56d605, _0x5a4e7b, _0xdd2f6), _0x4ead46.events.callRemote('2353307210');
        }), _0x4ead46.events.add('render', () => {
          _0x31b3d3.isActive && _0x4ead46.game.controls.disableAllControlActions(0x1);
        });

        var _0x11348b = _0x5f14de(0x161cd);

        const {
          launchParams: _0x938542
        } = _0x5f14de(0x119f3);

        null == _0x938542.showIntro || _0x938542.showIntro ? (() => {
          const _0x88d84c = _0x58fe5a()().tz((0x0, _0x5d5a3a.getServerTimezone)()),
                _0x57ed16 = new Date().getFullYear();

          _0x88d84c.isBetween(_0x57ed16 + '-09-01 00:00', _0x57ed16 + '-09-09 00:00') ? _0x5f14de(0xa1b0) : _0x88d84c.isBetween(_0x57ed16 + '-10-20 00:00', _0x57ed16 + '-11-10 03:00') ? _0x5f14de(0x7759) : _0x88d84c.isBetween(_0x57ed16 + '-06-01 00:00', _0x57ed16 + '-09-01 00:00') ? _0x5f14de(0xf533) : _0x88d84c.isBetween(_0x57ed16 + '-09-01 00:00', _0x57ed16 + '-12-01 00:00') ? _0x5f14de(0x11f0b) : _0x88d84c.isBetween(_0x57ed16 + '-12-01 00:00', _0x57ed16 + '-12-31 23:59') || _0x88d84c.isBetween(_0x57ed16 + '-01-01 00:00', _0x57ed16 + '-03-01 00:00') ? _0x5f14de(0x1532f) : _0x5f14de(0x16e6);
        })() : (_0x11348b.game.cam.doScreenFadeIn(0x3e8), _0x11348b.events.add('browser.onVueLoaded', _0x44a6d4 => {
          _0x11348b.events.callRemote('1539188339');
        })), _0x5f14de(0x11fb0);
      },
      0x11f0b: (_0x37752a, _0x210afc, _0x101a99) => {
        'use strict';

        const a0_0x1714b8 = {
          _0x43d172: 0x1383,
          _0x17f044: 0x2121,
          _0x173415: 0xf4d,
          _0x1646e6: 0x1d66,
          _0x12951a: 0x9d3
        },
              a0_0x13ca2a = {
          _0x1f96e3: 0x52c,
          _0x43f7f2: 0x2072,
          _0x4e345c: 0x235b,
          _0x310692: 0x185e,
          _0x4292d7: 0x2292,
          _0xb90769: 0x628,
          _0xfb8b75: 0x20cc,
          _0x4ae66a: 0x235b,
          _0x20eb7a: 0x1f30,
          _0x1640b6: 0xffb,
          _0x51444f: 0x535,
          _0x3efb6c: 0xa9d,
          _0x2364c9: 0x16c5,
          _0x11a808: 0x248,
          _0x21d447: 0x1fe9,
          _0x489053: 0xd79,
          _0x5681f5: 0x1870,
          _0x6e67cf: 0x880
        },
              a0_0x25a406 = {
          _0x3df965: 0x1c01,
          _0x3be42c: 0x191a,
          _0x38c2be: 0x13b0,
          _0x4e0596: 0x2a2
        },
              a0_0x54f2fd = {
          _0x17d09d: 0x18c2,
          _0x1de881: 0x1d66,
          _0x365008: 0x15e0,
          _0x2e4a62: 0x1fe9,
          _0x8162be: 0x248,
          _0x22b510: 0x1fe9,
          _0x5954ba: 0x1dad,
          _0x156cd8: 0x19cf,
          _0x4eb1a3: 0xf5c,
          _0x420a8b: 0xf5c,
          _0x1c607b: 0x23e3,
          _0x4e98ef: 0x1a8b,
          _0x35b7ac: 0x2236,
          _0x50e200: 0x1fc8,
          _0x33a972: 0x10e6,
          _0x4ac70b: 0x2530,
          _0x50fd45: 0x1aa6,
          _0x2939ba: 0x2530,
          _0x4065b5: 0x88e,
          _0x41169a: 0xf79,
          _0x4762e0: 0x1f30,
          _0x442172: 0x1f30,
          _0x46a3cb: 0x1383,
          _0x292d65: 0x54d,
          _0x20f7dc: 0x19ee,
          _0x262420: 0x2121,
          _0x3b2516: 0xcae,
          _0x141074: 0xf4d,
          _0x389999: 0x186b,
          _0x233a67: 0x2310
        },
              a0_0x345736 = {
          _0x200f31: 0x1869
        },
              a0_0x3de9ce = {
          _0x126754: 0x1362
        };

        _0x101a99.r(_0x210afc);

        var _0x183022 = _0x101a99(0x16a21),
            _0x3f1137 = _0x101a99(0x16a7d),
            _0x1561e2 = _0x101a99(0xd194),
            _0x5984d1 = _0x101a99(0xb9cc),
            _0x2a5181 = _0x101a99(0x16e5f),
            _0x5504a5 = _0x101a99(0x5d14),
            _0xd43426 = _0x101a99(0xa04a),
            _0x38de8b = _0x101a99(0x161cd);

        const _0x32a51b = {
          'enabled': false,
          'camera': {
            'entity': undefined,
            'from': new _0x38de8b.Vector3(717.7773, -240.7303, 66.23),
            'lookAt': new _0x38de8b.Vector3(626.0359, -280.4973, 61.94839),
            'fov': 0x37
          },
          'player': {
            'spawnPosition': new _0x38de8b.Vector3(720.3904, -250.0074, 66.26633),
            'freezePlayer': true
          },
          'weather': 'CLEAR',
          'time': {
            'hour': 0x15,
            'minute': 0x14,
            'second': 0x0
          },
          'browserReady': false,
          'playerReady': false,
          'worldReady': false,
          'music': undefined,
          'instructions': {
            'enabled': false,
            'entity': undefined
          },
          'pedData': {
            'position': new _0x38de8b.Vector3(715.17, -243.34, 65.75),
            'heading': -0x14,
            'scenario': 'PROP_HUMAN_SEAT_BENCH_DRINK'
          },
          'activePeds': [],
          'particles': {
            'handle': null,
            'position': new _0x38de8b.Vector3(714.24, -240.39, 67.26),
            'fxData': {
              'lib': 'core',
              'name': 'ent_amb_leaves_oak_g'
            }
          },
          'canClick': false
        };
        _0x38de8b.events.add('browser.onVueLoaded', _0x4cff9a => {
          _0x4cff9a && (_0x32a51b.browserReady = true);
        }), _0x38de8b.events.add('playerJoinEvent', async _0x30bac6 => {
          _0x32a51b.playerReady = true;
        }), _0x38de8b.events.add('worldDataReady', () => {
          _0x32a51b.worldReady = true;
        });

        const _0x37e0db = () => new Promise(async (_0x1813a9, _0x3a5462) => {
          (0xc != _0x38de8b.game.streaming.getPlayerSwitchState() && _0x38de8b.game.streaming.stopPlayerSwitch(), !_0x38de8b.cameras.exists(_0x32a51b.camera.entity)) && (_0x32a51b.camera.entity = _0x38de8b.cameras.new('intro_location', _0x32a51b.camera.from, new _0x38de8b.Vector3(0x0, 0x0, 0x0), _0x32a51b.camera.fov)).pointAtCoord(_0x32a51b.camera.lookAt.x, _0x32a51b.camera.lookAt.y, _0x32a51b.camera.lookAt.z);

          if (_0x32a51b.music || (_0x183022.api.playAmbientMusic2('music/autumnAmbience', 0x23, true), _0x2a5181.Z.play('intro.autumn', {
            'volume': 0x19,
            'startOffsetPercent': _0x5504a5.u.integer({
              'min': 0x0,
              'max': 0x32
            }),
            'fade': 0x7d0,
            'waitTime': 0x1,
            'looped': true,
            'force': true
          }), _0x32a51b.music = true), !_0x32a51b.particles.handle) {
            const _0x4881e4 = _0x32a51b.particles.handle = new _0x1561e2.ParticleFx(_0x32a51b.particles.fxData.lib, _0x32a51b.particles.fxData.name, {});

            await _0x4881e4.load(), _0x4881e4.playOnCoords(_0x32a51b.particles.position.x, _0x32a51b.particles.position.y, _0x32a51b.particles.position.z, -0x1);
          }

          return _0xd43426.clockController.freezeTime = true, _0xd43426.clockController.setTime(_0x32a51b.time.hour, _0x32a51b.time.minute, _0x32a51b.time.second), _0x38de8b.game.gameplay.setWeatherTypeNowPersist('CLEAR'), _0x1813a9();
        });

        _0x38de8b.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x38de8b.cameras.exists(_0x32a51b.camera.entity) && (_0x38de8b.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x32a51b.camera.entity.setActive(false), _0x32a51b.camera.entity.destroy(), delete _0x32a51b.camera.entity);
        });

        const _0x2489eb = () => {
          _0x32a51b.instructions.entity && _0x43daa7();

          const _0x492aae = _0x32a51b.instructions.entity = new _0x5984d1.InstructionalButtons(-0x1);

          _0x492aae.addButton('ibuttons.startGame', 0x12), _0x492aae.toggleHud(false), _0x492aae.isActive() || _0x492aae.toggleHud(true), _0x32a51b.instructions.enabled = true;
        },
              _0x43daa7 = () => {
          _0x32a51b.instructions.enabled = false, _0x32a51b.instructions.entity.toggleHud(false), _0x32a51b.instructions.entity.removeButton('ibuttons.startGame'), _0x32a51b.instructions.entity.resetBar(), _0x32a51b.instructions.entity = undefined;
        },
              _0x301933 = () => {
          _0x32a51b.instructions.enabled && _0x32a51b.canClick && (_0x32a51b.instructions.enabled && (_0x43daa7(), _0x32a51b.instructions.enabled = false), _0x32a51b.music && (_0x2a5181.Z.stop(true), _0x183022.api.stopAmbientMusic2(), delete _0x32a51b.music), _0x32a51b.particles.handle && _0x32a51b.particles.handle.timeoutRemove(0x0), _0x32a51b.enabled = false, _0x32a51b.canClick = false, _0x38de8b.events.callRemote('1539188339'));
        };

        _0x38de8b.keys.bind(_0x3f1137.t.ENTER, false, _0x301933), _0x38de8b.events.add('click', (_0x5997ee, _0x3b5c7f, _0x4baa55, _0xa0eef8, _0x91cb29, _0x1c5efc, _0x30fa3c, _0x2c6d74) => {
          'left' === _0xa0eef8 && 'down' == _0x4baa55 && _0x301933();
        }), _0x32a51b.checkerInterval = setInterval(() => {
          _0x32a51b.playerReady && _0x32a51b.browserReady && _0x32a51b.worldReady && (_0x32a51b.checkerInterval && (clearInterval(_0x32a51b.checkerInterval), delete _0x32a51b.checkerInterval), (async () => {
            _0x183022.api.toggleChat(false), _0x38de8b.game.cam.doScreenFadeOut(0x0), _0x38de8b.players.local.freezePosition(_0x32a51b.player.freezePlayer), _0x38de8b.players.local.position = _0x32a51b.player.spawnPosition;

            let _0x38dabc = Date.now();

            await _0x183022.api.waitFor(() => _0x38de8b.players.local.hasCollisionLoadedAround() || Date.now() - _0x38dabc > 0x3e8, 0x64), await _0x37e0db(), _0x38de8b.cameras.exists(_0x32a51b.camera.entity) && (_0x32a51b.camera.entity.setActive(true), _0x38de8b.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0)), _0x2489eb(), _0x32a51b.enabled = true, await _0x38de8b.game.sleep(0x3e8), await _0x183022.api.fadeIn(0x3e8), _0x32a51b.canClick = true;
          })());
        }, 0x1e), _0x38de8b.events.add('time.everySec', () => {
          _0x32a51b.enabled && (_0xd43426.clockController.setTime(_0x32a51b.time.hour, _0x32a51b.time.minute, _0x32a51b.time.second), _0x38de8b.game.gameplay.setWeatherTypeNowPersist('CLEAR'));
        });
      },
      0x16e6: (_0x515fdd, _0x115e5b, _0x4408d5) => {
        'use strict';

        const a0_0x1a9e38 = {
          _0x4f6fe6: 0x1d48,
          _0x18cb94: 0x1383,
          _0x3a6a9e: 0x19ee,
          _0x4234ad: 0x2121,
          _0x2a6803: 0xcae,
          _0x1682bf: 0xf4d,
          _0x4d6b74: 0x2310
        },
              a0_0xd5d783 = {
          _0x1d7296: 0x7bd,
          _0x1a5b0f: 0x29d
        },
              a0_0x155f10 = {
          _0x11f93c: 0x8ce
        },
              a0_0x50783b = {
          _0x14291a: 0x15e0,
          _0x46f0cc: 0x15e0,
          _0x3a6763: 0x2297,
          _0x1916ae: 0xa9d,
          _0x27df57: 0x16c5,
          _0x8e0766: 0x248,
          _0x20480e: 0xf82,
          _0x12c988: 0x1dad,
          _0x4c96c9: 0x248,
          _0x174992: 0xf5c,
          _0x51e926: 0x248,
          _0x480561: 0xf5c,
          _0x2acf65: 0x8a2,
          _0x3a65ef: 0x1fc8,
          _0x35817d: 0x1383,
          _0x54ddd4: 0x19ee,
          _0x3886bb: 0x2121,
          _0x5d6021: 0x198c,
          _0x152e5e: 0x2121,
          _0x442815: 0xf4d,
          _0x58420c: 0x1d66,
          _0x545320: 0x9d3,
          _0x579e02: 0x186b,
          _0x3a078d: 0xe24
        },
              a0_0xfac131 = {
          _0x856197: 0x2072,
          _0xa66fe8: 0x185e,
          _0xb946d5: 0x2292,
          _0x3f75a9: 0x20cc,
          _0xfddabe: 0x235b,
          _0x462cba: 0x1f30,
          _0x595384: 0x628,
          _0x425f79: 0xc5a,
          _0x1a2e4a: 0x1d66,
          _0x9e5917: 0x628,
          _0x237088: 0x628,
          _0x415509: 0xc5a,
          _0x5e40dc: 0xffb,
          _0x147580: 0x1d80,
          _0x58eca9: 0xa9d,
          _0x4268f9: 0x16c5,
          _0x110c12: 0x1199,
          _0x4a1c23: 0x1870,
          _0x221741: 0x535,
          _0x3f5a00: 0x880,
          _0x97d67e: 0x15e0
        },
              a0_0x3a8342 = {
          _0x4335aa: 0x1d66,
          _0x18e3ae: 0x1f56,
          _0x30f5ec: 0x18ba,
          _0x4bc086: 0x1f56
        },
              a0_0x2a1c6e = {
          _0x23353e: 0x1c01,
          _0x1e6d5b: 0x9ed,
          _0x482d17: 0x1c01,
          _0x49bd40: 0x1d48,
          _0x1583bf: 0x1d48,
          _0x24e71d: 0x10e6,
          _0x472947: 0x535,
          _0x9729d2: 0x18f6,
          _0x337b4b: 0x1366,
          _0x2c5ef1: 0xe6d,
          _0x20a3b3: 0x132a,
          _0x372165: 0x132a,
          _0x36087e: 0x1da5,
          _0x418a70: 0x582
        },
              a0_0x29a9b7 = {
          _0x22e29b: 0x16c5
        },
              a0_0x5ad527 = {
          _0x17bbab: 0x2606,
          _0x94aa0b: 0x132a,
          _0x1f7b01: 0x132a,
          _0x77c8c1: 0x17f,
          _0x233d68: 0x132a,
          _0x4ed045: 0x1d66,
          _0x4ac2a2: 0x1d55,
          _0x297bf3: 0x16c5,
          _0x47397b: 0x2530,
          _0x46022e: 0x16c5,
          _0x419065: 0x132a
        },
              a0_0x4c6b21 = {
          _0x4976b0: 0x16c5,
          _0x296457: 0x1de9
        },
              a0_0x1f5004 = {
          _0x240d8c: 0x1366,
          _0x3ac69e: 0x358,
          _0x423bf7: 0xdef
        },
              a0_0x14978c = {
          _0x5a9fda: 0x1de9,
          _0x151e0b: 0x1a67,
          _0x37c07e: 0x188f
        };

        _0x4408d5.r(_0x115e5b);

        var _0x419773 = _0x4408d5(0x16a21),
            _0x298059 = _0x4408d5(0xb9cc),
            _0x5ef4a9 = (_0x4408d5(0xd194), _0x4408d5(0xa04a)),
            _0x28b761 = _0x4408d5(0x16e5f),
            _0x3f728e = _0x4408d5(0x5d14),
            _0x2c2ab7 = _0x4408d5(0x66f9),
            _0x52ddfa = _0x4408d5(0x16a7d),
            _0x5f31c6 = _0x4408d5(0x161cd);

        _0x5f31c6.players.local;
        const _0x2c4154 = {
          'enabled': false,
          'weather': 'CLEAR',
          'time': {
            'hour': 0x17,
            'minute': 0x0,
            'second': 0x0
          },
          'player': {
            'spawnPosition': new _0x5f31c6.Vector3(-1666.21, 4282.22, 81.15),
            'freezePlayer': true
          },
          'camera': {
            'entity': undefined,
            'from': new _0x5f31c6.Vector3(-1662.898, 4286.011, 81.2042),
            'lookAt': new _0x5f31c6.Vector3(-1670.275, 4290.903, 80.24872),
            'fov': 0x32
          },
          'browserReady': false,
          'playerReady': false,
          'worldReady': false,
          'instructions': {
            'enabled': false,
            'entity': undefined
          },
          'campfireLightPos': new _0x5f31c6.Vector3(-1665.82, 4287.4, 80.12),
          'peds': [],
          'guitar': undefined,
          'music': undefined,
          'canClick': false
        };
        _0x5f31c6.events.add('browser.onVueLoaded', _0x35a56b => {
          _0x35a56b && (_0x2c4154.browserReady = true);
        }), _0x5f31c6.events.add('playerJoinEvent', async _0x330fed => {
          _0x2c4154.playerReady = true;
        }), _0x5f31c6.events.add('worldDataReady', () => {
          _0x2c4154.worldReady = true;
        });

        const _0x20f70b = _0x258db6 => {
          const a0_0x4f9809 = {
            _0x1eec6b: 0x1366,
            _0x2ac1d1: 0x2530,
            _0x4bd6cb: 0x1a67
          };
          if (_0x258db6 && _0x258db6.handle && _0x5f31c6.peds.exists(_0x258db6)) switch (_0x258db6.introPedId) {
            case 0x1:
              _0x419773.api.requestAnimDict('amb@code_human_in_bus_passenger_idles@female@sit@idle_a').then(() => {
                _0x5f31c6.peds.exists(_0x258db6) && _0x258db6.handle && _0x258db6.taskPlayAnim('amb@code_human_in_bus_passenger_idles@female@sit@idle_a', 'idle_a', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
              }), _0x419773.api.requestAnimDict('switch@trevor@guitar_beatdown').then(() => {
                _0x5f31c6.peds.exists(_0x258db6) && _0x258db6.handle && _0x258db6.taskPlayAnim('switch@trevor@guitar_beatdown', '001370_02_trvs_8_guitar_beatdown_idle_busker', 0x8, 0x8, -0x1, 0x31, 0x0, false, false, false);
              }), _0x258db6.playFacialAnim('mic_chatter', 'mp_facial'), _0x789560(_0x258db6);
              break;

            case 0x2:
              _0x419773.api.requestAnimDict('amb@code_human_in_bus_passenger_idles@female@sit@idle_a').then(() => {
                _0x5f31c6.peds.exists(_0x258db6) && _0x258db6.handle && _0x258db6.taskPlayAnim('amb@code_human_in_bus_passenger_idles@female@sit@idle_a', 'idle_a', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
              });

              break;

            case 0x3:
              _0x419773.api.requestAnimDict('anim@amb@business@cfid@cfid_desk_no_work_bgen_chair_no_work@').then(() => {
                _0x5f31c6.peds.exists(_0x258db6) && _0x258db6.handle && _0x258db6.taskPlayAnim('anim@amb@business@cfid@cfid_desk_no_work_bgen_chair_no_work@', 'lookaround_phoneless_lazyworker', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
              });

          }
        },
              _0x789560 = async _0x3e7d4f => {
          if (_0x5f31c6.peds.exists(_0x3e7d4f) && 0x0 !== _0x3e7d4f.handle && (_0x5f31c6.objects.exists(_0x2c4154.guitar) && _0x2c4154.guitar.destroy(), _0x2c4154.guitar = await (0x0, _0x2c2ab7.n)(_0x5f31c6.game.joaat('prop_acc_guitar_01'), new _0x5f31c6.Vector3(-1666.33, 4289.56, 80.39122), {
            'dimension': -0x1
          }), _0x5f31c6.peds.exists(_0x3e7d4f) && _0x3e7d4f.handle)) return _0x5f31c6.objects.exists(_0x2c4154.guitar) ? void _0x2c4154.guitar.attachTo(_0x3e7d4f.handle, _0x3e7d4f.getBoneIndex(0x60f2), -0.08, 0.375, 0x0, 0xa, -0x14, 0x96, false, false, false, false, 0x2, true) : (_0x2c4154.guitar.destroy(), void delete _0x2c4154.guitar);
        },
              _0x352b94 = () => {
          _0x2c4154.instructions.enabled = false, _0x2c4154.instructions.entity.toggleHud(false), _0x2c4154.instructions.entity.removeButton('ibuttons.startGame'), _0x2c4154.instructions.entity.resetBar(), _0x2c4154.instructions.entity = undefined;
        },
              _0x3b7338 = () => {
          _0x2c4154.instructions.enabled && _0x2c4154.canClick && (_0x2c4154.instructions.enabled && (_0x352b94(), _0x2c4154.instructions.enabled = false), _0x2c4154.music && (_0x28b761.Z.stop(true), _0x419773.api.stopAmbientMusic2(), delete _0x2c4154.music), _0x2c4154.peds.forEach(_0x204511 => {
            _0x5f31c6.peds.exists(_0x204511) && _0x204511.handle > 0x0 && _0x204511.destroy();
          }), _0x2c4154.peds = [], _0x2c4154.guitar && _0x5f31c6.objects.exists(_0x2c4154.guitar) && (_0x2c4154.guitar.destroy(), delete _0x2c4154.guitar), _0x2c4154.enabled = false, _0x2c4154.canClick = false, _0x5f31c6.events.callRemote('1539188339'));
        };

        _0x5f31c6.events.add('render', () => {
          _0x2c4154.enabled && (_0x5f31c6.game.controls.disableAllControlActions(0x1), _0x2c4154.campfireLightPos && _0x5f31c6.game.graphics.drawLightWithRangeAndShadow(_0x2c4154.campfireLightPos.x, _0x2c4154.campfireLightPos.y, _0x2c4154.campfireLightPos.z + 0x1, 0xe2, 0x58, 0x22, 0x5, 0.5, 0.5));
        }), _0x5f31c6.events.add('entityStreamIn', _0x456c39 => {
          'ped' != _0x456c39.type || isNaN(_0x456c39.introPedId) || _0x20f70b(_0x456c39);
        });

        const _0xeca377 = async () => {
          const a0_0xa083bd = {
            _0x305d5f: 0x1fe9,
            _0x4f7b20: 0x1c01,
            _0x3a71e1: 0x874,
            _0x556ec8: 0x2a2,
            _0x414576: 0x13b0,
            _0x595854: 0x1c01
          },
                a0_0x20798e = {
            _0x57647a: 0x1366,
            _0x180a15: 0xf82,
            _0xee638f: 0x1d66,
            _0x43270f: 0x2379,
            _0x247f2d: 0xd2f,
            _0xf3d027: 0xf82,
            _0x529711: 0x1d66,
            _0x20eb6c: 0x2379,
            _0x2cd249: 0x1d2
          },
                a0_0x38f06a = {
            _0x12bef8: 0x1471
          };
          _0x419773.api.toggleChat(false), _0x5f31c6.game.cam.doScreenFadeOut(0x0), _0x5f31c6.players.local.freezePosition(_0x2c4154.player.freezePlayer), _0x5f31c6.players.local.position = _0x2c4154.player.spawnPosition, _0x5f31c6.game.streaming.setFocusArea(_0x2c4154.player.spawnPosition.x, _0x2c4154.player.spawnPosition.y, _0x2c4154.player.spawnPosition.z, 0x0, 0x0, 0x0), (() => {
            const _0x235db7 = _0x5f31c6.peds.new(_0x5f31c6.game.joaat('g_m_m_chigoon_01'), new _0x5f31c6.Vector3(-1666.33, 4289.56, 80.39122), -159.9993, -0x1),
                  _0x3a8966 = _0x5f31c6.peds.new(_0x5f31c6.game.joaat('g_m_y_famfor_01'), new _0x5f31c6.Vector3(-0x681, 4289.46, 80.41764), 163.0002, -0x1),
                  _0x24b136 = _0x5f31c6.peds.new(_0x5f31c6.game.joaat('a_m_y_eastsa_02'), new _0x5f31c6.Vector3(-1667.396, 4286.616, 81.08051999999999), -58.99946, -0x1);

            _0x2c4154.peds.push(_0x235db7, _0x3a8966, _0x24b136), _0x2c4154.peds.forEach((_0x140c13, _0x416846) => {
              _0x140c13.introPedId = _0x416846 + 0x1, _0x20f70b(_0x140c13);
            });
          })();

          let _0x511d28 = Date.now();

          await _0x419773.api.waitFor(() => _0x5f31c6.players.local.hasCollisionLoadedAround() || Date.now() - _0x511d28 > 0x3e8, 0x64), await _0x5c3626(), _0x5f31c6.cameras.exists(_0x2c4154.camera.entity) && (_0x2c4154.camera.entity.setActive(true), _0x5f31c6.game.cam.renderScriptCams(true, false, 0x0, true, false)), (() => {
            _0x2c4154.instructions.entity && _0x352b94();

            const _0x55188d = _0x2c4154.instructions.entity = new _0x298059.InstructionalButtons(-0x1);

            _0x55188d.addButton('ibuttons.startGame', 0x12), _0x55188d.toggleHud(false), _0x55188d.isActive() || _0x55188d.toggleHud(true), _0x2c4154.instructions.enabled = true;
          })(), _0x2c4154.enabled = true, await _0x5f31c6.game.sleep(0x3e8), await _0x419773.api.fadeIn(0x3e8), _0x5f31c6.game.streaming.clearFocus(), _0x2c4154.canClick = true;
        },
              _0x5c3626 = () => new Promise(async (_0x1bde3a, _0x4d0e86) => {
          return (0xc != _0x5f31c6.game.streaming.getPlayerSwitchState() && _0x5f31c6.game.streaming.stopPlayerSwitch(), !_0x5f31c6.cameras.exists(_0x2c4154.camera.entity)) && (_0x2c4154.camera.entity = _0x5f31c6.cameras.new('intro_location', _0x2c4154.camera.from, new _0x5f31c6.Vector3(0x0, 0x0, 0x0), _0x2c4154.camera.fov)).pointAtCoord(_0x2c4154.camera.lookAt.x, _0x2c4154.camera.lookAt.y, _0x2c4154.camera.lookAt.z), (_0x2c4154.music || (_0x28b761.Z.play('intro.forest', {
            'volume': 0x1e,
            'startOffsetPercent': _0x3f728e.u.integer({
              'min': 0x0,
              'max': 0x5f
            }),
            'fade': 0x7d0,
            'waitTime': 0x1,
            'looped': true,
            'force': true
          }), _0x2c4154.music = true), _0x5ef4a9.clockController.freezeTime = true, _0x5ef4a9.clockController.setTime(_0x2c4154.time.hour, _0x2c4154.time.minute, _0x2c4154.time.second), _0x5f31c6.game.gameplay.setWeatherTypeNowPersist('CLEAR'), _0x5f31c6.game.gameplay.setWindDirection(Math.PI / 0xb4 * 0x50), _0x1bde3a());
        });

        _0x5f31c6.keys.bind(_0x52ddfa.t.ENTER, false, _0x3b7338), _0x5f31c6.events.add('click', (_0x3e1ff7, _0x554dce, _0x35df46, _0x5dbace, _0x4c707e, _0x3f23da, _0x4931c0, _0x14eef3) => {
          'left' === _0x5dbace && 'down' == _0x35df46 && _0x3b7338();
        }), _0x2c4154.checkerInterval = setInterval(() => {
          _0x2c4154.playerReady && _0x2c4154.browserReady && _0x2c4154.worldReady && (_0x2c4154.checkerInterval && (clearInterval(_0x2c4154.checkerInterval), delete _0x2c4154.checkerInterval), _0xeca377());
        }, 0x1e), _0x5f31c6.events.add('time.everySec', () => {
          _0x2c4154.enabled && (_0x5ef4a9.clockController.setTime(_0x2c4154.time.hour, _0x2c4154.time.minute, _0x2c4154.time.second), _0x5f31c6.game.gameplay.setWeatherTypeNowPersist('CLEAR'));
        });
      },
      0x7759: (_0x12e49a, _0x2f51d, _0x30e298) => {
        'use strict';

        const a0_0x5594e4 = {
          _0x33e81c: 0x198c,
          _0x99c6a8: 0xcae,
          _0x7d1fae: 0x2121,
          _0x52eacc: 0x2168,
          _0x1e693a: 0x2310,
          _0x43b051: 0x9d3
        },
              a0_0x30f0ca = {
          _0x53717c: 0x1869,
          _0x46b7c6: 0x29d
        },
              a0_0x5c7e67 = {
          _0x24d70a: 0x535,
          _0x57bd58: 0x52c,
          _0x1b177f: 0x2072,
          _0x6f05d2: 0x1273,
          _0xf1cbe4: 0x235b,
          _0x2dd686: 0x185e,
          _0x172e6e: 0x1f30,
          _0x1e1ff9: 0xc5a,
          _0x8cdfa3: 0x1d80,
          _0x178139: 0xa9d,
          _0x176fdb: 0x248,
          _0x2a18b7: 0x2072,
          _0x2d0de8: 0x1d48,
          _0x27a5ce: 0x1870,
          _0x33b2e8: 0x535,
          _0x4a30e6: 0x9ed
        },
              a0_0xb19446 = {
          _0x58eda2: 0x1d66,
          _0x3d0e23: 0x2297,
          _0x2a9f77: 0x16c5,
          _0x13c9d8: 0x248,
          _0xdabe2a: 0xa9d,
          _0x418ebb: 0xf82,
          _0x58782d: 0x1dad,
          _0x4cfcee: 0x248,
          _0x244ac2: 0x1d55,
          _0x241c81: 0x248,
          _0x5d4baf: 0xf5c,
          _0x154d18: 0xf5c,
          _0x4788cf: 0x23e3,
          _0x3e1322: 0x2236,
          _0x299404: 0x591,
          _0x57768b: 0x1fc8,
          _0x4f9523: 0x10e6,
          _0x1391d8: 0x1aa6,
          _0x40317f: 0x88e,
          _0x2af755: 0x508,
          _0x1ef851: 0xf79,
          _0x4e3765: 0x986,
          _0xc10e1b: 0x15e0,
          _0x43572b: 0x140a,
          _0x221e97: 0x206a,
          _0xe5cab: 0x206a,
          _0x54f1d9: 0x1a01,
          _0x257931: 0x15e0,
          _0xe731fc: 0x140a,
          _0x371053: 0x11c0,
          _0x209083: 0x11c0,
          _0x3c3cc4: 0x15e0,
          _0x3bbbbc: 0x11c0,
          _0x5057a0: 0x815,
          _0xd29848: 0x1383,
          _0x11aa8c: 0x19ee,
          _0xcfcf1f: 0x2121,
          _0x2f96cd: 0xcae,
          _0x248d04: 0x2121,
          _0x598238: 0xf4d,
          _0x2ea3b7: 0x1d66,
          _0x41707a: 0x186b,
          _0x229601: 0x2168,
          _0x35ca05: 0x186b,
          _0x24e09e: 0x2310,
          _0x2b5c60: 0x9d3
        };

        _0x30e298.r(_0x2f51d);

        var _0x4b07c8 = _0x30e298(0x16a21),
            _0x34866c = _0x30e298(0x16a7d),
            _0x53b6d9 = _0x30e298(0xd194),
            _0x1c8245 = _0x30e298(0xb9cc),
            _0x45c592 = _0x30e298(0x16e5f),
            _0x319385 = _0x30e298(0x5d14),
            _0x809846 = _0x30e298(0xa04a),
            _0x2a8ff9 = _0x30e298(0x161cd);

        const _0x1fff5a = {
          'enabled': false,
          'camera': {
            'entity': undefined,
            'from': new _0x2a8ff9.Vector3(717.7773, -240.7303, 66.23),
            'lookAt': new _0x2a8ff9.Vector3(626.0359, -280.4973, 61.94839),
            'fov': 0x37
          },
          'player': {
            'spawnPosition': new _0x2a8ff9.Vector3(720.3904, -250.0074, 66.26633),
            'freezePlayer': true
          },
          'weather': 'HALLOWEEN',
          'time': {
            'hour': 0x13,
            'minute': 0x1c,
            'second': 0x0
          },
          'browserReady': false,
          'playerReady': false,
          'worldReady': false,
          'music': undefined,
          'instructions': {
            'enabled': false,
            'entity': undefined
          },
          'pedData': {
            'position': new _0x2a8ff9.Vector3(708.86, -242.27, 65.86),
            'heading': 287.63,
            'anims': {
              'animDict': 'special_ped@zombie@base',
              'animName': 'base'
            }
          },
          'activePeds': [],
          'particles': {
            'handle': null,
            'position': new _0x2a8ff9.Vector3(714.24, -240.39, 67.26),
            'fxData': {
              'lib': 'core',
              'name': 'ent_amb_leaves_oak_g'
            }
          },
          'ufo': false,
          'canClick': false
        };
        _0x2a8ff9.events.add('browser.onVueLoaded', _0x2922c6 => {
          _0x2922c6 && (_0x1fff5a.browserReady = true);
        }), _0x2a8ff9.events.add('playerJoinEvent', async _0x26bb78 => {
          _0x1fff5a.playerReady = true;
        }), _0x2a8ff9.events.add('worldDataReady', () => {
          _0x1fff5a.worldReady = true;
        });

        const _0x208cd6 = () => new Promise(async (_0xa5fffa, _0x1328ea) => {
          (0xc != _0x2a8ff9.game.streaming.getPlayerSwitchState() && _0x2a8ff9.game.streaming.stopPlayerSwitch(), !_0x2a8ff9.cameras.exists(_0x1fff5a.camera.entity)) && (_0x1fff5a.camera.entity = _0x2a8ff9.cameras.new('intro_location', _0x1fff5a.camera.from, new _0x2a8ff9.Vector3(0x0, 0x0, 0x0), _0x1fff5a.camera.fov)).pointAtCoord(_0x1fff5a.camera.lookAt.x, _0x1fff5a.camera.lookAt.y, _0x1fff5a.camera.lookAt.z);

          if (_0x1fff5a.music || (_0x4b07c8.api.playAmbientMusic2('music/autumnAmbience', 0x23, true), _0x45c592.Z.play('intro.halloween', {
            'volume': 0x19,
            'startOffsetPercent': _0x319385.u.integer({
              'min': 0x0,
              'max': 0x32
            }),
            'fade': 0x7d0,
            'waitTime': 0x1,
            'looped': true,
            'force': true
          }), _0x1fff5a.music = true), !_0x1fff5a.particles.handle) {
            const _0x2d4589 = _0x1fff5a.particles.handle = new _0x53b6d9.ParticleFx(_0x1fff5a.particles.fxData.lib, _0x1fff5a.particles.fxData.name, {});

            await _0x2d4589.load(), _0x2d4589.playOnCoords(_0x1fff5a.particles.position.x, _0x1fff5a.particles.position.y, _0x1fff5a.particles.position.z, -0x1);
          }

          return _0x2a8ff9.game.streaming.isIplActive('MJ_HW_StartScreen') || _0x2a8ff9.game.streaming.requestIpl('MJ_HW_StartScreen'), _0x319385.u.bool({
            'likelihood': 0x1e
          }) ? (_0x1fff5a.ufo = true, _0x2a8ff9.game.streaming.isIplActive('MJ_HW_StartScreen_UFO') || _0x2a8ff9.game.streaming.requestIpl('MJ_HW_StartScreen_UFO')) : _0x2a8ff9.game.streaming.isIplActive('MJ_HW_StartScreen_UFO') && _0x2a8ff9.game.streaming.removeIpl('MJ_HW_StartScreen_UFO'), _0x809846.clockController.freezeTime = true, _0x809846.clockController.setTime(_0x1fff5a.time.hour, _0x1fff5a.time.minute, _0x1fff5a.time.second), _0x2a8ff9.game.gameplay.setRainFxIntensity(0x0), _0x2a8ff9.game.gameplay.setWeatherTypeNowPersist('HALLOWEEN'), _0xa5fffa();
        });

        _0x2a8ff9.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x2a8ff9.cameras.exists(_0x1fff5a.camera.entity) && (_0x2a8ff9.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x1fff5a.camera.entity.setActive(false), _0x1fff5a.camera.entity.destroy(), delete _0x1fff5a.camera.entity);
        });

        const _0x4dbeac = () => {
          _0x1fff5a.instructions.entity && _0x217571();

          const _0x140584 = _0x1fff5a.instructions.entity = new _0x1c8245.InstructionalButtons(-0x1);

          _0x140584.addButton('ibuttons.startGame', 0x12), _0x140584.toggleHud(false), _0x140584.isActive() || _0x140584.toggleHud(true), _0x1fff5a.instructions.enabled = true;
        },
              _0x217571 = () => {
          _0x1fff5a.instructions.enabled = false, _0x1fff5a.instructions.entity.toggleHud(false), _0x1fff5a.instructions.entity.removeButton('ibuttons.startGame'), _0x1fff5a.instructions.entity.resetBar(), _0x1fff5a.instructions.entity = undefined;
        },
              _0x5907af = () => {
          _0x1fff5a.instructions.enabled && _0x1fff5a.canClick && (_0x1fff5a.instructions.enabled && (_0x217571(), _0x1fff5a.instructions.enabled = false), _0x1fff5a.music && (_0x45c592.Z.stop(true), _0x4b07c8.api.stopAmbientMusic2(), delete _0x1fff5a.music), _0x1fff5a.particles.handle && _0x1fff5a.particles.handle.timeoutRemove(0x0), _0x1fff5a.ufo && _0x2a8ff9.game.streaming.isIplActive('MJ_HW_StartScreen_UFO') && _0x2a8ff9.game.streaming.removeIpl('MJ_HW_StartScreen_UFO'), _0x2a8ff9.game.streaming.isIplActive('MJ_HW_StartScreen') && _0x2a8ff9.game.streaming.removeIpl('MJ_HW_StartScreen'), _0x1fff5a.enabled = false, _0x1fff5a.canClick = false, _0x2a8ff9.game.gameplay.setWeatherTypeNowPersist('CLEAR'), _0x2a8ff9.game.gameplay.setRainFxIntensity(-0x1), _0x1fff5a.activePeds.forEach(_0x528663 => {
            _0x2a8ff9.peds.exists(_0x528663) && _0x528663.destroy();
          }), _0x2a8ff9.events.callRemote('1539188339'));
        };

        _0x2a8ff9.keys.bind(_0x34866c.t.ENTER, false, _0x5907af), _0x2a8ff9.events.add('click', (_0x3a6eba, _0x3265e0, _0x6065ba, _0x20eb9e, _0x405b55, _0x423140, _0xe60f24, _0xd890a0) => {
          'left' === _0x20eb9e && 'down' == _0x6065ba && _0x5907af();
        }), _0x1fff5a.checkerInterval = setInterval(() => {
          _0x1fff5a.playerReady && _0x1fff5a.browserReady && _0x1fff5a.worldReady && (_0x1fff5a.checkerInterval && (clearInterval(_0x1fff5a.checkerInterval), delete _0x1fff5a.checkerInterval), (async () => {
            _0x4b07c8.api.toggleChat(false), _0x2a8ff9.game.cam.doScreenFadeOut(0x0), _0x2a8ff9.players.local.freezePosition(_0x1fff5a.player.freezePlayer), _0x2a8ff9.players.local.position = _0x1fff5a.player.spawnPosition;

            let _0x1251f5 = Date.now();

            await _0x4b07c8.api.waitFor(() => _0x2a8ff9.players.local.hasCollisionLoadedAround() || Date.now() - _0x1251f5 > 0x3e8, 0x64), await _0x208cd6(), _0x2a8ff9.cameras.exists(_0x1fff5a.camera.entity) && (_0x1fff5a.camera.entity.setActive(true), _0x2a8ff9.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0)), _0x4dbeac(), _0x1fff5a.enabled = true, await _0x2a8ff9.game.sleep(0x3e8), await _0x4b07c8.api.fadeIn(0x3e8), _0x1fff5a.canClick = true;
          })());
        }, 0x1e), _0x2a8ff9.events.add('time.everySec', () => {
          _0x1fff5a.enabled && (_0x809846.clockController.setTime(_0x1fff5a.time.hour, _0x1fff5a.time.minute, _0x1fff5a.time.second), _0x2a8ff9.game.gameplay.setRainFxIntensity(0x0), _0x2a8ff9.game.gameplay.setWeatherTypeNowPersist('HALLOWEEN'));
        });
      },
      0xf533: (_0x506cd3, _0x449090, _0x3c7ee0) => {
        'use strict';

        const a0_0x4a4b4f = {
          _0x246c07: 0x1362,
          _0x41083f: 0x29d
        },
              a0_0x3e413f = {
          _0x3539da: 0x1c01,
          _0x1df341: 0x1d48,
          _0x451964: 0x9ed,
          _0x482904: 0xa9d,
          _0x1f3588: 0x248,
          _0x30735b: 0x1fe9,
          _0x577de2: 0xd79,
          _0x3654c8: 0x10e6,
          _0x3291df: 0x927,
          _0x22a519: 0x2606,
          _0x2aa820: 0xeae,
          _0x49e9fa: 0x17f,
          _0x2df366: 0xeae,
          _0x5b5f48: 0x1fe9
        },
              a0_0x1d2b75 = {
          _0x2c126f: 0x7bd
        },
              a0_0x5e59b3 = {
          _0x4d05ed: 0x1362
        };

        _0x3c7ee0.r(_0x449090);

        var _0x37884e = _0x3c7ee0(0x16a21),
            _0x728b68 = _0x3c7ee0(0x16a7d),
            _0x51b66c = _0x3c7ee0(0xb9cc),
            _0xcb4be3 = _0x3c7ee0(0x16e5f),
            _0xecb903 = _0x3c7ee0(0x5d14),
            _0x5a4d18 = _0x3c7ee0(0xa04a),
            _0x37c392 = _0x3c7ee0(0x161cd);

        const _0x167b38 = {
          'enabled': false,
          'camera': {
            'entity': undefined,
            'from': new _0x37c392.Vector3(-774.4788, 6020.196, 1.84),
            'lookAt': new _0x37c392.Vector3(-853.1398, 6036.068, 5.73858),
            'fov': 0x3a
          },
          'player': {
            'spawnPosition': new _0x37c392.Vector3(-770.4788, 6019.196, 0x2),
            'freezePlayer': true
          },
          'lochNess': {
            'entity': undefined,
            'hash': _0x37c392.game.joaat('h4_prop_h4_loch_monster'),
            'position': new _0x37c392.Vector3(-839.1969, 6111.717, 0.8843496),
            'rotation': new _0x37c392.Vector3(0x0, 0x0, 82.99884)
          },
          'weather': 'CLEAR',
          'time': {
            'hour': 0xb,
            'minute': 0x1e,
            'second': 0x0
          },
          'browserReady': false,
          'playerReady': false,
          'worldReady': false,
          'music': undefined,
          'instructions': {
            'enabled': false,
            'entity': undefined
          },
          'canClick': false
        };
        _0x37c392.events.add('browser.onVueLoaded', _0x4de1f7 => {
          _0x4de1f7 && (_0x167b38.browserReady = true);
        }), _0x37c392.events.add('playerJoinEvent', _0x355862 => {
          _0x167b38.playerReady = true;
        }), _0x37c392.events.add('worldDataReady', () => {
          _0x167b38.worldReady = true;
        });

        const _0x2dcfd7 = () => new Promise(async (_0x1c95f3, _0x20b141) => {
          return (0xc != _0x37c392.game.streaming.getPlayerSwitchState() && _0x37c392.game.streaming.stopPlayerSwitch(), !_0x37c392.cameras.exists(_0x167b38.camera.entity)) && (_0x167b38.camera.entity = _0x37c392.cameras.new('intro_location', _0x167b38.camera.from, new _0x37c392.Vector3(0x0, 0x0, 0x0), _0x167b38.camera.fov)).pointAtCoord(_0x167b38.camera.lookAt.x, _0x167b38.camera.lookAt.y, _0x167b38.camera.lookAt.z), (_0x167b38.music || (_0xcb4be3.Z.play('intro.island', {
            'volume': 0x23,
            'startOffsetPercent': _0xecb903.u.integer({
              'min': 0x0,
              'max': 0x5f
            }),
            'fade': 0x7d0,
            'waitTime': 0x1,
            'looped': true,
            'force': true
          }), _0x167b38.music = true), _0xecb903.u.bool({
            'likelihood': 0x1
          }) && (_0x167b38.lochNess.entity = _0x37c392.objects.new(_0x167b38.lochNess.hash, _0x167b38.lochNess.position, {
            'rotation': _0x167b38.lochNess.rotation,
            'dimension': -0x1
          })), _0x5a4d18.clockController.freezeTime = true, _0x5a4d18.clockController.setTime(_0x167b38.time.hour, _0x167b38.time.minute, _0x167b38.time.second), _0x37c392.game.gameplay.setWeatherTypeNowPersist('CLEAR'), _0x1c95f3());
        }),
              _0x24764f = () => {
          _0x167b38.instructions.entity && _0x551850();

          const _0xc55a74 = _0x167b38.instructions.entity = new _0x51b66c.InstructionalButtons(-0x1);

          _0xc55a74.addButton('ibuttons.startGame', 0x12), _0xc55a74.toggleHud(false), _0xc55a74.isActive() || _0xc55a74.toggleHud(true), _0x167b38.instructions.enabled = true;
        },
              _0x551850 = () => {
          _0x167b38.instructions.enabled = false, _0x167b38.instructions.entity.toggleHud(false), _0x167b38.instructions.entity.removeButton('ibuttons.startGame'), _0x167b38.instructions.entity.resetBar(), _0x167b38.instructions.entity = undefined;
        },
              _0x41219b = () => {
          _0x167b38.instructions.enabled && _0x167b38.canClick && (_0x167b38.instructions.enabled && (_0x551850(), _0x167b38.instructions.enabled = false), _0x37c392.cameras.exists(_0x167b38.camera.entity) && (_0x37c392.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x167b38.camera.entity.setActive(false), _0x167b38.camera.entity.destroy(), delete _0x167b38.camera.entity), _0x167b38.music && (_0xcb4be3.Z.stop(true), delete _0x167b38.music), _0x37c392.objects.exists(_0x167b38.lochNess.entity) && (_0x167b38.lochNess.entity.destroy(), delete _0x167b38.lochNess.entity), _0x167b38.enabled = false, _0x167b38.canClick = false, _0x37c392.events.callRemote('1539188339'));
        };

        _0x37c392.keys.bind(_0x728b68.t.ENTER, false, _0x41219b), _0x37c392.events.add('click', (_0x13e70a, _0x55d399, _0x2c3620, _0x2566fe, _0x11df49, _0x4c175e, _0x3145ec, _0x53115a) => {
          'left' === _0x2566fe && 'down' == _0x2c3620 && _0x41219b();
        }), _0x167b38.checkerInterval = setInterval(() => {
          const a0_0x5733be = {
            _0x381651: 0x535,
            _0x595ec4: 0x52c,
            _0x3a43a7: 0x235b,
            _0x2c4d0d: 0x185e,
            _0x1c1e75: 0x2292,
            _0x333631: 0x1f30,
            _0x1da34e: 0xffb,
            _0x174614: 0x535,
            _0x885c5f: 0x1fe9,
            _0x16c470: 0x1d66,
            _0x35675d: 0xd79,
            _0x2ec1f2: 0x1d48,
            _0x125fe1: 0x9ed
          };
          _0x167b38.playerReady && _0x167b38.browserReady && _0x167b38.worldReady && (_0x167b38.checkerInterval && (clearInterval(_0x167b38.checkerInterval), delete _0x167b38.checkerInterval), (async () => {
            _0x37884e.api.toggleChat(false), _0x37c392.game.cam.doScreenFadeOut(0x0), _0x37c392.players.local.freezePosition(_0x167b38.player.freezePlayer), _0x37c392.players.local.position = _0x167b38.player.spawnPosition;

            let _0x5b9c87 = Date.now();

            await _0x37884e.api.waitFor(() => _0x37c392.players.local.hasCollisionLoadedAround() || Date.now() - _0x5b9c87 > 0x3e8, 0x64), await _0x2dcfd7(), _0x37c392.cameras.exists(_0x167b38.camera.entity) && (_0x167b38.camera.entity.setActive(true), _0x37c392.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0)), _0x24764f(), _0x167b38.enabled = true, await _0x37c392.game.sleep(0x3e8), await _0x37884e.api.fadeIn(0x3e8), _0x167b38.canClick = true;
          })());
        }, 0x1e), _0x37c392.events.add('time.every10Sec', () => {
          _0x167b38.enabled && (_0x5a4d18.clockController.setTime(_0x167b38.time.hour, _0x167b38.time.minute, _0x167b38.time.second), _0x37c392.game.gameplay.setWeatherTypeNowPersist('CLEAR'));
        });
      },
      0xa1b0: (_0x58b3bb, _0x5169ae, _0x4e270f) => {
        'use strict';

        const a0_0x45268a = {
          _0x30842f: 0x52c,
          _0x2d95c9: 0x2072,
          _0x3ea95c: 0x1273,
          _0x170254: 0x185e,
          _0x5d82de: 0x235b,
          _0x27d550: 0x1f30,
          _0x1345a2: 0xc5a,
          _0x3919d0: 0xffb,
          _0x237a86: 0xa9d,
          _0x1d74a7: 0x16c5,
          _0x225625: 0x248,
          _0x323446: 0x1199,
          _0x3a0518: 0x1d66,
          _0x360e78: 0x535,
          _0x1c7eac: 0x880
        },
              a0_0x283fce = {
          _0x5eb3b8: 0x1c01,
          _0x42370b: 0x1d48,
          _0x521be1: 0x1c01,
          _0x419374: 0x1d48,
          _0x156429: 0x16c5,
          _0x5b8bb6: 0x248,
          _0x1dcafc: 0x1fe9,
          _0x96cdee: 0x1d66,
          _0x338004: 0x2072,
          _0x4a5ea1: 0x17f,
          _0x1aaf67: 0x9ed,
          _0x336a8d: 0x582
        },
              a0_0x393131 = {
          _0x3e9954: 0x16c5,
          _0x422f7f: 0x17f
        },
              a0_0x180fd1 = {
          _0x31191e: 0x1c01,
          _0x3721ed: 0x1c01,
          _0x3d9aaa: 0x13b0,
          _0x25634f: 0x1fe9,
          _0x2850a5: 0x790,
          _0x31452e: 0x874
        },
              a0_0x2bf255 = {
          _0x44e394: 0x15e0,
          _0x257e89: 0x1d66,
          _0x3834ff: 0x16c5,
          _0x47b13c: 0x1fe9,
          _0x1ca6f9: 0x248,
          _0x51b267: 0x1fe9,
          _0x161f24: 0xf82,
          _0x5c6494: 0x248,
          _0x3d3775: 0x19cf,
          _0x4ac4ab: 0x2521,
          _0x2d51bc: 0x248,
          _0x5a0ec4: 0xf5c,
          _0x5266f8: 0x248,
          _0x299639: 0x10e6,
          _0x377441: 0x2236,
          _0x46f5c9: 0x1fc8,
          _0x3af072: 0x10e6,
          _0x309167: 0x1383,
          _0x4670cb: 0x19ee,
          _0x39f52d: 0x2121,
          _0x25f872: 0xcae,
          _0x183fcd: 0xf4d,
          _0xafe67c: 0x9d3
        },
              a0_0x174974 = {
          _0x1707a1: 0x1869
        };

        _0x4e270f.r(_0x5169ae);

        var _0x5f5666 = _0x4e270f(0x16a21),
            _0x123ed4 = _0x4e270f(0x16a7d),
            _0x4ffa89 = _0x4e270f(0xb9cc),
            _0x2880e8 = _0x4e270f(0x16e5f),
            _0x46bd14 = _0x4e270f(0x5d14),
            _0xb65daf = _0x4e270f(0xa04a),
            _0x563c1f = _0x4e270f(0x161cd);

        const _0x26c264 = {
          'enabled': false,
          'camera': {
            'entity': undefined,
            'from': new _0x563c1f.Vector3(-1569.68, 208.71, 60.1),
            'lookAt': new _0x563c1f.Vector3(-1558.11, 207.17, 59.65),
            'fov': 0x3c
          },
          'player': {
            'spawnPosition': new _0x563c1f.Vector3(-1557.29, 192.95, 58.98),
            'freezePlayer': true
          },
          'weather': 'CLEAR',
          'time': {
            'hour': 0xc,
            'minute': 0x0,
            'second': 0x0
          },
          'browserReady': false,
          'playerReady': false,
          'worldReady': false,
          'music': undefined,
          'instructions': {
            'enabled': false,
            'entity': undefined
          },
          'activePeds': [],
          'canClick': false
        };
        _0x563c1f.events.add('browser.onVueLoaded', _0x5cf257 => {
          _0x5cf257 && (_0x26c264.browserReady = true);
        }), _0x563c1f.events.add('playerJoinEvent', async _0x5f400f => {
          _0x26c264.playerReady = true;
        }), _0x563c1f.events.add('worldDataReady', () => {
          _0x26c264.worldReady = true;
        });

        const _0x2ed803 = () => new Promise(async (_0xe20f36, _0x4a96a0) => {
          return (0xc != _0x563c1f.game.streaming.getPlayerSwitchState() && _0x563c1f.game.streaming.stopPlayerSwitch(), !_0x563c1f.cameras.exists(_0x26c264.camera.entity)) && (_0x26c264.camera.entity = _0x563c1f.cameras.new('intro_location', _0x26c264.camera.from, new _0x563c1f.Vector3(0x0, 0x0, 0x0), _0x26c264.camera.fov)).pointAtCoord(_0x26c264.camera.lookAt.x, _0x26c264.camera.lookAt.y, _0x26c264.camera.lookAt.z), (_0x26c264.music || (_0x2880e8.Z.play('library', {
            'volume': 0x23,
            'startOffsetPercent': _0x46bd14.u.integer({
              'min': 0x0,
              'max': 0x32
            }),
            'fade': 0x7d0,
            'waitTime': 0x1,
            'looped': true,
            'force': true
          }), _0x26c264.music = true), _0xb65daf.clockController.freezeTime = true, _0xb65daf.clockController.setTime(_0x26c264.time.hour, _0x26c264.time.minute, _0x26c264.time.second), _0x563c1f.game.gameplay.setWeatherTypeNowPersist('CLEAR'), _0xe20f36());
        }),
              _0xb56b9d = () => {
          _0x26c264.instructions.entity && _0x1d8a90();

          const _0x4b106b = _0x26c264.instructions.entity = new _0x4ffa89.InstructionalButtons(-0x1);

          _0x4b106b.addButton('ibuttons.startGame', 0x12), _0x4b106b.toggleHud(false), _0x4b106b.isActive() || _0x4b106b.toggleHud(true), _0x26c264.instructions.enabled = true;
        },
              _0x1d8a90 = () => {
          _0x26c264.instructions.enabled = false, _0x26c264.instructions.entity.toggleHud(false), _0x26c264.instructions.entity.removeButton('ibuttons.startGame'), _0x26c264.instructions.entity.resetBar(), _0x26c264.instructions.entity = undefined;
        },
              _0x2cae38 = () => {
          _0x26c264.instructions.enabled && _0x26c264.canClick && (_0x26c264.instructions.enabled && (_0x1d8a90(), _0x26c264.instructions.enabled = false), _0x563c1f.cameras.exists(_0x26c264.camera.entity) && (_0x563c1f.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x26c264.camera.entity.setActive(false), _0x26c264.camera.entity.destroy(), delete _0x26c264.camera.entity), _0x26c264.music && (_0x2880e8.Z.stop(true), delete _0x26c264.music), _0x26c264.enabled = false, _0x26c264.canClick = false, _0x26c264.activePeds.forEach(_0x5378ed => {
            _0x563c1f.peds.exists(_0x5378ed) && _0x5378ed.destroy();
          }), _0x563c1f.events.callRemote('1539188339'));
        };

        _0x563c1f.keys.bind(_0x123ed4.t.ENTER, false, _0x2cae38), _0x563c1f.events.add('click', (_0x535db5, _0x5fb7c3, _0x4ccb34, _0x2de686, _0x544cc4, _0x24d901, _0x4a91f4, _0x2e2f08) => {
          'left' === _0x2de686 && 'down' == _0x4ccb34 && _0x2cae38();
        }), _0x26c264.checkerInterval = setInterval(() => {
          _0x26c264.playerReady && _0x26c264.browserReady && _0x26c264.worldReady && (_0x26c264.checkerInterval && (clearInterval(_0x26c264.checkerInterval), delete _0x26c264.checkerInterval), (async () => {
            _0x5f5666.api.toggleChat(false), _0x563c1f.game.cam.doScreenFadeOut(0x0), _0x563c1f.players.local.freezePosition(_0x26c264.player.freezePlayer), _0x563c1f.players.local.position = _0x26c264.player.spawnPosition;

            let _0x186df8 = Date.now();

            await _0x5f5666.api.waitFor(() => _0x563c1f.players.local.hasCollisionLoadedAround() || Date.now() - _0x186df8 > 0x3e8, 0x64), await _0x2ed803(), _0x563c1f.cameras.exists(_0x26c264.camera.entity) && (_0x26c264.camera.entity.setActive(true), _0x563c1f.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0)), _0xb56b9d(), _0x26c264.enabled = true, await _0x563c1f.game.sleep(0x3e8), await _0x5f5666.api.fadeIn(0x3e8), _0x26c264.canClick = true;
          })());
        }, 0x1e), _0x563c1f.events.add('time.every10Sec', () => {
          _0x26c264.enabled && (_0xb65daf.clockController.setTime(_0x26c264.time.hour, _0x26c264.time.minute, _0x26c264.time.second), _0x563c1f.game.gameplay.setWeatherTypeNowPersist('CLEAR'));
        });
      },
      0x1532f: (_0x54cadb, _0x118334, _0x5ee85f) => {
        'use strict';

        const a0_0x1e39ad = {
          _0x5d3fc7: 0x1d48,
          _0x24cd2c: 0x19ee,
          _0x3719d5: 0x2121,
          _0x12f399: 0x1d66
        },
              a0_0x3b4647 = {
          _0x581221: 0x16c5,
          _0x4b6fbf: 0x248,
          _0x31812c: 0x1fe9,
          _0x448537: 0x2072,
          _0x36e907: 0xd79,
          _0x5b0799: 0x248,
          _0x3f25c2: 0x1199,
          _0x2e4d7d: 0x248
        },
              a0_0x2978ee = {
          _0xc2bc22: 0x1d48,
          _0x3563fb: 0x1e35,
          _0x36e20f: 0xf42,
          _0x2b66af: 0xf51,
          _0x11dbaf: 0x1d66,
          _0x2fbe36: 0x17d,
          _0x487ed5: 0x1e35,
          _0x57505d: 0x91b,
          _0x560bb3: 0x1d66,
          _0x3810f2: 0x1870,
          _0x3734df: 0x91b,
          _0x899cca: 0x1e88,
          _0x429260: 0x1fc8
        },
              a0_0x1e1a37 = {
          _0xadff7: 0x1b8a,
          _0x5d0b6a: 0x1870,
          _0x17732a: 0x1fc8,
          _0x1cf7fb: 0x70d,
          _0x4bf3ba: 0x1870,
          _0x59b97f: 0x1e88,
          _0x559351: 0x1d66,
          _0x1d887c: 0x91b
        },
              a0_0x1afb07 = {
          _0x491fbd: 0x18c2,
          _0x496f4b: 0x2297,
          _0x33d1d2: 0x157a,
          _0x414519: 0x1d66,
          _0x5abe90: 0x140a,
          _0x2167eb: 0x15e0,
          _0x2e1412: 0xa9d,
          _0x3cd5e1: 0x248,
          _0x5908a2: 0x248,
          _0xf2e97c: 0x1fe9,
          _0x112dc3: 0xf82,
          _0x608384: 0x1dad,
          _0x5c4d07: 0x248,
          _0xf3ca15: 0x248,
          _0x3cb365: 0x19cf,
          _0x162ac4: 0x2521,
          _0x4176af: 0xf5c,
          _0x5bffeb: 0x2236,
          _0x4d5bf8: 0x9dc,
          _0x278473: 0x2082,
          _0x548667: 0x535,
          _0x30ccc7: 0x23e3,
          _0x4a956f: 0x15ed,
          _0x109e98: 0x10e6,
          _0x229d6e: 0x1aa6,
          _0x5b19a2: 0x2530,
          _0x302f5d: 0x508,
          _0x423a21: 0xcf8,
          _0x5de5fc: 0x1f30,
          _0x21185d: 0x1aa6,
          _0x3109e7: 0x16c5,
          _0x33ab8b: 0x4b9,
          _0x1579c8: 0x5aa,
          _0x39c139: 0x1820,
          _0x440268: 0x8db,
          _0x2cf676: 0x4b9,
          _0xe633b1: 0x1a35,
          _0x551d5c: 0x19ee,
          _0x138e79: 0x2121,
          _0x1a938b: 0x198c,
          _0x1fe0f9: 0x2121,
          _0x53bc71: 0xf4d,
          _0xb31877: 0x1d66
        },
              a0_0x55b39 = {
          _0x5ec016: 0x1869
        };

        _0x5ee85f.r(_0x118334);

        var _0x408a08 = _0x5ee85f(0x16a21),
            _0x5574b8 = _0x5ee85f(0x16a7d),
            _0x282a49 = _0x5ee85f(0xd194),
            _0x6033ec = _0x5ee85f(0xb9cc),
            _0x24b20a = _0x5ee85f(0x16e5f),
            _0x5dfc9c = _0x5ee85f(0x5d14),
            _0x6b0e31 = _0x5ee85f(0xa04a),
            _0x58477d = _0x5ee85f(0x161cd);

        const _0x10f336 = {
          'enabled': false,
          'camera': {
            'entity': undefined,
            'from': new _0x58477d.Vector3(2451.548, 0x1353, 45.89108),
            'lookAt': new _0x58477d.Vector3(2450.875, 4965.614, 46.43823),
            'fov': 0x3c
          },
          'player': {
            'spawnPosition': new _0x58477d.Vector3(0x98b, 0x1355, 0x2d),
            'freezePlayer': true
          },
          'weather': 'SNOWLIGHT',
          'time': {
            'hour': 0x0,
            'minute': 0x0,
            'second': 0x0
          },
          'browserReady': false,
          'playerReady': false,
          'worldReady': false,
          'music': undefined,
          'instructions': {
            'enabled': false,
            'entity': undefined
          },
          'IPLS': ['farm', 'farm_int', 'farm_lod', 'farm_props'],
          'discoLights': {
            'enabled': false,
            'colorList': [[0x7b, 0x1d, 0xaf], [0xf, 0xc0, 0xfc], [0xd4, 0xff, 0x47], [0x1b, 0x36, 0x49], [0xff, 0x2f, 0xb9]],
            'positions': [new _0x58477d.Vector3(2439.29, 4964.18, 46.81), new _0x58477d.Vector3(2446.7, 4972.45, 46.81), new _0x58477d.Vector3(2454.05, 4972.15, 46.81), new _0x58477d.Vector3(2457.53, 4975.64, 46.81), new _0x58477d.Vector3(2435.5, 4960.63, 46.81), new _0x58477d.Vector3(2442.47, 4971.62, 51.56), new _0x58477d.Vector3(2453.31, 4977.66, 51.56)],
            'now': [0xff, 0xff, 0xff],
            'lastUsed': Date.now()
          },
          'particles': {
            'handle': null,
            'position': new _0x58477d.Vector3(2444.32, 4978.64, 55.69),
            'fxData': {
              'lib': 'core',
              'name': 'ent_amb_smoke_factory'
            }
          },
          'vehicle': {
            'vehicleModel': 'rancherxl2',
            'vehicleCoords': new _0x58477d.Vector3(2462.569, 4960.2919, 43.7618),
            'vehicleRot': 122.42,
            'vehicleHandle': undefined
          },
          'fireworksPos1': new _0x58477d.Vector3(0x9ec, 0x13d8, 0x32),
          'fireworksPos2': new _0x58477d.Vector3(0x9cb, 0x13ca, 0x30),
          'fireworksPos3': new _0x58477d.Vector3(0x9e9, 0x13ec, 0x2b),
          'canClick': false
        };
        _0x58477d.events.add('browser.onVueLoaded', _0xc9e003 => {
          _0xc9e003 && (_0x10f336.browserReady = true);
        }), _0x58477d.events.add('playerJoinEvent', async _0x25c30a => {
          _0x10f336.playerReady = true;
        }), _0x58477d.events.add('worldDataReady', () => {
          _0x10f336.worldReady = true;
        });

        const _0x586c5f = () => new Promise(async (_0x5447f7, _0x289146) => {
          0xc != _0x58477d.game.streaming.getPlayerSwitchState() && _0x58477d.game.streaming.stopPlayerSwitch();

          for (const _0x386755 of _0x10f336.IPLS) _0x58477d.game.streaming.isIplActive(_0x386755) || _0x58477d.game.streaming.requestIpl(_0x386755);

          !_0x58477d.cameras.exists(_0x10f336.camera.entity) && (_0x10f336.camera.entity = _0x58477d.cameras.new('intro_location', _0x10f336.camera.from, new _0x58477d.Vector3(0x0, 0x0, 0x0), _0x10f336.camera.fov)).pointAtCoord(_0x10f336.camera.lookAt.x, _0x10f336.camera.lookAt.y, _0x10f336.camera.lookAt.z);

          if (!_0x10f336.music) {
            const _0x431943 = _0x5dfc9c.u.bool({
              'likelihood': 0xa
            });

            _0x24b20a.Z.play(_0x431943 ? 'intro.xmas2' : 'intro.xmas1', {
              'volume': _0x431943 ? 0x32 : 0x1e,
              'fade': 0x7d0,
              'waitTime': 0x1,
              'looped': true,
              'force': true
            }), _0x431943 && (_0x10f336.discoLights.enabled = true), _0x408a08.api.playAmbientMusic2('xmas/Christmas_Ambience_Loop', 0xf, true), _0x10f336.music = true;
          }

          if (!_0x10f336.particles.handle) {
            const _0x3bda07 = _0x10f336.particles.handle = new _0x282a49.ParticleFx(_0x10f336.particles.fxData.lib, _0x10f336.particles.fxData.name, {});

            await _0x3bda07.load(), _0x3bda07.playOnCoords(_0x10f336.particles.position.x, _0x10f336.particles.position.y, _0x10f336.particles.position.z, -0x1);
          }

          return _0x58477d.vehicles.exists(_0x10f336.vehicle.vehicleHandle) || (_0x10f336.vehicle.vehicleHandle = _0x58477d.vehicles.new(_0x58477d.game.joaat(_0x10f336.vehicle.vehicleModel), _0x10f336.vehicle.vehicleCoords, {
            'color': 0x6f,
            'numberPlate': 'MAJESTIC',
            'engine': false,
            'locked': true,
            'dimension': -0x1,
            'heading': _0x10f336.vehicle.vehicleRot
          }), _0x10f336.vehicle.vehicleHandle.freezePosition(true), _0x10f336.vehicle.vehicleHandle.setOnGroundProperly()), _0x6b0e31.clockController.freezeTime = true, _0x6b0e31.clockController.setTime(_0x10f336.time.hour, _0x10f336.time.minute, _0x10f336.time.second), _0x58477d.game.gameplay.setWeatherTypeNowPersist('SNOWLIGHT'), _0x58477d.game.gameplay.setWindDirection(Math.PI / 0xb4 * 0x50), _0x2ad675(), _0x5447f7();
        }),
              _0x2ad675 = async () => {
          await _0x408a08.api.requestNamedPtfxAsset('scr_indep_fireworks'), _0x10f336.fireworksInterval1 = _0x58477d.game.sleep(_0x5dfc9c.u.integer({
            'min': 0xbb8,
            'max': 0x1388
          })).then(async () => {
            _0x1064e7(0x1);
          }), _0x10f336.fireworksInterval2 = _0x58477d.game.sleep(_0x5dfc9c.u.integer({
            'min': 0xbb8,
            'max': 0x1388
          })).then(async () => {
            _0x1064e7(0x2);
          }), _0x10f336.fireworksInterval3 = _0x58477d.game.sleep(_0x5dfc9c.u.integer({
            'min': 0xbb8,
            'max': 0x1388
          })).then(async () => {
            _0x1064e7(0x3);
          });
        },
              _0x1064e7 = async _0x53799c => {
          if (!_0x10f336.enabled) return;

          let _0x271970;

          switch (_0x58477d.game.graphics.setPtfxAssetNextCall('scr_indep_fireworks'), _0x53799c) {
            case 0x1:
              _0x271970 = _0x10f336.fireworksPos1;
              break;

            case 0x2:
              _0x271970 = _0x10f336.fireworksPos2;
              break;

            case 0x3:
              _0x271970 = _0x10f336.fireworksPos3;
          }

          const _0x21caa8 = _0x58477d.game.graphics.startParticleFxLoopedAtCoord('scr_indep_firework_starburst', _0x271970.x, _0x271970.y, _0x271970.z, 0x0, 0x0, 0x0, 1.25, false, false, false, false);

          if (_0x58477d.game.graphics.setParticleFxLoopedColour(_0x21caa8, 0x1 * Math.random(), 0x1 * Math.random(), 0x1 * Math.random(), false), await _0x58477d.game.sleep(0xdac), _0x21caa8 && _0x58477d.game.graphics.stopParticleFxLooped(_0x21caa8, true), _0x10f336.enabled) switch (_0x53799c) {
            case 0x1:
              _0x10f336.fireworksInterval1 = _0x58477d.game.sleep(_0x5dfc9c.u.integer({
                'min': 0x5dc,
                'max': 0x1388
              })).then(async () => {
                _0x1064e7(_0x53799c);
              });
              break;

            case 0x2:
              _0x10f336.fireworksInterval2 = _0x58477d.game.sleep(_0x5dfc9c.u.integer({
                'min': 0x5dc,
                'max': 0x1388
              })).then(async () => {
                _0x1064e7(_0x53799c);
              });
              break;

            case 0x3:
              _0x10f336.fireworksInterval3 = _0x58477d.game.sleep(_0x5dfc9c.u.integer({
                'min': 0x5dc,
                'max': 0x1388
              })).then(async () => {
                _0x1064e7(_0x53799c);
              });
          }
        };

        _0x58477d.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x58477d.cameras.exists(_0x10f336.camera.entity) && (_0x58477d.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x10f336.camera.entity.setActive(false), _0x10f336.camera.entity.destroy(), delete _0x10f336.camera.entity);
        }), _0x58477d.events.add('render', () => {
          const a0_0x1c08e7 = {
            _0x256cf4: 0x1e35,
            _0x14e951: 0x2082,
            _0x22591c: 0xffb,
            _0x36ee65: 0xffb
          };
          _0x10f336.enabled && (_0x58477d.game.controls.disableAllControlActions(0x1), _0x10f336.discoLights.enabled && (Date.now() - _0x10f336.discoLights.lastUsed > _0x5dfc9c.u.integer({
            'min': 0xc8,
            'max': 0x4b0
          }) && (_0x10f336.discoLights.now = _0x5dfc9c.u.pickone(_0x10f336.discoLights.colorList), _0x10f336.discoLights.lastUsed = Date.now()), _0x10f336.discoLights.positions.forEach(_0x1ad2e => {
            _0x58477d.game.graphics.drawLightWithRange(_0x1ad2e.x, _0x1ad2e.y, _0x1ad2e.z + 0x1, _0x10f336.discoLights.now[0x0], _0x10f336.discoLights.now[0x1], _0x10f336.discoLights.now[0x2], 0x7, 0.7);
          })));
        });

        const _0x2c64bf = () => {
          _0x10f336.instructions.entity && _0x334a11();

          const _0x644acc = _0x10f336.instructions.entity = new _0x6033ec.InstructionalButtons(-0x1);

          _0x644acc.addButton('ibuttons.startGame', 0x12), _0x644acc.toggleHud(false), _0x644acc.isActive() || _0x644acc.toggleHud(true), _0x10f336.instructions.enabled = true;
        },
              _0x334a11 = () => {
          _0x10f336.instructions.enabled = false, _0x10f336.instructions.entity.toggleHud(false), _0x10f336.instructions.entity.removeButton('ibuttons.startGame'), _0x10f336.instructions.entity.resetBar(), _0x10f336.instructions.entity = undefined;
        },
              _0x50939e = () => {
          _0x10f336.instructions.enabled && _0x10f336.canClick && (_0x10f336.instructions.enabled && (_0x334a11(), _0x10f336.instructions.enabled = false), _0x10f336.music && (_0x24b20a.Z.stop(true), _0x408a08.api.stopAmbientMusic2(), delete _0x10f336.music), _0x10f336.particles.handle && _0x10f336.particles.handle.timeoutRemove(0x0), _0x10f336.enabled = false, _0x10f336.canClick = false, _0x58477d.events.callRemote('1539188339'));
        };

        _0x58477d.keys.bind(_0x5574b8.t.ENTER, false, _0x50939e), _0x58477d.events.add('click', (_0x5c0372, _0x4b99c1, _0x51637e, _0x320a3d, _0x5d450c, _0x2badee, _0x4c2ca4, _0x8f34f2) => {
          'left' === _0x320a3d && 'down' == _0x51637e && _0x50939e();
        }), _0x10f336.checkerInterval = setInterval(() => {
          const a0_0x5ed694 = {
            _0x5bb94e: 0x535,
            _0x1520bf: 0x1d66,
            _0x204c5b: 0x2072,
            _0x135b14: 0x1273,
            _0x111105: 0x185e,
            _0x20ff27: 0x2292,
            _0x538e55: 0x628,
            _0x1b6eaa: 0x20cc,
            _0x129d4d: 0x185e,
            _0x10f2cf: 0x15e0,
            _0x1682eb: 0x23b1,
            _0x11b532: 0x628,
            _0x19e070: 0xc5a,
            _0x502d83: 0x628,
            _0x5816bd: 0xc5a,
            _0x5810c8: 0x628,
            _0x35ef85: 0xffb,
            _0x1c839d: 0x1d80,
            _0x4ad079: 0xa9d,
            _0xff9a80: 0x16c5,
            _0x461db6: 0x248,
            _0x20e7b2: 0x1fe9,
            _0x30d30a: 0x1199,
            _0x18ac27: 0x1d48,
            _0x51a595: 0x1870,
            _0xbfa478: 0x880,
            _0x4a8f57: 0x1d66,
            _0x14ad0c: 0x9ed
          };
          _0x10f336.playerReady && _0x10f336.browserReady && _0x10f336.worldReady && (_0x10f336.checkerInterval && (clearInterval(_0x10f336.checkerInterval), delete _0x10f336.checkerInterval), (async () => {
            _0x408a08.api.toggleChat(false), _0x58477d.game.cam.doScreenFadeOut(0x0), _0x58477d.players.local.freezePosition(_0x10f336.player.freezePlayer), _0x58477d.players.local.position = _0x10f336.player.spawnPosition, _0x58477d.game.streaming.setFocusArea(_0x10f336.player.spawnPosition.x, _0x10f336.player.spawnPosition.y, _0x10f336.player.spawnPosition.z, 0x0, 0x0, 0x0);

            let _0x4074d3 = Date.now();

            await _0x408a08.api.waitFor(() => _0x58477d.players.local.hasCollisionLoadedAround() || Date.now() - _0x4074d3 > 0x3e8, 0x64), await _0x586c5f(), _0x58477d.cameras.exists(_0x10f336.camera.entity) && (_0x10f336.camera.entity.setActive(true), _0x58477d.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0)), _0x2c64bf(), _0x10f336.enabled = true, await _0x58477d.game.sleep(0x3e8), await _0x408a08.api.fadeIn(0x3e8), _0x58477d.game.streaming.clearFocus(), _0x10f336.canClick = true;
          })());
        }, 0x1e), _0x58477d.events.add('time.everySec', () => {
          _0x10f336.enabled && (_0x6b0e31.clockController.setTime(_0x10f336.time.hour, _0x10f336.time.minute, _0x10f336.time.second), _0x58477d.game.gameplay.setWeatherTypeNowPersist('SNOWLIGHT'));
        });
      },
      0x11fb0: (_0xab0feb, _0x3e3816, _0x2f1189) => {
        'use strict';

        const a0_0x518441 = {
          _0x1a5184: 0x14d2,
          _0x4c8345: 0x1a5
        },
              a0_0x39f511 = {
          _0x239707: 0x18eb,
          _0x4a80bc: 0x15eb,
          _0x1f9d3d: 0x1d66,
          _0x5e4ec9: 0x1870,
          _0x4862c2: 0x1da5
        },
              a0_0x2120ef = {
          _0x41a1f9: 0x1d66,
          _0x1368b0: 0xf2f,
          _0x4f0c43: 0x1c85,
          _0x1d597c: 0x1eec,
          _0x4eabc6: 0x535
        };

        _0x2f1189.r(_0x3e3816);

        var _0x418161 = _0x2f1189(0x16a21),
            _0xdebf7 = _0x2f1189(0x16a7d),
            _0x2f7785 = _0x2f1189(0x12a76),
            _0x273148 = _0x2f1189(0x161cd);

        _0x273148.players.local;

        let _0x5313d4,
            _0x133346 = false;

        _0x273148.events.add('intro.welcome.start', async _0x2c3492 => {
          _0x418161.api.toggleChat(false), _0x418161.api.toggleRadar(false), _0x418161.api.toggleHud(false), _0x273148.events.call('pauseMenuToggle', false), _0x273148.game.audio.isAudioSceneActive('CHARACTER_CHANGE_IN_SKY_SCENE') || _0x273148.game.audio.startAudioScene('CHARACTER_CHANGE_IN_SKY_SCENE'), _0x418161.api.fadeOut(0x0), await _0x273148.game.sleep(0xbb8), _0x5313d4 = _0x2c3492, _0x2f7785.globalBrowser.toggle('youtubeVideo', {
            'value': true,
            'videoId': _0x2c3492
          }), _0x133346 = true, await _0x273148.game.sleep(0x3e8), _0x418161.api.fadeIn(0x3e8);
        }), _0x273148.events.add('intro.welcome.stop', () => {
          _0x273148.game.audio.isAudioSceneActive('CHARACTER_CHANGE_IN_SKY_SCENE') && _0x273148.game.audio.stopAudioScene('CHARACTER_CHANGE_IN_SKY_SCENE'), _0x418161.api.toggleRadar(true), _0x418161.api.toggleHud(true), _0x5313d4 = undefined;
        }), _0x273148.events.add('intro.welcome.forceStop', async () => {
          _0x133346 = false, _0x2f7785.globalBrowser.toggle('youtubeVideo', {
            'value': false
          }), _0x273148.events.call('intro.welcome.stop'), await _0x418161.api.moveSkyCamera('up'), await _0x273148.game.sleep(0x3e8), _0x273148.events.callRemote('2353307210');
        }), _0x273148.events.add('youtubeVideo.onEnd', _0x138895 => {
          _0x138895 && _0x138895 === _0x5313d4 && _0x273148.events.call('intro.welcome.forceStop');
        }), _0x273148.keys.bind(_0xdebf7.t.ESC, false, () => {
          _0x2f1189.g.interfaces && _0x2f1189.g.interfaces.youtubeVideo && _0x133346 && _0x273148.events.call('intro.welcome.forceStop');
        }), _0x273148.events.add('render', () => {
          _0x133346 && (_0x273148.game.controls.disableAllControlActions(0x0), _0x273148.game.controls.disableAllControlActions(0x2), _0x273148.game.controls.disableControlAction(0x0, 0xc7, true), _0x273148.game.controls.disableControlAction(0x0, 0xc8, true));
        });
      },
      0x15877: (_0x5e2ddc, _0x58659d, _0x324a40) => {
        'use strict';

        const a0_0x51e653 = {
          _0x2e33fa: 0xc95,
          _0x5b2067: 0x1edc,
          _0x153c06: 0x535,
          _0x30c837: 0x839
        },
              a0_0x253c16 = {
          _0x1695f5: 0x14d2,
          _0x26926f: 0x1a5,
          _0xe14812: 0xe6d
        };

        _0x324a40.r(_0x58659d);

        var _0x264c4a = _0x324a40(0x16a21),
            _0x3b759b = _0x324a40(0x3db3),
            _0x1d9d0b = _0x324a40(0x161cd);

        const _0x2d32f4 = _0x1d9d0b.players.local;

        let _0x498fbb,
            _0x907394 = [];

        _0x1d9d0b.events.add('job.bikerjob.setupPoints', _0x1f633e => {
          const a0_0x4fa239 = {
            _0x33940f: 0x22ba,
            _0xcc007e: 0xda6,
            _0x427e59: 0x6ba,
            _0x170abf: 0x1d4e
          };
          _0x1d9d0b.events.call('job.bikerjob.finishJob'), _0x1f633e && (_0x1f633e = JSON.parse(_0x1f633e)).forEach(_0x5f2a74 => {
            let _0xf37a58 = {};
            _0xf37a58 = _0x1d9d0b.colshapes.newSphere(_0x5f2a74.x, _0x5f2a74.y, _0x5f2a74.z, 0x1, 0x0), _0xf37a58.marker = _0x1d9d0b.markers.new(0x1, new _0x1d9d0b.Vector3(_0x5f2a74.x, _0x5f2a74.y, _0x5f2a74.z - 0x1), 0x1, {
              'color': [0x34, 0x98, 0xdb, 0x64]
            }), _0xf37a58.blip = _0x1d9d0b.blips.new(0x1, new _0x1d9d0b.Vector3(_0x5f2a74.x, _0x5f2a74.y, _0x5f2a74.z), {
              'scale': 0.8,
              'shortRange': false,
              'color': 0x5
            }), (0x0, _0x3b759b.markAsTranslatedBlip)(_0xf37a58.blip, 'blips.unloadZone'), _0x907394.push(_0xf37a58);
          });
        }), _0x1d9d0b.events.add('playerEnterColshape', _0x2ed9ce => {
          if (_0x264c4a.api.isAuthed() && !_0x2d32f4.vehicle && null == _0x2d32f4.getVariable('playerInTrunk') && _0x907394.includes(_0x2ed9ce)) {
            if (_0x2d32f4.activeItemId) return _0x264c4a.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x498fbb = _0x2ed9ce, _0x264c4a.api.displayHelpStringTrans('displayHelpString.layItem', false, true, 0x1388);
          }
        }), _0x1d9d0b.events.add('playerExitColshape', _0x5918e0 => {
          _0x264c4a.api.isAuthed() && _0x907394.includes(_0x5918e0) && (_0x498fbb = null, _0x1d9d0b.game.ui.clearHelp(true));
        }), _0x1d9d0b.events.add('keys.e', () => {
          _0x498fbb && null == _0x2d32f4.getVariable('playerInTrunk') && (_0x1d9d0b.game.ui.clearHelp(true), _0x907394 = _0x907394.filter(_0x56e419 => _0x56e419 !== _0x498fbb), _0x1d9d0b.blips.exists(_0x498fbb.blip) && _0x498fbb.blip.destroy(), _0x1d9d0b.markers.exists(_0x498fbb.marker) && _0x498fbb.marker.destroy(), _0x1d9d0b.colshapes.exists(_0x498fbb) && _0x498fbb.destroy(), _0x498fbb = null, _0x264c4a.api.stopAnim(), _0xbb7b14());
        }), _0x1d9d0b.events.add('job.bikerjob.finishJob', () => {
          const a0_0x1b65ec = {
            _0x5f123b: 0xa8e,
            _0x3adaff: 0x17f
          };
          _0x907394.forEach(_0x292d2b => {
            _0x292d2b.blip && _0x292d2b.blip.destroy(), _0x292d2b.marker && _0x292d2b.marker.destroy(), _0x292d2b && _0x292d2b.destroy();
          }), _0x498fbb = null, _0x907394 = [];
        });

        const _0xbb7b14 = async () => {
          if (!_0x1d9d0b.inventory.hasItem(_0x2d32f4, 0x129)) return _0x264c4a.api.longNotifyTrans('job.bikerjob.noDrugTab', 'error');

          _0x264c4a.api.usingSystemAnim(true);

          const _0x8e1122 = await _0x264c4a.api.taskPlayAnim('anim@mp_fireworks', 'place_firework_3_box', 0x0, false);

          await _0x1d9d0b.game.sleep(0x3e8 * _0x8e1122), 0x0 === _0x907394.length ? _0x1d9d0b.events.callRemote('3822292872') : _0x1d9d0b.events.callRemote('2366972628'), _0x264c4a.api.usingSystemAnim(false);
        };
      },
      0x73bf: (_0x3ab14c, _0x2e1a50, _0xf9e234) => {
        'use strict';

        const a0_0x2752ce = {
          _0x277cb0: 0x1da5,
          _0x683a31: 0x1f69,
          _0x4a1999: 0xb4a,
          _0x2a4891: 0x646,
          _0x39dcd0: 0x535
        },
              a0_0x145b1f = {
          _0x382968: 0x6ba,
          _0x23418f: 0x17f
        },
              a0_0x44b81c = {
          _0x28a1d9: 0x6ba,
          _0x5b01dc: 0x17f,
          _0x4fdf6f: 0x6ba,
          _0x536b46: 0x1d55,
          _0x2bf3ae: 0x1d4e,
          _0x40695f: 0x2096
        },
              a0_0x551822 = {
          _0x4b97d9: 0x1c66,
          _0x3e6399: 0x1a5,
          _0x3d1320: 0x662,
          _0x2babb2: 0x24fa,
          _0x44def2: 0xa8e,
          _0x419beb: 0x22ba,
          _0x19b142: 0x22ba,
          _0x313e66: 0x17f,
          _0x5a3ee7: 0x24fa,
          _0x457e89: 0x535,
          _0x25f562: 0x1d55,
          _0x378571: 0x18c1,
          _0x6f6575: 0x18c1,
          _0x3a1d28: 0x1f41,
          _0x20a13c: 0x1d7c,
          _0x1c3c42: 0x1870,
          _0x49a20d: 0xbc8,
          _0x3ac1b9: 0x1de9,
          _0x1494f8: 0x15c0,
          _0xefa9b2: 0x24ce,
          _0x4c2e64: 0x24fa,
          _0x4208ca: 0x1aab,
          _0x4c213d: 0x2405,
          _0x28fdd3: 0x22ba,
          _0x3c6a3b: 0xda6,
          _0x5ca9c8: 0x34c,
          _0x4e57ec: 0x34c,
          _0x4820c8: 0x6ba,
          _0x386df7: 0x1d4e,
          _0x242c40: 0x18c1,
          _0x215e66: 0x662
        },
              a0_0x459c6a = {
          _0x3a4bb7: 0x1c66,
          _0x354c85: 0x662,
          _0x57e6d2: 0xa8e,
          _0x432aa1: 0x17f,
          _0x5f47b9: 0x24fa,
          _0x24272c: 0x24fa,
          _0x47591: 0x17f,
          _0x208ab8: 0x535,
          _0x36b800: 0x1d55,
          _0x5c841b: 0x18c1,
          _0x169b38: 0x1f41,
          _0x40df99: 0x1de9,
          _0x4c24c1: 0x1d7c,
          _0x38cde7: 0x12e4,
          _0x1e093f: 0x1a5,
          _0x10e50d: 0x24c2
        },
              a0_0x460be8 = {
          _0x78883c: 0x535,
          _0x1f629e: 0x253d,
          _0x4aad0e: 0x185e,
          _0x48bd94: 0xc95,
          _0x3d324b: 0x25e1,
          _0x383247: 0x535,
          _0x3b8f95: 0x31d,
          _0x11258d: 0x25e1,
          _0x5e55cf: 0xf86,
          _0x5143f2: 0x24fa,
          _0x151f23: 0x235b,
          _0x340243: 0x4c0
        };

        _0xf9e234.r(_0x2e1a50);

        var _0x11af0a = _0xf9e234(0x16a21),
            _0xed7cd8 = _0xf9e234(0x3db3),
            _0x53ae21 = _0xf9e234(0x161cd);

        const _0x4a5e23 = _0x53ae21.players.local;

        let _0x2a12ba,
            _0x4e0b4d,
            _0x3d52b0 = false,
            _0x2a215d = {
          'up': {},
          'down': {},
          'up2': {},
          'down2': {}
        },
            _0x486929 = {
          'data2': null
        },
            _0x52c73a = [-179.87, -1017.28, 0x72],
            _0x188bd0 = [-179.87, -1017.28, 0x1e],
            _0xa974af = [-158.4, -939.82, 0x10d],
            _0x59960e = [-158.4, -939.82, 0x1e];

        _0x2a215d.up.shape = _0x53ae21.colshapes.newSphere(_0x52c73a[0x0], _0x52c73a[0x1], _0x52c73a[0x2], 0x1, -0x1), _0x2a215d.up.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0x52c73a[0x0], _0x52c73a[0x1], _0x52c73a[0x2] - 0x1), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff],
          'dimension': -0x1
        }), _0x2a215d.up.shape.elevator = 'down', _0x2a215d.down.shape = _0x53ae21.colshapes.newSphere(_0x188bd0[0x0], _0x188bd0[0x1], _0x188bd0[0x2], 0x1, -0x1), _0x2a215d.down.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0x188bd0[0x0], _0x188bd0[0x1], _0x188bd0[0x2] - 0x1), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff],
          'dimension': -0x1
        }), _0x2a215d.down.shape.elevator = 'up', _0x2a215d.up2.shape = _0x53ae21.colshapes.newSphere(_0xa974af[0x0], _0xa974af[0x1], _0xa974af[0x2], 0x1, -0x1), _0x2a215d.up2.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0xa974af[0x0], _0xa974af[0x1], _0xa974af[0x2] - 0x1), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff],
          'dimension': -0x1
        }), _0x2a215d.up2.shape.elevator = 'down2', _0x2a215d.down2.shape = _0x53ae21.colshapes.newSphere(_0x59960e[0x0], _0x59960e[0x1], _0x59960e[0x2], 0x1, -0x1), _0x2a215d.down2.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0x59960e[0x0], _0x59960e[0x1], _0x59960e[0x2] - 0x1), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff],
          'dimension': -0x1
        }), _0x2a215d.down2.shape.elevator = 'up2', _0x53ae21.events.add('playerEnterColshape', _0xe5fe03 => {
          if (_0x11af0a.api.isAuthed() && !_0x53ae21.players.local.vehicle && null == _0x4a5e23.getVariable('playerInTrunk') && (_0x2a215d.down.shape != _0xe5fe03 && _0x2a215d.down2.shape != _0xe5fe03 || (_0x4e0b4d = _0xe5fe03, _0x11af0a.api.displayHelpStringTrans('displayHelpString.elevatorUp', false, true, 0x1388)), _0x2a215d.up.shape != _0xe5fe03 && _0x2a215d.up2.shape != _0xe5fe03 || (_0x4e0b4d = _0xe5fe03, _0x11af0a.api.displayHelpStringTrans('displayHelpString.elevatorDown', false, true, 0x1388)), _0x486929 && _0x486929.point == _0xe5fe03)) {
            if (_0x53ae21.players.local.activeItemId) return _0x11af0a.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x4e0b4d = _0xe5fe03, _0x11af0a.api.displayHelpStringTrans('displayHelpString.getToJob', false, true, 0x1388);
          }
        }), _0x53ae21.events.add('playerExitColshape', _0x536512 => {
          _0x11af0a.api.isAuthed() && (_0x2a215d.down.shape != _0x536512 && _0x2a215d.down2.shape != _0x536512 || (_0x4e0b4d = null, _0x53ae21.game.ui.clearHelp(true)), _0x2a215d.up.shape != _0x536512 && _0x2a215d.up2.shape != _0x536512 || (_0x4e0b4d = null, _0x53ae21.game.ui.clearHelp(true)), null == _0x536512 && (_0x4e0b4d = null, _0x53ae21.game.ui.clearHelp(true)), _0x486929 && _0x486929.point == _0x536512 && (_0x4e0b4d = null, _0x53ae21.game.ui.clearHelp(true)));
        }), _0x53ae21.events.add('job.builder.finishBuilderJob', () => {
          _0x3d52b0 = false, _0x486929 && _0x486929.point && _0x53ae21.blips.exists(_0x486929.point.blip) && _0x486929.point.blip.destroy(), _0x486929 && _0x486929.point && _0x53ae21.markers.exists(_0x486929.point.marker) && _0x486929.point.marker.destroy(), _0x486929 && _0x53ae21.colshapes.exists(_0x486929.point) && _0x486929.point.destroy(), _0x53ae21.attachments.removeLocal('cement_bag'), _0x486929 = {}, _0x11af0a.api.stopAnim(), _0x53ae21.events.call('job.builder.clearElevatorBlips'), _0x53ae21.events.call('utils.disablePlayerMove', false), _0x11af0a.api.usingSystemAnim(false);
        }), _0x53ae21.events.add('job.builder.workPoint', _0x1c6dbb => {
          _0x1c6dbb = JSON.parse(_0x1c6dbb), _0x486929 = {}, _0x486929.point = _0x53ae21.colshapes.newSphere(_0x1c6dbb[0x1], _0x1c6dbb[0x2], _0x1c6dbb[0x3], 0x1, -0x1), _0x486929.point.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0x1c6dbb[0x1], _0x1c6dbb[0x2], _0x1c6dbb[0x3] - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          }), _0x486929.point.blip = _0x53ae21.blips.new(0x1, new _0x53ae21.Vector3(_0x1c6dbb[0x1], _0x1c6dbb[0x2], _0x1c6dbb[0x3]), {
            'name': 'Место работы',
            'color': 0x2,
            'shortRange': false
          }), (0x0, _0xed7cd8.markAsTranslatedBlip)(_0x486929.point.blip, 'blips.jobPoint'), _0x486929.data = _0x1c6dbb;
        }), _0x53ae21.events.add('job.builder.cementMixing', (_0x46659f, _0x22ab59) => {
          _0x46659f = JSON.parse(_0x46659f), _0x22ab59 = JSON.parse(_0x22ab59), _0x486929.point = _0x53ae21.colshapes.newSphere(_0x46659f[0x1], _0x46659f[0x2], _0x46659f[0x3], 0x1, -0x1), _0x486929.point.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0x46659f[0x1], _0x46659f[0x2], _0x46659f[0x3] - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          }), _0x486929.point.blip = _0x53ae21.blips.new(0x1, new _0x53ae21.Vector3(_0x46659f[0x1], _0x46659f[0x2], _0x46659f[0x3]), {
            'name': 'Место работы',
            'color': 0x2,
            'shortRange': false
          }), (0x0, _0xed7cd8.markAsTranslatedBlip)(_0x486929.point.blip, 'blips.jobPoint'), 'inElevator' === _0x46659f[0x8] && _0x46659f[0x9] && _0x11af0a.api.notifyTrans('job.builder.bagOnFloor', {
            'amount': _0x46659f[0x9]
          }), _0x486929.data = _0x46659f, _0x486929.data2 = _0x22ab59;
        }), _0x53ae21.events.add('keys.e', () => {
          if (_0x4e0b4d && (_0x2a215d.up.shape == _0x4e0b4d || _0x2a215d.up2.shape == _0x4e0b4d)) return _0x53ae21.game.ui.clearHelp(true), _0x53ae21.events.callRemote('3720928227', _0x4e0b4d.elevator), void (_0x4e0b4d = false);
          if (_0x4e0b4d && (_0x2a215d.down.shape == _0x4e0b4d || _0x2a215d.down2.shape == _0x4e0b4d)) return _0x53ae21.game.ui.clearHelp(true), _0x53ae21.events.callRemote('3720928227', _0x4e0b4d.elevator), void (_0x4e0b4d = false);
          if (_0x486929 && _0x4e0b4d && _0x486929.point == _0x4e0b4d) switch (_0x53ae21.game.ui.clearHelp(true), _0x4e0b4d = false, _0x486929.data[0x0]) {
            case 'cementPickup':
              _0xc1dc72();

              break;

            case 'cementMixing':
              _0x53ae21.attachments.removeLocal('cement_bag'), _0x11af0a.api.stopAnim(), _0x3d52b0 = false, _0x2fbe94();
              break;

            case 'cementCarry':
              _0x486929.data[0x8] && 'inElevator' != _0x486929.data[0x8] ? _0x2fbe94() : _0x2cece8();
              break;

            default:
              _0x2fbe94();

          } else ;
        });

        const _0x2fbe94 = async () => {
          if (_0x486929) {
            if (_0x11af0a.api.usingSystemAnim(true), _0x53ae21.events.call('utils.disablePlayerMove', true), _0x486929 && _0x486929.point && _0x486929.point.blip && _0x486929.point.blip.destroy(), _0x486929 && _0x486929.point && _0x486929.point.marker && _0x486929.point.marker.destroy(), _0x486929 && _0x486929.point && _0x486929.point.destroy(), _0x11af0a.api.setPlayerPos(_0x4a5e23, new _0x53ae21.Vector3(_0x486929.data[0x1], _0x486929.data[0x2], _0x486929.data[0x3])), _0x4a5e23.setHeading(_0x486929.data[0x4]), _0x486929.data[0x8]) {
              const _0x4147e4 = await _0x11af0a.api.taskPlayAnim('anim@heists@load_box', 'lift_box', 0x0, false, false);

              _0x53ae21.attachments.removeLocal(_0x486929.data[0x7]), await _0x53ae21.game.sleep(0x3e8 * _0x4147e4), _0x27e98f();
            } else await _0x11af0a.api.taskPlayAnim(_0x486929.data[0x5], _0x486929.data[0x6], 0x1, true, false), _0x486929.data[0x7] && _0x53ae21.attachments.addLocal(_0x486929.data[0x7]), _0x53ae21.events.call('buttonPress.init', 'builder');
          }
        },
              _0xc1dc72 = async () => {
          if (!_0x486929) return;
          _0x11af0a.api.usingSystemAnim(true), _0x53ae21.events.call('utils.disablePlayerMove', true), _0x486929.point.blip && _0x486929.point.blip.destroy(), _0x486929.point.marker && _0x486929.point.marker.destroy(), _0x486929.point && _0x486929.point.destroy(), _0x11af0a.api.setPlayerPos(_0x4a5e23, new _0x53ae21.Vector3(_0x486929.data[0x1], _0x486929.data[0x2], _0x486929.data[0x3])), _0x4a5e23.setHeading(_0x486929.data[0x4]);

          let _0x285ac3 = await _0x11af0a.api.taskPlayAnim(_0x486929.data[0x5], _0x486929.data[0x6], 0x0, true, false);

          await _0x53ae21.game.sleep(0x1f4 * _0x285ac3), _0x486929.data[0x7] && _0x53ae21.attachments.addLocal(_0x486929.data[0x7]), await _0x53ae21.game.sleep(0x258 * _0x285ac3), _0x4a5e23.clearTasksImmediately(), await _0x11af0a.api.taskPlayAnim('anim@heists@box_carry@', 'idle', 0x31, true, false, false), _0x486929.point = _0x53ae21.colshapes.newSphere(_0x486929.data2[0x1], _0x486929.data2[0x2], _0x486929.data2[0x3], 0x1, -0x1), _0x486929.point.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0x486929.data2[0x1], _0x486929.data2[0x2], _0x486929.data2[0x3] - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          }), _0x486929.point.blip = _0x53ae21.blips.new(0x1, new _0x53ae21.Vector3(_0x486929.data2[0x1], _0x486929.data2[0x2], _0x486929.data2[0x3]), {
            'name': 'Точка разгрузки',
            'color': 0x2,
            'shortRange': false
          }), (0x0, _0xed7cd8.markAsTranslatedBlip)(_0x486929.point.blip, 'blips.unloadZone'), 'inElevator' === _0x486929.data2[0x8] && _0x486929.data2[0x9] && _0x11af0a.api.notifyTrans('job.builder.bagOnFloor', {
            'amount': _0x486929.data2[0x9]
          }), _0x486929.data = _0x486929.data2, _0x53ae21.events.call('utils.disablePlayerMove', false), _0x3d52b0 = true;
        },
              _0x2cece8 = async () => {
          if (!_0x486929) return;
          _0x11af0a.api.usingSystemAnim(true), _0x53ae21.events.call('utils.disablePlayerMove', true), _0x486929 && _0x486929.point && _0x486929.point.blip && _0x486929.point.blip.destroy(), _0x486929 && _0x486929.point && _0x486929.point.marker && _0x486929.point.marker.destroy(), _0x486929 && _0x486929.point && _0x486929.point.destroy(), _0x11af0a.api.setPlayerPos(_0x4a5e23, new _0x53ae21.Vector3(_0x486929.data[0x1], _0x486929.data[0x2], _0x486929.data[0x3])), _0x4a5e23.setHeading(_0x486929.data[0x4]);

          let _0x2e4a65 = await _0x11af0a.api.taskPlayAnim(_0x486929.data[0x5], _0x486929.data[0x6], 0x0, true, false);

          await _0x53ae21.game.sleep(0x1f4 * _0x2e4a65), _0x486929 && _0x486929.data[0x7] && _0x53ae21.attachments.addLocal(_0x486929.data[0x7]), await _0x53ae21.game.sleep(0x258 * _0x2e4a65), _0x4a5e23.clearTasksImmediately(), await _0x11af0a.api.taskPlayAnim('anim@heists@box_carry@', 'idle', 0x31, true, false, false), _0x486929.point = _0x53ae21.colshapes.newSphere(_0x486929.data2[0x1], _0x486929.data2[0x2], _0x486929.data2[0x3], 0x1, -0x1), _0x486929.point.marker = _0x53ae21.markers.new(0x1, new _0x53ae21.Vector3(_0x486929.data2[0x1], _0x486929.data2[0x2], _0x486929.data2[0x3] - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          }), _0x486929.point.blip = _0x53ae21.blips.new(0x1, new _0x53ae21.Vector3(_0x486929.data2[0x1], _0x486929.data2[0x2], _0x486929.data2[0x3]), {
            'name': 'Точка разгрузки',
            'color': 0x2,
            'shortRange': false
          }), (0x0, _0xed7cd8.markAsTranslatedBlip)(_0x486929.point.blip, 'blips.unloadZone'), _0x486929.data = _0x486929.data2, _0x486929.data[0x8] = true, _0x486929.data2 = null, _0x53ae21.events.call('utils.disablePlayerMove', false), _0x3d52b0 = true;
        };

        _0x53ae21.events.add('buttonPress.builder.stop', () => {
          _0x27e98f();
        }), _0x53ae21.events.add('job.builder.initElevatorBlip', (_0x21cdfa, _0x590173, _0x3f314c) => {
          _0x53ae21.blips.exists(_0x2a12ba) && (_0x2a12ba = _0x2a12ba.destroy()), _0x2a12ba = _0x53ae21.blips.new(0x24, new _0x53ae21.Vector3(_0x21cdfa, _0x590173, _0x3f314c), {
            'name': 'Лифт',
            'shortRange': false,
            'color': 0x5
          }), (0x0, _0xed7cd8.markAsTranslatedBlip)(_0x2a12ba, 'blips.elevator');
        }), _0x53ae21.events.add('job.builder.clearElevatorBlips', () => {
          _0x53ae21.blips.exists(_0x2a12ba) && (_0x2a12ba = _0x2a12ba.destroy());
        });

        const _0x27e98f = () => {
          _0x486929 && (_0x486929.data[0x7] && _0x53ae21.attachments.removeLocal(_0x486929.data[0x7]), _0x11af0a.api.stopAnim(), _0x53ae21.events.callRemote('3587690028'), _0x53ae21.attachments.removeLocal('cement_bag'), _0x486929 = {}, _0x3d52b0 = false, _0x11af0a.api.usingSystemAnim(false), _0x53ae21.events.call('utils.disablePlayerMove', false));
        };

        _0x53ae21.events.add('render2', () => {
          _0x3d52b0 && _0x53ae21.game.controls.disableControlAction(0x0, 0x16, true);
        }), _0x53ae21.events.add('time.everySec', () => {
          if (_0x3d52b0) {
            if (_0x4a5e23.isFalling()) {
              if (_0x3d52b0 = false, _0x11af0a.api.notifyTrans('job.builder.youDroppedBag'), !_0x486929) return;
              _0x486929 && _0x486929.point && _0x486929.point.blip && _0x486929.point.blip.destroy(), _0x486929 && _0x486929.point && _0x486929.point.marker && _0x486929.point.marker.destroy(), _0x486929 && _0x486929.point && _0x486929.point.destroy(), _0x53ae21.attachments.removeLocal('cement_bag'), _0x11af0a.api.stopAnim(), _0x486929 = {}, _0x11af0a.api.usingSystemAnim(false), _0x53ae21.events.call('utils.disablePlayerMove', false), _0x53ae21.events.callRemote('3532253257');
            }

            _0x4a5e23.vehicle && (_0x3d52b0 = false, _0x53ae21.events.callRemote('2801539379'), _0x11af0a.api.longNotifyTrans('job.builder.cantWorkInVehicle', 'error')), _0x3d52b0 && !_0x53ae21.players.local.isPlayingAnim('anim@heists@box_carry@', 'idle', 0x3) && _0x11af0a.api.taskPlayAnim('anim@heists@box_carry@', 'idle', 0x30, true);
          }
        });
      },
      0xebb6: (_0x4ac18a, _0xa94320, _0x141a21) => {
        'use strict';

        const a0_0x42c158 = {
          _0x389a6a: 0x51e,
          _0x59d718: 0x4af,
          _0x5d52eb: 0x4b9,
          _0xfa6f24: 0x1864,
          _0x137a92: 0x1a07,
          _0x1df8c3: 0x2292,
          _0x3bfadd: 0x1a5,
          _0x1d6c41: 0x92f,
          _0x2bab6b: 0x14d2,
          _0x238bcd: 0x662,
          _0x128df5: 0x1870,
          _0xc8ab56: 0x2292,
          _0x3e93a3: 0x14d2,
          _0x111382: 0x1a5
        },
              a0_0xd9ba24 = {
          _0x1395a6: 0x1128,
          _0x3582db: 0x17f
        },
              a0_0x12e660 = {
          _0x5e8246: 0x1d90,
          _0x1e3856: 0xe6d
        },
              a0_0x471617 = {
          _0x2bbef3: 0x1d90,
          _0x4bf6a0: 0x19d2
        };

        _0x141a21.r(_0xa94320);

        var _0x4e9f3a = _0x141a21(0x16a21),
            _0x5722c1 = _0x141a21(0x3db3),
            _0x587ac3 = _0x141a21(0x161cd);

        const _0x57b8e2 = _0x587ac3.players.local,
              _0x58a5e2 = [_0x587ac3.game.joaat('bus'), _0x587ac3.game.joaat('coach')];

        let _0x22d358,
            _0x3cbabd,
            _0x18552c,
            _0x4deae4 = [],
            _0x310e00 = [],
            _0x2cc899 = [],
            _0x2ffff3 = 0x0,
            _0x4b6f5b = false;

        _0x587ac3.events.add('job.busdriver.initLoadPoints', _0x677b18 => {
          const a0_0x27f2d4 = {
            _0x3e38fd: 0x2405,
            _0x44356b: 0x1128,
            _0x34dac4: 0xf82,
            _0x5d1f60: 0x1d2
          };
          _0x677b18 && (_0x677b18 = JSON.parse(_0x677b18), _0x3cbabd = 'idle', _0x677b18.forEach(_0x4a14b3 => {
            const _0x258f3a = {};
            _0x258f3a.shape = _0x587ac3.colshapes.newSphere(parseFloat(_0x4a14b3.x), parseFloat(_0x4a14b3.y), parseFloat(_0x4a14b3.z), 0xf, 0x0), _0x258f3a.checkpoint = _0x587ac3.checkpoints.new(0x1, new _0x587ac3.Vector3(parseFloat(_0x4a14b3.x), parseFloat(_0x4a14b3.y), parseFloat(_0x4a14b3.z) - 0x1), 0xf, {
              'direction': new _0x587ac3.Vector3(parseFloat(_0x4a14b3.x), parseFloat(_0x4a14b3.y), parseFloat(_0x4a14b3.z)),
              'color': [0x34, 0x98, 0xdb, 0x64],
              'visible': true,
              'dimension': 0x0
            }), _0x4deae4.push(_0x258f3a);
          }));
        }), _0x587ac3.events.add('job.busdriver.clearLoadPoints', () => {
          const a0_0x463806 = {
            _0x52a2a4: 0x1aab,
            _0x265eef: 0x25e1,
            _0x516569: 0x18b1,
            _0x272b53: 0x17f
          };
          Array.isArray(_0x4deae4) && _0x4deae4.length > 0x0 && (_0x4deae4.forEach(_0x151884 => {
            _0x587ac3.colshapes.exists(_0x151884.shape) && _0x151884.shape.destroy(), _0x587ac3.checkpoints.exists(_0x151884.checkpoint) && _0x151884.checkpoint.destroy();
          }), _0x4deae4 = []);
        }), _0x587ac3.events.add('job.busdriver.initLoadBlips', _0x20997a => {
          const a0_0x57f524 = {
            _0x323171: 0x6ba,
            _0xb57134: 0x1d4e,
            _0x52bcd1: 0x1d2
          },
                a0_0x4aa5a9 = {
            _0x4ef434: 0x16c5,
            _0x4cfb88: 0x17f
          };
          Array.isArray(_0x310e00) && _0x310e00.length > 0x0 && (_0x310e00.forEach(_0x3a4284 => {
            _0x587ac3.blips.exists(_0x3a4284) && _0x3a4284.destroy();
          }), _0x310e00 = []), (_0x20997a = JSON.parse(_0x20997a)).forEach(_0x5eb71e => {
            const _0x4fa143 = _0x587ac3.blips.new(0x201, new _0x587ac3.Vector3(parseFloat(_0x5eb71e.x), parseFloat(_0x5eb71e.y), parseFloat(_0x5eb71e.z)), {
              'color': 0x26,
              'shortRange': false
            });

            (0x0, _0x5722c1.markAsTranslatedBlip)(_0x4fa143, 'blips.jobStart'), _0x310e00.push(_0x4fa143);
          });
        }), _0x587ac3.events.add('job.busdriver.clearLoadBlips', () => {
          const a0_0x4ae5ef = {
            _0x15b8f2: 0x6ba,
            _0x16fa2d: 0x17f
          };
          Array.isArray(_0x310e00) && _0x310e00.length > 0x0 && (_0x310e00.forEach(_0x2b3f4e => {
            _0x587ac3.blips.exists(_0x2b3f4e) && _0x2b3f4e.destroy();
          }), _0x310e00 = []);
        }), _0x587ac3.events.add('playerEnterColshape', _0x4cb3dc => {
          _0x4e9f3a.api.isAuthed() && _0x57b8e2.vehicle && _0x4e9f3a.api.getEntitySync(_0x57b8e2.vehicle, 'driver') == _0x57b8e2.remoteId && _0x19e025(_0x57b8e2.vehicle) && _0x4deae4 && _0x4deae4.length > 0x0 && _0x4deae4.map(_0x2424f6 => _0x2424f6.shape).includes(_0x4cb3dc) && 'idle' === _0x3cbabd && (_0x22d358 = _0x4cb3dc, _0x4e9f3a.api.displayHelpStringTrans('displayHelpString.toStartJob', false, true, 0x2710));
        }), _0x587ac3.events.add('playerExitColshape', _0x36982a => {
          _0x4e9f3a.api.isAuthed() && _0x22d358 && _0x22d358 === _0x36982a && (_0x587ac3.game.ui.clearHelp(true), _0x22d358 = undefined);
        }), _0x587ac3.events.add('keys.e', () => {
          if (0x1 !== _0x57b8e2.getVariable('job')) return;
          if (!_0x57b8e2.vehicle) return;
          if (!_0x57b8e2.vehicle.getPedInSeat(_0x4e9f3a.api.getVehSeat(-0x1)) == _0x57b8e2.handle) return;
          if (!_0x4deae4) return;

          const _0xc9acba = _0x4deae4.map(_0x204aa => _0x204aa.shape);

          _0x22d358 && _0xc9acba.includes(_0x22d358) && _0x19e025(_0x57b8e2.vehicle) && (_0x587ac3.game.ui.clearHelp(true), _0x22d358 = undefined, _0x587ac3.events.callRemote('2829225283'));
        }), _0x587ac3.events.add('job.busdriver.initRoutePoints', _0x3b9e61 => {
          _0x3b9e61 && (_0x3b9e61 = JSON.parse(_0x3b9e61), _0x3cbabd = 'working', _0x2cc899 = _0x3b9e61);
        }), _0x587ac3.events.add('job.busdriver.setDriveTo', _0x1726c7 => {
          _0x3cbabd = 'working';
          const _0x4ae5ae = _0x2cc899[_0x1726c7],
                _0x2a5579 = _0x2cc899[_0x1726c7 + 0x1];
          if (_0x4b6f5b = !_0x2a5579, _0x2ffff3 = _0x1726c7, null == _0x4ae5ae) return;

          const _0x30bff7 = _0x587ac3.checkpoints.new(_0x4b6f5b ? 0x4 : 0x1, new _0x587ac3.Vector3(_0x4ae5ae.x, _0x4ae5ae.y, _0x4ae5ae.z), 0x7, {
            'color': [0xf1, 0xc4, 0xf, 0x64],
            'visible': true,
            'dimension': 0x0
          });

          _0x4b6f5b || (_0x30bff7.destination = new _0x587ac3.Vector3(_0x2a5579.x, _0x2a5579.y, _0x2a5579.z)), _0x18552c = _0x30bff7, _0x587ac3.events.call('gps.setPoint', JSON.stringify({
            'x': parseFloat(_0x4ae5ae.x),
            'y': parseFloat(_0x4ae5ae.y),
            'z': parseFloat(_0x4ae5ae.z),
            'title': _0x4e9f3a.api.language.translatePlayer('gps.waypoints.busStop')
          }));
        }), _0x587ac3.events.add('job.busdriver.removeWorkPoint', () => {
          _0x3cbabd = 'idle', _0x587ac3.events.callRemote('1036148989'), _0x2ffff3 = 0x0, _0x587ac3.checkpoints.exists(_0x18552c) && _0x18552c.destroy(), _0x18552c = undefined, _0x2cc899 = [], _0x4b6f5b = false;
        }), _0x587ac3.events.add('playerEnterCheckpoint', async _0x11608b => {
          if ('working' == _0x3cbabd && _0x57b8e2.vehicle && _0x4e9f3a.api.getEntitySync(_0x57b8e2.vehicle, 'driver') == _0x57b8e2.remoteId && _0x19e025(_0x57b8e2.vehicle) && _0x11608b === _0x18552c) {
            if (_0x3cbabd = 'checking', _0x11608b.destroy(), _0x18552c = null, _0x57b8e2.vehicle.setHalt(0x5, 0x1, false), !_0x4b6f5b) {
              if (_0x4e9f3a.api.longNotifyTrans('job.busdriver.waitSomeTime', 'warn', 0x1388), _0x57b8e2.freezePosition(true), _0x57b8e2.vehicle.freezePosition(true), _0x587ac3.events.call('utils.disablePlayerExit', true), _0x587ac3.events.call('utils.disablePlayerMove', true), await _0x587ac3.game.sleep(0x2710), !_0x57b8e2.vehicle) return;
              _0x57b8e2.freezePosition(false), _0x57b8e2.vehicle.freezePosition(false), _0x587ac3.events.call('utils.disablePlayerExit', false), _0x587ac3.events.call('utils.disablePlayerMove', false);
            }

            _0x587ac3.events.callRemote('2922203314');
          }
        }), _0x587ac3.events.add('job.busdriver.failJob', () => {
          _0x587ac3.events.call('job.busdriver.clearLoadBlips'), _0x587ac3.events.call('job.busdriver.clearLoadPoints'), _0x587ac3.events.call('job.busdriver.removeWorkPoint');
        });

        const _0x19e025 = _0x55fadb => {
          try {
            return !!_0x11c2dd(_0x55fadb) && (!!_0x4e9f3a.api.vehicleIsMyOwn(_0x55fadb) || !!_0x4e9f3a.api.vehicleIsMyRent(_0x55fadb));
          } catch (_0x5376e1) {
            _0x4e9f3a.api.sendError(_0x5376e1);
          }
        },
              _0x11c2dd = _0x56b11f => {
          try {
            return !!_0x58a5e2.includes(_0x56b11f.model);
          } catch (_0x4180fa) {
            _0x4e9f3a.api.sendError(_0x4180fa);
          }
        };
      },
      0x102b1: (_0x5f40f5, _0x51742d, _0x380aa5) => {
        'use strict';

        const a0_0x5e106c = {
          _0x1bc90b: 0x535,
          _0x39963f: 0x1c66,
          _0x32e38f: 0x1d7c,
          _0x3d260e: 0x1289,
          _0x55d0fd: 0x1d55,
          _0x1e6b70: 0x1f41,
          _0x4fc5e4: 0x2292,
          _0x37756e: 0x1de9,
          _0x42b01a: 0x1a5,
          _0x1fac58: 0xd19
        },
              a0_0x57d31e = {
          _0x46fa2f: 0xb4a,
          _0x55e217: 0xa8e,
          _0x236053: 0xa8e,
          _0x16373f: 0xa8e,
          _0x54ca43: 0x17f,
          _0xba6e3e: 0x22ba,
          _0x486b36: 0x14d2,
          _0x53b9df: 0x1a5,
          _0x379ca1: 0x2682
        },
              a0_0x4b3cb4 = {
          _0x4484ad: 0x16c5,
          _0x4b9bda: 0xa8e,
          _0x1a7598: 0x17f,
          _0x1e2017: 0xda6,
          _0x3e27c5: 0x16c5,
          _0x3bd01b: 0x22ba,
          _0x29ffc3: 0x16c5,
          _0x2639b4: 0x535,
          _0x55d02b: 0x1b65,
          _0x21d1ec: 0x1d66,
          _0x3161dc: 0x59d,
          _0x166030: 0x1d55,
          _0x250349: 0x1ea6,
          _0x297334: 0xd19,
          _0x4db4e0: 0x1da5,
          _0xb02b2: 0x131a
        },
              a0_0x22d903 = {
          _0x49b4cd: 0x535,
          _0x4303e5: 0x1d66,
          _0x23bf71: 0x59d,
          _0x4d6dd4: 0x1d66
        },
              a0_0x4b9ea5 = {
          _0x135b39: 0x253d,
          _0x2a4a38: 0xc95,
          _0x2b09ee: 0x535,
          _0x22c21d: 0x535,
          _0x134c7e: 0x235b,
          _0x1a137b: 0x185e,
          _0x30a38c: 0xf86,
          _0x1c5fe9: 0x535,
          _0x840422: 0xf86
        };

        _0x380aa5.r(_0x51742d);

        var _0x5f5570 = _0x380aa5(0x16a21),
            _0x790c85 = _0x380aa5(0x3db3),
            _0x413ad8 = _0x380aa5(0x161cd);

        const _0x154f71 = _0x413ad8.players.local;

        let _0x10bcfa, _0x2ae896, _0xe69aa4;

        const _0x153d69 = _0x413ad8.colshapes.newSphere(961.28, -2111.44, 31.94, 0x1, -0x1);

        _0x153d69.marker = _0x413ad8.markers.new(0x1, new _0x413ad8.Vector3(961.28, -2111.44, 30.94), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': -0x1
        });

        const _0x19c09a = _0x413ad8.colshapes.newSphere(964.01, -2110.44, 31.46, 0x1, -0x1);

        _0x19c09a.marker = _0x413ad8.markers.new(0x1, new _0x413ad8.Vector3(964.01, -2110.44, 30.46), 0x1, {
          'color': [0x34, 0x98, 0xdb, 0xff],
          'visible': true,
          'dimension': -0x1
        }), _0x413ad8.events.add('playerEnterColshape', _0x32f68d => {
          if (_0x5f5570.api.isAuthed() && !_0x154f71.vehicle && null == _0x154f71.getVariable('playerInTrunk') && (_0x32f68d == _0x153d69 && (_0x5f5570.api.displayHelpStringTrans('displayHelpString.toEnter', false, true, 0x1388), _0xe69aa4 = _0x32f68d), _0x32f68d == _0x19c09a && (_0x5f5570.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388), _0xe69aa4 = _0x32f68d), _0x32f68d == _0x10bcfa)) {
            if (_0x413ad8.players.local.activeItemId) return _0x5f5570.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0xe69aa4 = _0x32f68d, _0x5f5570.api.displayHelpStringTrans('displayHelpString.cutMeat', false, true, 0x1388);
          }
        }), _0x413ad8.events.add('playerExitColshape', _0x5322b3 => {
          _0x5f5570.api.isAuthed() && (_0x5322b3 == _0x10bcfa && (_0xe69aa4 = null, _0x413ad8.game.ui.clearHelp(true)), _0x5322b3 == _0x19c09a && (_0xe69aa4 = null, _0x413ad8.game.ui.clearHelp(true)), _0x5322b3 == _0x153d69 && (_0xe69aa4 = null, _0x413ad8.game.ui.clearHelp(true)));
        }), _0x413ad8.events.add('keys.e', () => {
          _0xe69aa4 && _0xe69aa4 === _0x10bcfa && (_0xe69aa4 = null, _0x413ad8.game.ui.clearHelp(true), _0x413ad8.blips.exists(_0x10bcfa.blip) && (_0x10bcfa.blip = _0x10bcfa.blip.destroy()), _0x413ad8.markers.exists(_0x10bcfa.marker) && (_0x10bcfa.marker = _0x10bcfa.marker.destroy()), _0x413ad8.colshapes.exists(_0x10bcfa) && (_0x10bcfa = _0x10bcfa.destroy()), _0x5f5570.api.stopAnim(), _0x281dfe()), _0xe69aa4 && _0xe69aa4 == _0x19c09a && (_0xe69aa4 = null, _0x413ad8.game.ui.clearHelp(true), _0x5f5570.api.teleportAndLoad(new _0x413ad8.Vector3(960.16, -2113.24, 31.94), 0xc8, {
            'dimension': 0x0
          }), _0x413ad8.events.callRemote('3404531499', null)), _0xe69aa4 && _0xe69aa4 == _0x153d69 && (_0xe69aa4 = null, _0x413ad8.game.ui.clearHelp(true), _0x5f5570.api.teleportAndLoad(new _0x413ad8.Vector3(965.26, -2114.88, 31.47), 0xc8, {
            'smartDimension': 'butcher'
          }), _0x413ad8.events.callRemote('3404531499', 'butcher'));
        }), _0x413ad8.events.add('job.butcher.setRandomPoint', _0x215be0 => {
          _0x215be0 = JSON.parse(_0x215be0), _0x10bcfa && (_0x10bcfa.blip = _0x10bcfa.blip.destroy(), _0x10bcfa.marker = _0x10bcfa.marker.destroy(), _0x10bcfa = _0x10bcfa.destroy()), _0x10bcfa = _0x413ad8.colshapes.newSphere(_0x215be0[0x0], _0x215be0[0x1], _0x215be0[0x2], 0x1, -0x1), _0x10bcfa.blip = _0x413ad8.blips.new(0x1, new _0x413ad8.Vector3(_0x215be0[0x0], _0x215be0[0x1], _0x215be0[0x2]), {
            'scale': 0.8,
            'color': 0x5,
            'dimension': -0x1
          }), (0x0, _0x790c85.markAsTranslatedBlip)(_0x10bcfa.blip, 'blips.meatZone'), _0x10bcfa.marker = _0x413ad8.markers.new(0x1, new _0x413ad8.Vector3(_0x215be0[0x0], _0x215be0[0x1], _0x215be0[0x2] - 0x1), 0x1, {
            'color': [0xf0, 0xcb, 0x58, 0xff],
            'dimension': -0x1
          }), _0x2ae896 = _0x215be0;
        }), _0x413ad8.events.add('job.butcher.finishJob', _0x1aad8c => {
          _0x413ad8.attachments.removeLocal('mop'), _0x413ad8.attachments.removeLocal('bucket'), _0x413ad8.attachments.removeLocal('machette'), _0x10bcfa && _0x10bcfa.blip && (_0x10bcfa.blip = _0x10bcfa.blip.destroy()), _0x10bcfa && _0x10bcfa.marker && (_0x10bcfa.marker = _0x10bcfa.marker.destroy()), _0x10bcfa && (_0x10bcfa = _0x10bcfa.destroy()), _0x413ad8.events.call('buttonPress.stop');
        }), _0x413ad8.events.add('buttonPress.butcher.stop', () => {
          _0x525dca();
        });

        const _0x281dfe = async () => {
          _0x5f5570.api.usingSystemAnim(true), _0x413ad8.attachments.addLocal('machette'), _0x5f5570.api.setPlayerPos(_0x154f71, new _0x413ad8.Vector3(_0x2ae896[0x0], _0x2ae896[0x1], _0x2ae896[0x2])), _0x154f71.setHeading(_0x2ae896[0x3]), _0x154f71.freezePosition(true), await _0x5f5570.api.taskPlayAnim('melee@knife@streamed_core_fps', 'knife_short_range_0', 0x31, true), _0x413ad8.events.call('buttonPress.init', 'butcher');
        },
              _0x525dca = async () => {
          _0x413ad8.attachments.removeLocal('machette'), _0x5f5570.api.stopAnim(), _0x154f71.freezePosition(false), _0x413ad8.events.callRemote('1709744763'), _0x5f5570.api.usingSystemAnim(false);
        };
      },
      0xc33e: (_0x527c09, _0xaf6302, _0xb1fd9e) => {
        'use strict';

        const a0_0x5e5aff = {
          _0x27b1ba: 0x9ea,
          _0x42c82f: 0x1870,
          _0x2fc35d: 0x1c66,
          _0x2cba18: 0x14d2
        },
              a0_0x44838b = {
          _0xf4ee81: 0x1de9,
          _0x105385: 0xf2d,
          _0x5b4898: 0x1c18,
          _0x26ce57: 0x1870,
          _0x12b98c: 0x1c66,
          _0x562980: 0x1da5,
          _0x4831e7: 0x535
        },
              a0_0x3fec63 = {
          _0x5be701: 0x4b9,
          _0x5ee12c: 0x6ff,
          _0x3089e9: 0xc95,
          _0xdb4746: 0x535,
          _0x38aa1a: 0x1eb7,
          _0x1122f3: 0x16c5,
          _0x81a104: 0x32e,
          _0x4fd53d: 0xa67,
          _0xd8799b: 0x2288,
          _0x21bc27: 0x1a07,
          _0x460463: 0x1c66,
          _0x1fc70a: 0x4ff,
          _0x26f1da: 0x1a5,
          _0x2e9176: 0x1465,
          _0x3c5022: 0x1aab,
          _0x20b81e: 0x16c5,
          _0x170fa1: 0x252a,
          _0x3a56e6: 0xb0c,
          _0x34caa0: 0x202e,
          _0x4a21a1: 0x421,
          _0x646af5: 0x1c3,
          _0x154bc3: 0x1a07,
          _0x1bc452: 0x1934,
          _0x50d45d: 0x535,
          _0x17fff0: 0x108e,
          _0x34d1a3: 0x1de9,
          _0x694ef1: 0x580,
          _0x5a82b3: 0x49e,
          _0x29ea15: 0x14d2,
          _0x468188: 0x10fa,
          _0x2b284f: 0x1b06
        },
              a0_0x2efb1d = {
          _0x3f6184: 0x535,
          _0x23a7b2: 0x1d66
        },
              a0_0x211fed = {
          _0x3e96fb: 0x535,
          _0x2ebc16: 0x4b9,
          _0x26745c: 0x32e,
          _0x31237c: 0xf86,
          _0x4f4b17: 0x1f9,
          _0x2b753d: 0x17e2,
          _0x1738ef: 0x535,
          _0x14e1a0: 0xc95,
          _0x244d2f: 0x421,
          _0x33b02c: 0x535,
          _0x378c73: 0x40b,
          _0x230369: 0x1a07,
          _0x8dc510: 0x1934
        },
              a0_0x350dab = {
          _0x1acc78: 0xc95,
          _0xa4cc67: 0x22f2,
          _0x477774: 0x1a5,
          _0x2daba9: 0x1987,
          _0x2c2c78: 0x535,
          _0x3ce63a: 0x1349,
          _0x10e6ff: 0xbb1
        };

        _0xb1fd9e.r(_0xaf6302);

        var _0x2f2484 = _0xb1fd9e(0x16a21),
            _0x28a32b = _0xb1fd9e(0x161cd);

        const _0x212ad0 = _0x28a32b.players.local;

        let _0x58488b, _0x2e6418, _0x13e9f1;

        const _0x2b74d0 = _0x1250c6 => {
          if (!_0x1250c6.getVariable('farmer')) {
            _0x2f2484.api.longNotifyTrans('job.farmer.needClothes', 'error');

            const _0x295de3 = {
              'x': '2035.26',
              'y': '4982.63',
              'z': '41.09',
              'title': 'gps.waypoints.farmer'
            };
            return _0x28a32b.events.call('gps.setPoint', JSON.stringify({
              'x': parseFloat('2035.26'),
              'y': parseFloat('4982.63'),
              'z': parseFloat('41.09'),
              'title': _0x2f2484.api.language.translatePlayer('gps.waypoints.farmer')
            })), false;
          }

          return true;
        };

        _0x28a32b.events.add('playerEnterColshape', async _0x33b8ab => {
          if (_0x2f2484.api.isAuthed() && !_0x212ad0.vehicle) {
            if (_0x33b8ab.hasVariable('plant.needDrink') && false !== _0x33b8ab.getVariable('plant.needDrink')) {
              if (!_0x2b74d0(_0x212ad0)) return;
              return _0x13e9f1 = _0x33b8ab, void _0x2f2484.api.displayHelpStringTrans('displayHelpString.waterCrop', false, true, 0x1388);
            }

            if (_0x33b8ab.hasVariable('orangeTree') || _0x33b8ab.hasVariable('plant') && _0x33b8ab.getVariable('plant').static === _0x2f2484.api.getPlayerStatic(_0x212ad0) || true === _0x33b8ab.getVariable('plant.weed') && (_0x2f2484.api.isGroupMemberOf(_0x212ad0, 'police') || _0x2f2484.api.isGroupMemberOf(_0x212ad0, 'fib'))) {
              if (!_0x2b74d0(_0x212ad0)) return;
              return _0x212ad0.activeItemId ? _0x2f2484.api.longNotifyTrans('user.removeActiveItemFirst', 'error') : (_0x13e9f1 = _0x33b8ab, void _0x2f2484.api.displayHelpStringTrans('displayHelpString.harvestCrop', false, true, 0x1388));
            }
          }
        }), _0x28a32b.events.add('playerExitColshape', async _0x19ec16 => {
          if (_0x2f2484.api.isAuthed()) return _0x13e9f1 && _0x13e9f1 === _0x19ec16 ? (_0x13e9f1 = null, void _0x28a32b.game.ui.clearHelp(true)) : undefined;
        }), _0x28a32b.events.add('keys.e', async () => {
          if (!_0x212ad0.vehicle) {
            if (_0x13e9f1 && _0x28a32b.colshapes.exists(_0x13e9f1) && _0x13e9f1.hasVariable('plant.needDrink') && 0x0 != _0x13e9f1.getVariable('plant.needDrink')) {
              if (!_0x2b74d0(_0x212ad0)) return;
              if (0xb1 != _0x212ad0.activeItemId) return _0x2f2484.api.longNotifyTrans('job.farmer.needWateringCan', 'error');
              _0x28a32b.events.callRemote('3581223485', _0x13e9f1.getVariable('plant.needDrink')), _0x13e9f1 = null;
            } else {
              if (_0x13e9f1 && _0x28a32b.colshapes.exists(_0x13e9f1) && _0x13e9f1.hasVariable('orangeTree')) {
                if (!_0x2b74d0(_0x212ad0)) return;
                if (_0x212ad0.activeItemId) return _0x2f2484.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
                _0x58488b = _0x13e9f1.getVariable('orangeTree'), _0x13e9f1 = null, _0x2f2484.api.usingSystemAnim(true), await _0x2f2484.api.taskPlayAnim('amb@prop_human_movie_bulb@base', 'base', 0x1, true), _0x28a32b.events.call('buttonPress.init', 'farmer_oranges'), _0x2f2484.api.setDiscordStatus('orangeCollect');
              } else {
                if (_0x13e9f1 && _0x28a32b.colshapes.exists(_0x13e9f1) && _0x13e9f1.hasVariable('plant') && (_0x13e9f1.getVariable('plant').static === _0x2f2484.api.getPlayerStatic(_0x212ad0) || true === _0x13e9f1.getVariable('plant.weed') && (_0x2f2484.api.isGroupMemberOf(_0x212ad0, 'police') || _0x2f2484.api.isGroupMemberOf(_0x212ad0, 'fib')))) {
                  if (!_0x2b74d0(_0x212ad0)) return;
                  if (_0x212ad0.activeItemId) return _0x2f2484.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
                  _0x2e6418 = _0x13e9f1.getVariable('plant').id, _0x13e9f1 = null, _0x2f2484.api.usingSystemAnim(true);

                  const _0x2b7fa1 = 'amb@world_human_gardener_plant@female@enter',
                        _0x55dbe5 = await _0x2f2484.api.taskPlayAnim(_0x2b7fa1, 'enter_female', 0x2, false);

                  await _0x28a32b.game.sleep(0x3e8 * _0x55dbe5), await _0x2f2484.api.taskPlayAnim('amb@world_human_gardener_plant@female@base', 'base_female', 0x1, true), _0x28a32b.events.call('buttonPress.init', 'farmer_plant'), _0x2f2484.api.setDiscordStatus('vegetableCollect');
                }
              }
            }
          }
        }), _0x28a32b.events.add('buttonPress.farmer_oranges.stop', async () => {
          if (!_0x2b74d0(_0x212ad0)) return;
          if (null == _0x58488b) return;

          const _0x29ab5c = await _0x2f2484.api.taskPlayAnim('amb@prop_human_movie_bulb@exit', 'exit', 0x0, false);

          await _0x28a32b.game.sleep(0x64 * _0x29ab5c), _0x2f2484.api.usingSystemAnim(false), _0x28a32b.events.callRemote('2750979842', _0x58488b), _0x2f2484.api.setDiscordStatus();
        }), _0x28a32b.events.add('buttonPress.farmer_plant.stop', async () => {
          if (!_0x2b74d0(_0x212ad0)) return;
          if (null == _0x2e6418) return _0x2f2484.api.usingSystemAnim(false);

          const _0x40e6a5 = await _0x2f2484.api.taskPlayAnim('amb@world_human_gardener_plant@female@exit', 'exit_female', 0x0, false);

          await _0x28a32b.game.sleep(0x3e8 * _0x40e6a5), _0x2f2484.api.usingSystemAnim(false), _0x28a32b.events.callRemote('515530293', _0x2e6418), _0x2f2484.api.setDiscordStatus();
        }), _0x28a32b.events.add('render', () => {
          if (_0x28a32b.objects.streamed2) {
            for (const _0x28f5e8 of _0x28a32b.objects.streamed2()) if (_0x28f5e8.hasVariable('plant.isShaking') && true === _0x28f5e8.getVariable('plant.isShaking')) {
              const {
                x: _0x4e4cff,
                y: _0x104193,
                z: _0x9fcb76
              } = _0x28f5e8.getRotation(0x2);

              _0x4e4cff > 0x5 && 0x0 !== _0x28f5e8.xRotState ? _0x28f5e8.xRotState = 0x0 : _0x4e4cff < -0x5 && 0x1 !== _0x28f5e8.xRotState && (_0x28f5e8.xRotState = 0x1), _0x104193 > 0x5 && 0x0 !== _0x28f5e8.yRotState ? _0x28f5e8.yRotState = 0x0 : _0x104193 < -0x5 && 0x1 !== _0x28f5e8.yRotState && (_0x28f5e8.yRotState = 0x1);

              const _0x4c7004 = Math.random() * Math.random(),
                    _0x1d091b = Math.random() * Math.random();

              _0x28f5e8.setRotation(0x0 === _0x28f5e8.xRotState ? -_0x4c7004 + _0x4e4cff : _0x4c7004 + _0x4e4cff, 0x0 === _0x28f5e8.yRotState ? -_0x1d091b + _0x104193 : _0x1d091b + _0x104193, _0x9fcb76, 0x2, true);
            }
          }
        });
      },
      0xb9dd: (_0x157a28, _0x2154f7, _0x2ed7fb) => {
        'use strict';

        const a0_0x5007fe = {
          _0x28cdd6: 0x310
        },
              a0_0x1f9dca = {
          _0x2bfbc5: 0x17a7,
          _0x2bcd8e: 0x1cd6,
          _0x3091aa: 0x217f,
          _0x3f9689: 0x9fd,
          _0x78ebdd: 0x1d52,
          _0x26f3b7: 0x9ab,
          _0x243801: 0x1d66,
          _0x181551: 0x1e35,
          _0x44179a: 0x1992,
          _0x35d148: 0x24fe,
          _0x2cb44e: 0x1d66,
          _0x29625c: 0x1992,
          _0x58d9f8: 0x1d66,
          _0x5a236e: 0x1992,
          _0x455189: 0x24fe,
          _0x4a0c6b: 0x24fe
        },
              a0_0x101583 = {
          _0x39df71: 0x1366,
          _0x20ce14: 0x535,
          _0x507b82: 0x1a50,
          _0x22502c: 0x700,
          _0x5e29f6: 0x2140,
          _0x1456ee: 0x1d66,
          _0x766660: 0x1992,
          _0x201977: 0x1dd9,
          _0x201c6a: 0x1d66,
          _0x19669f: 0x1d66,
          _0x2ae06a: 0x1992,
          _0x19370b: 0x90f,
          _0x26e4a5: 0x2080,
          _0x1b3ef8: 0x6f1,
          _0x2628a0: 0x1d66,
          _0x24a077: 0x1992,
          _0x2c2777: 0x1dd9,
          _0x1d4c88: 0xb24,
          _0x24731b: 0x1f30,
          _0x479fdb: 0x10f6,
          _0x45ca03: 0x535,
          _0x408a19: 0xe74,
          _0x167f88: 0x535,
          _0x4612bf: 0x1f93,
          _0x456e17: 0x2080,
          _0x345a7c: 0x1992,
          _0x542cdf: 0x1dd9,
          _0x42d82a: 0xffb,
          _0x3d1c41: 0x310,
          _0x20c967: 0x22a7,
          _0x1e5856: 0x535,
          _0x449567: 0xf05,
          _0x3ed952: 0xf86,
          _0x59fd05: 0x535
        },
              a0_0x51943a = {
          _0x11a274: 0x8ce,
          _0x18cda2: 0x90f,
          _0xc70208: 0x1fc8,
          _0x1a4475: 0x90f
        },
              a0_0x377143 = {
          _0x5656b4: 0x1d66,
          _0x4e4b05: 0x2422,
          _0x30ebf5: 0x1f30,
          _0x22a588: 0x1d55,
          _0x56e5d5: 0x535,
          _0x50e173: 0x160a,
          _0x547693: 0x1f30,
          _0x34e2fa: 0xd2c,
          _0x23a410: 0x1b40,
          _0x29c3be: 0x160a,
          _0x199ed3: 0xf82,
          _0x2f5acc: 0x2379,
          _0x4e77bb: 0x957,
          _0x62173e: 0x2530,
          _0x33678d: 0x1d66,
          _0x4aba61: 0x2292,
          _0x23c8c3: 0x1e13,
          _0x209034: 0xffb
        },
              a0_0x317676 = {
          _0x31102f: 0x1a4d,
          _0x549b4c: 0x1a4d,
          _0x3cf57b: 0x19d6,
          _0x5541f4: 0x1870,
          _0x424271: 0x1b65,
          _0x3b21d7: 0x535,
          _0x11b991: 0x1c66,
          _0x25892b: 0x3e9,
          _0xf075c7: 0x59d,
          _0x23af03: 0x662,
          _0x3191a8: 0xf05,
          _0x93d35e: 0x14d2
        },
              a0_0xca7226 = {
          _0x53b5fe: 0x59d,
          _0x3ca0b5: 0x2315,
          _0xc57863: 0x535,
          _0x4f67e7: 0xf86,
          _0x43dbb5: 0x2288,
          _0x59c5b7: 0x1da5,
          _0x7e5a0f: 0xde6,
          _0x17f695: 0x160a,
          _0x3773c8: 0x1f30,
          _0x38c490: 0x1157,
          _0x205b8c: 0x1bf5,
          _0x506d1a: 0x1c66,
          _0x32bc72: 0x239d,
          _0x134cf1: 0x1a5,
          _0x2cac2c: 0x535,
          _0x28c57c: 0x1de9,
          _0x1326ba: 0x188f,
          _0x359196: 0xf05,
          _0x5d9567: 0x1531
        },
              a0_0x499d32 = {
          _0x5e219a: 0x239d,
          _0x323b66: 0x535,
          _0x20d21f: 0x1f4b,
          _0x15b3fd: 0xf86,
          _0xec2de6: 0x209d,
          _0x2558cc: 0x1a07,
          _0xee3d90: 0x12bc
        },
              a0_0x13610e = {
          _0x5892fb: 0x14d2,
          _0x2422b7: 0x112d
        },
              a0_0x6fdcab = {
          _0x4bb7da: 0x535,
          _0xcb9df9: 0x1d66,
          _0x27c73d: 0x1870,
          _0x4999ef: 0xb4a,
          _0x2cfcbe: 0xfc2
        },
              a0_0x1836db = {
          _0x3d8a83: 0x239d
        },
              a0_0x49523b = {
          _0x34a80f: 0x239d,
          _0x24504f: 0x2480,
          _0x358444: 0x16c5,
          _0x23bde4: 0xe90,
          _0x2100ac: 0x1a4d
        },
              a0_0x52ea45 = {
          _0x2daa26: 0x239d
        },
              a0_0x159580 = {
          _0x5c9beb: 0x239d
        },
              a0_0x45d5ff = {
          _0x48efe0: 0x535,
          _0x14bc86: 0x253d,
          _0xab1042: 0xb5b,
          _0x38e389: 0x504,
          _0x50ac47: 0x1157,
          _0x4acf9b: 0x14c7,
          _0x2f77cd: 0x2315,
          _0x738d14: 0x1241,
          _0xe64ca2: 0xf86,
          _0x5b394c: 0x2234
        };

        _0x2ed7fb.r(_0x2154f7);

        var _0x2000ab = _0x2ed7fb(0x16a21),
            _0x1b6608 = _0x2ed7fb(0x539c),
            _0x36a570 = _0x2ed7fb(0xd194),
            _0x107f38 = _0x2ed7fb(0x176d8),
            _0x58d242 = _0x2ed7fb(0x3db3),
            _0x4c4cd5 = _0x2ed7fb(0x5d14),
            _0x282e20 = _0x2ed7fb(0x1d7e),
            _0x4f2729 = _0x2ed7fb(0x161cd);

        const _0x3f90ec = _0x4f2729.players.local;

        let _0x54d052,
            _0x28e645,
            _0x49c66c,
            _0x1c5a63,
            _0x473904,
            _0x3fd502 = true,
            _0x4a7393 = false,
            _0x3efc94 = 0x0,
            _0x5b34f6 = 0x0;

        _0x2ed7fb.g.fishing = false;
        let _0x49dd86 = 0x0;
        const _0x5ee871 = [0xff, 0xff, 0xff],
              _0x443537 = [0x49, 0xc9, 0x4e];
        _0x1b6608.L.forEach((_0x3b0de3, _0x5ef88a) => {
          const _0x578e62 = _0x4f2729.blips.new(0x13d, new _0x4f2729.Vector3(_0x3b0de3.x, _0x3b0de3.y, _0x3b0de3.z), {
            'scale': 0.8,
            'color': 0x4,
            'shortRange': true
          });

          (0x0, _0x58d242.markAsTranslatedBlip)(_0x578e62, 'blips.fishingZone');

          const _0x4ab2d1 = _0x4f2729.colshapes.newSphere(_0x3b0de3.x, _0x3b0de3.y, _0x3b0de3.z, _0x3b0de3.radius);

          _0x4ab2d1.fishId = _0x3b0de3.fishId, _0x4ab2d1.fishZoneIndex = _0x5ef88a, _0x4ab2d1.fishRotPos = new _0x4f2729.Vector3(_0x3b0de3.rotX, _0x3b0de3.rotY, 0x0), _0x4ab2d1.fishZ = _0x3b0de3.z, _0x4ab2d1.isOcean = !!_0x3b0de3.isOcean;
        }), _0x4f2729.events.add('playerEnterColshape', _0x51beef => {
          if (_0x2000ab.api.isAuthed() && null == _0x3f90ec.getVariable('playerInTrunk') && _0x51beef.fishId) {
            if (Math.abs(_0x51beef.fishZ - _0x3f90ec.position.z) > 0x14) return;
            if (_0x54d052 = _0x51beef, !_0x4f2729.inventory.hasItem(_0x3f90ec, 0x1e)) return _0x2000ab.api.displayHelpStringTrans('job.fisherman.toFishGetRod', false, true, 0x1388);

            _0x2000ab.api.displayHelpStringTrans('displayHelpString.throwRod', false, true, 0x1388);
          }
        }), _0x4f2729.events.add('playerExitColshape', _0x2933cf => {
          _0x2000ab.api.isAuthed() && _0x2933cf.fishId && (_0x54d052 = null, _0x4f2729.game.ui.clearHelp(true), _0x2ed7fb.g.fishing && _0x493a49());
        }), _0x4f2729.events.add('playerPolygonEnter', (_0x483b66, _0x3467dc) => {
          'fishing' === _0x3467dc.zoneType && (_0x5b34f6 = _0x3467dc.zoneId);
        }), _0x4f2729.events.add('playerPolygonExit', (_0x2f870e, _0xeec240) => {
          'fishing' === _0xeec240.zoneType && (_0x5b34f6 = 0x0);
        }), _0x4f2729.events.add('render2', () => {
          _0x2ed7fb.g.fishing && (_0x3f90ec.isInAnyVehicle(true) || _0x3f90ec.isInWater() || _0x54d052 && _0x4f2729.colshapes.exists(_0x54d052) && !_0x54d052.isOcean && _0x3f90ec.isOnVehicle()) && (_0x28e645 && (_0x28e645.cancel(), _0x28e645 = undefined), _0x493a49());
        }), _0x4f2729.events.add('keys.e', () => {
          if (_0x3fd502) {
            if (_0x2ed7fb.g.fishing) _0x493a49();else {
              if (!_0x4f2729.colshapes.exists(_0x54d052)) return;
              if (_0x3f90ec.isInAnyVehicle(true) || _0x3f90ec.isInWater() || _0x54d052 && _0x4f2729.colshapes.exists(_0x54d052) && !_0x54d052.isOcean && _0x3f90ec.isOnVehicle()) return;
              if (_0x3f90ec.activeItemId) return _0x2000ab.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
              if (_0x2ed7fb.g.fishing) return _0x2000ab.api.longNotifyTrans('job.fisherman.alreadyFishing', 'error');

              _0x47edf6(_0x54d052.fishId, _0x54d052.fishRotPos, _0x54d052.fishZoneIndex);
            }
          }
        }), _0x4f2729.events.add('buttonPress.fishing.stop', _0x4d518e => {
          _0x2ed7fb.g.fishing && _0x493a49(_0x4d518e);
        }), _0x4f2729.events.add('job.fishing.finishedFishing', async () => {
          const _0x50fe81 = await _0x2000ab.api.taskPlayAnim('random@domestic', 'pickup_low', 0x0, false, true);

          await _0x4f2729.game.sleep(0x3e8 * _0x50fe81), _0x2000ab.api.usingSystemAnim(false), _0x4f2729.attachments.removeLocal('fishing_rod1'), _0x3fd502 = true;
        }), _0x4f2729.events.add('job.fishing.startFishingSuccess', (_0x18a402, _0x244580, _0x59230a = false, _0x1a8be7, _0x375648, _0x3828d0) => {
          _0x1bfed1(_0x18a402, _0x244580, _0x59230a, _0x1a8be7, _0x375648, _0x3828d0);
        }), _0x4f2729.events.add('job.fishing.startFishingError', () => {
          _0x493a49();
        });

        const _0x47edf6 = (_0x194999, _0x517b1c, _0x4711b6) => {
          if (!_0x4f2729.inventory.hasItem(_0x3f90ec, 0x1e)) return _0x2000ab.api.displayHelpStringTrans('job.fisherman.noRodToFish', false, true, 0x1388);

          _0x4f2729.events.callRemote('1582730457', _0x194999, JSON.stringify(_0x517b1c), _0x4711b6);
        },
              _0x1bfed1 = async (_0x234e7b, _0x502b3b, _0x4ae5d0 = false, _0x4d4281, _0x1753bb, _0x24edb1) => {
          if (_0x4f2729.game.ui.clearHelp(true), _0x598f98 = _0x1753bb, !_0x4f2729.inventory.hasItem(_0x3f90ec, 0x1e)) return _0x2000ab.api.displayHelpStringTrans('job.fisherman.noRodToFish', false, true, 0x1388);
          _0x4a7393 = _0x4ae5d0, _0x1c5a63 = _0x234e7b, _0x3f90ec.activeItemId = 0x1e, _0x4f2729.events.callRemote('3715179792', 0x1e), _0x3f90ec.taskPause(0x64);

          const _0xf8309d = _0x2000ab.api.getHeadingFromCoords(_0x3f90ec.position, _0x502b3b);

          Math.abs(_0xf8309d - _0x3f90ec.getHeading()) > 0x1e && (_0x3f90ec.taskAchieveHeading(_0xf8309d, 0x5dc), await _0x4f2729.game.sleep(0x5dc)), _0x2000ab.api.usingSystemAnim(true), _0x2000ab.api.setDiscordStatus('fishing'), _0x2ed7fb.g.fishing = true, _0x4f2729.events.call('utils.disablePlayerMove', true), await _0x2000ab.api.taskPlayAnim('amb@world_human_stand_fishing@idle_a', 'idle_a', 0x1, true), _0x4f2729.attachments.addLocal('fishing_rod1'), _0x2000ab.api.play3DSound('fish_throw_rod'), _0x2000ab.api.displayHelpStringTrans('job.fisherman.waitTillFishPeck', false, true, 0x4e20), _0x28e645 = _0x4f2729.game.sleep(_0x24edb1).then(async () => {
            _0x2ed7fb.g.fishing && (await _0x2000ab.api.taskPlayAnim('amb@world_human_stand_fishing@idle_a', 'idle_c', 0x1, true), _0x2000ab.api.displayHelpStringTrans('displayHelpString.somethingPecking', false, true, 0x1388), _0x49dd86 < 0xa && (_0x49dd86++, _0x2000ab.api.longNotifyTrans('job.fisherman.howToCatch', 'warn', 0x2710)), _0x2000ab.api.play3DSound('fish_catching_' + (Math.floor(0x2 * Math.random()) + 0x1)), _0x477b99(_0x4d4281));
          });
        },
              _0x493a49 = _0x29e0aa => {
          _0x2ed7fb.g.fishing = false, _0x49c66c && (_0x49c66c.cancel(), _0x49c66c = undefined), _0x28e645 && (_0x28e645.cancel(), _0x28e645 = undefined), _0x28e645 = null, _0x49c66c = null, _0x473904 && (_0x473904.visible = false, _0x473904 = undefined), _0x4f2729.game.sleep(0x64).then(() => _0x4f2729.attachments.removeLocal('fishing_rod1')), _0x2000ab.api.stopAnim(), _0x4f2729.inventory.pocketItem(), _0x2000ab.api.usingSystemAnim(false), _0x2000ab.api.setDiscordStatus(), _0x4f2729.game.ui.clearHelp(true), _0x4f2729.events.call('utils.disablePlayerMove', false), _0x29e0aa ? (_0x3fd502 = false, _0x2000ab.api.play3DSound('fish_catch', {
            'volume': 0x32
          }), _0x4f2729.events.callRemote('1945659824')) : _0x3fd502 = true, _0x4a8a9d();
        };

        let _0x1e3920,
            _0x55cf46,
            _0x5cbd62,
            _0x112477,
            _0x53f902,
            _0x1e1a34,
            _0x251085,
            _0x4adcc0,
            _0x1e25a4,
            _0x114920,
            _0x32566a,
            _0x3ed7cd = 0x64,
            _0x3fe8fa = 0x0,
            _0x598f98 = 0x1;

        const _0x477b99 = async _0x30100f => {
          const _0x3f747a = _0x1b6608.L[_0x30100f];

          if (_0x5cbd62 = new _0x4f2729.Vector3(_0x3f747a.x, _0x3f747a.y, _0x3f747a.z), _0x30100f >= 0x9) {
            const _0xaa8cdd = _0x4f2729.game.object.getObjectOffsetFromCoords(_0x3f90ec.position.x, _0x3f90ec.position.y, _0x3f747a.rotZ, _0x3f90ec.getHeading(), 0x0, 8.5, 0x0);

            _0x112477 = new _0x4f2729.Vector3(_0xaa8cdd.x, _0xaa8cdd.y, _0xaa8cdd.z - 0.1), _0x53f902 = _0x2000ab.api.getHeadingFromCoords(new _0x4f2729.Vector3(_0x3f90ec.position.x, _0x3f90ec.position.y, _0x3f90ec.position.z), _0x112477), _0x1e1a34 = true;
          } else _0x112477 = new _0x4f2729.Vector3(_0x3f747a.rotX, _0x3f747a.rotY, _0x3f747a.rotZ - 0.1), _0x53f902 = _0x2000ab.api.getHeadingFromCoords(new _0x4f2729.Vector3(_0x3f747a.x, _0x3f747a.y, _0x3f747a.z), _0x112477);

          _0x55cf46 = new _0x36a570.ParticleFx('core', 'water_splash_animal_wade', {
            'scale': 0x5,
            'zOffset': 0x2
          }), _0x4f2729.peds.exists(_0x1e3920) && (_0x1e3920.destroy(), _0x1e3920 = null), _0x1e3920 = _0x4f2729.peds.new(_0x4f2729.game.joaat('a_c_fish'), _0x112477, _0x4c4cd5.u.integer({
            'min': 0x0,
            'max': 0x168
          }), -0x1);

          for (let _0x24a260 = 0x0; !_0x1e3920.handle && _0x24a260 < 0x1f4; ++_0x24a260) await _0x4f2729.game.sleep(0xa);

          _0x1e3920.freezePosition(false), _0x1e3920.setMaxSpeed(1.8), _0x55cf46.playOnEntity(_0x1e3920, -0x1), _0x3ed7cd = 0x64, _0x3fe8fa = 0x0, _0x251085 = Date.now(), _0x1f3d25(_0x1e3920);
        },
              _0x4a8a9d = () => {
          _0x4f2729.peds.exists(_0x1e3920) && _0x1e3920.destroy(), _0x55cf46 && _0x55cf46.timeoutRemove(0x0), _0x1e3920 = undefined, _0x55cf46 = undefined, _0x3ed7cd = 0x64, _0x3fe8fa = 0x0, _0x5cbd62 = undefined, _0x112477 = undefined, _0x53f902 = undefined, _0x251085 = undefined, _0x4adcc0 = undefined, _0x1e1a34 = undefined, _0x1e25a4 = undefined, _0x114920 = undefined;
        },
              _0x1f3d25 = _0x4fb217 => {
          const _0x30d921 = _0x4adcc0;
          _0x4adcc0 = _0x4c4cd5.u.pickone(['left', 'right'].filter(_0x9082e8 => _0x9082e8 != _0x30d921)), _0x1e25a4 = Date.now(), _0x114920 = _0x4c4cd5.u.integer({
            'min': 0x6 / _0x598f98,
            'max': 0xc / _0x598f98
          });
          let _0x289c91 = 0x0;

          switch (_0x4adcc0) {
            case 'left':
              _0x289c91 = -0x8;
              break;

            case 'right':
              _0x289c91 = 0x8;
          }

          _0x4fb217.clearTasks(), _0x32566a = _0x4f2729.game.object.getObjectOffsetFromCoords(_0x112477.x, _0x112477.y, _0x112477.z, _0x53f902, _0x289c91, 0x0, 0x0);
        },
              _0x359ca5 = (_0x216aad = false) => {
          _0x216aad ? (_0x3ed7cd > 0x0 && (_0x3ed7cd -= 0x1 / _0x598f98), _0x3fe8fa > 0x0 && _0x3fe8fa--, _0x1e3920.setMaxSpeed(1.08)) : (_0x3ed7cd < 0x64 && (_0x3ed7cd += 0x1 / _0x598f98), _0x3fe8fa < 0x64 && _0x3fe8fa++, _0x1e3920.setMaxSpeed(1.8));
        };

        _0x4f2729.events.add('time.every01Sec', () => {
          if (_0x1e3920 && _0x4f2729.peds.exists(_0x1e3920) && _0x1e3920.handle) {
            const _0x1e1208 = _0x1e3920.getCoords(true);

            if (_0x2000ab.api.vdist2(_0x112477, _0x1e1208) > 0x8 && 0x0 != _0x3ed7cd && _0x1f3d25(_0x1e3920), _0x32566a && _0x3ed7cd > 0x0 && _0x1e3920.taskSlideToCoord(_0x32566a.x, _0x32566a.y, _0x32566a.z, _0x1e3920.getHeading(), 0xa), null != _0x55cf46 && _0x3ed7cd <= 0x0 ? 0x0 != _0x55cf46.alpha && _0x55cf46.setAlpha(0x0, false) : 0x64 != _0x55cf46.alpha && _0x55cf46.setAlpha(0x1, false), _0x3ed7cd > 0x0) {
              const _0x232775 = _0x4f2729.game.controls.isDisabledControlPressed(0x0, 0x21),
                    _0x15e8cd = _0x4f2729.game.controls.isDisabledControlPressed(0x0, 0x22),
                    _0x6e841b = _0x4f2729.game.controls.isDisabledControlPressed(0x0, 0x23);

              !_0x15e8cd || _0x232775 || _0x6e841b || 'right' !== _0x4adcc0 ? _0x15e8cd && !_0x6e841b && !_0x232775 || 'right' !== _0x4adcc0 || _0x359ca5(false) : _0x359ca5(true), !_0x6e841b || _0x232775 || _0x15e8cd || 'left' !== _0x4adcc0 ? _0x6e841b && !_0x232775 && !_0x15e8cd || 'left' !== _0x4adcc0 || _0x359ca5(false) : _0x359ca5(true);
            }

            if (Date.now() - _0x1e25a4 > 0x3e8 * _0x114920 && _0x3ed7cd > 0x0 && _0x1f3d25(_0x1e3920), _0x3ed7cd <= 0x0) {
              if (_0x1e3920.clearTasks(), _0x3fe8fa > 0x0 && (_0x3fe8fa = 0x0), _0x473904 || (_0x473904 = new _0x107f38.TimerBar('job.fisherman.pullFishTimebar', 'progressBar', {
                'value': 0x0,
                'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
                'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
              }), _0x473904.visible || (_0x473904.visible = true), _0x3efc94 = _0x2000ab.api.vdist(_0x1e1208.x, _0x1e1208.y, 0x0, _0x3f90ec.position.x, _0x3f90ec.position.y, 0x0)), _0x2000ab.api.displayHelpStringTrans('displayHelpString.fishTired', true, false, -0x1), _0x4f2729.game.controls.isDisabledControlPressed(0x0, 0x18)) {
                if (_0x1e3920.taskSlideToCoord(_0x3f90ec.position.x, _0x3f90ec.position.y, _0x3f90ec.position.z, _0x1e3920.getHeading(), 0xa), _0x473904) {
                  const _0x445cc4 = _0x2000ab.api.vdist(_0x1e1208.x, _0x1e1208.y, 0x0, _0x3f90ec.position.x, _0x3f90ec.position.y, 0x0);

                  _0x473904.value = _0x2000ab.api.clamp(0x1 - _0x445cc4 / _0x3efc94, 0x0, 0x1);
                }

                _0x2000ab.api.vdist(_0x1e1208.x, _0x1e1208.y, 0x0, _0x3f90ec.position.x, _0x3f90ec.position.y, 0x0) <= 3.25 && _0x493a49(true);
              }
            } else _0x3ed7cd > 0x0 && _0x4f2729.game.controls.isDisabledControlPressed(0x0, 0x18) && _0x3fe8fa < 0x64 && _0x3fe8fa++;

            if (_0x4f2729.game.controls.isDisabledControlPressed(0x0, 0x18) && Date.now() - _0x251085 > 0x3e8) {
              let _0x45df53 = Math.round(0.1 * _0x3fe8fa);

              0x0 === _0x45df53 ? _0x2000ab.api.play3DSound('fishing_rod_reels', {
                'volume': 0x32
              }) : _0x2000ab.api.play3DSound('fishing_rod_reels' + _0x45df53, {
                'volume': 0x32
              }), _0x251085 = Date.now();
            }

            _0x3fe8fa >= 0x64 && (_0x493a49(), _0x2000ab.api.displayHelpStringTrans('job.fisherman.fishingFail', false, true, 0x1388), _0x2000ab.api.play3DSound('fishing_rod_untie_break', {
              'volume': 0x64
            }));
          }
        }), _0x4f2729.events.add('render', () => {
          if (_0x1e3920 && _0x4f2729.peds.exists(_0x1e3920)) {
            const _0x3827ee = _0x1e3920.getCoords(true),
                  _0x501a94 = _0x4f2729.game.water.getWaterHeight(_0x3827ee.x, _0x3827ee.y, _0x3827ee.z, 0x0);

            if (_0x3ed7cd > 0x0) {
              const _0x4ba263 = _0x1e1a34 ? _0x501a94 + 0x1 : _0x112477.z + 1.25;

              _0x32f725(new _0x4f2729.Vector3(_0x3827ee.x, _0x3827ee.y, _0x4ba263), 'majestic_textures_001', 'fish', {
                'rgba': [..._0x39cf25(_0x443537, _0x5ee871, 0x1 - 0.01 * _0x3ed7cd), 0xc8],
                'heading': _0x282e20.X.getRot(0x2).z,
                'scaleX': 0.5,
                'scaleY': 0.5
              });
            }

            !_0x1e1a34 && Math.abs(_0x3827ee.z - _0x112477.z) > 0.05 && _0x3ed7cd > 0x0 ? _0x1e3920.setCoords(_0x3827ee.x, _0x3827ee.y, _0x112477.z, false, false, false, false) : _0x1e1a34 && Math.abs(_0x501a94 - 0.2 - _0x3827ee.z) > 0.2 && _0x1e3920.setCoords(_0x3827ee.x, _0x3827ee.y, _0x501a94 - 0.2, false, false, false, false), _0x4f2729.game.graphics.drawLightWithRange(_0x3827ee.x, _0x3827ee.y, _0x3827ee.z, 0xff, 0xff, 0xff, 0x5, 0x1), _0x4f2729.game.controls.disableControlAction(0x0, 0x16, true), _0x4f2729.game.controls.disableControlAction(0x0, 0x18, true), _0x4f2729.game.controls.disableControlAction(0x0, 0x1e, true), _0x4f2729.game.controls.disableControlAction(0x0, 0x1f, true), _0x4f2729.game.controls.disableControlAction(0x0, 0x21, true), _0x4f2729.game.controls.disableControlAction(0x0, 0x22, true), _0x4f2729.game.controls.disableControlAction(0x0, 0x23, true), _0x4f2729.game.controls.disableControlAction(0x0, 0x2c, true);
          }
        });

        const _0x19b14e = (_0x2b26e2, _0x42f0e0, _0xbe9378) => _0x4f2729.game.object.getObjectOffsetFromCoords(_0x2b26e2.x, _0x2b26e2.y, _0x2b26e2.z, _0x42f0e0, _0xbe9378.x, _0xbe9378.y, _0xbe9378.z),
              _0x32f725 = (_0x50f316, _0x386f7f, _0x4ee9c1, {
          scaleX: _0x190c3a = 0x1,
          scaleY: _0x1cef02 = 0x1,
          heading: _0x477b8e = 0x0,
          rgba: _0x45542d = [0xff, 0xff, 0xff, 0xff]
        }) => {
          if (!_0x4f2729.game.graphics.hasStreamedTextureDictLoaded(_0x386f7f)) return void _0x4f2729.game.graphics.requestStreamedTextureDict(_0x386f7f, true);

          const _0x19d181 = new _0x4f2729.Vector3(-0.5 * _0x190c3a, 0x0, 0.5 * _0x1cef02),
                _0x24d64f = new _0x4f2729.Vector3(0.5 * _0x190c3a, 0x0, 0.5 * _0x1cef02),
                _0x54a49c = new _0x4f2729.Vector3(-0.5 * _0x190c3a, 0x0, -0.5 * _0x1cef02),
                _0x416fd7 = new _0x4f2729.Vector3(0.5 * _0x190c3a, 0x0, -0.5 * _0x1cef02),
                _0x513927 = _0x19b14e(_0x50f316, _0x477b8e, _0x19d181),
                _0x48ca5f = _0x19b14e(_0x50f316, _0x477b8e, _0x24d64f),
                _0x2f4ddd = _0x19b14e(_0x50f316, _0x477b8e, _0x54a49c),
                _0x4c0585 = _0x19b14e(_0x50f316, _0x477b8e, _0x416fd7);

          _0x4f2729.game.graphics.drawSpritePoly(_0x513927.x, _0x513927.y, _0x513927.z, _0x2f4ddd.x, _0x2f4ddd.y, _0x2f4ddd.z, _0x48ca5f.x, _0x48ca5f.y, _0x48ca5f.z, _0x45542d[0x0], _0x45542d[0x1], _0x45542d[0x2], _0x45542d[0x3], _0x386f7f, _0x4ee9c1, 1e-9, 1e-9, 1e-9, 1e-9, 0.999999999, 1e-9, 0.999999999, 1e-9, 1e-9), _0x4f2729.game.graphics.drawSpritePoly(_0x2f4ddd.x, _0x2f4ddd.y, _0x2f4ddd.z, _0x4c0585.x, _0x4c0585.y, _0x4c0585.z, _0x48ca5f.x, _0x48ca5f.y, _0x48ca5f.z, _0x45542d[0x0], _0x45542d[0x1], _0x45542d[0x2], _0x45542d[0x3], _0x386f7f, _0x4ee9c1, 1e-9, 0.999999999, 1e-9, 0.999999999, 0.999999999, 1e-9, 0.999999999, 1e-9, 1e-9);
        },
              _0x39cf25 = (_0xde8e1f, _0x6070df, _0x52bc73) => {
          const _0x2116d8 = _0x52bc73,
                _0x1d8252 = 0x1 - _0x2116d8;

          return [Math.round(_0xde8e1f[0x0] * _0x2116d8 + _0x6070df[0x0] * _0x1d8252), Math.round(_0xde8e1f[0x1] * _0x2116d8 + _0x6070df[0x1] * _0x1d8252), Math.round(_0xde8e1f[0x2] * _0x2116d8 + _0x6070df[0x2] * _0x1d8252)];
        };
      },
      0x24f3: (_0x12bbbc, _0x406846, _0x1da3f9) => {
        'use strict';

        const a0_0x2fbeb1 = {
          _0x38f6d4: 0x235b,
          _0x4d2dad: 0x14d2,
          _0x57ce63: 0x1a99,
          _0x4d1cc3: 0x1a07,
          _0x1a4472: 0x1934
        },
              a0_0x2de1af = {
          _0xe161f3: 0x1d66,
          _0x2fabb8: 0x24fe,
          _0x1ceb0d: 0x535,
          _0x19e562: 0x74c,
          _0x458f29: 0x535,
          _0x4c3d05: 0x185e,
          _0x595890: 0x1293,
          _0x4ff32d: 0x1de9,
          _0x51d512: 0x2587,
          _0x13b9ef: 0x24ce,
          _0x51486d: 0x4b9,
          _0x5c0611: 0x1a07,
          _0x58e94d: 0x1142
        },
              a0_0x2e4651 = {
          _0x1e6bf6: 0xb4a,
          _0x5852a3: 0x1ae5,
          _0x5a1cf2: 0xb4a,
          _0xb8d3dc: 0xe6d,
          _0x1bae8b: 0x14d2,
          _0x1148c9: 0xd9b,
          _0x36e9c4: 0x1172,
          _0x41261c: 0x535,
          _0x42ef00: 0x1b65,
          _0x4f770a: 0x1a5,
          _0x34af7e: 0x2682
        },
              a0_0x198ad3 = {
          _0x477a70: 0xa8e,
          _0x40863c: 0x17f
        },
              a0_0x1d790d = {
          _0x384649: 0x1dda
        },
              a0_0x5e026e = {
          _0x18108e: 0x2405,
          _0x700616: 0x6ba,
          _0x3788b2: 0x234e,
          _0x14ee9b: 0xa8e,
          _0x55f8f1: 0x21d5,
          _0x32ed3a: 0x1d2
        },
              a0_0x57a1b = {
          _0x327632: 0x464,
          _0x13fda4: 0x204d,
          _0x2446d4: 0x4e4,
          _0x122cbb: 0x1edc,
          _0x5a32f1: 0x12e4,
          _0x5a08bc: 0x14d2,
          _0x47bae7: 0x1a4f,
          _0x5cce5e: 0x535,
          _0x1ab740: 0x1de9,
          _0x2d642a: 0x24ce,
          _0x40440a: 0x2448
        },
              a0_0x1e5d27 = {
          _0x1a17cb: 0x1d66,
          _0x15a079: 0x1a2c,
          _0xb6b1c: 0x16c5,
          _0x4c472d: 0xa8e,
          _0x3a020c: 0x17f,
          _0x384fdb: 0x535,
          _0x1b636a: 0x14d2,
          _0xa9b01a: 0x1da5
        },
              a0_0x2e4ecb = {
          _0xdb53c4: 0x253d,
          _0x2545c3: 0x1edc,
          _0x1b1d9b: 0x235b,
          _0x55acc9: 0x185e,
          _0x1abbf3: 0x535,
          _0x4ef0f2: 0x1099,
          _0x46c280: 0xf86
        };

        _0x1da3f9.r(_0x406846);

        var _0x4ce8f2 = _0x1da3f9(0x16a21),
            _0x13bcef = _0x1da3f9(0x3db3),
            _0x3f150f = _0x1da3f9(0x66f9),
            _0x4b280a = _0x1da3f9(0x161cd);

        const _0xa09474 = _0x4b280a.players.local;

        let _0x34a887,
            _0x35fda7,
            _0xfffcc5 = false,
            _0x27dd2c = false,
            _0x4215b7 = null,
            _0x2cbe06 = [],
            _0x28c34f = false;

        _0x4b280a.events.add('playerEnterColshape', _0x53c1b3 => {
          if (_0x4ce8f2.api.isAuthed() && !_0x4b280a.players.local.vehicle && _0x2cbe06.includes(_0x53c1b3)) {
            if (_0x4b280a.players.local.activeItemId) return _0x4ce8f2.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x27dd2c = true, _0x4215b7 = _0x53c1b3, _0x4ce8f2.api.displayHelpStringTrans('displayHelpString.toCleanFloor', false, true, 0x1388);
          }
        }), _0x4b280a.events.add('playerExitColshape', _0x54c560 => {
          _0x4ce8f2.api.isAuthed() && _0x2cbe06.includes(_0x54c560) && (_0x27dd2c = false, _0x4215b7 = null, _0x4b280a.game.ui.clearHelp(true));
        }), _0x4b280a.events.add('keys.e', () => {
          _0x4215b7 && (_0x4b280a.game.ui.clearHelp(true), _0x2cbe06 = _0x2cbe06.filter(_0x2bb9f0 => _0x2bb9f0 !== _0x4215b7), _0x4b280a.blips.exists(_0x4215b7.blip) && _0x4215b7.blip.destroy(), _0x4b280a.colshapes.exists(_0x4215b7) && _0x4215b7.destroy(), _0x4215b7 = null, _0x35fda7 && (_0x35fda7 = _0x35fda7.destroy()), _0x4ce8f2.api.stopAnim(), _0x2abdba(), 0x0 == _0x2cbe06.length && _0x4b280a.events.callRemote('4064900399'));
        }), _0x4b280a.events.add('job.floorwasher.initJob', async _0x482d3b => {
          _0xfffcc5 = true, ['ems', 'lspd', 'sheriff', 'army', 'news', 'gov'].includes(_0x482d3b) && (_0x4b280a.attachments.addLocal('mop'), _0x4b280a.events.callRemote('557376767'), await _0x4ce8f2.api.taskPlayAnim('move_mop_arms', 'idle', 0x31, true), _0x28c34f = true), _0xa09474.setWeaponMovementClipset('move_ped_wpn_bucket'), _0xa09474.setMovementClipset('move_ped_bucket', 0x1);
        }), _0x4b280a.events.add('job.floorwasher.setUpPoints', _0x1a10f7 => {
          (_0x1a10f7 = JSON.parse(_0x1a10f7)).forEach(_0x2c2e19 => {
            let _0x5a3d4f = _0x4b280a.colshapes.newSphere(_0x2c2e19[0x0], _0x2c2e19[0x1], _0x2c2e19[0x2], 0x1, 0x0);

            _0x5a3d4f.blip = _0x4b280a.blips.new(0x1, new _0x4b280a.Vector3(_0x2c2e19[0x0], _0x2c2e19[0x1], _0x2c2e19[0x2]), {
              'name': 'Грязный пол',
              'scale': 0.8,
              'color': 0x2
            }), (0x0, _0x13bcef.markAsTranslatedBlip)(_0x5a3d4f.blip, 'blips.dirtyFloor'), _0x2cbe06.push(_0x5a3d4f);
          });
        }), _0x4b280a.events.add('job.floorwasher.finishJob', () => {
          _0xfffcc5 = false, _0x28c34f = false, _0x4b280a.attachments.removeLocal('mop'), _0x4b280a.attachments.removeLocal('bucket'), _0x2cbe06.forEach(_0x3060fc => {
            _0x3060fc.blip && (_0x3060fc.blip = _0x3060fc.blip.destroy()), _0x3060fc && (_0x3060fc = _0x3060fc.destroy());
          }), _0x35fda7 && (_0x35fda7 = _0x35fda7.destroy()), _0x2cbe06 = [], _0x34a887 && (_0x34a887 = _0x34a887.destroy()), _0x4b280a.events.call('resetClothes'), _0xa09474.resetMovementClipset(0x0), _0xa09474.resetWeaponMovementClipset(), _0x4ce8f2.api.stopAnim(), _0x4b280a.events.call('buttonPress.stop');
        }), _0x4b280a.events.add('buttonPress.floorwasher.stop', () => {
          _0x153c2d();
        });

        const _0x2abdba = async () => {
          _0x28c34f = false, _0x4ce8f2.api.usingSystemAnim(true);

          const _0x5a1317 = await _0x4ce8f2.api.taskPlayAnim('missfbi_s4mop', 'put_down_bucket', 0x2, true, false);

          _0x4b280a.attachments.addLocal('bucket'), await _0x4b280a.game.sleep(0x3e8 * _0x5a1317), _0x4b280a.attachments.removeLocal('bucket');

          let _0x5c7350 = _0xa09474.position,
              _0x385ee1 = new _0x4b280a.Vector3(0.5, 0.5, 0x0),
              _0x3cef9a = _0xa09474.getHeading();

          const _0x45388e = _0x4b280a.game.object.getObjectOffsetFromCoords(_0x5c7350.x, _0x5c7350.y, _0x4b280a.game.gameplay.getGroundZFor3dCoord(_0x5c7350.x, _0x5c7350.y, _0x5c7350.z, 0xf5, true), _0x3cef9a, _0x385ee1.x, _0x385ee1.y, _0x385ee1.z);

          _0x35fda7 = await (0x0, _0x3f150f.n)(_0x4b280a.game.joaat('prop_cs_mopbucket_01'), new _0x4b280a.Vector3(_0x45388e.x, _0x45388e.y, _0x45388e.z), {
            'rotation': new _0x4b280a.Vector3(0x0, 0x0, _0xa09474.getHeading()),
            'alpha': 0xff,
            'dimension': 0x0
          });

          let _0x193efd = ['idle_scrub_small_player', 'idle_scrub'],
              _0x22dca2 = _0x193efd[Math.floor(Math.random() * _0x193efd.length)];

          await _0x4ce8f2.api.taskPlayAnim('missfbi_s4mop', _0x22dca2, 0x1, true, false), _0x4b280a.events.call('buttonPress.init', 'floorwasher');
        },
              _0x153c2d = async () => {
          _0x4ce8f2.api.stopAnim(), _0x35fda7 && (_0x35fda7 = _0x35fda7.destroy()), _0x4b280a.attachments.addLocal('bucket');

          const _0x4e61e0 = await _0x4ce8f2.api.taskPlayAnim('missfbi_s4mop', 'pickup_bucket_0', 0x2, true, false);

          await _0x4b280a.game.sleep(0x3e8 * _0x4e61e0), _0x4ce8f2.api.stopAnim(), _0x4b280a.attachments.removeLocal('bucket'), await _0x4ce8f2.api.taskPlayAnim('move_mop_arms', 'idle', 0x30, true, false), _0x4b280a.events.callRemote('2577106774'), _0x4ce8f2.api.usingSystemAnim(false), _0x28c34f = true;
        };

        let _0x34e034 = 0x0;
        _0x4b280a.events.add('render2', () => {
          _0x28c34f && (_0x4b280a.game.controls.disableControlAction(0x0, 0x16, true), _0x4ce8f2.api.ePress(_0x34e034, 0x7d0) || (_0x34e034 = _0x4ce8f2.api.ePressUpdate(0x7d0), _0x4b280a.players.local.isPlayingAnim('move_mop_arms', 'idle', 0x31) || _0x4ce8f2.api.taskPlayAnim('move_mop_arms', 'idle', 0x31, true), _0xa09474.vehicle && (_0x4b280a.events.callRemote('2958836261'), _0x4ce8f2.api.longNotifyTrans('job.floorwasher.cantWorkInVehicle', 'error'))));
        }), _0x4b280a.events.add('time.everySec', () => {
          _0xfffcc5 && _0x4b280a.players.local.vehicle && (_0xfffcc5 = false, _0x4b280a.events.callRemote('1044456582'), _0x4ce8f2.api.longNotifyTrans('job.floorwasher.cantWorkInVehicle', 'error'));
        });
      },
      0xa6cf: (_0x373d22, _0x2e1144, _0x579ca7) => {
        'use strict';

        const a0_0x680a7f = {
          _0x25d740: 0x535,
          _0x5ee86b: 0x16cc,
          _0x221a88: 0x535,
          _0x299e8e: 0x1c66,
          _0xcca1a9: 0xc18,
          _0x5c1328: 0x1d66,
          _0x4dc9b3: 0x1870,
          _0x5f358b: 0x19d2,
          _0x502c94: 0x1da5,
          _0x3a4605: 0x23bd,
          _0x132e53: 0x12b7
        },
              a0_0xc69ee8 = {
          _0xa31e7a: 0x1edc,
          _0x479a72: 0x1d66
        },
              a0_0x169f2f = {
          _0x411020: 0x1dda
        };

        _0x579ca7.r(_0x2e1144);

        var _0x2de015 = _0x579ca7(0x16a21),
            _0x20ee6a = _0x579ca7(0x3db3),
            _0x145bfa = _0x579ca7(0x161cd);

        const _0x4fc0ed = _0x145bfa.players.local;

        let _0x2f0b52,
            _0x27e088 = [];

        _0x145bfa.events.add('job.gangjob.setupPoints', _0x4cee9b => {
          const a0_0x870b59 = {
            _0x4bbce9: 0x1aab,
            _0x486d3d: 0xda6,
            _0x27ee43: 0x1d55,
            _0x3990be: 0x1d4e,
            _0x2c9b59: 0xa8e,
            _0x223757: 0x1b2d,
            _0x2a87a6: 0x1d2
          };
          _0x145bfa.events.call('job.gangjob.finishJob'), _0x4cee9b && (_0x4cee9b = JSON.parse(_0x4cee9b)).forEach(_0x2a17b6 => {
            let _0x2181e3 = _0x145bfa.colshapes.newSphere(_0x2a17b6.x, _0x2a17b6.y, _0x2a17b6.z, 0x1, 0x0);

            _0x2181e3.marker = _0x145bfa.markers.new(0x1, new _0x145bfa.Vector3(_0x2a17b6.x, _0x2a17b6.y, _0x2a17b6.z - 0x1), 0x1, {
              'color': [0x34, 0x98, 0xdb, 0x64]
            }), _0x2181e3.blip = _0x145bfa.blips.new(0x1, new _0x145bfa.Vector3(_0x2a17b6.x, _0x2a17b6.y, _0x2a17b6.z), {
              'name': 'Точка закладки',
              'scale': 0.8,
              'shortRange': false,
              'color': 0x5
            }), (0x0, _0x20ee6a.markAsTranslatedBlip)(_0x2181e3.blip, 'blips.unloadZone'), _0x27e088.push(_0x2181e3);
          });
        }), _0x145bfa.events.add('playerEnterColshape', _0x3ec20b => {
          if (_0x2de015.api.isAuthed() && !_0x4fc0ed.vehicle && null == _0x4fc0ed.getVariable('playerInTrunk') && _0x27e088.includes(_0x3ec20b)) {
            if (_0x4fc0ed.activeItemId) return _0x2de015.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x2f0b52 = _0x3ec20b, _0x2de015.api.displayHelpStringTrans('displayHelpString.layItem', false, true, 0x1388);
          }
        }), _0x145bfa.events.add('playerExitColshape', _0x51fbbc => {
          _0x2de015.api.isAuthed() && _0x27e088.includes(_0x51fbbc) && (_0x2f0b52 = null, _0x145bfa.game.ui.clearHelp(true));
        }), _0x145bfa.events.add('keys.e', () => {
          _0x2f0b52 && null == _0x4fc0ed.getVariable('playerInTrunk') && (_0x145bfa.game.ui.clearHelp(true), _0x27e088 = _0x27e088.filter(_0x18392a => _0x18392a !== _0x2f0b52), _0x145bfa.blips.exists(_0x2f0b52.blip) && _0x2f0b52.blip.destroy(), _0x145bfa.markers.exists(_0x2f0b52.marker) && _0x2f0b52.marker.destroy(), _0x145bfa.colshapes.exists(_0x2f0b52) && _0x2f0b52.destroy(), _0x2f0b52 = null, _0x2de015.api.stopAnim(), _0x173963());
        }), _0x145bfa.events.add('job.gangjob.finishJob', () => {
          const a0_0xb2cedf = {
            _0x48e154: 0xa8e,
            _0x47be14: 0x17f,
            _0x118586: 0x22ba
          };
          _0x27e088.forEach(_0xe7c6f5 => {
            _0xe7c6f5.blip && _0xe7c6f5.blip.destroy(), _0xe7c6f5.marker && _0xe7c6f5.marker.destroy(), _0xe7c6f5 && _0xe7c6f5.destroy();
          }), _0x2f0b52 = null, _0x27e088 = [];
        });

        const _0x173963 = async () => {
          if (!_0x145bfa.inventory.hasItem(_0x4fc0ed, 0x129)) return _0x2de015.api.longNotifyTrans('job.gangjob.noDrugTab', 'error');

          _0x2de015.api.usingSystemAnim(true);

          const _0xc2dfc1 = await _0x2de015.api.taskPlayAnim('anim@mp_fireworks', 'place_firework_3_box', 0x0, false);

          await _0x145bfa.game.sleep(0x3e8 * _0xc2dfc1), 0x0 === _0x27e088.length ? _0x145bfa.events.callRemote('3618095511') : _0x145bfa.events.callRemote('2382239249'), _0x2de015.api.usingSystemAnim(false);
        };
      },
      0x26d: (_0x1aef98, _0x53b990, _0xe7337f) => {
        'use strict';

        const a0_0x50c328 = {
          _0x4aa55b: 0x253d,
          _0x7b07c8: 0xf52,
          _0x4e9aaf: 0x5cd,
          _0x402003: 0x1157,
          _0x127731: 0x771,
          _0x693ac2: 0x4b9,
          _0x52d2f8: 0x535,
          _0x4b8127: 0x1318,
          _0xb92ee: 0x3b1,
          _0xa0ef2a: 0x16c5,
          _0xb7dc41: 0x2610,
          _0x25eb1d: 0x3b1,
          _0xe5b6ca: 0x2080,
          _0x2f6502: 0x1f30,
          _0x1d2165: 0x1f30,
          _0x42a767: 0x1a07,
          _0x3d5a5: 0x2610,
          _0x251b9e: 0xf86,
          _0x4f0a7d: 0x9d5,
          _0x27a970: 0x18b1,
          _0x3f784d: 0x18b1,
          _0x584779: 0xa8e,
          _0x51096a: 0x14d2,
          _0x2d706d: 0x1da5,
          _0x2a5348: 0x1a07,
          _0xa3004b: 0x4a9
        },
              a0_0xf4ca6d = {
          _0x179d96: 0x14d2,
          _0x270022: 0x793,
          _0x2a85c7: 0x1987,
          _0x4e9284: 0x1dda,
          _0x36277a: 0x1128,
          _0x101be6: 0xf82,
          _0x2d5b54: 0x1d55,
          _0x524f28: 0xa8e,
          _0x121d74: 0x4b9
        },
              a0_0xb87098 = {
          _0x28f1b9: 0x1d66,
          _0x133ab3: 0x59d,
          _0x468f92: 0x18b1,
          _0x2a014d: 0x17f,
          _0x97d00c: 0x535,
          _0x3d2765: 0x1de9,
          _0x3905f8: 0x12d9,
          _0xd6bbc1: 0x1d66,
          _0x1a035f: 0x1d7c,
          _0x33819d: 0x286
        },
              a0_0x275593 = {
          _0x450c89: 0x16c5,
          _0x178a62: 0x18b1,
          _0x294b1b: 0xa8e,
          _0x5d43ec: 0x17f,
          _0x480144: 0x1de9,
          _0x29aacf: 0x1ba4,
          _0x8dfad0: 0x10ba,
          _0x2c90ca: 0x1d66,
          _0x28a236: 0x1870,
          _0x2179a4: 0x535,
          _0x3c08af: 0x1de9,
          _0x1899a1: 0x1ba4,
          _0xcfa515: 0x24ce,
          _0x4c9fd1: 0x1c66,
          _0x19f40a: 0x186b,
          _0x42c0bc: 0x13f4,
          _0x43ce4b: 0x1aab,
          _0x4e3d0c: 0x2405,
          _0x263ae5: 0x6ba,
          _0x4cb070: 0x1d55
        };

        _0xe7337f.r(_0x53b990);

        var _0x34b4ca = _0xe7337f(0x16a21),
            _0x321d6e = (_0xe7337f(0x176d8), _0xe7337f(0x3db3)),
            _0x5bf3d9 = _0xe7337f(0x915a),
            _0x26a1f0 = _0xe7337f(0x161cd);

        const _0x559240 = _0x26a1f0.players.local;

        let _0x1b8dd2,
            _0x42ca66,
            _0x39be32,
            _0x4d79bf,
            _0x149802,
            _0x40ead8 = null,
            _0xff5e13 = false;

        _0x26a1f0.events.add('keys.e', () => {
          if (_0x34b4ca.api.isAuthed()) return _0x149802 && _0x149802 === _0x1b8dd2 ? (_0x10fb51(), void (_0x149802 = null)) : _0x149802 && _0x149802 === _0x42ca66 ? (_0x1a472b(), void (_0x149802 = null)) : undefined;
        });

        const _0x10fb51 = async () => {
          _0x26a1f0.game.ui.clearHelp(true);

          const _0x472a4d = _0x33f1b5();

          if (!_0x26a1f0.vehicles.exists(_0x472a4d)) return;
          _0x1b8dd2 && _0x1b8dd2.checkpoint && _0x1b8dd2.checkpoint.destroy(), _0x1b8dd2 && _0x1b8dd2.blip && _0x1b8dd2.blip.destroy(), _0x1b8dd2 && _0x1b8dd2.destroy(), _0x34b4ca.api.usingSystemAnim(true);

          const _0x3738f6 = await _0x34b4ca.api.taskPlayAnim('anim@heists@narcotics@trash', 'pickup', 0x0, false);

          _0x26a1f0.attachments.addLocal(_0x26a1f0.game.joaat('trash')), await _0x26a1f0.game.sleep(0x3e8 * _0x3738f6), _0x34b4ca.api.taskPlayAnim('anim@heists@narcotics@trash', 'idle', 0x31, true), _0x34b4ca.api.usingSystemAnim(false);

          const _0x4eb991 = _0x26a1f0.game.gameplay.getModelDimensions(_0x472a4d.getModel()),
                _0x2d0a5a = _0x4eb991.max.y - _0x4eb991.min.y,
                _0x15f734 = _0x472a4d.getOffsetFromInWorldCoords(0x0, -_0x2d0a5a / 0x2, 0x0);

          _0x42ca66 = _0x26a1f0.colshapes.newSphere(_0x15f734.x, _0x15f734.y, _0x15f734.z, 0x2, 0x0), _0x42ca66.checkpoint = _0x26a1f0.checkpoints.new(0x0, new _0x26a1f0.Vector3(_0x15f734.x, _0x15f734.y, _0x15f734.z - 0.5), 0x2, {
            'direction': new _0x26a1f0.Vector3(_0x15f734.x, _0x15f734.y, _0x15f734.z),
            'color': [0xf1, 0xc4, 0xf, 0xff],
            'visible': true,
            'dimension': 0x0
          }), _0x42ca66.blip = _0x26a1f0.blips.new(0x1, new _0x26a1f0.Vector3(_0x15f734.x, _0x15f734.y, _0x15f734.z), {
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x321d6e.markAsTranslatedBlip)(_0x42ca66.blip, 'blips.throwTrashZone');
        },
              _0x1a472b = async () => {
          _0x26a1f0.game.ui.clearHelp(true), _0x42ca66 && _0x42ca66.checkpoint && _0x42ca66.checkpoint.destroy(), _0x42ca66 && _0x42ca66.blip && _0x42ca66.blip.destroy(), _0x42ca66 && _0x42ca66.destroy(), _0x42ca66 = null, _0x34b4ca.api.usingSystemAnim(true);

          const _0x458bb1 = await _0x34b4ca.api.taskPlayAnim('anim@heists@narcotics@trash', 'drop_front', 0x30, false, false);

          await _0x26a1f0.game.sleep(_0x458bb1), _0x34b4ca.api.usingSystemAnim(false), _0x26a1f0.attachments.removeLocal(_0x26a1f0.game.joaat('trash')), _0x26a1f0.events.callRemote('446354779');
        };

        _0x26a1f0.events.add('setTrashPoint', (_0x4f84bd, _0x409f52 = true, _0x564d72) => {
          _0x4f84bd && (_0x564d72 && _0x26a1f0.events.call('job.garbagecollector.resetAllCP'), _0x26a1f0.events.call('gps.setPoint', _0x4f84bd, _0x409f52), _0x4f84bd = JSON.parse(_0x4f84bd), _0x1b8dd2 = _0x26a1f0.colshapes.newSphere(_0x4f84bd.x, _0x4f84bd.y, _0x4f84bd.z, 3.5, 0x0), _0x1b8dd2.checkpoint = _0x26a1f0.checkpoints.new(0x0, new _0x26a1f0.Vector3(_0x4f84bd.x, _0x4f84bd.y, _0x4f84bd.z - 0x1), 1.5, {
            'direction': new _0x26a1f0.Vector3(_0x4f84bd.x, _0x4f84bd.y, _0x4f84bd.z - 0x1),
            'color': [0xf1, 0xc4, 0xf, 0xff],
            'visible': true,
            'dimension': 0x0
          }), _0x1b8dd2.blip = _0x26a1f0.blips.new(0x1, new _0x26a1f0.Vector3(_0x4f84bd.x, _0x4f84bd.y, _0x4f84bd.z), {
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x321d6e.markAsTranslatedBlip)(_0x1b8dd2.blip, 'blips.trashZone'), _0x1b8dd2.blip.setRoute(true), _0x559240.vehicle && (_0x39be32 = _0x559240.vehicle));
        }), _0x26a1f0.events.add('returnCollectedTrash', _0x76505b => {
          const a0_0x368e05 = {
            _0x423301: 0x50c,
            _0x5203c5: 0x535,
            _0x3b94a2: 0x1f30
          };

          (_0x76505b = JSON.parse(_0x76505b)).forEach(_0x2e58d8 => {
            _0x2e58d8.dist = _0x34b4ca.api.vdist(_0x559240.position.x, _0x559240.position.y, _0x559240.position.z, _0x2e58d8.x, _0x2e58d8.y, _0x2e58d8.z);
          });

          let _0x323760 = Math.min(..._0x76505b.map(_0x5da8df => _0x5da8df.dist));

          (_0x76505b = _0x76505b.filter(_0x3e84fc => _0x3e84fc.dist === _0x323760)[0x0]).title = _0x34b4ca.api.language.translatePlayer('gps.waypoints.garbageDump'), _0x26a1f0.events.call('gps.setPoint', JSON.stringify(_0x76505b), false), _0x4d79bf = _0x26a1f0.colshapes.newSphere(_0x76505b.x, _0x76505b.y, _0x76505b.z, 0x5, 0x0), _0x4d79bf.checkpoint = _0x26a1f0.checkpoints.new(0x4, new _0x26a1f0.Vector3(_0x76505b.x, _0x76505b.y, _0x76505b.z - 0.5), 0x5, {
            'direction': new _0x26a1f0.Vector3(_0x76505b.x, _0x76505b.y, _0x76505b.z),
            'color': [0xf1, 0xc4, 0xf, 0xff],
            'visible': true,
            'dimension': 0x0
          }), _0x4d79bf.blip = _0x26a1f0.blips.new(0x1, new _0x26a1f0.Vector3(_0x76505b.x, _0x76505b.y, _0x76505b.z), {
            'name': 'Точка разгрузки мусора',
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x321d6e.markAsTranslatedBlip)(_0x4d79bf.blip, 'blips.unloadZone');
        }), _0x26a1f0.events.add('playerEnterColshape', _0x2c3745 => {
          if (_0x34b4ca.api.isAuthed()) {
            if (0x2 !== _0x34b4ca.api.getLocalVariable('isWorking') && _0x2c3745.garbageId && !_0x559240.vehicle && Math.abs(_0x2c3745.pos.z - _0x559240.position.z) < 0x2 && (_0x40ead8 = _0x2c3745, _0x34b4ca.api.displayHelpStringTrans('displayHelpString.toSneakInTrash', false, true, 0x1388)), _0x1b8dd2 && _0x2c3745 === _0x1b8dd2) {
              if (_0x559240.vehicle) return _0x34b4ca.api.longNotifyTrans('job.garbagecollector.leaveVehicleToTakeTrash', 'default', 0xbb8, true);

              const _0x5994d1 = _0x33f1b5();

              if (!_0x26a1f0.vehicles.exists(_0x5994d1)) return _0x34b4ca.api.longNotifyTrans('job.gargabecollector.vehicleFarAway', 'default', 0xbb8, true);
              if (_0x34b4ca.api.vdist(_0x559240.position.x, _0x559240.position.y, _0x559240.position.z, _0x5994d1.position.x, _0x5994d1.position.y, _0x5994d1.position.z) > 0xbb8) return _0x34b4ca.api.longNotifyTrans('job.gargabecollector.vehicleFarAway', 'default', 0xbb8, true);
              _0x34b4ca.api.displayHelpStringTrans('displayHelpString.toTakeTrash', false, true, 0x1388), _0x149802 = _0x1b8dd2;
            }

            if (_0x42ca66 && _0x2c3745 == _0x42ca66) {
              if (_0x559240.vehicle) return;
              _0x34b4ca.api.displayHelpStringTrans('displayHelpString.toThrowTrash', false, true, 0x1388), _0x149802 = _0x42ca66;
            }

            if (_0x4d79bf && _0x2c3745 == _0x4d79bf) {
              if (!_0x559240.vehicle) return;
              _0x4d79bf && _0x4d79bf.checkpoint && _0x4d79bf.checkpoint.destroy(), _0x4d79bf && _0x4d79bf.blip && _0x4d79bf.blip.destroy(), _0x4d79bf && _0x4d79bf.destroy(), _0x4d79bf = null, _0x26a1f0.events.callRemote('1332964420'), _0x34b4ca.api.longNotifyTrans('job.garbagecollector.unloadedTrash', 'warn', 0xbb8, true);
            }
          }
        }), _0x26a1f0.events.add('playerExitColshape', _0x4ff8c0 => {
          _0x34b4ca.api.isAuthed() && (0x2 !== _0x34b4ca.api.getLocalVariable('isWorking') && _0x4ff8c0.garbageId && (_0xe7337f.g.interfaces.inventory && _0x26a1f0.inventory.close(), _0x40ead8 = null, _0x26a1f0.game.ui.clearHelp(true)), _0x4ff8c0 === _0x1b8dd2 && (_0x149802 = null, _0x26a1f0.game.ui.clearHelp(true)), _0x4ff8c0 == _0x42ca66 && (_0x149802 = null, _0x26a1f0.game.ui.clearHelp(true)), _0x4ff8c0 == _0x4d79bf && (_0x149802 = null, _0x26a1f0.game.ui.clearHelp(true)));
        }), _0x26a1f0.events.add('keys.e', () => {
          _0xe7337f.g.currentInterface || _0x40ead8 && (_0xff5e13 || (_0x26a1f0.events.callRemote('2851110177', _0x40ead8.garbageId), _0x40ead8 = null, _0xff5e13 = true));
        }), _0x26a1f0.events.add('inventoryApi.getGarbageDataResult', () => {
          _0xff5e13 = false;
        }), _0x26a1f0.events.add('job.garbagecollector.resetAllCP', () => {
          _0x26a1f0.colshapes.exists(_0x4d79bf) && _0x26a1f0.checkpoints.exists(_0x4d79bf.checkpoint) && (_0x4d79bf.checkpoint = _0x4d79bf.checkpoint.destroy()), _0x26a1f0.colshapes.exists(_0x4d79bf) && _0x26a1f0.blips.exists(_0x4d79bf.blip) && (_0x4d79bf.blip = _0x4d79bf.blip.destroy()), _0x26a1f0.colshapes.exists(_0x4d79bf) && (_0x4d79bf = _0x4d79bf.destroy()), _0x26a1f0.colshapes.exists(_0x42ca66) && _0x26a1f0.checkpoints.exists(_0x42ca66.checkpoint) && (_0x42ca66.checkpoint = _0x42ca66.checkpoint.destroy()), _0x26a1f0.colshapes.exists(_0x42ca66) && _0x26a1f0.blips.exists(_0x42ca66.blip) && (_0x42ca66.blip = _0x42ca66.blip.destroy()), _0x26a1f0.colshapes.exists(_0x42ca66) && (_0x42ca66 = _0x42ca66.destroy()), _0x26a1f0.colshapes.exists(_0x1b8dd2) && _0x26a1f0.checkpoints.exists(_0x1b8dd2.checkpoint) && (_0x1b8dd2.checkpoint = _0x1b8dd2.checkpoint.destroy()), _0x26a1f0.colshapes.exists(_0x1b8dd2) && _0x26a1f0.blips.exists(_0x1b8dd2.blip) && (_0x1b8dd2.blip = _0x1b8dd2.blip.destroy()), _0x26a1f0.colshapes.exists(_0x1b8dd2) && (_0x1b8dd2 = _0x1b8dd2.destroy());
        });

        const _0x33f1b5 = () => {
          try {
            return _0x5bf3d9.default.party.vehicles[0x0];
          } catch (_0x196625) {
            _0x34b4ca.api.sendError(_0x196625);
          }
        };
      },
      0xbbb6: (_0x58afc1, _0xa29cc4, _0x15c84b) => {
        'use strict';

        const a0_0x57620a = {
          _0x24d1ff: 0x1864,
          _0x18e9f8: 0x4b9,
          _0x2860fe: 0x1a35,
          _0x2942a3: 0x1121,
          _0x527e8e: 0x14d2,
          _0xc63151: 0x1da5
        },
              a0_0xae534 = {
          _0x9b6eb: 0x183f,
          _0x41783c: 0x535,
          _0x5cb1b3: 0x133c,
          _0x102af6: 0x19d6,
          _0x2eca5b: 0xe74,
          _0x447baa: 0x196a,
          _0x5a0d96: 0x20c4,
          _0xf10bc6: 0x14d2,
          _0x24edbe: 0x116a,
          _0x41f307: 0xf2f,
          _0x3e5aec: 0x1e56,
          _0x42765e: 0x23e4,
          _0x149830: 0x92f,
          _0x3ae34b: 0x1a5,
          _0x196d6e: 0x2319,
          _0x3e9fa6: 0x535,
          _0x217f2a: 0x116a
        },
              a0_0x44c1aa = {
          _0x298e20: 0xd11,
          _0x42d174: 0x19d2,
          _0x54736f: 0x22c8,
          _0x5472a5: 0x1d8,
          _0xcdf998: 0x22b2,
          _0x788d1d: 0x1edc,
          _0x36c783: 0x1d66,
          _0x3a5fae: 0x1c23,
          _0x505f16: 0xf7a,
          _0xc45d2f: 0xc95,
          _0x37d7dd: 0x22c8,
          _0x415274: 0x4b9,
          _0x184e4a: 0x163e,
          _0x203276: 0x535,
          _0x593d26: 0x2530,
          _0xa71eee: 0x1eb3
        },
              a0_0x3a58e9 = {
          _0x4bb960: 0x535,
          _0x342255: 0xc95,
          _0x4045f7: 0xd11,
          _0x195fdf: 0x22b2,
          _0x3299a7: 0xcf8,
          _0x2877e1: 0x4b9,
          _0x2a3beb: 0x623,
          _0x57da22: 0x2001,
          _0x567a62: 0x21e0,
          _0x55d2ce: 0xef6,
          _0x141014: 0x25e1,
          _0x41997d: 0x1820,
          _0x365b47: 0x1934,
          _0x411d79: 0x535,
          _0x568dce: 0x1f30,
          _0x31e8d6: 0x535,
          _0x57e9a2: 0x1a07,
          _0x53c8e1: 0x14d2,
          _0x350276: 0x1a8f,
          _0x486386: 0x4cc,
          _0x17f68a: 0x4b9,
          _0x8d42f3: 0x1af5,
          _0x36ed5e: 0xf86
        },
              a0_0x1c7246 = {
          _0x301d76: 0x16c5,
          _0x58ea3e: 0x25e1,
          _0x42ad21: 0x17f,
          _0x45b823: 0x18b1,
          _0x27bd4e: 0x16c5
        },
              a0_0x5c67da = {
          _0x4f0064: 0xe6d
        },
              a0_0x418942 = {
          _0xc1d456: 0x6ba
        },
              a0_0x53426b = {
          _0x18a09e: 0xcf8
        },
              a0_0x4d59c7 = {
          _0x7aa43: 0x25e1,
          _0x1f2288: 0x1aab,
          _0x578e4: 0x1dc6,
          _0xab5ef2: 0x18b1,
          _0x49a6e3: 0x1dc6,
          _0x37489b: 0x1dc6,
          _0x1534d5: 0xef6
        },
              a0_0x3817b3 = {
          _0x21e616: 0x1a5,
          _0x29cabf: 0x14c0,
          _0x18f515: 0x14d2,
          _0x276279: 0x16c5,
          _0xd15928: 0x25e1,
          _0x57fd08: 0x17f,
          _0xbda098: 0x6ba,
          _0x394a79: 0xa8e,
          _0xb9dc0f: 0x17f
        };

        _0x15c84b.r(_0xa29cc4);

        var _0x5c0f68 = _0x15c84b(0x16a21),
            _0x31bc64 = _0x15c84b(0x5d14),
            _0x386a4d = _0x15c84b(0x176d8),
            _0x4ca3f4 = _0x15c84b(0x915a),
            _0x460638 = _0x15c84b(0x3db3),
            _0x52480e = _0x15c84b(0x161cd);

        const _0x6e28ae = _0x52480e.players.local,
              _0x195703 = {
          'loadWaiting': false
        };

        let _0x24e874,
            _0x521bac,
            _0x32cb1c,
            _0x1ef6f6,
            _0x5b0067 = [],
            _0x2e99e2 = [],
            _0x852f0c = 0x0,
            _0xed2591 = {},
            _0x1e0a84 = false,
            _0xe29908 = new _0x52480e.Vector3(0x0, 0x0, 0x0);

        _0x52480e.events.add('job.gopostal.failJob', () => {
          _0x52480e.events.call('job.gopostal.clearLoadBlip'), _0x52480e.events.call('job.gopostal.clearLoadPoint'), _0xed2591 && (_0x52480e.colshapes.exists(_0xed2591.shape) && _0xed2591.shape.destroy(), _0x52480e.checkpoints.exists(_0xed2591.checkpoint) && _0xed2591.checkpoint.destroy(), _0x52480e.blips.exists(_0xed2591.blip) && _0xed2591.blip.destroy(), _0xed2591 = null), _0x32cb1c = undefined;
        }), _0x52480e.events.add('job.gopostal.initLoadBlip', _0x12317f => {
          const a0_0x49d20c = {
            _0x156537: 0x1dc6,
            _0x5e5e67: 0x16ae,
            _0x548871: 0x163b,
            _0x5f2fce: 0x1d2
          };
          _0x12317f && (_0x12317f = JSON.parse(_0x12317f)).forEach(_0x1b14e6 => {
            const _0x146522 = _0x52480e.blips.new(0x1de, new _0x52480e.Vector3(parseFloat(_0x1b14e6.pos.x), parseFloat(_0x1b14e6.pos.y), parseFloat(_0x1b14e6.pos.z)), {
              'name': 'Загрузка ящиков',
              'color': 0x5,
              'shortRange': false
            });

            (0x0, _0x460638.markAsTranslatedBlip)(_0x146522, 'blips.loadZone'), _0x5b0067.push(_0x146522);
          });
        }), _0x52480e.events.add('job.gopostal.initLoadPoint', _0x193adf => {
          _0x193adf && (_0x193adf = JSON.parse(_0x193adf), _0x32cb1c = 'load', _0x193adf.forEach(_0x4efe03 => {
            const _0x30dea8 = {};
            _0x30dea8.shape = _0x52480e.colshapes.newSphere(parseFloat(_0x4efe03.pos.x), parseFloat(_0x4efe03.pos.y), parseFloat(_0x4efe03.pos.z), 0x14, 0x0), _0x30dea8.checkpoint = _0x52480e.checkpoints.new(0x4, new _0x52480e.Vector3(parseFloat(_0x4efe03.pos.x), parseFloat(_0x4efe03.pos.y), parseFloat(_0x4efe03.pos.z) - 0x1), 0x14, {
              'direction': new _0x52480e.Vector3(parseFloat(_0x4efe03.pos.x), parseFloat(_0x4efe03.pos.y), parseFloat(_0x4efe03.pos.z)),
              'color': [0x34, 0x98, 0xdb, 0x64],
              'visible': true,
              'dimension': 0x0
            }), _0x30dea8.location = _0x4efe03.location, _0x2e99e2.push(_0x30dea8);
          }));
        }), _0x52480e.events.add('job.gopostal.clearLoadPoint', () => {
          const a0_0x86498b = {
            _0x40516a: 0x1aab,
            _0x127aab: 0x16c5,
            _0x5cd8e4: 0x16c5,
            _0x2e3e3c: 0x18b1,
            _0x4170c4: 0x18b1,
            _0x25d093: 0x17f
          };
          _0x2e99e2.length && (_0x2e99e2.forEach(_0x55e9dd => {
            _0x52480e.colshapes.exists(_0x55e9dd.shape) && _0x55e9dd.shape.destroy(), _0x52480e.checkpoints.exists(_0x55e9dd.checkpoint) && _0x55e9dd.checkpoint.destroy();
          }), _0x2e99e2 = []);
        }), _0x52480e.events.add('job.gopostal.clearLoadBlip', () => {
          _0x5b0067.length && (_0x5b0067.forEach(_0x5bebdc => {
            _0x52480e.blips.exists(_0x5bebdc) && _0x5bebdc.destroy();
          }), _0x5b0067 = []);
        }), _0x52480e.events.add('job.gopostal.clearWorkPoints', () => {
          _0xed2591 && (_0x52480e.colshapes.exists(_0xed2591.shape) && (_0xed2591.shape = _0xed2591.shape.destroy()), _0x52480e.checkpoints.exists(_0xed2591.checkpoint) && (_0xed2591.checkpoint = _0xed2591.checkpoint.destroy()), _0x52480e.blips.exists(_0xed2591.blip) && (_0xed2591.blip = _0xed2591.blip.destroy()));
        }), _0x52480e.events.add('playerEnterColshape', _0x3e0884 => {
          if (_0x5c0f68.api.isAuthed() && 0x5 === _0x6e28ae.getVariable('job')) {
            _0x2e99e2 && _0x2e99e2.length > 0x0 && _0x2e99e2.map(_0x478212 => _0x478212.shape).includes(_0x3e0884) && 'load' == _0x32cb1c && _0x6e28ae.vehicle && _0x5c0f68.api.getEntitySync(_0x6e28ae.vehicle, 'driver') == _0x6e28ae.remoteId && (_0x24e874 = _0x3e0884, _0x5c0f68.api.displayHelpStringTrans('displayHelpString.toLoadBoxes', false, true, 0x2710), _0x1ef6f6 = _0x2e99e2.find(_0xeb4e32 => _0xeb4e32.shape === _0x3e0884).location);

            if (_0xed2591 && _0xed2591.shape === _0x3e0884 && !_0x6e28ae.vehicle) {
              const _0x216b49 = _0x344e02();

              if (!_0x52480e.vehicles.exists(_0x216b49)) return _0x5c0f68.api.longNotifyTrans('job.gopostal.vehicleFarAway', 'error');
              if (_0x5c0f68.api.vdist(_0x6e28ae.position.x, _0x6e28ae.position.y, _0x6e28ae.position.z, _0x216b49.position.x, _0x216b49.position.y, _0x216b49.position.z) > 0x64) return _0x5c0f68.api.longNotifyTrans('job.gopostal.vehicleFarAway', 'error');
              if (_0x52480e.players.local.activeItemId) return _0x5c0f68.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
              _0xed2591 && _0x3e0884 === _0xed2591.shape && 'unload' == _0x32cb1c && _0x52480e.events.callRemote('267229412'), _0xed2591 && _0x3e0884 === _0xed2591.shape && 'take' == _0x32cb1c && (_0x24e874 = _0x3e0884, _0x5c0f68.api.displayHelpStringTrans('displayHelpString.toTakeBox', false, true, 0x1388));
            } else {
              if (_0xed2591 && _0xed2591.shape === _0x3e0884 && _0x6e28ae.vehicle && 'deliver' === _0x32cb1c) return _0x24e874 = _0x3e0884, void _0x5c0f68.api.displayHelpStringTrans('displayHelpString.toUnloadBoxes', false, true, 0x1388);
            }
          }
        }), _0x52480e.events.add('playerExitColshape', _0x314ace => {
          _0x5c0f68.api.isAuthed() && _0x24e874 && _0x24e874 === _0x314ace && (_0x52480e.game.ui.clearHelp(true), _0x24e874 = null, _0x1ef6f6 = null);
        }), _0x52480e.events.add('keys.e', () => {
          0x5 === _0x6e28ae.getVariable('job') && _0x24e874 && (_0x2e99e2.length > 0x0 && _0x6e28ae.vehicle && _0x6e28ae.vehicle.getVariable('partyId') === _0x4ca3f4.default.party.partyId && _0x2e99e2.map(_0x36b91e => _0x36b91e.shape).includes(_0x24e874) && 'load' == _0x32cb1c && !_0x195703.loadWaiting ? (_0x52480e.game.ui.clearHelp(true), _0x195703.loadWaiting = true, _0x52480e.events.callRemote('3551608364')) : _0xed2591 && _0x24e874 === _0xed2591.shape && ('deliver' === _0x32cb1c && _0x6e28ae.vehicle && _0x6e28ae.vehicle.getVariable('partyId') === _0x4ca3f4.default.party.partyId && _0x6e28ae.vehicle.getPedInSeat(_0x5c0f68.api.getVehSeat(-0x1)) == _0x6e28ae.handle ? _0x49c10f() : 'take' === _0x32cb1c && _0x1ee910()), _0x24e874 = null);
        }), _0x52480e.events.add('job.gopostal.loadResponse', _0x4d4110 => {
          _0x195703.loadWaiting = false, 0x0 === _0x4d4110 ? _0x5c0f68.api.notifyTrans('job.gopostal.canUseThisVehicle', {
            'type': 'warn'
          }) : 0x1 === _0x4d4110 ? _0x5c0f68.api.notifyTrans('job.gopostal.moneyAlreadyStartLoad', {
            'type': 'warn'
          }) : 0x2 === _0x4d4110 && _0x4532c8();
        }), _0x52480e.events.add('job.gopostal.setDeliverRoute', _0x23654a => {
          _0x23654a && ((_0x23654a = JSON.parse(_0x23654a)).x = _0x23654a.posX, _0x23654a.y = _0x23654a.posY, _0x23654a.z = _0x23654a.posZ, _0x32cb1c = 'deliver', _0xed2591 = _0x23654a, _0xed2591.shape = _0x52480e.colshapes.newSphere(parseFloat(_0x23654a.x), parseFloat(_0x23654a.y), parseFloat(_0x23654a.z), 0x1e, 0x0), _0xed2591.checkpoint = _0x52480e.checkpoints.new(0x4, new _0x52480e.Vector3(parseFloat(_0x23654a.x), parseFloat(_0x23654a.y), parseFloat(_0x23654a.z) - 0x1), 0x1e, {
            'direction': new _0x52480e.Vector3(parseFloat(_0x23654a.x), parseFloat(_0x23654a.y), parseFloat(_0x23654a.z)),
            'color': [0x34, 0x98, 0xdb, 0x64],
            'visible': true,
            'dimension': 0x0
          }), _0xed2591.blip = _0x52480e.blips.new(0x1, new _0x52480e.Vector3(parseFloat(_0x23654a.x), parseFloat(_0x23654a.y), parseFloat(_0x23654a.z)), {
            'name': 'Точка разгрузки',
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x460638.markAsTranslatedBlip)(_0xed2591.blip, 'blips.unloadZone'), _0xed2591.blip.setFlashes(true), _0x52480e.events.call('gps.setPoint', JSON.stringify({
            'x': parseFloat(_0x23654a.x),
            'y': parseFloat(_0x23654a.y),
            'z': parseFloat(_0x23654a.z),
            'title': _0x5c0f68.api.language.translatePlayer('gps.waypoints.unloadingPoint')
          })));
        }), _0x52480e.events.add('job.gopostal.getBoxFromVehicle', (_0x23b3d7, _0x5c6668, _0x2a73e2) => {
          'number' == typeof _0x23b3d7 && 'number' == typeof _0x5c6668 && 'number' == typeof _0x2a73e2 && (_0xe29908 = new _0x52480e.Vector3(_0x23b3d7, _0x5c6668, _0x2a73e2)), _0xed2591 && _0xed2591.shape && _0xed2591.shape.destroy(), _0xed2591 && _0xed2591.checkpoint && _0xed2591.checkpoint.destroy(), _0xed2591 && _0xed2591.blip && _0xed2591.blip.destroy();

          const _0x57727e = _0x344e02();

          if (!_0x52480e.vehicles.exists(_0x57727e)) return void (_0x1e0a84 = true);
          _0x1e0a84 = false;

          const _0x223987 = _0x52480e.game.gameplay.getModelDimensions(_0x57727e.getModel()),
                _0x4aa76a = _0x223987.max.y - _0x223987.min.y,
                _0x23aff1 = _0x57727e.getOffsetFromInWorldCoords(0x0, -_0x4aa76a / 0x2, 0x0);

          _0x32cb1c = 'take', _0xed2591 = {}, _0xed2591.shape = _0x52480e.colshapes.newSphere(_0x23aff1.x, _0x23aff1.y, _0x23aff1.z, 0x2, 0x0), _0xed2591.checkpoint = _0x52480e.checkpoints.new(0x0, new _0x52480e.Vector3(_0x23aff1.x, _0x23aff1.y, _0x23aff1.z - 0.5), 0x2, {
            'direction': new _0x52480e.Vector3(_0x23aff1.x, _0x23aff1.y, _0x23aff1.z),
            'color': [0xf1, 0xc4, 0xf, 0xff],
            'visible': true,
            'dimension': 0x0
          }), _0xed2591.blip = _0x52480e.blips.new(0x1, new _0x52480e.Vector3(_0x23aff1.x, _0x23aff1.y, _0x23aff1.z), {
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x460638.markAsTranslatedBlip)(_0xed2591.blip, 'blips.takeBox');
        }), _0x52480e.events.add('party.inited', _0x2f81fa => {
          _0x1e0a84 && _0x52480e.events.call('job.gopostal.getBoxFromVehicle');
        }), _0x52480e.events.add('job.gopostal.setHousePosition', (_0x300c7c, _0x4bed37, _0x33b36c) => {
          _0xe29908 = new _0x52480e.Vector3(_0x300c7c, _0x4bed37, _0x33b36c);
        }), _0x52480e.events.add('time.everySec', () => {
          'loading' === _0x32cb1c && _0x521bac && _0x6e28ae.isInAnyVehicle(false) && _0x6e28ae.vehicle.getPedInSeat(_0x5c0f68.api.getVehSeat(-0x1)) == _0x6e28ae.handle ? (_0x521bac.visible || (_0x521bac.visible = true), null == _0x521bac.value && (_0x521bac.value = _0x852f0c), _0x852f0c += 0.03, _0x521bac.value += 0.03, _0x521bac.value >= 0x1 && ('loading' === _0x32cb1c && (_0x32cb1c = 'loaded', _0x52480e.events.callRemote('1736406841', _0x1ef6f6), _0x1ef6f6 = null), _0x5c0f68.api.toggleSpeedo(true), _0x52480e.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true), _0x52480e.events.call('utils.disablePlayerExit', false), _0x521bac && (_0x521bac.visible = false, _0x521bac = null, _0x852f0c = 0x0))) : _0x521bac && !_0x6e28ae.isInAnyVehicle(false) && (_0x521bac.visible = false, _0x521bac = null, _0x852f0c = 0x0, _0x52480e.events.call('job.gopostal.clearLoadBlip'), _0x52480e.events.call('job.gopostal.clearLoadPoint'), _0x5c0f68.api.toggleSpeedo(true));
        });

        const _0x4532c8 = () => {
          _0x32cb1c = 'loading', _0x52480e.events.call('utils.disablePlayerExit', true), _0x6e28ae.vehicle.setHalt(0x3, 0x1, false), _0x6e28ae.vehicle.setOnGroundProperly(true), _0x6e28ae.vehicle.setEngineOn(false, false, true), _0x52480e.events.callRemote('2973793146', false), _0x52480e.events.call('job.gopostal.clearLoadPoint'), _0x52480e.events.call('job.gopostal.clearLoadBlip'), _0x521bac || (_0x521bac = new _0x386a4d.TimerBar('job.gopostal.loadingBoxes', 'progressBar', {
            'value': 0x0
          })), _0x5c0f68.api.toggleSpeedo(false);
        },
              _0x49c10f = () => {
          _0x6e28ae.vehicle.setHalt(0x3, 0x1, false), _0x6e28ae.vehicle.setOnGroundProperly(true), _0x6e28ae.vehicle.setEngineOn(false, false, true), _0x52480e.events.callRemote('2973793146', false), _0x52480e.events.callRemote('1009423602');
        },
              _0x344e02 = () => {
          try {
            return _0x4ca3f4.default.party.vehicles[0x0];
          } catch (_0x420df0) {
            _0x5c0f68.api.sendError(_0x420df0);
          }
        },
              _0x1ee910 = async () => {
          _0xed2591 && _0xed2591.shape && _0xed2591.shape.destroy(), _0xed2591 && _0xed2591.checkpoint && _0xed2591.checkpoint.destroy(), _0xed2591 && _0xed2591.blip && _0xed2591.blip.destroy(), _0x5c0f68.api.usingSystemAnim(true);

          const _0x4b2c91 = await _0x5c0f68.api.taskPlayAnim('anim@heists@load_box', 'lift_box', 0x0, false);

          if (await _0x52480e.game.sleep(0x3e8 * _0x4b2c91), !_0x32cb1c) return _0x5c0f68.api.usingSystemAnim(false);
          _0x5c0f68.api.taskPlayAnim('anim@heists@box_carry@', 'idle', 0x31, true), _0x52480e.attachments.addLocal(_0x52480e.game.joaat('box' + _0x31bc64.u.integer({
            'min': 0x1,
            'max': 0x5
          }))), _0x5c0f68.api.usingSystemAnim(false), _0x32cb1c = 'unload', _0xed2591 = {}, _0xed2591.shape = _0x52480e.colshapes.newSphere(_0xe29908.x, _0xe29908.y, _0xe29908.z, 0x1, 0x0), _0xed2591.checkpoint = _0x52480e.checkpoints.new(0x4, new _0x52480e.Vector3(_0xe29908.x, _0xe29908.y, _0xe29908.z - 0x1), 0x1, {
            'direction': new _0x52480e.Vector3(_0xe29908.x, _0xe29908.y, _0xe29908.z),
            'color': [0x34, 0x98, 0xdb, 0x64],
            'visible': true,
            'dimension': 0x0
          }), _0xed2591.blip = _0x52480e.blips.new(0x1, new _0x52480e.Vector3(_0xe29908.x, _0xe29908.y, _0xe29908.z), {
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x460638.markAsTranslatedBlip)(_0xed2591.blip, 'blips.unloadZone');
        };
      },
      0x893b: (_0x58c3c7, _0x11ff18, _0x25a3ce) => {
        'use strict';

        const a0_0x4e8e56 = {
          _0x246e1d: 0x535,
          _0x1c79f3: 0xf52,
          _0x17a783: 0xee5,
          _0x5313e7: 0xee5,
          _0x131686: 0x1d66,
          _0x1f73a4: 0x1e56,
          _0x116efe: 0x23e4,
          _0x299cdb: 0x14d2,
          _0x84de86: 0x1d16,
          _0x4f98c9: 0x1d66,
          _0xeb33aa: 0x73c,
          _0x567082: 0x1041
        },
              a0_0x47a0e5 = {
          _0x302558: 0x535
        },
              a0_0x5de729 = {
          _0x50fc7b: 0x535
        },
              a0_0x45307f = {
          _0x3fbc17: 0x157d,
          _0x296dbb: 0x1853
        },
              a0_0x39e939 = {
          _0x3ca6f5: 0x14d2,
          _0x6b4367: 0x1a5,
          _0x5731f5: 0x1b8b,
          _0x51c2e7: 0x1409,
          _0x5003de: 0x242c,
          _0x522a3f: 0x2488,
          _0x2ff5eb: 0x242c,
          _0x12c898: 0xbc6,
          _0x339ec4: 0x4a3,
          _0xfeee72: 0x1ab0,
          _0x480c4: 0x535,
          _0x5706fb: 0x1c66
        },
              a0_0x53cfa3 = {
          _0x4117d7: 0x1d66,
          _0x4178f8: 0xf2f,
          _0x4439d1: 0x1e93,
          _0x89ec8c: 0x1763,
          _0x11a0a8: 0x209c,
          _0x38c17c: 0x1d66,
          _0x561062: 0xf2f,
          _0x5837bd: 0x20f0,
          _0x4a301e: 0x1d66,
          _0x11e526: 0x1749
        },
              a0_0x5cdb54 = {
          _0x118013: 0x535,
          _0x1ead89: 0x253d,
          _0xf2592b: 0x139f,
          _0x138884: 0x2348,
          _0x32a44c: 0x4b9
        },
              a0_0x22c9b0 = {
          _0x5c2db3: 0x2488,
          _0xa6a35d: 0x535,
          _0x26184d: 0x1c66,
          _0x1af8ff: 0x535,
          _0x7e8267: 0x14d2,
          _0x3bdd3c: 0x1a5
        },
              a0_0x59aa14 = {
          _0x104027: 0x1820,
          _0x5521cc: 0x16c5,
          _0x312ed2: 0x535,
          _0xa51e5e: 0x1c66,
          _0xf7f2ec: 0x535,
          _0x295736: 0x1bf2,
          _0x1d3fef: 0x1a5
        },
              a0_0xf43547 = {
          _0x5e2f66: 0x535,
          _0x383bf8: 0xf52,
          _0x3df1b8: 0x11c3,
          _0x4a5b8d: 0x111e,
          _0x3cec2e: 0x1d66,
          _0x44d4d7: 0xf2f,
          _0x416592: 0x209c
        },
              a0_0x2e08a9 = {
          _0x73d50c: 0x535,
          _0x1d715a: 0x4b9,
          _0x4fca6e: 0x623,
          _0x166f0: 0x1ecf,
          _0x173495: 0x6da,
          _0x2719f9: 0xb0c,
          _0x11f42c: 0x535,
          _0x424d71: 0x21ec,
          _0x1b5a52: 0x2315,
          _0x2f2309: 0x145f,
          _0x81cbef: 0x11c3,
          _0x4ddcbf: 0x1241,
          _0x5a6a5b: 0x1a07,
          _0x5633ee: 0x99b,
          _0x17a83c: 0x1934,
          _0x5cd90e: 0x1c66,
          _0x39a680: 0x14d2,
          _0x577c91: 0x1fc0
        },
              a0_0x4c69c9 = {
          _0x1dc401: 0xf52,
          _0x49e77a: 0x1820,
          _0x47f6c5: 0x1291,
          _0x10a018: 0x16c5,
          _0xf3f8fc: 0x1ecf,
          _0x47514c: 0x6da,
          _0x542110: 0x535,
          _0x345ba8: 0xb0c,
          _0x458405: 0x623,
          _0x1bd774: 0x1a22
        },
              a0_0x6660de = {
          _0x397f5e: 0x14d2,
          _0x28c8c6: 0x1a5,
          _0x471bf8: 0x1a5,
          _0x4ae2fd: 0x1b8b
        },
              a0_0x2007c8 = {
          _0x55649e: 0xe41,
          _0x3d11c8: 0x17d,
          _0x5dd05d: 0x1707,
          _0x58f8ae: 0x16c5,
          _0x1a8147: 0x17f,
          _0x31aaaa: 0xf82,
          _0x535eeb: 0x185e,
          _0x5364ef: 0x1dc,
          _0x1704f2: 0x212a,
          _0x3f0163: 0x1d66,
          _0x217cd2: 0x1e93,
          _0x334058: 0xf2f,
          _0x2cb33f: 0x226a,
          _0x32872e: 0x1749
        };

        _0x25a3ce.r(_0x11ff18);

        var _0x416c99 = _0x25a3ce(0x16a21),
            _0x3916fb = _0x25a3ce(0x176d8),
            _0xb087b2 = _0x25a3ce(0xb9cc),
            _0x504526 = _0x25a3ce(0x3db3),
            _0x253512 = _0x25a3ce(0x12a76),
            _0x5bda7b = _0x25a3ce(0x161cd);

        const _0x4f2801 = _0x5bda7b.players.local;

        let _0x2d5316,
            _0x241b5b,
            _0x1fbfaf,
            _0x277804,
            _0x50fb72,
            _0x1982e4,
            _0x2b9238,
            _0x5785a6 = false,
            _0x4004b2 = 'easy',
            _0x5e131c = {},
            _0x539ee9 = 0x0,
            _0x1e2b00 = false;

        const _0x255fff = {
          0x1: 0x1a0,
          0x2: 0x1a1,
          0x3: 0x1a2,
          0x4: 0x1a3,
          0x5: 0x1a4,
          0x6: 0x1a5,
          0x7: 0x1a6
        };
        _0x5bda7b.events.add('job.hijacker.setup', (_0x5100d8, _0x55591d = 0x3e8, _0x39e554 = 0xa, _0x5415c6 = 0x0, _0x3d3f45) => {
          const _0x39a697 = new _0x5bda7b.Vector3(_0x5100d8.x, _0x5100d8.y, _0x5100d8.z),
                _0x49d27a = Math.random() * Math.PI * 0x2,
                _0x3ee622 = _0x55591d * Math.sqrt(Math.random()),
                _0x15bf7d = Math.cos(_0x49d27a) * _0x3ee622,
                _0x4b1db1 = Math.sin(_0x49d27a) * _0x3ee622,
                _0x5f4ce3 = new _0x5bda7b.Vector3(_0x15bf7d, _0x4b1db1, 0x0),
                _0x1221af = _0x39a697.add(_0x5f4ce3);

          _0x5bda7b.blips.exists(_0x2d5316) && (_0x2d5316.destroy(), _0x2d5316 = undefined), _0x5100d8 && (_0x2d5316 = _0x5bda7b.blips.new(0x9, new _0x5bda7b.Vector3(_0x1221af.x, _0x1221af.y, _0x1221af.z), {
            'radius': parseInt(_0x55591d),
            'alpha': 0x64,
            'color': 0x5
          })), _0x4004b2 = _0x3d3f45, (null == _0x5bda7b.players.local.settings.ambientMusic || _0x416c99.api.getPlayerSetting('ambientMusic')) && (_0x5bda7b.game.audio.cancelMusicEvent('FINA_START'), _0x5bda7b.game.audio.prepareMusicEvent('FINA_START'), _0x5bda7b.game.audio.triggerMusicEvent('FINA_START')), _0x86ba04(), _0x4d2013(_0x39e554), _0x31be7a(_0x5415c6);
        }), _0x5bda7b.events.add('job.hijacker.updateAward', (_0x4cd1bb = 0x0) => {
          _0x50fb72 && (_0x50fb72.value = _0x416c99.api.roundNumber(_0x4cd1bb, 0x0) + ' $');
        }), _0x5bda7b.events.add('job.hijacker.removeRadius', (_0x52fbac = true) => {
          _0x52fbac && _0x5bda7b.events.call('job.hijacker.clearMusic'), _0x5bda7b.events.call('job.hijacker.clearAreaBlip');
        }), _0x5bda7b.events.add('onPlayerEnterVehicle', (_0x259ec3, _0x48b321) => {
          if (!_0x416c99.api.getLocalVariable('activeHijack')) return;

          const _0x131edf = _0x5bda7b.vehicles.atRemoteId(_0x259ec3);

          _0x5bda7b.vehicles.exists(_0x131edf) && _0x48b321 && _0x416c99.api.getEntitySync(_0x131edf, 'hijacker', 'number') === _0x416c99.api.getPlayerStatic(_0x4f2801) && (_0x416c99.api.getEntitySync(_0x131edf, 'engine') || _0x416c99.api.getEntitySync(_0x131edf, 'tempHijackOwnerEngine') || (_0x416c99.api.displayHelpStringTrans('displayHelpString.toHijackIgnition', false, true, 0x1388), _0x5785a6 = true));
        }), _0x5bda7b.events.add('keys.e', () => {
          if (_0x416c99.api.getLocalVariable('activeHijack') && _0x4f2801.vehicle && _0x416c99.api.getEntitySync(_0x4f2801.vehicle, 'hijacker', 'number') == _0x416c99.api.getPlayerStatic(_0x4f2801)) {
            if (null == _0x1fbfaf || _0x241b5b) {
              if (_0x5785a6) {
                if (!_0x5bda7b.inventory.hasItem(_0x4f2801, 0x19f)) return _0x416c99.api.longNotifyTrans('job.hijacker.cantHijackWithout', {
                  'title': _0x5bda7b.inventory.getItemById(0x19f).title
                }, 'error');

                const _0x2eab77 = _0x255fff[_0x416c99.api.getLocalVariable('hijackerRank')];

                if (!_0x5bda7b.inventory.hasItem(_0x4f2801, _0x2eab77)) return _0x416c99.api.longNotifyTrans('job.hijacker.cantHijackWithout', {
                  'title': _0x5bda7b.inventory.getItemById(_0x2eab77).title
                }, 'error');
                _0x416c99.api.usingSystemAnim(true), _0x5bda7b.events.call('utils.disablePlayerExit', true), _0x253512.globalBrowser.toggle('breakEngine', {
                  'value': true,
                  'difficulty': _0x4004b2
                }), _0x5bda7b.events.call('job.hijacker.engineMinigame', true);
              }
            } else _0x241b5b = true, _0x5bda7b.events.callRemote('3317719406'), _0x1fbfaf = null;
          }
        }), _0x5bda7b.events.add('minigame.breakEngine', _0x220505 => {
          _0x253512.globalBrowser.toggle('breakEngine', {
            'value': false
          }), _0x416c99.api.usingSystemAnim(false), (_0x5785a6 || _0x4f2801.vehicle) && (_0x5785a6 = false, _0x5bda7b.events.callRemote('584818493', _0x4f2801.vehicle, _0x220505), _0x5bda7b.events.call('utils.disablePlayerExit', false));
        }), _0x5bda7b.events.add('job.hijacker.engineMinigame.result', (_0x19fc2c = false) => {
          _0x19fc2c && (_0x5785a6 = true);
        }), _0x5bda7b.events.add('job.hijacker.startDelivery', _0x16a56f => {
          _0x5bda7b.blips.exists(_0x5e131c.blip) && (_0x5e131c.blip.destroy(), delete _0x5e131c.blip), _0x5bda7b.colshapes.exists(_0x5e131c.colshape) && (_0x5e131c.colshape.destroy(), delete _0x5e131c.colshape), _0x5bda7b.checkpoints.exists(_0x5e131c.checkpoint) && (_0x5e131c.checkpoint.destroy(), delete _0x5e131c.checkpoint);
          const _0x3bf592 = {};
          _0x3bf592.colshape = _0x5bda7b.colshapes.newSphere(_0x16a56f.x, _0x16a56f.y, _0x16a56f.z, 0xa, 0x0), _0x3bf592.checkpoint = _0x5bda7b.checkpoints.new(0x0, new _0x5bda7b.Vector3(_0x16a56f.x, _0x16a56f.y, _0x16a56f.z - 0x1), 0xa, {
            'direction': new _0x5bda7b.Vector3(_0x16a56f.x, _0x16a56f.y, _0x16a56f.z - 0x1),
            'color': [0xf1, 0xc4, 0xf, 0xff],
            'visible': true,
            'dimension': 0x0
          }), _0x3bf592.blip = _0x5bda7b.blips.new(0x1, new _0x5bda7b.Vector3(_0x16a56f.x, _0x16a56f.y, _0x16a56f.z), {
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x504526.markAsTranslatedBlip)(_0x3bf592.blip, 'blips.unloadZone'), _0x5e131c = _0x3bf592, _0x5bda7b.events.call('job.hijacker.clearAreaBlip'), _0x5bda7b.game.ui.setNewWaypoint(_0x16a56f.x, _0x16a56f.y), _0x5bda7b.game.audio.cancelMusicEvent('FINA_START'), _0x5bda7b.game.audio.triggerMusicEvent('FINA_END'), (null == _0x5bda7b.players.local.settings.ambientMusic || _0x416c99.api.getPlayerSetting('ambientMusic')) && _0x5bda7b.game.sleep(0x1b58).then(() => {
            switch (_0x416c99.api.getLocalVariable('hijackerRank')) {
              case 0x1:
              case 0x3:
              case 0x2:
                _0x5bda7b.game.audio.triggerMusicEvent('CAR1_MISSION_START');

                break;

              case 0x4:
              case 0x5:
                _0x5bda7b.game.audio.triggerMusicEvent('NIGEL1C_START');

                break;

              case 0x6:
              case 0x7:
                _0x5bda7b.game.audio.triggerMusicEvent('CAR4_TRUCK_RESTART');

            }
          });
        }), _0x5bda7b.events.add('job.hijacker.breakDoorToggle', (_0x4be650, _0x3e7ebd = 0x5) => {
          _0x5bda7b.vehicles.exists(_0x4be650) && (_0x1982e4 = _0x4be650, _0x416c99.api.usingSystemAnim(true), _0x253512.globalBrowser.toggle('breakLock', {
            'value': true,
            'locksAmount': _0x3e7ebd,
            'difficulty': _0x4004b2
          }), _0x1e2b00 = true, _0x416c99.api.taskPlayAnim('mini@repair', 'fixing_a_ped', 0x1, true), _0x5bda7b.events.call('utils.disablePlayerMove', true), _0x367493());
        }), _0x5bda7b.events.add('minigame.breakLock', _0x5f0d92 => {
          _0x1e2b00 && (_0x1e2b00 = false, _0x1982e4 && (_0x253512.globalBrowser.toggle('breakLock', {
            'value': false
          }), _0x416c99.api.usingSystemAnim(false), _0x5bda7b.events.callRemote('914307216', _0x1982e4, _0x5f0d92), _0x416c99.api.stopAnim(), _0x5bda7b.events.call('utils.disablePlayerMove', false), _0x1982e4 = null, _0x33dd10()));
        }), _0x5bda7b.events.add('playerEnterColshape', _0x9dccbb => {
          if (_0x416c99.api.isAuthed() && _0x416c99.api.getLocalVariable('activeHijack') && _0x5e131c.colshape && _0x9dccbb === _0x5e131c.colshape) {
            if (!_0x4f2801.vehicle) return;
            _0x416c99.api.displayHelpStringTrans('displayHelpString.toDropVehicle', false, true, 0x1388), _0x1fbfaf = _0x9dccbb;
          }
        }), _0x5bda7b.events.add('playerExitColshape', _0x506aae => {
          _0x416c99.api.isAuthed() && _0x5e131c.colshape && _0x506aae === _0x5e131c.colshape && (_0x5bda7b.game.ui.clearHelp(true), _0x1fbfaf = null);
        }), _0x5bda7b.events.add('job.hijacker.deliverCarResult', () => {
          _0x241b5b = false, _0x5bda7b.game.ui.messages.showShard(_0x416c99.api.language.translatePlayer('job.hijacker.deliveredTitle'), _0x416c99.api.language.translatePlayer('job.hijacker.deliveredBody'), null, null, 0x9c4), _0x416c99.api.playSound('gtasa_mission_passed', {
            'volume': 0x23
          });
        }), _0x5bda7b.events.add('job.hijacker.clearDelivery', () => {
          _0x5bda7b.blips.exists(_0x5e131c.blip) && (_0x5e131c.blip.destroy(), delete _0x5e131c.blip), _0x5bda7b.colshapes.exists(_0x5e131c.colshape) && (_0x5e131c.colshape.destroy(), delete _0x5e131c.colshape), _0x5bda7b.checkpoints.exists(_0x5e131c.checkpoint) && (_0x5e131c.checkpoint.destroy(), delete _0x5e131c.checkpoint);
        }), _0x5bda7b.events.add('job.hijacker.clearAreaBlip', () => {
          _0x5bda7b.blips.exists(_0x2d5316) && (_0x2d5316.destroy(), _0x2d5316 = undefined);
        }), _0x5bda7b.events.add('job.hijacker.clearHud', () => {
          _0x86ba04();
        }), _0x5bda7b.events.add('job.hijacker.clearSound', () => {
          _0x5bda7b.game.audio.cancelMusicEvent('FINA_START'), _0x5bda7b.game.audio.cancelMusicEvent('CAR1_MISSION_START'), _0x5bda7b.game.audio.cancelMusicEvent('NIGEL1C_START'), _0x5bda7b.game.audio.cancelMusicEvent('CAR4_TRUCK_RESTART'), _0x5bda7b.game.audio.prepareMusicEvent('NIGEL1C_STOP'), _0x5bda7b.game.audio.triggerMusicEvent('NIGEL1C_STOP');
        }), _0x5bda7b.events.add('job.hijacker.clearAll', () => {
          _0x5bda7b.events.call('job.hijacker.clearDelivery'), _0x5bda7b.events.call('job.hijacker.clearAreaBlip'), _0x5bda7b.events.call('job.hijacker.clearHud'), _0x5bda7b.events.call('job.hijacker.clearSound'), _0x25a3ce.g.interfaces.breakLock && _0x253512.globalBrowser.toggle('breakLock', {
            'value': false
          }), _0x25a3ce.g.interfaces.breakEngine && _0x253512.globalBrowser.toggle('breakEngine', {
            'value': false
          }), (_0x25a3ce.g.interfaces.breakLock || _0x25a3ce.g.interfaces.breakEngine) && _0x416c99.api.usingSystemAnim(false);
        });

        const _0x4d2013 = _0x5521a9 => {
          _0x539ee9 = 0x3c * _0x5521a9, _0x277804 = new _0x3916fb.TimerBar('job.hijacker.timeLeft', null, {
            'value': '60:00'
          });
        },
              _0x31be7a = _0xa6f8ab => {
          _0x50fb72 = new _0x3916fb.TimerBar('job.hijacker.reward', null, {
            'value': '$' + _0x416c99.api.roundNumber(_0xa6f8ab, 0x0)
          });
        },
              _0x367493 = () => {
          try {
            _0x2b9238 = new _0xb087b2.InstructionalButtons(-0x1), _0x2b9238.addButton('ibuttons.hijackLock', 0x18), _0x2b9238.addButton('ibuttons.hack', 0xc9), _0x416c99.api.longNotifyTrans('job.hijacker.hijackHint', 'warn', 0x2710), _0x2b9238.isActive() || _0x2b9238.toggleHud(true);
          } catch (_0x14caea) {
            _0x416c99.api.sendError(_0x14caea);
          }
        },
              _0x33dd10 = () => {
          try {
            _0x2b9238 && (_0x2b9238.resetBar(), _0x2b9238 = null);
          } catch (_0x1b3958) {
            _0x416c99.api.sendError(_0x1b3958);
          }
        },
              _0x86ba04 = () => {
          try {
            _0x277804 && (_0x277804.visible = false, _0x277804 = null), _0x50fb72 && (_0x50fb72.visible = false, _0x50fb72 = null);
          } catch (_0x5a6b01) {
            _0x416c99.api.sendError(_0x5a6b01);
          }
        };

        _0x5bda7b.events.add('time.everySec', () => {
          if (_0x416c99.api.getLocalVariable('activeHijack') && _0x539ee9) {
            _0x539ee9--;

            const _0x3ea8a3 = parseInt(_0x539ee9 / 0x3c),
                  _0x4cb882 = parseInt(_0x539ee9 % 0x3c);

            _0x277804 && (_0x277804.value = ('0' + _0x3ea8a3).slice(-0x2) + ':' + ('0' + _0x4cb882).slice(-0x2), 0x0 === _0x539ee9 ? (_0x5bda7b.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true), _0x277804 && (_0x277804.visible = false), _0x5bda7b.events.callRemote('2984849016'), _0x5bda7b.attachments.removeLocal(_0x5bda7b.game.joaat('trash'))) : 0xa === _0x539ee9 && _0x5bda7b.game.audio.playSoundFrontend(-0x1, '10s', 'MP_MISSION_COUNTDOWN_SOUNDSET', true));
          }
        });
      },
      0x1657: (_0x3c5012, _0x38554a, _0x3a4a2d) => {
        'use strict';

        _0x3a4a2d.r(_0x38554a);

        var _0x531f78 = _0x3a4a2d(0x1298c),
            _0x27f4a7 = _0x3a4a2d(0x161cd);

        _0x3a4a2d(0xebb6), _0x3a4a2d(0x175a2), _0x3a4a2d(0x73bf), _0x3a4a2d(0x26d), _0x3a4a2d(0x468e), _0x3a4a2d(0xbbb6), _0x3a4a2d(0x24f3), _0x3a4a2d(0x102b1), _0x3a4a2d(0xb9dd), _0x3a4a2d(0x1232a), _0x3a4a2d(0x16bb3), _0x3a4a2d(0xa6cf), _0x3a4a2d(0x13f9f), _0x3a4a2d(0x15877), _0x3a4a2d(0xc33e), _0x3a4a2d(0x6a3), _0x3a4a2d(0x893b), _0x3a4a2d(0x71c8), _0x531f78.Z && _0x531f78.Z.forEach(_0x3fed73 => {
          const _0x1893e8 = _0x27f4a7.colshapes.newCircle(_0x3fed73.position.x, _0x3fed73.position.y, 3.5, 0x0);

          _0x1893e8.pos = new _0x27f4a7.Vector3(_0x3fed73.position.x, _0x3fed73.position.y, _0x3fed73.position.z), _0x1893e8.garbageId = _0x3fed73.id;
        });
      },
      0x1232a: (_0x2d450e, _0x428d83, _0x3a452b) => {
        'use strict';

        const a0_0x2664dd = {
          _0x2897f1: 0x1fdb,
          _0x463708: 0x2496,
          _0x4b3ade: 0x1604,
          _0x1a423b: 0x535,
          _0x9a1c00: 0xf86,
          _0x5e2171: 0x6f3,
          _0x46fd1c: 0x1152,
          _0x5ea4db: 0x2496,
          _0xd4062e: 0x1da5
        },
              a0_0x5ce16c = {
          _0x19cb24: 0x6da,
          _0x3de2a9: 0x14c1
        };

        _0x3a452b.r(_0x428d83);

        var _0x18ead1 = _0x3a452b(0x16a21),
            _0x228799 = _0x3a452b(0xfe5b),
            _0x4f8bba = _0x3a452b(0xd194),
            _0x298ebb = _0x3a452b(0x11ed7),
            _0x1fd331 = _0x3a452b.n(_0x298ebb),
            _0x33e9f4 = _0x3a452b(0x48c4),
            _0x3cff62 = _0x3a452b(0x176d8),
            _0x397967 = _0x3a452b(0x5d14),
            _0x1c4b94 = _0x3a452b(0xb9cc),
            _0x37af2f = _0x3a452b(0x161cd);

        const _0x453cde = _0x37af2f.players.local,
              _0x50a5f4 = 0x7d0,
              _0x1f0eee = new _0x4f8bba.Quaternion().fromEuler(new _0x37af2f.Vector3(0x0, 0x0, 0x0)),
              _0x33668c = _0x37af2f.players.local,
              _0x21c0cd = _0x1fd331()(0.76, 0.43, 0.79, 1.05),
              _0x531ab5 = {
          'lastUpdateStream': Date.now(),
          'trees': _0x228799.trees.map(_0x2c8fee => {
            const _0x246ec9 = _0x228799.treesModels[_0x2c8fee.model],
                  _0x3ccea6 = _0x2c8fee.dropRotation || _0x246ec9.dropRotation,
                  _0x43388a = _0x37af2f.objects.new(_0x37af2f.game.joaat(_0x2c8fee.model), _0x2c8fee.position, {
              'rotation': _0x2c8fee.rotation
            });

            return _0x43388a && _0x43388a.setLodDist(0x12c), {
              'objectInstance': _0x43388a,
              'growthPosition': new _0x37af2f.Vector3(_0x2c8fee.position.x + _0x246ec9.growthPositionOffset.x, _0x2c8fee.position.y + _0x246ec9.growthPositionOffset.y, _0x2c8fee.position.z + _0x246ec9.growthPositionOffset.z),
              'baseQuaternion': new _0x4f8bba.Quaternion().fromEuler(_0x2c8fee.rotation),
              'dropQuaternion': new _0x4f8bba.Quaternion().fromEuler(_0x3ccea6),
              ..._0x2c8fee,
              ..._0x246ec9,
              'dropRotation': _0x3ccea6
            };
          }),
          'streamedTrees': new Set(),
          'instructionList': undefined,
          'choppingBar': undefined,
          'lastChopPress': 0x0,
          'treesBlips': [],
          'waitingRequest': false
        },
              _0x574af7 = (_0x3c9e69 = _0x37af2f.world.data.fellerJobData) => {
          if ('string' != typeof _0x3c9e69 || !_0x3c9e69.length) return;

          const _0x2c667d = _0x3c9e69.split('&').map(_0x4187d3 => {
            const [_0x20592a, _0x325bbe, _0x3103a3, _0x5d24f9] = _0x4187d3.split('^');

            return {
              'id': parseInt(_0x20592a),
              'startTime': parseInt(_0x325bbe, 0x24),
              'growthTime': parseInt(_0x3103a3, 0x24),
              'heading': parseInt(_0x5d24f9, 0x24)
            };
          });

          for (let _0x3a2304 = 0x0; _0x3a2304 < _0x2c667d.length; _0x3a2304++) {
            const _0x58196e = _0x2c667d[_0x3a2304],
                  _0x1291f5 = _0x531ab5.trees.find(_0x5f01d5 => _0x5f01d5.id === _0x58196e.id);

            if (!_0x1291f5) continue;
            _0x1291f5.rotation.z = _0x58196e.heading, _0x1291f5.baseQuaternion = new _0x4f8bba.Quaternion().fromEuler(_0x1291f5.rotation);
            const _0x5b323a = _0x1291f5.dropRotation;
            _0x5b323a.z = _0x58196e.heading, _0x1291f5.dropQuaternion = new _0x4f8bba.Quaternion().fromEuler(_0x5b323a), _0x1291f5.growthTime = _0x58196e.growthTime, _0x1291f5.startTime = _0x58196e.startTime;
          }
        };

        _0x37af2f.events.add('worldDataReady', () => {
          _0x574af7();
        }), _0x37af2f.events.add('worldDataChanged', (_0x133d6f, _0x2d32c4) => {
          'fellerJobData' === _0x133d6f && _0x574af7(_0x2d32c4);
        });

        const _0xcf086a = _0x1d86af => {
          _0x1d86af.state = -0x1;
        },
              _0x1d84dc = _0x42aaec => {
          if ('number' != typeof _0x42aaec.startTime) return 0x3;

          const _0x5a642e = (0x0, _0x33e9f4.getServerTime)();

          let _0x18df10 = 0x0;

          const _0x10c55c = _0x42aaec.startTime + _0x50a5f4,
                _0x3b898b = _0x10c55c <= _0x5a642e,
                _0x3a44a9 = _0x10c55c + 0x2710,
                _0x615e7e = _0x3a44a9 <= _0x5a642e,
                _0x4a12a2 = _0x3a44a9 + _0x42aaec.growthTime <= _0x5a642e;

          return _0x3b898b && _0x615e7e && _0x4a12a2 ? _0x18df10 = 0x3 : _0x615e7e ? _0x18df10 = 0x2 : _0x3b898b && (_0x18df10 = 0x1), _0x18df10;
        };

        _0x37af2f.events.add('render', () => {
          if (!_0x18ead1.api.isAuthed()) return;
          !_0x453cde.vehicle && 0x83 === _0x453cde.activeItemId && _0x531ab5.choppingBar && _0x531ab5.choppingBar.visible && Date.now() - _0x531ab5.lastChopPress > 0x3e8 && (_0x37af2f.game.controls.isControlJustPressed(0x0, 0x18) || _0x37af2f.game.controls.isDisabledControlJustPressed(0x0, 0x18)) && (_0x531ab5.choppingBar.value = _0x18ead1.api.clamp(_0x531ab5.choppingBar.value + 0.05, 0x0, 0x1), _0x531ab5.lastChopPress = Date.now(), _0x18ead1.api.taskPlayAnim('melee@large_wpn@streamed_core', 'car_down_attack', 0x0, false), _0x18ead1.api.play3DSound('tree/chop' + _0x397967.u.integer({
            'min': 0x1,
            'max': 0x6
          })), _0x37af2f.events.callRemote('3270946168'), _0x531ab5.choppingBar.value >= 0x1 && (_0x531ab5.choppingBar.visible = false, _0x531ab5.choppingBar = undefined, _0x5b08c4(true)));

          const _0x3ca68a = Date.now();

          if (_0x3ca68a >= _0x531ab5.lastUpdateStream + 0x3e8) {
            _0x531ab5.lastUpdateStream = _0x3ca68a;

            for (let _0x3f2440 = 0x0; _0x3f2440 < _0x531ab5.trees.length; _0x3f2440++) {
              const _0x3ce9c5 = _0x531ab5.trees[_0x3f2440];
              _0x3ce9c5.objectInstance && _0x3ce9c5.objectInstance.handle && !_0x531ab5.streamedTrees.has(_0x3ce9c5) && (_0x531ab5.streamedTrees.add(_0x3ce9c5), _0xcf086a(_0x3ce9c5));
            }
          }

          if (!_0x531ab5.streamedTrees.size) return;

          const _0x536e8f = (0x0, _0x33e9f4.getServerTime)(),
                _0x2e4cd4 = _0x33668c.position;

          for (const _0x21e13c of _0x531ab5.streamedTrees.values()) {
            const _0x5792dc = _0x21e13c.position;
            !_0x531ab5.choppingBar && _0x18ead1.api.vdist2(_0x5792dc, _0x2e4cd4) <= 0x2 && 0x3 === _0x1d84dc(_0x21e13c) && _0x18ead1.api.displayHelpStringTrans('displayHelpString.toChopTree', false, false, -0x1);
            if ('number' != typeof _0x21e13c.startTime) continue;
            const _0x13b531 = _0x21e13c.objectInstance,
                  _0x3d8281 = _0x21e13c.growthPosition,
                  _0x4f558d = _0x21e13c.rotation,
                  _0xa44299 = _0x21e13c.dropRotation,
                  _0x556f22 = _0x21e13c.baseQuaternion,
                  _0x4c3f0d = _0x21e13c.dropQuaternion;
            let _0x14525c = 0x0;

            const _0x2b9b13 = _0x21e13c.startTime + _0x50a5f4,
                  _0x1f6147 = _0x2b9b13 <= _0x536e8f,
                  _0x58bb40 = _0x2b9b13 + 0x2710,
                  _0x105d3 = _0x58bb40 <= _0x536e8f,
                  _0x46a28a = _0x58bb40 + _0x21e13c.growthTime <= _0x536e8f;

            if (_0x1f6147 && _0x105d3 && _0x46a28a ? _0x14525c = 0x3 : _0x105d3 ? _0x14525c = 0x2 : _0x1f6147 && (_0x14525c = 0x1), _0x21e13c.state !== _0x14525c && (_0x21e13c.state = _0x14525c, 0x1 === _0x14525c ? _0x13b531.setRotation(_0xa44299.x, _0xa44299.y, _0xa44299.z, 0x2, true) : 0x3 === _0x14525c && (_0x13b531.setRotation(_0x4f558d.x, _0x4f558d.y, _0x4f558d.z, 0x2, true), _0x13b531.setCoordsNoOffset(_0x5792dc.x, _0x5792dc.y, _0x5792dc.z, true, false, false))), 0x0 === _0x14525c) {
              const _0x415630 = _0x21c0cd(_0x18ead1.api.clamp((_0x536e8f - _0x21e13c.startTime) / _0x50a5f4, 0x0, 0x1)),
                    _0x274b3d = _0x4f8bba.Quaternion.slerp(_0x556f22, _0x4c3f0d, _0x415630);

              _0x13b531.setQuaternion(_0x274b3d.x, _0x274b3d.y, _0x274b3d.z, _0x274b3d.w);
            } else {
              if (0x2 === _0x14525c) {
                const _0x5b4ea3 = _0x18ead1.api.clamp((_0x536e8f - _0x58bb40) / _0x21e13c.growthTime, 0x0, 0x1),
                      _0x2c2c2a = _0x4f8bba.Quaternion.slerp(_0x1f0eee, _0x556f22, _0x5b4ea3);

                _0x13b531.setQuaternion(_0x2c2c2a.x, _0x2c2c2a.y, _0x2c2c2a.z, _0x2c2c2a.w);

                const _0x458f74 = _0x18ead1.api.lerpVector(_0x3d8281, _0x5792dc, _0x5b4ea3);

                _0x13b531.setCoordsNoOffset(_0x458f74.x, _0x458f74.y, _0x458f74.z, true, false, false);
              }
            }
          }
        }), _0x37af2f.events.add('keys.e', () => {
          const a0_0x12717c = {
            _0x2edaff: 0x1c3c,
            _0x21da59: 0x1f30,
            _0xa2b357: 0x1a50
          };
          if (!_0x531ab5.streamedTrees.size || _0x531ab5.waitingRequest || _0x453cde.vehicle) return;

          const _0x3ca4d4 = (() => {
            if (!_0x531ab5.streamedTrees.size) return;
            const _0x2f9075 = _0x33668c.position;

            let _0x5da28f;

            for (const _0x2d16c3 of _0x531ab5.streamedTrees.values()) {
              const _0x3ecf6d = _0x2d16c3.position;

              if (_0x18ead1.api.vdist2(_0x3ecf6d, _0x2f9075) <= 0x2) {
                _0x5da28f = _0x2d16c3;
                break;
              }
            }

            return _0x5da28f;
          })();

          if (!_0x3ca4d4) return;
          if (0x83 != _0x453cde.activeItemId && !_0x531ab5.choppingBar) return _0x18ead1.api.longNotifyTrans('job.lumberjack.needAxeInHand', 'error');
          if (0x3 !== _0x1d84dc(_0x3ca4d4) && !_0x531ab5.choppingBar) return _0x18ead1.api.displayHelpStringTrans('job.lumberjack.woodGathered', false, true, 0xbb8);
          _0x531ab5.currentTreeData = _0x3ca4d4, _0x531ab5.choppingBar ? _0x5b08c4(false) : (_0x531ab5.waitingRequest = true, _0x37af2f.events.callRemote('265869877', _0x3ca4d4.id));
        }), _0x37af2f.events.add('job.lumberjack.startResult', (_0x548004 = false) => {
          _0x531ab5.waitingRequest = false, _0x548004 ? _0x33797b() : delete _0x531ab5.currentTreeData;
        });

        const _0x33797b = async () => {
          if (_0x18ead1.api.usingSystemAnim(true), _0x37af2f.events.call('utils.disablePlayerMove', true), _0x453cde.freezePosition(true), _0x531ab5.currentTreeData) {
            const _0x462043 = _0x18ead1.api.getHeadingFromCoords(_0x453cde.position, _0x531ab5.currentTreeData.position);

            _0x453cde.setHeading(_0x462043);
          }

          _0x531ab5.instructionList || (_0x531ab5.instructionList = new _0x1c4b94.InstructionalButtons(-0x1), _0x531ab5.instructionList.addButton('ibuttons.stopChop', 0x33), _0x531ab5.instructionList.addButton('ibuttons.chop', 0x18), _0x531ab5.instructionList.toggleHud(true)), _0x531ab5.choppingBar || (_0x531ab5.choppingBar = new _0x3cff62.TimerBar('job.lumberjack.chopping', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          }), _0x531ab5.choppingBar.visible || (_0x531ab5.choppingBar.visible = true));
        },
              _0x5b08c4 = (_0x3fbb20 = false) => {
          _0x18ead1.api.stopAnim(), _0x453cde.freezePosition(false), _0x3fbb20 && _0x531ab5.currentTreeData ? (_0x37af2f.events.callRemote('4228316149', _0x531ab5.currentTreeData.id), delete _0x531ab5.currentTreeData) : !_0x3fbb20 && _0x531ab5.currentTreeData && _0x37af2f.events.callRemote('2814083646', _0x531ab5.currentTreeData.id), delete _0x531ab5.currentTreeData, _0x18ead1.api.usingSystemAnim(false), _0x37af2f.events.call('utils.disablePlayerMove', false), _0x531ab5.instructionList && (_0x531ab5.instructionList.resetBar(), _0x531ab5.instructionList.destroy(), _0x531ab5.instructionList = undefined), _0x531ab5.choppingBar && (_0x531ab5.choppingBar.visible = false, _0x531ab5.choppingBar = undefined);
        };
      },
      0x13f9f: (_0x3d0df2, _0x52189a, _0x46a061) => {
        'use strict';

        const a0_0x5f0258 = {
          _0x2c70bf: 0xa8e,
          _0x1742cf: 0xa8e,
          _0x27b153: 0x17f,
          _0x47e5e5: 0x17f
        },
              a0_0x51928b = {
          _0x2a008d: 0xb5b,
          _0x2c91a6: 0x1d66,
          _0x4f7e59: 0x1a2c,
          _0x35e371: 0x6ba,
          _0x1b97a0: 0x17f,
          _0x4e7314: 0x22ba,
          _0x154e99: 0x17f,
          _0xf2c1a5: 0x1aab,
          _0x46d71e: 0x535,
          _0x17cd46: 0x1b65
        },
              a0_0xa7997a = {
          _0x5c10a6: 0x535,
          _0x483510: 0x253d,
          _0x448901: 0xb5b,
          _0xd1e79: 0x2288,
          _0x466537: 0x839
        },
              a0_0xd85e8a = {
          _0x24e9ba: 0x1dda,
          _0x1cbb54: 0xe6d
        };

        _0x46a061.r(_0x52189a);

        var _0x13381f = _0x46a061(0x16a21),
            _0xf9d02d = _0x46a061(0x3db3),
            _0xd62979 = _0x46a061(0x161cd);

        const _0xaa4e3d = _0xd62979.players.local;

        let _0x313d53,
            _0x187846 = [];

        _0xd62979.events.add('job.mafiajob.setupPoints', _0x469d44 => {
          const a0_0x15893f = {
            _0x2db97b: 0x2405,
            _0x181259: 0xda6,
            _0x944c74: 0xf82,
            _0x2d9e9a: 0xa8e,
            _0x9f245c: 0x1d2
          };
          _0xd62979.events.call('job.mafiajob.finishJob'), _0x469d44 && (_0x469d44 = JSON.parse(_0x469d44)).forEach(_0x53885b => {
            let _0x3632f0 = _0xd62979.colshapes.newSphere(_0x53885b.x, _0x53885b.y, _0x53885b.z, 0x1, 0x0);

            _0x3632f0.marker = _0xd62979.markers.new(0x1, new _0xd62979.Vector3(_0x53885b.x, _0x53885b.y, _0x53885b.z - 0x1), 0x1, {
              'color': [0x34, 0x98, 0xdb, 0x64]
            }), _0x3632f0.blip = _0xd62979.blips.new(0x1, new _0xd62979.Vector3(_0x53885b.x, _0x53885b.y, _0x53885b.z), {
              'scale': 0.8,
              'shortRange': false,
              'color': 0x5
            }), (0x0, _0xf9d02d.markAsTranslatedBlip)(_0x3632f0.blip, 'blips.unloadZone'), _0x187846.push(_0x3632f0);
          });
        }), _0xd62979.events.add('playerEnterColshape', _0x56d76e => {
          if (_0x13381f.api.isAuthed() && !_0xaa4e3d.vehicle && null == _0xaa4e3d.getVariable('playerInTrunk') && _0x187846.includes(_0x56d76e)) {
            if (_0xaa4e3d.activeItemId) return _0x13381f.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x313d53 = _0x56d76e, _0x13381f.api.displayHelpStringTrans('displayHelpString.layItem', false, true, 0x1388);
          }
        }), _0xd62979.events.add('playerExitColshape', _0x38b3bc => {
          _0x13381f.api.isAuthed() && _0x187846.includes(_0x38b3bc) && (_0x313d53 = null, _0xd62979.game.ui.clearHelp(true));
        }), _0xd62979.events.add('keys.e', () => {
          _0x313d53 && null == _0xaa4e3d.getVariable('playerInTrunk') && (_0xd62979.game.ui.clearHelp(true), _0x187846 = _0x187846.filter(_0x55443b => _0x55443b !== _0x313d53), _0xd62979.blips.exists(_0x313d53.blip) && _0x313d53.blip.destroy(), _0xd62979.markers.exists(_0x313d53.marker) && _0x313d53.marker.destroy(), _0xd62979.colshapes.exists(_0x313d53) && _0x313d53.destroy(), _0x313d53 = null, _0x13381f.api.stopAnim(), _0x1f0458());
        }), _0xd62979.events.add('job.mafiajob.finishJob', () => {
          _0x187846.forEach(_0x1a87b9 => {
            _0x1a87b9.blip && _0x1a87b9.blip.destroy(), _0x1a87b9.marker && _0x1a87b9.marker.destroy(), _0x1a87b9 && _0x1a87b9.destroy();
          }), _0x313d53 = null, _0x187846 = [];
        });

        const _0x1f0458 = async () => {
          if (!_0xd62979.inventory.hasItem(_0xaa4e3d, 0x129)) return _0x13381f.api.longNotifyTrans('job.mafiajob.noDrugTab', 'error');

          _0x13381f.api.usingSystemAnim(true);

          const _0x1910b7 = await _0x13381f.api.taskPlayAnim('anim@mp_fireworks', 'place_firework_3_box', 0x0, false);

          await _0xd62979.game.sleep(0x3e8 * _0x1910b7), 0x0 === _0x187846.length ? _0xd62979.events.callRemote('3792526898') : _0xd62979.events.callRemote('3553339685'), _0x13381f.api.usingSystemAnim(false);
        };
      },
      0x71c8: (_0x43c8ab, _0xd2520, _0x362154) => {
        'use strict';

        const a0_0x2f09e3 = {
          _0x4c56dc: 0x1b65,
          _0x14e4d1: 0x14d2,
          _0x5533ee: 0xc3c,
          _0x463c4d: 0x147e,
          _0x2651cf: 0x147e,
          _0x1503b3: 0x14d2,
          _0x5c3df8: 0x1da5,
          _0x4f030f: 0x1159,
          _0x229054: 0x6f3,
          _0x2aca82: 0x535,
          _0x326e94: 0x1c66,
          _0x3e53f8: 0x14d2,
          _0x1f6a57: 0x11a8,
          _0x4a8a00: 0x11a8,
          _0x2e31c4: 0x190,
          _0x480346: 0x11a8,
          _0x2d0c8f: 0x11a8,
          _0x30290f: 0x1143,
          _0x5c1d59: 0x19d6,
          _0x1bc2e8: 0x1143
        },
              a0_0x538799 = {
          _0x47260d: 0x2496,
          _0x1fbc5f: 0x4b9,
          _0x1d63dc: 0x3e9
        },
              a0_0x533c9a = {
          _0x2e7f9d: 0x253d,
          _0x575259: 0x1fcd,
          _0x5ee37d: 0x1d66
        },
              a0_0x1b53a4 = {
          _0x45de96: 0x4b9,
          _0x3c0328: 0x32e,
          _0x541d4f: 0x23ab,
          _0x30c7aa: 0x535,
          _0x314dc0: 0x1586
        };

        _0x362154.r(_0xd2520);

        var _0x417eaf = _0x362154(0x16a21),
            _0x39f613 = _0x362154(0xb9cc),
            _0x44bdac = _0x362154(0x176d8),
            _0x1a61f4 = _0x362154(0x5d14),
            _0x2090c3 = _0x362154(0x161cd);

        const _0x119f14 = _0x2090c3.players.local,
              _0x5140d8 = {
          'oreId': undefined,
          'inShape': undefined,
          'lastMinePress': 0x0,
          'waitingRequest': true
        };
        _0x2090c3.events.add('render', () => {
          _0x417eaf.api.isAuthed() && !_0x119f14.vehicle && 0x61 === _0x119f14.activeItemId && _0x5140d8.miningBar && _0x5140d8.miningBar.visible && Date.now() - _0x5140d8.lastMinePress > 0x3e8 && (_0x2090c3.game.controls.isControlJustPressed(0x0, 0x18) || _0x2090c3.game.controls.isDisabledControlJustPressed(0x0, 0x18)) && (_0x5140d8.miningBar.value = _0x417eaf.api.clamp(_0x5140d8.miningBar.value + 0.05, 0x0, 0x1), _0x5140d8.lastMinePress = Date.now(), _0x417eaf.api.taskPlayAnim('melee@large_wpn@streamed_core', 'car_down_attack', 0x0, false), _0x417eaf.api.play3DSound('mining/mining' + _0x1a61f4.u.integer({
            'min': 0x1,
            'max': 0x4
          })), _0x2090c3.events.callRemote('192376338'), _0x5140d8.miningBar.value >= 0x1 && (_0x5140d8.miningBar.visible = false, _0x5140d8.miningBar = undefined, _0x22c6e1(true)));
        }), _0x2090c3.events.add('playerEnterColshape', async _0x1fc78e => {
          if (_0x417eaf.api.isAuthed() && !_0x119f14.vehicle) return _0x1fc78e.hasVariable('ore') ? (_0x5140d8.inShape = _0x1fc78e, void _0x417eaf.api.displayHelpStringTrans('displayHelpString.toDig', false, true, 0x1388)) : undefined;
        }), _0x2090c3.events.add('playerExitColshape', async _0x35a0ab => {
          if (_0x417eaf.api.isAuthed()) return _0x5140d8.inShape && _0x5140d8.inShape === _0x35a0ab ? (_0x5140d8.inShape = null, void _0x2090c3.game.ui.clearHelp(true)) : undefined;
        }), _0x2090c3.events.add('keys.e', async () => {
          if (!_0x119f14.vehicle && !_0x5140d8.waitingRequest) {
            if (_0x5140d8.miningBar) _0x22c6e1();else {
              if (_0x5140d8.inShape && _0x2090c3.colshapes.exists(_0x5140d8.inShape) && _0x5140d8.inShape.hasVariable('ore')) {
                if (0x61 != _0x119f14.activeItemId) return _0x417eaf.api.longNotifyTrans('job.mining.needPickaxeToHarvest', 'error');
                _0x5140d8.oreId = _0x5140d8.inShape.getVariable('ore'), _0x5140d8.inShape = null, _0x2090c3.events.callRemote('2731733861', _0x5140d8.oreId);
              }
            }
          }
        }), _0x2090c3.events.add('job.mining.startResult', (_0x4f32de = false, _0x4326ca) => {
          _0x5140d8.waitingRequest = false, _0x4f32de && !_0x119f14.vehicle && (_0x569779(_0x4326ca), _0x417eaf.api.setDiscordStatus('oreMining'));
        });

        const _0x569779 = async _0x11aca9 => {
          _0x5140d8.inShape = null, _0x417eaf.api.usingSystemAnim(true), _0x2090c3.events.call('utils.disablePlayerMove', true), _0x119f14.freezePosition(true);

          const _0x3a0e9d = _0x417eaf.api.getHeadingFromCoords(_0x119f14.position, _0x11aca9);

          _0x119f14.setHeading(_0x3a0e9d), _0x5140d8.instructionList || (_0x5140d8.instructionList = new _0x39f613.InstructionalButtons(-0x1), _0x5140d8.instructionList.addButton('ibuttons.stopDig', 0x33), _0x5140d8.instructionList.addButton('ibuttons.dig', 0x18), _0x5140d8.instructionList.toggleHud(true)), _0x5140d8.miningBar || (_0x5140d8.miningBar = new _0x44bdac.TimerBar('job.mining.digging', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          }), _0x5140d8.miningBar.visible || (_0x5140d8.miningBar.visible = true));
        },
              _0x22c6e1 = (_0x327a85 = false) => {
          _0x417eaf.api.stopAnim(), _0x119f14.freezePosition(false), _0x327a85 ? _0x2090c3.events.callRemote('3547519278', _0x5140d8.oreId) : !_0x327a85 && _0x5140d8.oreId && _0x2090c3.events.callRemote('1571222382', _0x5140d8.oreId), delete _0x5140d8.currentTreeData, _0x417eaf.api.usingSystemAnim(false), _0x2090c3.events.call('utils.disablePlayerMove', false), _0x5140d8.instructionList && (_0x5140d8.instructionList.resetBar(), _0x5140d8.instructionList.destroy(), _0x5140d8.instructionList = undefined), _0x5140d8.miningBar && (_0x5140d8.miningBar.visible = false, _0x5140d8.miningBar = undefined);
        };
      },
      0x468e: (_0x580fe6, _0x414657, _0x4769fa) => {
        'use strict';

        const a0_0x1a5e77 = {
          _0x40a750: 0xee5,
          _0x6e73c7: 0xee5,
          _0x325925: 0x1d66,
          _0x223ec4: 0xf2f,
          _0x14b286: 0x169e,
          _0x526021: 0x14d2,
          _0x1565c6: 0x1af8,
          _0x4f0440: 0x1da5,
          _0x4f23cc: 0x25e1,
          _0x4ddab7: 0x25e1,
          _0x570b24: 0x17f,
          _0x5e1a82: 0x18b1,
          _0x4334ff: 0xa8e,
          _0x2a3b56: 0x73c,
          _0x2ff1ca: 0x535,
          _0x2296c4: 0x133c,
          _0x1b69cc: 0x1da5,
          _0x11802c: 0x22f0,
          _0x24d549: 0xf2f,
          _0x9ddbca: 0x1e56,
          _0x45a527: 0x23e4,
          _0x9d9507: 0x14d2,
          _0x52da88: 0x92f,
          _0x26d227: 0x19d6,
          _0x520ee8: 0x1a5,
          _0x54506f: 0xf9c,
          _0x1091e8: 0x220,
          _0xcab3a4: 0x535
        },
              a0_0x1dc59f = {
          _0x293587: 0x535,
          _0x1782cf: 0x1c92,
          _0x1bf626: 0xf2e,
          _0x40a072: 0x4a9
        },
              a0_0x3a0bc9 = {
          _0x29cde1: 0x535,
          _0x2312f7: 0x25e1,
          _0x30ef17: 0x4b9,
          _0x2f82c3: 0x2001,
          _0x24048f: 0x535,
          _0x2a380e: 0xbb2,
          _0x1d7489: 0x235b,
          _0x4086b6: 0x185e,
          _0xcb6c21: 0x1099,
          _0x562d9d: 0x608
        },
              a0_0x2fedad = {
          _0x3a6a4: 0x16c5,
          _0x310f7d: 0x25e1,
          _0x4616fb: 0x25e1,
          _0x144c28: 0x1128,
          _0x122d11: 0x18b1,
          _0x457982: 0x17f,
          _0x39e3ce: 0x6ba,
          _0x35dc15: 0xa8e,
          _0x101d33: 0x17f
        },
              a0_0x108161 = {
          _0x251d1b: 0x1a5,
          _0x12d98e: 0xf9c,
          _0x193970: 0x1aab,
          _0x3ee8a8: 0x16c5,
          _0x1b63c6: 0x25e1,
          _0x41c1cd: 0x1128,
          _0xf1ca50: 0x18b1,
          _0xa1a2: 0x17f,
          _0x44c9fd: 0x16c5,
          _0x5d6987: 0xa8e,
          _0x1363cb: 0x17f
        };

        _0x4769fa.r(_0x414657);

        var _0x741535 = _0x4769fa(0x16a21),
            _0x4032e5 = _0x4769fa(0x176d8),
            _0x63085c = _0x4769fa(0x3db3),
            _0x43a382 = _0x4769fa(0x915a),
            _0xcc8c06 = _0x4769fa(0x161cd);

        const _0x1007e0 = _0xcc8c06.players.local;

        let _0x3d7049,
            _0x189c9f,
            _0x1ef959,
            _0x92f81a,
            _0x351e76,
            _0x58f860 = 0x0,
            _0xd874e7 = 0x0,
            _0x2ace2b = {},
            _0x457922 = {};

        const _0x1823cc = {
          'loadWaiting': false
        };
        _0xcc8c06.events.add('job.moneycollector.failJob', () => {
          _0xcc8c06.events.call('job.moneycollector.clearLoadBlip'), _0xcc8c06.events.call('job.moneycollector.clearLoadPoint'), _0x2ace2b && (_0xcc8c06.colshapes.exists(_0x2ace2b.shape) && _0x2ace2b.shape.destroy(), _0xcc8c06.checkpoints.exists(_0x2ace2b.checkpoint) && _0x2ace2b.checkpoint.destroy(), _0xcc8c06.blips.exists(_0x2ace2b.blip) && _0x2ace2b.blip.destroy(), _0x2ace2b = null);
        }), _0xcc8c06.events.add('job.moneycollector.initLoadBlip', _0x1cb0e3 => {
          _0x1cb0e3 && (_0x1cb0e3 = JSON.parse(_0x1cb0e3), _0x1ef959 = _0xcc8c06.blips.new(0x26a, new _0xcc8c06.Vector3(parseFloat(_0x1cb0e3.x), parseFloat(_0x1cb0e3.y), parseFloat(_0x1cb0e3.z)), {
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x63085c.markAsTranslatedBlip)(_0x1ef959, 'blips.loadZone'), _0x1ef959.setRoute(true));
        }), _0xcc8c06.events.add('job.moneycollector.initLoadPoint', _0x4886b6 => {
          _0x4886b6 && (_0x4886b6 = JSON.parse(_0x4886b6), _0x351e76 = 'load', _0x457922.shape = _0xcc8c06.colshapes.newSphere(parseFloat(_0x4886b6.x), parseFloat(_0x4886b6.y), parseFloat(_0x4886b6.z), 0xa, 0x0), _0x457922.checkpoint = _0xcc8c06.checkpoints.new(0x4, new _0xcc8c06.Vector3(parseFloat(_0x4886b6.x), parseFloat(_0x4886b6.y), parseFloat(_0x4886b6.z) - 0x1), 0xa, {
            'direction': new _0xcc8c06.Vector3(parseFloat(_0x4886b6.x), parseFloat(_0x4886b6.y), parseFloat(_0x4886b6.z)),
            'color': [0x34, 0x98, 0xdb, 0x64],
            'visible': true,
            'dimension': 0x0
          }));
        }), _0xcc8c06.events.add('job.moneycollector.clearLoadPoint', () => {
          _0x457922 && (_0xcc8c06.colshapes.exists(_0x457922.shape) && (_0x457922.shape = _0x457922.shape.destroy()), _0xcc8c06.checkpoints.exists(_0x457922.checkpoint) && (_0x457922.checkpoint = _0x457922.checkpoint.destroy()));
        }), _0xcc8c06.events.add('job.moneycollector.clearLoadBlip', () => {
          _0xcc8c06.blips.exists(_0x1ef959) && (_0x1ef959 = _0x1ef959.destroy());
        }), _0xcc8c06.events.add('job.moneycollector.clearWorkPoints', () => {
          _0x2ace2b && (_0xcc8c06.colshapes.exists(_0x2ace2b.shape) && (_0x2ace2b.shape = _0x2ace2b.shape.destroy()), _0xcc8c06.checkpoints.exists(_0x2ace2b.checkpoint) && (_0x2ace2b.checkpoint = _0x2ace2b.checkpoint.destroy()), _0xcc8c06.blips.exists(_0x2ace2b.blip) && (_0x2ace2b.blip = _0x2ace2b.blip.destroy()));
        }), _0xcc8c06.events.add('playerEnterColshape', _0x4944bc => {
          if (_0x741535.api.isAuthed() && (_0x457922 && _0x457922.shape === _0x4944bc && _0x1007e0.vehicle && _0x741535.api.getEntitySync(_0x1007e0.vehicle, 'driver') == _0x1007e0.remoteId && 'load' == _0x351e76 && (_0x189c9f = _0x4944bc, _0x741535.api.displayHelpStringTrans('displayHelpString.toLoadMoney', false, true, 0x2710)), _0x2ace2b && _0x2ace2b.shape === _0x4944bc && !_0x1007e0.vehicle)) {
            if (_0xcc8c06.players.local.activeItemId) return _0x741535.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x2ace2b && _0x4944bc === _0x2ace2b.shape && 'unload' == _0x351e76 && _0xcc8c06.events.callRemote('4034929131');
          }
        }), _0xcc8c06.events.add('playerExitColshape', _0x6abe => {
          _0x741535.api.isAuthed() && _0x189c9f && _0x189c9f === _0x6abe && (_0xcc8c06.game.ui.clearHelp(true), _0x189c9f = null);
        }), _0xcc8c06.events.add('keys.e', () => {
          0x3 === _0x1007e0.getVariable('job') && _0x189c9f && _0x457922 && _0x189c9f === _0x457922.shape && 'unload' !== _0x351e76 && _0x1007e0.vehicle && _0x1007e0.vehicle.getVariable('partyId') === _0x43a382.default.party.partyId && !_0x1823cc.loadWaiting && (_0x1823cc.loadWaiting = true, _0xcc8c06.events.callRemote('1947003317'));
        }), _0xcc8c06.events.add('job.moneycollector.loadResponse', _0x431610 => {
          _0x1823cc.loadWaiting = false, 0x0 === _0x431610 ? _0x741535.api.notifyTrans('job.moneycollector.canUseThisVehicle', {
            'type': 'warn'
          }) : 0x1 === _0x431610 ? _0x741535.api.notifyTrans('job.moneycollector.moneyAlreadyStartLoad', {
            'type': 'warn'
          }) : 0x2 === _0x431610 && _0x4c64e4();
        }), _0xcc8c06.events.add('job.moneycollector.setUnLoadRoute', _0x534f6c => {
          _0x534f6c && (_0x534f6c = JSON.parse(_0x534f6c), _0xcc8c06.events.call('job.moneycollector.clearLoadBlip'), _0xcc8c06.events.call('job.moneycollector.clearLoadPoint'), _0x351e76 = 'unload', _0x2ace2b = _0x534f6c, _0x2ace2b.shape = _0xcc8c06.colshapes.newSphere(parseFloat(_0x534f6c.x), parseFloat(_0x534f6c.y), parseFloat(_0x534f6c.z), 0x2, -0x1), _0x2ace2b.checkpoint = _0xcc8c06.checkpoints.new(0x4, new _0xcc8c06.Vector3(parseFloat(_0x534f6c.x), parseFloat(_0x534f6c.y), parseFloat(_0x534f6c.z) - 0x1), 0x1, {
            'direction': new _0xcc8c06.Vector3(parseFloat(_0x534f6c.x), parseFloat(_0x534f6c.y), parseFloat(_0x534f6c.z)),
            'color': [0x34, 0x98, 0xdb, 0x64],
            'visible': true,
            'dimension': -0x1
          }), _0x2ace2b.blip = _0xcc8c06.blips.new(0x1, new _0xcc8c06.Vector3(parseFloat(_0x534f6c.x), parseFloat(_0x534f6c.y), parseFloat(_0x534f6c.z)), {
            'color': 0x5,
            'dimension': -0x1,
            'shortRange': false
          }), (0x0, _0x63085c.markAsTranslatedBlip)(_0x2ace2b.blip, 'blips.unloadZone'), _0x2ace2b.blip.setFlashes(true), _0xcc8c06.events.call('gps.setPoint', JSON.stringify({
            'x': parseFloat(_0x534f6c.x),
            'y': parseFloat(_0x534f6c.y),
            'z': parseFloat(_0x534f6c.z),
            'title': _0x741535.api.language.translatePlayer('gps.waypoints.unloadingPoint')
          })));
        }), _0xcc8c06.events.add('time.everySec', () => {
          if (_0x58f860) {
            _0x58f860--;

            const _0xee83f2 = parseInt(_0x58f860 / 0x3c),
                  _0x58a0d4 = parseInt(_0x58f860 % 0x3c);

            _0x3d7049 && (_0x3d7049.value = ('0' + _0xee83f2).slice(-0x2) + ':' + ('0' + _0x58a0d4).slice(-0x2), 0x0 === _0x58f860 ? (_0xcc8c06.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true), _0x3d7049 && (_0x3d7049.visible = false), _0xcc8c06.events.call('gps.clearPoint'), _0xcc8c06.events.callRemote('578380221'), _0x2ace2b && (_0x2ace2b.shape = _0x2ace2b.shape.destroy()), _0x2ace2b && (_0x2ace2b.checkpoint = _0x2ace2b.checkpoint.destroy()), _0x2ace2b && (_0x2ace2b.blip = _0x2ace2b.blip.destroy())) : 0xa === _0x58f860 && _0xcc8c06.game.audio.playSoundFrontend(-0x1, '10s', 'MP_MISSION_COUNTDOWN_SOUNDSET', true));
          }

          'loading' === _0x351e76 && _0x92f81a && _0x1007e0.isInAnyVehicle(false) && _0x1007e0.vehicle.getPedInSeat(_0x741535.api.getVehSeat(-0x1)) == _0x1007e0.handle ? (_0x92f81a.visible || (_0x92f81a.visible = true), null == _0x92f81a.value && (_0x92f81a.value = _0xd874e7), _0xd874e7 += 0.03, _0x92f81a.value += 0.03, _0x92f81a.value >= 0x1 && ('loading' === _0x351e76 && (_0x351e76 = 'loaded', _0xcc8c06.events.callRemote('3906900724')), _0x741535.api.toggleSpeedo(true), _0xcc8c06.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true), _0xcc8c06.events.call('utils.disablePlayerExit', false), _0x92f81a && (_0x92f81a.visible = false, _0x92f81a = null, _0xd874e7 = 0x0))) : _0x92f81a && !_0x1007e0.isInAnyVehicle(false) && (_0x92f81a.visible = false, _0x92f81a = null, _0xd874e7 = 0x0, _0xcc8c06.events.call('job.moneycollector.clearLoadBlip'), _0xcc8c06.events.call('job.moneycollector.clearLoadPoint'), _0x741535.api.toggleSpeedo(true));
        }), _0xcc8c06.events.add('job.moneycollector.startSeatTimeout', (_0x460e5e, _0x144322) => {
          _0x58f860 = 0xb4, _0x3d7049 = new _0x4032e5.TimerBar(_0x460e5e, null, {
            'value': '03:00'
          });
        }), _0xcc8c06.events.add('job.moneycollector.stopSeatTimeout', () => {
          _0x3d7049 && (_0x3d7049.visible = false, _0x58f860 = null);
        });

        const _0x4c64e4 = () => {
          _0x351e76 = 'loading', _0xcc8c06.events.call('utils.disablePlayerExit', true), _0x1007e0.vehicle.setHalt(0x3, 0x1, false), _0x1007e0.vehicle.setOnGroundProperly(true), _0x1007e0.vehicle.setEngineOn(false, false, true), _0xcc8c06.events.callRemote('2973793146', false), _0xcc8c06.events.call('job.moneycollector.clearLoadPoint'), _0xcc8c06.events.call('job.moneycollector.clearLoadBlip'), _0x92f81a || (_0x92f81a = new _0x4032e5.TimerBar('job.moneycollector.loadingMoney', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          })), _0x741535.api.toggleSpeedo(false);
        };

        _0xcc8c06.events.add('job.moneycollector.viewRentCars', (_0x59835a, _0xbc9191) => {
          _0xcc8c06.events.call('dialog.close', false), _0xcc8c06.events.call('rentcar.init', _0x59835a, _0xbc9191);
        });
      },
      0x6a3: (_0x592dcc, _0x5ebc89, _0x1a3b64) => {
        'use strict';

        const a0_0x40a084 = {
          _0x5b1ca7: 0x4b9,
          _0x1b49ae: 0x1fbd,
          _0x5209a3: 0x535,
          _0x1d8706: 0xb75,
          _0x5b8ed0: 0x1fbd,
          _0x36dd1b: 0x14d2
        },
              a0_0x242aba = {
          _0x50e00a: 0x535,
          _0x35c483: 0x253d,
          _0x17513c: 0x1d66,
          _0x2616eb: 0x59d
        },
              a0_0x5495c5 = {
          _0x977c0a: 0x253d,
          _0x7ab786: 0x1fbd,
          _0x1dc4ee: 0x2288,
          _0x3e28e2: 0x535
        };

        _0x1a3b64.r(_0x5ebc89);

        var _0x2926f7 = _0x1a3b64(0x16a21),
            _0x1a4e18 = _0x1a3b64(0x161cd);

        const _0x45fe91 = _0x1a4e18.players.local;

        let _0x4eceb4, _0x57ba24;

        _0x1a4e18.events.add('playerEnterColshape', async _0x574e90 => {
          if (_0x2926f7.api.isAuthed() && !_0x45fe91.vehicle) return _0x574e90.hasVariable('mushroom') ? 0xf6 != _0x45fe91.activeItemId ? _0x2926f7.api.longNotifyTrans('job.mushroomer.needKnifeToHarvest', 'error') : (_0x57ba24 = _0x574e90, void _0x2926f7.api.displayHelpStringTrans('displayHelpString.toCollect', false, true, 0x1388)) : undefined;
        }), _0x1a4e18.events.add('playerExitColshape', async _0x511c75 => {
          if (_0x2926f7.api.isAuthed()) return _0x57ba24 && _0x57ba24 === _0x511c75 ? (_0x57ba24 = null, void _0x1a4e18.game.ui.clearHelp(true)) : undefined;
        }), _0x1a4e18.events.add('keys.e', async () => {
          if (!_0x45fe91.vehicle && _0x57ba24 && _0x1a4e18.colshapes.exists(_0x57ba24) && _0x57ba24.hasVariable('mushroom')) {
            if (0xf6 != _0x45fe91.activeItemId) return _0x2926f7.api.longNotifyTrans('job.mushroomer.needKnifeToHarvest', 'error');
            _0x4eceb4 = _0x57ba24.getVariable('mushroom'), _0x57ba24 = null, _0x1a4e18.events.callRemote('2380132162', _0x4eceb4);
          }
        }), _0x1a4e18.events.add('job.mushroomer.harvestRequest.success', async () => {
          if (_0x45fe91.vehicle) return;
          _0x57ba24 = null, _0x2926f7.api.usingSystemAnim(true), _0x2926f7.api.setDiscordStatus('mushroomCollect');

          const _0x329b16 = await _0x2926f7.api.taskPlayAnim('amb@world_human_gardener_plant@female@enter', 'enter_female', 0x2, false);

          if (await _0x1a4e18.game.sleep(0x3e8 * _0x329b16), await _0x2926f7.api.taskPlayAnim('amb@world_human_gardener_plant@female@base', 'base_female', 0x1, true), _0x45fe91.vehicle) return _0x2926f7.api.usingSystemAnim(false);
          if (null == _0x4eceb4) return _0x2926f7.api.usingSystemAnim(false);

          const _0x5cc628 = await _0x2926f7.api.taskPlayAnim('amb@world_human_gardener_plant@female@exit', 'exit_female', 0x0, false);

          await _0x1a4e18.game.sleep(0x3e8 * _0x5cc628), _0x2926f7.api.usingSystemAnim(false), _0x1a4e18.events.callRemote('1183000077', _0x4eceb4), _0x2926f7.api.setDiscordStatus();
        });
      },
      0x16bb3: (_0x147763, _0x5d2331, _0x2fb451) => {
        'use strict';

        _0x2fb451.r(_0x5d2331), _0x2fb451(0x16a21);
      },
      0x175a2: (_0x146c8e, _0x307b3d, _0x540cbb) => {
        'use strict';

        const a0_0x5b0532 = {
          _0x35a0ff: 0x1edc,
          _0xd49a9e: 0x13b4,
          _0xe96177: 0x135e,
          _0x8b29f4: 0x535,
          _0x10e946: 0x2620,
          _0x163871: 0x535
        },
              a0_0x817cf2 = {
          _0x2d7415: 0x78e,
          _0x381905: 0x183f,
          _0x551c59: 0x4b9,
          _0x1d8681: 0x133c,
          _0x335674: 0xe74,
          _0x35e657: 0xe74,
          _0x3e0c24: 0x196a,
          _0x580b6c: 0x14d2,
          _0x206a1b: 0x1da5,
          _0x1e98da: 0x78e,
          _0x215326: 0x1c5e,
          _0x3e2624: 0x116a,
          _0xbd1076: 0x1d66,
          _0x2f8614: 0xf2f,
          _0x44f13f: 0x1e56,
          _0x5a3e4f: 0x1a5,
          _0x18a783: 0x92f,
          _0x4a335f: 0x19d6,
          _0xda6952: 0x14d2,
          _0x2f01a0: 0x535
        },
              a0_0x32a581 = {
          _0x177e78: 0x133c,
          _0x17d428: 0x1a5,
          _0x154e89: 0x92f,
          _0x4c4826: 0x4b9,
          _0x3db2a2: 0x1864,
          _0x5cc84e: 0x4b9,
          _0x40064c: 0x1a35,
          _0x12d38c: 0xb5f,
          _0x4a9e38: 0x14d2,
          _0x53eeb8: 0x1121,
          _0x278beb: 0x1aab,
          _0x15babc: 0x16c5,
          _0x22f7ab: 0x25e1,
          _0x56e597: 0x1128,
          _0x9d9ef5: 0x24fa,
          _0x46436d: 0x6ba,
          _0x5dd19d: 0xa8e,
          _0x442a83: 0x17f,
          _0x9fbb98: 0x5cc,
          _0x4acc08: 0x535,
          _0x180bcc: 0x15a8,
          _0xf4d809: 0x1d71
        },
              a0_0x5e7e11 = {
          _0x1afe0e: 0xc95,
          _0x26e4a1: 0x4b9,
          _0x2bd2a1: 0x4b9,
          _0x371fe8: 0x535,
          _0x55cb2f: 0x1edc,
          _0x3b52bd: 0x59d,
          _0x52a120: 0x4b9,
          _0x53e1cc: 0x535,
          _0x221ae6: 0x2001,
          _0x47137c: 0x535,
          _0x31f3c0: 0x1a07,
          _0x87e0d8: 0x1934,
          _0x4cf0d2: 0x1d66,
          _0xc39380: 0x59d
        },
              a0_0xb4b688 = {
          _0x411a2d: 0x1d90,
          _0x3941f3: 0x19d2,
          _0x14d7a7: 0xe6d
        },
              a0_0xaa4dae = {
          _0x292d71: 0x6ba,
          _0x18ea7b: 0x17f
        },
              a0_0x4410bc = {
          _0x5885ea: 0x1d90
        },
              a0_0x41dd06 = {
          _0x1b01b7: 0x6ba,
          _0x54ef6a: 0xf82,
          _0x214ab8: 0x1d55
        },
              a0_0x51c087 = {
          _0x34c94b: 0x6ba,
          _0xc6379: 0x17f
        },
              a0_0x5e182b = {
          _0x4e40db: 0x1b36,
          _0x482a33: 0x25e1,
          _0x212060: 0x22de,
          _0x5d7423: 0x24fa,
          _0x81d420: 0xf82,
          _0x259b80: 0x22de,
          _0xcb5b1d: 0x1d55,
          _0x174e17: 0xa8e,
          _0x5cc983: 0x21e8,
          _0x3e909c: 0xa8e,
          _0x2be03a: 0xa8e,
          _0x162a9d: 0x14d2,
          _0x4267b5: 0x1987,
          _0x4dd55b: 0x1349
        },
              a0_0x110e16 = {
          _0x2658e5: 0x16c5,
          _0x4da84c: 0x25e1,
          _0x50c6b4: 0x17f,
          _0x429506: 0x1128
        },
              a0_0x4e00d2 = {
          _0x2afee0: 0x1d66
        };

        _0x540cbb.r(_0x307b3d);

        var _0xe77229 = _0x540cbb(0x16a21),
            _0x1765e1 = _0x540cbb(0x176d8),
            _0x5ca234 = _0x540cbb(0x3db3),
            _0x386137 = _0x540cbb(0x161cd);

        const _0x2273d5 = _0x386137.players.local;

        let _0x47dac4,
            _0x5b0275,
            _0x84376,
            _0x1476c0,
            _0xe90fe8 = 0x0,
            _0x10adc9 = [],
            _0x36065b = [],
            _0x129058 = [];

        const _0x3d7cf3 = {
          'Тягач': [_0x386137.game.joaat('pounder'), _0x386137.game.joaat('pounder2'), _0x386137.game.joaat('pounder3')],
          'Грузовик': [_0x386137.game.joaat('mule'), _0x386137.game.joaat('benson'), _0x386137.game.joaat('nspeedo'), _0x386137.game.joaat('msprinter'), _0x386137.game.joaat('dsprinter')],
          'Пикап': [_0x386137.game.joaat('yosemiteswb'), _0x386137.game.joaat('bison4'), _0x386137.game.joaat('sadler'), _0x386137.game.joaat('bison'), _0x386137.game.joaat('youga3'), _0x386137.game.joaat('bobcatxl'), _0x386137.game.joaat('burrito3'), _0x386137.game.joaat('youga'), _0x386137.game.joaat('youga2'), _0x386137.game.joaat('moonbeam'), _0x386137.game.joaat('sandking'), _0x386137.game.joaat('sandking2'), _0x386137.game.joaat('contender'), _0x386137.game.joaat('caracara2'), _0x386137.game.joaat('everon'), _0x386137.game.joaat('hellion'), _0x386137.game.joaat('hellion2')]
        };
        _0x386137.events.add('job.trucker.failJob', () => {
          _0x386137.events.call('job.trucker.clearLoadBlips'), _0x386137.events.call('job.trucker.clearTrailerBlips'), _0x386137.events.call('job.trucker.clearLoadPoints'), _0x47dac4 && (_0x386137.colshapes.exists(_0x47dac4.shape) && _0x47dac4.shape.destroy(), _0x386137.checkpoints.exists(_0x47dac4.point) && _0x47dac4.point.destroy(), _0x386137.blips.exists(_0x47dac4.blip) && _0x47dac4.blip.destroy(), _0x47dac4 = null);
        }), _0x386137.events.add('playerEnterColshape', _0x54043a => {
          _0xe77229.api.isAuthed() && _0x2273d5.vehicle && _0xe77229.api.getEntitySync(_0x2273d5.vehicle, 'driver') == _0x2273d5.remoteId && _0x404765(_0x2273d5.vehicle) && (_0x10adc9 && _0x10adc9.length > 0x0 && _0x10adc9.map(_0x572360 => _0x572360.shape).includes(_0x54043a) && 'load' === _0x5b0275 && (_0x1476c0 = _0x54043a, _0xe77229.api.displayHelpStringTrans('displayHelpString.toLoadCargo', false, true, 0x2710)), _0x47dac4 && _0x47dac4.shape == _0x54043a && 'unload' == _0x5b0275 && (_0x1476c0 = _0x54043a, _0xe77229.api.displayHelpStringTrans('displayHelpString.toUnloadCargo', false, true, 0x2710)));
        }), _0x386137.events.add('playerExitColshape', _0x1934f4 => {
          _0xe77229.api.isAuthed() && _0x1476c0 && _0x1476c0 === _0x1934f4 && (_0x386137.game.ui.clearHelp(true), _0x1476c0 = undefined);
        }), _0x386137.events.add('job.trucker.initLoadPoints', _0x54c5c1 => {
          const a0_0x3cb6cf = {
            _0x71b2a3: 0x25e1,
            _0x3afd70: 0xf82,
            _0x13a539: 0x22de,
            _0x193bfa: 0x1d55
          };
          _0x54c5c1 && (_0x54c5c1 = JSON.parse(_0x54c5c1), _0x5b0275 = 'load', _0x54c5c1.forEach(_0x42d371 => {
            const _0x452b92 = {};
            _0x452b92.shape = _0x386137.colshapes.newSphere(parseFloat(_0x42d371.x), parseFloat(_0x42d371.y), parseFloat(_0x42d371.z), _0x42d371.range ? parseInt(_0x42d371.range) : 0x14, 0x0), _0x452b92.checkpoint = _0x386137.checkpoints.new(0x1, new _0x386137.Vector3(parseFloat(_0x42d371.x), parseFloat(_0x42d371.y), parseFloat(_0x42d371.z) - 0x1), _0x42d371.range ? parseInt(_0x42d371.range) : 0x14, {
              'direction': new _0x386137.Vector3(parseFloat(_0x42d371.x), parseFloat(_0x42d371.y), parseFloat(_0x42d371.z)),
              'color': [0x34, 0x98, 0xdb, 0x64],
              'visible': true,
              'dimension': 0x0
            }), _0x10adc9.push(_0x452b92);
          }));
        }), _0x386137.events.add('job.trucker.clearLoadPoints', () => {
          Array.isArray(_0x10adc9) && _0x10adc9.length > 0x0 && (_0x10adc9.forEach(_0x5968c5 => {
            _0x386137.colshapes.exists(_0x5968c5.shape) && _0x5968c5.shape.destroy(), _0x386137.checkpoints.exists(_0x5968c5.checkpoint) && _0x5968c5.checkpoint.destroy();
          }), _0x10adc9 = []);
        }), _0x386137.events.add('job.trucker.setUnLoadRoute', _0x60e179 => {
          _0x60e179 && (_0x60e179 = JSON.parse(_0x60e179), _0x5b0275 = 'unload', _0x47dac4 = _0x60e179, _0x47dac4.shape = _0x386137.colshapes.newSphere(parseFloat(_0x60e179.x), parseFloat(_0x60e179.y), parseFloat(_0x60e179.z), _0x60e179.range ? parseInt(_0x60e179.range) : 0x14, 0x0), _0x47dac4.point = _0x386137.checkpoints.new(0x1, new _0x386137.Vector3(parseFloat(_0x60e179.x), parseFloat(_0x60e179.y), parseFloat(_0x60e179.z) - 0x1), _0x60e179.range ? parseInt(_0x60e179.range) : 0x14, {
            'direction': new _0x386137.Vector3(parseFloat(_0x60e179.x), parseFloat(_0x60e179.y), parseFloat(_0x60e179.z)),
            'color': [0x34, 0x98, 0xdb, 0x64],
            'visible': true,
            'dimension': 0x0
          }), _0x47dac4.blip = _0x386137.blips.new(0x1, new _0x386137.Vector3(parseFloat(_0x60e179.x), parseFloat(_0x60e179.y), parseFloat(_0x60e179.z)), {
            'name': 'Точка разгрузки',
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x5ca234.markAsTranslatedBlip)(_0x47dac4.blip, 'blips.unloadZone'), _0x47dac4.blip.setFlashes(true), _0x386137.events.call('gps.setPoint', JSON.stringify({
            'x': parseFloat(_0x60e179.x),
            'y': parseFloat(_0x60e179.y),
            'z': parseFloat(_0x60e179.z),
            'title': _0xe77229.api.language.translatePlayer('gps.waypoints.unloadingPoint')
          })));
        }), _0x386137.events.add('job.trucker.initLoadBlips', _0x42e0b9 => {
          Array.isArray(_0x36065b) && _0x36065b.length > 0x0 && (_0x36065b.forEach(_0x5c560f => {
            _0x386137.blips.exists(_0x5c560f) && _0x5c560f.destroy();
          }), _0x36065b = []), (_0x42e0b9 = JSON.parse(_0x42e0b9)).forEach(_0x36f721 => {
            const _0x35367c = _0x386137.blips.new(0x268, new _0x386137.Vector3(parseFloat(_0x36f721.x), parseFloat(_0x36f721.y), parseFloat(_0x36f721.z)), {
              'name': 'Загрузка груза',
              'color': 0x26,
              'shortRange': false
            });

            (0x0, _0x5ca234.markAsTranslatedBlip)(_0x35367c, 'blips.loadZone'), _0x36065b.push(_0x35367c);
          });
        }), _0x386137.events.add('job.trucker.clearTrailerBlips', () => {
          Array.isArray(_0x129058) && _0x129058.length > 0x0 && (_0x129058.forEach(_0x1adda6 => {
            _0x386137.blips.exists(_0x1adda6) && _0x1adda6.destroy();
          }), _0x129058 = []);
        }), _0x386137.events.add('job.trucker.clearLoadBlips', () => {
          const a0_0x295c5d = {
            _0x5b6847: 0x16c5
          };
          Array.isArray(_0x36065b) && _0x36065b.length > 0x0 && (_0x36065b.forEach(_0x222bf9 => {
            _0x386137.blips.exists(_0x222bf9) && _0x222bf9.destroy();
          }), _0x36065b = []);
        }), _0x386137.events.add('keys.e', () => {
          if (0x4 !== _0x2273d5.getVariable('job')) return;
          if (!_0x2273d5.vehicle) return;
          if (!_0x2273d5.vehicle.getPedInSeat(_0xe77229.api.getVehSeat(-0x1)) == _0x2273d5.handle) return;
          if (!_0x10adc9) return;

          const _0x797ebe = _0x10adc9.map(_0x55a9ff => _0x55a9ff.shape);

          if (_0x1476c0 && _0x797ebe.includes(_0x1476c0) && _0x404765(_0x2273d5.vehicle) && (_0x386137.game.ui.clearHelp(true), _0x3c800c()), _0x1476c0 && _0x47dac4 && _0x1476c0 === _0x47dac4.shape && _0x404765(_0x2273d5.vehicle)) {
            const _0x468702 = _0xe77229.api.getLocalVariable('job.trucker.deliveryVeh');

            if (_0x468702 && _0x468702 != _0x2273d5.vehicle.remoteId) return _0xe77229.api.longNotifyTrans('job.trucker.notYourVehicle', 'error');
            _0x386137.game.ui.clearHelp(true), _0x15f4d4();
          }
        });

        const _0x3c800c = async () => {
          _0x2273d5.vehicle && _0x2273d5.vehicle.getPedInSeat(_0xe77229.api.getVehSeat(-0x1)) == _0x2273d5.handle && (_0xe90fe8 = 0xa, _0x5b0275 = 'loading', _0x386137.events.call('utils.disablePlayerExit', true), _0x2273d5.vehicle.setHalt(0x3, 0x1, false), _0x2273d5.vehicle.setEngineOn(false, false, true), _0x386137.events.callRemote('2973793146', false), _0x386137.events.call('job.trucker.clearLoadPoints'), _0x386137.events.call('job.trucker.clearLoadBlips'), _0xe77229.api.longNotifyTrans('job.trucker.loadingCargo', 'warn', 0x2710), _0xe77229.api.toggleSpeedo(false), _0x84376 || (_0x84376 = new _0x1765e1.TimerBar('job.trucker.loading', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          })));
        },
              _0x15f4d4 = async () => {
          _0x2273d5.vehicle && _0x2273d5.vehicle.getPedInSeat(_0xe77229.api.getVehSeat(-0x1)) == _0x2273d5.handle && (_0xe90fe8 = 0xa, _0x5b0275 = 'unloading', _0x386137.events.call('utils.disablePlayerExit', true), _0x2273d5.vehicle.setHalt(0x3, 0x1, false), _0x2273d5.vehicle.setOnGroundProperly(true), _0x2273d5.vehicle.setEngineOn(false, false, true), _0x386137.events.callRemote('2973793146', false), _0x386137.colshapes.exists(_0x47dac4.shape) && _0x47dac4.shape.destroy(), _0x386137.checkpoints.exists(_0x47dac4.point) && _0x47dac4.point.destroy(), _0x386137.blips.exists(_0x47dac4.blip) && _0x47dac4.blip.destroy(), _0x47dac4 = null, _0xe77229.api.longNotifyTrans('job.trucker.unloadingCargo', 'warn', 0x2710), _0xe77229.api.toggleSpeedo(false), _0x84376 || (_0x84376 = new _0x1765e1.TimerBar('job.trucker.unloading', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          })));
        };

        _0x386137.events.add('time.everySec', () => {
          ('loading' === _0x5b0275 || 'unloading' === _0x5b0275) && _0x84376 && _0x2273d5.isInAnyVehicle(false) && _0x2273d5.vehicle.getPedInSeat(_0xe77229.api.getVehSeat(-0x1)) == _0x2273d5.handle ? (_0x84376.visible || (_0x84376.visible = true), null == _0x84376.value && (_0x84376.value = _0xe90fe8), _0xe90fe8 += 0.075, _0x84376.value += 0.075, _0x84376.value >= 0x1 && ('loading' === _0x5b0275 ? (_0x5b0275 = 'loaded', _0x386137.events.callRemote('3119290098')) : 'unloading' === _0x5b0275 && (_0x5b0275 = 'unloaded', _0x386137.events.callRemote('4227800731')), _0xe77229.api.toggleSpeedo(true), _0x386137.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true), _0x386137.events.call('utils.disablePlayerExit', false), _0x84376 && (_0x84376.visible = false, _0x84376 = null, _0xe90fe8 = 0x0))) : _0x84376 && !_0x2273d5.isInAnyVehicle(false) && (_0x84376.visible = false, _0x84376 = null, _0xe90fe8 = 0x0, _0x386137.events.call('job.trucker.failJob'), _0xe77229.api.toggleSpeedo(true));
        });

        const _0x404765 = _0x2ee5c4 => {
          try {
            return !!(_0x3d7cf3.Тягач.includes(_0x2ee5c4.model) || _0x3d7cf3.Грузовик.includes(_0x2ee5c4.model) || _0x3d7cf3.Пикап.includes(_0x2ee5c4.model)) && (!(!_0xe77229.api.vehicleIsMyOwn(_0x2ee5c4) && !_0xe77229.api.isMyFamilyVehicle(_0x2ee5c4)) || !!_0xe77229.api.vehicleIsMyRent(_0x2ee5c4) || !!_0xe77229.api.getEntitySync(_0x2ee5c4, 'keyBinds', 'array').some(_0x1c65ef => _0x386137.inventory.getFulllPlayerItems(_0x2273d5).map(_0xe1241a => _0xe1241a.id).includes(_0x1c65ef)));
          } catch (_0x5b17da) {
            _0xe77229.api.sendError(_0x5b17da);
          }
        };
      },
      0x3db3: (_0x3d9549, _0x2eec8e, _0x357c06) => {
        'use strict';

        const a0_0x59d1f8 = {
          _0xb1e637: 0x6ba,
          _0x4afc95: 0x2530
        },
              a0_0x119ad7 = {
          _0x5bffcf: 0x6ba,
          _0x146442: 0x16c5,
          _0x2fc80c: 0x2530,
          _0x25e509: 0x138f,
          _0x1f09b1: 0x235b,
          _0x282134: 0x1210,
          _0x5a8d70: 0x1bb9,
          _0x2dab63: 0x1349
        };
        _0x357c06.r(_0x2eec8e), _0x357c06.d(_0x2eec8e, {
          'markAsTranslatedBlip': () => _0x1553de,
          'processNewBlipTranslation': () => _0x442721
        });

        var _0x5d9c5a = _0x357c06(0x16a21),
            _0x5bb241 = _0x357c06(0x161cd);

        const _0x57926c = new Set(),
              _0x4236c3 = _0x3f7dd7 => {
          if (_0x5bb241.blips.exists(_0x3f7dd7)) {
            if (_0x3f7dd7.handle) {
              const _0x29122c = _0x5d9c5a.api.language.getPlayerLanguage(_0x5bb241.players.local) + '_' + _0x3f7dd7.translateText;

              _0x5bb241.game.gxt.set(_0x29122c, _0x5d9c5a.api.language.translatePlayer(_0x3f7dd7.translateText)), _0x5bb241.game.hud.setBlipNameFromTextFile(_0x3f7dd7.handle, _0x29122c), _0x3f7dd7.translated = true;
            }
          } else _0x57926c.delete(_0x3f7dd7);
        },
              _0x1553de = (_0x34e7a7, _0x579200, _0x36c31d = true) => {
          _0x34e7a7.translateText = _0x579200, _0x57926c.add(_0x34e7a7), _0x36c31d && _0x4236c3(_0x34e7a7);
        },
              _0x442721 = () => {
          for (const _0x2e6b35 of _0x57926c) if (_0x5bb241.blips.exists(_0x2e6b35)) {
            if (_0x2e6b35.handle) {
              const _0xb0f3cf = _0x5d9c5a.api.language.getPlayerLanguage(_0x5bb241.players.local) + '_' + _0x2e6b35.translateText;

              _0x5bb241.game.gxt.set(_0xb0f3cf, _0x5d9c5a.api.language.translatePlayer(_0x2e6b35.translateText)), _0x5bb241.game.hud.setBlipNameFromTextFile(_0x2e6b35.handle, _0xb0f3cf), _0x2e6b35.translated = true;
            }
          } else _0x57926c.delete(_0x2e6b35);
        };

        _0x5bb241.events.add('blips.updateBlipName', (_0x50497d, _0x5b39b0) => {
          _0x5bb241.blips.exists(_0x50497d) && 'blip' === _0x50497d.type && (_0x1553de(_0x50497d, _0x5b39b0), _0x4236c3(_0x50497d));
        }), _0x5bb241.events.add('blips.updateBlipNameBulk', _0x455dc3 => {
          for (const {
            blip: _0x1a90b7,
            name: _0x43e21f
          } of _0x455dc3) {
            if (!_0x5bb241.blips.exists(_0x1a90b7) || 'blip' !== _0x1a90b7.type) return;
            _0x1553de(_0x1a90b7, _0x43e21f), _0x4236c3(_0x1a90b7);
          }
        }), _0x5bb241.events.add('blips.loadNames', _0x591172 => {
          const a0_0x848c3f = {
            _0x2cad06: 0x12dd,
            _0x4fcf3f: 0x21b2
          };
          if (null == _0x591172) return;

          const _0x30d512 = _0x591172.data.split('&').map(_0xbe91df => {
            const [_0x4eb6d8, _0x1a17c8] = _0xbe91df.split('^');

            return {
              'blipId': parseInt(_0x4eb6d8),
              'text': _0x591172.table[_0x1a17c8]
            };
          });

          for (const {
            blipId: _0xd675a0,
            text: _0x10d4e9
          } of _0x30d512) {
            const _0x1b7341 = _0x5bb241.blips.atRemoteId(_0xd675a0);

            _0x1b7341 && _0x1553de(_0x1b7341, _0x10d4e9, false);
          }

          _0x442721();
        }), _0x5bb241.events.add('time.everySec', () => {
          const a0_0x110ca3 = {
            _0x15c98a: 0x6ba,
            _0x3bbd1a: 0x16c5,
            _0x45acbb: 0x2530,
            _0x124ff7: 0x138f,
            _0x267b06: 0x235b,
            _0x58591d: 0x1bb9,
            _0x19617b: 0x535,
            _0x254248: 0x2530,
            _0xf768a: 0xadd
          };

          (() => {
            for (const _0x157ac8 of _0x57926c) if (_0x5bb241.blips.exists(_0x157ac8)) {
              if (!_0x157ac8.translated && _0x157ac8.handle) {
                const _0x6c2230 = _0x5d9c5a.api.language.getPlayerLanguage(_0x5bb241.players.local) + '_' + _0x157ac8.translateText;

                _0x5bb241.game.gxt.set(_0x6c2230, _0x5d9c5a.api.language.translatePlayer(_0x157ac8.translateText)), _0x5bb241.game.hud.setBlipNameFromTextFile(_0x157ac8.handle, _0x6c2230), _0x157ac8.translated = true;
              }
            } else _0x57926c.delete(_0x157ac8);
          })();
        }), _0x5bb241.events.add('onPlayerDimensionChange', (_0x531738, _0x55b16c) => {
          for (const _0x238e0d of _0x57926c) _0x5bb241.blips.exists(_0x238e0d) && (_0x238e0d.handle || (_0x238e0d.translated = false));
        });
      },
      0xfb6e: (_0x5ebc4f, _0x26626e, _0x151898) => {
        'use strict';

        const a0_0x157a84 = {
          _0x4ec5e7: 0x18c1,
          _0x41fc1b: 0x1349,
          _0x2a6821: 0xbaf,
          _0x40d6ca: 0x1507,
          _0x4e694c: 0x18c1,
          _0x138bcb: 0x2488,
          _0x574f06: 0x1349,
          _0x49cb5d: 0x235b,
          _0x21899f: 0x185e,
          _0x3297af: 0x1349,
          _0x3f4feb: 0x1da5,
          _0x52aff2: 0x1349,
          _0x27c3c9: 0x727
        },
              a0_0x25adc8 = {
          _0x416c67: 0x18c1,
          _0x2b9b67: 0x8e7
        },
              a0_0xd23504 = {
          _0x527f4e: 0x1705,
          _0x459588: 0x1507,
          _0x1ddae1: 0x18c1,
          _0x43c46d: 0x1349,
          _0x5cab0b: 0xbaf,
          _0x1bb311: 0x2488,
          _0x3095d0: 0x53b,
          _0x5897a2: 0x1349
        };

        _0x151898.r(_0x26626e);

        var _0x4dec7f = _0x151898(0x16a21),
            _0x3f2376 = _0x151898(0x81cc),
            _0x4f5d38 = _0x151898(0x12a76),
            _0x5bffdf = _0x151898(0x3db3),
            _0x242667 = _0x151898(0xb274),
            _0x338fe6 = _0x151898(0x161cd);

        const _0x2fbe82 = {
          'pendingUpdateBrowserLanguage': undefined
        };
        _0x151898.g.serverLanguage = 'ru', _0x338fe6.events.add('languages.chooseLanguage', _0x4fa333 => {
          _0x2827fc(_0x4fa333), _0x338fe6.players.local.language = _0x4fa333, _0x338fe6.events.callRemote('2030451060', _0x4fa333), (0x0, _0x5bffdf.processNewBlipTranslation)(), (0x0, _0x242667.processNewLabelTranslation)(), _0x4f5d38.globalBrowser.emit('main_changeLang', _0x4fa333);
        }), _0x338fe6.events.add('setPrimaryLanguage', _0x473624 => {
          _0x151898.g.serverLanguage = _0x473624, _0x338fe6.storage.data.language || (_0x3f2376.ZP.locale(_0x473624), _0x4f5d38.globalBrowser.emit('main_changeLang', _0x473624), _0x2fbe82.pendingUpdateBrowserLanguage = _0x473624, _0x338fe6.players.local.language = _0x473624, _0x2827fc(_0x473624));
        }), _0x338fe6.events.add('vue.mounted', () => {
          _0x2fbe82.pendingUpdateBrowserLanguage && (_0x4f5d38.globalBrowser.emit('main_changeLang', _0x2fbe82.pendingUpdateBrowserLanguage), delete _0x2fbe82.pendingUpdateBrowserLanguage), _0x221e8f(), _0x4dec7f.api.setDiscordStatus('born');
        });

        const _0x2827fc = _0x361989 => {
          _0x338fe6.storage.data.language = _0x361989, _0x338fe6.storage.flush();
        },
              _0x221e8f = () => {
          _0x338fe6.storage.data.language && (_0x3f2376.ZP.locale(_0x338fe6.storage.data.language), _0x4f5d38.globalBrowser.emit('main_changeLang', _0x338fe6.storage.data.language), _0x338fe6.players.local.language = _0x338fe6.storage.data.language, _0x338fe6.events.callRemote('2030451060', _0x338fe6.storage.data.language), (0x0, _0x5bffdf.processNewBlipTranslation)(), (0x0, _0x242667.processNewLabelTranslation)());
        };
      },
      0x4386: (_0x53eaaf, _0x8a07b4, _0x2ec169) => {
        _0x2ec169(0x3db3), _0x2ec169(0xb274), _0x2ec169(0xfb6e);
      },
      0xb274: (_0x1b9502, _0x482f86, _0x3ccc0e) => {
        'use strict';

        const a0_0x2d7a51 = {
          _0x303aba: 0xf74,
          _0xc6b6e5: 0x2530,
          _0xc99a71: 0x535,
          _0x42684a: 0x1349,
          _0xb3d5d3: 0xbb1,
          _0x10667f: 0x24ea,
          _0x27bd0b: 0xf74,
          _0x3260c2: 0xadd
        },
              a0_0x39f074 = {
          _0x2aeffe: 0xe6d
        },
              a0_0xab6151 = {
          _0x5068ec: 0x32e,
          _0x379c2a: 0x816,
          _0x380bab: 0xac9
        },
              a0_0x45cea9 = {
          _0x26fb33: 0x19c5
        },
              a0_0x48dd6c = {
          _0x27e0de: 0x18a5,
          _0xd89e6f: 0xac9,
          _0x42cfda: 0x1349,
          _0x310b86: 0x1210,
          _0x393707: 0x24ea,
          _0x3bd28f: 0xf74
        };
        _0x3ccc0e.r(_0x482f86), _0x3ccc0e.d(_0x482f86, {
          'markAsTranslatedLabel': () => _0x4f1850,
          'processNewLabelTranslation': () => _0x2db705
        });

        var _0x30c729 = _0x3ccc0e(0x16a21),
            _0x1c8a2d = _0x3ccc0e(0x161cd);

        const _0x3e7f11 = new Set(),
              _0x24f736 = _0x2e09b6 => {
          _0x1c8a2d.labels.exists(_0x2e09b6) ? (_0x2e09b6.text = _0x30c729.api.language.translatePlayer(_0x2e09b6.translateText, _0x2e09b6.translateArgs), _0x2e09b6.translated = true) : _0x3e7f11.delete(_0x2e09b6);
        },
              _0x4f1850 = (_0x4728ad, _0x28a873, _0x27bb5b = {}, _0x20828b = true) => {
          _0x4728ad.translateText = _0x28a873, _0x4728ad.translateArgs = _0x27bb5b, _0x3e7f11.add(_0x4728ad), _0x20828b && _0x24f736(_0x4728ad);
        },
              _0x2db705 = () => {
          for (const _0x13c0b8 of _0x3e7f11) _0x24f736(_0x13c0b8);
        };

        _0x1c8a2d.events.addDataHandler('labelLang', (_0x499832, _0x6c89b4, _0x2b976c) => {
          'textlabel' === _0x499832.type && null != _0x6c89b4 && (_0x4f1850(_0x499832, _0x6c89b4.text, _0x6c89b4.args, true), _0x24f736(_0x499832));
        }), _0x1c8a2d.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x1c8a2d.labels.forEach(_0x452df6 => {
            if (_0x452df6.hasVariable('labelLang')) {
              const _0x4fd549 = _0x452df6.getVariable('labelLang');

              _0x4f1850(_0x452df6, _0x4fd549.text, _0x4fd549.args, false);
            }
          }), _0x2db705();
        }), _0x1c8a2d.events.add('time.everySec', () => {
          (() => {
            for (const _0x15a383 of _0x3e7f11) _0x1c8a2d.labels.exists(_0x15a383) ? _0x15a383.translated || _0x15a383.handle && (_0x15a383.text = _0x30c729.api.language.translatePlayer(_0x15a383.translateText, _0x15a383.translateArgs), _0x15a383.translated = true) : _0x3e7f11.delete(_0x15a383);
          })();
        });
      },
      0xc344: (_0x2b76ff, _0x55877b, _0x23e5cf) => {
        'use strict';

        const a0_0x4896ba = {
          _0x467e7d: 0x1349,
          _0x34c59c: 0x1cef,
          _0x40d059: 0x20e5,
          _0x4e2aa8: 0x667,
          _0x991df: 0xbaf
        };

        _0x23e5cf.d(_0x55877b, {
          'Z': () => _0x4901cc
        });

        var _0x5e9211 = _0x23e5cf(0x81cc),
            _0x5ad48 = _0x23e5cf(0x13847),
            _0x5e33e2 = _0x23e5cf(0x9e5a);

        const _0x498f07 = (_0x2077ab, _0x8ce6ce, _0x1cacc0) => {
          if (!_0x8ce6ce) return;

          const _0x412261 = (Array.isArray(_0x8ce6ce) ? _0x8ce6ce : _0x8ce6ce.match(/([^[.\]])+/g)).reduce((_0x3fa9b1, _0x4def26) => _0x3fa9b1 && _0x3fa9b1[_0x4def26], _0x2077ab);

          return undefined === _0x412261 ? _0x1cacc0 : _0x412261;
        };

        var _0x473c5e = _0x23e5cf(0x161cd);

        const _0xec6246 = JSON.parse(JSON.stringify(_0x5ad48._)),
              _0x236cae = JSON.parse(JSON.stringify(_0x5e33e2._));

        for (const _0xdfb08b of Object.entries(_0x5ad48._)) {
          const [_0x51011a, _0x388eed] = _0xdfb08b;

          _0x5e9211.ZP.set(_0x51011a, _0x388eed);
        }

        for (const _0x50c7b1 of Object.entries(_0x5e33e2._)) {
          const [_0x46ba1c, _0x2c7f9d] = _0x50c7b1;

          _0x5e9211.ZP.extend(_0x46ba1c, _0x2c7f9d);
        }

        const _0x587cb3 = {};

        for (const _0x5b45d3 in _0xec6246) _0x587cb3[_0x5b45d3] = {
          'names': Object.keys(_0xec6246[_0x5b45d3]),
          'values': Object.values(_0xec6246[_0x5b45d3])
        };

        for (const _0x687036 in _0x236cae) _0x587cb3[_0x687036] = {
          'names': [..._0x587cb3[_0x687036].names, ...Object.keys(_0x236cae[_0x687036])],
          'values': [..._0x587cb3[_0x687036].values, ...Object.values(_0x236cae[_0x687036])]
        };

        _0x5e9211.ZP.locale('ru');

        const _0x5c8185 = {},
              _0x53d1fc = _0x487fde => {
          const _0x213796 = new RegExp('\\$t\\((.*?)\\)', 'i').exec(_0x487fde);

          return _0x213796 ? {
            'translateName': _0x213796[0x1],
            'index': _0x213796.index,
            'length': _0x213796[0x0].length
          } : null;
        },
              _0x53bffe = (_0x2ae101, _0x40ee92, _0x44dbff) => {
          let _0x3b063a = _0x5e9211.ZP.t(_0x2ae101, _0x40ee92, _0x44dbff),
              _0x759385 = null,
              _0x209260 = 0x0;

          do {
            if (_0x209260 > 0x1e) break;
            _0x209260++, _0x759385 = _0x53d1fc(_0x3b063a), _0x759385 && (_0x3b063a = _0x3b063a.replace(_0x3b063a.substring(_0x759385.index, _0x759385.index + _0x759385.length), _0x498f07(_0xec6246[_0x44dbff], _0x759385.translateName)));
          } while (_0x759385);

          return _0x3b063a;
        };

        _0x5c8185.translate = (_0x41d912, _0x34c7f0, _0x4fef7e = {}) => _0x53bffe(_0x34c7f0, _0x4fef7e, _0x41d912), _0x5c8185.translatePlayer = (_0xf39b61, _0x289cd6 = {}) => _0x53bffe(_0xf39b61, _0x289cd6, _0x5c8185.getPlayerLanguage(_0x473c5e.players.local)), _0x5c8185.getPlayerLanguage = (_0xac2f56 = _0x473c5e.players.local) => _0xac2f56 && _0xac2f56.language ? _0xac2f56.language : _0x5e9211.ZP.locale(), _0x5c8185.getPlayerLanguageLocale = (_0x5b0784 = _0x473c5e.players.local) => {
          if (_0x5b0784 && _0x5b0784.language) {
            let _0x41a5f4 = _0x5b0784.language;

            switch (_0x41a5f4) {
              case 'zhCN':
                _0x41a5f4 = 'zh-cn';
                break;

              case 'zhTW':
                _0x41a5f4 = 'zh-tw';
            }

            return _0x41a5f4;
          }

          return _0x5e9211.ZP.locale();
        };
        const _0x4901cc = _0x5c8185;
      },
      0xff09: (_0x3c1728, _0x19cf02, _0x77dd37) => {
        'use strict';

        const a0_0x411d15 = {
          _0x1f0ccf: 0x14d2,
          _0x4d057c: 0x1da5
        },
              a0_0x5b697f = {
          _0x4210ea: 0x535,
          _0x2e2174: 0x14d2,
          _0x14d295: 0x185e,
          _0x811cd5: 0x235b,
          _0x5d3eb9: 0x185e,
          _0x20108d: 0x1db5
        },
              a0_0x14b5d2 = {
          _0x4a9e6d: 0x14bd
        },
              a0_0x3723bc = {
          _0x2bc042: 0x1dda,
          _0x1aa9da: 0x235b,
          _0x5fbd3: 0x185e
        },
              a0_0x60f473 = {
          _0x4e0884: 0x1aab,
          _0x41b1cb: 0x16c5,
          _0x323608: 0x1a2c
        },
              a0_0x174ed0 = {
          _0x5c67d6: 0x1052,
          _0x2fb4f1: 0x230d,
          _0x3ab6f6: 0x172a
        },
              a0_0x389462 = {
          _0x3f4e26: 0x16c5,
          _0x28ac4d: 0x11dc,
          _0x137e60: 0x910
        },
              a0_0x4d229a = {
          _0x1384dd: 0x172a,
          _0x1a3c05: 0x1885
        },
              a0_0x21d21a = {
          _0x1701c9: 0x2606,
          _0x56d356: 0x14d1,
          _0x18f28b: 0x2606,
          _0x5c709c: 0x16c5,
          _0x3aca77: 0x5d9,
          _0x5bb94c: 0x1d66,
          _0xc704c3: 0x18ba
        },
              a0_0x3f0586 = {
          _0x10680a: 0x2606,
          _0x501e85: 0xe6d
        };

        _0x77dd37.r(_0x19cf02);

        var _0xb03e7a = _0x77dd37(0x16a21),
            _0x3d583a = _0x77dd37(0x16a7d),
            _0x48d104 = _0x77dd37(0x161cd);

        function _0x3b1369(_0x7fed56, _0x367da0) {
          _0x7fed56._isFakePickup = _0x367da0, _0x7fed56.notifyStreaming = _0x367da0, _0x7fed56.handle && (_0x7fed56._fpLightData = _0x7fed56.getVariable('_fpLightData'));
        }

        _0x48d104.events.add('playerReady', () => {
          const a0_0x5cc64b = {
            _0x1b59e5: 0xc95,
            _0x2e8dce: 0x5d9
          };

          _0x48d104.objects.forEach(_0x15dfef => {
            _0x15dfef.getVariable('_isFakePickup') && _0x3b1369(_0x15dfef, true);
          });
        }), _0x48d104.events.add('entityStreamIn', _0xc99407 => {
          _0x48d104.objects.exists(_0xc99407) && 'object' === _0xc99407.type && _0xc99407._isFakePickup && (_0xc99407._fpLightData = _0xc99407.getVariable('_fpLightData'), _0xc99407.setCollision(false, false));
        }), _0x48d104.events.add('render', () => {
          const _0x386adc = _0x48d104.game.invokeFloat('0x0000000050597EE2');

          for (const _0x1a4a61 of _0x48d104.objects.streamed) {
            if (!_0x48d104.objects.exists(_0x1a4a61) || !_0x1a4a61._isFakePickup) continue;

            const {
              x: _0x4e19bb,
              y: _0x25435c,
              z: _0x3c5eac
            } = _0x1a4a61.getRotation(0x2);

            if (_0x1a4a61.setRotation(_0x4e19bb, _0x25435c, _0x3c5eac + 0x5a * _0x386adc, 0x2, true), _0x1a4a61._fpLightData) {
              const {
                x: _0x15a14b,
                y: _0x5a8ce7,
                z: _0xb1be7a
              } = _0x1a4a61.position,
                    {
                red: _0x5eaee0,
                green: _0x1bdf5c,
                blue: _0x3f1a5b,
                range: _0x1f44c6,
                intensity: _0x29445d,
                shadow: _0x448508
              } = _0x1a4a61._fpLightData;

              _0x48d104.game.graphics.drawLightWithRangeAndShadow(_0x15a14b, _0x5a8ce7, _0xb1be7a, _0x5eaee0, _0x1bdf5c, _0x3f1a5b, _0x1f44c6, _0x29445d, _0x448508);
            }
          }
        }), _0x48d104.events.addDataHandler('_isFakePickup', (_0x24bb19, _0x4eb0d2) => {
          _0x48d104.objects.exists(_0x24bb19) && 'object' === _0x24bb19.type && _0x3b1369(_0x24bb19, _0x4eb0d2);
        }), _0x48d104.events.addDataHandler('_isInteractive', (_0x3bcd0d, _0x1bf66c) => {
          var _0x5198d0, _0x3f85d4;

          'colshape' === _0x3bcd0d.type && (_0x3f85d4 = _0x1bf66c, (_0x5198d0 = _0x3bcd0d)._isInteractive = _0x3f85d4, _0x5198d0.notifyStreaming = true);
        }), _0x48d104.events.addDataHandler('_fpLightData', (_0xc21498, _0x396716) => {
          _0x48d104.objects.exists(_0xc21498) && 'object' === _0xc21498.type && (_0x396716 ? _0xc21498._fpLightData = _0x396716 : delete _0xc21498._fpLightData);
        });
        let _0x4319fe = [];
        _0x48d104.events.add('playerEnterColshape', _0x249cb9 => {
          _0x48d104.console.logInfo('enter colshape ' + _0x249cb9._isInteractive), _0x48d104.colshapes.exists(_0x249cb9) && _0x249cb9._isInteractive && _0x4319fe.push({
            'interactId': _0x249cb9._isInteractive,
            'shapeHandle': _0x249cb9
          });
        }), _0x48d104.events.add('playerExitColshape', _0x5e4d2c => {
          _0x48d104.colshapes.exists(_0x5e4d2c) && _0x5e4d2c._isInteractive && (_0x4319fe = _0x4319fe.filter(_0x305ed2 => _0x305ed2.interactId !== _0x5e4d2c._isInteractive));
        }), _0x48d104.events.add('fakePickups.client.setWeaponClipAmmo', _0x39d7b1 => {
          if (!_0x39d7b1) return;

          const _0x3e6070 = JSON.parse(_0x39d7b1);

          _0x48d104.players.local.setAmmoInClip(_0x3e6070.weap, _0x3e6070.ammo);
        });
        let _0x3ee221 = 0x0;
        _0x48d104.events.add('keys.f', async () => {
          _0xb03e7a.api.ePress(_0x3ee221, 0xfa) || (_0x3ee221 = _0xb03e7a.api.ePressUpdate(0xfa), _0x4319fe.length > 0x0 && (await (async () => {
            _0x48d104.events.callRemote('2299106208', _0x4319fe[0x0].interactId);
          })()));
        }), (_0x48d104.keys.bind(_0x3d583a.t.G, true, async () => {
          _0xb03e7a.api.ePress(_0x3ee221, 0xfa) || (_0x3ee221 = _0xb03e7a.api.ePressUpdate(0xfa), _0x48d104.events.callRemote('2921791928', _0x48d104.players.local.getAmmoInClip(_0x48d104.players.local.weapon) ?? ''));
        }), _0x48d104.events.add('render', () => {
          _0x4319fe.length > 0x0 && _0x48d104.game.graphics.drawText('поднять [F]', [0.5, 0.75], {
            'font': 0x7,
            'color': [0xff, 0xff, 0xff, 0xb9],
            'scale': [1.2, 1.2],
            'outline': true
          });
        }), _0x48d104.events.add('minigames.client.tryBuyWeapon', _0x113484 => {
          _0x48d104.events.callRemote('3364324248', _0x113484);
        }));
      },
      0xfd0c: (_0x1ad5f2, _0x5c9883, _0x1f649d) => {
        var _0x170ffe = _0x1f649d(0x161cd);

        _0x1f649d(0x87de), _0x1f649d(0xff09), _0x170ffe.console.logInfo('Minigames init');
      },
      0x87de: (_0x4f8471, _0x5414df, _0x1126c7) => {
        'use strict';

        const a0_0x506c6e = {
          _0xac83a7: 0x1d0f
        },
              a0_0x5b40b5 = {
          _0x1dda3a: 0x1dda,
          _0x183202: 0x196,
          _0x4cd1a0: 0x112d
        },
              a0_0x78e653 = {
          _0x14e839: 0x14d2,
          _0x11a135: 0x1da5
        },
              a0_0x324c5a = {
          _0x162ccf: 0x1934,
          _0x298743: 0x1dda,
          _0x1cdc8e: 0x1442,
          _0x466855: 0xc32,
          _0x3c1f72: 0x1dd5,
          _0x328bbc: 0x186,
          _0xd4d836: 0xc32,
          _0x1295e4: 0x20c4,
          _0x504fd8: 0x186,
          _0x5b3b0f: 0x2463,
          _0x7eb6cc: 0x1a3,
          _0x295d36: 0x669
        },
              a0_0x4467f1 = {
          _0x5a7c3e: 0x1dda
        },
              a0_0x5ead6d = {
          _0x5a932d: 0x14d2,
          _0x41b6d1: 0x9d4
        },
              a0_0x499a22 = {
          _0x2cc697: 0x14d2,
          _0x256567: 0xc75
        },
              a0_0x266f88 = {
          _0xda5348: 0x2488,
          _0xe53bd1: 0x4a3,
          _0x4f50d1: 0x1a3,
          _0xf42ef0: 0x1cdb,
          _0xec8426: 0x1bc5,
          _0x536731: 0x1f5a
        },
              a0_0x2feefc = {
          _0x423c93: 0x10cc
        },
              a0_0x24d924 = {
          _0x4a3307: 0x2062,
          _0x55e391: 0x2516
        },
              a0_0x14c280 = {
          _0xf4be5d: 0x3d5
        },
              a0_0x456685 = {
          _0x4f6830: 0x6d3
        },
              a0_0x25c636 = {
          _0x49f0e2: 0x142d,
          _0x143427: 0x1e05,
          _0x10e947: 0x942,
          _0x286dcc: 0x1d66,
          _0x117b6f: 0xa94,
          _0x4d9074: 0x136e,
          _0x36c6b8: 0x1a76,
          _0x54d65b: 0x2574,
          _0x2a249b: 0x1e35,
          _0x490015: 0x1f30,
          _0x5f23d4: 0x22e6,
          _0x396d48: 0x426,
          _0x1e58ec: 0x1d55,
          _0x8fab6c: 0x1692,
          _0x4b1d8d: 0x125b,
          _0x1d3ff2: 0x1692,
          _0x532cb6: 0x125b,
          _0x179a38: 0x235b,
          _0x3b4f39: 0x1291,
          _0x513d72: 0x16c5,
          _0x15d8d9: 0x1f30,
          _0x20ddf4: 0x1692,
          _0x227531: 0x125b,
          _0x4fc6ed: 0x6ba,
          _0x5416ca: 0xf82,
          _0x3230fd: 0x1c7a,
          _0x220adf: 0x1969,
          _0x5eaea3: 0x206f,
          _0x12bfd4: 0x1e35,
          _0x34ef11: 0x195a,
          _0x4392cb: 0xeb1,
          _0x300e08: 0x1e35,
          _0x3c91d7: 0x17a4
        },
              a0_0x10a206 = {
          _0x3ab5d7: 0x129e,
          _0x57a49c: 0x185e,
          _0x44f071: 0xd81,
          _0xc0f878: 0xb00,
          _0x1c3573: 0x1866
        },
              a0_0x12db8f = {
          _0x48494b: 0x52c,
          _0x3c0f0c: 0x535,
          _0x458a2f: 0x1cd8,
          _0x34178c: 0x14d2,
          _0x2b69b2: 0x1a5,
          _0x206345: 0x662,
          _0x271a70: 0x8bd,
          _0x22f190: 0x8bd,
          _0x239ad6: 0x17f,
          _0x200885: 0x16c5,
          _0x339bea: 0x17f,
          _0x2cb88e: 0xb54,
          _0x3f45ec: 0x1d55,
          _0x5efd97: 0x1bb6,
          _0x26ec49: 0xf82,
          _0x43bcf7: 0x3b1,
          _0x48d79b: 0xf82,
          _0x38ae4d: 0x1bb6,
          _0x268ff4: 0xf5c,
          _0x559ef3: 0x2521,
          _0x5aaf5d: 0x1d66,
          _0x28f82a: 0x2072,
          _0x41e0ad: 0x1a4a,
          _0x112fe3: 0x2530,
          _0x393206: 0x1870,
          _0x502d01: 0x25df,
          _0x4b232e: 0xa9d,
          _0x50c72b: 0xb54,
          _0x55b153: 0x2072,
          _0x45bcff: 0x880
        },
              a0_0x22cc8e = {
          _0x2f4ae2: 0x576,
          _0x289ae4: 0x52c,
          _0x38fc5b: 0x535,
          _0x3826d6: 0x1283,
          _0x175067: 0x264f,
          _0x3941cd: 0x218b
        },
              a0_0x27c3fe = {
          _0x135f54: 0x198d,
          _0x28220d: 0x1f15,
          _0x2813cf: 0x1e35,
          _0x2b0ba9: 0x2019,
          _0x4146be: 0x535
        },
              a0_0x4755a5 = {
          _0x37fd7e: 0x235b,
          _0x200c04: 0x185e,
          _0x11b468: 0x576,
          _0x1f8017: 0x91d
        },
              a0_0x4ed375 = {
          _0x14f076: 0x10c0,
          _0x82945a: 0x14d2,
          _0x2007e4: 0x535,
          _0x1981fb: 0x52c,
          _0x575188: 0x13b0,
          _0x4df7d1: 0x1cd8,
          _0x5a7982: 0x4a3,
          _0x4de19c: 0x2488,
          _0xa33855: 0x5d0
        },
              a0_0x476f76 = {
          _0x2fa31a: 0x535,
          _0x419e69: 0x220f,
          _0x505433: 0x14d2,
          _0x40cf55: 0x662,
          _0x5ba4db: 0x52c,
          _0x487bc1: 0x1cd8,
          _0x5ef9c4: 0x2488,
          _0x58fa6c: 0x4a3
        },
              a0_0x13a5ec = {
          _0xeb1f40: 0x1a5,
          _0x5c0206: 0x535,
          _0xac0260: 0x25df,
          _0x4da710: 0x15e0,
          _0x597759: 0xc7d,
          _0x3ae237: 0x15e0,
          _0x270ee3: 0x1303,
          _0x446110: 0xc7d,
          _0x2b545c: 0x15e0,
          _0x2ca04a: 0x1870,
          _0x83fd8a: 0xc47,
          _0x5ed6a5: 0x16c5,
          _0x135380: 0x225d,
          _0x11ae13: 0x17f,
          _0x6109e4: 0x225d,
          _0x43cb8: 0xa9d,
          _0x140bc1: 0xf82,
          _0xfa94ff: 0xded,
          _0x25af0c: 0x1d55,
          _0x1d2456: 0x2521,
          _0x5b53d8: 0x1d66,
          _0x2bf0e6: 0x15ae,
          _0x3ddf4a: 0x535,
          _0x3c7227: 0x880,
          _0x26c0cc: 0x1d66,
          _0x32a53e: 0xa1d,
          _0x8c9ea: 0x535,
          _0x271ae8: 0xaf9,
          _0xe4bbdc: 0x19d2,
          _0x3b4969: 0x16c5,
          _0x3eca03: 0x225d,
          _0xbddf4c: 0x220f,
          _0x533a29: 0x942
        },
              a0_0x47900d = {
          _0x143186: 0x155f,
          _0x321c00: 0x535,
          _0x21642d: 0x1b37,
          _0x16d065: 0xaf9,
          _0xd12bfe: 0xc41,
          _0x17b565: 0x1366,
          _0x36c897: 0x535,
          _0x3d4f53: 0xdde,
          _0x1f4091: 0x1e6c,
          _0x20e227: 0x19d2,
          _0x422711: 0xa26,
          _0x11cdb1: 0x1ac0,
          _0xbd61ba: 0x1d2
        },
              a0_0x2f2ed1 = {
          _0x3a3773: 0x535,
          _0x2ada58: 0x155f,
          _0x4da1ff: 0x1de9
        },
              a0_0x425516 = {
          _0x668291: 0x1f86
        },
              a0_0x14f962 = {
          _0x4ecb5a: 0x266b
        },
              a0_0x19e76b = {
          _0x2adccb: 0x7a0,
          _0x3f18ad: 0xd1a,
          _0x245ef1: 0x7a0
        },
              a0_0x4ed4a3 = {
          _0x47fd32: 0x1692,
          _0x3710e4: 0x1610,
          _0x52146c: 0xe98,
          _0x54b6ef: 0x1410,
          _0x3247d8: 0x8bd,
          _0x22b973: 0x1491,
          _0x54e1d5: 0x136c,
          _0x16109f: 0x170f,
          _0x5e4a2f: 0xa26,
          _0x4d1f10: 0x1b44,
          _0x36c9ff: 0x2528,
          _0xcf2630: 0xeb1,
          _0x99c217: 0x6ba,
          _0x474908: 0xf82,
          _0x37de7e: 0xa26,
          _0x3683f9: 0xf90,
          _0x20e6bf: 0x384,
          _0x5d81d5: 0x170f,
          _0x127f46: 0x24bc,
          _0x32ffa2: 0x879,
          _0x4815ec: 0x1cfb,
          _0x168203: 0x6f8,
          _0x23ec91: 0x1200,
          _0x28e749: 0x879,
          _0x374863: 0x879,
          _0xbda7f2: 0x24bc
        },
              a0_0x2b6fef = {
          _0x43ba0b: 0x1969,
          _0x5230e5: 0x2223,
          _0x4d0009: 0x1fa4,
          _0x231498: 0x4b9,
          _0x234ad4: 0x426,
          _0x138464: 0x4b9,
          _0x356bda: 0x1f30,
          _0x4ca698: 0x4b9,
          _0x44309a: 0x1d55,
          _0xe845e0: 0x1d66,
          _0x16c247: 0x2197,
          _0x1f807c: 0x1778,
          _0x2e2dda: 0x1992,
          _0x559277: 0xa94,
          _0x52274d: 0xcd8,
          _0x1e94f7: 0x1e35,
          _0x36153c: 0x2386,
          _0xa9178e: 0xd42,
          _0x2a4722: 0x22a3
        },
              a0_0x3063d5 = {
          _0x28da73: 0x213d
        },
              a0_0x328952 = {
          _0x58eb9f: 0xd34,
          _0x14bed6: 0x1d66,
          _0x5017ae: 0x1ccd
        },
              a0_0x52625b = {
          _0x4cb3cd: 0x1fa4,
          _0x4fcab5: 0x1870
        },
              a0_0x4c8ecc = {
          _0x1db2ec: 0xacb,
          _0x361429: 0x1d66,
          _0x258834: 0x15e0,
          _0xe1fdd: 0x1ccd,
          _0x42a1af: 0x1cfb,
          _0x4c5532: 0x1db1,
          _0xd636a4: 0x7a0,
          _0x4f5fd8: 0x1d66,
          _0x57a23f: 0xf8a,
          _0x96ba1b: 0xd52,
          _0x21ad8b: 0x1cfb,
          _0x21d7a4: 0x19a4,
          _0x22fddd: 0x4b9,
          _0x21a998: 0xe7f
        },
              a0_0x30ae14 = {
          _0x2f9af3: 0xe43,
          _0x6dbfc8: 0x17f,
          _0x2fabde: 0x10b7,
          _0x35f10c: 0x1cfb,
          _0x538240: 0x127a,
          _0x2e5587: 0x1d55,
          _0x5e18b0: 0xe43,
          _0x490376: 0xa26
        },
              a0_0x19b64b = {
          _0x190dd2: 0x4b9,
          _0x104417: 0x16c5,
          _0x3397e7: 0x4b9,
          _0x393ba6: 0x22a3,
          _0x1b878f: 0x1157,
          _0x1349e2: 0x22a3,
          _0x567e3e: 0x2364,
          _0x5788c5: 0xcd8,
          _0x39e1b4: 0xcd8,
          _0x142291: 0x1ec1
        },
              a0_0x3658a0 = {
          _0x2c5a8a: 0xe43
        },
              a0_0x27d3ea = {
          _0x4f5d33: 0x198d,
          _0x165d78: 0x22ce,
          _0xc77cd8: 0x942,
          _0x467bac: 0x17f0
        },
              a0_0x3cd34 = {
          _0x4a1aba: 0x287,
          _0x21f496: 0x1af1,
          _0x2034fd: 0x1c7a,
          _0x147009: 0x1a4d,
          _0x24bd6b: 0x1283,
          _0x1cac57: 0x1870
        },
              a0_0x5b137f = {
          _0x4f8515: 0x1052,
          _0x32c588: 0x1e1a,
          _0x498f1c: 0xacb,
          _0x3bba34: 0x15ae,
          _0x25c6bb: 0x535,
          _0x402860: 0x4a3,
          _0x3b2d01: 0x1cfb,
          _0x9aacb1: 0x385,
          _0x2b2797: 0x213a,
          _0x1f2bdf: 0x2488,
          _0x31ed87: 0x2488,
          _0x293eb2: 0x711,
          _0x592cf8: 0x2528,
          _0x8f48: 0x1a3,
          _0x2bc011: 0x1c3d,
          _0x4c0e84: 0x2488,
          _0x47366c: 0x1913,
          _0x165c71: 0x3f0
        },
              a0_0xd0b85d = {
          _0x5a77b4: 0x198d,
          _0x345bd8: 0x1692,
          _0x3856af: 0x90f,
          _0x5b09a8: 0x136e,
          _0x1a9268: 0x1052,
          _0x4b0cea: 0x198d,
          _0x59e6ba: 0x1692,
          _0x12ed90: 0x1291,
          _0x5b9002: 0x2574,
          _0x26a8ef: 0x91d,
          _0x4ad247: 0xa9d,
          _0x423473: 0x16c5,
          _0x4e6788: 0x17f,
          _0x31d1b8: 0x373,
          _0xc2e5a0: 0x1d66,
          _0x15daa7: 0x2072,
          _0x2ab0a5: 0x11dc,
          _0x243183: 0x2422,
          _0x504792: 0x1f30,
          _0x1e62bd: 0x1f30,
          _0x2092d4: 0x1f30,
          _0x13da3f: 0x1f30,
          _0x1da4e5: 0x22e6,
          _0x52e228: 0x2521,
          _0x531ba8: 0x1d66,
          _0x1b1976: 0xd79
        },
              a0_0x3a2897 = {
          _0x184cbf: 0xe74,
          _0x203417: 0x264f,
          _0x3eb4b3: 0x1692,
          _0x57653e: 0x136e,
          _0x26a3fd: 0x235b,
          _0x533cc3: 0x1291,
          _0xdd7fa1: 0x235b,
          _0x4e8a2d: 0x2574,
          _0x14b312: 0x264f,
          _0x142c1f: 0x373,
          _0x5655af: 0x3b1,
          _0x47a08d: 0x1d55,
          _0x4cdca1: 0x1f30,
          _0x90c1ad: 0x11dc,
          _0x39037a: 0x2422,
          _0x3debf6: 0x1f30,
          _0x3afba4: 0x10f6,
          _0x2715aa: 0x373,
          _0x6844db: 0x373,
          _0x47a4cf: 0x2521,
          _0x1a6888: 0x16c5,
          _0x14fb2a: 0x17f,
          _0x25e6fe: 0x2072,
          _0x333b0d: 0xd79
        },
              a0_0x547278 = {
          _0x3a04c1: 0x1b37,
          _0x5581f6: 0xaf9,
          _0x5d96d1: 0xc41,
          _0x12e359: 0x1366,
          _0x163617: 0xf82,
          _0x10ce79: 0x1d66,
          _0x92032d: 0x1e6c,
          _0x3d8226: 0x19d2,
          _0x23c2fa: 0x1ac0
        },
              a0_0x5e98f1 = {
          _0x2ce5d7: 0xeb1,
          _0x574479: 0x1a3,
          _0x1ed200: 0x168b,
          _0x2927c3: 0x2488,
          _0x292371: 0x21d1
        },
              a0_0x35ecd2 = {
          _0x7b8293: 0x2630,
          _0x5a1856: 0x1af1,
          _0x19d3ca: 0x1c7a,
          _0x336d79: 0x1283
        },
              a0_0x5c49f5 = {
          _0x51ee20: 0x576,
          _0xfe3e6: 0x1283,
          _0x44de40: 0x1870
        },
              a0_0x168c4f = {
          _0x2b5e33: 0x1d2,
          _0xdd5789: 0x628,
          _0x14f8be: 0x1f08,
          _0x3a30f4: 0x535,
          _0x3d8119: 0x1692,
          _0x131fd3: 0x1f08,
          _0x488c4d: 0x2573,
          _0x5ec9f0: 0xe62,
          _0x181154: 0xd1a
        },
              a0_0x36a56f = {
          _0x38d935: 0x2488,
          _0x369961: 0x1a3,
          _0x10b230: 0x1c04,
          _0x28aeec: 0xe39,
          _0x417d6a: 0x43d,
          _0x35dbb1: 0x4f2
        },
              a0_0x362823 = {
          _0x44c0ce: 0x1c04,
          _0x3f1940: 0x3f0
        },
              a0_0x348ca6 = {
          _0x12135e: 0x16a8,
          _0x3c0d24: 0x10b7,
          _0x2c8223: 0x1d55,
          _0x254df3: 0xa26,
          _0x4cafbe: 0xe8f,
          _0x253409: 0x10b7
        },
              a0_0x364872 = {
          _0x75676a: 0x385,
          _0x580a97: 0x830,
          _0x3a2319: 0x1a3,
          _0x3c6aff: 0x1d36
        },
              a0_0x13a5a8 = {
          _0x3a73b7: 0x1692,
          _0x39b106: 0x942,
          _0x5db636: 0xe98,
          _0x202c9d: 0x7a0,
          _0x5af12e: 0xeb0,
          _0x1236e8: 0xb54,
          _0x231da9: 0x225d,
          _0x1a436e: 0x264f,
          _0xdedd05: 0x373,
          _0x4dfc45: 0x136e,
          _0x3de970: 0xded,
          _0x30d234: 0x1d55,
          _0x3dae75: 0x2290,
          _0x23a642: 0x1aab,
          _0xa822bb: 0x170f,
          _0x42083b: 0x1b44,
          _0x4b4a42: 0xeb1,
          _0x2304c5: 0x24bc,
          _0x4f26a8: 0x879,
          _0x5f5937: 0x13df,
          _0x586baa: 0x879,
          _0x1d0314: 0x10b7,
          _0x439e55: 0x128a,
          _0x361575: 0x6ba,
          _0x8c9996: 0x170f,
          _0x488f11: 0x443,
          _0x4196e6: 0xa26,
          _0x364656: 0xf1a,
          _0x131c0e: 0xd1a,
          _0x230e0b: 0x1692
        },
              a0_0x428612 = {
          _0x1bdc24: 0x1af1,
          _0x2ba40e: 0x576,
          _0x2b496e: 0x1d66,
          _0x3b8c91: 0x1e35,
          _0x15eebf: 0x17f0,
          _0x55d128: 0x14d2,
          _0x24d49a: 0x662,
          _0x446913: 0x535,
          _0x11f37c: 0x13b0,
          _0x1a523b: 0x220f,
          _0x553fce: 0xfe3,
          _0x298f2f: 0x18c3,
          _0x105077: 0x390,
          _0x4480f3: 0x855,
          _0x48ab4b: 0x157d,
          _0x34ff6d: 0x1420,
          _0x2fa59e: 0x129f,
          _0x1859de: 0xe06,
          _0x4a26bb: 0x129f,
          _0x1e48d9: 0x1ccb,
          _0x64d19c: 0x2646,
          _0xf95e22: 0x1379,
          _0x15e704: 0x969,
          _0x399922: 0x1e21,
          _0x177d9e: 0x9a8,
          _0x3e248e: 0x17d,
          _0x3c04c8: 0x1e21,
          _0x29a0dc: 0x19d2
        },
              a0_0xd42b8 = {
          _0xda40b1: 0xfe3,
          _0x5c3610: 0x1420,
          _0x9e86e8: 0x16f5,
          _0x182a42: 0x14eb,
          _0x345e8e: 0x1420,
          _0x4b45c4: 0xe74,
          _0x414e60: 0x20f6,
          _0x673046: 0x145f,
          _0x60670c: 0x185d,
          _0x2cc230: 0x14eb,
          _0x4b922d: 0xfe3,
          _0x34fd2e: 0x20f6,
          _0x601894: 0x1ccb,
          _0x47da3a: 0x14eb
        },
              a0_0x2deff5 = {
          _0x51b1bd: 0xe62,
          _0x210116: 0x19c5,
          _0x33502e: 0x1d2,
          _0x233f36: 0x628,
          _0x45535d: 0x9ad,
          _0x3034cf: 0x1692,
          _0xf3b09a: 0x23a2,
          _0x4c3829: 0x1f08,
          _0x4c4117: 0x871,
          _0x4e5d12: 0x14eb,
          _0x236a6d: 0xb0c,
          _0x734a0a: 0xfe3,
          _0x8783c4: 0xe74,
          _0xdd4794: 0x10b7,
          _0x50192c: 0x17ea,
          _0xf7ae3c: 0xfe3,
          _0x4390cf: 0x9b7,
          _0x3bab83: 0x2573,
          _0x5b2e79: 0xf83
        },
              a0_0x583a69 = {
          _0x3021ec: 0xa26,
          _0x1ae580: 0x2630,
          _0x19dcab: 0x136c,
          _0xdad0cc: 0x170f,
          _0x22c3dc: 0x443
        },
              a0_0x2ad88e = {
          _0x29ae4e: 0x1b19,
          _0x3ce7b8: 0x1965,
          _0x33de2e: 0x1777
        },
              a0_0x36d6f4 = {
          _0x1204f1: 0x2062,
          _0x539c87: 0xd17,
          _0x1b5e15: 0x1ac0,
          _0x3348d8: 0x1ac0
        },
              a0_0x4efcde = {
          _0x8046e8: 0x7fc,
          _0x35dac6: 0xda6,
          _0xf869aa: 0xcd0,
          _0x125129: 0xe0d,
          _0x202463: 0x6ba,
          _0x107dac: 0xa26
        },
              a0_0x1cfef8 = {
          _0x531f46: 0x7fc,
          _0x52e58a: 0x12fb,
          _0x4ed6a1: 0x4d6,
          _0xf9b0c4: 0xfd3,
          _0x5b20d8: 0x1404
        },
              a0_0x19d8df = {
          _0x4892a7: 0x2488,
          _0x463b10: 0x711,
          _0x260d33: 0x1c03,
          _0x513309: 0x1c03,
          _0x538e4f: 0x36a,
          _0x5e36e7: 0x2519,
          _0x18b2f0: 0x2519,
          _0x50e039: 0x25af
        },
              a0_0x270e74 = {
          _0x31bb38: 0x2488,
          _0x470842: 0x1c3d,
          _0x445010: 0x8d6
        },
              a0_0x599aa9 = {
          _0x279990: 0x2488
        },
              a0_0x4864ce = {
          _0x1ac31: 0x1a3,
          _0x1cbfd8: 0x19f3,
          _0x3fd269: 0x13f3,
          _0x273e3a: 0x335,
          _0x1a0c66: 0x1999,
          _0x38c0b9: 0x1a3
        },
              a0_0x54f9e1 = {
          _0x313e74: 0x2488,
          _0x457f88: 0x385,
          _0x1b1874: 0x830,
          _0x94fc49: 0x1d36,
          _0x2a60f5: 0x213a
        },
              a0_0x5d1d61 = {
          _0x2eea43: 0x2488,
          _0x335c75: 0x1a3
        },
              a0_0x4395c4 = {
          _0x3b2d9e: 0x2683,
          _0x35a7ce: 0xf82,
          _0x62f06b: 0x1d66,
          _0x33e19a: 0x14d5,
          _0x47ffaf: 0x155a,
          _0x306a2c: 0x1d55,
          _0x2e13e9: 0x12f9,
          _0x2499a0: 0x542,
          _0x52f8a3: 0x256c,
          _0x47aa77: 0x1c49,
          _0x2dd7f6: 0x556,
          _0x19ce18: 0x16df,
          _0x51d2ee: 0xda6,
          _0x5980ae: 0x1f30,
          _0x28f45e: 0xa26,
          _0x169535: 0x2606,
          _0x26a663: 0xa26,
          _0x25623e: 0x179e,
          _0x308e01: 0xa1b,
          _0x94b793: 0x204e,
          _0x25aa94: 0x700,
          _0x30b432: 0x1502,
          _0x5de3d5: 0x2348,
          _0x3c2196: 0x1aab,
          _0x590095: 0xa26,
          _0x542544: 0x1d71,
          _0x1e17f0: 0xd2a,
          _0x34845a: 0xa26
        },
              a0_0x5349c1 = {
          _0x3f8da9: 0xebb,
          _0x4410c9: 0x1d66,
          _0x4d2d3a: 0x1e35,
          _0x4e3b5c: 0x1d66,
          _0x43f5ee: 0x1d66,
          _0x128c55: 0x284,
          _0x3c49a0: 0x61a,
          _0x25572c: 0x1ea3,
          _0x1f9d78: 0x340,
          _0x4bf7f8: 0x15f4,
          _0x139413: 0x1e38,
          _0x551b40: 0x15f4,
          _0x4af4d9: 0x1e38,
          _0x14a007: 0x15f4,
          _0x239c15: 0x1d66,
          _0xcac0d: 0x20fb,
          _0x4c80c9: 0x186b,
          _0x1fb81b: 0x20fb,
          _0x2f8a90: 0x1d66,
          _0x34dd66: 0x1195,
          _0xdb2dfe: 0x300,
          _0x2ee313: 0x1d66,
          _0x1db92a: 0x1e35,
          _0x5752fa: 0xe7b,
          _0x5c74cd: 0x789,
          _0x58254e: 0x2266,
          _0x44b259: 0x300,
          _0x16296b: 0x310,
          _0xfda0cf: 0x1d66,
          _0x4d102f: 0xe7b,
          _0x36e204: 0x213a,
          _0x4c1225: 0x1195,
          _0x3d9489: 0x300,
          _0x3ba6d3: 0x17f2,
          _0x3ad8c8: 0x1d66,
          _0x135a2d: 0x19bd,
          _0x14a6f7: 0xe74,
          _0xe1c5f9: 0xe74,
          _0x81db3a: 0x17f2,
          _0x45bb8b: 0x1d66,
          _0xd5377d: 0x1969
        },
              a0_0x4e04e7 = {
          _0x2d4852: 0x1ea3
        },
              a0_0x2e205c = {
          _0xd5e007: 0x17f2,
          _0x3dfb77: 0xe8f,
          _0x3fb9fb: 0x1195,
          _0x5df4c7: 0x340,
          _0x4168a6: 0x1ac2,
          _0x536014: 0x300
        },
              a0_0x291ff7 = {
          _0x3da73c: 0xeb0,
          _0x4dae33: 0x52c,
          _0x498037: 0x535,
          _0x3182a1: 0x535,
          _0x59eed7: 0x1cd8,
          _0x54d8a6: 0x25df,
          _0x225c4d: 0xa9d,
          _0x1225a9: 0x8bd,
          _0x5e5719: 0x8bd,
          _0x8ea77: 0xa9d,
          _0xba3bb9: 0x16c5,
          _0x20b146: 0xb54,
          _0x561bb0: 0x1d55,
          _0x3c6872: 0x1bb6,
          _0x473bf4: 0x1a6d,
          _0x68001d: 0x1d55,
          _0x9be0b3: 0x1bb6,
          _0x13092f: 0x8bd,
          _0x5edf21: 0xa9d,
          _0x35a069: 0xf82,
          _0x11c188: 0x3b1,
          _0x5576df: 0x1bb6,
          _0x1ad246: 0xf5c,
          _0x50e542: 0x2521,
          _0x39cc89: 0x1d66,
          _0x4ccc82: 0x880,
          _0x4271ef: 0x535,
          _0x1c2e8f: 0x25df,
          _0x30c8a5: 0x17f,
          _0x41c5d6: 0xd79
        },
              a0_0x2b36d0 = {
          _0x57e4bf: 0x1f15,
          _0x553be9: 0x52c
        },
              a0_0x3d89a2 = {
          _0x2928e4: 0xd34,
          _0x5f0e8f: 0x15e0,
          _0x273f0e: 0x287,
          _0x425806: 0x1af1,
          _0x40c0e4: 0x1ea,
          _0x178516: 0x1283,
          _0x104637: 0x2516,
          _0x57bd3b: 0x1d66,
          _0x484926: 0x1b44,
          _0x1398fc: 0x2516
        },
              a0_0x2c584b = {
          _0x91f878: 0x1a1a,
          _0x37f821: 0x198d,
          _0x48b4bc: 0x213a,
          _0x192a28: 0x1988,
          _0x5128dc: 0x1d66,
          _0x24ff9c: 0x1e35,
          _0x103562: 0x662,
          _0x55c711: 0x535,
          _0x1012eb: 0x13b0,
          _0x51d27a: 0x220f,
          _0x58daa6: 0x1954,
          _0x36397c: 0x1e21,
          _0x16e2a7: 0x9a8,
          _0x3b1e93: 0x19d2,
          _0x11d49d: 0x1e96
        },
              a0_0x4c31cd = {
          _0x19f399: 0x535,
          _0x583967: 0x220f,
          _0x3173b6: 0x14d2,
          _0x5d889c: 0x535,
          _0x2455c1: 0x13b0,
          _0xa45fe6: 0x2488,
          _0x581da8: 0x4a3,
          _0x168093: 0x5d0,
          _0x4c9e8b: 0x535,
          _0x448d01: 0x25df
        },
              a0_0x43b616 = {
          _0x170710: 0x14d2,
          _0x252f16: 0x1a5,
          _0x15e7a9: 0x662,
          _0xbf875d: 0x535,
          _0x1caed1: 0x13b0,
          _0x3da4c0: 0x1cd8,
          _0x1b88b0: 0x25df,
          _0x53bba1: 0x1d66,
          _0x268b94: 0xc7d,
          _0xe7cf52: 0xc7d,
          _0x28ef0c: 0xc7d,
          _0x3e83f8: 0x1d66,
          _0x5b2cbd: 0xc7d,
          _0x101a36: 0x16d1,
          _0x1bc792: 0x1870,
          _0xe50980: 0x15e0,
          _0xd8552b: 0xa9d,
          _0x4bf2ce: 0x225d,
          _0x1f77bc: 0x17f,
          _0xee1f3c: 0x1d55,
          _0x4872a5: 0x1d55,
          _0x1dc4fb: 0xc7d,
          _0x5d1e55: 0x1d66,
          _0x883327: 0x1e35,
          _0x206f00: 0x15ae,
          _0x566b8f: 0x1d66,
          _0x4cef39: 0x2072,
          _0x57ee0b: 0x880,
          _0x2d430a: 0x25df,
          _0x4eca1d: 0xaf9,
          _0x28269a: 0x1366
        },
              a0_0x27846a = {
          _0x41f1a1: 0x1692,
          _0x528520: 0x19d2,
          _0x9e25bd: 0x2528,
          _0x15825c: 0x2528,
          _0x5be3dd: 0x136e,
          _0xcc8caa: 0x91d,
          _0x993444: 0x198d,
          _0x588c6e: 0x1a76,
          _0x1f90d3: 0x235b,
          _0x1e650c: 0x1291,
          _0x511bae: 0x16c5,
          _0x816cda: 0x16c5,
          _0x159aa9: 0x373,
          _0x558069: 0x17f,
          _0x1bc5e4: 0x2072,
          _0x5d3176: 0xa9d,
          _0x4b7ada: 0xf82,
          _0x196720: 0x1d55,
          _0x2fead7: 0x1d66,
          _0x37f1ec: 0x11dc,
          _0xe8395d: 0x2422,
          _0x201e5a: 0x1f30,
          _0x5dcda1: 0x1f30,
          _0x217f91: 0x1f30,
          _0x534a3a: 0x1f30,
          _0x1fca66: 0x2072
        },
              a0_0x50fdd0 = {
          _0x2bab8d: 0x1052,
          _0x97fb35: 0x198d,
          _0x47d63c: 0x7cc
        },
              a0_0x29de55 = {
          _0x4daa9d: 0x155f,
          _0x5ed5ed: 0x535,
          _0xa54a2a: 0xaf9,
          _0x273bdf: 0xc41,
          _0x3b29ef: 0xf82,
          _0x181aea: 0x1d66,
          _0x2f6404: 0x1e6c,
          _0x5e1fab: 0xdde,
          _0x104de1: 0x1e6c,
          _0x3bf95d: 0x19d2
        },
              a0_0x499722 = {
          _0x552cb0: 0x535,
          _0x155359: 0x155f,
          _0x5bb062: 0x19d2,
          _0x2e30e9: 0x1de9,
          _0x26ed17: 0x20b4
        },
              a0_0x4be69f = {
          _0x1a4b7e: 0x2630,
          _0x446d49: 0x1af1,
          _0x4348ff: 0x1c7a,
          _0x371e07: 0x1283,
          _0x19ab40: 0x1283
        },
              a0_0xeb3526 = {
          _0x496813: 0x1af1,
          _0x44a9fc: 0x1c7a,
          _0xb58e28: 0x1283,
          _0x43b793: 0x1d66,
          _0x114a2a: 0x91b
        },
              a0_0x56a7df = {
          _0x56343c: 0x130c,
          _0x415c15: 0x1988
        },
              a0_0x3608e2 = {
          _0x105356: 0x130c
        },
              a0_0x22c3fe = {
          _0x1777db: 0x1a3,
          _0x22b95b: 0x1cdb,
          _0x1f06f9: 0xf83,
          _0x56044d: 0xaec
        },
              a0_0xe1bde9 = {
          _0x2e48c0: 0x2488,
          _0x33d040: 0x1d36,
          _0x4048d8: 0x385,
          _0x70009b: 0x213a
        },
              a0_0x43fb76 = {
          _0x2630ac: 0x384,
          _0x4d3acd: 0x1a3,
          _0x340bd6: 0xaec,
          _0x47fcf6: 0x182f
        },
              a0_0x5bc399 = {
          _0x48b95a: 0x182f,
          _0x245679: 0x384
        },
              a0_0x5b86b1 = {
          _0x587a96: 0xf46,
          _0x24e884: 0x1992,
          _0x2b59a9: 0x20ff,
          _0x331b57: 0x99e,
          _0x270969: 0x1d66,
          _0x383aff: 0x1992,
          _0x232c95: 0x3cd,
          _0x38acec: 0x1992,
          _0x244b02: 0x1d66,
          _0x2482b7: 0x1992,
          _0x59820e: 0x3cd,
          _0x535eae: 0x3cd,
          _0x3609d9: 0x1d66,
          _0x1483ad: 0x3cd,
          _0x370495: 0x1d66,
          _0x2eba17: 0x1d66,
          _0x571895: 0x1828,
          _0x4de1a2: 0x1828,
          _0x320481: 0x1992,
          _0x4a4b0b: 0x1d66,
          _0x110cb6: 0x1992,
          _0x413704: 0x1d66,
          _0x20b045: 0x1992,
          _0x4b7a1b: 0x235b,
          _0x5ce8d4: 0x14d2,
          _0x2de974: 0x1a0b,
          _0x5bc470: 0x1c7a,
          _0x4b2210: 0x1d66,
          _0x129b93: 0x1969
        },
              a0_0xc602e6 = {
          _0x1352c5: 0x535,
          _0x571682: 0x535,
          _0x165e92: 0x1cd8,
          _0x133186: 0x14d2,
          _0x2a4b7a: 0x1a5,
          _0x596c63: 0xa9d,
          _0x579bf3: 0x16c5,
          _0x9665d0: 0x8bd,
          _0x3a2371: 0x8bd,
          _0x430b44: 0x17f,
          _0x298a20: 0xb54,
          _0x3af319: 0x17f,
          _0x14660d: 0xb54,
          _0x50e57c: 0x1d55,
          _0x56a4bf: 0x1bb6,
          _0x75dd1c: 0x1bb6,
          _0x4606c7: 0xa9d,
          _0x1d685b: 0xf82,
          _0x4e79f0: 0xb54,
          _0x388e0c: 0x3b1,
          _0x135d65: 0x1d55,
          _0x4eec5e: 0x1bb6,
          _0x29fa59: 0xf5c,
          _0x1f8d01: 0x2521,
          _0xe29042: 0x1d66,
          _0xa4ce7c: 0x2530,
          _0x3c1384: 0x1d66,
          _0xa2d696: 0x1870,
          _0x4ced7d: 0x25df,
          _0x52b85f: 0x17f,
          _0x284fea: 0xb54,
          _0x169352: 0xb54,
          _0x491f96: 0x2072
        },
              a0_0x44e7bb = {
          _0x4b849d: 0x1c7a,
          _0x5d7725: 0x1283,
          _0x33a258: 0x1870,
          _0x3c754f: 0x1b44
        },
              a0_0x33974a = {
          _0x2997d8: 0x1052,
          _0x4b236b: 0xacb,
          _0x38fd14: 0x15ae
        },
              a0_0x3bb49a = {
          _0x45504d: 0x52c,
          _0x50d275: 0x535,
          _0x19eec9: 0x13b0,
          _0x4ba13b: 0x1cd8,
          _0x5f16e7: 0x1d66,
          _0x47c812: 0x15e0,
          _0x487460: 0x2325,
          _0x37f828: 0xc7d,
          _0x581bd7: 0x1303,
          _0x138d43: 0x16d1,
          _0x42dffe: 0x1870,
          _0x147f74: 0xa9d,
          _0x371be1: 0x16c5,
          _0x4e144d: 0x225d,
          _0x5b2140: 0xa9d,
          _0x221703: 0xf82,
          _0x208411: 0x3b1,
          _0x4d234a: 0x1d55,
          _0x3bc138: 0x225d,
          _0x5353a6: 0x15ae,
          _0x8cc36c: 0xa1d,
          _0x24269d: 0x535,
          _0xf3ebb: 0x25df,
          _0x3f933f: 0x1d66,
          _0x340c3d: 0x287,
          _0x10eb2c: 0xaf9,
          _0x1fa763: 0xaf9,
          _0x391dc9: 0x19d2,
          _0x5ddea0: 0x1366,
          _0x1827e4: 0x17f,
          _0x1404ac: 0x1d66,
          _0x12c976: 0x2072,
          _0xcd12b0: 0xd79,
          _0x25a699: 0x535,
          _0x37055a: 0x942
        },
              a0_0x3b4de8 = {
          _0xfc82cc: 0x198d,
          _0x1a22e4: 0x7cc
        },
              a0_0x2c7eb9 = {
          _0x5960a6: 0x576,
          _0x1420b0: 0x1af1,
          _0x5b8e3d: 0x1283
        },
              a0_0x2c5050 = {
          _0x2363da: 0x576,
          _0xa786f6: 0x130c,
          _0xc2c5e8: 0x7a0,
          _0x252661: 0x1692,
          _0x55f7e5: 0x22b2
        },
              a0_0x308555 = {
          _0x474c62: 0xfe3,
          _0x160568: 0x14eb,
          _0x12f2c1: 0xf79,
          _0x3388cd: 0xfe3,
          _0x75f0be: 0xe74,
          _0x1a923b: 0x14eb,
          _0x4d48fa: 0x20f6,
          _0x19dbd8: 0xfe3,
          _0x55f3a3: 0x1ccb,
          _0x1c5977: 0x1025,
          _0x3d238e: 0xf79,
          _0x26cc81: 0x14eb
        },
              a0_0x1d1429 = {
          _0x26255a: 0xf46,
          _0x58fa8: 0xb54,
          _0x4771c9: 0x225d,
          _0x24ec06: 0xded,
          _0x167321: 0x1491,
          _0x4b4426: 0x1d55,
          _0x3e00aa: 0x1c7a,
          _0x424223: 0x2290,
          _0x1094de: 0x136c,
          _0x1469fb: 0x170f,
          _0x33656f: 0x1b44,
          _0x5a7660: 0x128a,
          _0x4d31bf: 0x6ba,
          _0x561774: 0x170f,
          _0x12eb73: 0x443,
          _0x1056ff: 0xfe3,
          _0xb30ea1: 0x24bc,
          _0x453ac1: 0x879,
          _0x6abc73: 0x879,
          _0x491884: 0x100f
        },
              a0_0x34a518 = {
          _0x55da0a: 0x114f,
          _0x1034a3: 0x201,
          _0x44254b: 0x22e
        },
              a0_0x362fa0 = {
          _0x253896: 0x1d66,
          _0x436ac2: 0x219e,
          _0x2c20ab: 0x2379,
          _0x59050e: 0x1d66,
          _0x2118a4: 0x15e0,
          _0x481b44: 0x219e,
          _0x2913c0: 0x1d66,
          _0x59e086: 0x2379,
          _0x207aaa: 0x1012,
          _0x21fa64: 0x22f7
        },
              a0_0x23be64 = {
          _0x36e35a: 0x14d2
        },
              a0_0x1f1e85 = {
          _0x37ed9b: 0x1af1,
          _0xcb7975: 0x6e0
        },
              a0_0xe340f4 = {
          _0x2f0e80: 0x205f,
          _0x31ab42: 0xf79,
          _0x1cef35: 0x1bbb
        },
              a0_0x4b464d = {
          _0x20f9bd: 0x1ea,
          _0x997585: 0x1af1,
          _0xf4d210: 0x1d66,
          _0x2c3bbb: 0x1e35,
          _0x162ec2: 0x1d66,
          _0x2982ef: 0x1d2d
        };

        _0x1126c7.r(_0x5414df);

        var _0x32ae8f = _0x1126c7(0xb0d9),
            _0x161703 = _0x1126c7(0x161cd);

        class _0x1ec6d4 {
          constructor(_0x5afe59, _0x1a4c5c) {
            this.state = 'prepare', this.config = _0x5afe59, this.dimension = _0x1a4c5c, this.perSecondEvents = [], this.perSecondEvent = this.perSecond, this.centerPosition = new _0x161703.Vector3(this.config.center.x, this.config.center.y, this.config.center.z), this.centerRadius = this.config.center.radius, this.inPause = false;
          }

          async ['prepareAsstes']() {
            for (_0x161703.console.logInfo('start prepare assets'), _0x161703.game.streaming.setFocusPosAndVel(this.centerPosition.x, this.centerPosition.y, this.centerPosition.z, 0x0, 0x0, 0x0), _0x161703.game.streaming.newLoadSceneStartSphere(this.centerPosition.x, this.centerPosition.y, this.centerPosition.z, this.centerRadius + 0x64, 0x0); !_0x161703.game.streaming.isNewLoadSceneLoaded();) await _0x161703.game.sleep(0x0);

            _0x161703.game.streaming.newLoadSceneStop(), _0x161703.events.callRemote('2942234215');
          }

          async ['onStart']() {
            this.state = 'start';
          }

          async ['onFinish']() {
            this.state = 'finish', _0x161703.events.call('minigames.client.finishMinigameSession');
          }

          async ['togglePause']() {
            _0x161703.events.callRemote('942425349');
          }

          async ['onPause']() {
            this.inPause = true;
          }

          async ['onResume']() {
            this.inPause = false;
          }

          async ['onEnterColshape'](_0x5f0fd9) {}

          async ['onExitColshape'](_0x406ae7) {}

          async ['toggleEnding'](_0x26b8d7) {}

          async ['prepareForEnding']() {}

          async ['onRecconnect']() {}

          async ['updateGameStatistic'](_0xfaa8b9) {}

          ['playerJoinSession'](_0x15fc2d) {}

          ['playerLeaveSession'](_0x3d3193) {}

          async ['onSpawn'](_0x3469cf) {}

          async ['onPlayerDeath'](_0x57323f, _0x1f304d, _0x221bd3) {}

          async ['keyDownE']() {}

          async ['keyDownF']() {}

          async ['handlePlayersInfoAction'](_0x1a4884) {}

          async ['onReward']() {
            this.state = 'reward';
          }

          async ['onProcess']() {
            this.state = 'process';
          }

          async ['onRender']() {
            'reward' === this.state && (_0x161703.game.graphics.drawSpotLight(0x61a, 0xfd, -0x30, -0.911, -0.412, -0.3, 0x0, 0xc3, 0xf7, 0x8, 0x28, 0x8, 0x19, 0x3c), _0x161703.game.graphics.drawSpotLight(1556.359, 247.069, -0x30, 0.406, 0.913, -0.3, 0xed, 0xf, 0x8d, 0x8, 0x28, 0x8, 0x19, 0x3c));
          }

          async ['onPlayerDeath2'](_0x54811a) {}

          async ['handleCustomEvent'](_0x11b7ef) {
            _0x161703.console.logInfo('Custom event data :' + _0x11b7ef), undefined !== this[_0x11b7ef.name] && (await this[_0x11b7ef.name](_0x11b7ef.args));
          }

          ['onPerSecond']() {
            'process' === this.state && this.perSecondEvents.forEach(_0x39a079 => _0x39a079());
          }

          ['addPerSecond'](_0x259db0) {
            this.perSecondEvents.push(_0x259db0);
          }

          ['addEvent'](_0x4a7211, _0x4acd1e) {
            _0x161703.events.add(_0x4a7211, _0x4acd1e);
          }

          ['callRemoteMinigameEvent'](_0xaa9f35, _0x3f0f8f) {
            _0x161703.events.callRemote('3795595414', {
              'evetnName': _0xaa9f35,
              'args': _0x3f0f8f
            });
          }

          async ['loadMasks']() {
            for (const _0x1ac209 of _0x32ae8f.Z.maskDeathmatch) await _0x161703.game.streaming.requestModel(_0x161703.game.joaat(_0x1ac209));

            await _0x161703.game.streaming.requestModel(_0x161703.game.joaat(_0x32ae8f.Z.maskTeams[0x1].id)), await _0x161703.game.streaming.requestModel(_0x161703.game.joaat(_0x32ae8f.Z.maskTeams[0x2].id)), await _0x161703.game, await _0x161703.game.streaming.requestModel(_0x161703.game.joaat(_0x32ae8f.Z.kingMask));
          }

          ['entityStreamIn'](_0x2007f2) {}

          ['entityStreamOut'](_0x2d757e) {}

        }

        class _0x25b4fd {
          constructor(_0x590145, _0x2ac52b) {
            this.minigameType = _0x590145, this.presets = {}, this.controller = _0x2ac52b;
          }

          ['getController']() {
            return this.controller;
          }

          ['addPreset'](_0x398e78, _0x32ccec) {
            this.presets[_0x398e78] = _0x32ccec;
          }

          ['getPreset'](_0x43556a) {
            return this.presets[_0x43556a];
          }

        }

        var _0x2a89d6 = _0x1126c7(0x16a21),
            _0x213b9c = _0x1126c7(0xa4ff),
            _0x5e1340 = _0x1126c7(0x12a76),
            _0x158902 = _0x1126c7(0x176d8),
            _0x57faf8 = _0x1126c7(0x161cd);

        const _0x2723a8 = _0x57faf8.players.local;

        class _0x2a0a20 extends _0x1ec6d4 {
          constructor(_0x41d93, _0x429848) {
            super(_0x41d93, _0x429848), this.dimension = _0x429848, this.teamInfo = [], this.alive = true, this.isLoading = false, this.playerState = 'idle', this.leaderboard = [], this.playersInSession = new Map(), this.showLeaderboard = false, this.pauseScreenEffect = this.config.pauseScreenEffect, this.introCamera1 = undefined, this.introCamera2 = undefined, this.garageCamera = null, this.endingCameraPos1 = new _0x57faf8.Vector3(1563.1597900390625, 250.41319274902344, -0x30), this.endingCameralPos = new _0x57faf8.Vector3(-0.99, -0.01, 0x0), this.isOutOfArea = false, this.outOfGameAreaTimeout = null, this.outOfArenaTimeoutDuration = this.config.outOfArenaTimeoutDuration, this.gameArea = _0x57faf8.colshapes.newCircle(this.centerPosition.x, this.centerPosition.y, this.centerRadius, this.dimension), this.endingSceneDuration = this.config.endingSceneDuration, this.areaBlip = _0x57faf8.blips.new(0x9, new _0x57faf8.Vector3(this.centerPosition.x, this.centerPosition.y, this.centerPosition.z), {
              'radius': this.centerRadius,
              'alpha': 0x64,
              'dimension': this.dimension,
              'color': 0x5
            }), this.timeBars = {}, this.respawnProtection = false, _0x57faf8.keys.bind(0x9, true, this.tabDown.bind(this)), _0x57faf8.keys.bind(0x9, false, this.tabUp.bind(this));
          }

          async ['handlePlayersInfoAction'](_0xaa4267) {
            if (await super.handlePlayersInfoAction(_0xaa4267), _0xaa4267) {
              switch (_0xaa4267.action) {
                case 'add':
                  this.teamInfo.push(_0xaa4267.player);
                  break;

                case 'remove':
                  this.teamInfo = this.teamInfo.filter(_0x3587b0 => _0x3587b0.staticId !== _0xaa4267.staticId);
                  break;

                case 'update':
                  for (const _0x2ab0b2 of this.teamInfo) if (_0x2ab0b2.staticId === _0xaa4267.staticId) {
                    _0x2ab0b2.death += _0xaa4267.death, _0x2ab0b2.kills += _0xaa4267.kills, _0x2ab0b2.staticId == _0x2a89d6.api.getPlayerStatic() && (this.timeBars.playerLevel.value = _0x2ab0b2.kills);
                    break;
                  }

                  this.updateLeaderboard();
                  break;

                default:
                  _0x57faf8.console.logError('PlayerInfo action doesnt exist: ' + _0xaa4267.action);

              }

              this.setupMatchLeaderboard();
            }
          }

          ['updateLeaderboard']() {
            const _0x464680 = this.teamInfo.sort((_0x37c65f, _0x185399) => _0x185399.kills - _0x37c65f.kills);

            this.timeBars.thirdPlace.title = '#3: ' + (_0x464680[0x2]?.['kills'] > 0x0 ? _0x464680[0x2]?.['name'] : ''), this.timeBars.thirdPlace.value = '' + (_0x464680[0x2]?.['kills'] > 0x0 ? _0x464680[0x2]?.['kills'] : '0'), this.timeBars.secondPlace.title = '#2: ' + (_0x464680[0x1]?.['kills'] > 0x0 ? _0x464680[0x1]?.['name'] : ''), this.timeBars.secondPlace.value = '' + (_0x464680[0x1]?.['kills'] > 0x0 ? _0x464680[0x1]?.['kills'] : '0'), this.timeBars.firstPlace.title = '#1: ' + (_0x464680[0x0]?.['kills'] > 0x0 ? _0x464680[0x0]?.['name'] : ''), this.timeBars.firstPlace.value = '' + (_0x464680[0x0]?.['kills'] > 0x0 ? _0x464680[0x0]?.['kills'] : '0');
          }

          ['tabDown']() {
            this.showLeaderboard = true, this.toggleLeaderboard(true);
          }

          ['tabUp']() {
            this.showLeaderboard = false, this.toggleLeaderboard(false);
          }

          ['toggleLeaderboard'](_0x3dd8c1) {
            _0x3dd8c1 ? (_0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), _0x57faf8.events.callRemote('1729314754'), this.setupMatchLeaderboard()) : _0x5e1340.globalBrowser.emit('miniGames_setGameInfoTeams', null);
          }

          ['setupMatchLeaderboard'] = (_0xbcdc2b = [{
            'name': 'red',
            'points': 0x37,
            'members': [{
              'name': 'TeamRed Member',
              'staticId': 0x87a23,
              'position': 0x1,
              'kills': 0x8,
              'death': 0x2,
              'accuracy': 22.45
            }, {
              'name': 'TeamRed Member2',
              'staticId': 0x25fa3,
              'position': 0x2,
              'kills': 0x2,
              'death': 0x2,
              'accuracy': 10.4
            }]
          }, {
            'name': 'blue',
            'points': 0x2d,
            'members': [{
              'name': 'TeamBlue Member',
              'staticId': 0x87a26,
              'position': 0x2,
              'kills': 0x8,
              'death': 0x2,
              'accuracy': 22.45
            }, {
              'name': 'TeamBlue Member2',
              'staticId': 0x25fa3,
              'position': 0x1,
              'kills': 0x19,
              'death': 0x2,
              'accuracy': 10.4
            }]
          }]) => {
            'process' === this.state && this.showLeaderboard && (_0xbcdc2b = [{
              'name': this.config.teamNaming[0x1],
              'points': -0x1,
              'members': this.teamInfo.map(_0x15f6d1 => ({
                'name': _0x15f6d1.name,
                'staticId': _0x15f6d1.staticId,
                'kills': _0x15f6d1.kills,
                'death': _0x15f6d1.death,
                'accuracy': 0x32
              }))
            }], _0x5e1340.globalBrowser.emit('miniGames_setGameInfoTeams', _0xbcdc2b));
          };

          ['onPlayerDeath'](_0x425dca, _0x5cb466, _0x5caa47) {
            _0x425dca === _0x57faf8.players.local && this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), _0x425dca === _0x57faf8.players.local && (this.alive = false);
          }

          ['onExitColshape'](_0x5336b9) {
            const a0_0x2c315c = {
              _0x158a01: 0x1f86
            };
            _0x5336b9 === this.gameArea && 'process' === this.state && (this.isOutOfArea = true, this.outOfGameAreaTimeout = _0x57faf8.game.sleep(this.outOfArenaTimeoutDuration).then(() => {
              _0x2723a8.setHealth(0x0);
            }));
          }

          ['onEnterColshape'](_0x2e682f) {
            _0x2e682f === this.gameArea && 'process' === this.state && (this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null));
          }

          ['onRecconnect']() {
            _0x57faf8.console.logInfo('reconnect to session');
          }

          async ['toggleEnding'](_0x2894ad) {
            if (_0x2894ad) {
              for (_0x57faf8.events.call('utils.disablePlayerMove', true), _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.setInvincible(true), await _0x2a89d6.api.fadeOut(0x3e8), _0x57faf8.game.streaming.setFocusPosAndVel(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x0, 0x0, 0x0), _0x57faf8.game.streaming.newLoadSceneStartSphere(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x50, 0x0); !_0x57faf8.game.streaming.isNewLoadSceneLoaded();) await _0x57faf8.game.sleep(0x0);

              _0x57faf8.game.streaming.newLoadSceneStop(), _0x57faf8.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), this.garageCamera = _0x57faf8.cameras.new('default', this.endingCameraPos1, new _0x57faf8.Vector3(0x0, 0x0, 0x0), 0x28);

              const _0xd4d018 = new _0x57faf8.Vector3(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z);

              this.garageCamera.pointAtCoord(_0xd4d018.x, _0xd4d018.y, _0x32ae8f.Z.scenePositions2[0x0].z), _0x57faf8.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x57faf8.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x57faf8.game.streaming.clearFocus(), _0x2a89d6.api.fadeIn(0x3e8), await this.createPedsForEnding();
            } else {
              if (await _0x2a89d6.api.fadeOut(0x3e8), _0x57faf8.game.streaming.clearFocus(), this.spawnedPeds && 0x0 !== this.spawnedPeds.length) {
                for (const _0xd8f948 of this.spawnedPeds) _0x57faf8.peds.exists(_0xd8f948) && _0xd8f948.destroy();
              }

              _0x57faf8.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), _0x57faf8.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.setInvincible(false), await _0x2a89d6.api.fadeIn(0x3e8), this.inPause = false;
            }
          }

          async ['createPedsForEnding']() {
            const a0_0x195cf9 = {
              _0x17943d: 0xdde,
              _0x3f4033: 0x19d2,
              _0x4dc3c0: 0x1de9,
              _0x4a7b28: 0x20b4
            };

            for (const _0x55eea7 of _0x32ae8f.Z.pedAnimDicts) await _0x2a89d6.api.requestAnimDict(_0x55eea7, true);

            this.spawnedPeds = [];

            for (const _0x215a01 of _0x32ae8f.Z.pedPositions) {
              const _0x201efd = _0x57faf8.peds.new(_0x57faf8.game.joaat(_0x32ae8f.Z.pedList[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedList.length - 0x1)]), new _0x57faf8.Vector3(_0x215a01.x, _0x215a01.y, _0x215a01.z), _0x215a01.r, _0x57faf8.players.local.dimension);

              _0x201efd.minigamesStreamIn = () => {
                const _0x4f8bf7 = _0x32ae8f.Z.pedAnimDicts[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedAnimDicts.length - 0x1)];

                _0x201efd.taskPlayAnim(_0x4f8bf7, 'base', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
              }, this.spawnedPeds.push(_0x201efd);
            }
          }

          async ['prepareAsstes']() {
            _0x2a89d6.api.setInvincible(true), _0x57faf8.events.call('utils.disablePlayerMove', true), this.isLoading = true, _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), await _0x2a89d6.api.fadeOut(0x3e8), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': true
            }), _0x57faf8.gui.cursor.show(false, false), this.toggleLeaderboard(false), await super.prepareAsstes();
          }

          async ['onStart']() {
            _0x57faf8.console.logInfo('start minigame'), await super.onStart(), await this.playIntro(0x2), _0x57faf8.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true);
          }

          async ['onProcess']() {
            await super.onProcess(), _0x57faf8.console.logInfo('process'), this.isLoading = false, _0x57faf8.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x57faf8.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), _0x2a89d6.api.setInvincible(false), this.timeBars.timeLeft = new _0x158902.TimerBar('fun.minigames.deathmatch.timeLeft', null, {
              'value': '0 сек'
            }), this.timeBars.timeLeft.visible = false, this.timeBars.playerLevel = new _0x158902.TimerBar('fun.minigames.deathmatch.kills', null, {
              'value': '0'
            }), this.timeBars.thirdPlace = new _0x158902.TimerBar('#1 ', 'playerScore', {
              'value': '0',
              'pbarBgColor': [0xb4, 0x82, 0x61, 0xff],
              'textColor': [0xff, 0xff, 0xff, 0xff]
            }), this.timeBars.secondPlace = new _0x158902.TimerBar('#2 ', 'playerScore', {
              'value': '0',
              'pbarBgColor': [0x96, 0x99, 0xa1, 0xff],
              'textColor': [0xff, 0xff, 0xff, 0xff]
            }), this.timeBars.firstPlace = new _0x158902.TimerBar('#3 ', 'playerScore', {
              'value': '0',
              'pbarBgColor': [0xd6, 0xb5, 0x63, 0xff],
              'textColor': [0xff, 0xff, 0xff, 0xff]
            });

            const _0x387e0f = _0x32ae8f.Z.soundData.start[Math.floor(Math.random() * _0x32ae8f.Z.soundData.start.length)];

            _0x2a89d6.api.playSound('gungame/' + _0x387e0f);
          }

          async ['onReward']() {
            await super.onReward(), _0x57faf8.game.streaming.clearFocus(), this.state = 'reward', this.isLoading = true, this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), await this.toggleEnding(true), await _0x57faf8.game.sleep(this.endingSceneDuration - 0x7d0), await this.toggleEnding(false);
          }

          async ['onFinish']() {
            await super.onFinish(), _0x57faf8.game.streaming.clearFocus(), _0x57faf8.events.call('utils.disablePlayerMove', false), this.isLoading = false, _0x2a89d6.api.toggleChat(true), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), this.timeBars.timeLeft.visible = false, this.timeBars.playerLevel.visible = false, this.timeBars.thirdPlace.visible = false, this.timeBars.secondPlace.visible = false, this.timeBars.firstPlace.visible = false, _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': false
            });
          }

          ['onPause']() {
            _0x57faf8.console.logInfo('pause'), this.inPause = true, _0x57faf8.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x2a89d6.api.toggleChat(true);
          }

          ['onResume']() {
            _0x57faf8.console.logInfo('resume'), this.inPause = false, _0x57faf8.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x2a89d6.api.toggleChat(false);
          }

          ['onSpawn']() {
            'process' === this.state && (_0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true)), this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), this.alive = true;
          }

          async ['playIntro'](_0x42e40e) {
            this.mapId = _0x42e40e;
            const _0x43608c = _0x213b9c.r[_0x42e40e];
            _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.fadeOut(0x0), _0x57faf8.events.call('utils.disablePlayerMove', true), _0x57faf8.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x57faf8.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2);

            const _0xd5608e = new _0x57faf8.Vector3(_0x43608c.cameraPosition.from.x, _0x43608c.cameraPosition.from.y, _0x43608c.cameraPosition.from.z),
                  _0x2f58a1 = new _0x57faf8.Vector3(_0x43608c.cameraPosition.to.x, _0x43608c.cameraPosition.to.y, _0x43608c.cameraPosition.to.z);

            this.introCamera1 = _0x57faf8.cameras.new('default', _0xd5608e, new _0x57faf8.Vector3(0x0, 0x0, 0x0), 0x28), this.introCamera2 = _0x57faf8.cameras.new('default', _0x2f58a1, new _0x57faf8.Vector3(0x0, 0x0, 0x0), 0x28);

            const _0x9636bc = new _0x57faf8.Vector3(_0x43608c.cameraPosition.lookAt.x, _0x43608c.cameraPosition.lookAt.y, _0x43608c.cameraPosition.lookAt.z);

            this.introCamera1.pointAtCoord(_0x9636bc.x, _0x9636bc.y, _0x9636bc.z), this.introCamera2.pointAtCoord(_0x9636bc.x, _0x9636bc.y, _0x9636bc.z), _0x57faf8.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8), this.introCamera2.setActiveWithInterp(this.introCamera1.handle, 0x4e20, 0x0, 0x0), await _0x57faf8.game.sleep(0x1770), await _0x2a89d6.api.fadeOut(0x3e8), _0x57faf8.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x57faf8.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2), _0x57faf8.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8);
          }

          ['handleRespawnInvicible'](_0x5bd179) {
            undefined !== _0x5bd179.entityRemoteId && _0x57faf8.players.atRemoteId(_0x5bd179.entityRemoteId) && this.toggleRespawnInvincible(_0x5bd179.toggle, _0x57faf8.players.atRemoteId(_0x5bd179.entityRemoteId));
          }

          ['toggleRespawnInvincible'](_0x2fa31b, _0x12dcc8 = _0x57faf8.players.local) {
            if (_0x12dcc8.remoteId === _0x57faf8.players.local.remoteId) this.respawnProtection = _0x2fa31b, _0x2a89d6.api.setInvincible(_0x2fa31b), _0x57faf8.players.local.setAlpha(_0x2fa31b ? 0x37 : 0xff);else {
              if (!_0x57faf8.players.exists(_0x12dcc8)) return;

              const _0x20e26c = _0x57faf8.players.atHandle(_0x12dcc8.handle);

              if (!_0x20e26c) return;
              _0x2a89d6.api.setInvincible(_0x2fa31b, _0x20e26c), _0x20e26c.setAlpha(_0x2fa31b ? 0x37 : 0xff);
            }
          }

          async ['onRender']() {
            super.onRender(), (this.inPause || this.isLoading) && (_0x57faf8.game.controls.disableAllControlActions(0x0), _0x57faf8.game.controls.disableAllControlActions(0x1)), this.respawnProtection && this.alive && (_0x57faf8.game.controls.isControlJustPressed(0x0, 0x0) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x0) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x1) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x2) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x1e) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x1f) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x20) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x21) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x22) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x23) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x19) || _0x57faf8.game.controls.isControlJustPressed(0x0, 0x1a) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x0) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x1) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x2) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x1e) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x1f) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x20) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x21) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x22) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x23) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x19) || _0x57faf8.game.controls.isControlJustReleased(0x0, 0x1a)) && (this.respawnProtection = false, _0x2a89d6.api.setInvincible(false), _0x57faf8.players.local.setAlpha(0xff), this.toggleRespawnInvincible(false), _0x57faf8.events.callRemote('238157310')), this.isOutOfArea && _0x57faf8.game.graphics.drawText('Вернитесь в игровую зону', [0.5, 0.5], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            });
          }

        }

        var _0x3725c2 = _0x1126c7(0x161cd),
            _0x194594 = _0x1126c7(0x4e70),
            _0x1ab584 = _0x1126c7(0x12ab9),
            _0x5116ec = _0x1126c7(0x58a6),
            _0x168f4c = _0x1126c7(0x15f92),
            _0x41cec6 = _0x1126c7(0x16a7d);

        class _0x30d472 {
          constructor(_0x365fb9) {
            this.active = false, this.leaderboardData = null, this.leaderboardDataBuild = null, this.setup(_0x365fb9);
          }

          ['setup'](_0x2e27e5 = {
            'teamNaming': {
              0x1: 'red',
              0x2: 'blue'
            },
            'teamInfo': [{
              'name': 'Player Name',
              'staticId': 0x15b3,
              'kills': 0x0,
              'death': 0x0,
              'accuracy': 0x32,
              'team': 'red'
            }]
          }) {
            const _0x2d62b0 = [];

            for (const _0x3fdd52 in _0x2e27e5.teamNaming) {
              const _0x16b98e = _0x2e27e5.teamNaming[_0x3fdd52],
                    _0x52b295 = {
                'name': _0x16b98e,
                'points': 0x0,
                'members': _0x2e27e5.teamInfo.filter(_0x410afd => _0x410afd.team === _0x16b98e).map(_0x217dfa => ({
                  'name': _0x217dfa.name,
                  'staticId': _0x217dfa.staticId,
                  'kills': _0x217dfa.kills,
                  'death': _0x217dfa.death,
                  'accuracy': _0x217dfa.accuracy ?? 0x32
                }))
              };

              _0x2d62b0.push(_0x52b295);
            }

            this.leaderboardData = _0x2e27e5, this.leaderboardDataBuild = _0x2d62b0;
          }

          ['toggle'](_0x410ddb) {
            _0x1126c7.g.interfaces.miniGames && (_0x410ddb ? (this.active = true, _0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), _0x5e1340.globalBrowser.emit('miniGames_setGameInfoTeams', this.leaderboardDataBuild)) : (this.active = false, _0x5e1340.globalBrowser.emit('miniGames_setGameInfoTeams', null)));
          }

          ['update'](_0x4cf74c) {
            this.setup(_0x4cf74c), this.active && _0x5e1340.globalBrowser.emit('miniGames_setGameInfoTeams', this.leaderboardDataBuild);
          }

        }

        var _0x4fbcb8 = _0x1126c7(0x161cd);

        const _0x169a7f = _0x4fbcb8.players.local;

        class _0x133d91 extends _0x1ec6d4 {
          constructor(_0x36ac00, _0x440a78) {
            const a0_0x3a09f1 = {
              _0x4c7899: 0x91d
            };
            super(_0x36ac00, _0x440a78), this.teamInfo = [], this.dimension = _0x440a78, this.inPause = false, this.playersInSession = new Map(), this.pauseScreenEffect = this.config.pauseScreenEffect, this.buyStateDuration = this.config.buyStateDurtation ?? 0x1388, this.mapId = 0x0, this.introCamera1 = undefined, this.introCamera2 = undefined, this.garageCamera = null, this.spectateMod = false, this.spectateCam = null, this.spectateIndex = 0x0, this.endingCameraPos1 = new _0x4fbcb8.Vector3(1563.1597900390625, 250.41319274902344, -0x30), this.endingCameralPos = new _0x4fbcb8.Vector3(-0.99, -0.01, 0x0), this.isOutOfArea = false, this.outOfGameAreaTimeout = null, this.outOfArenaTimeoutDuration = this.config.outOfArenaTimeoutDuration, this.gameArea = _0x4fbcb8.colshapes.newCircle(this.centerPosition.x, this.centerPosition.y, this.centerRadius, this.dimension), this.endingSceneDuration = this.config.endingSceneDuration, this.team = null, this.money = 0x0, this.isPlantingBomb = false, this.areaBlip = _0x4fbcb8.blips.new(0x9, new _0x4fbcb8.Vector3(this.centerPosition.x, this.centerPosition.y, this.centerPosition.z), {
              'radius': this.centerRadius,
              'alpha': 0x64,
              'dimension': this.dimension,
              'color': 0x5
            }), _0x4fbcb8.keys.bind(_0x41cec6.t.ARROW_LEFT, false, () => {
              this.changeSpectatePlayer('left');
            }), _0x4fbcb8.keys.bind(_0x41cec6.t.ARROW_RIGHT, false, () => {
              this.changeSpectatePlayer('right');
            }), this.leaderboard = new _0x30d472({
              'teamNaming': this.config.teamNaming,
              'teamInfo': this.teamInfo
            }), _0x4fbcb8.keys.bind(_0x41cec6.t.B, true, () => this.toggleShop(true)), _0x4fbcb8.keys.bind(_0x41cec6.t.B, false, () => this.toggleShop(false)), _0x4fbcb8.keys.bind(0x9, true, () => this.leaderboard.toggle(true)), _0x4fbcb8.keys.bind(0x9, false, () => this.leaderboard.toggle(false));
          }

          ['toggleShop'](_0x5d6db6) {
            _0x5d6db6 ? (_0x5e1340.globalBrowser.emit('miniGames_setBuyMenuDisplay', true), _0x4fbcb8.gui.cursor.show(true, true)) : (_0x5e1340.globalBrowser.emit('miniGames_setBuyMenuDisplay', false), _0x4fbcb8.gui.cursor.show(false, false));
          }

          ['toggleLeaderboard'](_0x59979f) {
            _0x59979f ? (_0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), this.setupMatchLeaderboard()) : _0x5e1340.globalBrowser.emit('miniGames_setGameInfoTeams', null);
          }

          ['setupMatchLeaderboard'] = (_0x217926 = [{
            'name': 'red',
            'points': 0x37,
            'members': [{
              'name': 'TeamRed Member',
              'staticId': 0x87a23,
              'position': 0x1,
              'kills': 0x8,
              'death': 0x2,
              'accuracy': 22.45
            }, {
              'name': 'TeamRed Member2',
              'staticId': 0x25fa3,
              'position': 0x2,
              'kills': 0x2,
              'death': 0x2,
              'accuracy': 10.4
            }]
          }]) => {
            if ('process' === this.state && this.showLeaderboard) {
              _0x217926 = [];

              for (const _0xa93412 in this.config.teamNaming) {
                const _0x367cae = this.config.teamNaming[_0xa93412],
                      _0x1a0bf1 = {
                  'name': _0x367cae,
                  'points': 0x0,
                  'members': this.teamInfo.filter(_0x2681da => _0x2681da.team === _0x367cae).map(_0x2f3723 => ({
                    'name': _0x2f3723.name,
                    'staticId': _0x2f3723.staticId,
                    'kills': _0x2f3723.kills,
                    'death': _0x2f3723.death,
                    'accuracy': 0x32
                  }))
                };

                _0x217926.push(_0x1a0bf1);
              }

              _0x5e1340.globalBrowser.emit('miniGames_setGameInfoTeams', _0x217926);
            }
          };

          ['keyDownE']() {
            this.insidePlant && _0x4fbcb8.events.callRemote('3398188744');
          }

          ['startPlantingBomb']() {
            _0x4fbcb8.attachments.addLocal('bomb'), this.isPlantingBomb = true;
          }

          ['stopPlantingBomb']() {
            _0x4fbcb8.attachments.removeLocal(_0x4fbcb8.game.joaat('ch_prop_ch_ld_bomb_01a')), this.isPlantingBomb = false;
          }

          ['bombHasBeenPlanted']() {
            _0x2a89d6.api.chatPush('Bomb has been planted');
          }

          ['onStartRound']() {
            _0x2a89d6.api.chatPush('Round started');
          }

          ['onEndRound']() {
            _0x2a89d6.api.chatPush('Round ended');
          }

          ['showPlantMessage']() {
            this.insidePlant = true;
          }

          ['hidePlantMessage']() {
            this.insidePlant = false;
          }

          ['tabDown']() {
            this.showLeaderboard = true, this.toggleLeaderboard(true);
          }

          ['tabUp']() {
            this.showLeaderboard = false, this.toggleLeaderboard(false);
          }

          ['onExitColshape'](_0x2a639a) {
            _0x2a639a === this.gameArea && 'process' === this.state && (this.isOutOfArea = true, this.outOfGameAreaTimeout = _0x4fbcb8.game.sleep(this.outOfArenaTimeoutDuration).then(() => {
              _0x169a7f.setHealth(0x0);
            }));
          }

          ['onEnterColshape'](_0x324a27) {
            _0x324a27 === this.gameArea && 'process' === this.state && (this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null));
          }

          async ['handlePlayersInfoAction'](_0x1d499e) {
            if (_0x1d499e) {
              switch (_0x1d499e.action) {
                case 'add':
                  this.teamInfo.push(_0x1d499e.player);

                  for (const _0x319aa1 of this.teamInfo) _0x319aa1.staticId === _0x2a89d6.api.getPlayerStatic() && (this.team = _0x319aa1.team);

                  break;

                case 'remove':
                  this.teamInfo = this.teamInfo.filter(_0x498ff7 => _0x498ff7.staticId !== _0x1d499e.staticId);
                  break;

                case 'update':
                  for (const _0x424b17 of this.teamInfo) if (_0x424b17.staticId === _0x1d499e.staticId) {
                    _0x424b17.death += _0x1d499e.death, _0x424b17.kills += _0x1d499e.kills;
                    break;
                  }

                  break;

                default:
                  _0x4fbcb8.console.logError('PlayerInfo action doesnt exist: ' + _0x1d499e.action);

              }

              this.leaderboard.update({
                'teamNaming': this.config.teamNaming,
                'teamInfo': this.teamInfo
              });
            }
          }

          ['setMoney'](_0x48c45e) {
            this.money = _0x48c45e.money, _0x5e1340.globalBrowser.emit('miniGames_setHudMoney', this.money);
          }

          async ['createPedsForEnding']() {
            for (const _0x2d4acd of _0x32ae8f.Z.pedAnimDicts) await _0x2a89d6.api.requestAnimDict(_0x2d4acd, true);

            this.spawnedPeds = [];

            for (const _0x3236f0 of _0x32ae8f.Z.pedPositions) {
              const _0x5dd5a2 = _0x4fbcb8.peds.new(_0x4fbcb8.game.joaat(_0x32ae8f.Z.pedList[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedList.length - 0x1)]), new _0x4fbcb8.Vector3(_0x3236f0.x, _0x3236f0.y, _0x3236f0.z), _0x3236f0.r, _0x4fbcb8.players.local.dimension);

              _0x5dd5a2.minigamesStreamIn = () => {
                const _0x426042 = _0x32ae8f.Z.pedAnimDicts[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedAnimDicts.length - 0x1)];

                _0x5dd5a2.taskPlayAnim(_0x426042, 'base', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
              }, this.spawnedPeds.push(_0x5dd5a2);
            }
          }

          ['onRecconnect']() {
            _0x4fbcb8.console.logInfo('reconnect to session');
          }

          ['endRound']() {
            _0x4fbcb8.console.logInfo('Round ended');
          }

          ['setSpectateMod'](_0x2ad208) {
            const _0x1aa436 = _0x2ad208.value ?? true;

            _0x1aa436 && !this.spectateMod ? (this.spectateMod = true, this.changeSpectatePlayer()) : !_0x1aa436 && this.spectateMod && (this.spectateMod = false, _0x4fbcb8.cameras.exists(this.spectateCam) && (this.spectateCam.destroy(), delete this.spectateCam), _0x4fbcb8.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0));
          }

          ['changeSpectatePlayer'](_0x23d33c = 'right') {
            if ('right' === _0x23d33c) {
              let _0x45d176;

              for (let _0x52c094 = this.spectateIndex + 0x1; _0x52c094 < this.teamInfo.length - 0x1; _0x52c094++) {
                const _0x51c76b = this.teamInfo[_0x52c094];

                if (!_0x51c76b) {
                  _0x45d176 = -0x1;
                  break;
                }

                if (_0x51c76b.team === this.team) {
                  _0x45d176 = _0x52c094;
                  break;
                }
              }

              this.spectateIndex = _0x45d176 || 0x0, -0x1 === _0x45d176 && (this.spectateIndex = 0x0, this.changeSpectatePlayer(_0x23d33c));
            }

            _0x4fbcb8.console.logInfo('spectate index change to :' + this.spectateIndex);

            const _0x1a7dc6 = this.teamInfo[this.spectateIndex].remote,
                  _0x128cff = _0x4fbcb8.players.atRemoteId(_0x1a7dc6);

            if (!_0x4fbcb8.players.exists(_0x128cff) || _0x128cff.health <= 0x0) return void this.changeSpectatePlayer();
            _0x4fbcb8.cameras.exists(this.spectateCam) && (this.spectateCam.destroy(), delete this.spectateCam), _0x4fbcb8.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), this.spectateCam = _0x4fbcb8.cameras.new('default', new _0x4fbcb8.Vector3(0x0, 0x0, 0x0), new _0x4fbcb8.Vector3(0x0, 0x0, 0x0), 0x28);

            const _0x8d570e = _0x4fbcb8.game.object.getObjectOffsetFromCoords(_0x128cff.position.x, _0x128cff.position.y, _0x128cff.position.z, _0x128cff.getHeading(), 0x0, -5.5, 1.5),
                  _0x2a887d = new _0x4fbcb8.Vector3(_0x128cff.position.x, _0x128cff.position.y, _0x128cff.position.z);

            this.spectateCam.setCoord(_0x8d570e.x, _0x8d570e.y, _0x8d570e.z), this.spectateCam.pointAtCoord(_0x2a887d.x, _0x2a887d.y, _0x2a887d.z), _0x4fbcb8.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0);
          }

          async ['toggleEnding'](_0x15de44) {
            if (_0x15de44) {
              for (_0x4fbcb8.events.call('utils.disablePlayerMove', true), _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.setInvincible(true), await _0x2a89d6.api.fadeOut(0x3e8), _0x4fbcb8.game.streaming.setFocusPosAndVel(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x0, 0x0, 0x0), _0x4fbcb8.game.streaming.newLoadSceneStartSphere(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x50, 0x0); !_0x4fbcb8.game.streaming.isNewLoadSceneLoaded();) await _0x4fbcb8.game.sleep(0x0);

              _0x4fbcb8.game.streaming.newLoadSceneStop(), _0x4fbcb8.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), this.garageCamera = _0x4fbcb8.cameras.new('default', this.endingCameraPos1, new _0x4fbcb8.Vector3(0x0, 0x0, 0x0), 0x28);

              const _0x334795 = new _0x4fbcb8.Vector3(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z);

              this.garageCamera.pointAtCoord(_0x334795.x, _0x334795.y, _0x32ae8f.Z.scenePositions2[0x0].z), _0x4fbcb8.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x4fbcb8.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8), _0x4fbcb8.game.streaming.clearFocus(), await this.createPedsForEnding();
            } else {
              if (await _0x2a89d6.api.fadeOut(0x3e8), this.spawnedPeds && 0x0 !== this.spawnedPeds.length) {
                for (const _0x2f4291 of this.spawnedPeds) _0x4fbcb8.peds.exists(_0x2f4291) && _0x2f4291.destroy();
              }

              _0x4fbcb8.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), _0x4fbcb8.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.setInvincible(false), await _0x2a89d6.api.fadeIn(0x3e8), this.inPause = false;
            }
          }

          async ['prepareAsstes']() {
            _0x2a89d6.api.setInvincible(true), _0x4fbcb8.events.call('utils.disablePlayerMove', true), _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': false
            }), await _0x2a89d6.api.fadeOut(0x3e8), await super.prepareAsstes();
          }

          async ['onStart']() {
            _0x4fbcb8.console.logInfo('start minigame'), await super.onStart(), await this.playIntro(0x2), _0x4fbcb8.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x2a89d6.api.toggleChat(false), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': true
            }), _0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), _0x5e1340.globalBrowser.emit('miniGames_setWeapons', null), _0x5e1340.globalBrowser.emit('miniGames_setHeaderProperty', {
              'key': 'teamFight',
              'value': {
                'mode': 'rounds',
                'team': {
                  'name': 'TEAM RED',
                  'wonRounds': 0x1,
                  'players': [{
                    'avatar': 'ava-hud-filler.png',
                    'dead': true,
                    'hp': 0x0,
                    'color': 'green'
                  }, {
                    'avatar': 'ava-hud-filler.png',
                    'dead': false,
                    'hp': 0x32,
                    'color': 'purple'
                  }, {
                    'avatar': 'ava-hud-filler.png',
                    'dead': false,
                    'hp': 0x1e,
                    'color': 'blue'
                  }, {
                    'avatar': 'ava-hud-filler.png',
                    'dead': false,
                    'hp': 0x1d,
                    'color': 'yellow'
                  }, {
                    'avatar': 'ava-hud-filler.png',
                    'dead': false,
                    'hp': 0x64,
                    'color': 'orange'
                  }]
                }
              }
            }), _0x5e1340.globalBrowser.emit('miniGames_setHeaderMode', 'ctf'), _0x5e1340.globalBrowser.emit('miniGames_setBuyMenu', {
              'pistols': [{
                'id': 'weapon_appistol',
                'label': 'ОРУЖИЕ 1fsfsa',
                'price': 0x1388
              }, {
                'id': 'weapon_assaultrifle_mk2',
                'label': 'Пистолетик',
                'price': 0xfa0
              }, {
                'id': 'weapon_marksmanpistol',
                'label': 'Пистолетик',
                'price': 0x1388
              }, {
                'id': 'weapon_heavysniper_mk2',
                'label': 'Пистолетик',
                'price': 0x1388
              }, {
                'id': 'weapon_marksmanpistol',
                'label': 'Пистолетик',
                'price': 0x1388
              }],
              'heavy': [],
              'smgs': [{}],
              'assaultRifles': [{
                'id': 'weapon_assaultrifle_mk2',
                'label': 'AK',
                'price': 0xa8c
              }, {
                'id': 'weapon_heavyrifle',
                'label': 'M16',
                'price': 0xc1c
              }, {
                'id': '0x05FC3C11',
                'label': 'AWP',
                'price': 0x1324
              }],
              'equipment': [{}]
            }), _0x4fbcb8.gui.cursor.show(false, false);
          }

          async ['onProcess']() {
            await super.onProcess(), _0x4fbcb8.console.logInfo('process'), _0x4fbcb8.gui.cursor.show(false, false), this.toggleLeaderboard(false), _0x4fbcb8.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x4fbcb8.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), _0x2a89d6.api.setInvincible(false), _0x4fbcb8.game.ui.displayHud(true);

            const _0x3eff82 = _0x32ae8f.Z.soundData.start[Math.floor(Math.random() * _0x32ae8f.Z.soundData.start.length)];

            _0x2a89d6.api.playSound('gungame/' + _0x3eff82);
          }

          async ['onReward']() {
            await super.onReward(), _0x4fbcb8.game.streaming.clearFocus(), this.state = 'reward', this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), await this.toggleEnding(true), await _0x4fbcb8.game.sleep(this.endingSceneDuration - 0x7d0), await this.toggleEnding(false);
          }

          async ['onFinish']() {
            await super.onFinish(), _0x4fbcb8.game.streaming.clearFocus(), _0x4fbcb8.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleChat(true), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': false
            });
          }

          async ['onPlayerDeath2'](_0x1c5cae) {
            _0x1c5cae === _0x4fbcb8.players.local && 'process' === this.state && (this.setSpectateMod({
              'value': true
            }), this.changeSpectatePlayer());
          }

          ['onPause']() {
            _0x4fbcb8.console.logInfo('pause'), this.inPause = true, _0x4fbcb8.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x2a89d6.api.toggleChat(true);
          }

          async ['onResume']() {
            _0x4fbcb8.console.logInfo('resume'), this.inPause = false, _0x4fbcb8.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x2a89d6.api.toggleChat(false);
          }

          ['onSpawn']() {
            'process' === this.state && (_0x2a89d6.api.toggleChat(true), _0x2a89d6.api.toggleHud(false), _0x4fbcb8.game.ui.displayHud(true), _0x2a89d6.api.toggleRadar(true)), this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), this.spectateMod && this.setSpectateMod({
              'value': false
            });
          }

          async ['playIntro'](_0x2f01ad) {
            this.mapId = _0x2f01ad;
            const _0x4af125 = _0x213b9c.r[_0x2f01ad];
            _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.fadeOut(0x0), _0x4fbcb8.events.call('utils.disablePlayerMove', true), _0x4fbcb8.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x4fbcb8.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2);

            const _0xecc026 = new _0x4fbcb8.Vector3(_0x4af125.cameraPosition.from.x, _0x4af125.cameraPosition.from.y, _0x4af125.cameraPosition.from.z),
                  _0x526c06 = new _0x4fbcb8.Vector3(_0x4af125.cameraPosition.to.x, _0x4af125.cameraPosition.to.y, _0x4af125.cameraPosition.to.z);

            this.introCamera1 = _0x4fbcb8.cameras.new('default', _0xecc026, new _0x4fbcb8.Vector3(0x0, 0x0, 0x0), 0x28), this.introCamera2 = _0x4fbcb8.cameras.new('default', _0x526c06, new _0x4fbcb8.Vector3(0x0, 0x0, 0x0), 0x28);

            const _0x248a57 = new _0x4fbcb8.Vector3(_0x4af125.cameraPosition.lookAt.x, _0x4af125.cameraPosition.lookAt.y, _0x4af125.cameraPosition.lookAt.z);

            this.introCamera1.pointAtCoord(_0x248a57.x, _0x248a57.y, _0x248a57.z), this.introCamera2.pointAtCoord(_0x248a57.x, _0x248a57.y, _0x248a57.z), _0x4fbcb8.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8), this.introCamera2.setActiveWithInterp(this.introCamera1.handle, 0x4e20, 0x0, 0x0), await _0x4fbcb8.game.sleep(0x1770), await _0x2a89d6.api.fadeOut(0x3e8), _0x4fbcb8.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x4fbcb8.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2), _0x4fbcb8.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8);
          }

          ['tickCheckForAnim']() {
            if (this.isPlantingBomb) {
              const _0x339e95 = _0x4fbcb8.players.local.hasAnimFinished('anim@heists@ornate_bank@thermal_charge', 'thermal_charge', 0x3);

              _0x4fbcb8.console.logInfo('anim time ' + _0x339e95);
            }
          }

          async ['onRender']() {
            if (super.onRender(), this.tickCheckForAnim(), this.inPause && (_0x4fbcb8.game.controls.disableAllControlActions(0x0), _0x4fbcb8.game.controls.disableAllControlActions(0x1)), this.spectateMod) {
              const _0x4bbbcd = this.teamInfo[this.spectateIndex].remote,
                    _0x1be89e = _0x4fbcb8.players.atRemoteId(_0x4bbbcd);

              if (!_0x4fbcb8.players.exists(_0x1be89e) || _0x1be89e.health <= 0x0) return;

              _0x4fbcb8.game.graphics.stopAllScreenEffects();

              const _0x181e82 = _0x4fbcb8.game.object.getObjectOffsetFromCoords(_0x1be89e.position.x, _0x1be89e.position.y, _0x1be89e.position.z, _0x1be89e.getHeading(), 0x0, -5.5, 1.5);

              this.spectateCam.setCoord(_0x181e82.x, _0x181e82.y, _0x181e82.z);

              const _0x19f771 = _0x1be89e.getForwardVector(),
                    _0x17deb0 = 0xf,
                    _0x5dd2a0 = new _0x4fbcb8.Vector3(_0x1be89e.position.x + _0x19f771.x * _0x17deb0, _0x1be89e.position.y + _0x19f771.y * _0x17deb0, _0x1be89e.position.z);

              this.spectateCam.pointAtCoord(_0x5dd2a0.x, _0x5dd2a0.y, _0x5dd2a0.z);
            }

            for (let _0x37b9f2 = 0x0; _0x37b9f2 < this.teamInfo.length; _0x37b9f2++) if (this.teamInfo[_0x37b9f2].radarBlip || this.teamInfo[_0x37b9f2].team !== this.team) {
              const _0x2611cd = this.teamInfo[_0x37b9f2].radarBlip,
                    _0x2116fa = _0x4fbcb8.players.atRemoteId(this.teamInfo[_0x37b9f2].remote);

              if (!_0x4fbcb8.players.exists(_0x2116fa) || !_0x2611cd) break;

              _0x2611cd.setPosition(_0x2116fa.position.x, _0x2116fa.position.y, _0x2116fa.position.z);
            } else {
              const _0x4db646 = _0x4fbcb8.players.atRemoteId(this.teamInfo[_0x37b9f2].remote);

              if (!_0x4fbcb8.players.exists(_0x4db646) || _0x4db646 === _0x169a7f) continue;
              this.teamInfo[_0x37b9f2].radarBlip = _0x4fbcb8.blips.new(0x1, _0x4db646.position, {
                'dimension': this.dimension,
                'scale': 0.8,
                'name': 'Напарник'
              });
            }

            this.isOutOfArea && _0x4fbcb8.game.graphics.drawText('Вернитесь в игровую зону', [0.5, 0.5], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            }), null !== this.money && 'process' == this.state && _0x4fbcb8.game.graphics.drawText('MONEY: ' + this.money, [0.85, 0.85], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            }), this.insidePlant && _0x4fbcb8.game.graphics.drawText('[E] Установка бомбы', [0.5, 0.7], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            });
          }

        }

        var _0xc9eb8e = _0x1126c7(0x10a2e),
            _0x3c1894 = _0x1126c7(0x161cd);

        const _0x39a620 = _0x3c1894.players.local,
              _0x122dd9 = (_0x247122, _0x25b8bf, _0x32cf64) => (0x1 - _0x32cf64) * _0x247122 + _0x32cf64 * _0x25b8bf;

        class _0x236ddf {
          constructor(_0x2dcf7b, _0x569e35, _0x8464bb = 0.5) {
            this.value = 0x1, this.color = [0xff, 0x0, 0x0, 0x82], this.label = _0x2dcf7b, this.screenPos = _0x569e35, this.isPulsing = false, this.pulsingAlphaVal = 0x0, this.pulsingDirectionDown = false, this.waitingForToggle = false, this.waitingValue = true, this.speed = 0.5, this.scale = _0x8464bb;
          }

          ['togglePulsing'](_0x4e34e7 = true) {
            this.waitingForToggle = true, this.waitingValue = _0x4e34e7;
          }

          ['draw']() {
            if (_0x3c1894.game.graphics.hasStreamedTextureDictLoaded('trafficcam') || _0x3c1894.game.graphics.requestStreamedTextureDict('trafficcam', true), _0x3c1894.game.graphics.hasStreamedTextureDictLoaded('helicopterhud') || _0x3c1894.game.graphics.requestStreamedTextureDict('helicopterhud', true), _0x3c1894.game.graphics.hasStreamedTextureDictLoaded('trafficcam')) {
              let _0x3bb8bf = 0xff;
              this.waitingForToggle && this.waitingValue && !this.isPulsing && (this.isPulsing = true, this.pulsingAlphaVal = 0x0, this.pulsingDirectionDown = false), this.isPulsing ? (_0x3bb8bf = 0xff * this.pulsingAlphaVal, this.pulsingAlphaVal > 0x1 && (this.pulsingAlphaVal = 0x1, this.pulsingDirectionDown = true), this.pulsingAlphaVal < 0x0 && (this.pulsingDirectionDown = false, this.pulsingAlphaVal = 0x0, this.waitingForToggle && false === this.waitingValue && (this.isPulsing = false)), this.pulsingDirectionDown ? this.pulsingAlphaVal -= 0.9 * _0x3c1894.game.gameplay.getFrameTime() : this.pulsingAlphaVal += 0.9 * _0x3c1894.game.gameplay.getFrameTime()) : _0x3bb8bf = 0x0, _0x3c1894.game.graphics.drawRect(this.screenPos.x, this.screenPos.y, 0.03796875 * this.scale, 0.0675 * this.scale, 0x26, 0x26, 0x21, 0x64), _0x3c1894.game.graphics.drawSprite('helicopterhud', 'hud_outline', this.screenPos.x, this.screenPos.y, 0.045 * this.scale, 0.08 * this.scale, 0x0, 0xff, 0xff, 0xff, Math.round(_0x3bb8bf)), _0x3c1894.game.graphics.drawSprite('trafficcam', 'cursor', this.screenPos.x, this.screenPos.y, 0.045 * this.scale, 0.08 * this.scale, 0x0, 0x17, 0x17, 0x15, 0xaa);
              let _0x5a9211 = this.color[0x3];
              _0x3c1894.game.graphics.drawRect(this.screenPos.x, this.screenPos.y, 0.03796875 * this.value * this.scale, 0.0675 * this.value * this.scale, this.color[0x0], this.color[0x1], this.color[0x2], _0x5a9211), _0x3c1894.game.graphics.drawText(this.label, [this.screenPos.x, this.screenPos.y - 0.044 * this.scale], {
                'scale': [1.2 * this.scale, 1.2 * this.scale],
                'color': [0xff, 0xff, 0xff, 0xe6],
                'centre': true
              });
            }
          }

        }

        class _0x4fec2d {
          constructor(_0x576949, _0x417854, _0x1cdf87, _0xee71cd) {
            this.flagStick = _0x3c1894.objects.new(_0x3c1894.game.joaat('prop_flagpole_1a'), _0x576949, {
              'dimension': _0x417854
            }), this.dimension = _0x417854, this.position = _0x576949, this.flagStartPosition = new _0x3c1894.Vector3(_0x576949.x, _0x576949.y, _0x576949.z + 0.5), this.maxHeight = _0x576949.z + 6.5, this.flagNameA = 'apa_prop_flag_china', this.flagVisibleA = false, this.flagNameB = 'apa_prop_flag_us_yt', this.flagVisibleB = false, this.isATaget = true, this.teamAColor = [0xff, 0x0, 0x0, 0xa], this.teamBColor = [0x0, 0x0, 0xff, 0xa], this.neutralColor = [0xff, 0xff, 0xff, 0xa], this.marker = _0x3c1894.markers.new(0x1, this.position, 0xc, {
              'dimension': this.dimension,
              'color': this.neutralColor
            }), this.flagAProp = _0x3c1894.objects.new(_0x3c1894.game.joaat(this.flagNameA), this.flagStartPosition, {
              'dimension': this.dimension
            }), this.flagAProp.setVisible(false, false), this.targetAlpha = 0x0, this.alpha = 0x0, this.currentValue = 0x0, this.movementSpeed = null, this.valueChanged = false, this.colshape = _0x3c1894.colshapes.newSphere(this.position.x, this.position.y, this.position.z, 0xa, this.dimension), this.progressBar = new _0x236ddf(_0x1cdf87, [0x0, 0x0]), this.progressBar.value = 0x0, this.progressBar.togglePulsing(false), this.owner = 0x0, this.blipId = _0xee71cd, this.blip = _0x3c1894.blips.new(this.blipId, this.position, {
              'alpha': 0xff,
              'color': 0x3e,
              'dimension': this.dimension,
              'shortRange': false
            }), this.changeFlag(false, true);
          }

          ['changeFlag'](_0x57908b = true, _0xfefe46 = false) {
            const _0x301c34 = this.flagAProp.getRotation(0x0);

            _0x57908b ? (_0x3c1894.objects.exists(this.flagAProp) && this.flagAProp.destroy(), this.flagAProp = _0x3c1894.objects.new(_0x3c1894.game.joaat(this.flagNameA), this.flagStartPosition, {
              'rotation': _0x301c34,
              'dimension': this.dimension
            }), this.progressBar.color = [0xa1, 0x27, 0x27, 0xff], this.owner = 0x1, this.flagAProp.setVisible(true, false), this.blip.destroy(), this.blip = _0x3c1894.blips.new(this.blipId, this.position, {
              'alpha': 0xff,
              'color': 0x6,
              'dimension': this.dimension,
              'shortRange': false
            })) : (_0x3c1894.objects.exists(this.flagAProp) && this.flagAProp.destroy(), this.flagAProp = _0x3c1894.objects.new(_0x3c1894.game.joaat(this.flagNameB), this.flagStartPosition, {
              'rotation': _0x301c34,
              'dimension': this.dimension
            }), this.progressBar.color = [0x1f, 0x1f, 0xa1, 0xff], this.owner = 0x2, this.flagAProp.setVisible(true, false), this.blip.destroy(), this.blip = _0x3c1894.blips.new(this.blipId, this.position, {
              'alpha': 0xff,
              'color': 0x1d,
              'dimension': this.dimension,
              'shortRange': false
            })), _0xfefe46 && (_0x3c1894.objects.exists(this.flagAProp) && this.flagAProp.destroy(), this.owner = 0x0, this.blip.destroy(), this.blip = _0x3c1894.blips.new(this.blipId, this.position, {
              'alpha': 0xff,
              'color': 0x3e,
              'dimension': this.dimension,
              'shortRange': false
            }));
          }

          ['setValue'](_0x5cdf1a, _0x383fb1 = true) {
            this.currentValue = this.alpha, this.alpha = 0x0, this.targetAlpha = _0x5cdf1a, _0x5cdf1a > 0x1 && (_0x5cdf1a = 0x1), _0x5cdf1a < 0x0 && (_0x5cdf1a = 0x0), _0x383fb1 ? (this.flagVisibleA || (this.flagVisibleA = true, this.flagAProp.setVisible(true, false)), this.isATaget = true) : (this.flagVisibleB || (this.flagVisibleB = true, this.flagAProp.setVisible(false, false)), this.isATaget = false);

            const _0x470837 = _0x122dd9(this.flagStartPosition.z, this.maxHeight, this.targetAlpha);

            _0x383fb1 && (this.dist = _0x470837, this.startZ = this.lastAHeight ?? this.flagAProp.position.z, this.progressBar.togglePulsing(true)), this.valueChanged = true;
          }

          ['render']() {
            const _0x4182ff = _0x2a89d6.api.vdist(_0x3c1894.players.local.position.x, _0x3c1894.players.local.position.y, _0x3c1894.players.local.position.z, this.flagStartPosition.x, this.flagStartPosition.y, this.flagStartPosition.z);

            let _0x39ccd5, _0x2384ea;

            _0x2384ea = _0x4182ff > 0x32 ? 0.4 : _0x122dd9(0.8, 0.4, _0x4182ff / 0x32), _0x39ccd5 = _0x4182ff > 0x1e ? this.flagStartPosition.z + 0x3 : _0x122dd9(this.maxHeight, this.flagStartPosition.z + 0x3, _0x4182ff / 0x1e);

            const _0xf18f88 = _0x3c1894.game.graphics.getScreenCoordFromWorldCoord(this.flagStartPosition.x, this.flagStartPosition.y, _0x39ccd5);

            if (this.progressBar.screenPos = {
              'x': _0xf18f88.screenX,
              'y': _0xf18f88.screenY
            }, this.progressBar.scale = _0x2384ea, this.valueChanged) {
              this.alpha += _0x3c1894.game.gameplay.getFrameTime();

              const _0x25f319 = _0x122dd9(this.startZ, this.dist, this.alpha);

              this.progressBar.value < this.targetAlpha && this.dist > this.startZ ? this.progressBar.value += 0.28 * _0x3c1894.game.gameplay.getFrameTime() : this.progressBar.value > this.targetAlpha && this.dist < this.startZ ? this.progressBar.value -= 0.28 * _0x3c1894.game.gameplay.getFrameTime() : this.progressBar.value = this.targetAlpha, this.isATaget && (this.lastAHeight = _0x25f319, this.flagAProp.setCoords(this.flagAProp.position.x, this.flagAProp.position.y, _0x25f319, true, true, true, false)), this.alpha >= 0x1 && (this.valueChanged = false, this.progressBar.togglePulsing(false));
            }

            this.progressBar.draw();
          }

        }

        var _0x4b7b0d = _0x1126c7(0x161cd);

        const _0x3a5927 = _0x4b7b0d.players.local,
              _0x10258a = (_0x110269, _0x54406a) => {
          const _0x329723 = (_0x110269.x * _0x54406a.x + _0x110269.y + _0x54406a.y + _0x110269.z + _0x54406a.z) / (Math.sqrt(_0x110269.x * _0x110269.x + _0x110269.y * _0x110269.y + _0x110269.z * _0x110269.z) * Math.sqrt(_0x54406a.x * _0x54406a.x + _0x54406a.y * _0x54406a.y + _0x54406a.z * _0x54406a.z));

          return _0x2a89d6.api.radToDeg(Math.acos(_0x329723));
        },
              _0x372325 = (_0x4d271e, _0x3a6d7e, _0xb68375) => 0x5 * _0x4d271e + 0x5 * _0xb68375 + 0x1e * _0x3a6d7e;

        var _0x3765a9 = _0x1126c7(0x161cd);

        class _0x124e92 {
          constructor(_0x29a8b2) {
            this.activeBuyMenu = false, this.activeItems = false, this.activeMoney = false, this.money = 0x0, this.buyMenuConfig = _0x29a8b2, this.activeItemsData = null, this.setupBuyMenu(_0x29a8b2), this.toggleBuyMenu(false), this.setMoney(0x0), this.toggleMoneyWidget(false), this.toggleActiveItems(false), this.onTryBuyWeapon = null, _0x3765a9.events.add('minigames.client.tryBuyWeapon', _0x59f478 => this.onTryBuyWeapon(_0x59f478));
          }

          ['setupBuyMenu'](_0x2d95f8 = {
            'pistols': [{
              'id': 'weapon_appistol',
              'label': 'ОРУЖИЕ 1fsfsa',
              'price': 0x1388
            }, {
              'id': 'weapon_assaultrifle_mk2',
              'label': 'Пистолетик',
              'price': 0xfa0
            }, {
              'id': 'weapon_marksmanpistol',
              'label': 'Пистолетик',
              'price': 0x1388
            }, {
              'id': 'weapon_heavysniper_mk2',
              'label': 'Пистолетик',
              'price': 0x1388
            }, {
              'id': 'weapon_marksmanpistol',
              'label': 'Пистолетик',
              'price': 0x1388
            }],
            'heavy': [],
            'smgs': [{}],
            'assaultRifles': [{
              'id': 'weapon_assaultrifle_mk2',
              'label': 'AK',
              'price': 0xa8c
            }, {
              'id': 'weapon_heavyrifle',
              'label': 'M16',
              'price': 0xc1c
            }, {
              'id': '0x05FC3C11',
              'label': 'AWP',
              'price': 0x1324
            }],
            'equipment': [{}]
          }) {
            _0x5e1340.globalBrowser.emit('miniGames_setBuyMenu', _0x2d95f8);
          }

          ['toggleBuyMenu'](_0x22c9ac) {
            _0x22c9ac ? (this.activeBuyMenu = true, _0x5e1340.globalBrowser.emit('miniGames_setBuyMenuDisplay', true), _0x3765a9.gui.cursor.show(true, true)) : (this.activeBuyMenu = false, _0x5e1340.globalBrowser.emit('miniGames_setBuyMenuDisplay', false), _0x3765a9.gui.cursor.show(false, false));
          }

          ['toggleActiveItems'](_0x3d6f25) {
            _0x3d6f25 ? (this.activeItems = true, _0x5e1340.globalBrowser.emit('miniGames_setWeapons', {
              'selected': 'weapon_assaultrifle_mk2',
              'ammo': 0x32,
              'maxAmmo': 0x78,
              'skulls': 0x5,
              'list': [{
                'id': 'weapon_assaultrifle_mk2',
                'title': 'AK-47'
              }, {
                'id': 'weapon_marksmanpistol',
                'title': 'Pistol'
              }]
            })) : (this.activeItems = false, _0x5e1340.globalBrowser.emit('miniGames_setWeapons', null));
          }

          ['setActiveItem']() {}

          ['toggleMoneyWidget'](_0xabb27) {
            _0xabb27 ? (this.activeMoney = true, _0x5e1340.globalBrowser.emit('miniGames_setMoneyElementShown', true)) : (this.activeMoney = false, _0x5e1340.globalBrowser.emit('miniGames_setMoneyElementShown', false));
          }

          ['setMoney'](_0xffbf91) {
            this.money = _0xffbf91;
          }

        }

        class _0x38a245 {
          constructor(_0x1db7b9) {
            this.active = false, this.timerInPause = false, this.timerDuration = _0x1db7b9.timerDuration, this.setup(_0x1db7b9);
          }

          ['setTimerTime'](_0x186e4b) {
            _0x5e1340.globalBrowser.emit('miniGames_setTeamHeaderTimer', _0x186e4b);
          }

          ['pauseGameTimer'](_0xe1ac75) {
            _0xe1ac75 ? (_0x5e1340.globalBrowser.emit('miniGames_setTeamHudTimerState', true), this.timerInPause = true) : (_0x5e1340.globalBrowser.emit('miniGames_setTeamHudTimerState', false), this.timerInPause = false);
          }

          ['updateScore'](_0x37079e, _0x37c611 = false) {}

          ['setup'](_0x1f1bf6 = {
            'firstTeam': {
              'teamName': 'Team one',
              'currentScore': 0x0,
              'maxScore': 0x3
            },
            'secondTeam': {
              'teamName': 'Team two',
              'currentScore': 0x0,
              'maxScore': 0x3
            }
          }) {
            _0x5e1340.globalBrowser.emit('miniGames_setHeaderProperty', {
              'key': 'duel',
              'value': {
                'team': {
                  'name': _0x1f1bf6.firstTeam.teamName,
                  'points': {
                    'current': _0x1f1bf6.firstTeam.currentScore,
                    'max': _0x1f1bf6.firstTeam.maxScore
                  }
                },
                'enemy': {
                  'name': _0x1f1bf6.secondTeam.teamName,
                  'points': {
                    'current': _0x1f1bf6.secondTeam.currentScore,
                    'max': _0x1f1bf6.secondTeam.maxScore
                  }
                }
              }
            });
          }

          ['toggle'](_0x350394) {
            _0x1126c7.g.interfaces.miniGames && (_0x350394 ? (this.active = true, _0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), _0x5e1340.globalBrowser.emit('miniGames_setHeaderMode', 'duel')) : (this.active = false, _0x5e1340.globalBrowser.emit('miniGames_setHeaderMode', null)));
          }

        }

        var _0x55467c = _0x1126c7(0x161cd);

        class _0x15588e {
          constructor() {
            this.zoneColhape = null, this.zoneMarker = null, this.zoneBlip = null, this.nextBlip = null, this.nextMarker = null, this.nextColshape = null, this.outOfZoneDamage = 0x19, this.zoneShrinkSpeed = 0.1;
          }

          ['setup'](_0x5200a0 = {
            'zoneStartPosition': {},
            'zoneStartRadius': 0x64,
            'zoneShrinkSpeed': 0.1,
            'dimension': 0x0
          }) {
            this.zoneMarker = _0x55467c.markers.new(0x1, new _0x55467c.Vector3(_0x5200a0.zoneStartPosition.x, _0x5200a0.zoneStartPosition.y, _0x5200a0.zoneStartPosition.z - 0x69), 0x2 * _0x5200a0.zoneStartRadius, {
              'color': [0xff, 0x0, 0x0, 0xc8],
              'dimension': _0x5200a0.dimension
            }), this.zoneBlip = _0x55467c.blips.new(0x9, _0x5200a0.zoneStartPosition, {
              'alpha': 0x64,
              'radius': _0x5200a0.zoneStartRadius,
              'dimension': _0x5200a0.dimension,
              'color': 0x2
            });
          }

          ['setNextZone'](_0x126a8b = {
            'center': {},
            'radius': 0x5,
            'delay': 0xea60
          }) {}

          ['render']() {}

        }

        var _0x38f3d3 = _0x1126c7(0x161cd);

        const _0x48c2c8 = _0x38f3d3.players.local;

        var _0x1161bd = _0x1126c7(0x161cd);

        const _0x3146d8 = new class {
          constructor() {
            this.minigames = {}, this.currentMinigameController = null, this.lobbies = [], this.lobbyInfo = undefined, _0x161703.events.add('entityStreamIn', _0x8b68f9 => this.handleStreamIn(_0x8b68f9)), _0x161703.events.add('entityStreamOut', _0x4fcd5d => this.handleStreamOut(_0x4fcd5d)), _0x161703.events.add('time.everySec', () => this.currentMinigameController?.['onPerSecond']());
          }

          ['handleStreamIn'](_0x1d7b06) {
            this.currentMinigameController?.['entityStreamIn'](_0x1d7b06), _0x1d7b06.minigamesStreamIn && 'function' == typeof _0x1d7b06.minigamesStreamIn && _0x1d7b06.minigamesStreamIn();
          }

          ['handleStreamOut'](_0x2e64c6) {}

          async ['handleMinigameEvent'](_0x1571a8) {
            if (!_0x1571a8) return;

            switch (_0x1571a8.name) {
              case 'setMinigame':
                this.setMinigame(_0x1571a8.target.type, _0x1571a8.target.preset, _0x1571a8.target.dimension);
                break;

              case 'initMinigame':
                await this.currentMinigameController?.['init']();
                break;

              case 'prepare':
                await this.currentMinigameController?.['prepareAsstes']();
                break;

              case 'updateTeamInfo':
                await this.currentMinigameController?.['handlePlayersInfoAction'](_0x1571a8.target);
                break;

              case 'start':
                await this.currentMinigameController?.['onStart']();
                break;

              case 'process':
                await this.currentMinigameController?.['onProcess']();
                break;

              case 'reward':
                await this.currentMinigameController?.['onReward']();
                break;

              case 'finish':
                await this.currentMinigameController?.['onFinish']();
                break;

              case 'pause':
                await this.currentMinigameController?.['onPause']();
                break;

              case 'resume':
                await this.currentMinigameController?.['onResume']();
                break;

              case 'updateStats':
                await this.currentMinigameController?.['updateGameStatistic'](_0x1571a8.target);
                break;

              case 'playerJoinSession':
                this.currentMinigameController?.['playerJoinSession'](_0x1571a8.target);
                break;

              case 'playerLeaveSession':
                this.currentMinigameController?.['playerLeaveSession'](_0x1571a8.target);
                break;

              case 'playerReconnect':
                break;

              case 'keys.e':
                await this.currentMinigameController?.['keyDownE']();
                break;

              case 'keys.f':
                await this.currentMinigameController?.['keyDownF']();
                break;

              case 'custom':
                await this.currentMinigameController?.['handleCustomEvent'](_0x1571a8.target);
                break;

              default:
                _0x161703.console.logError('Minigame event name error: ' + _0x1571a8.name);

            }
          }

          ['setMinigame'](_0xcb8251, _0x306592, _0x51a8f0) {
            const _0x37d2e6 = this.getMinigameData(_0xcb8251),
                  _0x406a50 = _0x37d2e6.getController();

            this.currentMinigameController = new _0x406a50(_0x37d2e6.getPreset(_0x306592), _0x51a8f0);
          }

          ['resetMinigame']() {
            this.currentMinigameController = null;
          }

          ['addMinigame'](_0x1e8d06, _0x4d6327) {
            this.minigames[_0x1e8d06] = _0x4d6327;
          }

          ['getMinigameData'](_0x455782, _0x5e6dca = null) {
            return this.minigames[_0x455782];
          }

        }(),
              _0xf19fbe = new _0x25b4fd('Deathmatch', _0x2a0a20);

        _0xf19fbe.addPreset('Sawmill', _0x194594.R), _0x3146d8.addMinigame('Deathmatch', _0xf19fbe);

        const _0x41bef6 = new _0x25b4fd('Gungame', class extends _0x2a0a20 {
          constructor(_0x1a708a, _0x58223c) {
            super(_0x1a708a, _0x58223c), this.dimension = _0x58223c, this.gameArea = _0x3725c2.colshapes.newCircle(this.centerPosition.x, this.centerPosition.y, this.centerRadius, this.dimension);
          }

          async ['handlePlayersInfoAction'](_0x25c60f) {
            if (_0x25c60f) {
              switch (_0x25c60f.action) {
                case 'add':
                  this.teamInfo.push(_0x25c60f.player);
                  break;

                case 'remove':
                  this.teamInfo = this.teamInfo.filter(_0x670553 => _0x670553.staticId !== _0x25c60f.staticId);
                  break;

                case 'update':
                  for (const _0x201f14 of this.teamInfo) if (_0x201f14.staticId === _0x25c60f.staticId) {
                    _0x201f14.death += _0x25c60f.death, _0x201f14.kills += _0x25c60f.kills, _0x201f14.points += _0x25c60f.points, _0x201f14.staticId == _0x2a89d6.api.getPlayerStatic() && (this.timeBars.playerLevel.value = _0x201f14.points);
                    break;
                  }

                  this.updateLeaderboard();
                  break;

                case 'updateNextWeapon':
                  undefined !== this.timeBars.nextWeap && (this.timeBars.nextWeap.value = _0x25c60f.weapon);
                  break;

                default:
                  _0x3725c2.console.logError('PlayerInfo action doesnt exist: ' + _0x25c60f.action);

              }

              this.setupMatchLeaderboard();
            }
          }

          ['updateLeaderboard']() {
            const _0x208dd1 = this.teamInfo.sort((_0x380ad6, _0x4b4281) => _0x4b4281.points - _0x380ad6.points);

            this.timeBars.thirdPlace.title = '#3: ' + (_0x208dd1[0x2]?.['kills'] > 0x0 ? _0x208dd1[0x2]?.['name'] : ''), this.timeBars.thirdPlace.value = '' + (_0x208dd1[0x2]?.['kills'] > 0x0 ? _0x208dd1[0x2]?.['kills'] : '0'), this.timeBars.secondPlace.title = '#2: ' + (_0x208dd1[0x1]?.['kills'] > 0x0 ? _0x208dd1[0x1]?.['name'] : ''), this.timeBars.secondPlace.value = '' + (_0x208dd1[0x1]?.['kills'] > 0x0 ? _0x208dd1[0x1]?.['kills'] : '0'), this.timeBars.firstPlace.title = '#1: ' + (_0x208dd1[0x0]?.['kills'] > 0x0 ? _0x208dd1[0x0]?.['name'] : ''), this.timeBars.firstPlace.value = '' + (_0x208dd1[0x0]?.['kills'] > 0x0 ? _0x208dd1[0x0]?.['kills'] : '0');
          }

          async ['onProcess']() {
            this.state = 'process', _0x3725c2.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x3725c2.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), _0x2a89d6.api.setInvincible(false), this.timeBars.timeLeft = new _0x158902.TimerBar('fun.minigames.deathmatch.timeLeft', null, {
              'value': '0 сек'
            }), this.timeBars.timeLeft.visible = false, this.timeBars.playerLevel = new _0x158902.TimerBar('fun.minigames.deathmatch.points', null, {
              'value': '0'
            }), this.timeBars.thirdPlace = new _0x158902.TimerBar('#1 ', 'playerScore', {
              'value': '0',
              'pbarBgColor': [0xb4, 0x82, 0x61, 0xff],
              'textColor': [0xff, 0xff, 0xff, 0xff]
            }), this.timeBars.secondPlace = new _0x158902.TimerBar('#2 ', 'playerScore', {
              'value': '0',
              'pbarBgColor': [0x96, 0x99, 0xa1, 0xff],
              'textColor': [0xff, 0xff, 0xff, 0xff]
            }), this.timeBars.firstPlace = new _0x158902.TimerBar('#3 ', 'playerScore', {
              'value': '0',
              'pbarBgColor': [0xd6, 0xb5, 0x63, 0xff],
              'textColor': [0xff, 0xff, 0xff, 0xff]
            }), this.timeBars.nextWeap = new _0x158902.TimerBar('До след. оружия', null, {
              'value': '1'
            });

            const _0xc54e06 = _0x32ae8f.Z.soundData.start[Math.floor(Math.random() * _0x32ae8f.Z.soundData.start.length)];

            _0x2a89d6.api.playSound('gungame/' + _0xc54e06);
          }

          async ['onFinish']() {
            this.state = 'finish', _0x3725c2.events.call('minigames.client.finishMinigameSession'), _0x3725c2.game.streaming.clearFocus(), _0x3725c2.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleChat(true), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), this.timeBars.timeLeft.visible = false, this.timeBars.playerLevel.visible = false, this.timeBars.thirdPlace.visible = false, this.timeBars.secondPlace.visible = false, this.timeBars.firstPlace.visible = false, this.timeBars.nextWeap.visible = false, _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': false
            });
          }

          async ['onRender']() {
            this.inPause && (_0x3725c2.game.controls.disableAllControlActions(0x0), _0x3725c2.game.controls.disableAllControlActions(0x1)), this.respawnProtection && this.alive && (_0x3725c2.game.controls.isControlJustPressed(0x0, 0x0) || _0x3725c2.game.controls.isControlJustPressed(0x0, 0x0) || _0x3725c2.game.controls.isControlJustPressed(0x0, 0x1) || _0x3725c2.game.controls.isControlJustPressed(0x0, 0x2) || _0x3725c2.game.controls.isControlJustPressed(0x0, 0x1e) || _0x3725c2.game.controls.isControlJustPressed(0x0, 0x1f) || _0x3725c2.game.controls.isControlJustPressed(0x0, 0x19) || _0x3725c2.game.controls.isControlJustPressed(0x0, 0x1a) || _0x3725c2.game.controls.isControlJustReleased(0x0, 0x0) || _0x3725c2.game.controls.isControlJustReleased(0x0, 0x1) || _0x3725c2.game.controls.isControlJustReleased(0x0, 0x2) || _0x3725c2.game.controls.isControlJustReleased(0x0, 0x1e) || _0x3725c2.game.controls.isControlJustReleased(0x0, 0x1f) || _0x3725c2.game.controls.isControlJustReleased(0x0, 0x19) || _0x3725c2.game.controls.isControlJustReleased(0x0, 0x1a)) && (this.respawnProtection = false, _0x2a89d6.api.setInvincible(false), _0x3725c2.players.local.setAlpha(0xff), this.toggleRespawnInvincible(false), _0x3725c2.events.callRemote('238157310')), this.isOutOfArea && _0x3725c2.game.graphics.drawText('Вернитесь в игровую зону', [0.5, 0.5], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            }), 'reward' === this.state && (_0x3725c2.game.graphics.drawSpotLight(0x61a, 0xfd, -0x30, -0.911, -0.412, -0.3, 0x0, 0xc3, 0xf7, 0x8, 0x28, 0x8, 0x19, 0x3c), _0x3725c2.game.graphics.drawSpotLight(1556.359, 247.069, -0x30, 0.406, 0.913, -0.3, 0xed, 0xf, 0x8d, 0x8, 0x28, 0x8, 0x19, 0x3c));
          }

        });

        _0x41bef6.addPreset('Sawmill', _0x1ab584.p), _0x3146d8.addMinigame('Gungame', _0x41bef6);

        const _0x4102f9 = new _0x25b4fd('TeamDeathmatch', _0x133d91);

        _0x4102f9.addPreset('Sawmill', _0x5116ec.NO), _0x3146d8.addMinigame('TeamDeathmatch', _0x4102f9);

        const _0x1c186d = new _0x25b4fd('RoundTeamDeathmatch', _0x133d91);

        _0x1c186d.addPreset('Sawmill', _0x5116ec.AU), _0x3146d8.addMinigame('RoundTeamDeathmatch', _0x1c186d);

        const _0x19183f = new _0x25b4fd('PointTeamDeathmatch', class extends _0x1ec6d4 {
          constructor(_0xadb061, _0x2a7b65) {
            const a0_0x12f9b2 = {
              _0x41076d: 0x91d,
              _0x514ecc: 0x90f
            };
            super(_0xadb061, _0x2a7b65), this.dimension = _0x2a7b65, this.teamInfo = [], this.leaderboard = [], this.inPause = false, this.playersInSession = new Map(), this.pauseScreenEffect = this.config.pauseScreenEffect, this.buyStateDuration = this.config.buyStateDurtation ?? 0x1388, this.mapId = 0x0, this.introCamera1 = undefined, this.introCamera2 = undefined, this.garageCamera = null, this.spectateMod = false, this.spectateCam = null, this.spectateIndex = 0x0, this.endingCameraPos1 = new _0x3c1894.Vector3(1563.1597900390625, 250.41319274902344, -0x30), this.endingCameralPos = new _0x3c1894.Vector3(-0.99, -0.01, 0x0), this.isOutOfArea = false, this.outOfGameAreaTimeout = null, this.outOfArenaTimeoutDuration = this.config.outOfArenaTimeoutDuration, this.gameArea = _0x3c1894.colshapes.newCircle(this.centerPosition.x, this.centerPosition.y, this.centerRadius, 0x66), this.endingSceneDuration = this.config.endingSceneDuration, this.team = null, this.money = 0x0, _0x3c1894.keys.bind(_0x41cec6.t.ARROW_LEFT, false, () => {
              this.changeSpectatePlayer('left');
            }), _0x3c1894.keys.bind(_0x41cec6.t.ARROW_RIGHT, false, () => {
              this.changeSpectatePlayer('right');
            }), this.points = {}, this.areaBlip = _0x3c1894.blips.new(0x9, new _0x3c1894.Vector3(this.centerPosition.x, this.centerPosition.y, this.centerPosition.z), {
              'radius': this.centerRadius,
              'alpha': 0x64,
              'dimension': this.dimension,
              'color': 0x5
            }), _0x3c1894.keys.bind(_0x41cec6.t.B, true, () => this.toggleShop(true)), _0x3c1894.keys.bind(_0x41cec6.t.B, false, () => this.toggleShop(false)), this.leaderboard = new _0x30d472({
              'teamNaming': this.config.teamNaming,
              'teamInfo': this.teamInfo
            }), _0x3c1894.keys.bind(0x9, true, () => this.leaderboard.toggle(true)), _0x3c1894.keys.bind(0x9, false, () => this.leaderboard.toggle(false));
          }

          ['toggleShop'](_0x360b64) {
            _0x360b64 ? (_0x5e1340.globalBrowser.emit('miniGames_setBuyMenuDisplay', true), _0x3c1894.gui.cursor.show(true, true)) : (_0x5e1340.globalBrowser.emit('miniGames_setBuyMenuDisplay', false), _0x3c1894.gui.cursor.show(false, false));
          }

          ['initPoints']() {
            let _0x5e410f = 0x0;

            for (const _0x37595b of _0x5116ec.hT.flagPoints) this.points[_0x5e410f] = new _0x4fec2d(new _0x3c1894.Vector3(_0x37595b.x, _0x37595b.y, _0x37595b.z), this.dimension, _0x37595b.label, _0x37595b.blipId), this.points[_0x5e410f].setValue(0x0), this.points[_0x5e410f].changeFlag(false, true), _0x5e410f += 0x1;
          }

          ['updatePoint'](_0xcccdaf) {
            if (!_0xcccdaf) return;
            const _0x158b4c = this.points[_0xcccdaf.point.pointIndex];

            if (_0xcccdaf.point.setFlag && _0xcccdaf.point.setFlag.value !== _0x158b4c.owner && (0x0 === _0xcccdaf.point.setFlag.value && _0x158b4c.changeFlag(false, true), 0x1 === _0xcccdaf.point.setFlag.value && _0x158b4c.changeFlag(true, false), 0x2 === _0xcccdaf.point.setFlag.value && _0x158b4c.changeFlag(false, false)), _0xcccdaf.point.setPulsing && _0x158b4c.progressBar.isPulsing !== _0xcccdaf.point.setPulsing.value && _0x158b4c.progressBar.togglePulsing(_0xcccdaf.point.setPulsing.value), _0xcccdaf.point.changeValue) {
              _0x158b4c.setValue(_0xcccdaf.point.changeValue.value);

              const _0x772fb7 = {
                'a': {
                  'progress': 0x64 * this.points[0x0].targetAlpha,
                  'team': 0x1 === this.points[0x0].owner ? 'team' : 'enemy'
                },
                'b': {
                  'progress': 0x64 * this.points[0x1].targetAlpha,
                  'team': 0x1 === this.points[0x1].owner ? 'team' : 'enemy'
                },
                'c': {
                  'progress': 0x64 * this.points[0x2].targetAlpha,
                  'team': 0x1 === this.points[0x2].owner ? 'team' : 'enemy'
                },
                'd': {
                  'progress': 0x64 * this.points[0x3].targetAlpha,
                  'team': 0x1 === this.points[0x3].owner ? 'team' : 'enemy'
                },
                'e': {
                  'progress': 0x64 * this.points[0x4].targetAlpha,
                  'team': 0x1 === this.points[0x4].owner ? 'team' : 'enemy'
                }
              };

              _0x5e1340.globalBrowser.emit('miniGames_setHudHeaderValue', {
                'headerType': 'ctf',
                'key': 'points',
                'value': _0x772fb7
              });
            }
          }

          ['setCaptureStatus']({
            pointIndex: _0x4dcbbd
          }) {
            if (null === _0x4dcbbd) return void _0x5e1340.globalBrowser.emit('miniGames_setHudHeaderValue', {
              'headerType': 'ctf',
              'key': 'progressPoint',
              'value': null
            });

            let _0x1f21e4;

            switch (_0x4dcbbd) {
              case 0x0:
              default:
                _0x1f21e4 = 'a';
                break;

              case 0x1:
                _0x1f21e4 = 'b';
                break;

              case 0x2:
                _0x1f21e4 = 'c';
                break;

              case 0x3:
                _0x1f21e4 = 'd';
                break;

              case 0x4:
                _0x1f21e4 = 'e';
            }

            _0x5e1340.globalBrowser.emit('miniGames_setHudHeaderValue', {
              'headerType': 'ctf',
              'key': 'progressPoint',
              'value': _0x1f21e4
            });
          }

          ['updateTeamScore'](_0x32620d) {
            _0x32620d && _0x5e1340.globalBrowser.emit('miniGames_setHudHeaderValue', {
              'headerType': 'ctf',
              'key': 'teams',
              'value': {
                'team': {
                  'points': _0x32620d.aValue
                },
                'enemy': {
                  'points': _0x32620d.bValue
                }
              }
            });
          }

          async ['handlePlayersInfoAction'](_0x187e19) {
            if (_0x187e19) {
              switch (_0x187e19.action) {
                case 'add':
                  this.teamInfo.push(_0x187e19.player);

                  for (const _0x548771 of this.teamInfo) _0x548771.staticId === _0x2a89d6.api.getPlayerStatic() && (this.team = _0x548771.team);

                  break;

                case 'remove':
                  this.teamInfo = this.teamInfo.filter(_0x539acd => _0x539acd.staticId !== _0x187e19.staticId);
                  break;

                case 'update':
                  for (const _0x425932 of this.teamInfo) if (_0x425932.staticId === _0x187e19.staticId) {
                    _0x425932.death += _0x187e19.death, _0x425932.kills += _0x187e19.kills;
                    break;
                  }

                  break;

                default:
                  _0x3c1894.console.logError('PlayerInfo action doesnt exist: ' + _0x187e19.action);

              }

              this.leaderboard.update({
                'teamNaming': this.config.teamNaming,
                'teamInfo': this.teamInfo
              });
            }
          }

          ['tabDown']() {
            this.showLeaderboard = true;
          }

          ['tabUp']() {
            this.showLeaderboard = false;
          }

          ['onExitColshape'](_0x239dfa) {
            _0x239dfa === this.gameArea && 'process' === this.state && (this.isOutOfArea = true, this.outOfGameAreaTimeout = _0x3c1894.game.sleep(this.outOfArenaTimeoutDuration).then(() => {
              _0x39a620.setHealth(0x0);
            }));
          }

          ['onEnterColshape'](_0x3dff7f) {
            _0x3dff7f === this.gameArea && 'process' === this.state && (this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null));
          }

          ['setMoney'](_0x2d7122) {
            this.money = _0x2d7122.money, _0x5e1340.globalBrowser.emit('miniGames_setMoneyElementShown', true), _0x5e1340.globalBrowser.emit('miniGames_setHudMoney', this.money);
          }

          async ['createPedsForEnding']() {
            const a0_0x46d6b5 = {
              _0x5cc726: 0x155f,
              _0x10581a: 0x535,
              _0x3aea3f: 0xdde,
              _0x4b1c4d: 0x19d2,
              _0xe9fddf: 0x20b4
            };

            for (const _0x5459ca of _0x32ae8f.Z.pedAnimDicts) await _0x2a89d6.api.requestAnimDict(_0x5459ca, true);

            this.spawnedPeds = [];

            for (const _0x2a2a79 of _0x32ae8f.Z.pedPositions) {
              const _0x18e11d = _0x3c1894.peds.new(_0x3c1894.game.joaat(_0x32ae8f.Z.pedList[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedList.length - 0x1)]), new _0x3c1894.Vector3(_0x2a2a79.x, _0x2a2a79.y, _0x2a2a79.z), _0x2a2a79.r, _0x3c1894.players.local.dimension);

              _0x18e11d.minigamesStreamIn = () => {
                const _0x57efbb = _0x32ae8f.Z.pedAnimDicts[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedAnimDicts.length - 0x1)];

                _0x18e11d.taskPlayAnim(_0x57efbb, 'base', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
              }, this.spawnedPeds.push(_0x18e11d);
            }
          }

          ['onRecconnect']() {
            _0x3c1894.console.logInfo('reconnect to session');
          }

          ['endRound']() {
            _0x3c1894.console.logInfo('Round ended');
          }

          ['setSpectateMod'](_0x5d1297) {
            const _0x5b1062 = _0x5d1297.value ?? true;

            if (_0x5b1062 && !this.spectateMod) {
              const _0x2ee698 = this.teamInfo[this.spectateIndex]?.['remote'],
                    _0x15723f = _0x3c1894.players.atRemoteId(_0x2ee698);

              if (!_0x3c1894.players.exists(_0x15723f) || _0x15723f.health <= 0x0) return;
              this.spectateMod = true, this.spectateCam = _0x3c1894.cameras.new('default', new _0x3c1894.Vector3(0x0, 0x0, 0x0), new _0x3c1894.Vector3(0x0, 0x0, 0x0), 0x28);

              const _0x390b3f = new _0x3c1894.Vector3(_0x15723f.position.x, _0x15723f.position.y, _0x15723f.position.z),
                    _0x369a7e = _0x3c1894.game.object.getObjectOffsetFromCoords(_0x15723f.position.x, _0x15723f.position.y, _0x15723f.position.z, _0x15723f.getHeading(), 0x0, -4.5, 1.5);

              this.spectateCam.setCoord(_0x369a7e.x, _0x369a7e.y, _0x369a7e.z), this.spectateCam.pointAtCoord(_0x390b3f.x, _0x390b3f.y, _0x390b3f.z);
            } else !_0x5b1062 && this.spectateMod && (this.spectateMod = false, _0x3c1894.cameras.exists(this.spectateCam) && (this.spectateCam.destroy(), delete this.spectateCam), _0x3c1894.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0));
          }

          ['changeSpectatePlayer'](_0x3d7d00 = 'right') {
            if (!this.spectateMod) return void _0x3c1894.console.logInfo('change spectate player error');

            switch (_0x3d7d00) {
              case 'left':
                this.spectateIndex -= 0x1, this.spectateIndex < 0x0 && (this.spectateIndex = this.teamInfo.length - 0x1);
                break;

              case 'right':
                this.spectateIndex += 0x1, this.spectateIndex > this.teamInfo.length - 0x1 && (this.spectateIndex = 0x0);
            }

            _0x3c1894.console.logInfo('spectate index change to :' + this.spectateIndex);

            const _0x5427a4 = this.teamInfo[this.spectateIndex].remote,
                  _0x207d8e = _0x3c1894.players.atRemoteId(_0x5427a4);

            if (!_0x3c1894.players.exists(_0x207d8e) || _0x207d8e.health <= 0x0) return void this.changeSpectatePlayer();
            _0x3c1894.cameras.exists(this.spectateCam) && (this.spectateCam.destroy(), delete this.spectateCam), _0x3c1894.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), this.spectateCam = _0x3c1894.cameras.new('default', new _0x3c1894.Vector3(0x0, 0x0, 0x0), new _0x3c1894.Vector3(0x0, 0x0, 0x0), 0x28);

            const _0x4e06b3 = _0x3c1894.game.object.getObjectOffsetFromCoords(_0x207d8e.position.x, _0x207d8e.position.y, _0x207d8e.position.z, _0x207d8e.getHeading(), 0x0, -4.5, 1.5),
                  _0x3d07db = new _0x3c1894.Vector3(_0x207d8e.position.x, _0x207d8e.position.y, _0x207d8e.position.z);

            this.spectateCam.setCoord(_0x4e06b3.x, _0x4e06b3.y, _0x4e06b3.z), this.spectateCam.pointAtCoord(_0x3d07db.x, _0x3d07db.y, _0x3d07db.z), _0x3c1894.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0);
          }

          async ['toggleEnding'](_0x33567d) {
            if (_0x33567d) {
              for (_0x3c1894.events.call('utils.disablePlayerMove', true), _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.setInvincible(true), await _0x2a89d6.api.fadeOut(0x3e8), _0x3c1894.game.streaming.setFocusPosAndVel(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x0, 0x0, 0x0), _0x3c1894.game.streaming.newLoadSceneStartSphere(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x50, 0x0); !_0x3c1894.game.streaming.isNewLoadSceneLoaded();) await _0x3c1894.game.sleep(0x0);

              _0x3c1894.game.streaming.newLoadSceneStop(), _0x3c1894.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), this.garageCamera = _0x3c1894.cameras.new('default', this.endingCameraPos1, new _0x3c1894.Vector3(0x0, 0x0, 0x0), 0x28);

              const _0x21c008 = new _0x3c1894.Vector3(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z);

              this.garageCamera.pointAtCoord(_0x21c008.x, _0x21c008.y, _0x32ae8f.Z.scenePositions2[0x0].z), _0x3c1894.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x3c1894.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8), _0x3c1894.game.streaming.clearFocus(), await this.createPedsForEnding();
            } else {
              if (await _0x2a89d6.api.fadeOut(0x3e8), this.spawnedPeds && 0x0 !== this.spawnedPeds.length) {
                for (const _0x1538e9 of this.spawnedPeds) _0x3c1894.peds.exists(_0x1538e9) && _0x1538e9.destroy();
              }

              _0x3c1894.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), _0x3c1894.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.setInvincible(false), await _0x2a89d6.api.fadeIn(0x3e8), this.inPause = false;
            }
          }

          async ['prepareAsstes']() {
            _0x2a89d6.api.setInvincible(true), _0x3c1894.events.call('utils.disablePlayerMove', true), _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': false
            }), this.initPoints(), await _0x3c1894.game.streaming.requestModel(_0x3c1894.game.joaat('apa_prop_flag_china')), await _0x3c1894.game.streaming.requestModel(_0x3c1894.game.joaat('apa_prop_flag_us_yt')), _0x3c1894.game.gameplay.setWindSpeed(0x384), _0x3c1894.game.gameplay.setWind(0x384), await _0x2a89d6.api.fadeOut(0x3e8), await super.prepareAsstes();
          }

          async ['onStart']() {
            _0x3c1894.console.logInfo('start minigame'), await super.onStart(), await this.playIntro(0x2), _0x3c1894.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x2a89d6.api.toggleChat(false), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': true
            }), _0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), _0x3c1894.gui.cursor.show(false, false), _0x5e1340.globalBrowser.emit('miniGames_setWeapons', null), _0x5e1340.globalBrowser.emit('miniGames_setHeaderProperty', {
              'key': 'ctf',
              'value': {
                'progressPoint': null,
                'pointsToWin': 0xfa,
                'teams': {
                  'team': {
                    'points': 0x0
                  },
                  'enemy': {
                    'points': 0x0
                  }
                },
                'points': {
                  'a': {
                    'progress': 0x0,
                    'team': 'team'
                  },
                  'b': {
                    'progress': 0x0,
                    'team': 'team'
                  },
                  'c': {
                    'progress': 0x0,
                    'team': 'team'
                  },
                  'd': {
                    'progress': 0x0,
                    'team': 'enemy'
                  },
                  'e': {
                    'progress': 0x0,
                    'team': 'enemy'
                  }
                }
              }
            }), _0x5e1340.globalBrowser.emit('miniGames_setTeamHudTimerState', false), _0x5e1340.globalBrowser.emit('miniGames_setBuyMenu', _0xc9eb8e.y), _0x5e1340.globalBrowser.emit('miniGames_setHeaderMode', 'ctf');
          }

          async ['onProcess']() {
            await super.onProcess(), _0x3c1894.console.logInfo('process'), _0x3c1894.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x3c1894.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(true), _0x2a89d6.api.setInvincible(false);

            const _0x5c98c6 = _0x32ae8f.Z.soundData.start[Math.floor(Math.random() * _0x32ae8f.Z.soundData.start.length)];

            _0x2a89d6.api.playSound('gungame/' + _0x5c98c6);
          }

          async ['onReward']() {
            await super.onReward(), _0x3c1894.game.streaming.clearFocus(), this.state = 'reward', this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), await this.toggleEnding(true), await _0x3c1894.game.sleep(this.endingSceneDuration - 0x7d0), await this.toggleEnding(false);
          }

          async ['onFinish']() {
            await super.onFinish(), _0x3c1894.game.streaming.clearFocus(), _0x3c1894.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleChat(true), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true);
          }

          async ['onPlayerDeath2'](_0x5d3fd0) {
            _0x5d3fd0 === _0x3c1894.players.local && 'process' === this.state && (this.setSpectateMod({
              'value': true
            }), this.changeSpectatePlayer());
          }

          ['onPause']() {
            _0x3c1894.console.logInfo('pause'), this.inPause = true, _0x3c1894.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x2a89d6.api.toggleChat(true);
          }

          async ['onResume']() {
            _0x3c1894.console.logInfo('resume'), this.inPause = false, _0x3c1894.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x2a89d6.api.toggleChat(false);
          }

          ['onSpawn']() {
            'process' === this.state && (_0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(true)), this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), this.spectateMod && this.setSpectateMod({
              'value': false
            });
          }

          async ['playIntro'](_0x325a99) {
            this.mapId = _0x325a99;
            const _0xb5c41b = _0x213b9c.r[_0x325a99];
            _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.fadeOut(0x0), _0x3c1894.events.call('utils.disablePlayerMove', true), _0x3c1894.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x3c1894.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2);

            const _0xf6f2bf = new _0x3c1894.Vector3(_0xb5c41b.cameraPosition.from.x, _0xb5c41b.cameraPosition.from.y, _0xb5c41b.cameraPosition.from.z),
                  _0x15ca93 = new _0x3c1894.Vector3(_0xb5c41b.cameraPosition.to.x, _0xb5c41b.cameraPosition.to.y, _0xb5c41b.cameraPosition.to.z);

            this.introCamera1 = _0x3c1894.cameras.new('default', _0xf6f2bf, new _0x3c1894.Vector3(0x0, 0x0, 0x0), 0x28), this.introCamera2 = _0x3c1894.cameras.new('default', _0x15ca93, new _0x3c1894.Vector3(0x0, 0x0, 0x0), 0x28);

            const _0x254d92 = new _0x3c1894.Vector3(_0xb5c41b.cameraPosition.lookAt.x, _0xb5c41b.cameraPosition.lookAt.y, _0xb5c41b.cameraPosition.lookAt.z);

            this.introCamera1.pointAtCoord(_0x254d92.x, _0x254d92.y, _0x254d92.z), this.introCamera2.pointAtCoord(_0x254d92.x, _0x254d92.y, _0x254d92.z), _0x3c1894.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8), this.introCamera2.setActiveWithInterp(this.introCamera1.handle, 0x4e20, 0x0, 0x0), await _0x3c1894.game.sleep(0x1770), await _0x2a89d6.api.fadeOut(0x3e8), _0x3c1894.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x3c1894.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2), _0x3c1894.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8);
          }

          ['tickCheckForAnim']() {
            if (this.isPlantingBomb) {
              const _0x2da8b6 = _0x3c1894.players.local.hasAnimFinished('anim@heists@ornate_bank@thermal_charge', 'thermal_charge', 0x3);

              _0x3c1894.console.logInfo('anim time ' + _0x2da8b6);
            }
          }

          async ['onRender']() {
            if (super.onRender(), this.tickCheckForAnim(), this.inPause && (_0x3c1894.game.controls.disableAllControlActions(0x0), _0x3c1894.game.controls.disableAllControlActions(0x1)), this.spectateMod) {
              const _0x4dc3de = this.teamInfo[this.spectateIndex].remote,
                    _0x4638e1 = _0x3c1894.players.atRemoteId(_0x4dc3de);

              if (!_0x3c1894.players.exists(_0x4638e1) || _0x4638e1.health <= 0x0) return;

              const _0xd32246 = _0x3c1894.game.object.getObjectOffsetFromCoords(_0x4638e1.position.x, _0x4638e1.position.y, _0x4638e1.position.z, _0x4638e1.getHeading(), 0x0, -0x3, 1.5);

              this.spectateCam.setCoord(_0xd32246.x, _0xd32246.y, _0xd32246.z);

              const _0x461587 = _0x4638e1.getForwardVector(),
                    _0x5e9b82 = 0xf,
                    _0x36c1d2 = new _0x3c1894.Vector3(_0x4638e1.position.x + _0x461587.x * _0x5e9b82, _0x4638e1.position.y + _0x461587.y * _0x5e9b82, _0x4638e1.position.z);

              this.spectateCam.pointAtCoord(_0x36c1d2.x, _0x36c1d2.y, _0x36c1d2.z);
            }

            for (let _0x39eac8 = 0x0; _0x39eac8 < this.teamInfo.length; _0x39eac8++) if (this.teamInfo[_0x39eac8].radarBlip || this.teamInfo[_0x39eac8].team !== this.team) {
              const _0x17568a = this.teamInfo[_0x39eac8].radarBlip,
                    _0x134ef0 = _0x3c1894.players.atRemoteId(this.teamInfo[_0x39eac8].remote);

              if (!_0x3c1894.players.exists(_0x134ef0) || !_0x17568a) break;

              _0x17568a.setPosition(_0x134ef0.position.x, _0x134ef0.position.y, _0x134ef0.position.z);
            } else {
              const _0x52fe7e = _0x3c1894.players.atRemoteId(this.teamInfo[_0x39eac8].remote);

              if (!_0x3c1894.players.exists(_0x52fe7e) || _0x52fe7e === _0x39a620) continue;
              this.teamInfo[_0x39eac8].radarBlip = _0x3c1894.blips.new(0x1, _0x52fe7e.position, {
                'dimension': 0x66,
                'scale': 0.8,
                'name': 'Напарник'
              });
            }

            if (this.showLeaderboard) {
              const _0x45a457 = [0.25, 0.2],
                    _0x4f53dc = [0.75, 0.2];
              let _0xc8bf0a = 'SCORE \n NAME: KILLS - DEATH';

              _0x3c1894.game.graphics.drawText(_0xc8bf0a, [_0x45a457[0x0], _0x45a457[0x1] - 0.15], {
                'font': 0x7,
                'color': [0xff, 0xff, 0xff, 0xb9],
                'scale': [1.2, 1.2],
                'outline': true
              });

              for (let _0x50d7ba = 0x0; _0x50d7ba < this.teamInfo.length; _0x50d7ba++) {
                const _0x1fb313 = this.teamInfo[_0x50d7ba];
                'Красные' === _0x1fb313.team && (_0xc8bf0a = _0x1fb313.name + ': ' + _0x1fb313.kills + ' - ' + _0x1fb313.death, _0x3c1894.game.graphics.drawText(_0xc8bf0a, _0x45a457, {
                  'font': 0x7,
                  'color': [0xff, 0xff, 0xff, 0xb9],
                  'scale': [1.2, 1.2],
                  'outline': true
                }), _0x45a457[0x1] += 0.05);
              }

              _0xc8bf0a = 'SCORE \n NAME: KILLS - DEATH', _0x3c1894.game.graphics.drawText(_0xc8bf0a, [_0x4f53dc[0x0], _0x4f53dc[0x1] - 0.15], {
                'font': 0x7,
                'color': [0xff, 0xff, 0xff, 0xb9],
                'scale': [1.2, 1.2],
                'outline': true
              });

              for (let _0x35c4ff = 0x0; _0x35c4ff < this.teamInfo.length; _0x35c4ff++) {
                const _0x17ee2f = this.teamInfo[_0x35c4ff];
                'Синие' === _0x17ee2f.team && (_0xc8bf0a = _0x17ee2f.name + ': ' + _0x17ee2f.kills + ' - ' + _0x17ee2f.death, _0x3c1894.game.graphics.drawText(_0xc8bf0a, _0x4f53dc, {
                  'font': 0x7,
                  'color': [0xff, 0xff, 0xff, 0xb9],
                  'scale': [1.2, 1.2],
                  'outline': true
                }), _0x4f53dc[0x1] += 0.05);
              }
            }

            this.isOutOfArea && _0x3c1894.game.graphics.drawText('Вернитесь в игровую зону', [0.5, 0.5], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            }), this.insidePlant && _0x3c1894.game.graphics.drawText('[E] Установка бомбы', [0.5, 0.7], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            });

            for (const _0x49f2ba in this.points) {
              this.points[_0x49f2ba].render();
            }

            'process' !== this.state || this.inPause || _0x3c1894.game.controls.enableAllControlActions(0x2);
          }

        });

        _0x19183f.addPreset('Sawmill', _0x5116ec.hT), _0x3146d8.addMinigame('PointTeamDeathmatch', _0x19183f);

        const _0x169154 = new _0x25b4fd('Race', class extends _0x1ec6d4 {
          constructor(_0x25fdbf, _0x41ce01) {
            super(_0x25fdbf, _0x41ce01), this.ownVehicleRemoteId = null, this.isCountdown = false, this.countdownNumber = 0x6, this.points = this.config.points, this.createdPoints = [], this.activeCheckpoint = null, this.targetPointIndex = 0x0, this.inStart = true, this.maxDistToPoint = null, this.timeInDrift = 0x0, this.currentDriftSpeedForwardAngle = 0x0, this.minDriftAngle = 0xf, this.maxDriftAngle = 0x50, this.angleMiltiplyer = 0xa, this.speedMiltiplyer = 0xa, this.driftAngle = 0x0, this.bonusScorePerSecond = 0xa, this.driftRank = null, this.driftScore = 0x0, _0x4b7b0d.events.add('playerEnterCheckpoint', _0x25c9dd => this.handleEnterCheckpoint(_0x25c9dd));
          }

          ['handleEnterCheckpoint'](_0x1231be) {
            this.activeCheckpoint && _0x1231be !== this.activeCheckpoint || (this.targetPointIndex += 0x1, this.handlePoint());
          }

          ['handleDrift']() {
            this.vehicle && _0x4b7b0d.vehicles.exists(this.vehicle) && (this.driftAngle = Math.abs(_0x10258a(this.vehicle.getForwardVector(), this.vehicle.getSpeedVector(true))), this.driftAngle > this.minDriftAngle && this.driftAngle < this.maxDriftAngle ? (this.driftScore += _0x372325(this.driftAngle, this.timeInDrift, this.vehicle.getSpeed()), this.timeInDrift += 0x1) : (this.timeInDrift = 0x0, this.driftScore = 0x0));
          }

          ['handlePoint']() {
            this.activeCheckpoint && this.activeCheckpoint.destroy();
            const _0x57afa9 = this.points[this.targetPointIndex],
                  _0x108e43 = this.points[this.targetPointIndex + 0x1];
            if (_0x4b7b0d.game.hud.refreshWaypoint(), undefined === _0x108e43) return;

            const _0x34eefa = new _0x4b7b0d.Vector3(_0x108e43.x - _0x57afa9.x, _0x108e43.y - _0x57afa9.y, _0x108e43.z - _0x108e43.z);

            this.activeCheckpoint = _0x4b7b0d.checkpoints.new(0x1, new _0x4b7b0d.Vector3(_0x57afa9.x, _0x57afa9.y, _0x57afa9.z - 0x2), 0xa, {
              'color': [0xff, 0x0, 0x0, 0xff],
              'dimension': this.dimension,
              'direction': new _0x4b7b0d.Vector3(_0x57afa9.x + _0x34eefa.x, _0x57afa9.y + _0x34eefa.y, _0x57afa9.z + _0x34eefa.z)
            }), _0x4b7b0d.game.hud.setNewWaypoint(_0x57afa9.x, _0x57afa9.y);
          }

          async ['prepareAsstes']() {
            await super.prepareAsstes();
          }

          async ['onStart']() {
            await super.onStart(), this.inStart = true, _0x4b7b0d.game.streaming.clearFocus(), _0x4b7b0d.game.hud.clearGpsMultiRoute(), _0x4b7b0d.game.hud.startGpsMultiRoute(0x87, false, true);

            for (const _0x14ffb2 of this.config.points) {
              const _0x4ff1a5 = _0x4b7b0d.game.pathfind.getClosestVehicleNode(_0x14ffb2.x, _0x14ffb2.y, _0x14ffb2.z, 0x5, 0x0, 0x0);

              _0x4b7b0d.game.hud.addPointToGpsMultiRoute(_0x4ff1a5.x, _0x4ff1a5.y, _0x4ff1a5.z);
            }

            _0x4b7b0d.game.hud.setGpsMultiRouteRender(true), await this.startCountDown(), this.vehicle.setEngineOn(true, true, true), this.handlePoint(), this.inStart = false;
          }

          async ['startCountDown']() {
            this.isCountdown = true;

            for (let _0x1e65eb = 0x1; _0x1e65eb < 0x6; _0x1e65eb++) this.countdownNumber -= 0x1, await _0x4b7b0d.game.sleep(0x3e8);

            this.isCountdown = false;
          }

          async ['onProcess']() {
            await super.onProcess();
          }

          async ['onReward']() {
            await super.onReward(), _0x4b7b0d.game.hud.clearGpsMultiRoute();
          }

          ['enterVehicle'](_0xca5d72) {
            this.ownVehicleRemoteId = _0xca5d72.vehRemoteId;
          }

          ['entityStreamIn'](_0x3b5e9a) {
            _0x4b7b0d.vehicles.exists(_0x3b5e9a) && _0x3b5e9a.remoteId === this.ownVehicleRemoteId && (this.vehicle = _0x4b7b0d.vehicles.atRemoteId(_0x3b5e9a.remoteId), _0x3a5927.setIntoVehicle(this.vehicle.handle, -0x1)), _0x4b7b0d.objects.exists(_0x3b5e9a) && _0x3b5e9a.type;
          }

          async ['onRender']() {
            if (await super.onRender(), this.isCountdown && _0x4b7b0d.game.graphics.drawText('До старта ' + this.countdownNumber, [0.5, 0.2], {
              'scale': [1.2, 1.2],
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xff],
              'outline': true
            }), undefined !== this.vehicle) {
              const _0x3bbf1d = this.vehicle.getForwardVector(),
                    _0x68226c = new _0x4b7b0d.Vector3(0x5 * _0x3bbf1d.x, 0x5 * _0x3bbf1d.y, 0x5 * _0x3bbf1d.z),
                    _0x24442c = new _0x4b7b0d.Vector3(this.vehicle.position.x + _0x68226c.x, this.vehicle.position.y + _0x68226c.y, this.vehicle.position.z + _0x68226c.z),
                    _0x1096b8 = this.vehicle.getSpeedVector(false),
                    _0x14e7eb = new _0x4b7b0d.Vector3(0x5 * _0x1096b8.x, 0x5 * _0x1096b8.y, 0x5 * _0x1096b8.z),
                    _0x2db2cf = new _0x4b7b0d.Vector3(this.vehicle.position.x + _0x14e7eb.x, this.vehicle.position.y + _0x14e7eb.y, this.vehicle.position.z + _0x14e7eb.z);

              _0x4b7b0d.game.graphics.drawLine(this.vehicle.position.x, this.vehicle.position.y, this.vehicle.position.z, _0x24442c.x, _0x24442c.y, _0x24442c.z, 0x0, 0x0, 0xff, 0xff), _0x4b7b0d.game.graphics.drawLine(this.vehicle.position.x, this.vehicle.position.y, this.vehicle.position.z, _0x2db2cf.x, _0x2db2cf.y, _0x2db2cf.z, 0xff, 0x0, 0x0, 0xff);
            }

            this.inStart && _0x4b7b0d.game.controls.disableAllControlActions(0x1b), this.handleDrift(), this.timeInDrift > 0x0 && _0x4b7b0d.game.graphics.drawText('Очки дрифта ' + Math.round(this.driftScore) + ' угол ' + Math.round(this.driftAngle), [0.5, 0.2], {
              'scale': [1.2, 1.2],
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xff],
              'outline': true
            });
          }

        });

        _0x169154.addPreset('test_config', _0x168f4c.n), _0x3146d8.addMinigame('Race', _0x169154);

        const _0x5065eb = new _0x25b4fd('Duel', class extends _0x1ec6d4 {
          constructor(_0x1c9619, _0x1e6779) {
            const a0_0x3f55a6 = {
              _0x198cd8: 0x91d,
              _0x26d499: 0x90f
            };
            super(_0x1c9619, _0x1e6779), this.teamInfo = [], this.dimension = _0x1e6779, this.inPause = false, this.playersInSession = new Map(), this.pauseScreenEffect = this.config.pauseScreenEffect, this.buyStateDuration = this.config.buyStateDurtation ?? 0x1388, this.mapId = 0x0, this.introCamera1 = undefined, this.introCamera2 = undefined, this.garageCamera = null, this.spectateMod = false, this.spectateCam = null, this.spectateIndex = 0x0, this.endingCameraPos1 = new _0x38f3d3.Vector3(1563.1597900390625, 250.41319274902344, -0x30), this.endingCameralPos = new _0x38f3d3.Vector3(-0.99, -0.01, 0x0), this.isOutOfArea = false, this.outOfGameAreaTimeout = null, this.outOfArenaTimeoutDuration = this.config.outOfArenaTimeoutDuration, this.gameArea = _0x38f3d3.colshapes.newCircle(this.centerPosition.x, this.centerPosition.y, this.centerRadius, this.dimension), this.endingSceneDuration = this.config.endingSceneDuration, this.team = null, this.money = 0x0, this.isPlantingBomb = false, this.areaBlip = _0x38f3d3.blips.new(0x9, new _0x38f3d3.Vector3(this.centerPosition.x, this.centerPosition.y, this.centerPosition.z), {
              'radius': this.centerRadius,
              'alpha': 0x64,
              'dimension': this.dimension,
              'color': 0x5
            }), this.zone = new _0x15588e(), this.zone.setup({
              'zoneStartPosition': this.centerPosition,
              'zoneStartRadius': this.centerRadius,
              'zoneShrinkSpeed': 0.1,
              'dimension': this.dimension
            }), _0x38f3d3.keys.bind(_0x41cec6.t.ARROW_LEFT, false, () => {
              this.changeSpectatePlayer('left');
            }), _0x38f3d3.keys.bind(_0x41cec6.t.ARROW_RIGHT, false, () => {
              this.changeSpectatePlayer('right');
            }), this.hud = new _0x38a245(this.buildHudData()), this.leaderboard = new _0x30d472({
              'teamNaming': this.config.teamNaming,
              'teamInfo': this.teamInfo
            }), this.itemShop = new _0x124e92(), _0x38f3d3.keys.bind(_0x41cec6.t.B, true, () => this.handleToggleShop(true)), _0x38f3d3.keys.bind(_0x41cec6.t.B, false, () => this.handleToggleShop(false)), _0x38f3d3.keys.bind(0x9, true, () => this.leaderboard.toggle(true)), _0x38f3d3.keys.bind(0x9, false, () => this.leaderboard.toggle(false));
          }

          ['buildHudData']() {
            return {
              'firstTeam': {
                'teamName': this.config.teamNaming[0x1],
                'currentScore': 0x0,
                'maxScore': 0x3
              },
              'secondTeam': {
                'teamName': this.config.teamNaming[0x2],
                'currentScore': 0x0,
                'maxScore': 0x3
              },
              'timerDuration': 0x32
            };
          }

          ['handleToggleShop'](_0x5578d2) {
            _0x5578d2 && this.buyingState ? this.itemShop.toggleBuyMenu(true) : this.itemShop.toggleBuyMenu(false);
          }

          ['onExitColshape'](_0x3099f1) {
            _0x3099f1 === this.gameArea && 'process' === this.state && (this.isOutOfArea = true, this.outOfGameAreaTimeout = _0x38f3d3.game.sleep(this.outOfArenaTimeoutDuration).then(() => {
              _0x48c2c8.setHealth(0x0);
            }));
          }

          ['onEnterColshape'](_0x39c270) {
            _0x39c270 === this.gameArea && 'process' === this.state && (this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null));
          }

          async ['handlePlayersInfoAction'](_0x233ff6) {
            if (_0x233ff6) {
              switch (_0x233ff6.action) {
                case 'add':
                  this.teamInfo.push(_0x233ff6.player);

                  for (const _0x5ea2e6 of this.teamInfo) _0x5ea2e6.staticId === _0x2a89d6.api.getPlayerStatic() && (this.team = _0x5ea2e6.team);

                  break;

                case 'remove':
                  this.teamInfo = this.teamInfo.filter(_0x42a9c9 => _0x42a9c9.staticId !== _0x233ff6.staticId);
                  break;

                case 'update':
                  for (const _0x42a75e of this.teamInfo) if (_0x42a75e.staticId === _0x233ff6.staticId) {
                    _0x42a75e.death += _0x233ff6.death, _0x42a75e.kills += _0x233ff6.kills;
                    break;
                  }

                  break;

                default:
                  _0x38f3d3.console.logError('PlayerInfo action doesnt exist: ' + _0x233ff6.action);

              }

              this.leaderboard.update({
                'teamNaming': this.config.teamNaming,
                'teamInfo': this.teamInfo
              });
            }
          }

          async ['createPedsForEnding']() {
            for (const _0x465fa8 of _0x32ae8f.Z.pedAnimDicts) await _0x2a89d6.api.requestAnimDict(_0x465fa8, true);

            this.spawnedPeds = [];

            for (const _0x1fe78c of _0x32ae8f.Z.pedPositions) {
              const _0x42f930 = _0x38f3d3.peds.new(_0x38f3d3.game.joaat(_0x32ae8f.Z.pedList[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedList.length - 0x1)]), new _0x38f3d3.Vector3(_0x1fe78c.x, _0x1fe78c.y, _0x1fe78c.z), _0x1fe78c.r, _0x38f3d3.players.local.dimension);

              _0x42f930.minigamesStreamIn = () => {
                const _0x44eb42 = _0x32ae8f.Z.pedAnimDicts[_0x2a89d6.api.randomInteger(0x0, _0x32ae8f.Z.pedAnimDicts.length - 0x1)];

                _0x42f930.taskPlayAnim(_0x44eb42, 'base', 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
              }, this.spawnedPeds.push(_0x42f930);
            }
          }

          ['onRecconnect']() {
            _0x38f3d3.console.logInfo('reconnect to session');
          }

          ['endRound']() {
            _0x38f3d3.console.logInfo('Round ended');
          }

          ['setSpectateMod'](_0xf7b48a) {
            const _0x243b02 = _0xf7b48a.value ?? true;

            _0x243b02 && !this.spectateMod ? (this.spectateMod = true, this.changeSpectatePlayer()) : !_0x243b02 && this.spectateMod && (this.spectateMod = false, _0x38f3d3.cameras.exists(this.spectateCam) && (this.spectateCam.destroy(), delete this.spectateCam), _0x38f3d3.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0));
          }

          ['changeSpectatePlayer'](_0x363913 = 'right') {
            if ('right' === _0x363913) {
              let _0x54aebb;

              for (let _0x7ab42 = this.spectateIndex + 0x1; _0x7ab42 < this.teamInfo.length - 0x1; _0x7ab42++) {
                const _0x2f3980 = this.teamInfo[_0x7ab42];

                if (!_0x2f3980) {
                  _0x54aebb = -0x1;
                  break;
                }

                if (_0x2f3980.team === this.team) {
                  _0x54aebb = _0x7ab42;
                  break;
                }
              }

              this.spectateIndex = _0x54aebb || 0x0, -0x1 === _0x54aebb && (this.spectateIndex = 0x0, this.changeSpectatePlayer(_0x363913));
            }

            _0x38f3d3.console.logInfo('spectate index change to :' + this.spectateIndex);

            const _0x1eb132 = this.teamInfo[this.spectateIndex].remote,
                  _0x2737d1 = _0x38f3d3.players.atRemoteId(_0x1eb132);

            if (!_0x38f3d3.players.exists(_0x2737d1) || _0x2737d1.health <= 0x0) return void this.changeSpectatePlayer();
            _0x38f3d3.cameras.exists(this.spectateCam) && (this.spectateCam.destroy(), delete this.spectateCam), _0x38f3d3.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), this.spectateCam = _0x38f3d3.cameras.new('default', new _0x38f3d3.Vector3(0x0, 0x0, 0x0), new _0x38f3d3.Vector3(0x0, 0x0, 0x0), 0x28);

            const _0x3ed720 = _0x38f3d3.game.object.getObjectOffsetFromCoords(_0x2737d1.position.x, _0x2737d1.position.y, _0x2737d1.position.z, _0x2737d1.getHeading(), 0x0, -5.5, 1.5),
                  _0x2f1e35 = new _0x38f3d3.Vector3(_0x2737d1.position.x, _0x2737d1.position.y, _0x2737d1.position.z);

            this.spectateCam.setCoord(_0x3ed720.x, _0x3ed720.y, _0x3ed720.z), this.spectateCam.pointAtCoord(_0x2f1e35.x, _0x2f1e35.y, _0x2f1e35.z), _0x38f3d3.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0);
          }

          async ['toggleEnding'](_0x3e1b7b) {
            if (_0x3e1b7b) {
              for (_0x38f3d3.events.call('utils.disablePlayerMove', true), _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.setInvincible(true), await _0x2a89d6.api.fadeOut(0x3e8), _0x38f3d3.game.streaming.setFocusPosAndVel(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x0, 0x0, 0x0), _0x38f3d3.game.streaming.newLoadSceneStartSphere(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z, 0x50, 0x0); !_0x38f3d3.game.streaming.isNewLoadSceneLoaded();) await _0x38f3d3.game.sleep(0x0);

              _0x38f3d3.game.streaming.newLoadSceneStop(), _0x38f3d3.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), this.garageCamera = _0x38f3d3.cameras.new('default', this.endingCameraPos1, new _0x38f3d3.Vector3(0x0, 0x0, 0x0), 0x28);

              const _0x4ee638 = new _0x38f3d3.Vector3(_0x32ae8f.Z.scenePositions2[0x0].x, _0x32ae8f.Z.scenePositions2[0x0].y, _0x32ae8f.Z.scenePositions2[0x0].z);

              this.garageCamera.pointAtCoord(_0x4ee638.x, _0x4ee638.y, _0x32ae8f.Z.scenePositions2[0x0].z), _0x38f3d3.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x38f3d3.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8), _0x38f3d3.game.streaming.clearFocus(), await this.createPedsForEnding();
            } else {
              if (await _0x2a89d6.api.fadeOut(0x3e8), this.spawnedPeds && 0x0 !== this.spawnedPeds.length) {
                for (const _0x55c92a of this.spawnedPeds) _0x38f3d3.peds.exists(_0x55c92a) && _0x55c92a.destroy();
              }

              _0x38f3d3.cameras.exists(this.garageCamera) && this.garageCamera.destroy(), _0x38f3d3.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.setInvincible(false), await _0x2a89d6.api.fadeIn(0x3e8), this.inPause = false;
            }
          }

          async ['prepareAsstes']() {
            _0x2a89d6.api.setInvincible(true), _0x38f3d3.events.call('utils.disablePlayerMove', true), _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': false
            }), await _0x2a89d6.api.fadeOut(0x3e8), await super.prepareAsstes();
          }

          async ['onStart']() {
            _0x38f3d3.console.logInfo('start minigame'), await super.onStart(), await this.playIntro(0x2), _0x38f3d3.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x2a89d6.api.toggleChat(false), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': true
            }), _0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), _0x5e1340.globalBrowser.emit('miniGames_setWeapons', null), _0x38f3d3.gui.cursor.show(false, false), this.hud.toggle(true);
          }

          async ['onStartRound']() {
            this.buyingState = true, _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), _0x2a89d6.api.setInvincible(false), this.hud.setTimerTime(0x63), await _0x38f3d3.game.sleep(this.config.buyingStateDuration), this.itemShop.toggleBuyMenu(false), this.buyingState = false, _0x38f3d3.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x38f3d3.events.call('utils.disablePlayerMove', false);

            const _0x19e48e = _0x32ae8f.Z.soundData.start[Math.floor(Math.random() * _0x32ae8f.Z.soundData.start.length)];

            _0x2a89d6.api.playSound('gungame/' + _0x19e48e);
          }

          ['onEndRound']() {
            _0x2a89d6.api.setInvincible(true), _0x38f3d3.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x38f3d3.events.call('utils.disablePlayerMove', true);
          }

          async ['onProcess']() {
            await super.onProcess(), _0x38f3d3.console.logInfo('process');
          }

          async ['onReward']() {
            await super.onReward(), _0x38f3d3.game.streaming.clearFocus(), this.state = 'reward', this.isOutOfArea = false, this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), await this.toggleEnding(true), await _0x38f3d3.game.sleep(this.endingSceneDuration - 0x7d0), await this.toggleEnding(false);
          }

          async ['onFinish']() {
            await super.onFinish(), _0x38f3d3.game.streaming.clearFocus(), _0x38f3d3.events.call('utils.disablePlayerMove', false), _0x2a89d6.api.toggleChat(true), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true), this.hud.toggle(false), _0x5e1340.globalBrowser.toggle('miniGames', {
              'value': false
            });
          }

          async ['onPlayerDeath2'](_0x7d2c6b) {
            _0x7d2c6b === _0x38f3d3.players.local && 'process' === this.state && (this.setSpectateMod({
              'value': true
            }), this.changeSpectatePlayer());
          }

          ['onPause']() {
            _0x38f3d3.console.logInfo('pause'), this.inPause = true, _0x38f3d3.game.graphics.startScreenEffect(this.pauseScreenEffect, 0x0, true), _0x2a89d6.api.toggleChat(true);
          }

          async ['onResume']() {
            _0x38f3d3.console.logInfo('resume'), this.inPause = false, _0x38f3d3.game.graphics.stopScreenEffect(this.pauseScreenEffect), _0x2a89d6.api.toggleChat(false);
          }

          ['onSpawn']() {
            'process' === this.state && (_0x2a89d6.api.toggleChat(true), _0x2a89d6.api.toggleHud(true), _0x2a89d6.api.toggleRadar(true)), this.outOfGameAreaTimeout && (this.outOfGameAreaTimeout.cancel(), this.outOfGameAreaTimeout = null), this.spectateMod && this.setSpectateMod({
              'value': false
            });
          }

          async ['playIntro'](_0x519bd6) {
            this.mapId = _0x519bd6;
            const _0x525db5 = _0x213b9c.r[_0x519bd6];
            _0x2a89d6.api.toggleChat(false), _0x2a89d6.api.toggleHud(false), _0x2a89d6.api.toggleRadar(false), _0x2a89d6.api.fadeOut(0x0), _0x38f3d3.events.call('utils.disablePlayerMove', true), _0x38f3d3.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x38f3d3.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2);

            const _0x5cc6d5 = new _0x38f3d3.Vector3(_0x525db5.cameraPosition.from.x, _0x525db5.cameraPosition.from.y, _0x525db5.cameraPosition.from.z),
                  _0x310c59 = new _0x38f3d3.Vector3(_0x525db5.cameraPosition.to.x, _0x525db5.cameraPosition.to.y, _0x525db5.cameraPosition.to.z);

            this.introCamera1 = _0x38f3d3.cameras.new('default', _0x5cc6d5, new _0x38f3d3.Vector3(0x0, 0x0, 0x0), 0x28), this.introCamera2 = _0x38f3d3.cameras.new('default', _0x310c59, new _0x38f3d3.Vector3(0x0, 0x0, 0x0), 0x28);

            const _0xa80cba = new _0x38f3d3.Vector3(_0x525db5.cameraPosition.lookAt.x, _0x525db5.cameraPosition.lookAt.y, _0x525db5.cameraPosition.lookAt.z);

            this.introCamera1.pointAtCoord(_0xa80cba.x, _0xa80cba.y, _0xa80cba.z), this.introCamera2.pointAtCoord(_0xa80cba.x, _0xa80cba.y, _0xa80cba.z), _0x38f3d3.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8), this.introCamera2.setActiveWithInterp(this.introCamera1.handle, 0x4e20, 0x0, 0x0), await _0x38f3d3.game.sleep(0x1770), await _0x2a89d6.api.fadeOut(0x3e8), _0x38f3d3.cameras.exists(this.introCamera1) && (this.introCamera1.destroy(), delete this.introCamera1), _0x38f3d3.cameras.exists(this.introCamera2) && (this.introCamera2.destroy(), delete this.introCamera2), _0x38f3d3.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2a89d6.api.fadeIn(0x3e8);
          }

          ['tickCheckForAnim']() {
            if (this.isPlantingBomb) {
              const _0x4f765c = _0x38f3d3.players.local.hasAnimFinished('anim@heists@ornate_bank@thermal_charge', 'thermal_charge', 0x3);

              _0x38f3d3.console.logInfo('anim time ' + _0x4f765c);
            }
          }

          async ['onRender']() {
            if (super.onRender(), this.tickCheckForAnim(), this.inPause && (_0x38f3d3.game.controls.disableAllControlActions(0x0), _0x38f3d3.game.controls.disableAllControlActions(0x1)), this.spectateMod) {
              const _0x41dfb7 = this.teamInfo[this.spectateIndex].remote,
                    _0x446299 = _0x38f3d3.players.atRemoteId(_0x41dfb7);

              if (!_0x38f3d3.players.exists(_0x446299) || _0x446299.health <= 0x0) return;

              _0x38f3d3.game.graphics.stopAllScreenEffects();

              const _0x2ca5ba = _0x38f3d3.game.object.getObjectOffsetFromCoords(_0x446299.position.x, _0x446299.position.y, _0x446299.position.z, _0x446299.getHeading(), 0x0, -5.5, 1.5);

              this.spectateCam.setCoord(_0x2ca5ba.x, _0x2ca5ba.y, _0x2ca5ba.z);

              const _0x7cef31 = _0x446299.getForwardVector(),
                    _0x473c12 = 0xf,
                    _0x15e844 = new _0x38f3d3.Vector3(_0x446299.position.x + _0x7cef31.x * _0x473c12, _0x446299.position.y + _0x7cef31.y * _0x473c12, _0x446299.position.z);

              this.spectateCam.pointAtCoord(_0x15e844.x, _0x15e844.y, _0x15e844.z);
            }

            for (let _0x42e8b3 = 0x0; _0x42e8b3 < this.teamInfo.length; _0x42e8b3++) if (this.teamInfo[_0x42e8b3].radarBlip || this.teamInfo[_0x42e8b3].team !== this.team) {
              const _0x1d2db3 = this.teamInfo[_0x42e8b3].radarBlip,
                    _0x1718fe = _0x38f3d3.players.atRemoteId(this.teamInfo[_0x42e8b3].remote);

              if (!_0x38f3d3.players.exists(_0x1718fe) || !_0x1d2db3) break;

              _0x1d2db3.setPosition(_0x1718fe.position.x, _0x1718fe.position.y, _0x1718fe.position.z);
            } else {
              const _0x14dd4a = _0x38f3d3.players.atRemoteId(this.teamInfo[_0x42e8b3].remote);

              if (!_0x38f3d3.players.exists(_0x14dd4a) || _0x14dd4a === _0x48c2c8) continue;
              this.teamInfo[_0x42e8b3].radarBlip = _0x38f3d3.blips.new(0x1, _0x14dd4a.position, {
                'dimension': this.dimension,
                'scale': 0.8,
                'name': 'Напарник'
              });
            }

            this.isOutOfArea && _0x38f3d3.game.graphics.drawText('Вернитесь в игровую зону', [0.5, 0.5], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            }), null !== this.money && 'process' == this.state && _0x38f3d3.game.graphics.drawText('MONEY: ' + this.money, [0.85, 0.85], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            }), this.insidePlant && _0x38f3d3.game.graphics.drawText('[E] Установка бомбы', [0.5, 0.7], {
              'font': 0x7,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [1.2, 1.2],
              'outline': true
            });
          }

        });

        _0x5065eb.addPreset('Sawmill', _0x5116ec.ZL), _0x3146d8.addMinigame('Duel', _0x5065eb);
        let _0x5b91f1 = false;
        const _0x5a2093 = [{
          'name': 'Gungame',
          'label': 'Гонка вооружений',
          'presets': [{
            'name': 'Sawmill',
            'label': 'Лесопилка'
          }]
        }, {
          'name': 'Deathmatch',
          'label': 'Бой насмерть',
          'presets': [{
            'name': 'Sawmill',
            'label': 'Лесопилка'
          }]
        }, {
          'name': 'TeamDeathmatch',
          'label': 'Командный бой',
          'presets': [{
            'name': 'Sawmill',
            'label': 'Лесопилка'
          }]
        }];
        _0x1161bd.events.add('minigames.client.setMinigame', (_0x4a2fe7, _0xf6d670) => {
          _0x3146d8.setMinigame(_0x4a2fe7, _0xf6d670);
        }), _0x1161bd.events.add('minigames.client.prepareAssets', async () => {
          await _0x3146d8.currentMinigameController?.['prepareAsstes']();
        }), _0x1161bd.events.add('minigames.client.pauseMinigame', async () => {
          await _0x3146d8.currentMinigameController?.['onPause']();
        }), _0x1161bd.events.add('minigames.client.resumeMinigame', async () => {
          await _0x3146d8.currentMinigameController?.['onResume']();
        }), _0x1161bd.events.add('minigames.client.preapreForEnding', async () => {
          await _0x3146d8.currentMinigameController?.['prepareForEnding']();
        }), _0x1161bd.events.add('minigames.client.startMinigame', async () => {
          await _0x3146d8.currentMinigameController?.['onStart']();
        }), _0x1161bd.events.add('minigames.client.finishMinigame', async () => {
          await _0x3146d8.currentMinigameController?.['onFinish'](), _0x3146d8.currentMinigameController = null;
        }), _0x1161bd.events.add('minigames.client.showEnding', async () => {
          await _0x3146d8.currentMinigameController?.['toggleEnding'](true);
        }), _0x1161bd.events.add('minigames.client.hideEnding', async () => {
          await _0x3146d8.currentMinigameController?.['toggleEnding'](false);
        }), _0x1161bd.events.add('minigames.client.onReconnect', async () => {
          await _0x3146d8.currentMinigameController?.['onRecconnect']();
        }), _0x1161bd.events.add('keys.e', () => _0x3146d8.currentMinigameController?.['keyDownE']()), _0x1161bd.events.add('minigames.client.updateStatistic', async _0x372bf3 => await _0x3146d8.currentMinigameController?.['updateGameStatistic'](_0x372bf3)), _0x1161bd.events.add('minigames.client.event', async _0x17293f => {
          const _0x452a44 = JSON.parse(_0x17293f);

          _0x1161bd.console.logInfo('e data: ' + _0x17293f), await _0x3146d8.handleMinigameEvent(_0x452a44);
        }), _0x1161bd.events.add('keys.p', () => _0x3146d8.currentMinigameController?.['togglePause']()), _0x1161bd.events.add('playerDeath2', async _0x2dba91 => await _0x3146d8.currentMinigameController?.['onPlayerDeath2'](_0x2dba91)), _0x1161bd.events.add('render', async () => await _0x3146d8.currentMinigameController?.['onRender']()), _0x1161bd.events.add('playerEnterColshape', async _0x4a8ad8 => await _0x3146d8.currentMinigameController?.['onEnterColshape'](_0x4a8ad8)), _0x1161bd.events.add('playerExitColshape', async _0x303e8b => await _0x3146d8.currentMinigameController?.['onExitColshape'](_0x303e8b)), _0x1161bd.events.add('playerSpawn', async _0x58217d => _0x3146d8.currentMinigameController?.['onSpawn'](_0x58217d)), _0x1161bd.events.add('playerDeath', async (_0x25277f, _0x3ff08b, _0x530ab7) => await _0x3146d8.currentMinigameController?.['onPlayerDeath'](_0x25277f, _0x3ff08b, _0x530ab7)), _0x1161bd.events.add('minigames.client.finishMinigameSession', () => {
          _0x3146d8.resetMinigame();
        }), _0x1161bd.events.add('minigames.client.selectTeam', _0x408436 => {}), _0x1161bd.events.add('minigames.client.leaveLobby', () => {}), _0x1161bd.events.add('minigames.client.changeGamemode', _0xbc8ccd => {}), _0x1161bd.events.add('minigames.client.tryCreateLobby', _0x507539 => {}), _0x1161bd.events.add('minigames.client.startLobby', () => {}), _0x1161bd.events.add('minigames.client.showMatchHistory', () => {}), _0x1161bd.events.add('minigames.client.sendReport', (_0x47a262, _0x1511b6, _0x460f1a) => {}), _0x1161bd.events.add('minigames.client.tryCreateParty', () => {}), _0x1161bd.events.add('minigames.client.inviteToParty', _0x254301 => {}), _0x1161bd.events.add('minigames.client.leaveParty', () => {}), _0x1161bd.events.add('minigames.client.disbandParty', () => {}), _0x1161bd.events.add('minigames.client.givePartyLeader', _0x3b40d4 => {}), _0x1161bd.events.add('minigames.client.kickFromParty', _0x557a19 => {}), _0x1161bd.events.add('minigames.client.close', () => {}), _0x1161bd.events.add('minigames.client.showUi', async () => {
          _0x5e1340.globalBrowser.toggle('miniGames', {
            'value': true,
            'gameModes': _0x5a2093
          }), _0x5e1340.globalBrowser.emit('miniGames_setPage', 'menu'), _0x4a842b(_0x570b43.lobbies), _0x1161bd.events.callRemote('3334051437', 'all'), _0x1161bd.events.callRemote('2517992276'), _0x4048fa(false), _0x56fe04.currentLobby && _0x4048fa(true, _0x56fe04.currentLobby), _0x5b91f1 = false, _0x2a89d6.api.toggleChat(false);
        });
        const _0xd194b7 = {
          'weapon': {
            'displayName': 'Оружие',
            'type': 'switch',
            'variants': [{
              'displayName': 'Пулеметы',
              'value': 'weapon_combatmg'
            }, {
              'displayName': 'Револьверы',
              'value': 'weapon_navyrevolver'
            }, {
              'displayName': 'Дробовики',
              'value': 'weapon_heavyshotgun'
            }],
            'default': 'weapon_navyrevolver'
          },
          'canConnectOnPlaying': {
            'displayName': 'Подключение во время игры',
            'type': 'switch',
            'variants': [{
              'displayName': 'Разрешено',
              'value': 'true'
            }, {
              'displayName': 'Запрещено',
              'value': 'false'
            }],
            'default': 'false'
          },
          'killsToWin': {
            'displayName': 'Убийст для победы',
            'type': 'slider',
            'min': 0x32,
            'max': 0x64,
            'default': 0x32
          },
          'createPrice': 0x142
        };
        _0x1161bd.events.add('minigames.client.cef.lobbyCreatorSetPreset', (_0x42492e, _0x4cfff7) => {
          let _0x345e7e;

          if ('Deathmatch' === _0x42492e) {
            if ('Sawmill' === _0x4cfff7) _0x345e7e = _0xd194b7;
          } else _0x345e7e = {
            'createPrice': 0x1f4
          };

          _0x345e7e && _0x5e1340.globalBrowser.emit('miniGames_creatorSetCustomFields', JSON.stringify(_0x345e7e));
        }), _0x1161bd.events.add('minigames.client.cef.inviteToLobby', _0x370367 => {}), _0x1161bd.events.add('minigames.client.cef.kickFromLobby', _0x20dd50 => {}), _0x1161bd.events.add('minigames.client.cef.tryCreateLobby', _0x4daf3e => {
          const _0x407506 = {
            'name': (_0x4daf3e = JSON.parse(_0x4daf3e)).name,
            'password': _0x4daf3e?.['password'],
            'minigameType': _0x4daf3e.mode,
            'preset': _0x4daf3e.map,
            'config': {}
          },
                _0x12ae83 = ['name', 'password', 'mode', 'map'];

          for (const _0x3c20af in _0x4daf3e) _0x12ae83.includes(_0x3c20af) || (_0x407506.config[_0x3c20af] = _0x4daf3e[_0x3c20af]);

          _0x1161bd.events.callRemote('766365469', JSON.stringify(_0x407506));
        }), (_0x1161bd.events.add('minigames.client.cef.tryjoinLobby', (_0x55472f, _0xd03395 = null) => {
          _0x1161bd.events.callRemote('206400969', _0x55472f, _0xd03395);
        }), _0x1161bd.events.add('minigames.client.cef.tryJoinTeam', (_0x39dcad, _0x6be56 = 'random') => {
          _0x1161bd.events.callRemote('1046350859', _0x39dcad, _0x6be56);
        }), _0x1161bd.events.add('minigames.client.close', () => {
          _0x56fe04.currentLobby ? (_0x5e1340.globalBrowser.emit('miniGames_setPage', 'hud'), _0x5e1340.globalBrowser.emit('miniGames_setWeapons', null), _0x1161bd.gui.cursor.show(false, false), _0x5b91f1 = true) : (_0x5e1340.globalBrowser.toggle('miniGames', {
            'value': false
          }), _0x1161bd.events.callRemote('3342852274'), _0x5b91f1 = false), _0x2a89d6.api.toggleChat(true);
        }), _0x1161bd.events.add('minigames.client.cef.getLobbiesByType', _0x48ba74 => {
          _0x56fe04.currentCategory = _0x48ba74, _0x1161bd.events.callRemote('3334051437', _0x48ba74);
        }));

        const _0x54c8e4 = _0x1ee586 => ({
          'lobbyId': _0x1ee586.lobbyId,
          'name': _0x1ee586.name,
          'description': _0x1ee586.description,
          'enterPrice': _0x1ee586.enterPrice,
          'timeToStart': _0x1ee586.timeToStart ? Math.round((_0x1ee586.timeToStart - Date.now()) / 0x3e8) : 'ожидание',
          'playersAmount': _0x1ee586.playersAmount,
          'maxPlayersAmount': _0x1ee586.maxPlayersAmount,
          'prize': _0x1ee586.prize,
          'image': _0x1ee586.image,
          'mode': _0x1ee586.mode,
          'password': _0x1ee586.password,
          'map': _0x1ee586.map,
          'time': _0x1ee586.time,
          'levelAccess': _0x1ee586.levelAccess,
          'roundAmount': _0x1ee586.roundAmount,
          'creator': _0x1ee586.creator,
          'customFields': _0x1ee586.customFields
        }),
              _0x3ebab6 = _0x507f73 => ({
          'lobbyId': _0x507f73.lobbyId,
          'gamemode': _0x507f73.mode,
          'maxMembers': _0x507f73.maxPlayersAmount,
          'timeToStart': _0x507f73.timeToStart ? Math.round((_0x507f73.timeToStart - Date.now()) / 0x3e8) : 'ожидание',
          'enterPrice': _0x507f73.enterPrice,
          'prize': _0x507f73.prize,
          'bank': _0x507f73.prize,
          'isLeader': _0x507f73.isLeader,
          'teams': _0x507f73.teams,
          'customFields': _0x507f73.customFields
        });

        _0x1161bd.events.add('minigames.client.lobbyStorageResponse', _0x1dc234 => {
          _0x173a9e(_0x1dc234), _0x1dc234 && _0xc7bfc1(JSON.parse(_0x1dc234));
        });

        const _0x173a9e = _0x407dfb => {};

        _0x1161bd.events.add('minigames.client.activeLobbyResponse', _0x1c6f35 => {
          if (!_0x1c6f35) return;

          const _0x18e660 = JSON.parse(_0x1c6f35);

          if ('setActiveLobby' === _0x18e660.action) {
            if ('error' !== _0x18e660.status) {
              if (!_0x3ad966.has(_0x18e660.lobby.lobbyId)) return;

              const _0x30b4e7 = _0x3ad966.get(_0x18e660.lobby.lobbyId);

              _0x3ad966.set(_0x18e660.lobby.lobbyId, { ..._0x30b4e7,
                ..._0x18e660.lobby
              }), _0x5e1340.globalBrowser.emit('miniGames_lobbyLoadResult', {
                'status': 'loaded',
                'lobbyConfig': _0x3ebab6(_0x3ad966.get(_0x18e660.lobby.lobbyId))
              }), _0x4048fa(true, _0x18e660.lobby.lobbyId), _0x56fe04.currentLobby = _0x18e660.lobby.lobbyId;
            } else _0x5e1340.globalBrowser.emit('miniGames_lobbyLoadResult', {
              'status': 'error',
              'message': 'cef.errors.bad-request'
            });
          }

          if ('resetActiveLobby' === _0x18e660.action && (_0x56fe04.currentLobby = null, _0x5b91f1 && _0x5e1340.globalBrowser.toggle('miniGames', {
            'value': false
          }), _0x4048fa(false)), 'updateActiveLobby' === _0x18e660.action) {
            if ('error' !== _0x18e660.status) {
              if (!_0x3ad966.has(_0x18e660.lobby.lobbyId)) return;

              const _0x38c181 = _0x3ad966.get(_0x18e660.lobby.lobbyId);

              _0x3ad966.set(_0x18e660.lobby.lobbyId, { ..._0x38c181,
                ..._0x18e660.lobby
              }), _0x5e1340.globalBrowser.emit('miniGames_lobbyLoadResult', {
                'status': 'loaded',
                'lobbyConfig': _0x3ebab6(_0x3ad966.get(_0x18e660.lobby.lobbyId))
              }), _0x4048fa(true, _0x18e660.lobby.lobbyId);
            } else _0x5e1340.globalBrowser.emit('miniGames_lobbyLoadResult', {
              'status': 'error',
              'message': 'cef.errors.bad-request'
            });
          }
        });

        const _0x3ad966 = new Map(),
              _0x570b43 = {
          'lobbies': []
        },
              _0x56fe04 = {
          'currentCategory': 'all',
          'currentLobby': null,
          'isLeader': false
        },
              _0xc7bfc1 = (_0x3d2315 = {
          'action': 'load'
        }) => {
          if ('load' === _0x3d2315.action) {
            for (const _0x15e023 of _0x3d2315.lobbies) if (_0x15e023.lobbyId) {
              if (_0x3ad966.has(_0x15e023.lobbyId)) {
                const _0x154c5e = _0x3ad966.get(_0x15e023.lobbyId);

                _0x3ad966.set(_0x15e023.lobbyId, { ..._0x154c5e,
                  ..._0x15e023
                });
              } else _0x3ad966.set(_0x15e023.lobbyId, _0x15e023);
            }

            _0x570b43.lobbies = _0x3d2315.lobbies.map(_0xf18eee => _0xf18eee.lobbyId), _0x4a842b(_0x570b43.lobbies);
          }

          if ('update' === _0x3d2315.action) {
            if (!_0x3d2315.lobby.lobbyId) return;
            if (!_0x3ad966.has(_0x3d2315.lobby.lobbyId)) return;

            const _0x2331f6 = _0x3ad966.get(_0x3d2315.lobby.lobbyId);

            _0x3ad966.set(_0x3d2315.lobby.lobbyId, { ..._0x2331f6,
              ..._0x3d2315.lobby
            }), _0x4a842b(_0x570b43.lobbies);
          }

          if ('add' === _0x3d2315.action && (_0x3ad966.set(_0x3d2315.lobby.lobbyId, _0x3d2315.lobby), _0x570b43.lobbies.push(_0x3d2315.lobby.lobbyId), _0x4a842b(_0x570b43.lobbies)), 'delete' === _0x3d2315.action) {
            if (!_0x3ad966.has(_0x3d2315.lobby.lobbyId)) return;

            _0x3ad966.delete(_0x3d2315.lobby.lobbyId);

            const _0x41cc03 = [];

            for (const _0x4e3399 of Array.from(_0x3ad966.values())) _0x41cc03.push(_0x54c8e4(_0x4e3399));

            _0x5e1340.globalBrowser.emit('miniGames_setLobbies', _0x41cc03);
          }
        };

        _0x1161bd.events.add('minigames.client.joinLobbyResult', _0xc2963d => {
          if (_0xc2963d) {
            if ('error' !== (_0xc2963d = JSON.parse(_0xc2963d)).status) {
              if (_0xc2963d.isFullInfoLoad && _0x3ad966.set(_0xc2963d.lobby.lobbyId, _0xc2963d.lobby), !_0x3ad966.has(_0xc2963d.lobby.lobbyId)) return;

              const _0xa494a1 = _0x3ad966.get(_0xc2963d.lobby.lobbyId);

              _0x3ad966.set(_0xc2963d.lobby.lobbyId, { ..._0xa494a1,
                ..._0xc2963d.lobby
              }), _0x5e1340.globalBrowser.emit('miniGames_lobbyLoadResult', {
                'status': 'loaded',
                'lobbyConfig': _0x3ebab6(_0x3ad966.get(_0xc2963d.lobby.lobbyId))
              }), _0x4048fa(true, _0xc2963d.lobby.lobbyId), _0x56fe04.currentLobby = _0xc2963d.lobby.lobbyId;
            } else _0x5e1340.globalBrowser.emit('miniGames_lobbyLoadResult', _0xc2963d);
          }
        }), _0x1161bd.events.add('minigames.client.tryLeaveMinigame', () => {
          _0x1161bd.events.callRemote('60860735');
        }), _0x1161bd.events.add('minigames.client.leaderboardResponse', _0x566afb => {
          _0x566afb && _0x5e1340.globalBrowser.emit('miniGames_setArenaLeaderboard', JSON.parse(_0x566afb));
        }), _0x1161bd.events.add('minigames.client.setPlayerRaiting', _0x5c5e7b => {
          if (!_0x5c5e7b) return;

          const _0x3aa544 = JSON.parse(_0x5c5e7b);

          _0x5e1340.globalBrowser.emit('miniGames_setRaiting', JSON.stringify({
            'solo': _0x3aa544.soloElo,
            'party': _0x3aa544.partyElo
          }));
        }), _0x1161bd.events.add('minigames.client.cef.showLeaderboard', (_0x592da7 = null) => {
          _0x1161bd.events.callRemote('605390896', _0x592da7);
        });

        const _0x4a842b = _0x4c5568 => {
          const _0x39fd06 = [];

          for (const _0x2704d2 of _0x4c5568) {
            if (!_0x3ad966.has(_0x2704d2)) continue;

            const _0x29a9b8 = _0x3ad966.get(_0x2704d2);

            _0x39fd06.push(_0x54c8e4(_0x29a9b8));
          }

          _0x5e1340.globalBrowser.emit('miniGames_setLobbies', _0x39fd06);
        },
              _0x4048fa = (_0x2b7aeb = true, _0x226e52 = null) => {
          if (_0x2b7aeb && _0x3ad966.has(_0x226e52)) {
            const _0x56aa19 = _0x3ad966.get(_0x226e52),
                  _0x5e10e4 = {
              'length': 0x0
            };

            _0x56aa19.teams.forEach(_0x57b908 => _0x57b908.members.forEach(() => _0x5e10e4.length += 0x1)), _0x5e1340.globalBrowser.emit('miniGames_setActiveLobby', {
              'mode': _0x56aa19.mode,
              'players': _0x5e10e4.length,
              'maxPlayers': _0x56aa19.maxPlayersAmount,
              'timeUntilStart': _0x56aa19.timeToStart ? Math.round((_0x56aa19.timeToStart - Date.now()) / 0x3e8) : 'ожидание',
              'path': 'all'
            });
          } else _0x5e1340.globalBrowser.emit('miniGames_setActiveLobby', null);
        };

        _0x1161bd.events.add('minigames.client.sendReport', (_0x497da3 = 'cheating') => {});

        let _0x3d5d5c = null;

        const _0x2e0726 = new _0x1161bd.Vector3(1563.1597900390625, 250.41319274902344, -0x30),
              _0x255852 = 1557.56005859375,
              _0x3af54c = 250.1812286376953,
              _0x18b096 = -49.00602340698242;

        _0x1161bd.events.add('testEndingScene', () => {
          _0x3d5d5c = _0x1161bd.cameras.new('default', _0x2e0726, new _0x1161bd.Vector3(0x0, 0x0, 0x0), 0x54);

          const _0x67cda2 = new _0x1161bd.Vector3(_0x255852, _0x3af54c, _0x18b096);

          _0x3d5d5c.pointAtCoord(_0x67cda2.x, _0x67cda2.y, _0x67cda2.z), _0x3d5d5c.setDofFocusDistanceBias(0.3), _0x3d5d5c.setDofFnumberOfLens(0x4), _0x3d5d5c.setDofMaxNearInFocusDistance(0.5), _0x3d5d5c.setFarDof(0.2), _0x3d5d5c.setDofStrength(0.8), _0x3d5d5c.setNearDof(0.5), _0x1161bd.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0);
        }), _0x1161bd.events.add('render', () => {
          _0x1161bd.game.graphics.drawSpotLight(1564.342529296875, 250.1951446533203, -46.00605010986328, -0.9934834109935116, -0.03169771996186556, -0.3, 0x0, 0xc3, 0xf7, 0xa, 0xa, 0x2, 0x15, 0x3c), _0x1161bd.game.graphics.drawSpotLight(1556.6298828125, 246.94419860839844, -0x2f, 0.22156188163197862, 0.9610900459624391, -0.3, 0xed, 0xf, 0x8d, 0x6, 0x23, 0x8, 0x1e, 0x3c), _0x1161bd.game.graphics.drawSpotLight(1556.3685302734375, 253.6554412841797, -0x2f, 0.2229148167392778, -0.956778418046248, -0.3, 0xed, 0xf, 0x8d, 0x6, 0x23, 0x8, 0x1e, 0x3c);
        });
      },
      0x853e: (_0x557751, _0x2e0fdb, _0x28495f) => {
        'use strict';

        const a0_0x190242 = {
          _0x332d42: 0x535,
          _0x2d3915: 0x235b,
          _0x290ee4: 0x185e,
          _0x29f720: 0x1a5a,
          _0x39f919: 0x185e,
          _0x39389f: 0x1364,
          _0x57ec6e: 0xbdc,
          _0x3266f5: 0x2308,
          _0x25a5ec: 0x3d9,
          _0x2d5b9f: 0x1f30,
          _0x304a9c: 0xf01,
          _0xdff935: 0x1f30,
          _0x280aa6: 0x3d9,
          _0x57b822: 0x16fc,
          _0x874b7a: 0xf01,
          _0x21a5a8: 0x535,
          _0x558cd2: 0x1cd8,
          _0x30bf38: 0x535,
          _0x9643be: 0x52c,
          _0x1bd8b9: 0x535,
          _0x598493: 0x535,
          _0x1164cb: 0xa9d,
          _0x5d255b: 0x3b1,
          _0x1be074: 0xa9d,
          _0x5977ad: 0x1d55,
          _0x4c3e82: 0x2521,
          _0x5390d4: 0x2521,
          _0x476e0b: 0xd79,
          _0x2725ec: 0x1a4a,
          _0x3983: 0x1d66,
          _0xb1fa85: 0x1870,
          _0x288682: 0x91b
        };

        _0x28495f.r(_0x2e0fdb);

        var _0x2ae836 = _0x28495f(0x16a21),
            _0x38dfa4 = _0x28495f(0x161cd);

        const {
          removeGolfFloatingScaleform: _0x38ac30,
          removeGolfInstructionalButtons: _0xda462f,
          removeGolfScaleform: _0x18d358,
          disableGolfRadar: _0x4f3393
        } = _0x28495f(0xee76);

        let _0x46de33 = [],
            _0x56b9d5 = [];

        function _0x169510(_0x264822) {
          if (!_0x28495f.g.freeCamera) return _0x2ae836.api.chatPush('Камера f5 не активна!');

          let _0x539b8a = _0x28495f.g.freeCamera.getDirection(),
              _0x39d92a = _0x28495f.g.freeCamera.getCoord();

          const _0x26451e = new _0x38dfa4.Vector3(_0x539b8a.x * _0x264822 + _0x39d92a.x, _0x539b8a.y * _0x264822 + _0x39d92a.y, _0x539b8a.z * _0x264822 + _0x39d92a.z),
                _0x464fc4 = _0x2ae836.api.testPointToPoint(_0x39d92a, _0x26451e, [0x1, 0x10]);

          return undefined === _0x464fc4 ? 'undefined' : _0x464fc4;
        }

        _0x38dfa4.events.add('playerCommand', _0x51efca => {
          const a0_0x53befb = {
            _0x45957f: 0x535,
            _0x19e890: 0x13b0,
            _0x4e5fc5: 0x17f
          };
          if (!_0x2ae836.api.getAdmin(_0x38dfa4.players.local) && _0x2ae836.api.getAdmin(_0x38dfa4.players.local) < 0x1 && !_0x38dfa4.players.local.specials.f5) return;

          const _0x7e4296 = _0x51efca.split(/[ ]+/),
                _0x13a548 = _0x7e4296[0x0];

          if (_0x7e4296.shift(), 'campoint1' === _0x13a548.toLowerCase()) {
            if (!_0x28495f.g.freeCamera) return _0x2ae836.api.chatPush('Камера f5 не активна!');

            let _0x2fd75b = _0x169510(0x3e8),
                _0x264fff = _0x28495f.g.freeCamera.getCoord();

            _0x46de33 = [{
              'x': _0x2fd75b.position.x,
              'y': _0x2fd75b.position.y,
              'z': _0x2fd75b.position.z
            }, {
              'x': _0x264fff.x,
              'y': _0x264fff.y,
              'z': _0x264fff.z
            }];
          }

          if ('campoint2' === _0x13a548.toLowerCase()) {
            if (!_0x28495f.g.freeCamera) return _0x2ae836.api.chatPush('Камера f5 не активна!');

            let _0x3e11cf = _0x169510(0x3e8),
                _0x1a96b8 = _0x28495f.g.freeCamera.getCoord();

            _0x56b9d5 = [{
              'x': _0x3e11cf.position.x,
              'y': _0x3e11cf.position.y,
              'z': _0x3e11cf.position.z
            }, {
              'x': _0x1a96b8.x,
              'y': _0x1a96b8.y,
              'z': _0x1a96b8.z
            }];
          }

          if ('startcamera' === _0x13a548.toLowerCase()) {
            if (_0x28495f.g.freeCamera) return _0x2ae836.api.chatPush('Отключите F5 камеру!');
            if (!_0x7e4296) return _0x2ae836.api.chatPush('/startcamera <Длительность> <интерфейс> <fov1> <fov2>');
            if (!_0x46de33 || !_0x56b9d5) return;

            let _0xdc25ca = _0x7e4296[0x0],
                _0x4813c3 = _0x7e4296[0x1],
                _0x417f13 = _0x7e4296[0x2] || 0x28,
                _0x580017 = _0x7e4296[0x3] || 0x28;

            if (parseInt(_0xdc25ca) < 0x0) return _0x2ae836.api.chatPush('Длительность должно быть больше 0!');
            'false' == _0x4813c3 ? (_0x2ae836.api.toggleRadar(false), _0x2ae836.api.toggleChat(false), _0x2ae836.api.toggleHud(false), _0x38ac30(), _0xda462f(), _0x18d358(), _0x4f3393()) : (_0x2ae836.api.toggleRadar(true), _0x2ae836.api.toggleChat(true), _0x2ae836.api.toggleHud(true));

            let _0x1f445f = _0x38dfa4.cameras.new('default', new _0x38dfa4.Vector3(_0x46de33[0x1].x, _0x46de33[0x1].y, _0x46de33[0x1].z), new _0x38dfa4.Vector3(0x0, 0x0, 0x0), parseInt(_0x417f13)),
                _0x174ddf = _0x38dfa4.cameras.new('default', new _0x38dfa4.Vector3(_0x56b9d5[0x1].x, _0x56b9d5[0x1].y, _0x56b9d5[0x1].z), new _0x38dfa4.Vector3(0x0, 0x0, 0x0), parseInt(_0x580017));

            _0x1f445f.pointAtCoord(_0x46de33[0x0].x, _0x46de33[0x0].y, _0x46de33[0x0].z), _0x174ddf.pointAtCoord(_0x56b9d5[0x0].x, _0x56b9d5[0x0].y, _0x56b9d5[0x0].z), _0x38dfa4.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0x174ddf.setActiveWithInterp(_0x1f445f.handle, parseInt(_0xdc25ca), 0x0, 0x0), _0x38dfa4.game.sleep(parseInt(_0xdc25ca)).then(() => {
              _0x38dfa4.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x2ae836.api.toggleRadar(true), _0x2ae836.api.toggleChat(true), _0x2ae836.api.toggleHud(true), _0x1f445f.destroy(), _0x174ddf.destroy();
            });
          }
        });
      },
      0x4c17: (_0x521011, _0x57aea2, _0x180be4) => {
        'use strict';

        const a0_0x52b961 = {
          _0x1d951c: 0x1e94,
          _0x50b3a1: 0x1c55,
          _0x3463f1: 0x13f4,
          _0x40e7dc: 0x1157,
          _0x273107: 0x2c5,
          _0x51c6fc: 0x1d66,
          _0x222e21: 0x1c55,
          _0x5a4e2a: 0x1e94,
          _0x3defb4: 0x1d66,
          _0x58de14: 0x1992,
          _0x5349fc: 0x7aa
        },
              a0_0x204cb5 = {
          _0x3c58d3: 0x535,
          _0x30d715: 0x1985,
          _0x17901c: 0x230b,
          _0x20a1ac: 0x2577,
          _0x11669c: 0x1d66,
          _0xb42c7b: 0x2577,
          _0x228cc9: 0x2577,
          _0x235377: 0x1d66,
          _0x31859d: 0x2577
        },
              a0_0x3b3b3b = {
          _0x1425af: 0x14d2,
          _0x226ecb: 0x1a5
        },
              a0_0x498c86 = {
          _0x3724ca: 0x235b
        },
              a0_0x4e2e3c = {
          _0x5116a8: 0x535,
          _0x540486: 0x253d,
          _0x353f39: 0x242c,
          _0x393e08: 0x23c9,
          _0x329139: 0x279,
          _0x5bfc7c: 0x1d8a,
          _0x36c2da: 0x1b17,
          _0x3238e4: 0xd7b,
          _0x307665: 0x7f7,
          _0x197b7a: 0xd7b,
          _0x42cadd: 0x2288
        };

        _0x180be4.r(_0x57aea2);

        var _0x123ed3 = _0x180be4(0x16a21),
            _0x1189a9 = _0x180be4(0xd194),
            _0x13664b = _0x180be4(0x1d7e),
            _0x101610 = _0x180be4(0x161cd);

        const _0x38695f = _0x101610.players.local,
              _0x12a2c4 = 'BINOCULARS';

        let _0x2276f3,
            _0xc230f0,
            _0x336fbc = 37.5;

        _0x180be4.g.binocularsEnabled = false;
        let _0x5b47dd = false;
        _0x101610.events.add('click', (_0x229979, _0x4847a0, _0xedf25b, _0x21d9da, _0x39eace, _0x4815c3, _0x132af9, _0x50189d) => {
          !_0x123ed3.api.isAuthed() || _0x180be4.g.interfaces.chat || _0x101610.gui.cursor.visible || _0x38695f.isCuffed() || _0x38695f.isFalling() || _0x38695f.isInAir() || _0x38695f.isDucking() || _0x38695f.isUpsidedown() || _0x38695f.isSwimming() || _0x38695f.isSwimmingUnderWater() || _0x38695f.isDead() || 'right' === _0x21d9da && 'down' == _0xedf25b && (_0x180be4.g.binocularsEnabled ? _0x101610.events.call('binoculars.stop') : !_0x180be4.g.binocularsEnabled && [0x19d, 0x20e].includes(_0x38695f.activeItemId) && _0x101610.events.call('binoculars.start'));
        }), _0x101610.events.add('binoculars.start', async () => {
          if (!_0x123ed3.api.isAuthed() || _0x5b47dd || _0x180be4.g.binocularsEnabled) return;
          if (_0x38695f.vehicle) return;
          _0x5b47dd = true;

          try {
            await _0x123ed3.api.taskPlayAnim('oddjobs@hunter', 'binoculars_loop', 0x31, true, false, true, 'binoculars'), await _0x123ed3.api.requestScaleformMovie(_0x12a2c4), _0xc230f0 = new _0x1189a9.Scaleform(_0x12a2c4);
          } catch (_0x52ce3e) {
            _0x123ed3.api.sendError();
          } finally {
            _0x5b47dd = false;
          }

          _0x123ed3.api.toggleHud(false), _0x123ed3.api.toggleChat(false), _0x123ed3.api.toggleRadar(false), _0x123ed3.api.invokeNative('SET_TIMECYCLE_MODIFIER', 'default'), _0x123ed3.api.invokeNative('SET_TIMECYCLE_MODIFIER_STRENGTH', 0.3);

          const _0x1f74f4 = _0x13664b.X.getRot(0x2).z;

          _0x2276f3 = _0x101610.cameras.new('DEFAULT_SCRIPTED_FLY_CAMERA', _0x38695f.position, new _0x101610.Vector3(0x0, 0x0, 0x0), _0x336fbc), _0x2276f3.attachTo(_0x38695f.handle, 0.1, 0.35, 0.75, true), _0x2276f3.setRot(0x0, 0x0, _0x1f74f4, 0x2), _0x2276f3.setFov(_0x336fbc), _0x38695f.setHeading(_0x1f74f4), _0x101610.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), _0xc230f0.callFunction('SET_CAM_LOGO', 0x0), _0x180be4.g.binocularsEnabled = true;
        }), _0x101610.events.add('binoculars.stop', async _0x4decf9 => {
          if (!_0x4decf9 && !_0x180be4.g.binocularsEnabled) return;
          _0x180be4.g.binocularsEnabled = false, _0x336fbc = 37.5, _0x123ed3.api.invokeNative('CLEAR_TIMECYCLE_MODIFIER'), _0x101610.game.cam.renderScriptCams(false, false, 0x0, false, false, 0x0), _0xc230f0 && (_0xc230f0.dispose(), _0xc230f0 = undefined), _0x2276f3.destroy(), _0x101610.game.graphics.setNightvision(false), _0x101610.game.graphics.setSeethrough(false), _0x101610.attachments.removeLocal('binoculars');

          const _0x29d8df = await _0x123ed3.api.taskPlayAnim('oddjobs@hunter', 'binoculars_outro', 0x32, false, false);

          _0x101610.game.sleep(0x3e8 * _0x29d8df).then(() => {
            _0x101610.game.task.clearPedSecondaryTask(_0x101610.players.local.handle);
          }), _0x123ed3.api.toggleHud(true), _0x123ed3.api.toggleChat(true), _0x123ed3.api.toggleRadar(true);
        }), _0x101610.events.add('playerDeath2', _0x54fc20 => {
          _0x54fc20 === _0x38695f && _0x101610.events.call('binoculars.stop');
        }), _0x101610.events.add('render', () => {
          if (!_0x180be4.g.binocularsEnabled) return;
          if (_0x38695f.vehicle) return _0x180be4.g.binocularsEnabled = false, _0x101610.events.call('binoculars.stop', true);
          _0x101610.game.controls.disableAllControlActions(0x0), (_0x2cfbed(_0x2276f3, 0.015384615384615385 * (_0x336fbc - 0x5)), _0x2bc554(_0x2276f3), _0x432bb3(), _0xc230f0.render2D(0.5, 0.5, 0x1, 0x1));
        });

        const _0x432bb3 = () => {
          _0x123ed3.api.invokeNative('HIDE_HUD_AND_RADAR_THIS_FRAME'), _0x101610.game.ui.hideHudComponentThisFrame(0x1), _0x101610.game.ui.hideHudComponentThisFrame(0x2), _0x101610.game.ui.hideHudComponentThisFrame(0x3), _0x101610.game.ui.hideHudComponentThisFrame(0x4), _0x101610.game.ui.hideHudComponentThisFrame(0x6), _0x101610.game.ui.hideHudComponentThisFrame(0x7), _0x101610.game.ui.hideHudComponentThisFrame(0x8), _0x101610.game.ui.hideHudComponentThisFrame(0x9), _0x101610.game.ui.hideHudComponentThisFrame(0xd), _0x101610.game.ui.hideHudComponentThisFrame(0xb), _0x101610.game.ui.hideHudComponentThisFrame(0xc), _0x101610.game.ui.hideHudComponentThisFrame(0xf), _0x101610.game.ui.hideHudComponentThisFrame(0x12), _0x101610.game.ui.hideHudComponentThisFrame(0x13);
        },
              _0x2cfbed = (_0x85c142, _0x3e9b0d) => {
          const _0x515782 = _0x101610.game.controls.getDisabledControlNormal(0x0, 0xdc),
                _0x2dbdf8 = _0x101610.game.controls.getDisabledControlNormal(0x0, 0xdd),
                _0x44f677 = _0x85c142.getRot(0x2);

          if (0x0 != _0x515782 || 0x0 != _0x2dbdf8) {
            const _0xfab5c1 = _0x44f677.z + -0x1 * _0x515782 * 0x8 * (_0x3e9b0d + 0.1),
                  _0x1ad666 = _0x123ed3.api.clamp(_0x44f677.x + -0x1 * _0x2dbdf8 * 0x8 * (_0x3e9b0d + 0.1), -89.5, 89.5);

            _0x38695f.setHeading(_0xfab5c1), _0x85c142.setRot(_0x1ad666, 0x0, _0xfab5c1, 0x2), _0x13664b.X.setRot(_0x1ad666, 0x0, _0xfab5c1, 0x2);
          }
        },
              _0x2bc554 = _0x36d8bc => {
          if (_0x38695f.vehicle) {
            _0x101610.game.controls.isDisabledControlJustPressed(0x0, 0x11) && (_0x336fbc = Math.max(_0x336fbc - 0xa, 0x5)), _0x101610.game.controls.isDisabledControlJustPressed(0x0, 0x10) && (_0x336fbc = Math.min(_0x336fbc + 0xa, 0x46));

            const _0x578745 = _0x36d8bc.getFov();

            Math.abs(_0x336fbc - _0x578745) < 0.1 && (_0x336fbc = _0x578745), _0x36d8bc.setFov(_0x578745 + 0.05 * (_0x336fbc - _0x578745));
          } else {
            _0x101610.game.controls.isDisabledControlJustPressed(0x0, 0xf1) && (_0x336fbc = Math.max(_0x336fbc - 0xa, 0x5)), _0x101610.game.controls.isDisabledControlJustPressed(0x0, 0xf2) && (_0x336fbc = Math.min(_0x336fbc + 0xa, 0x46));

            const _0x17915e = _0x36d8bc.getFov();

            Math.abs(_0x336fbc - _0x17915e) < 0.1 && (_0x336fbc = _0x17915e), _0x36d8bc.setFov(_0x17915e + 0.05 * (_0x336fbc - _0x17915e));
          }
        };
      },
      0xb60b: (_0x54783e, _0x1f101e, _0x1bb835) => {
        'use strict';

        _0x1bb835.r(_0x1f101e);

        var _0x5baec9 = _0x1bb835(0x16a21),
            _0x3e09ad = _0x1bb835(0x161cd);

        _0x3e09ad.players.local, (_0x3e09ad.events.add('firewords.start', async (_0x41da1a, _0x315c2f = 0x18a) => {
          const _0x4fbbcc = _0x3e09ad.objects.atRemoteId(_0x41da1a);

          if (!_0x3e09ad.objects.exists(_0x4fbbcc)) return;
          const _0x5b0550 = 'scr_indep_fireworks';

          let _0x166750,
              _0x20de8b = 0x5,
              _0x20cc9e = 0x7d0;

          switch (_0x315c2f) {
            case 0x18a:
              _0x166750 = 'scr_indep_firework_starburst', _0x20de8b = 0x1, _0x20cc9e = 0xdac;
              break;

            case 0x18b:
              _0x166750 = 'scr_indep_firework_starburst', _0x20cc9e = 0x9c4;
              break;

            case 0x18c:
              _0x166750 = 'scr_indep_firework_trailburst', _0x20cc9e = 0x4e2;
              break;

            case 0x18d:
              _0x166750 = 'scr_indep_firework_shotburst';
          }

          if (_0x166750) for (await _0x5baec9.api.requestNamedPtfxAsset(_0x5b0550), await _0x3e09ad.game.sleep(0x1388); _0x20de8b > 0x0 && _0x3e09ad.objects.exists(_0x4fbbcc);) {
            _0x3e09ad.game.graphics.setPtfxAssetNextCall(_0x5b0550);

            const _0x3b58ad = _0x3e09ad.game.graphics.startParticleFxLoopedAtCoord(_0x166750, _0x4fbbcc.position.x, _0x4fbbcc.position.y, _0x4fbbcc.position.z, 0x0, 0x0, 0x0, 2.25, false, false, false, false);

            _0x3e09ad.game.graphics.setParticleFxLoopedColour(_0x3b58ad, 0x1 * Math.random(), 0x1 * Math.random(), 0x1 * Math.random(), false), _0x20de8b -= 0x1, await _0x3e09ad.game.sleep(_0x20cc9e), _0x3b58ad && _0x3e09ad.game.graphics.stopParticleFxLooped(_0x3b58ad, true);
          }
        }), _0x3e09ad.events.addDataHandler('fireworkObject', (_0x4a353f, _0x4071ff) => {
          'object' == _0x4a353f.type && null != _0x4a353f.remoteId && _0x3e09ad.events.call('firewords.start', _0x4a353f.remoteId, _0x4071ff);
        }));
      },
      0x2123: (_0x3a0ee7, _0x415cd0, _0x27050b) => {
        _0x27050b(0xe8cc), _0x27050b(0xb60b), _0x27050b(0x4c17), _0x27050b(0x1435f), _0x27050b(0x1091a), _0x27050b(0x6b47);
      },
      0x6b47: (_0x226e36, _0x46c25f, _0x2b8aa7) => {
        'use strict';

        const a0_0x356378 = {
          _0x1aa9cb: 0xdbd,
          _0x2e3a21: 0x15c7,
          _0x3a39e1: 0xdc3
        },
              a0_0x5db8c8 = {
          _0x5963e3: 0xdbd,
          _0x4035f9: 0x15c7,
          _0x585d9e: 0x2244
        },
              a0_0x47435d = {
          _0x21a36f: 0x253d,
          _0x193be9: 0x4b9,
          _0x1bd937: 0xe90,
          _0x2e4bc5: 0x279,
          _0x1602a5: 0x1401,
          _0x170a81: 0x2288,
          _0x19cea8: 0x1d48,
          _0x513833: 0x1d66,
          _0x52b0df: 0x1992,
          _0x421432: 0x1d66,
          _0x234064: 0x1b17,
          _0xb2bdf: 0x115c,
          _0xabb8cf: 0x1d48,
          _0x43bb6a: 0x14ce,
          _0x6b7f8e: 0x535,
          _0xff3bf1: 0x1b65,
          _0x150743: 0x2244,
          _0x7a113c: 0xffb,
          _0x37ee9e: 0x14d2,
          _0x14289d: 0x1da5,
          _0x24d787: 0x19e1,
          _0x5bfa29: 0xffb,
          _0x4d93cc: 0xdc3,
          _0x2df310: 0x535,
          _0x3a5874: 0x1f30,
          _0x1d8e01: 0x1f30,
          _0x17a0aa: 0x4be,
          _0x43f858: 0xf81,
          _0x1f8fd7: 0xdac,
          _0x51013f: 0xf81,
          _0x20fff7: 0xef0,
          _0x24e27c: 0xf81,
          _0xcbda52: 0x11d7,
          _0x19faa6: 0xf81,
          _0x322e35: 0xf81,
          _0x25f922: 0x11d7,
          _0x21e060: 0xef0,
          _0x403db6: 0xef0,
          _0x28c80e: 0x11d7,
          _0x4f861f: 0xdac,
          _0x16aa57: 0xf81,
          _0xb70e57: 0xf81,
          _0x28fc67: 0xef0,
          _0x53d37a: 0xf81,
          _0xca2de0: 0xf81,
          _0x554449: 0xdac,
          _0x4cae79: 0x4be,
          _0x3d5fa6: 0xdac,
          _0x112d0b: 0x11d7,
          _0x4852fe: 0x1d55,
          _0x598dae: 0x903,
          _0x4e464d: 0xf81,
          _0x3b7859: 0xf81,
          _0x1d6ec3: 0xf99,
          _0x6e01ef: 0xf81,
          _0x4753f3: 0x1c46,
          _0x589321: 0xf81,
          _0x4ea8c0: 0xf81,
          _0x52999a: 0x11d7,
          _0x27f691: 0x27a,
          _0x1b3119: 0xf81,
          _0x410c35: 0xf81,
          _0x2e716f: 0xdac,
          _0x12dfee: 0xf81,
          _0x32b97d: 0x27a,
          _0x3ec239: 0xf81,
          _0xf0c406: 0x15d2,
          _0x30a58b: 0xf81,
          _0x29fee7: 0x11d7,
          _0x4a1d04: 0xf81,
          _0x43aef4: 0xf81,
          _0x3ed158: 0x27a,
          _0x4cb693: 0x15d2,
          _0x1f3102: 0x1481,
          _0x1fe3a9: 0xf2f,
          _0x424ba2: 0x37f,
          _0x50a15f: 0x169e,
          _0x483564: 0x45b,
          _0x21928b: 0x1537,
          _0x239676: 0x2161,
          _0x250e68: 0x1d66,
          _0x2391e2: 0x89f,
          _0x4a3ac7: 0x15d2,
          _0x52524d: 0xf81,
          _0x5b32ae: 0x1d66,
          _0x518fcf: 0x1e35,
          _0x34d8de: 0x1537,
          _0x4e2ed4: 0xf81,
          _0x562c84: 0xf81,
          _0x207252: 0xf81,
          _0x4283b9: 0x1d66,
          _0x47d83a: 0x1e35,
          _0x4cfe2d: 0xf81,
          _0x5e34dc: 0x1537,
          _0x13ded9: 0x1c46,
          _0x4ba059: 0x89f,
          _0x25b5dd: 0x27a,
          _0x94daa9: 0xf81,
          _0x1a8b55: 0xf81,
          _0x1de1e9: 0x1c46,
          _0x1b77a6: 0x15d2,
          _0x5f308c: 0xf2f,
          _0x2d292d: 0x1f00,
          _0x2ae13b: 0xf81,
          _0x51aedc: 0xf81,
          _0x305e0d: 0xf81,
          _0x3f045c: 0x645,
          _0x50a0de: 0xf81,
          _0x1e0b47: 0x89f,
          _0x4152f3: 0x645,
          _0x194edf: 0xf81
        };

        _0x2b8aa7.r(_0x46c25f);

        var _0x465fb1 = _0x2b8aa7(0x16a21),
            _0x4a0abc = _0x2b8aa7(0x161cd);

        const _0x523c9c = _0x4a0abc.players.local,
              _0x463e7a = 0x0,
              _0x51f01e = 0x1,
              _0x5c7c49 = 0x2,
              _0x4ccd78 = 0x3,
              _0x5a7b56 = 0x4,
              _0x122d2d = {
          'enabled': false,
          'currentZoneType': false,
          'lastFindTime': 0x0,
          'currentTreasurePoints': [],
          'scannerData': {
            'circleScale': 0x0,
            'scannerScale': 0x0,
            'scannerState': _0x463e7a,
            'circleR': 0xff,
            'circleG': 0xff,
            'circleB': 0xff,
            'circleA': 0xff,
            '_circleR': 0x96,
            '_circleG': 0xff,
            '_circleB': 0x96
          },
          'frameTime': Date.now(),
          'circleScaleMultiplier': 1.25
        };
        _0x4a0abc.events.add('render', () => {
          if (_0x465fb1.api.isAuthed() && (0x243 != _0x523c9c.activeItemId || _0x122d2d.enabled || _0x523c9c.vehicle || _0x523c9c.isOnVehicle() || _0x523c9c.isFalling() || _0x523c9c.isSwimming() || _0x523c9c.isRagdoll() || _0x523c9c.isAttached() ? 0x243 != _0x523c9c.activeItemId && _0x122d2d.enabled && (_0x122d2d.enabled = false, _0x465fb1.api.stopAnim()) : _0x122d2d.enabled = true, _0x122d2d.enabled)) {
            if (_0x4a0abc.game.controls.disableControlAction(0x0, 0x15, true), _0x4a0abc.game.controls.disableControlAction(0x0, 0x16, true), _0x4a0abc.game.controls.disableControlAction(0x0, 0x17, true), _0x4a0abc.game.controls.disableControlAction(0x0, 0x18, true), _0x4a0abc.game.controls.disableControlAction(0x0, 0x19, true), _0x523c9c.vehicle || _0x523c9c.isFalling() || _0x523c9c.isSwimming() || _0x523c9c.isRagdoll() || _0x523c9c.isAttached()) return _0x122d2d.enabled = false, _0x4a0abc.inventory.pocketItem(), void _0x465fb1.api.stopAnim();
            if (_0x122d2d.currentZoneType && _0x122d2d.lastFindTime + 0x2710 < Date.now()) return _0x4a0abc.events.callRemote('1117494642', _0x122d2d.currentZoneType), void (_0x122d2d.lastFindTime = Date.now());

            if (_0x122d2d.currentTreasurePoints.length) {
              let _0x1df547 = -0x1,
                  _0x2dc640 = 0x32;

              for (const _0x201df0 of _0x122d2d.currentTreasurePoints) {
                const _0x519af3 = _0x465fb1.api.vdist2(_0x523c9c.position, _0x201df0.position, false);

                _0x519af3 < _0x2dc640 && (_0x1df547 = _0x201df0, _0x2dc640 = _0x519af3);
              }

              if (-0x1 === _0x1df547) return;
              _0x2dc640 < 0x2 ? (_0x122d2d.scannerData.circleScale = 0x0, _0x122d2d.scannerData.scannerScale = 0x0, _0x122d2d.scannerData.scannerState = _0x5a7b56) : _0x2dc640 < 0x4 ? (_0x122d2d.scannerData.circleScale2 = 0.35, _0x122d2d.scannerData.scannerScale = 4.5, _0x122d2d.scannerData.scannerState = _0x4ccd78) : _0x2dc640 < 0x5 ? (_0x122d2d.scannerData.circleScale2 = 0.4, _0x122d2d.scannerData.scannerScale = 3.75, _0x122d2d.scannerData.scannerState = _0x4ccd78) : _0x2dc640 < 6.5 ? (_0x122d2d.scannerData.circleScale2 = 0.425, _0x122d2d.scannerData.scannerScale = 0x3, _0x122d2d.scannerData.scannerState = _0x4ccd78) : _0x2dc640 < 7.5 ? (_0x122d2d.scannerData.circleScale2 = 0.45, _0x122d2d.scannerData.scannerScale = 2.5, _0x122d2d.scannerData.scannerState = _0x4ccd78) : _0x2dc640 < 0xa ? (_0x122d2d.scannerData.circleScale2 = 0.5, _0x122d2d.scannerData.scannerScale = 1.75, _0x122d2d.scannerData.scannerState = _0x5c7c49) : _0x2dc640 < 12.5 ? (_0x122d2d.scannerData.circleScale2 = 0.75, _0x122d2d.scannerData.scannerScale = 1.25, _0x122d2d.scannerData.scannerState = _0x5c7c49) : _0x2dc640 < 0xf ? (_0x122d2d.scannerData.circleScale2 = 0x1, _0x122d2d.scannerData.scannerScale = 0x1, _0x122d2d.scannerData.scannerState = _0x5c7c49) : _0x2dc640 < 0x14 ? (_0x122d2d.scannerData.circleScale2 = 1.25, _0x122d2d.scannerData.scannerScale = 0.875, _0x122d2d.scannerData.scannerState = _0x5c7c49) : _0x2dc640 < 0x19 ? (_0x122d2d.scannerData.circleScale2 = 1.5, _0x122d2d.scannerData.scannerScale = 0.75, _0x122d2d.scannerData.scannerState = _0x51f01e) : _0x2dc640 < 0x1e ? (_0x122d2d.scannerData.circleScale2 = 0x2, _0x122d2d.scannerData.scannerScale = 0.5, _0x122d2d.scannerData.scannerState = _0x51f01e) : (_0x122d2d.scannerData.circleScale = 0x0, _0x122d2d.scannerData.scannerScale = 0x0, _0x122d2d.scannerData.scannerState = _0x463e7a);

              const _0x4eb27b = new _0x4a0abc.Vector3(_0x523c9c.position.x + 0.75 * _0x523c9c.getForwardX(), _0x523c9c.position.y + 0.75 * _0x523c9c.getForwardY(), _0x523c9c.position.z - 0.8),
                    _0x5c904b = _0x122d2d.scannerData.scannerState !== _0x463e7a && _0x122d2d.scannerData.scannerState !== _0x5a7b56;

              if (_0x122d2d.scannerData.scannerState === _0x463e7a) _0x122d2d.scannerData.circleR = 0x96, _0x122d2d.scannerData.circleG = 0xff, _0x122d2d.scannerData.circleB = 0x96, _0x122d2d.scannerData._circleR = _0x122d2d.scannerData.circleR, _0x122d2d.scannerData._circleG = _0x122d2d.scannerData.circleG, _0x122d2d.scannerData._circleB = _0x122d2d.scannerData.circleB;else {
                if (_0x122d2d.scannerData.scannerState === _0x51f01e) _0x122d2d.scannerData.circleScale += _0x122d2d.scannerData.scannerScale, _0x122d2d.scannerData.circleR = 0x96, _0x122d2d.scannerData.circleG = 0xff, _0x122d2d.scannerData.circleB = 0x96;else {
                  if (_0x122d2d.scannerData.scannerState === _0x5c7c49) _0x122d2d.scannerData.circleScale += _0x122d2d.scannerData.scannerScale, _0x122d2d.scannerData.circleR = 0xff, _0x122d2d.scannerData.circleG = 0xff, _0x122d2d.scannerData.circleB = 0x64;else {
                    if (_0x122d2d.scannerData.scannerState === _0x4ccd78) _0x122d2d.scannerData.circleScale += _0x122d2d.scannerData.scannerScale, _0x122d2d.scannerData.circleR = 0xfa, _0x122d2d.scannerData.circleG = 0x96, _0x122d2d.scannerData.circleB = 0x96;else {
                      if (_0x122d2d.scannerData.scannerState === _0x5a7b56) {
                        _0x122d2d.scannerData.circleR = 0xff, _0x122d2d.scannerData.circleG = 0x64, _0x122d2d.scannerData.circleB = 0x64, Date.now() > _0x122d2d.frameTime + 0x7d && (_0x122d2d.frameTime = Date.now(), _0x4a0abc.game.audio.playSoundFrontend(-0x1, 'ATM_WINDOW', 'HUD_FRONTEND_DEFAULT_SOUNDSET', false), _0x4a0abc.game.audio.playSoundFrontend(-0x1, 'BOATS_PLANES_HELIS_BOOM', 'MP_LOBBY_SOUNDS', false)), _0x122d2d.scannerData.circleA = 0x96;

                        let _0xec0238 = 1.2 * _0x122d2d.circleScaleMultiplier;

                        _0x4a0abc.game.graphics.drawMarker(0x1, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, _0xec0238, _0xec0238, 0.2, _0x122d2d.scannerData.circleR, _0x122d2d.scannerData.circleG, _0x122d2d.scannerData.circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false), _0x4a0abc.game.graphics.drawMarker(0x6, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x10e, 0x0, 0x0, _0xec0238, 0.1, _0xec0238, _0x122d2d.scannerData.circleR, _0x122d2d.scannerData.circleG, _0x122d2d.scannerData.circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false), _0x122d2d.scannerData.circleA = 0xc8, _0xec0238 = 0.7 * _0x122d2d.circleScaleMultiplier, _0x4a0abc.game.graphics.drawMarker(0x1, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, _0xec0238, _0xec0238, 0.2, _0x122d2d.scannerData.circleR, _0x122d2d.scannerData.circleG, _0x122d2d.scannerData.circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false), _0x4a0abc.game.graphics.drawMarker(0x6, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x10e, 0x0, 0x0, _0xec0238, 0.1, _0xec0238, _0x122d2d.scannerData.circleR, _0x122d2d.scannerData.circleG, _0x122d2d.scannerData.circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false), _0x122d2d.scannerData.circleA = 0xff, _0xec0238 = 0.2 * _0x122d2d.circleScaleMultiplier, _0x4a0abc.game.graphics.drawMarker(0x1, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, _0xec0238, _0xec0238, 0.2, _0x122d2d.scannerData.circleR, _0x122d2d.scannerData.circleG, _0x122d2d.scannerData.circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false), _0x4a0abc.game.graphics.drawMarker(0x6, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x10e, 0x0, 0x0, _0xec0238, 0.1, _0xec0238, _0x122d2d.scannerData.circleR, _0x122d2d.scannerData.circleG, _0x122d2d.scannerData.circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false);
                      }
                    }
                  }
                }
              }

              if (_0x5c904b) {
                _0x122d2d.scannerData.circleScale > 0x64 && (_0x122d2d.scannerData.circleScale -= 0x64, _0x122d2d.scannerData._circleR = _0x122d2d.scannerData.circleR, _0x122d2d.scannerData._circleG = _0x122d2d.scannerData.circleG, _0x122d2d.scannerData._circleB = _0x122d2d.scannerData.circleB, _0x4a0abc.game.audio.playSoundFrontend(-0x1, 'ATM_WINDOW', 'HUD_FRONTEND_DEFAULT_SOUNDSET', false));

                const _0x26b845 = _0x122d2d.scannerData.circleScale % 0x64 / 0x64 * _0x122d2d.circleScaleMultiplier;

                _0x122d2d.scannerData.circleA = Math.floor(0xff - _0x122d2d.scannerData.circleScale % 0x64 / 0x64 * 0x9b), _0x4a0abc.game.graphics.drawMarker(0x1, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, _0x26b845, _0x26b845, 0.2, _0x122d2d.scannerData._circleR, _0x122d2d.scannerData._circleG, _0x122d2d.scannerData._circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false), _0x4a0abc.game.graphics.drawMarker(0x6, _0x4eb27b.x, _0x4eb27b.y, _0x4eb27b.z, 0x0, 0x0, 0x0, 0x10e, 0x0, 0x0, _0x26b845, 0.1, _0x26b845, _0x122d2d.scannerData._circleR, _0x122d2d.scannerData._circleG, _0x122d2d.scannerData._circleB, _0x122d2d.scannerData.circleA, false, false, 0x2, false, null, null, false);
              }
            }
          }
        }), _0x4a0abc.events.add('time.every02Sec', () => {
          _0x122d2d.enabled && !_0x523c9c.isPlayingAnim('mini@golfai', 'wood_idle_a', 0x3) && _0x465fb1.api.taskPlayAnim('mini@golfai', 'wood_idle_a', 0x31, true, false, false);
        }), _0x4a0abc.events.add('metaldetector.foundPoint', (_0x59b208 = []) => {
          _0x122d2d.currentTreasurePoints = _0x59b208;
        }), _0x4a0abc.events.add('playerPolygonEnter', (_0x47002e, _0x4f0f52) => {
          'treasure' === _0x4f0f52.zoneType && (_0x122d2d.currentZoneType = _0x4f0f52.name);
        }), _0x4a0abc.events.add('playerPolygonExit', (_0x5ee024, _0x725bdd) => {
          'treasure' === _0x725bdd.zoneType && (_0x122d2d.currentZoneType = false, _0x122d2d.currentTreasurePoints = []);
        });
      },
      0x66f9: (_0x1476d3, _0x44bbd9, _0x42ee54) => {
        'use strict';

        const a0_0x2f87dd = {
          _0x16c25c: 0x1ab6,
          _0x533f93: 0x2594
        },
              a0_0x558076 = {
          _0x4e632f: 0x15e0,
          _0x324746: 0xd68,
          _0x242221: 0x2606,
          _0x1919bf: 0x1d55,
          _0x266e0c: 0x700,
          _0x59fcae: 0x17b7,
          _0x5defb2: 0x17b7,
          _0x446359: 0x1b7c,
          _0x5d6002: 0x1870,
          _0x9abfaa: 0x1885
        };

        _0x42ee54.d(_0x44bbd9, {
          'n': () => _0x502d78,
          'r': () => _0x31b6e3
        });

        var _0x2a8bc6 = _0x42ee54(0x161cd);

        const _0x502d78 = (_0x2c9c92, _0x4e2fee, _0x25430d = {}) => new Promise((_0xe1556e, _0x4a03db) => {
          const a0_0x23ff5e = {
            _0x1ca8d4: 0x2606,
            _0x783b08: 0x17f
          };
          if (!_0x2a8bc6.game.streaming.isModelInCdimage(_0x2c9c92)) return new Error('createObject model error ' + _0x2c9c92);

          const _0x496f9b = _0x2a8bc6.objects.new(_0x2c9c92, _0x4e2fee, {
            'rotation': _0x25430d.rotation || new _0x2a8bc6.Vector3(0x0, 0x0, 0x0),
            'alpha': _0x25430d.alpha || 0xff,
            'notifyStreaming': true,
            'dimension': _0x25430d.dimension || 0x0
          });

          _0x496f9b.noCollision = !!_0x25430d.noCollision, _0x25430d.timeout > 0x0 && (_0x496f9b.timeout = _0x2a8bc6.game.sleep(_0x25430d.timeout).then(() => {
            _0x2a8bc6.objects.exists(_0x496f9b) && (delete _0x496f9b.timeout, _0x496f9b.destroy());
          })), _0x496f9b._isResolved = false, _0x496f9b._systemResolve = _0xe1556e, _0x496f9b.notifyStreaming = true;
        }),
              _0x31b6e3 = (_0x5b8afd, _0x1afd91, _0x1f8370 = {}) => new Promise((_0x279cde, _0x3d68b5) => {
          const _0x19ff9a = _0x2a8bc6.objects.newWeaponObject(_0x5b8afd, _0x1afd91, {
            'rotation': _0x1f8370.rotation || new _0x2a8bc6.Vector3(0x0, 0x0, 0x0),
            'ammo': _0x1f8370.ammo || 0x0,
            'scale': _0x1f8370.scale || 0x1,
            'notifyStreaming': true,
            'dimension': _0x1f8370.dimension || 0x0
          }) || {};

          _0x19ff9a.noCollision = !!_0x1f8370.noCollision, _0x1f8370.timeout > 0x0 && (_0x19ff9a.timeout = _0x2a8bc6.game.sleep(_0x1f8370.timeout).then(() => {
            _0x2a8bc6.objects.exists(_0x19ff9a) && (delete _0x19ff9a.timeout, _0x19ff9a.destroy());
          })), _0x19ff9a._isResolved = false, _0x19ff9a._systemResolve = _0x279cde, _0x19ff9a.notifyStreaming = true;
        });

        _0x2a8bc6.events.add('entityStreamIn', _0x2b1357 => {
          'object' == _0x2b1357.type && (_0x2b1357._isResolved || null == _0x2b1357._systemResolve || (_0x2b1357._systemResolve(_0x2b1357), _0x2b1357._isResolved = true, null != _0x2b1357.timeout && (_0x2b1357.timeout.cancel(), delete _0x2b1357.timeout)));
        }), _0x2a8bc6.events.add('entityStreamOut', _0x2ae5f3 => {
          'object' == _0x2ae5f3.type && _0x2ae5f3._isResolved && (_0x2ae5f3._isResolved = false);
        });
      },
      0x1091a: (_0x5d7a1d, _0x50498e, _0x4f31ae) => {
        'use strict';

        const a0_0x4bdbdd = {
          _0x17e210: 0x15c7
        },
              a0_0xe381f9 = {
          _0x581360: 0x1d66,
          _0x1a138a: 0x11dc,
          _0x2b1c59: 0x2422,
          _0x2c1069: 0x1f30,
          _0x332fe8: 0x10f6,
          _0x621262: 0x535,
          _0x1c80ac: 0xfd4,
          _0x2f4d00: 0x13d8,
          _0xeeccb4: 0xc4f,
          _0x565752: 0xf05,
          _0x191428: 0x132d,
          _0x1bb633: 0x1870
        },
              a0_0x11196a = {
          _0x542dc1: 0x535,
          _0x4d06ec: 0xf05,
          _0xc2b2b3: 0x25b7
        };

        _0x4f31ae.r(_0x50498e);

        var _0x2ab5f3 = _0x4f31ae(0x16a21),
            _0x5849f5 = _0x4f31ae(0x5b63),
            _0x598f84 = _0x4f31ae(0x161cd);

        const _0x5f2ba0 = _0x598f84.players.local,
              _0x12c63a = 'random@burial',
              _0x12c5f5 = 'a_burial';
        let _0x278723 = 0x0,
            _0x78454c = null,
            _0x4f973c = null;

        _0x598f84.events.add('shovel.tryDigGround', async () => {
          if (_0x2ab5f3.api.isUsingSystemAnim() || _0x5f2ba0.vehicle || _0x2ab5f3.api.ePress(_0x278723, 0x1770)) return _0x2ab5f3.api.longNotifyTrans('system.notNow', 'error');
          _0x278723 = _0x2ab5f3.api.ePressUpdate(0x1770), _0x2ab5f3.api.usingSystemAnim(true), await _0x2ab5f3.api.taskPlayAnim(_0x12c63a, _0x12c5f5, 0x0, false, false, false), _0x598f84.attachments.addLocal(_0x598f84.game.joaat('shovel')), _0x5eef11(), _0x598f84.game.sleep(0x7d0).then(() => {
            _0x5eef11(true);
          }), await _0x598f84.game.sleep(0xfa0), _0x5849f5.v._stopAnimTask(_0x5f2ba0, _0x12c63a, _0x12c5f5, 0x3), _0x598f84.attachments.removeLocal(_0x598f84.game.joaat('shovel')), _0x598f84.events.callRemote('3190684725', _0x78454c, _0x4f973c), _0x2ab5f3.api.usingSystemAnim(false);
        });

        const _0x5eef11 = (_0x250999 = false) => {
          const _0x5f4add = _0x598f84.game.object.getObjectOffsetFromCoords(_0x5f2ba0.position.x, _0x5f2ba0.position.y, _0x5f2ba0.position.z, _0x5f2ba0.getHeading(), 0x0, 0.5, -0x1);

          _0x2ab5f3.api.playFXonPos(_0x5f4add.x, _0x5f4add.y, _0x5f4add.z, 'scr_reburials', 'scr_burial_dirt', 0xfa0), _0x250999 && (_0x2ab5f3.api.play3DSound('shovel_dig', {
            'volume': 0x23
          }), _0x598f84.game.sleep(0x7d0).then(() => {
            _0x2ab5f3.api.play3DSound('shovel_dump_dirt', {
              'volume': 0x23
            });
          }));
        };

        _0x598f84.events.add('playerPolygonEnter', (_0x475206, _0x565ec5) => {
          _0x565ec5.zoneType && (_0x78454c = _0x565ec5.zoneType, _0x4f973c = _0x565ec5.name);
        }), _0x598f84.events.add('playerPolygonExit', (_0x3d0978, _0x374da1) => {
          _0x374da1.zoneType && (_0x78454c = false, _0x4f973c = false);
        });
      },
      0xe8cc: (_0x58cf17, _0xda70fb, _0xd33eb3) => {
        'use strict';

        const a0_0x42fc2a = {
          _0x36c465: 0xe6d
        },
              a0_0x1f57dc = {
          _0x50b956: 0x2606,
          _0x4d2b33: 0xe6d
        },
              a0_0x380d99 = {
          _0xfbcf00: 0xd99,
          _0x165a18: 0x19c5,
          _0x1d70c5: 0x146f,
          _0x3d083a: 0x6cb,
          _0x13a1f5: 0x1a5,
          _0x107421: 0x2001,
          _0x16eaa9: 0x2530,
          _0x2f70b5: 0x28a,
          _0x42f15e: 0xcf2,
          _0x6f815d: 0xf71,
          _0x118e70: 0x32e,
          _0x48cd2b: 0xe56,
          _0x43831a: 0xc95,
          _0x23879d: 0xa1b,
          _0x4c291f: 0x2140,
          _0x55e5d1: 0x13b4,
          _0x43922e: 0x535,
          _0x1e40e8: 0x12c9,
          _0x5287b1: 0x2606,
          _0x40597f: 0x16c5,
          _0x42969a: 0x266d,
          _0x382df9: 0x1d66,
          _0x5d547a: 0x1db5,
          _0x6786e0: 0xacc,
          _0x29883a: 0x266d,
          _0x4679ed: 0x2180,
          _0x4711f6: 0x2606,
          _0x64f3f8: 0x7e8,
          _0x46335b: 0x14d2,
          _0x3744f9: 0x1a5,
          _0x4addb3: 0x913,
          _0xd36b5e: 0x14d2,
          _0x5ba6ec: 0x1a5,
          _0x4ced5d: 0xc95
        },
              a0_0x493a70 = {
          _0x51d92f: 0x19e6,
          _0x477390: 0xd99,
          _0x136117: 0xadd,
          _0x36fb76: 0x32e,
          _0x40d354: 0x6cb
        },
              a0_0x1fe5fd = {
          _0x29cccb: 0x11dc,
          _0x527701: 0x2606,
          _0x20f0d7: 0x16c5
        },
              a0_0x52c565 = {
          _0x3963db: 0xd99,
          _0x56104b: 0x2606,
          _0x29b52a: 0x2530,
          _0x3a7065: 0x10f4,
          _0xf994dd: 0x10f4,
          _0x374d7a: 0x2606
        };

        _0xd33eb3.r(_0xda70fb);

        var _0x4906ab = _0xd33eb3(0x16a21),
            _0x366ed6 = _0xd33eb3(0x18bd),
            _0x46a2db = _0xd33eb3(0x66f9),
            _0x35b653 = _0xd33eb3(0x161cd);

        _0xd33eb3.g.objectsStreamed = new Set(), _0xd33eb3.g.objectsItemsStreamed = new Set(), 'object' != typeof _0x35b653.storage.data.weaponsObjects && (_0x35b653.storage.data.weaponsObjects = {});

        const _0x34f4e2 = _0x4c3195 => {
          _0x4c3195.shallowObject && _0x35b653.objects.exists(_0x4c3195.shallowObject) && (_0x4c3195.shallowObject.destroy(), delete _0x4c3195.shallowObject);
        };

        _0x35b653.objects.streamedItems = function* () {
          for (const _0x5cb006 of _0xd33eb3.g.objectsItemsStreamed) _0x35b653.objects.exists(_0x5cb006) && _0x5cb006.handle ? (!_0x5cb006.handle && _0x5cb006.localSteamed ? (_0x5cb006.localSteamed = false, _0x34f4e2(_0x5cb006)) : _0x5cb006.handle && !_0x5cb006.localSteamed && (_0x5cb006.localSteamed = true, _0x35b653.objects.exists(_0x5cb006) && _0x28de3f(_0x5cb006)), yield _0x5cb006) : (_0xd33eb3.g.objectsItemsStreamed.delete(_0x5cb006), _0x34f4e2(_0x5cb006));
        }, _0x35b653.objects.streamed2 = function* () {
          for (const _0x391362 of _0xd33eb3.g.objectsStreamed) _0x35b653.objects.exists(_0x391362) && _0x391362.handle ? (!_0x391362.handle && _0x391362.localSteamed ? (_0x391362.localSteamed = false, _0x34f4e2(_0x391362)) : _0x391362.handle && !_0x391362.localSteamed && (_0x391362.localSteamed = true, _0x35b653.objects.exists(_0x391362) && _0x28de3f(_0x391362)), yield _0x391362) : (_0xd33eb3.g.objectsStreamed.delete(_0x391362), _0x34f4e2(_0x391362));
        }, ['itemSqlId', 'isDynamic', 'fireworkObject', 'plant.isShaking', 'snowmanBuilt'].forEach(_0x278cd2 => {
          _0x35b653.events.addDataHandler(_0x278cd2, _0x3395e2 => {
            _0x35b653.objects.exists(_0x3395e2) && 0x0 != _0x3395e2.handle && _0x28de3f(_0x3395e2);
          });
        }), _0x35b653.events.add('entityStreamIn', _0x4ebf8a => {
          'object' == _0x4ebf8a.type && _0x35b653.objects.exists(_0x4ebf8a) && _0x28de3f(_0x4ebf8a);
        }), _0x35b653.events.add('entityStreamOut', _0x33faec => {
          'object' == _0x33faec.type && (_0xd33eb3.g.objectsStreamed.delete(_0x33faec), _0x33faec.hasVariable('itemSqlId') && _0xd33eb3.g.objectsItemsStreamed.delete(_0x33faec), _0x34f4e2(_0x33faec));
        });

        const _0x28de3f = async _0x21eea9 => {
          if (_0xd33eb3.g.objectsStreamed.add(_0x21eea9), _0x21eea9.hasVariable('itemSqlId') && (_0xd33eb3.g.objectsItemsStreamed.add(_0x21eea9), _0x35b653.events.call('api.dropItem', _0x21eea9.remoteId)), _0x21eea9.handle && !_0x21eea9.disableLodDist) {
            const _0x1f5a28 = _0x4906ab.api.getLodDist('lodDistObject', 0x28, 0xfa);

            isNaN(_0x1f5a28) || _0x21eea9.setLodDist(_0x4906ab.api.getPlayerSetting('lowQualityMode') ? _0x4906ab.api.getLodDist(0x0) : parseInt(_0x1f5a28));
          }

          if (_0x21eea9.handle && _0x21eea9.hasVariable('itemWeaponTint')) {
            const _0x51ddcc = _0x21eea9.getVariable('itemWeaponTint');

            if (_0x366ed6.r[_0x21eea9.model >> 0x0]) {
              _0x21eea9.setVisible(false, false), _0x21eea9.setAlpha(0x0);
              const _0x4cd1e1 = _0x21eea9.position;
              _0x34f4e2(_0x21eea9), _0x21eea9.shallowObject = await (0x0, _0x46a2db.r)(_0x35b653.game.joaat(_0x366ed6.r[_0x21eea9.model >> 0x0]) >> 0x0, _0x4cd1e1, {
                'ammo': 0x1,
                'scale': _0x4906ab.api.isItAprilFoolDay() ? 0x2 : 0x1,
                'showWorldObject': true,
                'rotation': new _0x35b653.Vector3(0x0, 0x0, 0x0),
                'dimension': -0x1,
                'tint': _0x51ddcc,
                'notifyStreaming': true
              }), _0x35b653.objects.exists(_0x21eea9) && _0x35b653.objects.exists(_0x21eea9.shallowObject) && 0x0 !== _0x21eea9.handle && 0x0 !== _0x21eea9.shallowObject.handle ? (_0x35b653.game.weapon.setWeaponObjectTintIndex(_0x21eea9.shallowObject.handle, _0x51ddcc), _0x21eea9.shallowObject.attachTo(_0x21eea9.handle, -0x1, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, false, false, false, false, 0x2, true)) : _0x35b653.objects.exists(_0x21eea9.shallowObject) && _0x21eea9.shallowObject.destroy();
            }
          }

          _0x21eea9.hasVariable('isDynamic') && _0x35b653.events.call('api.placeStaticObject', _0x21eea9.remoteId), _0x21eea9.hasVariable('fireworkObject') && _0x35b653.events.call('firewords.start', _0x21eea9.remoteId, _0x21eea9.getVariable('fireworkObject'));
        };

        _0x35b653.events.add('markAsObject', _0x1242dd => {
          const _0x4b75d2 = _0x35b653.objects.atRemoteId(_0x1242dd);

          _0x35b653.objects.exists(_0x4b75d2) && 'object' == _0x4b75d2.type && (_0x4b75d2.notifyStreaming = true, _0x28de3f(_0x4b75d2));
        }), _0x35b653.game.sleep(0x1388).then(() => {
          _0x35b653.objects.forEach(_0x2732c6 => {
            _0x2732c6.notifyStreaming = true;
          });
        }), _0x35b653.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x35b653.objects.forEach(_0xbf0d5c => {
            _0xbf0d5c.notifyStreaming = true;
          });
        });
      },
      0x1435f: (_0x36e15a, _0x2615d1, _0x1667e8) => {
        'use strict';

        const a0_0x382ddc = {
          _0x2f54ec: 0x59d
        },
              a0_0x3336c4 = {
          _0x55b3a1: 0x2606,
          _0x3cb445: 0xf82,
          _0x444e54: 0x1d66,
          _0x4d09d3: 0x2379,
          _0x5ef5e8: 0xda6,
          _0x42bd55: 0x1aab,
          _0x2338d8: 0x2405,
          _0x3b55be: 0x1d2
        };

        _0x1667e8.r(_0x2615d1);

        var _0x4caead = _0x1667e8(0x16a21),
            _0x36a682 = _0x1667e8(0x161cd);

        const _0x5f3910 = _0x36a682.players.local;

        let _0x24e98e,
            _0x137d79 = [];

        [[{
          'x': 2267.5734,
          'y': 5150.0034,
          'z': 56.3435,
          'r': 223.64
        }, {
          'x': 2268.54,
          'y': 5148.92,
          'z': 56.12,
          'r': 37.67
        }], [{
          'x': 2331.3037,
          'y': 5087.7949,
          'z': 46.0818,
          'r': 46.39
        }, {
          'x': 2330.07,
          'y': 5089.06,
          'z': 46.16,
          'r': 223.66
        }], [{
          'x': 2278.0102,
          'y': 5037.4399,
          'z': 43.9394,
          'r': 32.65
        }, {
          'x': 2277.22,
          'y': 5038.66,
          'z': 43.89,
          'r': 211.73
        }], [{
          'x': 2197.6772,
          'y': 5119.1318,
          'z': 50.6262,
          'r': 223.16
        }, {
          'x': 2198.62,
          'y': 5118.06,
          'z': 50.77,
          'r': 38.75
        }], [{
          'x': 2173.5598,
          'y': 5131.6279,
          'z': 49.3928,
          'r': 38.16
        }, {
          'x': 2172.68,
          'y': 5132.75,
          'z': 49.53,
          'r': 209.71
        }], [{
          'x': 2103.7243,
          'y': 5206.3203,
          'z': 56.2978,
          'r': 214.62
        }, {
          'x': 2104.51,
          'y': 5205.09,
          'z': 56.38,
          'r': 24.79
        }], [{
          'x': 2039.2128,
          'y': 4970.7822,
          'z': 41.0633,
          'r': 225.57
        }, {
          'x': 2040.23,
          'y': 4969.75,
          'z': 41.05,
          'r': 41.49
        }], [{
          'x': 1963.2299,
          'y': 4893.3989,
          'z': 44.6354,
          'r': 314.83
        }, {
          'x': 1964.25,
          'y': 4894.42,
          'z': 44.16,
          'r': 133.75
        }], [{
          'x': 2068.1354,
          'y': 4878.9199,
          'z': 41.3771,
          'r': 38.68
        }, {
          'x': 2067.32,
          'y': 4880.1,
          'z': 41.49,
          'r': 214.77
        }]].forEach(_0x3dc4b1 => {
          const _0x29c06e = _0x3dc4b1[0x0],
                _0x4d89fe = _0x3dc4b1[0x1];
          _0x36a682.objects.new(_0x36a682.game.joaat('prop_watertower01'), new _0x36a682.Vector3(_0x29c06e.x, _0x29c06e.y, _0x29c06e.z - 1.25), {
            'rotation': new _0x36a682.Vector3(0x0, 0x0, _0x29c06e.r)
          }), _0x36a682.markers.new(0x1, new _0x36a682.Vector3(_0x4d89fe.x, _0x4d89fe.y, _0x4d89fe.z - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x4b]
          });

          const _0xd2fd2d = _0x36a682.colshapes.newSphere(_0x4d89fe.x, _0x4d89fe.y, _0x4d89fe.z, 0x2);

          _0x137d79.push(_0xd2fd2d);
        }), _0x36a682.events.add('playerEnterColshape', async _0x3e747 => {
          if (_0x4caead.api.isAuthed() && !_0x5f3910.vehicle) return _0x137d79.includes(_0x3e747) ? (_0x24e98e = _0x3e747, void _0x4caead.api.displayHelpStringTrans('displayHelpString.toWaterCan', false, true, 0x1388)) : undefined;
        }), _0x36a682.events.add('playerExitColshape', async _0x225605 => {
          if (_0x4caead.api.isAuthed()) return _0x24e98e && _0x24e98e === _0x225605 ? (_0x24e98e = null, void _0x36a682.game.ui.clearHelp(true)) : undefined;
        }), _0x36a682.events.add('keys.e', async () => {
          if (!_0x5f3910.vehicle && _0x24e98e && _0x36a682.colshapes.exists(_0x24e98e)) {
            if (0xb1 != _0x5f3910.activeItemId) return _0x4caead.api.longNotifyTrans('job.farmer.getWateringCanFirst', 'error');
            _0x36a682.events.callRemote('1134205503'), _0x24e98e = null;
          }
        });
      },
      0x1244e: (_0xa3a62d, _0x3e632c, _0x4bd835) => {
        'use strict';

        const a0_0xb621ea = {
          _0x4bf8e0: 0xe1b,
          _0x257bf6: 0x1366,
          _0x18477b: 0x16c5
        },
              a0_0x5f0041 = {
          _0x298f2b: 0x1fe9,
          _0x911df9: 0x1da5,
          _0x1a1671: 0x11eb
        },
              a0_0x1e90f7 = {
          _0x5d7766: 0x1078,
          _0x16f325: 0x1360,
          _0x4dd890: 0x1052,
          _0x183ea0: 0x198d,
          _0x8fca72: 0x1fe9,
          _0x4d7626: 0x24a2,
          _0x1f5a71: 0x19ff
        },
              a0_0x2c8691 = {
          _0x4ad4cf: 0x16c5,
          _0x12c004: 0x1fe9,
          _0x1269bf: 0x2530
        },
              a0_0x42f875 = {
          _0x1379eb: 0x2001,
          _0x1d231d: 0x1936,
          _0x15817c: 0x16c5,
          _0x49bf6b: 0x1fe9,
          _0x5a17f5: 0x17a7,
          _0x26e727: 0x1da5,
          _0xb3b16a: 0x2001
        };

        _0x4bd835.r(_0x3e632c);

        var _0x38ed73 = _0x4bd835(0x16a21),
            _0x9b5a0e = _0x4bd835(0xfe5f),
            _0x564bf2 = _0x4bd835(0x161cd);

        const _0x15764c = {};

        class _0xe95c2 {
          constructor(_0x4e5686, _0x55131e) {
            const a0_0x255bbd = {
              _0x515fbd: 0xec3
            };
            this.remoteId = _0x4e5686.remoteId, this.entity = _0x4e5686, this.logicId = _0x55131e.logicId, this.logicData = _0x55131e, this.isDead = false, this.notifyDeath = _0x55131e.notifyDeath ?? false, this.controllerStreamOutDist = _0x55131e.controllerStreamOutDist ?? 0x96, this.controllerStreamInDist = _0x55131e.controllerStreamInDist ?? 0x78, this.requireControllerStatusLastTime = 0x0, this.tickHandler = setInterval(() => {
              this.onTick();
            }, 0x64), _0x15764c[this.entity.remoteId] = this, this.entity.dynamicPed = this, _0x9b5a0e.$[this.logicId](this.entity, this.logicData);
          }

          ['processLogic'](_0x42be5d = {}) {
            _0x564bf2.console.logInfo(this.entity.remoteId + ' is now processing logic...'), _0x9b5a0e.$[this.logicId](this.entity, { ...this.logicData,
              ..._0x42be5d
            });
          }

          ['onTick']() {
            if (!this.isOnStream()) return void this.destroy();

            const _0x418fab = this.entity.getCoords(true),
                  _0x24a918 = _0x38ed73.api.vdist2(_0x418fab, _0x564bf2.players.local.position);

            if (this.entity.controller == _0x564bf2.players.local) this.notifyDeath && !this.isDead && 0x0 === this.entity.getHealth() && (this.isDead = true, this.onDeath());else {
              if ((!this.entity.controller || !_0x564bf2.players.exists(this.entity.controller) || !this.entity.controller?.['handle'] || _0x38ed73.api.vdist2(this.entity.controller.position, _0x418fab) > this.controllerStreamInDist) && _0x24a918 < this.controllerStreamInDist) {
                const _0x572a0a = Date.now();

                this.requireControllerStatusLastTime + 0x9c4 < _0x572a0a && (this.requireControllerStatus(), this.requireControllerStatusLastTime = _0x572a0a);
              }
            }
          }

          ['applyDamage'](_0x150b40) {
            this.isControlledByLocalPlayer() && this.entity.applyDamageTo(Math.round(_0x150b40), true);
          }

          ['requireControllerStatus']() {
            let _0x7a0194;

            _0x564bf2.console.logInfo(this.entity.remoteId + ' no controller assigned. Requesting status...'), _0x564bf2.peds.exists(this.entity) && (_0x7a0194 = this.entity.getCoords(true)), _0x564bf2.events.callRemote('997743243', this.remoteId, JSON.stringify(_0x7a0194));
          }

          ['removeControllerStatus']() {
            let _0x5e90f4;

            _0x564bf2.console.logInfo(this.entity.remoteId + ' streamed out. Removing controller status...'), _0x564bf2.peds.exists(this.entity) && (_0x5e90f4 = this.entity.getCoords(true)), _0x564bf2.events.callRemote('1472249054', this.remoteId, JSON.stringify(_0x5e90f4));
          }

          ['isControlledByLocalPlayer']() {
            return this.entity.controller === _0x564bf2.players.local;
          }

          ['isOnStream']() {
            return _0x564bf2.peds.exists(this.entity) && 0x0 !== this.entity.handle;
          }

          ['streamIn']() {
            this.entity.controller === _0x564bf2.players.local && (_0x9b5a0e.$[this.logicId](this.entity, this.logicData), _0x564bf2.console.logInfo(this.entity.remoteId + ' is now following logicId ' + this.logicId + ' by streamer'));
          }

          ['streamOut']() {
            this.entity.isDynamic && this.entity.controller === _0x564bf2.players.local && this.removeControllerStatus(), this.destroy();
          }

          ['controllerChange'](_0xc5c589) {
            _0xc5c589 === _0x564bf2.players.local && (_0x9b5a0e.$[this.logicId](this.entity, { ...this.logicData,
              'noPositionUpdate': true
            }), _0x564bf2.console.logInfo(this.entity.remoteId + ' is now following logicId ' + this.logicId + ' by controller change'));
          }

          ['onDeath']() {
            _0x564bf2.console.logInfo(this.entity.remoteId + ' is now dead'), _0x564bf2.events.callRemote('199193719', this.remoteId);
          }

          ['destroy']() {
            delete _0x15764c[this.remoteId], this.tickHandler && (clearInterval(this.tickHandler), this.tickHandler = null), _0x564bf2.console.logInfo(this.entity.remoteId + ' is destroyed with logic ' + this.logicId + ' destroy');
          }

        }

        _0x564bf2.events.addDataHandler('dynPed.logicData', (_0x551f91, _0x2d9d5d) => {
          _0x551f91 && 'ped' === _0x551f91.type && _0x564bf2.peds.exists(_0x551f91) && _0x551f91.handle && _0x9b5a0e.$[_0x2d9d5d.logicId] && (_0x15764c[_0x551f91.remoteId] && _0x15764c[_0x551f91.remoteId].destroy(), _0x15764c[_0x551f91.remoteId] = new _0xe95c2(_0x551f91, _0x2d9d5d), _0x564bf2.console.logInfo(_0x551f91.getModel() + ' is now following logicId ' + _0x2d9d5d.logicId + ' by handler'));
        }), _0x564bf2.events.add('entityControllerChange', (_0x4f7a4d, _0xaea889) => {
          _0x4f7a4d && 'ped' === _0x4f7a4d.type && _0x564bf2.peds.exists(_0x4f7a4d) && _0x4f7a4d.handle && _0x4f7a4d.hasVariable('dynPed.logicData') && (_0x15764c[_0x4f7a4d.remoteId] || (_0x15764c[_0x4f7a4d.remoteId] = new _0xe95c2(_0x4f7a4d, _0x4f7a4d.getVariable('dynPed.logicData'))), _0x15764c[_0x4f7a4d.remoteId]?.['controllerChange']());
        }), _0x564bf2.events.add('entityStreamIn', _0x574140 => {
          _0x574140 && 'ped' === _0x574140.type && _0x564bf2.peds.exists(_0x574140) && _0x574140.handle && _0x574140.hasVariable('dynPed.logicData') && (_0x15764c[_0x574140.remoteId] || (_0x15764c[_0x574140.remoteId] = new _0xe95c2(_0x574140, _0x574140.getVariable('dynPed.logicData'))), _0x15764c[_0x574140.remoteId]?.['streamIn']());
        }), _0x564bf2.events.add('entityStreamOut', _0x5e4898 => {
          _0x5e4898 && 'ped' === _0x5e4898.type && _0x564bf2.peds.exists(_0x5e4898) && _0x5e4898.hasVariable('dynPed.logicData') && _0x15764c[_0x5e4898.remoteId] && _0x15764c[_0x5e4898.remoteId].streamOut();
        }), _0x564bf2.events.add('dynPed.destroyed', _0x8cc20b => {
          _0x15764c[_0x8cc20b] && _0x15764c[_0x8cc20b].destroy();
        }), _0x564bf2.events.add('dynPed.applyDamage', (_0x128d41, _0x2bee94) => {
          _0x15764c[_0x128d41] && _0x15764c[_0x128d41].applyDamage(_0x2bee94);
        }), _0x564bf2.events.add('dynPed.pauseAndLookAt', async (_0x3e6026, _0x11e26b, _0x2c2840) => {
          if (_0x564bf2.peds.exists(_0x3e6026) && _0x564bf2.players.exists(_0x11e26b)) {
            _0x3e6026.taskPause(_0x2c2840);

            const _0x3fb10f = _0x38ed73.api.getHeadingFromCoords(_0x3e6026.getCoords(true), _0x11e26b.position);

            _0x3e6026.taskAchieveHeading(_0x3fb10f, 0x5dc), await _0x564bf2.game.sleep(0xfa0), _0x15764c[_0x3e6026.remoteId]?.['processLogic']({
              'noPositionUpdate': true
            });
          }
        });
      },
      0x12b21: (_0x4075b3, _0x19f10b, _0x406da1) => {
        var _0x33d839 = _0x406da1(0x161cd);

        _0x33d839.events.addDataHandler('animaltest', (_0x33b842, _0x4c1cf9) => {
          if (!_0x33b842 || 'ped' !== _0x33b842.type || !_0x33d839.peds.exists(_0x33b842) || !_0x33b842.handle) return;

          const _0x44c943 = _0x4c1cf9,
                _0x460362 = _0x33d839.players.atRemoteId(_0x44c943);

          _0x33d839.players.exists(_0x460362) && (_0x33d839.console.logInfo(_0x33b842.getModel() + ' is now following ' + _0x460362.name + ' by handler'), _0x33b842.taskFollowToOffsetOf(_0x460362.handle, 0x0, 0x0, 0x0, 0x1, -0x1, 1.25, true));
        }), _0x33d839.events.add('entityControllerChange', (_0x15f801, _0x496b17) => {
          if (_0x15f801 && 'ped' === _0x15f801.type && _0x33d839.peds.exists(_0x15f801) && _0x15f801.handle && _0x15f801.hasVariable('animaltest')) {
            const _0x4ddd34 = _0x15f801.getVariable('animaltest'),
                  _0x45afa0 = _0x33d839.players.atRemoteId(_0x4ddd34);

            if (!_0x33d839.players.exists(_0x45afa0)) return;
            _0x33d839.console.logInfo(_0x15f801.getModel() + ' is now following ' + _0x45afa0.name), _0x15f801.taskFollowToOffsetOf(_0x45afa0.handle, 0x0, 0x0, 0x0, 0x1, -0x1, 1.25, true);
          }
        }), _0x33d839.events.add('entityStreamIn', _0x6497d => {
          if (!(_0x6497d && 'ped' === _0x6497d.type && _0x33d839.peds.exists(_0x6497d) && _0x6497d.handle && _0x6497d.hasVariable('animaltest'))) return;

          const _0x5e6e10 = _0x6497d.getVariable('animaltest'),
                _0x45ec70 = _0x33d839.players.atRemoteId(_0x5e6e10);

          _0x33d839.players.exists(_0x45ec70) && (_0x33d839.console.logInfo(_0x6497d.getModel() + ' is now following ' + _0x45ec70.name + ' by streamer'), _0x6497d.taskFollowToOffsetOf(_0x45ec70.handle, 0x0, 0x0, 0x0, 0x1, -0x1, 1.25, true));
        });
      },
      0x63e4: (_0x5ecd27, _0x3eec11, _0xa240e5) => {
        _0xa240e5(0xcb89), _0xa240e5(0x12b21), _0xa240e5(0x1244e);
      },
      0xcb89: (_0x48cf8e, _0x1dd867, _0x271e78) => {
        'use strict';

        const a0_0x503043 = {
          _0x3908ed: 0x1f6,
          _0x5f694e: 0x1d55,
          _0x40fb88: 0xbb9,
          _0x37b420: 0x40d,
          _0x1ccd4d: 0x40d,
          _0x294ca2: 0x1a59,
          _0xfd1430: 0x1f30,
          _0x52afa4: 0x17b9,
          _0x2c4ef5: 0x1ee9,
          _0x3acfe9: 0x40d,
          _0x4eca83: 0x19e6,
          _0x5771a0: 0x40d,
          _0x28b885: 0x1d6d,
          _0x1924be: 0x9c3,
          _0x2e52c2: 0x9d7,
          _0x1f885b: 0x9d7,
          _0x48e1e2: 0x281,
          _0x5bafba: 0xc57,
          _0x26e75c: 0x1f6a,
          _0x9d6bd0: 0x2553,
          _0x5e1e29: 0xe4a,
          _0x5c2ce8: 0x1aab,
          _0x5c9d12: 0x136c,
          _0x38ed00: 0x1ee9,
          _0x44afcc: 0x1dc6,
          _0x811b50: 0x1ee9,
          _0x9603ec: 0x2249,
          _0x48b09f: 0x10e7,
          _0x2fc435: 0x18a1,
          _0x1c1ddb: 0x1b61,
          _0xc50f91: 0x16ac,
          _0x54fc01: 0x14a6
        },
              a0_0x97f457 = {
          _0x5ed61d: 0x535,
          _0x3ff3c2: 0x253d,
          _0x100084: 0x138d,
          _0x1c4de2: 0x106f,
          _0x96e31c: 0x1157,
          _0x2969fc: 0x235b,
          _0x921e64: 0x1f30,
          _0x6303e9: 0x2249,
          _0x410594: 0x138d,
          _0x5cf059: 0x106f,
          _0x299615: 0x10e7,
          _0x509cf1: 0x1627
        },
              a0_0x550389 = {
          _0x141f19: 0x1c3c,
          _0xbe965c: 0x1e35,
          _0x22ac08: 0x1d2d
        },
              a0_0x318f3d = {
          _0x2de9f2: 0x40d,
          _0x23e90b: 0x257b,
          _0x3f5097: 0x535,
          _0x7881b7: 0x1985,
          _0x9d5691: 0x1104,
          _0x2950f7: 0x19c5,
          _0x1598f2: 0x40d
        },
              a0_0x2ac839 = {
          _0x41cd07: 0x235b,
          _0x5dfaa4: 0x185e,
          _0x33b6d4: 0x1bf6,
          _0xae0c4c: 0x59d,
          _0x422ff6: 0x9c5,
          _0x4c14b5: 0xc31,
          _0x117109: 0x1a07,
          _0x2d7b10: 0x54b,
          _0xab68fd: 0x235b,
          _0x416476: 0x185e,
          _0xd5d155: 0x2288,
          _0x5318af: 0x535,
          _0x24ae2f: 0x1934,
          _0x72407: 0x235b,
          _0x5c6b8f: 0x5f5,
          _0x2b6275: 0xfa6,
          _0x47f780: 0x12e6,
          _0x5820b8: 0x138d,
          _0x2e6bf6: 0x14d2,
          _0xc80e2f: 0x29a
        },
              a0_0xf6cc14 = {
          _0x55d825: 0x40d,
          _0x4bc7eb: 0x1a59,
          _0x2e010a: 0x40d
        };

        _0x271e78.r(_0x1dd867);

        var _0x4834e6 = _0x271e78(0x16a21),
            _0x3413f4 = _0x271e78(0x77a5),
            _0x47bb78 = _0x271e78.n(_0x3413f4),
            _0x213472 = _0x271e78(0x161cd);

        let _0x5e9b5b = new Set(),
            _0x33f52f = new Set(),
            _0x2ad0b0 = {};

        _0x213472.peds.forEachInStreamRange2 = _0x36991b => {
          for (const _0x20196a of _0x33f52f) try {
            _0x36991b(_0x20196a);
          } catch (_0x4c4dd0) {}
        }, _0x213472.peds.atCustomId = _0x4ee247 => {
          for (const _0x1edfdd of _0x33f52f) if (_0x1edfdd.cData && _0x1edfdd.cData.uid === _0x4ee247) return _0x1edfdd;

          for (const _0x502699 of _0x213472.peds.toArray()) if (_0x502699.cData && _0x502699.cData.uid === _0x4ee247) return _0x502699;
        }, _0x213472.peds.setCustomDimension = (_0x4ca445, _0x3c4a10 = 0x0) => {
          if (_0x213472.peds.exists(_0x4ca445) && null != _0x4ca445.cData) {
            const _0xf84efd = _0x47bb78().find(_0x59550d => _0x59550d.id === _0x4ca445.cData.uid);

            if (null != _0xf84efd) {
              if (null != _0x4ca445.cData.colshapeId) {
                const _0x88740d = _0x213472.colshapes.at(_0x4ca445.cData.colshapeId);

                _0x88740d && _0x88740d.destroy();
              }

              _0x4ca445.destroy(), _0x33f52f.delete(_0x4ca445), _0x158302(_0xf84efd, _0x3c4a10);
            }
          }
        }, _0x213472.peds.newLegacy = (_0x587eaa, _0x4006d1, _0x4f9d75, _0x36c4c7, _0x3d640b) => {
          const _0x30fa4e = _0x213472.peds.new(_0x587eaa, _0x4006d1, _0x4f9d75, _0x3d640b);

          if (_0x30fa4e) return _0x30fa4e.streamingRange = 0xc8, _0x30fa4e.streamInHandler = _0x36c4c7, _0x30fa4e;
        }, _0x213472.events.add('keys.e', () => {
          if (!_0x213472.players.local.isInAnyVehicle(true) && _0x271e78.g.npcColshape && !_0x213472.players.local.isDead() && !_0x271e78.g.currentInterface) {
            _0x213472.game.ui.clearHelp(true);

            const _0x2cb4c4 = _0x4834e6.api.getNearestPed();

            if (undefined !== _0x2cb4c4 && _0x4834e6.api.playPedSpeech(_0x2cb4c4.id), _0x271e78.g.npcType) {
              if (_0x213472.players.local.getVariable('cuffed')) return _0x4834e6.api.longNotifyTrans('user.cantInCuffs', 'error');
              if (_0x213472.players.local.activeItemId) return _0x4834e6.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
              if (_0x213472.players.local.carryngData) return _0x4834e6.api.longNotifyTrans('user.cantWhileCarryng', 'error');
              if (_0x4834e6.api.isUsingSystemAnim()) return _0x4834e6.api.longNotifyTrans('user.cantInteractNow', 'error');

              _0x213472.events.callRemote('2054771319', _0x271e78.g.npcType);
            } else {
              if (_0x213472.players.local.activeItemId) return _0x4834e6.api.longNotifyTrans('user.removeActiveItemFirst', 'error');

              _0x213472.events.call('dialog.init');
            }
          }
        }), _0x213472.events.add('entityStreamIn', _0x56e34e => {
          if ('ped' === _0x56e34e.type && (_0x56e34e.streamInHandler && _0x56e34e.streamInHandler(_0x56e34e), _0x33f52f.add(_0x56e34e), _0x56e34e.cData && _0x56e34e.cData.spotLight)) {
            const _0x1121c4 = _0x4834e6.api.invokeNative('GET_CLOCK_HOURS');

            [0x16, 0x17, 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7].includes(_0x1121c4) && _0x5e9b5b.add(_0x56e34e.cData.position);
          }
        }), _0x213472.events.add('entityStreamOut', _0x95e52e => {
          'ped' === _0x95e52e.type && (_0x95e52e.cData && _0x95e52e.cData.spotLight && _0x5e9b5b.has(_0x95e52e.cData.position) && _0x5e9b5b.delete(_0x95e52e.cData.position), _0x33f52f.delete(_0x95e52e));
        }), _0x213472.events.add('spawnNPCs', (_0x48cb1d = {}) => {
          if (_0x2ad0b0 = _0x48cb1d, _0x47bb78()) {
            for (const _0x183970 of _0x47bb78()) _0x158302(_0x183970);

            _0x213472.events.call('pedsReady');
          }
        }), _0x213472.events.add('npcs.setDimensionTo', (_0x2f09d9, _0x422f2d) => {
          const _0x50c063 = _0x213472.peds.atCustomId(_0x2f09d9);

          _0x50c063 && _0x213472.peds.setCustomDimension(_0x50c063, _0x422f2d);
        }), _0x213472.events.add('render', () => {
          if (_0x5e9b5b.size) {
            for (const _0x115ac4 of _0x5e9b5b) _0x213472.game.graphics.drawSpotLight(_0x115ac4.x, _0x115ac4.y, _0x115ac4.z + 0x8, 0x0, 0x0, -0x1, 0xff, 0xff, 0xff, 0x23, 0.3, 0x5, 4.5, 0x5);
          }
        }), _0x213472.events.add('playerEnterColshape', _0x3e4261 => {
          if (_0x4834e6.api.isAuthed() && _0x3e4261.npc && (_0x3e4261.npcType || _0x3e4261.npcDescription)) {
            if (Math.abs(_0x3e4261.pos.z - _0x213472.players.local.position.z) > 0x2) return;
            _0x4834e6.api.displayHelpStringTrans('displayHelpString.interact', false, true, 0x1388), _0x271e78.g.npcColshape = _0x3e4261.npc, _0x271e78.g.npcType = _0x3e4261.npcType, _0x271e78.g.npcDescription = _0x3e4261.npcDescription, _0x271e78.g.npcDialogId = _0x3e4261.npcDialogId, _0x271e78.g.npcAmbientSpeech = _0x3e4261.npcAmbientSpeech;
          }
        }), _0x213472.events.add('playerExitColshape', _0x139746 => {
          _0x4834e6.api.isAuthed() && _0x139746.npc && (_0x213472.events.call('npc.exitShape', _0x139746), _0x213472.game.ui.clearHelp(true), _0x271e78.g.npcColshape = null, _0x271e78.g.npcType = null, _0x271e78.g.npcAmbientSpeech = null);
        });

        const _0x158302 = (_0x283a08, _0x30da5e) => {
          const a0_0x27fd7f = {
            _0x268946: 0xe4a,
            _0x13ed49: 0xe4a,
            _0x1a9dde: 0x9d7
          };
          null == _0x30da5e && (_0x30da5e = null != _0x2ad0b0[_0x283a08.id] ? _0x2ad0b0[_0x283a08.id] : _0x283a08.dimension);

          const _0x175b20 = _0x213472.peds.newLegacy(_0x213472.game.joaat(_0x283a08.skin), new _0x213472.Vector3(parseFloat(_0x283a08.posX), parseFloat(_0x283a08.posY), parseFloat(_0x283a08.posZ)), parseFloat(_0x283a08.posA), _0x525d0e => {
            const a0_0x3a6396 = {
              _0x1bf5ca: 0x1de9,
              _0x253355: 0xae6
            };
            _0x525d0e && (_0x525d0e.setAlpha(0xff, false), _0x525d0e.setLodDist(0x64), _0x283a08.animDic && _0x4834e6.api.requestAnimDict(_0x283a08.animDic).then(() => {
              _0x525d0e.taskPlayAnim(_0x283a08.animDic, _0x283a08.animName, 0x8, 0x8, -0x1, 0x1, 0x0, false, false, false);
            }), _0x283a08.scenario && _0x525d0e.taskStartScenarioInPlace(_0x283a08.scenario, 0x0, true));
          }, parseInt(_0x30da5e));

          if (_0x175b20 && (_0x175b20.cData = {}, _0x175b20.cData.id = _0x175b20.id, _0x175b20.cData.uid = parseInt(_0x283a08.id), _0x175b20.cData.position = new _0x213472.Vector3(parseFloat(_0x283a08.posX), parseFloat(_0x283a08.posY), parseFloat(_0x283a08.posZ)), _0x175b20.cData.type = _0x283a08.type, null != _0x283a08.bankHeistId && (_0x175b20.cData.bankHeistId = _0x283a08.bankHeistId), _0x175b20.cData.actions = {
            'initSpeech': undefined,
            'animation': undefined,
            'scenario': _0x283a08.scenario ? _0x283a08.scenario : undefined
          }, _0x283a08.speechName && _0x283a08.voiceName && _0x283a08.speechParam && (_0x175b20.cData.actions.initSpeech = [_0x283a08.speechName, _0x283a08.voiceName, _0x283a08.speechParam]), _0x283a08.animDic && _0x283a08.animName && (_0x175b20.cData.actions.animation = [_0x283a08.animDic, _0x283a08.animName]), null != _0x283a08.dialogId || null != _0x283a08.type)) {
            _0x175b20.cData.spotLight = true;

            const _0x8bfd88 = _0x213472.colshapes.newCircle(parseFloat(_0x283a08.posX), parseFloat(_0x283a08.posY), 0x2, parseInt(_0x30da5e));

            _0x8bfd88.pos = new _0x213472.Vector3(parseFloat(_0x283a08.posX), parseFloat(_0x283a08.posY), parseFloat(_0x283a08.posZ)), _0x8bfd88.npc = _0x283a08.id, _0x8bfd88.npcType = _0x283a08.type, _0x8bfd88.npcDialogId = _0x283a08.dialogId, _0x8bfd88.npcDescription = _0x283a08.description, _0x8bfd88.npcAmbientSpeech = _0x283a08.ambientSpeech, _0x175b20.cData.colshapeId = _0x8bfd88.id;
          }
        };
      },
      0x15357: (_0x5ac87a, _0x21ff29, _0x4d5fa0) => {
        'use strict';

        const a0_0x9e33e0 = {
          _0x312467: 0x535,
          _0xa4f84d: 0x253d,
          _0x5ec4ec: 0x131b,
          _0x159089: 0x162f,
          _0x5da911: 0xdaf,
          _0x43f93a: 0xffb,
          _0xefd16d: 0xdaf,
          _0x50849d: 0x1d66,
          _0x5ec86c: 0x1c2a,
          _0x3d081c: 0x1656,
          _0x5666d8: 0x409,
          _0x42d776: 0x1b17,
          _0x411230: 0x1ee0,
          _0x24ed8f: 0x1e76,
          _0x2a76bc: 0x1796,
          _0x75402a: 0x1656,
          _0x256938: 0x1780,
          _0x4d6500: 0xdaf
        };

        _0x4d5fa0.r(_0x21ff29);

        var _0xb33c15 = _0x4d5fa0(0x16a21),
            _0xf294f6 = _0x4d5fa0(0x161cd);

        const _0x11d57c = _0xf294f6.players.local,
              _0x32735a = {
          'lastJump': Date.now(),
          'jumpCount': 0x0
        };

        _0xf294f6.events.add('render30', () => {
          if (_0xb33c15.api.isAuthed() && (0x64 !== _0xb33c15.api.getSkill('stamina') || 0x64 !== _0xb33c15.api.getSkill('strength'))) return _0x32735a.playRagdollIn > 0x0 && Date.now() - _0x32735a.playRagdollIn > 0x0 ? (delete _0x32735a.playRagdollIn, _0xf294f6.game.cam.shakeGameplayCam('SMALL_EXPLOSION_SHAKE', 0.08), void _0x11d57c.setToRagdoll(0x3e8, 0x1, 0x2, false, false, false)) : void (Date.now() - _0x32735a.lastJump < 0x3e8 || !_0x11d57c.isOnFoot() || _0x11d57c.isSwimming() || !_0x11d57c.isRunning() && !_0x11d57c.isSprinting() || _0x11d57c.isClimbing() || !_0x11d57c.isJumping() || _0x11d57c.isRagdoll() || (_0x32735a.jumpCount++, _0x32735a.lastJump = Date.now(), _0x32735a.jumpCount >= 0x2 && (_0x32735a.jumpCount = 0x0, _0x32735a.playRagdollIn = Date.now() + 0x258)));
        });
      },
      0xdce6: (_0x8118ac, _0x573433, _0xa872fe) => {
        'use strict';

        const a0_0x308e40 = {
          _0x1b6921: 0x9a0,
          _0x5681b1: 0x1fc8,
          _0x54855b: 0x1fc8
        },
              a0_0x90c3dc = {
          _0x46b710: 0x253d,
          _0x5e93f9: 0x535,
          _0x5504c9: 0x107a,
          _0x248acb: 0x535
        },
              a0_0x38089b = {
          _0x34d44a: 0x535,
          _0x3143d0: 0x391
        },
              a0_0x1f8433 = {
          _0x47c951: 0x535,
          _0x4b4baf: 0x3cd,
          _0x8a0cc3: 0x385,
          _0x4ea11a: 0x213a,
          _0x19e22f: 0x19d6,
          _0x15985f: 0x1c45
        },
              a0_0x43063c = {
          _0x43fac6: 0x24bc,
          _0x5dcd59: 0x879
        },
              a0_0x2d9e51 = {
          _0x56e8d6: 0x535,
          _0xb9b2f1: 0x253d
        },
              a0_0x456c66 = {
          _0x1762e2: 0x4b9,
          _0x12f3c5: 0x1b9d,
          _0x1bc093: 0x1b9d,
          _0x3d2f3b: 0x1b7b,
          _0x4a90e5: 0x163e,
          _0xf8c1d9: 0x535,
          _0x5e46f3: 0x133c,
          _0x445b30: 0x2530,
          _0x36b6a3: 0xffb,
          _0x205565: 0x10cd,
          _0x5f35cf: 0x1d6e,
          _0x3fcacb: 0x1d2
        };

        _0xa872fe.r(_0x573433);

        var _0x1dfbcb = _0xa872fe(0x16a21),
            _0x14bc5d = _0xa872fe(0x16a7d),
            _0x122585 = _0xa872fe(0x13888),
            _0x3c16f8 = _0xa872fe.n(_0x122585),
            _0x3524c0 = _0xa872fe(0x5d14),
            _0x4e0bc3 = _0xa872fe(0x14b31),
            _0x586d31 = _0xa872fe(0x48c4),
            _0x5b8a8c = _0xa872fe(0x161cd);

        const _0x501979 = _0x5b8a8c.players.local,
              _0x255cb4 = [0x57, 0x41, 0x53, 0x44, _0x14bc5d.t.SPACE],
              _0x56dccf = [{
          'input': 0x47,
          'key': 0x57
        }, {
          'input': 0x48,
          'key': 0x53
        }, {
          'input': 0x3f,
          'key': 0x41
        }, {
          'input': 0x40,
          'key': 0x44
        }, {
          'input': 0x4c,
          'key': _0x14bc5d.t.SPACE
        }],
              _0x50f241 = {
          'male': [{
            'animDict': 'anim@mp_freemode_return@m@idle',
            'animName': 'idle_a'
          }, {
            'animDict': 'anim@mp_freemode_return@m@idle',
            'animName': 'idle_b'
          }, {
            'animDict': 'anim@mp_freemode_return@m@idle',
            'animName': 'idle_c'
          }, {
            'animDict': 'anim@mp_freemode_return@m@fail',
            'animName': 'fail_a'
          }],
          'female': [{
            'animDict': 'anim@mp_freemode_return@f@idle',
            'animName': 'idle_a'
          }, {
            'animDict': 'anim@mp_freemode_return@f@idle',
            'animName': 'idle_b'
          }, {
            'animDict': 'anim@mp_freemode_return@f@idle',
            'animName': 'idle_c'
          }, {
            'animDict': 'anim@mp_freemode_return@f@fail',
            'animName': 'fail_a'
          }]
        };
        let _0x49d03c = _0x501979.position;

        _0x4e0bc3.f.register('antiafk.checkShift', () => true);

        const _0x811d91 = new class {
          constructor() {
            this.lastActions = [];
          }

          ['check']() {
            const a0_0xfee0d = {
              _0x5cf65c: 0x1d2
            },
                  _0x1a634d = this.lastActions[this.lastActions.length - 0x1];
            let _0xb9913b = true;

            if (_0x1a634d && Date.now() - _0x1a634d.date < 0x3a98) {
              if (_0x1a634d.inVehicle) _0xb9913b = !_0x1a634d.isDriver || !_0x255cb4.includes(_0x1a634d.key) || !(3.6 * _0x1a634d.speed > 0x2d);else {
                const _0x3167f4 = this.lastActions.map(_0xa98136 => _0xa98136.key),
                      _0x3bcec6 = _0x3167f4.filter((_0x3d4335, _0x4f19b6, _0x4b9074) => _0x4b9074.indexOf(_0x3d4335) === _0x4f19b6),
                      _0x2b216c = _0x1dfbcb.api.vdist2(_0x49d03c, _0x501979.position),
                      _0x1e15e7 = _0x3c16f8()().tz((0x0, _0x586d31.getServerTimezone)()),
                      _0xdc0849 = _0x1e15e7.hour() >= 0x0 && _0x1e15e7.hour() < 0x9,
                      _0x5e2ffc = _0xdc0849 ? 0x8 : 0x4,
                      _0x5acefb = _0xdc0849 ? 0x14 : 0xa;

                if (0x64 * _0x3bcec6.length / _0x3167f4.length > _0x5acefb && _0x2b216c > _0x5e2ffc) {
                  _0x49d03c = _0x501979.position;
                  let _0x538386 = false,
                      _0x16f02f = true;

                  if (_0x255cb4.includes(_0x3167f4)) {
                    const _0x11f70c = this.lastActions.filter(_0x17ce71 => _0x255cb4.includes(_0x17ce71.key));

                    let _0x5d49d2 = [];
                    _0x11f70c.forEach(_0x25f056 => {
                      const _0x30b7d9 = _0x25f056.duration || 0x0;

                      (_0x25f056.inVehicle && 3.6 * _0x25f056.speed > _0xdc0849 || 0x19 || !_0x25f056.inVehicle && _0x25f056.speed, 0x1) && _0x5d49d2.push(_0x30b7d9);
                    }), _0x538386 = _0x1dfbcb.api.average(_0x5d49d2);
                  }

                  _0x538386 > _0xdc0849 || 0x1388 ? _0x16f02f = true : isNaN(_0x538386) || (_0x16f02f = false), _0x16f02f && (_0xb9913b = false);
                } else _0xb9913b = true;
              }
            }

            (_0x501979.isOnVehicle() || _0x501979.getConfigFlag(0x8a, true)) && (_0xb9913b = true), _0xb9913b ? _0x5b8a8c.events.callRemote('311094182') : _0x5b8a8c.events.callRemote('1427992795');
          }

          ['onAction'](_0x17ff97, _0x11473d = 0x0) {
            const _0x3f4b6d = _0x501979.vehicle ? _0x501979.vehicle.getSpeed() : _0x501979.getSpeed(),
                  _0x1d6a26 = _0x501979.vehicle ? _0x501979.vehicle.getSpeedVector(true) : _0x501979.getSpeedVector(true),
                  _0x2cf610 = !!_0x501979.vehicle && _0x501979.vehicle.getPedInSeat(_0x1dfbcb.api.getVehSeat(-0x1)) == _0x501979.handle,
                  _0x16b3de = {
              'key': _0x17ff97,
              'date': Date.now(),
              'duration': _0x11473d,
              'speed': _0x3f4b6d,
              'vector': _0x1d6a26,
              'inVehicle': !!_0x501979.vehicle,
              'isDriver': _0x2cf610
            };

            this.lastActions.length + 0x1 > 0x20 && this.lastActions.shift(), this.lastActions.push(_0x16b3de);
          }

        }();

        let _0x576ee4 = {};
        [0xd, 0x20, 0x46, 0x47, 0x54, 0x56].forEach(_0x4649a2 => {
          const a0_0x41c553 = {
            _0x124a75: 0x253d,
            _0x325070: 0x1c45
          };
          _0x5b8a8c.keys.bind(_0x4649a2, true, () => {
            _0x1dfbcb.api.isAuthed() && (_0x576ee4[_0x4649a2] = Date.now());
          }), _0x5b8a8c.keys.bind(_0x4649a2, false, () => {
            if (!_0x1dfbcb.api.isAuthed()) return;
            const _0x414e25 = _0x576ee4[_0x4649a2];
            if (isNaN(_0x414e25)) return;

            const _0x481aec = Date.now() - _0x414e25;

            _0x811d91.onAction(_0x4649a2, _0x481aec);
          });
        }), _0x5b8a8c.events.add('render2', () => {
          const a0_0x3cdb34 = {
            _0x5611e4: 0x1992,
            _0x3bacf1: 0x3cd,
            _0x3064ea: 0x1d66,
            _0x5e590f: 0x1992,
            _0x1cc297: 0x1d66,
            _0x2b158a: 0xffb
          };
          _0x1dfbcb.api.isAuthed() && (_0x5b8a8c.game.controls.isControlJustPressed(0x0, 0x18) && !_0x5b8a8c.gui.cursor.visible && _0x811d91.onAction(0x1, 0x0), _0x56dccf.forEach(_0x3e3c3f => {
            const {
              input: _0x509d00,
              key: _0x4c2eb6
            } = _0x3e3c3f;
            if (_0x5b8a8c.game.controls.isControlJustPressed(0x0, _0x509d00) || _0x5b8a8c.game.controls.isDisabledControlJustPressed(0x0, _0x509d00)) _0x576ee4[_0x4c2eb6] = Date.now();else {
              if (_0x5b8a8c.game.controls.isControlJustReleased(0x0, _0x509d00) || _0x5b8a8c.game.controls.isDisabledControlJustReleased(0x0, _0x509d00)) {
                const _0xf6bc10 = _0x576ee4[_0x4c2eb6];
                if (isNaN(_0xf6bc10)) return;

                const _0x40a517 = Date.now() - _0xf6bc10;

                _0x811d91.onAction(_0x4c2eb6, _0x40a517);
              }
            }
          }));
        }), _0x5b8a8c.events.add('time.everyMinute', () => {
          _0x1dfbcb.api.isAuthed() && _0x811d91.check();
        }), _0x5b8a8c.events.add('time.every5Min', () => {
          if (!_0x1dfbcb.api.isAuthed()) return;

          if (_0x1dfbcb.api.invokeNative('_GET_TIME_SINCE_LAST_INPUT') > 0x493e0) {
            const _0x572555 = _0x1b270c();

            if (_0x1dfbcb.api.play3DSound(_0x572555, {
              'volume': 0x14
            }), _0x1dfbcb.api.canUseAnim()) {
              const {
                animDict: _0x1288ef,
                animName: _0x2166b1
              } = _0x25f352();

              _0x1dfbcb.api.taskPlayAnim(_0x1288ef, _0x2166b1, 0x0, false);
            }
          }
        });

        const _0x1b270c = () => {
          let _0x2f4a20 = 'whistle/whistle_';

          const _0x4dc527 = _0x3524c0.u.integer({
            'min': 0x1,
            'max': 0x4
          });

          let _0x31e765 = 0x1;

          switch (_0x4dc527) {
            case 0x1:
              _0x31e765 = _0x3524c0.u.integer({
                'min': 0x1,
                'max': 0x4
              });
              break;

            case 0x2:
            case 0x4:
              _0x31e765 = _0x3524c0.u.integer({
                'min': 0x1,
                'max': 0x1
              });
              break;

            case 0x3:
              _0x31e765 = _0x3524c0.u.integer({
                'min': 0x1,
                'max': 0x8
              });
          }

          return _0x2f4a20 += _0x4dc527 + '_' + _0x31e765, _0x2f4a20;
        },
              _0x25f352 = () => {
          const _0x97e535 = _0x501979.isMale() ? 'male' : 'female';

          return _0x3524c0.u.pickone(_0x50f241[_0x97e535]);
        };
      },
      0xa5f5: (_0x113127, _0x4f6373, _0x1aa673) => {
        var _0x5f446e = _0x1aa673(0x161cd);

        _0x1aa673.g.bigmap = {}, _0x1aa673.g.bigmap.status = 0x0, _0x1aa673.g.bigmap.timer = null, _0x5f446e.game.ui.setRadarZoom(0x1), _0x5f446e.game.ui.setRadarBigmapEnabled(false, false), _0x5f446e.events.add('render', () => {
          const a0_0x5a93fd = {
            _0x4cd609: 0x1d66,
            _0x2b6d71: 0x2ea,
            _0x581b8b: 0x1d66,
            _0x37a14c: 0x25fb,
            _0x2362bd: 0xcb0,
            _0xa3cc76: 0xcb0
          },
                a0_0x54cfcc = {
            _0x457a13: 0x1d66,
            _0x42ca26: 0xcb0,
            _0x20d557: 0x1941,
            _0x1f57e8: 0x1c4b
          };
          _0x5f446e.game.controls.disableControlAction(0x0, 0x30, true), !_0x5f446e.game.controls.isDisabledControlJustPressed(0x0, 0x30) || _0x1aa673.g.interfaces.chat || _0x1aa673.g.isGolfActive || (0x0 === _0x1aa673.g.bigmap.status ? (_0x5f446e.game.ui.setRadarZoom(0x0), _0x1aa673.g.bigmap.status = 0x1, _0x1aa673.g.bigmap.timer = _0x5f446e.game.sleep(0x61a8).then(() => {
            _0x5f446e.game.ui.setRadarBigmapEnabled(false, true), _0x5f446e.game.ui.setRadarZoom(0x1), _0x1aa673.g.bigmap.status = 0x0, _0x1aa673.g.bigmap.timer = null;
          })) : 0x1 === _0x1aa673.g.bigmap.status ? (null != _0x1aa673.g.bigmap.timer && (_0x1aa673.g.bigmap.timer.cancel(), _0x1aa673.g.bigmap.timer = undefined), _0x5f446e.game.ui.setRadarBigmapEnabled(true, false), _0x5f446e.game.ui.setRadarZoom(0x0), _0x1aa673.g.bigmap.status = 0x2, _0x1aa673.g.bigmap.timer = _0x5f446e.game.sleep(0x61a8).then(() => {
            _0x5f446e.game.ui.setRadarBigmapEnabled(false, true), _0x5f446e.game.ui.setRadarZoom(0x1), _0x1aa673.g.bigmap.status = 0x0, _0x1aa673.g.bigmap.timer = null;
          })) : (null != _0x1aa673.g.bigmap.timer && (_0x1aa673.g.bigmap.timer.cancel(), _0x1aa673.g.bigmap.timer = undefined), _0x5f446e.game.ui.setRadarBigmapEnabled(false, false), _0x5f446e.game.ui.setRadarZoom(0x1), _0x1aa673.g.bigmap.status = 0x0));
        });
      },
      0x14c3a: (_0x152484, _0x185a5c, _0x3b8747) => {
        'use strict';

        const a0_0x451272 = {
          _0x167640: 0x14d2
        },
              a0_0x3ce7d3 = {
          _0x290584: 0x19e6,
          _0x21f2f1: 0xf93,
          _0x1d84f6: 0xf93,
          _0x4e09f0: 0x1da5
        },
              a0_0x2a7ea9 = {
          _0x4b4f04: 0x535,
          _0x1a8aea: 0xf93,
          _0x272a3b: 0x1b89,
          _0x44b34c: 0x1a50,
          _0x318eae: 0x1f30,
          _0x505e03: 0x535,
          _0x5844dd: 0xe90,
          _0x43785d: 0x4b9,
          _0x4498b4: 0xa26,
          _0x7f7390: 0xa26,
          _0x1efff5: 0xc31,
          _0x4a0fd4: 0x779,
          _0x52d77b: 0xc95,
          _0x1dc6e6: 0xc95,
          _0x70551d: 0xb5b,
          _0x46c292: 0x14d2
        },
              a0_0x2ee09b = {
          _0x3c4597: 0x5fd,
          _0x21a773: 0x1f5a,
          _0x61fb97: 0x535,
          _0x50b326: 0x5fd,
          _0xf7ace6: 0x535,
          _0x3c530c: 0x1b37,
          _0x52eca3: 0x235b,
          _0x58fae8: 0xf79,
          _0x31cd1b: 0xf79,
          _0x5d1afa: 0xf79,
          _0x50d271: 0x1de9,
          _0x4671b0: 0xf79,
          _0xb8737e: 0x10b4,
          _0x3517ef: 0x2530,
          _0x462bb0: 0x1f30,
          _0x551fdb: 0x1f30,
          _0x1fc997: 0x2180,
          _0x5f433d: 0x29f,
          _0x2fc7f5: 0x1b03,
          _0x5716fd: 0x118f,
          _0x5a1b56: 0x118f
        };

        _0x3b8747.r(_0x185a5c);

        var _0x59e515 = _0x3b8747(0x16a21),
            _0x377484 = _0x3b8747(0x161cd);

        const _0x41e096 = {},
              _0x1a4b15 = _0x377484.players.local,
              _0x355088 = {
          0x1: {
            'player': {
              'dict': 'anim@heists@box_carry@',
              'name': 'idle',
              'flag': 0x32
            },
            'target': {
              'dict': 'amb@code_human_in_car_idles@generic@ps@base',
              'name': 'base',
              'flag': 0x21,
              'bone': 0x2658,
              'positionOffset': new _0x377484.Vector3(0.015, 0.38, 0.11),
              'rotationOffset': new _0x377484.Vector3(0x0, 0x0, 0x5a)
            }
          },
          0x2: {
            'player': {
              'dict': 'anim@arena@celeb@flat@paired@no_props@',
              'name': 'piggyback_c_player_a',
              'flag': 0x31
            },
            'target': {
              'dict': 'anim@arena@celeb@flat@paired@no_props@',
              'name': 'piggyback_c_player_b',
              'flag': 0x21,
              'bone': 0x0,
              'positionOffset': new _0x377484.Vector3(0x0, -0.07, 0.45),
              'rotationOffset': new _0x377484.Vector3(0x0, 0x0, 0x0)
            }
          },
          0x3: {
            'player': {
              'dict': 'missfinale_c2mcs_1',
              'name': 'fin_c2_mcs_1_camman',
              'flag': 0x31
            },
            'target': {
              'dict': 'nm',
              'name': 'firemans_carry',
              'flag': 0x21,
              'bone': 0x0,
              'positionOffset': new _0x377484.Vector3(0.27, 0.15, 0.63),
              'rotationOffset': new _0x377484.Vector3(0x0, 0x0, 0x0)
            }
          },
          0x4: {
            'player': {
              'dict': 'anim@gangops@hostage@',
              'name': 'perp_idle',
              'flag': 0x31
            },
            'target': {
              'dict': 'anim@gangops@hostage@',
              'name': 'victim_idle',
              'flag': 0x31,
              'bone': 0x0,
              'positionOffset': new _0x377484.Vector3(-0.24, 0.11, 0x0),
              'rotationOffset': new _0x377484.Vector3(0x0, 0x0, 0x0)
            }
          }
        },
              _0x3dbb61 = _0x501364 => {
          if (!_0x501364.carryngData || null == _0x501364.carryngData) return;
          const {
            player: _0x158fac,
            target: _0x174be4
          } = _0x501364.carryngData;
          (_0x158fac === _0x1a4b15 || _0x174be4 === _0x1a4b15) && (_0x59e515.api.usingSystemAnim(false), _0x174be4 === _0x1a4b15 && (!_0x377484.players.exists(_0x158fac) || 0x0 == _0x158fac.position.x && 0x0 == _0x158fac.position.y && 0x0 == _0x158fac.position.z ? _0x1a4b15.setCoordsNoOffset(_0x1a4b15.position.x, _0x1a4b15.position.y, _0x1a4b15.position.z + 0.35, true, false, false) : _0x1a4b15.setCoordsNoOffset(_0x158fac.position.x, _0x158fac.position.y, _0x158fac.position.z, true, false, false))), _0x377484.players.exists(_0x158fac) && 0x0 != _0x158fac.handle && (_0x158fac.detach(true, true), _0x158fac.clearTasksImmediately()), _0x377484.players.exists(_0x174be4) && 0x0 != _0x174be4.handle && (_0x174be4.detach(true, true), _0x174be4.clearTasksImmediately()), delete _0x158fac.carryngData, delete _0x174be4.carryngData;
        },
              _0x524738 = async _0x3b1b73 => {
          if (!_0x3b1b73.carryngData) return;
          const {
            player: _0x840ace,
            target: _0x127cf0,
            type: _0x5de101
          } = _0x3b1b73.carryngData,
                {
            player: _0x5c3f1d,
            target: _0xdc5af8
          } = _0x355088[_0x5de101];

          if (_0x5c3f1d.dict !== _0xdc5af8.dict ? await Promise.all([_0x59e515.api.requestAnimDict(_0x5c3f1d.dict), _0x59e515.api.requestAnimDict(_0xdc5af8.dict)]) : await _0x59e515.api.requestAnimDict(_0x5c3f1d.dict), _0x377484.players.exists(_0x840ace) && _0x377484.players.exists(_0x127cf0) && _0x377484.players.exists(_0x840ace) && _0x377484.players.exists(_0x127cf0) && (_0x840ace.isPlayingAnim(_0x5c3f1d.dict, _0x5c3f1d.name, 0x3) || _0x840ace.taskPlayAnim(_0x5c3f1d.dict, _0x5c3f1d.name, 0x8, -0x8, -0x1, _0x5c3f1d.flag, 0x0, false, false, false), _0x127cf0.isPlayingAnim(_0xdc5af8.dict, _0xdc5af8.name, 0x3) || _0x127cf0.taskPlayAnim(_0xdc5af8.dict, _0xdc5af8.name, 0x8, -0x8, -0x1, _0xdc5af8.flag, 0x0, false, false, false), !_0x127cf0.isAttachedTo(_0x840ace.handle))) {
            if (0x0 == _0x840ace.position.x && 0x0 == _0x840ace.position.y && 0x0 == _0x840ace.position.z) return;

            _0x127cf0.attachTo(_0x840ace.handle, _0xdc5af8.bone, _0xdc5af8.positionOffset.x, _0xdc5af8.positionOffset.y, _0xdc5af8.positionOffset.z, _0xdc5af8.rotationOffset.x, _0xdc5af8.rotationOffset.y, _0xdc5af8.rotationOffset.z, false, false, false, false, 0x2, true);
          }
        };

        _0x377484.events.add('syncCarryng', (_0x3da62e, _0x3ff34e) => {
          const a0_0x2e7509 = {
            _0x4995d0: 0x14ce,
            _0x4ee802: 0x5fd,
            _0x1db0db: 0x535,
            _0x24ba4c: 0x1b37,
            _0x224d53: 0x5fd,
            _0x59d4c6: 0x1b37,
            _0x471834: 0x5fd,
            _0x56c29e: 0x16c5,
            _0x2bedd8: 0x2292,
            _0x12517c: 0x1f30,
            _0x13376c: 0x1d66,
            _0x21701d: 0x1870,
            _0x2b1066: 0x16c5,
            _0x54b12b: 0xbc8,
            _0x5af2bd: 0xf79,
            _0x280419: 0x10b4,
            _0x4044f6: 0x2530,
            _0xb8268d: 0x1b03,
            _0x5efe37: 0x118f,
            _0x14fa22: 0x535
          },
                _0x36f844 = _0x3da62e.carryngData,
                _0x52e1c4 = null != _0x3ff34e;

          if (_0x36f844 && !_0x52e1c4) return void _0x3dbb61(_0x3da62e);
          if (_0x36f844 || !_0x52e1c4) return;

          const {
            id: _0x50c2f2,
            type: _0x2e4a5d
          } = _0x3ff34e,
                _0x346b3f = _0x377484.players.atRemoteId(_0x50c2f2),
                _0x3ca379 = {
            'player': _0x3da62e,
            'target': _0x346b3f,
            'type': _0x2e4a5d
          };

          _0x346b3f && (_0x346b3f.carryngData = _0x3ca379), _0x3da62e.carryngData = _0x3ca379, (async _0x2cdf7d => {
            const {
              player: _0x325a84,
              target: _0x1bfe5d,
              type: _0x1c9671
            } = _0x2cdf7d.carryngData;
            (_0x325a84 === _0x1a4b15 || _0x1bfe5d === _0x1a4b15) && (_0x59e515.api.usingSystemAnim(true), 0x4 != _0x1c9671 && _0x377484.inventory.pocketItem());
            const {
              player: _0x7531f9,
              target: _0x4ed13b
            } = _0x355088[_0x1c9671];
            _0x7531f9.dict !== _0x4ed13b.dict ? await Promise.all([_0x59e515.api.requestAnimDict(_0x7531f9.dict), _0x59e515.api.requestAnimDict(_0x4ed13b.dict)]) : await _0x59e515.api.requestAnimDict(_0x7531f9.dict), _0x377484.players.exists(_0x1bfe5d) && _0x377484.players.exists(_0x325a84) ? (_0x1bfe5d.freezePosition(false), _0x1bfe5d.setCollision(true, false), _0x1bfe5d.setCoordsNoOffset(_0x1bfe5d.position.x + 0x2, _0x1bfe5d.position.y + 0x2, _0x1bfe5d.position.z + 0x2, false, false, false), await _0x377484.game.sleep(0xf), _0x377484.players.exists(_0x1bfe5d) && _0x377484.players.exists(_0x325a84) ? (_0x325a84.clearTasksImmediately(), _0x1bfe5d.clearTasksImmediately(), _0x325a84.taskPlayAnim(_0x7531f9.dict, _0x7531f9.name, 0x8, -0x8, -0x1, _0x7531f9.flag, 0x0, false, false, false), _0x1bfe5d.taskPlayAnim(_0x4ed13b.dict, _0x4ed13b.name, 0x8, -0x8, -0x1, _0x4ed13b.flag, 0x0, false, false, false), _0x1bfe5d.attachTo(_0x325a84.handle, _0x4ed13b.bone, _0x4ed13b.positionOffset.x, _0x4ed13b.positionOffset.y, _0x4ed13b.positionOffset.z, _0x4ed13b.rotationOffset.x, _0x4ed13b.rotationOffset.y, _0x4ed13b.rotationOffset.z, false, false, false, false, 0x2, true)) : _0x59e515.api.usingSystemAnim(false)) : _0x59e515.api.usingSystemAnim(false);
          })(_0x3da62e);
        }), _0x377484.events.add('time.everySec', () => {
          if (!_0x59e515.api.isAuthed()) return;
          const _0x3487ca = _0x1a4b15.carryngData;
          if (!_0x3487ca) return;

          const {
            player: _0x16b45c,
            target: _0x1b8b25
          } = _0x3487ca,
                _0x19351a = _0x16b45c === _0x1a4b15 ? _0x1b8b25 : _0x16b45c;

          if (!_0x377484.players.exists(_0x19351a)) return _0x377484.events.callRemote('4133431128');
          (_0x59e515.api.vdist2(_0x1a4b15.position, _0x19351a.position) > 0xa || _0x59e515.api.isDead(_0x16b45c) || _0x16b45c.isSwimming() || _0x16b45c.isOnVehicle() || _0x19351a.vehicle || _0x1a4b15.vehicle || _0x19351a.dimension != _0x1a4b15.dimension || _0x1a4b15.getVariable('cuffed') || _0x1a4b15.getVariable('tiedHands') || _0x1a4b15.getVariable('tied') || null != _0x1a4b15.getVariable('playerInTrunk')) && (_0x377484.events.callRemote('4133431128'), _0x3dbb61(_0x1a4b15));
        }), _0x377484.events.add('entityStreamOut', _0x5b297b => {
          if ('player' !== _0x5b297b.type) return;
          const _0x5de20d = _0x5b297b.carryngData;
          if (!_0x5de20d) return;
          delete _0x5b297b.carryngData;
          const {
            player: _0x5361cb,
            target: _0x167c4c
          } = _0x5de20d;
          _0x5361cb !== _0x1a4b15 && _0x167c4c !== _0x1a4b15 || (_0x377484.events.callRemote('4133431128'), _0x3dbb61(_0x5b297b));
        }),
        }), _0x377484.events.add('keys.space', () => {
          _0x1a4b15.carryngData && (_0x377484.events.callRemote('4133431128'), _0x3dbb61(_0x1a4b15));
        });
        const _0x270e6e = _0x377484.game.controls;

        _0x377484.events.add('render', () => {
          if (!_0x59e515.api.isAuthed()) return;

          const _0x336bf7 = Date.now(),
                _0x4a164a = _0x1a4b15.carryngData;

          _0x4a164a && (_0x270e6e.disableControlAction(0x0, 0x15, true), _0x270e6e.disableControlAction(0x0, 0x18, true), _0x270e6e.disableControlAction(0x0, 0x19, true), _0x270e6e.disableControlAction(0x0, 0x45, true), _0x270e6e.disableControlAction(0x0, 0x4b, true), _0x270e6e.disableControlAction(0x0, 0x5c, true), _0x270e6e.disableControlAction(0x0, 0x72, true), _0x270e6e.disableControlAction(0x0, 0x8c, true), _0x270e6e.disableControlAction(0x0, 0x8d, true), _0x270e6e.disableControlAction(0x0, 0x8e, true), _0x270e6e.disableControlAction(0x0, 0x101, true), _0x270e6e.disableControlAction(0x0, 0x107, true), _0x270e6e.disableControlAction(0x0, 0x108, true), _0x59e515.api.displayHelpStringTrans('displayHelpString.toCancelCarrying', false, false, -0x1), _0x4a164a.player === _0x1a4b15 && (_0x1a4b15.isRagdoll() || _0x1a4b15.isInWater()) && (_0x3dbb61(_0x1a4b15), _0x377484.events.callRemote('4133431128'))), (!_0x41e096.lastUpdateCarryng || _0x336bf7 >= _0x41e096.lastUpdateCarryng + 0x3e8) && (_0x41e096.lastUpdateCarryng = _0x336bf7, _0x377484.players.forEachInStreamRange(_0x512bc9 => {
            _0x524738(_0x512bc9);
          }), _0x524738(_0x1a4b15));
        });
      },
      0x2441: (_0x738c75, _0x53b6, _0x475ddc) => {
        'use strict';

        const a0_0x45c8f7 = {
          _0x10a8e8: 0x535,
          _0x5c6b1f: 0xf71,
          _0x121fab: 0x1d5,
          _0x58b103: 0xc48,
          _0x2b7990: 0xe6d
        };

        _0x475ddc.r(_0x53b6);

        var _0x633338 = _0x475ddc(0x16a21),
            _0x596cce = _0x475ddc(0x16c1f),
            _0x5c89d7 = _0x475ddc(0x5d14),
            _0xe3a439 = _0x475ddc(0x161cd);

        _0xe3a439.events.add('time.everyMinute', () => {
          const a0_0x27ce2e = {
            _0x11ca48: 0x19f2,
            _0x4c1a32: 0x235b,
            _0x1aeaca: 0x185e,
            _0x421148: 0x21e0,
            _0x1f2ef8: 0x535,
            _0x194afc: 0xf05,
            _0x536128: 0x1c07,
            _0x3886e9: 0x1aa0
          };
          _0x633338.api.isAuthed() && _0x633338.api.getPlayerSetting('clothesSounds') && _0x5c89d7.u.bool({
            'likelihood': 0x14
          }) && _0x633338.api.getClothes(_0xe3a439.players.local).forEach(_0x27ed46 => {
            if (!_0x27ed46) return;

            let _0x51fdc3;

            null == _0x27ed46.texture && (_0x27ed46.texture = 0x0), _0x51fdc3 = _0xe3a439.players.local.isMale() ? _0x596cce.G.find(_0x223cda => _0x223cda.component === _0x27ed46.component && _0x223cda.drawable === _0x27ed46.drawable && _0x223cda.isProp === _0x27ed46.isProp) : _0x596cce.g.find(_0x5d1572 => _0x5d1572.component === _0x27ed46.component && _0x5d1572.drawable === _0x27ed46.drawable && _0x5d1572.isProp === _0x27ed46.isProp), _0x51fdc3 && _0x633338.api.play3DSound(_0x5c89d7.u.pickone(_0x51fdc3.sounds), {
              'volume': 0x23,
              'maxDistance': 0x5
            });
          });
        });
      },
      0x8d83: (_0x247bb5, _0x264815, _0x208803) => {
        'use strict';

        _0x208803.r(_0x264815);

        var _0x17b2ca = _0x208803(0x16a21),
            _0x26e557 = _0x208803(0x6611),
            _0x29bc40 = _0x208803(0x8b3a),
            _0x55fab0 = _0x208803(0x161cd);

        const _0x59f987 = _0x55fab0.players.local;
        let _0x5eaebb = false;
        const _0x4b5af8 = {
          [_0x55fab0.game.joaat('akuma')]: 'sports',
          [_0x55fab0.game.joaat('avarus')]: 'chopper',
          [_0x55fab0.game.joaat('bagger')]: 'policeb',
          [_0x55fab0.game.joaat('bati')]: 'sports',
          [_0x55fab0.game.joaat('bati2')]: 'sports',
          [_0x55fab0.game.joaat('bf400')]: 'dirt',
          [_0x55fab0.game.joaat('carbonrs')]: 'sports',
          [_0x55fab0.game.joaat('cliffhanger')]: 'dirt',
          [_0x55fab0.game.joaat('daemon')]: 'policeb',
          [_0x55fab0.game.joaat('daemon2')]: 'policeb',
          [_0x55fab0.game.joaat('defiler')]: 'sports',
          [_0x55fab0.game.joaat('deathbike')]: 'dirt',
          [_0x55fab0.game.joaat('deathbike2')]: 'dirt',
          [_0x55fab0.game.joaat('deathbike3')]: 'dirt',
          [_0x55fab0.game.joaat('diablous')]: 'policeb',
          [_0x55fab0.game.joaat('diablous2')]: 'sports',
          [_0x55fab0.game.joaat('double')]: 'sports',
          [_0x55fab0.game.joaat('enduro')]: 'dirt',
          [_0x55fab0.game.joaat('esskey')]: 'dirt',
          [_0x55fab0.game.joaat('faggio')]: 'scooter',
          [_0x55fab0.game.joaat('faggio2')]: 'scooter',
          [_0x55fab0.game.joaat('faggio3')]: 'scooter',
          [_0x55fab0.game.joaat('fcr')]: 'sports',
          [_0x55fab0.game.joaat('fcr2')]: 'sports',
          [_0x55fab0.game.joaat('gargoyle')]: 'policeb',
          [_0x55fab0.game.joaat('hakuchou')]: 'sports',
          [_0x55fab0.game.joaat('hakuchou2')]: 'sports',
          [_0x55fab0.game.joaat('hexer')]: 'policeb',
          [_0x55fab0.game.joaat('innovation')]: 'policeb',
          [_0x55fab0.game.joaat('lectro')]: 'sports',
          [_0x55fab0.game.joaat('manchez')]: 'dirt',
          [_0x55fab0.game.joaat('nemesis')]: 'sports',
          [_0x55fab0.game.joaat('nightblade')]: 'policeb',
          [_0x55fab0.game.joaat('oppressor')]: 'sports',
          [_0x55fab0.game.joaat('oppressor2')]: 'sports',
          [_0x55fab0.game.joaat('pcj')]: 'sports',
          [_0x55fab0.game.joaat('policeb')]: 'policeb',
          [_0x55fab0.game.joaat('ruffian')]: 'sports',
          [_0x55fab0.game.joaat('rrocket')]: 'policeb',
          [_0x55fab0.game.joaat('sanchez')]: 'dirt',
          [_0x55fab0.game.joaat('sanchez2')]: 'dirt',
          [_0x55fab0.game.joaat('sanctus')]: 'chopper',
          [_0x55fab0.game.joaat('shotaro')]: 'sports',
          [_0x55fab0.game.joaat('sovereign')]: 'policeb',
          [_0x55fab0.game.joaat('thrust')]: 'policeb',
          [_0x55fab0.game.joaat('vader')]: 'sports',
          [_0x55fab0.game.joaat('vindicator')]: 'policeb',
          [_0x55fab0.game.joaat('vortex')]: 'sports',
          [_0x55fab0.game.joaat('wolfsbane')]: 'policeb',
          [_0x55fab0.game.joaat('zombiea')]: 'chopper',
          [_0x55fab0.game.joaat('zombieb')]: 'chopper'
        };
        _0x55fab0.events.add('keys.x', async () => {
          if (_0x17b2ca.api.isUsingSystemAnim()) return;

          const _0x598fbf = (0x0, _0x26e557.aM)(_0x59f987, 0x0);

          if (-0x1 === _0x598fbf || _0x55fab0.game.player.isFreeAiming() || _0x59f987.isClimbing() || _0x59f987.isDead()) return;
          const _0x984019 = _0x29bc40.Z[_0x59f987.model];
          if (undefined === _0x984019 || !_0x984019[_0x598fbf]) return;
          let _0x5586bd = 'anim@mp_helmets@on_foot',
              _0x23a49e = 'visor_up',
              _0x106948 = 'none';
          _0x5eaebb ? _0x5eaebb && (_0x23a49e = _0x984019[_0x598fbf].anim + '_up', _0x106948 = _0x984019[_0x598fbf].type) : (_0x106948 = _0x984019[_0x598fbf].type, _0x23a49e = _0x984019[_0x598fbf].anim + '_down');
          const _0x3aaab9 = _0x59f987.vehicle;

          if (_0x3aaab9) {
            if (_0x23a49e.includes('goggles')) return;
            if (_0x55fab0.game.vehicle.isThisModelAQuadbike(_0x3aaab9.model)) _0x5586bd = 'anim@mp_helmets@on_bike@quad';else {
              if (!_0x4b5af8[_0x3aaab9.model]) return;
              _0x5586bd = 'anim@mp_helmets@on_bike@' + _0x4b5af8[_0x3aaab9.model];
            }
          }

          switch (await _0x17b2ca.api.taskPlayAnim(_0x5586bd, _0x23a49e, 0x30, false, false, true), await _0x55fab0.game.sleep(0x1cc), _0x106948) {
            case 'nightvision':
              _0x5eaebb ? (_0x55fab0.game.graphics.setNightvision(false), _0x5eaebb = false) : (_0x55fab0.game.graphics.setNightvision(true), _0x5eaebb = true);
              break;

            case 'thermal':
              _0x5eaebb ? (_0x55fab0.game.graphics.setSeethrough(false), _0x5eaebb = false) : (_0x55fab0.game.graphics.setSeethrough(true), _0x5eaebb = true);
          }
        }), _0x55fab0.events.add('time.everySec', () => {
          if (!_0x17b2ca.api.isAuthed()) return;

          const _0x470183 = (0x0, _0x26e557.aM)(_0x59f987, 0x0);

          _0x5eaebb && (-0x1 === _0x470183 || _0x59f987.isDead()) && (_0x55fab0.game.graphics.setNightvision(false), _0x55fab0.game.graphics.setSeethrough(false), _0x5eaebb = false);
        });
      },
      0x210b: (_0x227f8c, _0x3025b6, _0x2f66bb) => {
        'use strict';

        const a0_0x5b50be = {
          _0x3135db: 0x185e,
          _0x41c0bc: 0x535,
          _0x545e55: 0x1985,
          _0x5418f0: 0x219d,
          _0x1d9199: 0x25df
        },
              a0_0x1f9ac7 = {
          _0x562ab1: 0x19a1,
          _0x334cab: 0x1de9,
          _0x45b8e0: 0x1dcc
        },
              a0_0x3c9b8b = {
          _0x2413f2: 0x19d6,
          _0x22dd58: 0xe74,
          _0x5d9110: 0xee5,
          _0x4cf450: 0xee5,
          _0x2e089e: 0x19d6,
          _0x243ba2: 0x14d2,
          _0x5d51ae: 0x1870,
          _0x19075c: 0x1d66,
          _0x313e52: 0x535,
          _0x3fef33: 0x14d2,
          _0x4700d3: 0x1da5,
          _0x12353b: 0x1d66,
          _0x46ffec: 0x169e,
          _0x338edd: 0x73c,
          _0x250d5c: 0x235b,
          _0x16bfa0: 0x14d2,
          _0x3dd935: 0x214a,
          _0x77f8c4: 0x2080,
          _0x25d937: 0x1f30,
          _0x7c8983: 0x623,
          _0x379d7: 0x3e4,
          _0x2d3d85: 0x535,
          _0x42e1b8: 0x1ec5,
          _0x498ed6: 0x3e4,
          _0x552647: 0x1a3e,
          _0x11731a: 0xe74,
          _0x5b6e19: 0xf2f,
          _0x4ef0bc: 0x1e56,
          _0x5aa679: 0xc20,
          _0x534852: 0x535,
          _0x1fea4: 0x1b65,
          _0x190367: 0x19d6
        },
              a0_0x5f4297 = {
          _0x49dfec: 0x1d66,
          _0x3cf325: 0x1adb,
          _0x494715: 0x19d6,
          _0x4ac0d4: 0xee5,
          _0x4ef94f: 0x186b,
          _0x56b64a: 0x186b,
          _0x59a6c2: 0x1d66,
          _0x5302ac: 0x1382,
          _0x1d177b: 0x186b,
          _0x210ed1: 0x2113
        };

        _0x2f66bb.r(_0x3025b6);

        var _0x59e745 = _0x2f66bb(0x16a21),
            _0x500a75 = _0x2f66bb(0x176d8),
            _0x4dfae3 = _0x2f66bb(0x5d14),
            _0x213c16 = _0x2f66bb(0x161cd);

        const _0x1fb50d = _0x213c16.players.local;

        let _0x8c340, _0x5e3867, _0x455b3c, _0x2db615;

        _0x213c16.events.add('death.startTimer', (_0x57f0a5 = 0x78) => {
          _0x213c16.game.graphics.transitionFromBlurred(0x64), _0x5e3867 && (_0x5e3867.visible = false, _0x8c340 = null), _0x8c340 = _0x57f0a5;

          const _0x27e6b6 = parseInt(_0x8c340 / 0x3c),
                _0x4bd17a = parseInt(_0x8c340 % 0x3c);

          _0x5e3867 = new _0x500a75.TimerBar('user.tillDeath', null, {
            'value': ('0' + _0x27e6b6).slice(-0x2) + ':' + ('0' + _0x4bd17a).slice(-0x2)
          }), _0x213c16.game.gameplay.disableAutomaticRespawn(true), _0x213c16.game.gameplay.setFadeInAfterDeathArrest(false), _0x213c16.game.gameplay.setFadeOutAfterDeath(false), _0x213c16.game.gameplay.setFadeInAfterLoad(false), _0x213c16.game.gameplay.setFadeOutAfterArrest(false);
        }), _0x213c16.events.add('death.stopTimer', () => {
          _0x5e3867 && (_0x5e3867.visible = false, _0x8c340 = null);
        }), _0x213c16.events.add('time.everySec', async () => {
          if (_0x8c340 && _0x5e3867) {
            _0x8c340--, _0x5e3867 && !_0x5e3867.visible && (_0x5e3867.visible = true);

            const _0x35a3da = parseInt(_0x8c340 / 0x3c),
                  _0x3cdde6 = parseInt(_0x8c340 % 0x3c);

            _0x5e3867.value = ('0' + _0x35a3da).slice(-0x2) + ':' + ('0' + _0x3cdde6).slice(-0x2), 0x0 === _0x8c340 ? (_0x5e3867 && (_0x5e3867.visible = false, _0x5e3867 = null), _0x213c16.events.call('api.fadeOut', 0x3e8), await _0x213c16.game.sleep(0x3e8), _0x213c16.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x59e745.api.usingSystemAnim(false), _0x213c16.events.callRemote('3239676000')) : 0xa === _0x8c340 && _0x213c16.game.audio.playSoundFrontend(-0x1, '10s', 'MP_MISSION_COUNTDOWN_SOUNDSET', true);
          }

          if (_0x2db615) {
            const _0x2f6e24 = _0x213c16.players.atRemoteId(_0x455b3c);

            if (!_0x213c16.players.exists(_0x2f6e24)) return _0x213c16.events.call('death.stopPlayerPickup');

            const _0x577944 = _0x59e745.api.vdist(_0x1fb50d.position.x, _0x1fb50d.position.y, _0x1fb50d.position.z, _0x2f6e24.position.x, _0x2f6e24.position.y, _0x2f6e24.position.z);

            if (!_0x59e745.api.getEntitySync(_0x2f6e24, 'isDead', 'boolean') || _0x59e745.api.getEntitySync(_0x1fb50d, 'isDead', 'boolean') || _0x59e745.api.isCuffed(_0x1fb50d) || _0x577944 > 0x5) return _0x213c16.events.call('death.stopPlayerPickup');
            _0x329583 && (_0x2db615.value = _0x329583), _0x329583 += 0x64 / _0x2e1579 / 0x64, _0x2db615.value = _0x329583, _0x329583 >= 0x1 && (_0x329583 = 0x0, _0x213c16.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true), _0x213c16.events.callRemote('359122357', _0x455b3c), _0x59e745.api.stopAnim(), _0x2db615 && (_0x2db615.visible = false, _0x2db615 = null));
          }
        }), _0x213c16.events.add('render', async () => {
          _0x8c340 && _0x213c16.game.graphics.drawText(_0x59e745.api.language.translatePlayer('user.dead'), [0.5, 0.9], {
            'font': 0x0,
            'color': [0xff, 0xff, 0xff, 0xc8],
            'scale': [0.35, 0.35],
            'outline': true
          }), _0x59e745.api.getEntitySync(_0x1fb50d, 'isDead', 'boolean') && 0x0 != _0x1fb50d.getHealth() && _0x1fb50d.setToRagdoll(0x3e8, 0x3e8, 0x0, false, false, false);
        });

        let _0x2e1579,
            _0x329583 = 0x0;

        _0x213c16.events.add('death.startPlayerPickup', (_0x57539b, _0x59bea2 = 0xa) => {
          _0x2db615 || null == _0x57539b || (_0x2e1579 = _0x59bea2, _0x455b3c = _0x57539b, _0x2db615 = new _0x500a75.TimerBar('user.rescuingPlayer', 'progressBar', {
            'value': 0x0,
            'pbarFgColor': [0x4f, 0xb8, 0xff, 0xff],
            'pbarBgColor': [0x1b, 0x61, 0x8f, 0xff]
          }), _0x59e745.api.taskPlayAnim('random@rescue_hostage', 'bystander_get_up', 0x0));
        }), _0x213c16.events.add('death.stopPlayerPickup', () => {
          _0x2db615 && (_0x2db615.visible = false, _0x2db615 = null), _0x455b3c = undefined, _0x2e1579 = undefined, _0x59e745.api.stopAnim();
        }), _0x213c16.events.add('playerSpawn', _0x60cd75 => {
          _0x59e745.api.isAuthed() && _0x60cd75 == _0x213c16.players.local && _0x59e745.api.invokeNative('IS_SCREEN_FADED_OUT') && _0x59e745.api.fadeOut(0x0);
        }), _0x213c16.events.add('playerDeath2', _0x327b1a => {
          _0x59e745.api.isAuthed() && _0x327b1a == _0x213c16.players.local && _0x4dfae3.u.bool({
            'likelihood': 0.5
          }) && _0x59e745.api.play3DSound('wilhelm_scream', {
            'volume': 0x32
          });
        });
      },
      0x726: (_0xa2f11e, _0x2076fc, _0x4a5f72) => {
        'use strict';

        _0x4a5f72.r(_0x2076fc);

        var _0x290c07 = _0x4a5f72(0x16a21),
            _0x10fe9c = _0x4a5f72(0x161cd);

        const _0x10719f = _0x10fe9c.players.local;
        let _0x590683 = 0x1,
            _0x2f462d = false;
        _0x10fe9c.events.add('time.everySec', () => {
          if (!_0x290c07.api.isAuthed() || _0x10719f.isDead() || _0x10719f.getVariable('fun.minigames.playing')) return void (_0x4a5f72.g.currentWeedLevel > 0x0 && _0x290c07.api.stopWeedEffect());
          _0x4a5f72.g.currentWeedLevel > 0x0 ? _0x590683++ : _0x590683 > 0x0 && 0x0 == _0x4a5f72.g.currentWeedLevel && (_0x590683 = 0x0);
          let _0xdf73cb = false;

          switch (_0x4a5f72.g.currentWeedLevel) {
            case 0x1:
              _0x590683 % 0x7 == 0x0 && (_0xdf73cb = true);
              break;

            case 0x2:
              _0x590683 % 0x5 == 0x0 && (_0xdf73cb = true);
              break;

            case 0x3:
              _0x590683 % 0x3 == 0x0 && (_0xdf73cb = true);
          }

          if (_0x4a5f72.g.currentWeedLevel > 0x3 && !_0x2f462d && _0x10fe9c.events.call('drugs.playOverdose'), _0xdf73cb) {
            let _0x2e6495 = 0x3;

            switch (_0x4a5f72.g.weedType) {
              case 0x2:
                _0x2e6495 *= 1.5;
                break;

              case 0x3:
                _0x2e6495 *= 2.5;
            }

            _0x290c07.api.setHealth(_0x10fe9c.players.local.getHealth() + 0x3), _0x290c07.api.playFXonEntityOnce(_0x10fe9c.players.local, 'scr_rcbarry2', 'scr_clown_bul', {
              'scale': 0x1
            });
          }
        }), _0x10fe9c.events.add('drugs.playOverdose', async () => {
          _0x2f462d = true, _0x290c07.api.usingSystemAnim(true);

          const _0x33de38 = await _0x290c07.api.taskPlayAnim('random@drunk_driver_1', 'drunk_fall_over', 0x2);

          await _0x10fe9c.game.sleep(0x3e8 * _0x33de38);

          const _0x4ab0f6 = await _0x290c07.api.taskPlayAnim('missfam5_blackout', 'vomit');

          _0x10fe9c.game.sleep(0x2328).then(() => _0x10fe9c.events.callRemote('2796402233', 0x19)), await _0x10fe9c.game.sleep(0x3e8 * _0x4ab0f6), _0x290c07.api.usingSystemAnim(false), _0x290c07.api.stopWeedEffect(), _0x290c07.api.playScreenEffect('DrugsDrivingIn', -0x1), _0x2f462d = false;
        });
      },
      0x143e1: (_0x43fdef, _0x5a8ec3, _0x41e6d9) => {
        'use strict';

        const a0_0x1f4fbb = {
          _0x10faf5: 0x927
        },
              a0_0x4f51b6 = {
          _0x2a08ef: 0x535,
          _0x113d47: 0x253d,
          _0x10f75e: 0x19d6,
          _0x223c24: 0x235b,
          _0x2e63e5: 0x185e,
          _0x47b816: 0x11d9,
          _0x2433fc: 0x2288,
          _0x55d1ba: 0xb5b,
          _0x56abcc: 0x1e21
        },
              a0_0x14ea69 = {
          _0xd92efd: 0x235b,
          _0x49d9ca: 0x16c5,
          _0x1b5a1d: 0x71a,
          _0x35936e: 0x879,
          _0x4ce772: 0x6d5,
          _0x2370ab: 0x1db5,
          _0xc71adf: 0x1233,
          _0x251e11: 0x2530,
          _0x51ae5d: 0x2253,
          _0x31ba60: 0x1d66,
          _0x498803: 0x6d9,
          _0x384c74: 0x307,
          _0x3dde74: 0x1e81,
          _0x313df3: 0x2530,
          _0xcc496e: 0x1d66,
          _0x484fc7: 0x6d9,
          _0x305563: 0x1d66,
          _0x4647c1: 0x3ad
        },
              a0_0x1a05e8 = {
          _0x35cec8: 0x6fd,
          _0x3476d6: 0x71a,
          _0x2a1ef5: 0x6fd,
          _0x41e2e3: 0x6d9,
          _0x1e40b2: 0x2530,
          _0x25fc54: 0x1e47,
          _0x313a07: 0x1db5,
          _0x3ba947: 0x1233,
          _0x47c9a4: 0x1063
        },
              a0_0x5123a2 = {
          _0x34c3ba: 0x1291
        },
              a0_0x13894c = {
          _0x94f473: 0x1bbd,
          _0x118216: 0x1d52,
          _0x507f5b: 0x235b,
          _0x40b171: 0x185e,
          _0x31082c: 0x242d
        },
              a0_0x103193 = {
          _0x18fee5: 0x18cf,
          _0x2213bc: 0x18cf,
          _0x1385aa: 0x12e5,
          _0xba7ef2: 0x235b,
          _0x59a6cf: 0x185e,
          _0x222f59: 0x2530,
          _0x441019: 0x1db5,
          _0x3a3532: 0x235b,
          _0x57410c: 0x185e,
          _0x5c7747: 0x185e,
          _0xf0937f: 0x1657,
          _0x33dae3: 0x1d66,
          _0x1be454: 0x6d9
        },
              a0_0x3a5c1 = {
          _0x3bfa21: 0x15e0,
          _0x5e9475: 0x6d5,
          _0x13b8c8: 0x69d,
          _0x3212c0: 0x535,
          _0x5ea5a9: 0x1b37,
          _0x131939: 0x1d66,
          _0x3f1d0c: 0x1db5,
          _0x2ac8fa: 0x235b,
          _0xb6d461: 0x2253,
          _0xb8620e: 0x6a9,
          _0x73eda9: 0x69d,
          _0x4fe515: 0x18cf,
          _0x4a7abe: 0x879
        };

        _0x41e6d9.r(_0x5a8ec3);

        var _0xb358b7 = _0x41e6d9(0x16a21),
            _0x51cd26 = _0x41e6d9(0x16a7d),
            _0x1c5c3b = _0x41e6d9(0x1d7e),
            _0x524394 = _0x41e6d9(0x161cd);

        let _0x2e3c6f = {
          'active': false,
          'interval': null,
          'lastSent': 0x0,
          'start': async function () {
            this.active || (this.active = true, _0x524394.game.streaming.hasAnimDictLoaded('anim@mp_point') || (await _0xb358b7.api.requestAnimDict('anim@mp_point')), _0x524394.game.weapon.setPedCurrentVisible(_0x524394.players.local.handle, false, true, true, true), _0x524394.players.local.setConfigFlag(0x24, true), _0x524394.players.local.taskMoveNetwork('task_mp_pointing', 0.5, false, 'anim@mp_point', 0x18), this.interval = setInterval(this.process.bind(this), 0x0));
          },
          'stop': function () {
            this.active && (clearInterval(this.interval), this.interval = null, this.active = false, _0x524394.game.task.requestMoveNetworkStateTransition(_0x524394.players.local.handle, 'Stop'), _0x524394.players.local.isInAnyVehicle(true) || _0x524394.game.weapon.setPedCurrentVisible(_0x524394.players.local.handle, true, true, true, true), _0x524394.players.local.setConfigFlag(0x24, false), _0x524394.game.task.clearPedSecondaryTask(_0x524394.players.local.handle));
          },
          'gameplayCam': _0x1c5c3b.X,
          'lastSync': 0x0,
          'getRelativePitch': function () {
            return this.gameplayCam.getRot(0x2).x - _0x524394.players.local.getPitch();
          },
          'process': function () {
            if (this.active) {
              if (_0x524394.game.player.isFreeAiming()) return _0x2e3c6f.stop();

              _0x524394.game.task.isMoveNetworkActive(_0x524394.players.local.handle);

              let _0x12c848 = this.getRelativePitch();

              _0x12c848 < -0x46 ? _0x12c848 = -0x46 : _0x12c848 > 0x2a && (_0x12c848 = 0x2a), _0x12c848 = (_0x12c848 + 0x46) / 0x70;

              let _0x2824d4 = _0x524394.game.cam.getGameplayCamRelativeHeading();

              const _0x315f98 = Math.cos(_0x2824d4),
                    _0x556a10 = Math.sin(_0x2824d4);

              _0x2824d4 < -0xb4 ? _0x2824d4 = -0xb4 : _0x2824d4 > 0xb4 && (_0x2824d4 = 0xb4), _0x2824d4 = (_0x2824d4 + 0xb4) / 0x168;

              const _0x2f6515 = _0x524394.players.local.getOffsetFromGivenWorldCoords(-0.2 * _0x315f98 - _0x556a10 * (0.4 * _0x2824d4 + 0.3), -0.2 * _0x556a10 + _0x315f98 * (0.4 * _0x2824d4 + 0.3), 0.6),
                    _0x38f742 = undefined !== _0xb358b7.api.testPointToPoint(new _0x524394.Vector3(_0x2f6515.x, _0x2f6515.y, _0x2f6515.z - 0.2), new _0x524394.Vector3(_0x2f6515.x, _0x2f6515.y, _0x2f6515.z + 0.2), _0x524394.players.local.handle, 0x7);

              _0x524394.game.task.setMoveNetworkSignalFloat(_0x524394.players.local.handle, 'Pitch', _0x12c848), _0x524394.game.task.setMoveNetworkSignalFloat(_0x524394.players.local.handle, 'Heading', -0x1 * _0x2824d4 + 0x1), _0x524394.game.task.setMoveNetworkSignalBool(_0x524394.players.local.handle, 'isBlocked', !!_0x38f742), _0x524394.game.task.setMoveNetworkSignalBool(_0x524394.players.local.handle, 'isFirstPerson', 0x4 == !!_0xb358b7.api.invokeNative('GET_CAM_VIEW_MODE_FOR_CONTEXT', _0xb358b7.api.invokeNative('_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT'))), Date.now() - this.lastSent > 0x64 && (this.lastSent = Date.now(), _0x524394.events.callRemoteUnreliable('3009520724', _0x12c848, _0x2824d4));
            }
          }
        };
        _0x524394.events.add('fpsync.update', async (_0x3ae7f8, _0x3bbdf4, _0x14f5e6) => {
          let _0x8ba5dc = function (_0x59b8f5) {
            let _0x5ec311 = _0x524394.players.atRemoteId(_0x59b8f5);

            if (null == _0x5ec311 || null == _0x5ec311) return null;
            return _0x5ec311;
          }(parseInt(_0x3ae7f8));

          if (_0x524394.players.exists(_0x8ba5dc) && null != _0x8ba5dc && _0x8ba5dc != _0x524394.players.local) {
            if (_0x8ba5dc.lastReceivedPointing = Date.now(), !_0x8ba5dc.pointingInterval) {
              if (_0x8ba5dc.pointingInterval = setInterval(function () {
                try {
                  if (!_0x524394.players.exists(_0x8ba5dc)) return clearInterval(_0x8ba5dc.pointingInterval), void (_0x8ba5dc.pointingInterval = undefined);
                  Date.now() - _0x8ba5dc.lastReceivedPointing > 0x3e8 && (clearInterval(_0x8ba5dc.pointingInterval), _0x8ba5dc.lastReceivedPointing = undefined, _0x8ba5dc.pointingInterval = undefined, _0x524394.game.task.requestMoveNetworkStateTransition(_0x8ba5dc.handle, 'Stop'), _0x8ba5dc.isInAnyVehicle(true) || _0x524394.game.weapon.setPedCurrentVisible(_0x8ba5dc.handle, true, true, true, true), _0x8ba5dc.setConfigFlag(0x24, false), _0x524394.game.task.clearPedSecondaryTask(_0x8ba5dc.handle));
                } catch (_0x4294f4) {
                  _0xb358b7.api.sendError(_0x4294f4);
                }
              }.bind(_0x8ba5dc), 0x1f4), _0x524394.game.streaming.hasAnimDictLoaded('anim@mp_point') || (await _0xb358b7.api.requestAnimDict('anim@mp_point')), !_0x524394.players.exists(_0x8ba5dc)) return;
              _0x524394.game.weapon.setPedCurrentVisible(_0x8ba5dc.handle, false, true, true, true), _0x8ba5dc.setConfigFlag(0x24, true), _0x8ba5dc.taskMoveNetwork('task_mp_pointing', 0.5, false, 'anim@mp_point', 0x18);
            }

            _0x524394.game.task.setMoveNetworkSignalFloat(_0x8ba5dc.handle, 'Pitch', _0x3bbdf4), _0x524394.game.task.setMoveNetworkSignalFloat(_0x8ba5dc.handle, 'Heading', -0x1 * _0x14f5e6 + 0x1), _0x524394.game.task.setMoveNetworkSignalBool(_0x8ba5dc.handle, 'isBlocked', false), _0x524394.game.task.setMoveNetworkSignalBool(_0x8ba5dc.handle, 'isFirstPerson', false);
          }
        }), _0x524394.keys.bind(_0x51cd26.t.B, true, () => {
          !_0xb358b7.api.isAuthed() || _0x524394.game.player.isFreeAiming() || _0x524394.gui.cursor.visible || _0x524394.players.local.getVariable('fun.minigames.playing') || _0x41e6d9.g.piano || _0x41e6d9.g.playableInstrument || _0x524394.players.local.vehicle || _0x41e6d9.g.currentInterface || _0x524394.players.local.activeItemId || _0x524394.players.local.getVariable('playerInTrunk') || _0xb358b7.api.canUseAnim() && _0x2e3c6f.start();
        }), _0x524394.keys.bind(_0x51cd26.t.B, false, () => {
          _0x2e3c6f.stop();
        });
      },
      0x9555: (_0x1f6071, _0xe62305, _0xabd57a) => {
        'use strict';

        const a0_0x3d15a8 = {
          _0x5b6e1a: 0x2530,
          _0x54473f: 0x192f,
          _0x4b0de8: 0x288,
          _0x3818b1: 0x2195,
          _0x4f6c32: 0x552
        },
              a0_0x248382 = {
          _0x18249b: 0x235b,
          _0x108bb4: 0x4b9,
          _0x1354ab: 0x2042,
          _0x3e27c7: 0x1e13,
          _0x30a7a2: 0x1fcc
        },
              a0_0x5ca09d = {
          _0x1d9c12: 0x2530,
          _0x45a69c: 0xe1b,
          _0x11e20e: 0x192f
        },
              a0_0x4ffe4c = {
          _0x53314d: 0x235b,
          _0x7bf30c: 0x2379,
          _0x554beb: 0x1d66,
          _0x1c69d3: 0x1e61
        },
              a0_0xf7a08 = {
          _0x530b41: 0x209f,
          _0x5aef31: 0x2042,
          _0x2e2837: 0x1e61,
          _0x215b95: 0x192f,
          _0x3353c2: 0x288,
          _0x443235: 0x1d66,
          _0x22c328: 0x1048,
          _0x184caf: 0x1174,
          _0x2ba375: 0xe1b,
          _0x4d6c1f: 0x192f,
          _0x386172: 0x192f,
          _0x2cf09b: 0x552,
          _0x201514: 0x552,
          _0x10ca17: 0x628,
          _0x3f8d70: 0x628,
          _0x3f786b: 0x24db,
          _0x42f9ea: 0x1fe9,
          _0x1f920f: 0x235b,
          _0x439622: 0x69f,
          _0x3791eb: 0x2530,
          _0x471d84: 0x552
        },
              a0_0x5e7f11 = {
          _0x3465f8: 0x1cba
        },
              a0_0x31d145 = {
          _0x2f3311: 0x628,
          _0x4d120d: 0x19e6,
          _0x5b0b8d: 0x2530,
          _0x2ef034: 0xd17
        },
              a0_0xb31707 = {
          _0x4cac8e: 0x1770,
          _0x18d43e: 0xcdc,
          _0x3be932: 0x1cba,
          _0x31e36f: 0xcce,
          _0x9efeb: 0x1e13
        };
        _0xabd57a.r(_0xe62305), _0xabd57a.d(_0xe62305, {
          'greenZoneController': () => _0x485a15
        });

        var _0x424ed7 = _0xabd57a(0x16a21),
            _0x454164 = _0xabd57a(0xf01d),
            _0x573061 = _0xabd57a(0x161cd);

        const _0x510974 = {
          'disabledGreenZones': []
        };
        _0x573061.events.add('playerPolygonEnter', (_0x4dab62, _0x2a0ff2) => {
          _0x2a0ff2.isGreenZone && (_0x485a15.pseudoGreenZone = _0x4dab62, _0x510974.disabledGreenZones.includes(_0x4dab62) || _0x485a15.enable(_0x4dab62, _0x2a0ff2), _0x2a0ff2.maxSpeed && _0x485a15.setMaxSpeed(_0x2a0ff2.maxSpeed));
        }), _0x573061.events.add('playerPolygonExit', (_0x861490, _0x317fb1) => {
          _0x317fb1.isGreenZone && (_0x485a15.pseudoGreenZone = -0x1, _0x485a15.disable(_0x861490, _0x317fb1, !_0x510974.disabledGreenZones.includes(_0x861490)), _0x317fb1.maxSpeed && _0x485a15.setMaxSpeed());
        }), _0x573061.events.add('entityStreamIn', _0x2d785f => {
          _0x2d785f && 'player' === _0x2d785f.type && _0x573061.players.exists(_0x2d785f) && 0x0 !== _0x2d785f.handle && _0x485a15.entityStreamIn(_0x2d785f);
        });

        const _0x3a453f = (_0x3024da = _0x573061.world.data.disabledGreenZones) => {
          let _0xdc6149 = [];
          'string' == typeof _0x3024da && _0x3024da.length && (_0xdc6149 = _0x3024da.split('^').map(_0x5e03d4 => parseInt(_0x5e03d4)));

          const _0x5d36db = _0x454164.p.find(_0x432eef => _0x432eef.id === _0x485a15.pseudoGreenZone);

          _0xdc6149.includes(_0x485a15.pseudoGreenZone) ? _0x485a15.disable(_0x485a15.pseudoGreenZone, _0x5d36db, true) : _0x510974.disabledGreenZones.includes(_0x485a15.pseudoGreenZone) && !_0xdc6149.includes(_0x485a15.pseudoGreenZone) && -0x1 != _0x485a15.pseudoGreenZone && _0x485a15.enable(_0x485a15.pseudoGreenZone, _0x5d36db, true), _0x510974.disabledGreenZones = _0xdc6149;
        };

        _0x573061.events.add('worldDataReady', () => {
          _0x3a453f();
        }), _0x573061.events.add('worldDataChanged', (_0x53cff1, _0x3ae60f) => {
          'disabledGreenZones' === _0x53cff1 && _0x3a453f(_0x3ae60f);
        });

        const _0x485a15 = new class {
          constructor() {
            this.inGreenZone = false, this.currentGreenZone = new Set(), this.pseudoGreenZone = -0x1, this.zoneLimit = undefined, this.exceptPlayers = new Set(), _0x573061.game.ped.addRelationshipGroup('FRIENDLY_PLAYER', this.hashes.friendly), _0x573061.game.ped.addRelationshipGroup('NON_FRIENDLY_PLAYER', this.hashes.nonFriendly), _0x573061.game.ped.setRelationshipBetweenGroups(0x5, this.hashes.player, this.hashes.nonFriendly), _0x573061.game.ped.setRelationshipBetweenGroups(0x5, this.hashes.nonFriendly, this.hashes.player), _0x573061.game.ped.setRelationshipBetweenGroups(0x0, this.hashes.player, this.hashes.friendly), _0x573061.game.ped.setRelationshipBetweenGroups(0x0, this.hashes.friendly, this.hashes.player), _0x573061.game.entity.setCanBeDamagedByRelationshipGroup(_0x573061.players.local.handle, false, this.hashes.friendly), _0x573061.game.entity.setCanBeDamagedByRelationshipGroup(_0x573061.players.local.handle, true, this.hashes.nonFriendly);
          }

          get ['hashes']() {
            return {
              'player': _0x573061.players.local.getRelationshipGroupHash(),
              'nonFriendly': _0x573061.game.joaat('NON_FRIENDLY_PLAYER'),
              'friendly': _0x573061.game.joaat('FRIENDLY_PLAYER')
            };
          }

          ['enable'](_0x51e2a7, _0xbdb4cd, _0x2f341b = true) {
            const _0x1ea84a = this.inGreenZone;
            this.inGreenZone = true, this.currentGreenZone.add(_0x51e2a7), _0xbdb4cd && null != _0xbdb4cd.exceptMembers && _0xbdb4cd.exceptMembers.forEach(_0x838eba => this.exceptPlayers.add(_0x838eba)), _0x573061.players.forEachInStreamRange(_0x4a9369 => {
              _0x4a9369.handle != _0x573061.players.local.handle && _0x573061.game.ped.setRelationshipGroupDefaultHash(_0x4a9369.handle, this.hashes.friendly);
            }), _0x424ed7.api.is11 && (_0x573061.players.local.setCanBeDamaged(false), _0x573061.events.call('utils.disablePlayerDamage', true), _0x424ed7.api.invokeNative('SET_PLAYER_CAN_DO_DRIVE_BY', _0x573061.players.local.handle, false)), _0x573061.players.local.setStealthMovement(false, 'DEFAULT_ACTION'), _0x2f341b && !_0x1ea84a && _0x424ed7.api.notifyTrans('greenzone.entered', {
              'type': 'success',
              'duration': 0x5dc
            }), _0x573061.events.callRemote('2846590560', this.inGreenZone);
          }

          ['disable'](_0x50576e, _0x37a021, _0x17bc28 = true) {
            const a0_0x25233c = {
              _0x373137: 0x185e,
              _0x30f9c3: 0x1d66,
              _0x19fc2e: 0xe1b,
              _0x2d27e0: 0x2195,
              _0x3d2a57: 0x192f,
              _0x2ff781: 0x552
            };
            this.currentGreenZone.delete(_0x50576e), _0x37a021 && null != _0x37a021.exceptMembers && _0x37a021.exceptMembers.forEach(_0x5c0c2f => this.exceptPlayers.delete(_0x5c0c2f)), 0x0 == this.currentGreenZone.size && (this.inGreenZone = false, _0x573061.players.forEachInStreamRange(_0x249071 => {
              _0x249071.handle != _0x573061.players.local.handle && _0x573061.game.ped.setRelationshipGroupDefaultHash(_0x249071.handle, this.hashes.nonFriendly);
            }), _0x424ed7.api.is11 && (_0x573061.players.local.setCanBeDamaged(true), _0x573061.events.call('utils.disablePlayerDamage', false), _0x424ed7.api.invokeNative('SET_PLAYER_CAN_DO_DRIVE_BY', _0x573061.players.local.handle, true)), _0x17bc28 && _0x424ed7.api.notifyTrans('greenzone.left', {
              'type': 'error',
              'duration': 0x5dc
            }), _0x573061.events.callRemote('2846590560', this.inGreenZone));
          }

          ['setMaxSpeed'](_0x2d9572) {
            const _0x470b1e = _0x573061.players.local.vehicle;
            _0x2d9572 ? (this.zoneLimit = parseInt(_0x2d9572 / 3.6), _0x470b1e && _0x470b1e.setMaxSpeed(parseInt(_0x2d9572 / 3.6))) : (this.zoneLimit = null, _0x470b1e && _0x470b1e.setMaxSpeed(0x270f), _0x573061.events.call('speedlimiter.startProcess'));
          }

          ['entityStreamIn'](_0x52bd1c) {
            0x1 == this.inGreenZone ? _0x573061.game.ped.setRelationshipGroupDefaultHash(_0x52bd1c.handle, this.hashes.friendly) : _0x573061.game.ped.setRelationshipGroupDefaultHash(_0x52bd1c.handle, this.hashes.nonFriendly);
          }

          ['canBeDamagedByPlayer'](_0xd427ed) {
            const _0x284cf0 = _0xd427ed && _0x573061.players.exists(_0xd427ed);

            return !!(_0x284cf0 && _0xd427ed.hasVariable('member') && this.exceptPlayers.has(_0xd427ed.getVariable('member'))) || (!_0x284cf0 || !_0x424ed7.api.getEntitySync(_0xd427ed, 'inGreenZone', 'boolean')) && !this.inGreenZone;
          }

        }();
      },
      0xca04: (_0x1c7329, _0x164305, _0x5445cd) => {
        'use strict';

        const a0_0x1d9ca4 = {
          _0x187b30: 0x235b
        },
              a0_0x21b69f = {
          _0x4beb97: 0xe3b,
          _0x21fdc1: 0x2524
        };

        _0x5445cd.r(_0x164305);

        var _0x182788 = _0x5445cd(0x16a21),
            _0x46f34a = _0x5445cd(0x161cd);

        const _0x3951ff = _0x46f34a.players.local;

        _0x46f34a.events.add('time.every02Sec', () => {
          _0x182788.api.isAuthed() && _0x46f34a.players.forEachInStreamRange(_0x27ab0d => {
            _0x27ab0d.hasLosTo = !!_0x3951ff.hasClearLosTo(_0x27ab0d.handle, 0x11), _0x27ab0d.onScreen = !!_0x27ab0d.isOnScreen();
          });
        });
      },
      0x10564: (_0x3fc0f4, _0x818a28, _0x3dd676) => {
        'use strict';

        const a0_0x2429e2 = {
          _0x32adbd: 0x15b7,
          _0x555203: 0xe6d
        },
              a0_0x29aff6 = {
          _0x5e1d09: 0x535,
          _0x38e7a2: 0x1d2,
          _0x165186: 0x1e5,
          _0x439330: 0x535,
          _0x5ae817: 0x1e5
        },
              a0_0x19db85 = {
          _0x593deb: 0x15b7
        };
        _0x3dd676.r(_0x818a28), _0x3dd676.d(_0x818a28, {
          'hitMarker': () => _0x5a70e4
        });

        var _0x4c3445 = _0x3dd676(0x16a21),
            _0x483e66 = _0x3dd676(0x11ed7),
            _0x35ba11 = _0x3dd676.n(_0x483e66),
            _0x5bdd47 = _0x3dd676(0x161cd);

        const _0xc73aaa = _0x35ba11()(0.39, 0.01, 0.85, 0.72),
              _0x190a81 = {
          'lastSound': 0x0
        };

        class _0x23c386 {
          ['amount'];
          ['position'];
          ['count'];
          ['scale'];

          constructor(_0x3a3ce6, _0x127236, _0xf824c9) {
            this.amount = _0x3a3ce6, this.position = _0x127236, this.scale = _0xf824c9 || 0.3, this.startTime = Date.now(), this.isActive = true;
          }

        }

        const _0x5a70e4 = new class {
          constructor() {
            this.list = [];
          }

          ['add'](_0x4a6648, _0x1e1024, _0x4b30c8) {
            _0x4c3445.api.getPlayerSetting('hitmarker') && (this.list.push(new _0x23c386(_0x4a6648, _0x1e1024, _0x4b30c8)), _0x4c3445.api.getPlayerSetting('hitmarkerSound') && Date.now() - _0x190a81.lastSound > 0x64 && (_0x4c3445.api.playSound('hitmarker', {
              'volume': 0x32
            }), _0x190a81.lastSound = Date.now()));
          }

          ['render']() {
            const a0_0x51aa37 = {
              _0x5957c1: 0xffb,
              _0x534927: 0x13f4,
              _0x1b7c43: 0x15b7,
              _0x3d2126: 0x226e,
              _0x5497ba: 0x2143,
              _0x596d81: 0x9d0,
              _0x18d333: 0x1e35,
              _0x5a1328: 0x1f4c,
              _0x4ee43e: 0x1f30
            };
            this.list.forEach(_0x357cb7 => {
              const _0x2ff3da = Date.now(),
                    _0x5af3d5 = Math.min(0x1, (_0x2ff3da - _0x357cb7.startTime) / 0x3e8),
                    _0x1f81ac = _0xc73aaa(_0x5af3d5);

              if (_0x5af3d5 >= 0.999999) {
                const _0x1532b2 = _0x5a70e4.list.findIndex(_0x339ac0 => _0x339ac0 == _0x357cb7);

                return void _0x5a70e4.list.splice(_0x1532b2, 0x1);
              }

              const _0x7e554 = _0x4c3445.api.lerp(0x0, 0x9b, _0x1f81ac);

              _0x5bdd47.game.graphics.drawText(_0x357cb7.amount.toString(), [_0x357cb7.position.x, _0x357cb7.position.y, _0x357cb7.position.z + 1.4 + 0.015 * _0x7e554], {
                'font': 0x0,
                'centre': true,
                'color': [0xff, 0xff, 0xff, 0x9b - _0x7e554],
                'scale': [_0x357cb7.scale, _0x357cb7.scale],
                'outline': true
              });
            });
          }

        }();

        _0x5bdd47.events.add('render', () => {
          _0x5a70e4.render();
        });
      },
      0x12d88: (_0x2ecb5c, _0x4c7470, _0x27345d) => {
        _0x27345d(0x8aca), _0x27345d(0x210b), _0x27345d(0xe723), _0x27345d(0x1bd8), _0x27345d(0xa5f5), _0x27345d(0x9555), _0x27345d(0x143e1), _0x27345d(0x165e6), _0x27345d(0xfd78), _0x27345d(0x81f3), _0x27345d(0x7d88), _0x27345d(0xc456), _0x27345d(0x8d83), _0x27345d(0x726), _0x27345d(0x14471), _0x27345d(0x14c3a), _0x27345d(0xfc70), _0x27345d(0x2441), _0x27345d(0x15357), _0x27345d(0xca04), _0x27345d(0x915a), _0x27345d(0x4e3e), _0x27345d(0xdce6), _0x27345d(0x10564);
      },
      0xc456: (_0x4ef351, _0xde358a, _0x4ca418) => {
        'use strict';

        const a0_0x52a5d4 = {
          _0x3985a8: 0x2620,
          _0x23c954: 0x535,
          _0x2e3c60: 0x21e0,
          _0x595a43: 0x1b61,
          _0x52aa44: 0x19e6,
          _0x4da39e: 0x831,
          _0x4614f3: 0x19f2,
          _0x4f7792: 0x24f1,
          _0x4f29bb: 0x1b29,
          _0x8f3b85: 0x1b29,
          _0x5bef95: 0x644
        },
              a0_0x53f2db = {
          _0xc8d8f6: 0x535,
          _0x28726b: 0x623,
          _0x24caa5: 0x1dc8,
          _0x3cde24: 0x6da,
          _0x19d63c: 0xb76,
          _0x5def78: 0x831,
          _0x575d0b: 0x19d1,
          _0x5b7f7f: 0x19d1,
          _0x1ce2de: 0x21e0,
          _0x97e4c7: 0xfb7,
          _0x29da0e: 0x1792,
          _0x39ec59: 0x1792,
          _0x3dc8bd: 0xe19,
          _0x4f7f1f: 0x831,
          _0x521f8d: 0x2315,
          _0xa9327c: 0x1b61
        },
              a0_0x2fd74e = {
          _0x538028: 0x2315,
          _0x13aa03: 0x168c,
          _0x1be7c6: 0x1971,
          _0x19cf84: 0x1dc8,
          _0x4f6d04: 0x831,
          _0x58410e: 0x19f2,
          _0x279bd8: 0x1b61
        };

        _0x4ca418.r(_0xde358a);

        var _0x1b7063 = _0x4ca418(0x16a21),
            _0xc01bf5 = _0x4ca418(0x35cd),
            _0x935c0d = (_0x4ca418(0x1790f), _0x4ca418(0x161cd));

        _0x935c0d.inventory = {}, _0x935c0d.inventory.getItemById = _0x5d6df0 => _0xc01bf5.Z[_0x5d6df0], _0x935c0d.inventory.close = () => _0x935c0d.events.call('inventoryApi.close'), _0x935c0d.inventory.isWeapon = _0x27714d => !!_0xc01bf5.Z[_0x27714d].caliber, _0x935c0d.inventory.isBox = _0x3ac74e => 'items.tags.box' === _0xc01bf5.Z[_0x3ac74e].tag, _0x935c0d.inventory.isMaterials = _0x3aff66 => 'items.tags.materials' === _0xc01bf5.Z[_0x3aff66].tag, _0x935c0d.inventory.isHandItem = _0x338a2f => _0xc01bf5.Z[_0x338a2f].canHandItem, _0x935c0d.inventory.getItemDescription = _0xac1254 => {
          let _0x264229;

          const _0x3493b4 = _0x935c0d.inventory.getItemConfig(_0xac1254.itemId);

          return _0x264229 = _0x935c0d.inventory.isItemClothes(_0xac1254) ? _0x1b7063.api.getClothesTitle(_0xac1254.gender, _0x3493b4.description, _0xac1254.drawable, _0xac1254.texture) : _0x3493b4.description, _0x264229;
        }, _0x935c0d.inventory.getItemConfig = _0x3b260f => _0xc01bf5.Z.find(_0x4f00bf => _0x4f00bf.id === _0x3b260f), _0x935c0d.inventory.isWallet = _0x150c6d => _0x150c6d && 0x1d9 === _0x150c6d.itemId, _0x935c0d.inventory.isBag = _0x5ea8a7 => _0x5ea8a7 && 0x35 === _0x5ea8a7.itemId, _0x935c0d.inventory.fetchInventoryItem = (_0x174d1c, _0x5ab8bf, _0x50f7ce) => {
          _0x5ab8bf || (_0x5ab8bf = _0x1b7063.api.getEntitySync(_0x935c0d.players.local, 'gender', 'number'));
          const _0x5556a9 = {
            'id': _0x174d1c[0x0],
            'itemId': _0x174d1c[0x1],
            'slot': _0x174d1c[0x2],
            'count': _0x174d1c[0x3],
            'condition': _0x174d1c[0x4],
            'position': _0x50f7ce || 'player',
            'objectId': _0x174d1c[0x5]
          };
          _0x174d1c[0x6] && (_0x5556a9.owner = _0x174d1c[0x6]), null != _0x174d1c[0x7] && 'object' != typeof _0x174d1c[0x7] ? (_0x5556a9.component = _0x174d1c[0x7], _0x5556a9.drawable = _0x174d1c[0x8], _0x5556a9.texture = _0x174d1c[0x9], _0x5556a9.isProp = _0x174d1c[0xa], _0x5556a9.gender = _0x174d1c[0xb], _0x174d1c[0xc] && (_0x5556a9.info = _0x174d1c[0xc])) : null != _0x174d1c[0x7] && 'object' == typeof _0x174d1c[0x7] && (_0x5556a9.info = _0x174d1c[0x7]);

          const _0x2ee4dc = _0xc01bf5.Z.find(_0x56a692 => _0x56a692.id === _0x5556a9.itemId);

          return _0x2ee4dc && (Object.assign(_0x5556a9, _0x2ee4dc, {
            'id': _0x5556a9.id
          }), _0x2ee4dc.caliber && (_0x5556a9.caliber = _0x2ee4dc.caliber), _0x5556a9.description = _0x935c0d.inventory.getItemDescription({
            'itemId': _0x5556a9.itemId,
            'gender': _0x5ab8bf,
            'drawable': _0x5556a9.drawable,
            'texture': _0x5556a9.texture
          }), _0x935c0d.inventory.isItemClothes(_0x5556a9) && (_0x5556a9.title = _0x2ee4dc.description)), _0x5556a9;
        }, _0x935c0d.inventory.getInventoryItems = (_0x454b9e, _0x557b33, _0x27fd4b) => _0x557b33.map(_0x521204 => _0x935c0d.inventory.fetchInventoryItem(_0x521204, _0x454b9e, _0x27fd4b)), _0x935c0d.inventory.getClothesData = (_0x17af06, _0x1195ac) => {
          const _0x5312d3 = _0x1b7063.api.getEmptyClothesSlots(_0x17af06),
                _0x372766 = {};

          return _0x1195ac.forEach(_0x5535ab => {
            if (_0x5312d3.some(_0x542ecb => _0x542ecb.isProp === _0x5535ab.isProp && _0x542ecb.component === _0x5535ab.component && _0x542ecb.drawable === _0x5535ab.drawable)) ;else {
              const _0x591f8f = _0x1b7063.api.getClothesParams().find(_0x5c9c9c => _0x5535ab.isProp === _0x5c9c9c.isProp && _0x5535ab.component === _0x5c9c9c.component);

              if (_0x591f8f) {
                const _0x3bad8c = _0xc01bf5.Z.find(_0x56eb90 => _0x56eb90.description === _0x591f8f.type);

                if (_0x3bad8c && _0x3bad8c.id) {
                  const _0x2b1d65 = _0xc01bf5.Z.find(_0x2a34c3 => _0x2a34c3.id === _0x3bad8c.id);

                  _0x2b1d65 && (_0x5535ab.description = _0x1b7063.api.getClothesTitle(_0x17af06, _0x591f8f.type, _0x5535ab.drawable, _0x5535ab.texture), _0x5535ab.title = _0x2b1d65.description, _0x5535ab.tag = _0x2b1d65.tag, _0x5535ab.itemId = _0x3bad8c.id, _0x5535ab.width = _0x2b1d65.width, _0x5535ab.height = _0x2b1d65.height, _0x5535ab.weight = _0x2b1d65.weight, _0x2b1d65.bagConfig && (_0x5535ab.bagConfig = _0x2b1d65.bagConfig)), _0x591f8f && (_0x372766[_0x591f8f.type] = { ..._0x5535ab,
                    'condition': 0x0,
                    'count': 0x0,
                    'position': 'clothes'
                  });
                }
              }
            }
          }), _0x372766;
        }, _0x935c0d.inventory.isPlayerHasPhone = _0x33a12b => _0x33a12b.inventory.some(_0x33daa5 => 0xef === _0x33daa5.itemId), _0x935c0d.inventory.isPlayerHasIpad = _0x5ea93f => _0x5ea93f.inventory.some(_0x43e007 => 0x43 === _0x43e007.itemId), _0x935c0d.inventory.isItemClothes = _0x5c9be4 => _0x5c9be4 && _0x5c9be4.itemId && _0x5c9be4.itemId >= 0x28 && _0x5c9be4.itemId <= 0x36, _0x935c0d.inventory.getFulllPlayerItems = _0x38bcad => [...(_0x38bcad.inventory && Array.isArray(_0x38bcad.inventory) ? _0x38bcad.inventory : []), ...(_0x38bcad.wallet && Array.isArray(_0x38bcad.wallet) ? _0x38bcad.wallet : []), ...(_0x38bcad.bag && Array.isArray(_0x38bcad.bag) ? _0x38bcad.bag : [])], _0x935c0d.inventory.hasItem = (_0x7fefeb, _0x1aace2) => !(!_0x935c0d.players.exists(_0x7fefeb) || !_0x7fefeb.inventory) && _0x935c0d.inventory.getFulllPlayerItems(_0x7fefeb).some(_0x1d13ec => _0x1d13ec.itemId === _0x1aace2), _0x935c0d.inventory.pocketItem = () => _0x935c0d.events.callRemote('1980034567'), _0x935c0d.inventory.componentIdToItemId = (_0x2c76d8, _0x2321dd = 0x0) => {
          if (_0x2321dd) switch (_0x2c76d8) {
            case 0x0:
              return 0x2e;

            case 0x1:
              return 0x2f;

            case 0x2:
              return 0x30;

            case 0x6:
              return 0x31;

            case 0x7:
              return 0x32;
          } else switch (_0x2c76d8) {
            case 0x1:
              return 0x28;

            case 0x4:
              return 0x29;

            case 0x5:
              return 0x35;

            case 0x6:
              return 0x2a;

            case 0x7:
              return 0x2b;

            case 0x8:
              return 0x2c;

            case 0x9:
              return 0x34;

            case 0xa:
              return 0x33;

            case 0xb:
              return 0x2d;
          }
        };
      },
      0x4e3e: (_0x2f4121, _0x484c8f, _0x16a0d3) => {
        'use strict';

        const a0_0x207949 = {
          _0x3366e1: 0x535,
          _0x4d6e26: 0x253d,
          _0x54600b: 0x2251,
          _0x80d29: 0x1fab,
          _0x54d91f: 0x2251
        };

        _0x16a0d3.r(_0x484c8f);

        var _0xc114cf = _0x16a0d3(0x16a21),
            _0x43dc34 = _0x16a0d3(0x161cd);

        const _0x3f3501 = _0x43dc34.players.local,
              _0x50bf02 = _0x43dc34.colshapes.newSphere(484.21, -1014.19, 26.27, 0x19, -0x1);

        _0x50bf02.jailName = 'lspd';

        const _0x13d228 = _0x43dc34.colshapes.newSphere(1861.82, 3693.37, 30.25, 0x14, -0x1);

        _0x13d228.jailName = 'sandy';

        const _0x41611e = _0x43dc34.colshapes.newSphere(-446.68, 6011.57, 27.98, 0x14, -0x1);

        _0x41611e.jailName = 'paleto', _0x43dc34.colshapes.newSphere(1690.72, 2587.45, 45.56, 0xc8, -0x1).jailName = 'demorgan';

        const _0x46241a = _0x43dc34.colshapes.newSphere(2507.84, -351.92, 105.69, 0x7, -0x1);

        _0x46241a.jailName = 'fib', _0x43dc34.events.add('playerExitColshape', _0x15d5d1 => {
          _0xc114cf.api.isAuthed() && _0x43dc34.colshapes.exists(_0x15d5d1) && [_0x50bf02, _0x13d228, _0x41611e, _0x46241a].includes(_0x15d5d1) && (_0x3f3501.inJailShape = false, _0x43dc34.events.callRemote('322737976', false));
        }), _0x43dc34.events.add('playerEnterColshape', _0x280c61 => {
          _0xc114cf.api.isAuthed() && _0x43dc34.colshapes.exists(_0x280c61) && [_0x50bf02, _0x13d228, _0x41611e, _0x46241a].includes(_0x280c61) && (_0x3f3501.inJailShape = _0x280c61.jailName, _0x43dc34.events.callRemote('322737976', _0x3f3501.inJailShape));
        });
      },
      0xfd78: (_0x5d642f, _0x502606, _0x33618b) => {
        'use strict';

        const a0_0xdb50fa = {
          _0x18e59f: 0x284,
          _0x3b75ac: 0x535,
          _0x1aa238: 0xebb
        },
              a0_0x9343d7 = {
          _0xf25ee3: 0x1d66,
          _0x588eba: 0x628,
          _0x4f87a5: 0x1668,
          _0x3a438e: 0x2530,
          _0x12deff: 0x1134,
          _0x7569cb: 0x1fc7,
          _0xf47a3c: 0xc95,
          _0x55a04d: 0x342,
          _0x28b44e: 0x2330,
          _0x373649: 0x1e35,
          _0x1017dd: 0x121b,
          _0x1bb157: 0x1d66,
          _0x534e85: 0x1596,
          _0x550cdb: 0x1d66
        },
              a0_0x5f1877 = {
          _0x259f29: 0x1d66,
          _0x1505c1: 0x17f2
        },
              a0_0x26bc97 = {
          _0x322595: 0x25d8,
          _0x4bfec0: 0x1e35,
          _0x604f96: 0xe7b
        },
              a0_0x174040 = {
          _0x43edbe: 0x2530,
          _0x1b0baa: 0xafa,
          _0x4ab692: 0x4b8,
          _0x335545: 0x1e35,
          _0x5afc50: 0x1412,
          _0x1d377f: 0x535,
          _0x369ed0: 0x535,
          _0x2e93f8: 0x9d0,
          _0xc9a381: 0x1183,
          _0x1a2164: 0x2001,
          _0xdfd38f: 0x43b,
          _0x130558: 0x1e6a,
          _0x3c1bfd: 0x177,
          _0x46fb25: 0x177,
          _0x34f795: 0xa0e,
          _0x1ee326: 0x1183,
          _0x2d97d9: 0x1e6a,
          _0x35f0f9: 0x2001,
          _0x4fe06b: 0x43b,
          _0x2ff534: 0x1f97,
          _0x453652: 0x204
        },
              a0_0x2da9ec = {
          _0x1cd21e: 0x32e,
          _0x2f477c: 0xb7a,
          _0x3b1745: 0x1b85,
          _0x2a616e: 0xc95,
          _0x5a04d5: 0xc74,
          _0x3efc2a: 0xc95,
          _0x33e9bb: 0x1ec5,
          _0x4ab4b5: 0x7c7,
          _0x1f3241: 0x7c7,
          _0x218dbe: 0x192d,
          _0x235686: 0xc95,
          _0x5b0b9a: 0x1a5a
        };

        _0x33618b.r(_0x502606);

        var _0x2cd01b = _0x33618b(0x16a21),
            _0x507b13 = _0x33618b(0x11689),
            _0x2a8de6 = (_0x33618b(0x1492d), _0x33618b(0x161cd));

        let _0x444270 = _0x2a8de6.game.gameplay.getFrameTime();

        _0x2a8de6.events.add('render', () => {
          _0x444270 = _0x2a8de6.game.gameplay.getFrameTime();
        });

        var _0x3ee530 = _0x33618b(0x161cd);

        _0x3ee530.nametags.enabled = false, _0x3ee530.nametags.useScreen2dCoords = true, _0x3ee530.nametags.orderByDistance = true;
        const _0x5c250a = _0x3ee530.players.local,
              _0x770a97 = {
          'maxDistance': 0xe1,
          'textScale': 0.275,
          'spriteScale': 0.7,
          'width': 0.035,
          'height': 0.003,
          'border': 0.001,
          'color': [0xff, 0xff, 0xff, 0xc8],
          'healthColor': [0xff, 0xff, 0xff],
          'healthColorBG': [0x3d, 0x3d, 0x3d],
          'world3dToScreen2d_limit': 0x8c,
          'voice_sprites': ['leaderboard_audio_inactive', 'leaderboard_audio_1', 'leaderboard_audio_2', 'leaderboard_audio_3'],
          'textures': ['mpleaderboard', 'mplobby', 'commonmenu', 'commonmenutu', 'majestic_textures_001']
        };
        let _0x46ae52 = 0x0,
            _0x1f22ce = {},
            _0x31e0d3 = 0x0;
        _0x3ee530.events.add('render', _0x5d6c65 => {
          if (!(_0x507b13.isHudActive && _0x5d6c65 && _0x5d6c65.length && _0x2cd01b.api.getPlayerSetting('ids') && _0x2cd01b.api.isAuthed())) return;

          const _0x58f284 = _0x5c250a.friends || [],
                _0x8d0803 = _0x5c250a.member,
                _0x5723e9 = _0x5c250a.family,
                _0x28546b = _0x2cd01b.api.isAdmin(_0x5c250a);

          _0x31e0d3 = 0x0;

          for (const [_0x4e1aa1, _0x14c9e6, _0x23b51d, _0x55dd09] of _0x5d6c65) _0x2a909f({
            'player': _0x4e1aa1,
            'x': _0x14c9e6,
            'y': _0x23b51d,
            'distance': _0x55dd09,
            'friends': _0x58f284,
            'myFraction': _0x8d0803,
            'myFamily': _0x5723e9,
            'isAdmin': _0x28546b
          });
        }), _0x3ee530.events.add('time.every05Sec', () => {
          _0x46ae52 = (_0x46ae52 + 0x1) % _0x770a97.voice_sprites.length;
        }), _0x3ee530.events.add('time.everySec', () => {
          _0x2cd01b.api.isAuthed() && (_0x1f22ce = {}, _0x3ee530.players.forEachInStreamRange(_0x68d43c => {
            _0x68d43c.handle !== _0x5c250a.handle && (_0x1f22ce[_0x68d43c.handle] = {
              'playerHideName': _0x68d43c.hasVariable('hmn') && _0x68d43c.getVariable('hmn'),
              'playerTempName': _0x68d43c.hasVariable('tempName') ? _0x68d43c.getVariable('tempName') : null,
              'playerFraction': _0x68d43c.getVariable('member'),
              'playerFamily': _0x68d43c.getVariable('family'),
              'playerId': _0x68d43c.getVariable('id'),
              'playerName': _0x2cd01b.api.getName(_0x68d43c),
              'isDead': _0x2cd01b.api.getEntitySync(_0x68d43c, 'isDead', 'boolean'),
              'no_audio': !!_0x68d43c.hasVariable('no_audio') && _0x68d43c.getVariable('no_audio'),
              'muted': !!_0x68d43c.hasVariable('muted') && _0x68d43c.getVariable('muted'),
              'admin': _0x2cd01b.api.getAdmin(_0x68d43c)
            });
          }));
        });

        const _0x2a909f = (_0x3913ae = {}) => {
          let {
            player: _0x4cf2f6,
            x: _0x5a3599,
            y: _0x4224ed,
            distance: _0x54b244,
            friends: _0x16c8e5,
            myFraction: _0x1a6ae9,
            myFamily: _0x3f5fbd,
            isAdmin: _0x455f2b
          } = _0x3913ae;
          if (_0x54b244 >= _0x770a97.maxDistance) return;

          const _0x39d251 = _0x1f22ce[_0x4cf2f6.handle],
                _0x183b5c = !!_0x4cf2f6.hasVariable('vanish') && _0x4cf2f6.getVariable('vanish');

          if (!_0x4cf2f6.onScreen || !_0x4cf2f6.hasLosTo || null == _0x39d251 || _0x183b5c || _0x39d251.playerHideName) return;
          if (_0x31e0d3++, _0x31e0d3 > _0x770a97.world3dToScreen2d_limit) return;

          let _0x43fb64,
              {
            x: _0x513f7d,
            y: _0x3cc97a,
            z: _0x4fffbf
          } = _0x4cf2f6.getWorldPositionOfBone(0x62);

          const _0x54568c = _0x4cf2f6.getVelocity();

          _0x513f7d += _0x54568c.x * _0x444270, _0x3cc97a += _0x54568c.y * _0x444270, _0x4fffbf += _0x54568c.z * _0x444270 + 0.5;

          const _0x598fdf = 0x1 - _0x54b244 / _0x770a97.maxDistance,
                _0x62841d = _0x3ee530.game.graphics.world3dToScreen2d(new _0x3ee530.Vector3(_0x513f7d, _0x3cc97a, _0x4fffbf + _0x2cd01b.api.lerp(0.35, 0x0, _0x598fdf)));

          let _0x252857 = _0x62841d?.['x'] || _0x5a3599,
              _0x256056 = _0x62841d?.['y'] || _0x4224ed;

          const _0x5ce3f9 = _0x2cd01b.api.lerp(0.75 * _0x770a97.textScale, _0x770a97.textScale, _0x598fdf),
                _0x3d4cdf = _0x2cd01b.api.lerp(0.75 * _0x770a97.spriteScale, _0x770a97.spriteScale, _0x598fdf);

          _0x43fb64 = _0x455f2b ? (null != _0x39d251.playerTempName ? _0x39d251.playerTempName : _0x39d251.playerName) + ' [' + _0x4cf2f6.remoteId + ']\n#' + _0x39d251.playerId : _0x2cd01b.api.isInMask(_0x4cf2f6) && _0x39d251.playerFraction > 0x0 && _0x39d251.playerFraction != _0x1a6ae9 && _0x39d251.playerFamily > 0x0 && _0x39d251.playerFamily != _0x3f5fbd ? '[' + _0x4cf2f6.remoteId + ']\n#' + _0x39d251.playerId : _0x1a6ae9 && _0x1a6ae9 === _0x39d251.playerFraction || _0x3f5fbd && _0x3f5fbd === _0x39d251.playerFamily || _0x16c8e5.includes(_0x39d251.playerId) && !_0x2cd01b.api.isInMask(_0x4cf2f6) ? (null != _0x39d251.playerTempName ? _0x39d251.playerTempName : _0x39d251.playerName) + ' [' + _0x4cf2f6.remoteId + ']\n#' + _0x39d251.playerId : '[' + _0x4cf2f6.remoteId + ']\n#' + _0x39d251.playerId, _0xdd2f42(_0x43fb64, _0x252857, _0x256056 + 0.015, 0x0, _0x5ce3f9), _0x256056 += 0.03015, _0x493662(_0x4cf2f6, _0x252857, _0x256056, 0x0, _0x3d4cdf, _0x770a97.color, _0x39d251.admin, null != _0x39d251.playerTempName), _0x5e8887(_0x4cf2f6, _0x252857, _0x256056 + 0.005, 0x0, _0x770a97.width, _0x770a97.height);
        },
              _0x321696 = (_0xc60bfc, _0x1eacf1, _0x19464b, _0x18d091, _0x3ad2f0, _0x50a6bf, _0x462360, _0x441759) => {
          const _0x2f9c31 = _0x2cd01b.api.getScreenActiveResolution(0x0, 0x0),
                _0x78e02d = _0x2cd01b.api.getCachedTextureResolution(_0xc60bfc, _0x1eacf1),
                _0x255242 = [_0x19464b[0x0] * _0x78e02d.x / _0x2f9c31.x, _0x19464b[0x1] * _0x78e02d.y / _0x2f9c31.y];

          _0x3ee530.game.graphics.drawSprite(_0xc60bfc, _0x1eacf1, _0x50a6bf, _0x462360, _0x255242[0x0], _0x255242[0x1], _0x18d091, _0x3ad2f0[0x0], _0x3ad2f0[0x1], _0x3ad2f0[0x2], _0x3ad2f0[0x3]);
        },
              _0xdd2f42 = (_0x5c03ea, _0x24b245, _0x28f5b9, _0x2cff62, _0xe52bc5) => {
          _0x3ee530.game.graphics.drawText(_0x5c03ea, [_0x24b245, _0x28f5b9], {
            'font': 0x0,
            'color': _0x770a97.color,
            'scale': [_0xe52bc5, _0xe52bc5],
            'outline': true,
            'centre': true
          });
        },
              _0x5e8887 = (_0x2d4def, _0x1f5ddc, _0x245c2c, _0x1c5198, _0x412129, _0x48f11b, _0x3edb7b) => {
          if ((_0x3ee530.game.player.isFreeAimingAtEntity(_0x2d4def.handle) || _0x3ee530.game.player.isTargettingEntity(_0x2d4def.handle) || _0x33618b.g.isSpectating) && !_0x2d4def.getVariable('isSpectating')) {
            _0x245c2c += 0.0225;

            let _0x3260dd = _0x2d4def.getHealth();

            (_0x3260dd > 0x64 || _0x3260dd < 0x0) && (_0x3260dd = 0x64), _0x3260dd = _0x3260dd <= 0x64 ? _0x3260dd / 0x64 : (_0x3260dd - 0x64) / 0x64;

            let _0x2e3ab1 = _0x2d4def.getArmour() / 0x64;

            (_0x2e3ab1 > 0x64 || _0x2e3ab1 < 0x0) && (_0x2e3ab1 = 0x64), _0x3ee530.game.graphics.drawRect(_0x1f5ddc, _0x245c2c, _0x412129, _0x48f11b, _0x770a97.healthColorBG[0x0], _0x770a97.healthColorBG[0x1], _0x770a97.healthColorBG[0x2], 0xc8), _0x3ee530.game.graphics.drawRect(_0x1f5ddc - _0x412129 / 0x2 * (0x1 - _0x3260dd), _0x245c2c, _0x412129 * _0x3260dd, _0x48f11b, _0x770a97.healthColor[0x0], _0x770a97.healthColor[0x1], _0x770a97.healthColor[0x2], 0xc8), _0x2e3ab1 > 0x0 && (_0x245c2c += 0.007, _0x3ee530.game.graphics.drawRect(_0x1f5ddc, _0x245c2c, _0x412129, _0x48f11b, 0xc, 0x34, 0x4d, 0xc8), _0x3ee530.game.graphics.drawRect(_0x1f5ddc - _0x412129 / 0x2 * (0x1 - _0x2e3ab1), _0x245c2c, _0x412129 * _0x2e3ab1, _0x48f11b, 0x50, 0x92, 0xbb, 0xc8));
          }
        },
              _0x493662 = (_0x562c4b, _0x51cf89, _0x1b486d, _0x36aa1c, _0x46c0a0, _0x2b3702, _0x5c7104, _0xd895dd) => {
          let _0x1e7392 = _0x51cf89;

          if (_0x5c7104 > 0x0 && !_0xd895dd) {
            let _0x71ab03 = 'mp_hostcrown',
                _0x202f9e = 'commonmenu';

            switch (_0x5c7104) {
              case 0x1:
              case 0x2:
                _0x71ab03 = 'admin_helper', _0x202f9e = 'majestic_textures_001';
                break;

              case 0x7:
              case 0x8:
              case 0x9:
              case 0xa:
                _0x71ab03 = 'admin_7', _0x202f9e = 'majestic_textures_001';
                break;

              default:
                _0x71ab03 = 'mp_hostcrown', _0x202f9e = 'commonmenu';
            }

            _0x321696(_0x202f9e, _0x71ab03, [_0x46c0a0, _0x46c0a0], 0x0, _0x2b3702, _0x1e7392, _0x1b486d - 0.02), _0x1e7392 += 0.01;
          }

          if (_0x1f22ce[_0x562c4b.handle].no_audio > 0x0) {
            let _0x5421c1 = 'cant_hear',
                _0x247c4d = 'majestic_textures_001',
                _0x3aead4 = _0x2b3702;

            switch (_0x1f22ce[_0x562c4b.handle].no_audio) {
              case 0x1:
                _0x5421c1 = 'cant_hear', _0x247c4d = 'majestic_textures_001', _0x3aead4 = [0x34, 0x98, 0xdb, 0xff];
                break;

              case 0x2:
                _0x5421c1 = 'no_audio', _0x247c4d = 'majestic_textures_001', _0x3aead4 = _0x2b3702;
            }

            _0x321696(_0x247c4d, _0x5421c1, [_0x46c0a0, _0x46c0a0], 0x0, _0x3aead4, _0x1e7392, _0x1b486d - 0.02), _0x1e7392 += 0.01;
          }

          if (_0x1f22ce[_0x562c4b.handle].muted > 0x0) _0x321696('majestic_textures_001', 'mute', [_0x46c0a0, _0x46c0a0], 0x0, _0x2b3702, _0x1e7392, _0x1b486d - 0.02), _0x1e7392 += 0.01;else {
            if (_0x562c4b.isVoiceActive) {
              const _0x19b9f6 = _0x770a97.voice_sprites[_0x46ae52];
              _0x321696('mpleaderboard', _0x19b9f6, [_0x46c0a0, _0x46c0a0], 0x0, _0x2b3702, _0x1e7392, _0x1b486d - 0.02), _0x1e7392 += 0.01;
            }
          }
          _0x1f22ce[_0x562c4b.handle].isDead && (_0x321696('commonmenutu', 'deathmatch', [_0x46c0a0, _0x46c0a0], 0x0, [0xe7, 0x4c, 0x3c, 0xc8], _0x1e7392, _0x1b486d - 0.02), _0x1e7392 += 0.01);
        };

        _0x770a97.textures.forEach(_0x1c3741 => {
          _0x3ee530.game.graphics.hasStreamedTextureDictLoaded(_0x1c3741) || _0x2cd01b.api.requestStreamedTextureDict(_0x1c3741, true);
        });
      },
      0x915a: (_0x46f665, _0x557102, _0x367c2b) => {
        'use strict';

        const a0_0x252bb7 = {
          _0x5807c7: 0x2579,
          _0xbc73f2: 0x1d8,
          _0x606f3: 0x2579
        },
              a0_0x3f1581 = {
          _0x1326e3: 0x1d8,
          _0x17dad4: 0x2579,
          _0x1e69dd: 0x4b9,
          _0x58c08f: 0x19e6
        },
              a0_0x3d14db = {
          _0x3c565f: 0x2579,
          _0x2f9d22: 0x1d8,
          _0x32e33d: 0x21e0,
          _0x56bb4d: 0x17e8
        },
              a0_0x9ba3b7 = {
          _0x48c107: 0x1d8,
          _0x5bc88f: 0x1d8,
          _0x363e63: 0x2579,
          _0x33cf14: 0x14d2,
          _0x2994ed: 0x1da5,
          _0x4b9cfc: 0x1b60
        },
              a0_0x209a96 = {
          _0x1afabe: 0x1d8,
          _0x427d2b: 0x235b,
          _0x201730: 0x8a0,
          _0x45bba0: 0x1820,
          _0x25d6dc: 0x2488,
          _0x33c9c6: 0x264,
          _0xe93b6c: 0x2001,
          _0x353901: 0x535,
          _0x52e337: 0x1a07,
          _0x3cb0ff: 0x4a9,
          _0x10c5f7: 0xfde
        },
              a0_0xad3f6f = {
          _0x39c704: 0x1d8,
          _0x266c1f: 0xb19
        },
              a0_0x5b034c = {
          _0x101f8e: 0x1d8,
          _0x45a280: 0x14d2
        },
              a0_0x5180a3 = {
          _0xbd887b: 0xdf2,
          _0x1f9683: 0x535,
          _0x269a21: 0x1a07,
          _0x38d223: 0xc0b,
          _0x24cf1e: 0x1934
        },
              a0_0x3045a7 = {
          _0x5d0327: 0x2653,
          _0x18879a: 0x6ba,
          _0x1b01a8: 0x16c5
        },
              a0_0x20ef3f = {
          _0x2fbd6b: 0x1985,
          _0x5442b6: 0x1985,
          _0x5ebbe5: 0x7d2,
          _0x318280: 0x2653
        },
              a0_0x1f244c = {
          _0x5e64c9: 0x9a8,
          _0x25711a: 0x9a8,
          _0x383787: 0x1816,
          _0x2120eb: 0x82d
        };
        _0x367c2b.r(_0x557102), _0x367c2b.d(_0x557102, {
          'default': () => _0x14460f
        });

        var _0x2002b0 = _0x367c2b(0x48c4),
            _0x5404df = _0x367c2b(0x16a21),
            _0x416f27 = _0x367c2b(0x12a76),
            _0x559040 = _0x367c2b(0xfc97),
            _0x3647fa = _0x367c2b.n(_0x559040),
            _0x4c1e2f = _0x367c2b(0x161cd);

        const _0x1a3985 = 0xdbba0,
              _0x4373f2 = {
          'emptyParty': {
            'id': 'empty',
            'name': '',
            'partyId': -0x1,
            'ownerStaticId': -0x1,
            'players': [],
            'vehicles': []
          },
          'waitingResponse': false
        };
        _0x4373f2.party = _0x4373f2.emptyParty;

        const _0x3be734 = _0x4c1e2f.players.local,
              _0x40976e = (_0x147c71, _0x3545f7 = (0x0, _0x2002b0.getServerTime)()) => {
          const _0x7b0ad8 = _0x147c71.name,
                [_0x563ba7, _0x264eb4] = _0x7b0ad8.split(' '),
                _0xdfdb88 = { ..._0x147c71,
            'firstName': _0x563ba7,
            'lastName': _0x264eb4,
            'name': _0x7b0ad8,
            'quitTimeStr': '',
            'quitTimeProgress': 0x0,
            'instance': undefined,
            'online': -0x1 !== _0x147c71.id
          };

          return -0x1 !== _0x147c71.quitTime && -0x1 === _0x147c71.id && (_0xdfdb88.quitTimeStr = (_0x546037 => {
            const _0x7ff792 = _0x546037 / 0x3e8,
                  _0x37c494 = Math.floor(_0x7ff792 % 0x15180 / 0xe10),
                  _0x12e5f3 = Math.floor(_0x7ff792 % 0xe10 / 0x3c),
                  _0x3eecce = Math.floor(_0x7ff792 % 0x3c);

            return _0x37c494 > 0x0 ? _0x37c494.toString().padStart(0x2, '0') + 'ч' : _0x12e5f3 > 0x0 ? _0x12e5f3.toString().padStart(0x2, '0') + 'м' : _0x3eecce.toString().padStart(0x2, '0') + 'с';
          })(_0x1a3985 - (_0x3545f7 - _0x147c71.quitTime)), _0xdfdb88.quitTimeProgress = 0x64 * Math.min(0x1, Math.max(0x0, (_0x3545f7 - _0x147c71.quitTime) / _0x1a3985))), _0xdfdb88;
        },
              _0x4b743e = (_0x5b2d61 = (0x0, _0x2002b0.getServerTime)()) => _0x4373f2.party ? { ..._0x4373f2.party,
          'players': _0x4373f2.party.players.map(_0x19d971 => _0x40976e(_0x19d971, _0x5b2d61))
        } : (_0x4373f2.emptyParty.ownerStaticId = _0x3be734.getVariable('id'), _0x4373f2.emptyParty),
              _0x279256 = _0x565c36 => {
          if (!_0x565c36 || !_0x4c1e2f.players.exists(_0x565c36) || _0x565c36.partyBlip && _0x5404df.api.invokeNative('DOES_BLIP_EXIST', _0x565c36.partyBlip)) return;
          _0x4373f2.party.players.find(_0x1c6fa0 => _0x1c6fa0.instance === _0x565c36) && (_0x565c36.partyBlip = _0x5404df.api.invokeNative('ADD_BLIP_FOR_ENTITY', _0x565c36.handle), _0x5404df.api.invokeNative('SET_BLIP_COLOUR', _0x565c36.partyBlip, 0x0), _0x5404df.api.invokeNative('SET_BLIP_CATEGORY', _0x565c36.partyBlip, 0x7), _0x5404df.api.invokeNative('SET_BLIP_AS_FRIENDLY', _0x565c36.partyBlip, true), _0x5404df.api.invokeNative('SHOW_HEADING_INDICATOR_ON_BLIP', _0x565c36.partyBlip, true));
        },
              _0x30ee97 = _0x82c704 => {
          _0x82c704 && _0x82c704.partyBlip && _0x5404df.api.invokeNative('DOES_BLIP_EXIST', _0x82c704.partyBlip) && _0x5404df.api.invokeNative('DOES_BLIP_EXIST', _0x82c704.partyBlip) && (_0x4c1e2f.game.ui.removeBlip(_0x82c704.partyBlip), _0x82c704.partyBlip = null);
        },
              _0x4774af = _0x554dbd => {
          if (!_0x554dbd || !_0x4c1e2f.vehicles.exists(_0x554dbd) || !_0x554dbd.handle || _0x554dbd.partyBlip && _0x4c1e2f.blips.exists(_0x554dbd.partyBlip)) return;
          if (!_0x4373f2.party.vehicles.find(_0x1bdde6 => _0x1bdde6 === _0x554dbd)) return;

          const _0x596d96 = _0x554dbd.position,
                _0x537645 = _0x3647fa()[_0x554dbd.model >> 0x0];

          _0x554dbd.partyBlip = _0x4c1e2f.blips.new(0x268, _0x596d96, {
            'name': _0x537645 ? _0x537645.title : '',
            'scale': 0x1,
            'color': 0x32,
            'shortRange': false
          });
        },
              _0x6d9933 = _0x6a19ff => {
          _0x6a19ff && _0x6a19ff.partyBlip && _0x4c1e2f.blips.exists(_0x6a19ff.partyBlip) && (_0x6a19ff.partyBlip.destroy(), _0x6a19ff.partyBlip = null);
        };

        _0x4c1e2f.events.add('party.client.update', _0x23c6f2 => {
          const a0_0x450485 = {
            _0x1e5290: 0x12dd,
            _0x2a1e1b: 0x19d2
          };

          if ('string' != typeof _0x23c6f2 || !_0x23c6f2.length) {
            if (_0x4373f2.party) {
              for (const _0x4f0c11 of _0x4373f2.party.players) {
                const _0x12cabf = _0x4f0c11.instance;
                _0x12cabf && _0x30ee97(_0x12cabf);
              }

              for (const _0x33350b of _0x4373f2.party.vehicles) _0x6d9933(_0x33350b);
            }

            return _0x4373f2.party = _0x4373f2.emptyParty, _0x416f27.globalBrowser.emit('ipad_party_updatePartyData', _0x4b743e()), void _0x4c1e2f.events.call('party.cleared');
          }

          const _0x54cbf1 = (_0x57713a => {
            const a0_0x51df44 = {
              _0x3d4361: 0x12dd
            },
                  [_0x19d85e, _0x557858, _0x418e91, _0x450f9f, ..._0x20b0c3] = _0x57713a.split('^'),
                  _0x469090 = _0x450f9f.length ? _0x450f9f.split('*').map(_0x25ff62 => _0x4c1e2f.vehicles.atRemoteId(parseInt(_0x25ff62))).filter(_0x2b1896 => _0x2b1896 && _0x4c1e2f.vehicles.exists(_0x2b1896)) : [],
                  _0x506541 = parseInt(_0x418e91, 0x24),
                  _0x423f47 = _0x20b0c3.map(_0x3d6c1e => {
              const [_0x5dc2d5, _0x26d1fe, _0x3ecd20, _0xc5b5bf, _0x35c1e0, _0x31d028] = _0x3d6c1e.split('&'),
                    _0x4f1fbe = parseInt(_0x5dc2d5),
                    _0x21c16c = parseInt(_0x3ecd20, 0x24);

              return {
                'id': _0x4f1fbe,
                'name': _0x26d1fe,
                'instance': _0x4c1e2f.players.atRemoteId(_0x4f1fbe),
                'staticId': _0x21c16c,
                'socialClubName': _0xc5b5bf,
                'owner': _0x21c16c === _0x506541,
                'enterTime': parseInt(_0x35c1e0, 0x24),
                'quitTime': parseInt(_0x31d028, 0x24)
              };
            });

            return {
              'name': _0x557858,
              'partyId': _0x19d85e,
              'ownerStaticId': _0x506541,
              'players': _0x423f47,
              'vehicles': _0x469090
            };
          })(_0x23c6f2);

          let _0x22444d = _0x4373f2.party.players.filter(_0x53e47f => !_0x54cbf1.players.find(_0x491ea1 => _0x491ea1.staticId === _0x53e47f.staticId)),
              _0x3114c4 = _0x54cbf1.players.filter(_0x4f1d0a => !_0x4373f2.party.players.find(_0x58519a => _0x4f1d0a.staticId === _0x58519a.staticId)),
              _0x934b80 = _0x4373f2.party.vehicles.filter(_0x11a3ce => !_0x54cbf1.vehicles.find(_0xe81bac => _0xe81bac === _0x11a3ce)),
              _0x11c0ff = _0x54cbf1.vehicles.filter(_0x502a45 => !_0x4373f2.party.vehicles.find(_0x18b43e => _0x502a45 === _0x18b43e)),
              _0x9ed0cb = false;

          _0x4373f2.party === _0x4373f2.emptyParty && (_0x9ed0cb = true), _0x4373f2.party = _0x54cbf1, _0x9ed0cb && _0x4c1e2f.events.call('party.inited', _0x54cbf1);

          for (const _0x402275 of _0x22444d) _0x30ee97(_0x402275.instance);

          for (const _0x10f890 of _0x3114c4) _0x10f890.instance !== _0x3be734 && _0x279256(_0x10f890.instance);

          for (const _0x2b5ac3 of _0x934b80) _0x6d9933(_0x2b5ac3);

          for (const _0x425833 of _0x11c0ff) _0x4774af(_0x425833);

          for (const _0x226f6d of _0x4373f2.party.players) {
            const _0x1dca8e = _0x226f6d.instance;
            _0x1dca8e && _0x4c1e2f.players.exists(_0x1dca8e) && _0x1dca8e.handle && _0x1dca8e.partyBlip && _0x5404df.api.invokeNative('DOES_BLIP_EXIST', _0x1dca8e.partyBlip) && _0x5404df.api.invokeNative('SET_BLIP_COLOUR', _0x1dca8e.partyBlip, _0x226f6d.owner ? 0xc : 0x0);
          }

          _0x416f27.globalBrowser.emit('ipad_party_updatePartyData', _0x4b743e());
        }), _0x4c1e2f.events.add('party.client.requestInvite', _0x2d1874 => {
          _0x4373f2.waitingResponse ? _0x5404df.api.longNotifyTrans('system.cantTooFast', 'error') : (_0x4c1e2f.events.callRemote('1929009245', parseInt(_0x2d1874)), _0x4373f2.waitingResponse = true);
        }), _0x4c1e2f.events.add('party.client.requestInviteResponse', (_0x2b14df, _0x44a4de, _0x16019f = {}) => {
          _0x4373f2.waitingResponse = false, 0x0 === _0x2b14df ? _0x5404df.api.longNotifyTrans('user.playerNotFound', 'error') : 0x1 === _0x2b14df ? _0x5404df.api.longNotifyTrans('party.general.cantSetYourself', 'error') : 0x2 === _0x2b14df ? _0x5404df.api.longNotifyTrans('У игрока уже есть приглашение', 'warn') : 0x3 === _0x2b14df ? _0x5404df.api.longNotifyTrans('user.farAway', 'error') : 0x4 === _0x2b14df ? _0x5404df.api.longNotifyTrans('party.general.alreadyInParty', 'success') : 0x5 === _0x2b14df ? _0x5404df.api.longNotifyTrans('party.general.sentInviteSuccess', 'success') : 'custom' === _0x2b14df && _0x5404df.api.longNotifyTrans(_0x44a4de, _0x16019f, 'error');
        }), _0x4c1e2f.events.add('party.client.requestInviteAnswer', _0x3f46c8 => {
          _0x4c1e2f.events.call('showDialogTrans', 0x59, 'confirm', 'party.dialog.inviteTitle', 'party.dialog.inviteBody', {
            'ownerId': _0x3f46c8
          }, null, 'party.dialog.accept', 'party.dialog.refuse'), _0x4373f2.partyInvite = {
            'ownerId': _0x3f46c8
          };
        }), _0x4c1e2f.events.add('onDialogResponse', (_0x2b0577, _0x58628b) => {
          0x59 === _0x2b0577 && (_0x4373f2.partyInvite = null);
        }), _0x4c1e2f.events.add('party.client.removePlayer', _0x28908c => {
          _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && _0x4c1e2f.events.callRemote('3049286806', _0x28908c);
        }), _0x4c1e2f.events.add('party.client.quit', () => {
          _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && _0x4c1e2f.events.callRemote('1204811376');
        }), _0x4c1e2f.events.add('party.client.disbandment', () => {
          _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && _0x4c1e2f.events.callRemote('1819394693');
        }), _0x4c1e2f.events.add('party.client.disbandmentResponse', _0x10d6da => {
          if (_0x4373f2.party) {
            for (const _0x102164 of _0x4373f2.party.players) {
              const _0xe5f231 = _0x102164.instance;
              _0xe5f231 && _0x30ee97(_0xe5f231);
            }

            for (const _0x3eb846 of _0x4373f2.party.vehicles) _0x6d9933(_0x3eb846);
          }

          _0x4373f2.party = _0x4373f2.emptyParty, _0x416f27.globalBrowser.emit('ipad_party_updatePartyData', _0x4b743e()), _0x10d6da === _0x3be734.remoteId ? _0x5404df.api.longNotifyTrans('party.general.deleteGroupSuccess', 'warn') : _0x5404df.api.longNotifyTrans('party.general.leaderDeletedGroup', 'warn');
        }), _0x4c1e2f.events.add('party.client.changeLeader', _0x39c2c0 => {
          _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && _0x4c1e2f.events.callRemote('2030964439', _0x39c2c0);
        }),

          const _0x56ab15 = _0x4373f2.party.players.find(_0x1c3965 => -0x1 !== _0x1c3965.id && _0x1c3965.id === _0x2f12ae.remoteId);

          _0x56ab15 && (_0x56ab15.id = -0x1, _0x56ab15.instance = null, _0x56ab15.quitTime = (0x0, _0x2002b0.getServerTime)(), _0x30ee97(_0x2f12ae));
        }), _0x4c1e2f.events.add('time.everySec', () => {
          if (!_0x4373f2.party || _0x4373f2.party === _0x4373f2.emptyParty) return;

          const _0x319bd5 = (0x0, _0x2002b0.getServerTime)(),
                _0x194cea = [..._0x4373f2.party.players];

          let _0x26774b = false;

          for (let _0x3f8512 = 0x0; _0x3f8512 < _0x194cea.length; _0x3f8512++) {
            const _0x457bd6 = _0x194cea[_0x3f8512];
            -0x1 === _0x457bd6.id && -0x1 !== _0x457bd6.quitTime && (_0x319bd5 - _0x457bd6.quitTime >= _0x1a3985 && (_0x4373f2.party.players = _0x4373f2.party.players.filter(_0x5ca6c6 => _0x5ca6c6 !== _0x457bd6)), _0x26774b = true);
          }

          _0x26774b && _0x416f27.globalBrowser.emit('ipad_party_updatePartyData', _0x4b743e());
        }), _0x4c1e2f.events.add('entityStreamIn', _0x5b0d9f => {
          _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && 'player' === _0x5b0d9f.type && _0x279256(_0x5b0d9f), _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && 'vehicle' === _0x5b0d9f.type && _0x4774af(_0x5b0d9f);
        }), _0x4c1e2f.events.add('entityStreamOut', _0x976990 => {
          _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && 'player' === _0x976990.type && _0x30ee97(_0x976990), _0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty && 'vehicle' === _0x976990.type && _0x6d9933(_0x976990);
        }), _0x4c1e2f.events.add('render', () => {
          if (_0x4373f2.party && _0x4373f2.party !== _0x4373f2.emptyParty) {
            for (const _0x46f2f9 of _0x4373f2.party.vehicles) _0x46f2f9 && _0x4c1e2f.vehicles.exists(_0x46f2f9) && _0x46f2f9.handle && _0x46f2f9.partyBlip && _0x4c1e2f.blips.exists(_0x46f2f9.partyBlip) && _0x46f2f9.partyBlip.setCoords(_0x46f2f9.position);
          }
        });
        const _0x14460f = _0x4373f2;
      },
      0x1bd8: (_0x2d533e, _0x3ab57e, _0x49a3d5) => {
        'use strict';

        _0x49a3d5.r(_0x3ab57e);

        var _0x19bec5 = _0x49a3d5(0x16a21),
            _0x17afdd = _0x49a3d5(0x161cd);

        const _0x60a3bb = _0x17afdd.players.local;
        let _0x222c61 = {
          'stamina': 0x0,
          'lung_capacity': 0x0,
          'wheelie_ability': 0x0,
          'flying_ability': 0x0
        };
        _0x17afdd.events.add('setGTASkills', async _0x70b3f8 => {
          _0x17afdd.game.stats.statSetInt(_0x17afdd.game.joaat('SP0_STAMINA'), _0x70b3f8.stamina || 0x0, false), _0x17afdd.game.stats.statSetInt(_0x17afdd.game.joaat('SP0_STRENGTH'), _0x70b3f8.strength || 0x0, false), _0x17afdd.game.stats.statSetInt(_0x17afdd.game.joaat('SP0_LUNG_CAPACITY'), _0x70b3f8.lung_capacity || 0x0, false), _0x17afdd.game.stats.statSetInt(_0x17afdd.game.joaat('SP0_WHEELIE_ABILITY'), _0x70b3f8.wheelie_ability || 0x0, false), _0x17afdd.game.stats.statSetInt(_0x17afdd.game.joaat('SP0_FLYING_ABILITY'), _0x70b3f8.flying_ability || 0x0, false), _0x17afdd.game.stats.statSetInt(_0x17afdd.game.joaat('SP0_SHOOTING_ABILITY'), _0x70b3f8.shooting_ability || 0x0, false), _0x17afdd.game.stats.statSetInt(_0x17afdd.game.joaat('SP0_STEALTH_ABILITY'), _0x70b3f8.stealth_ability || 0x0, false);
        }), _0x17afdd.events.add('time.every2Sec', () => {
          _0x19bec5.api.isAuthed() && (_0x60a3bb.vehicle || !_0x60a3bb.isSprinting() || _0x17afdd.game.player.isFreeAiming() || (_0x222c61.stamina++, _0x222c61.stamina > 0x24 && (_0x222c61.stamina = 0x0, _0x17afdd.events.callRemote('3000658541', 'stamina'))), !_0x60a3bb.vehicle && _0x60a3bb.isSwimmingUnderWater() && (_0x222c61.lung_capacity++, _0x222c61.lung_capacity > 0x4b && (_0x222c61.lung_capacity = 0x0, _0x17afdd.events.callRemote('3000658541', 'lung_capacity'))), _0x60a3bb.vehicle && (_0x60a3bb.isInAnyPlane() || _0x60a3bb.isInAnyHeli()) && 3.6 * _0x60a3bb.vehicle.getSpeed() > 0x32 && _0x60a3bb.vehicle.getPedInSeat(-0x1) === _0x60a3bb.handle && (_0x222c61.flying_ability++, _0x222c61.flying_ability > 0xc8 && (_0x222c61.flying_ability = 0x0, _0x17afdd.events.callRemote('3000658541', 'flying_ability'))), _0x60a3bb.vehicle && _0x60a3bb.isInAnyVehicle(false) && !_0x60a3bb.isInAnyBoat() && !_0x60a3bb.isInAnyPlane() && !_0x60a3bb.isInAnyHeli() && !_0x60a3bb.isInAnyTrain() && 3.6 * _0x60a3bb.vehicle.getSpeed() > 0x32 && _0x60a3bb.vehicle.getPedInSeat(-0x1) === _0x60a3bb.handle && (_0x222c61.wheelie_ability++, _0x222c61.wheelie_ability > 0xc8 && (_0x222c61.wheelie_ability = 0x0, _0x17afdd.events.callRemote('3000658541', 'wheelie_ability'))));
        });
      },
      0x8aca: (_0x116efd, _0x14e950, _0x38ed9f) => {
        'use strict';

        const a0_0x565f86 = {
          _0x561451: 0xd3f
        },
              a0_0x21ffcd = {
          _0x157f94: 0x535,
          _0x30053f: 0x24bc,
          _0x3c74a9: 0xe6d,
          _0x457d61: 0xe6d,
          _0x2d5b93: 0x2488,
          _0x4a7109: 0x1658,
          _0x586921: 0x112d,
          _0x4369cb: 0x1a3,
          _0x4c4e6f: 0x14b6,
          _0xc99171: 0x112d
        },
              a0_0x791941 = {
          _0x194452: 0x9eb,
          _0x1cae44: 0xe6d,
          _0x55dc43: 0x2488,
          _0x447a18: 0x1a3,
          _0x2fbc3b: 0x112d
        },
              a0_0x123771 = {
          _0xd93d34: 0x2488,
          _0x90bc34: 0x1a3,
          _0x574ac7: 0xc6e
        },
              a0_0x24f24b = {
          _0x3fea1b: 0x1dbf,
          _0x27c338: 0x1a3,
          _0x3b30b7: 0x1a83
        },
              a0_0x1ba1ce = {
          _0x67a335: 0xc6b
        },
              a0_0x3acc76 = {
          _0x2b25dc: 0x55a,
          _0x45f8a7: 0x2488,
          _0x4cf642: 0x1a3,
          _0x55b62a: 0x151a,
          _0x18d70d: 0x310
        },
              a0_0x3c3778 = {
          _0x486344: 0x1a3
        },
              a0_0x59a510 = {
          _0x57c104: 0x23bc
        },
              a0_0x414953 = {
          _0x4902b6: 0x2315,
          _0x56b785: 0x1a2c
        },
              a0_0x198c4e = {
          _0x51111b: 0x2315,
          _0x5567e1: 0xe6d
        },
              a0_0x14557b = {
          _0x44c718: 0x2315,
          _0x2418ea: 0xf56,
          _0x1a3d50: 0x1d2
        },
              a0_0x101ba1 = {
          _0x3f6b0f: 0x2021,
          _0x3b68f4: 0x3bf,
          _0x52185c: 0xbc2,
          _0x47a10b: 0x11db
        },
              a0_0x3a39b8 = {
          _0x26ee8: 0x1d2
        },
              a0_0x5f0dbc = {
          _0x5c55f6: 0x19d2,
          _0x383aba: 0x21e0,
          _0x5a6696: 0x1a5
        },
              a0_0x3d7ed8 = {
          _0x288745: 0x185e
        },
              a0_0x2deb9b = {
          _0x177f09: 0x235b,
          _0x3370dc: 0x535,
          _0x2a90f: 0x22ed,
          _0x100647: 0xc95,
          _0x453ffc: 0x2e9,
          _0x1e3574: 0xc95,
          _0x4f40ea: 0x1d4c,
          _0xd0640: 0x1d66,
          _0x1e9258: 0x2379,
          _0x4fb868: 0x362,
          _0x52f3d7: 0x535,
          _0xa5792e: 0x143a
        },
              a0_0x39f3bc = {
          _0x416662: 0xe6d
        },
              a0_0x2cf248 = {
          _0x73117e: 0x19e6,
          _0x5e7939: 0x185e,
          _0x264745: 0x2530,
          _0x5e46e5: 0x131d
        },
              a0_0x2d7a2b = {
          _0x2a8985: 0x628,
          _0x33c692: 0x2530,
          _0x5d8ae0: 0x1c34
        },
              a0_0x49a15b = {
          _0x1d30c7: 0x628,
          _0x3bb234: 0x2530,
          _0x64f964: 0xc74
        },
              a0_0x351bd1 = {
          _0xa211af: 0x6da,
          _0x3c5899: 0x1291,
          _0x6474e4: 0x2530,
          _0x203952: 0xb3d,
          _0x3849b6: 0x10bf,
          _0x2f90ba: 0x535,
          _0x4eea93: 0x2379,
          _0x36d0ff: 0x219a,
          _0x3a7d67: 0x13bc,
          _0x3b03f7: 0x1fdf,
          _0x1ea537: 0x1b1a,
          _0x4401ad: 0x1337,
          _0x2e1e3f: 0x1aca,
          _0x2cd7a3: 0x23d1
        },
              a0_0x1c0e68 = {
          _0x517e01: 0x19e6,
          _0x44f353: 0x19d2,
          _0x261014: 0x22b2,
          _0x2371ed: 0x176b
        },
              a0_0x5b0fd7 = {
          _0x79a009: 0xc95,
          _0x164327: 0x696,
          _0xe75700: 0x770,
          _0x53b7dd: 0xb94
        },
              a0_0x14b4d9 = {
          _0x5e8643: 0xc95,
          _0x1df7dc: 0x2323,
          _0x25b9cb: 0x2400,
          _0x5e41c9: 0x16cb,
          _0x32d8ba: 0x535
        },
              a0_0x38fa26 = {
          _0x17fa16: 0x19e6,
          _0x518781: 0x235b,
          _0x35caf7: 0x16c5,
          _0x482bd4: 0x2530,
          _0x2d5d45: 0xc95,
          _0x7f9381: 0x19c5,
          _0xa782ef: 0x1cc6,
          _0x280be4: 0x535,
          _0x175411: 0x13b7,
          _0x5f0119: 0xeac,
          _0x1f6b06: 0x243a,
          _0x2b073b: 0x250d,
          _0x26786d: 0x535,
          _0x2a068e: 0x1a5,
          _0x5c67d9: 0x1a5,
          _0x5a9a2c: 0xb5b,
          _0x3cbf41: 0x1870,
          _0x544eb1: 0x1985,
          _0x350d2e: 0x2530,
          _0x3b4f2c: 0x2001,
          _0x19cdbc: 0x10bf,
          _0x5dabef: 0x2001,
          _0x29ab78: 0x11e3
        },
              a0_0x14ac63 = {
          _0x44ae0e: 0x14d2,
          _0x2a4369: 0x2001
        },
              a0_0x3b0b38 = {
          _0x45351d: 0x235b,
          _0x378570: 0x16c5,
          _0x1e71a4: 0xc95,
          _0x136db6: 0x385,
          _0x312baf: 0x23c9,
          _0x37beae: 0x150f,
          _0x3bed17: 0x535,
          _0x5c1b1e: 0xf71,
          _0x54194a: 0x243a,
          _0x3f0d0f: 0x185e,
          _0x2ff4f8: 0x10b9,
          _0x394373: 0x1edc,
          _0x24e333: 0x1edc,
          _0x53c6f3: 0xb3d,
          _0x4af348: 0x1b1a,
          _0x4b86ec: 0x1063
        },
              a0_0x59e040 = {
          _0x556e4d: 0x535,
          _0x34a5a1: 0xc95,
          _0x224ec0: 0x535,
          _0x5c502a: 0xf01,
          _0x5ce0eb: 0x2e9,
          _0x339b31: 0x21e0,
          _0x1f878a: 0x1d37,
          _0x5468dd: 0x19d2,
          _0x1e2154: 0x535,
          _0x3f6ab8: 0x623,
          _0x1f7df8: 0x1dc8,
          _0x3b8535: 0x6da,
          _0x332d63: 0x5d7,
          _0x1bd450: 0x5d7,
          _0x33d152: 0x1d66,
          _0x166d9c: 0xe1b,
          _0xf2b261: 0x103b,
          _0x4b75ed: 0xe1b,
          _0x3bf3d2: 0x2530,
          _0x1cbf2e: 0x2530,
          _0x55e361: 0x1acf,
          _0x58e44d: 0xe1b,
          _0x342ab3: 0x2530,
          _0x1bdc60: 0x1d66,
          _0x2e65bd: 0xe1b,
          _0x4bdcf5: 0x2530,
          _0x5e0ca4: 0x1d66,
          _0x285d7b: 0x2530,
          _0x5180ec: 0x103b,
          _0x3e0ecb: 0x103b,
          _0x4e3f46: 0x1d66,
          _0x415790: 0x103b,
          _0x207370: 0x1d66,
          _0x15b575: 0xe1b,
          _0x265eec: 0x2530
        },
              a0_0x2f8c3a = {
          _0x55e2d1: 0x1cf1,
          _0x8510e4: 0x1cf1,
          _0xcae7d5: 0x1700,
          _0x32fbfc: 0x2180,
          _0x411a29: 0x1d66,
          _0x43ea36: 0xacc,
          _0x56ab2b: 0x2530,
          _0x40c1f3: 0x1db5
        },
              a0_0x434d3e = {
          _0x31e18b: 0x11f5,
          _0x2ad0a8: 0x2379,
          _0x131587: 0x1d66,
          _0x2ea68a: 0x2379,
          _0x5028f4: 0x1fa0,
          _0x308af9: 0x11f5,
          _0x2d715b: 0x2379,
          _0x16c3c2: 0x1d66,
          _0x5cb0cf: 0xba3,
          _0x5b6a0b: 0x15e0,
          _0x22465f: 0x219e
        },
              a0_0x76ce2e = {
          _0x1e33b1: 0x235b,
          _0x3d643b: 0x16c5,
          _0x4b2bb1: 0x150e,
          _0x29464b: 0x150e,
          _0x398363: 0x1d66,
          _0x141478: 0x2379,
          _0x4c9da7: 0x1f30,
          _0xb9fe42: 0x1d55,
          _0x1bbb0b: 0x13b4,
          _0x4d64cd: 0x1cf1,
          _0x184afb: 0x2530,
          _0x1e4903: 0x11f5,
          _0x38d3fe: 0x1994,
          _0x19437e: 0x1277,
          _0x282a9a: 0x18ee,
          _0x490fe8: 0x1885,
          _0x2df038: 0x1d66,
          _0x4f52c8: 0x1e35,
          _0x32914d: 0x535
        },
              a0_0x467c19 = {
          _0x15dec7: 0x1d66,
          _0x5bfd2f: 0x1e75
        },
              a0_0x442f90 = {
          _0x244b96: 0x1bb9,
          _0x2133c9: 0x1d66
        },
              a0_0x53fe73 = {
          _0x547a0a: 0x1d66,
          _0x404df3: 0x14ed,
          _0x50e988: 0x385,
          _0x223822: 0x4a5,
          _0x1f01c6: 0x2539,
          _0xaac8f8: 0x213a
        },
              a0_0x4fcc97 = {
          _0x1e2092: 0x14ed,
          _0x567db1: 0x14d2,
          _0x1f9a06: 0x1727,
          _0x53f373: 0x1a5
        },
              a0_0x38a26e = {
          _0x2763af: 0xc85,
          _0x512c6d: 0x55a,
          _0x5c54cd: 0x14a5,
          _0x5d473b: 0xc85,
          _0x3984ef: 0xeb1,
          _0x43429e: 0x55a,
          _0x390a6e: 0xc85,
          _0x1b8250: 0x14a5,
          _0x3166be: 0xbb1,
          _0x44088a: 0xed7,
          _0x4fe0d0: 0x1e35,
          _0x146a47: 0x2303,
          _0x506837: 0x1d66,
          _0x1f1649: 0x24d9,
          _0x3e442a: 0x1d66,
          _0x5557a2: 0x1ba0
        };
        _0x38ed9f.r(_0x14e950), _0x38ed9f.d(_0x14e950, {
          'playersStaticIdMap': () => _0x184bb6,
          'playersStreamed': () => _0x2b012a,
          'syncHair': () => _0x1230db
        });

        var _0x31d25e = _0x38ed9f(0x16a21),
            _0x49c055 = _0x38ed9f(0xd15b),
            _0x2f2c39 = _0x38ed9f(0xd504),
            _0x44fb81 = _0x38ed9f(0xfc97),
            _0x29a154 = _0x38ed9f.n(_0x44fb81),
            _0xc95564 = _0x38ed9f(0x1619c),
            _0x2703f9 = _0x38ed9f.n(_0xc95564),
            _0xe4e0f1 = _0x38ed9f(0x69b3),
            _0x344405 = _0x38ed9f.n(_0xe4e0f1),
            _0x4bc2ec = _0x38ed9f(0xe6d1),
            _0x11168a = _0x38ed9f.n(_0x4bc2ec),
            _0x352c9e = _0x38ed9f(0xe6ff),
            _0x4f161e = _0x38ed9f(0x1790f),
            _0x2d88e7 = _0x38ed9f(0x5789),
            _0x560a1e = _0x38ed9f(0x18bd),
            _0x3d3655 = _0x38ed9f(0x12a76),
            _0x27816f = _0x38ed9f(0x66f9),
            _0xed767d = _0x38ed9f(0x6611),
            _0x368105 = _0x38ed9f(0x1659b),
            _0x1a5317 = _0x38ed9f(0x16a7d),
            _0x312242 = _0x38ed9f(0xc344),
            _0x468a13 = (_0x38ed9f(0x48c4), _0x38ed9f(0x161cd));

        const _0x19af6b = {
          '_money': {
            'cash': 0x0,
            'bank': 0x7b
          },
          'date': 'SS 00:00',
          'money': 'BANK $0 CASH $0'
        },
              _0x19b7f3 = _0x5b7e8b => _0x5b7e8b.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ','),
              _0xeb927a = (_0x50f3af, _0x15de9a) => {
          if (_0x50f3af) {
            if ('money' === _0x50f3af) null != _0x15de9a.cash && (_0x19af6b._money.cash = _0x15de9a.cash), null != _0x15de9a.bank && (_0x19af6b._money.bank = _0x15de9a.bank), _0x19af6b.money = (_0x2b27d8 = _0x19af6b._money.cash, _0x403e0a = _0x19af6b._money.bank, _0x312242.Z.translatePlayer('system.pauseMenuCash', {
              'bank': _0x19b7f3(_0x403e0a),
              'cash': _0x19b7f3(_0x2b27d8)
            }));else _0x19af6b[_0x50f3af] = _0x15de9a;
          }

          var _0x2b27d8, _0x403e0a;

          _0x468a13.game.graphics.beginScaleformMovieMethodOnFrontend('SET_HEADING_DETAILS'), _0x468a13.game.graphics.scaleformMovieMethodAddParamTextureNameString(_0x468a13.players.local.name.toUpperCase()), _0x468a13.game.graphics.scaleformMovieMethodAddParamTextureNameString('SS 00:00'), _0x468a13.game.graphics.scaleformMovieMethodAddParamTextureNameString('BANK $0 CASH $0'), _0x468a13.game.graphics.scaleformMovieMethodAddParamBool(false), _0x468a13.game.graphics.endScaleformMovieMethod();
        };

        let _0x514504 = false;
        _0x468a13.events.add('render', () => {
          const _0x537ea5 = _0x468a13.game.hud.getPauseMenuState();

          _0x514504 != !!_0x537ea5 && (_0x514504 = !!_0x537ea5, _0x537ea5 ? _0x468a13.events.call('pauseMenuToggle', true) : _0x468a13.events.call('pauseMenuToggle', false));
        }), _0x468a13.events.add('pauseMenuToggle', _0x559949 => {
          _0x559949 ? (null == _0x468a13.players.local.settings.ambientMusic || _0x31d25e.api.getPlayerSetting('ambientMusic')) && _0x468a13.game.audio.setAudioFlag('PlayMenuMusic', true) : _0x559949 || _0x468a13.game.audio.setAudioFlag('PlayMenuMusic', false);
        }), _0x468a13.keys.bind(_0x1a5317.t.ESC, false, () => {
          0x0 != _0x468a13.game.hud.getPauseMenuState() && _0x468a13.gui.cursor.visible && (_0x468a13.game.ui.activateFrontendMenu(_0x468a13.game.joaat('FE_MENU_VERSION_MP_PAUSE'), false, -0x1), _0x468a13.gui.cursor.show(true, true));
        }), _0x468a13.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x468a13.game.gxt && _0x468a13.game.gxt.set('PM_PAUSE_HDR', 'Majestic RP'), _0x468a13.game.ui.setHudColour(0x8f, 0xcb, 0x36, 0x94, 0xff);
        }), _0x468a13.events.add('time.everySec', () => {
          _0x31d25e.api.isAuthed() && (_0x19af6b.date = new Date().toLocaleString(_0x312242.Z.getPlayerLanguageLocale(), {
            'hour': 'numeric',
            'minute': 'numeric',
            'weekday': 'short'
          }).toUpperCase());
        }), _0x468a13.events.add('time.every02Sec', () => {
          _0x468a13.game.ui.isPauseMenuActive() && _0xeb927a();
        });

        var _0x39e0fa = _0x38ed9f(0x12679),
            _0x110b50 = _0x38ed9f(0x704e),
            _0x25ab2f = _0x38ed9f(0x943b),
            _0x506e0a = _0x38ed9f(0xff89),
            _0xffba69 = _0x38ed9f(0x161cd);

        const _0x2b012a = new Set(),
              _0x184bb6 = {};

        let _0x3f98aa = false;

        for (const _0x334a5f in _0x29a154()) _0x29a154()[_0xffba69.game.joaat(_0x334a5f) >> 0x0] = _0x29a154()[_0x334a5f];

        const _0x351df8 = _0xffba69.players.local;
        let _0x351e5c = {};

        const _0x19da69 = (0x0, _0x368105.D)(() => {
          Object.keys(_0x351e5c).length && (_0xffba69.events.callRemote('643175933', JSON.stringify(Object.entries(_0x351e5c))), _0x351e5c = {});
        }, 0x1f4);

        _0x351df8.friends = [], _0x351df8.settings = {}, _0x351df8.skills = {}, _0x351df8.inventory = [], _0x351df8.wallet = [], _0x351df8.bag = [], _0x351df8.hasVehicles = false, _0x351df8.biz = null, _0x351df8.atm = null, _0x351df8.billboard = null, _0x351df8.houseId = null, _0x351df8.rentHouseId = null, _0x351df8.apartmentId = null, _0x351df8.rentApartmentId = null, _0x351df8.phone_outcomingCall = null, _0x351df8.bank = {
          'amount': 0x0
        }, _0x351df8.cash = 0x0, _0x351df8.armourId = null, _0x351df8.fastSlots = [null, null, null], _0x351df8.activeItemId = null, _0x351df8.activeItemSqlId = null, _0x351df8.userLogin = '', _0x351df8.email = '', _0x351df8.gender = 0x0, _0x351df8.specials = {}, _0x351df8.gloves = null, _0x351df8.rulesAccepted = false;
        let _0x12fcb4 = null,
            _0x13f74e = null;
        'object' != typeof _0xffba69.storage.data.weaponsObjects && (_0xffba69.storage.data.weaponsObjects = {}), _0xffba69.attachments = {
          'attachments': {},
          'addFor': async function (_0x158fd1, _0x483bf9, _0x3ce78f) {
            if (_0xffba69.players.exists(_0x158fd1) && this.attachments) try {
              if (_0x483bf9 in this.attachments) {
                if (_0x158fd1.__attachmentObjects || (_0x158fd1.__attachmentObjects = {}), !(_0x483bf9 in _0x158fd1.__attachmentObjects)) {
                  const _0x17552a = this.attachments[_0x483bf9];

                  let _0x4eb549;

                  if (_0x4eb549 = _0x3ce78f?.['length'] > 0x0 && 0x0 === _0x3ce78f?.[0x0] ? _0xffba69.objects.newWeaponObject(_0xffba69.game.joaat(_0x560a1e.r[_0x17552a.model >> 0x0]) >> 0x0, _0x158fd1.position, {
                    'ammo': 0x1,
                    'scale': _0x31d25e.api.isItAprilFoolDay() ? 0x2 : 0x1,
                    'showWorldObject': true,
                    'rotation': new _0xffba69.Vector3(0x0, 0x0, 0x0),
                    'dimension': -0x1,
                    'tint': _0x3ce78f?.[0x1]
                  }) : _0xffba69.objects.new(_0x17552a.model, _0x158fd1.position, {
                    'dimension': -0x1
                  }), !_0x4eb549) return;
                  _0x4eb549.__attMgrData = {
                    'targetEntity': _0x158fd1.handle,
                    'bone': 'string' == typeof _0x17552a.boneName ? _0x158fd1.getBoneIndexByName(_0x17552a.boneName) : _0x158fd1.getBoneIndex(_0x17552a.boneName),
                    'offset': _0x17552a.offset,
                    'rotation': _0x17552a.rotation,
                    'fixedRot': _0x17552a.fixedRot,
                    'attachmentData': _0x3ce78f
                  }, _0x4eb549.notifyStreaming = true, _0x158fd1.__attachmentObjects[_0x483bf9] = _0x4eb549;
                }
              } else _0xffba69.game.graphics.notify('Static Attachments Error: ~r~Unknown Attachment Used: ~w~' + _0x483bf9);
            } catch (_0x220122) {
              _0x31d25e.api.sendError(_0x220122);
            }
          },
          'removeFor': function (_0x4b882a, _0x2be4e2) {
            if (_0xffba69.players.exists(_0x4b882a)) try {
              if (_0x4b882a.__attachmentObjects && _0x2be4e2 in _0x4b882a.__attachmentObjects) {
                let _0x198069 = _0x4b882a.__attachmentObjects[_0x2be4e2];
                _0xffba69.objects.exists(_0x198069) ? _0x198069.destroy() : _0x198069 && _0x198069.handle && (_0xffba69.game.entity.detach(_0x198069.handle, true, true), _0xffba69.game.entity.setCoords(_0x198069.handle, 0x270f, 0x270f, 0x270f, false, false, false, true), _0xffba69.game.entity.setAlpha(_0x198069.handle, 0x0, 0x0), _0xffba69.game.object.deleteObject(_0x198069.handle)), delete _0x4b882a.__attachmentObjects[_0x2be4e2];
              }

              _0x4b882a.__attachmentObjects || (_0x4b882a.__attachmentObjects = {});
            } catch (_0x230e0e) {
              _0x31d25e.api.sendError(_0x230e0e);
            }
          },
          'initFor': function (_0xd22bff) {
            if (_0xffba69.players.exists(_0xd22bff)) try {
              for (let _0x3e8044 of _0xd22bff.__attachments) _0xffba69.attachments.addFor(_0xd22bff, _0x3e8044);
            } catch (_0x4eb09d) {
              _0x31d25e.api.sendError(_0x4eb09d);
            }
          },
          'shutdownFor': function (_0x119911) {
            if (_0xffba69.players.exists(_0x119911)) try {
              for (let _0x44c62c in _0x119911.__attachmentObjects) _0xffba69.attachments.removeFor(_0x119911, _0x44c62c);
            } catch (_0x25670d) {
              _0x31d25e.api.sendError(_0x25670d);
            }
          },
          'register': function (_0x5d3f5d, _0xbdaa3b, _0x41759b, _0x468fcf, _0x2a62ac, _0x481776, _0x5b8a84) {
            try {
              'string' == typeof _0x5d3f5d && (_0x5d3f5d = _0xffba69.game.joaat(_0x5d3f5d)), _0xffba69.game.streaming.isModelInCdimage(_0xffba69.game.joaat(_0xbdaa3b)) || _0xffba69.game.graphics.notify('Static Attachments Error: ~r~Invalid Model (' + _0xbdaa3b + ')'), 'string' == typeof _0xbdaa3b && (_0xbdaa3b = _0xffba69.game.joaat(_0xbdaa3b)), _0x5d3f5d in this.attachments ? _0xffba69.game.graphics.notify('Static Attachments Error: ~r~Duplicate Entry') : (_0xffba69.game.streaming.requestModel(_0xbdaa3b), this.attachments[_0x5d3f5d] = {
                'id': _0x5d3f5d,
                'model': _0xbdaa3b,
                'offset': _0x468fcf,
                'rotation': _0x2a62ac,
                'boneName': _0x41759b,
                'fixedRot': _0x481776,
                'isBoneId': _0x5b8a84
              });
            } catch (_0xb69c12) {
              _0x31d25e.api.sendError(_0xb69c12);
            }
          },
          'unregister': function (_0x140373) {
            try {
              'string' == typeof _0x140373 && (_0x140373 = _0xffba69.game.joaat(_0x140373)), _0x140373 in this.attachments && (this.attachments[_0x140373] = undefined);
            } catch (_0x3ad5e3) {
              _0x31d25e.api.sendError(_0x3ad5e3);
            }
          },
          'addLocal': function (_0x59d07d, _0x58b81b = []) {
            try {
              'string' == typeof _0x59d07d && (_0x59d07d = _0xffba69.game.joaat(_0x59d07d));
              let _0x3e8265 = _0xffba69.players.local;
              _0x3e8265.__attachments && -0x1 !== _0x3e8265.__attachments.indexOf(_0x59d07d) || _0xffba69.events.callRemote('644388086', _0x59d07d.toString(0x24), JSON.stringify(_0x58b81b));
            } catch (_0xf6b040) {
              _0x31d25e.api.sendError(_0xf6b040);
            }
          },
          'removeLocal': function (_0x250e3a) {
            try {
              'string' == typeof _0x250e3a && (_0x250e3a = _0xffba69.game.joaat(_0x250e3a));
              let _0x3c6c2e = _0xffba69.players.local;
              _0x3c6c2e.__attachments && -0x1 !== _0x3c6c2e.__attachments.indexOf(_0x250e3a) && _0xffba69.events.callRemote('3952097641', _0x250e3a.toString(0x24));
            } catch (_0x25ba76) {
              _0x31d25e.api.sendError(_0x25ba76);
            }
          },
          'getAttachments': function () {
            try {
              return Object.assign({}, this.attachments);
            } catch (_0x17a2ca) {
              _0x31d25e.api.sendError(_0x17a2ca);
            }
          }
        }, _0xffba69.events.add('entityStreamIn', async _0x1f6c80 => {
          if ('object' != _0x1f6c80.type || !_0x1f6c80.__attMgrData) return;
          const {
            targetEntity: _0x88fe6a,
            bone: _0x3e7af0,
            offset: _0x54da4c,
            rotation: _0x1de263,
            attachmentData: _0x3645c2,
            fixedRot: _0x477231
          } = _0x1f6c80.__attMgrData;

          if (_0x1f6c80.setCollision(false, true), _0x1f6c80.attachTo(_0x88fe6a, _0x3e7af0, _0x54da4c.x, _0x54da4c.y, _0x54da4c.z, _0x1de263.x, _0x1de263.y, _0x1de263.z, false, false, false, false, 0x2, _0x477231), _0x3645c2 && _0x3645c2.length) {
            const [_0x286aba, _0x538ac8] = _0x3645c2;
            0x0 === _0x286aba && (_0xffba69.game.weapon.setWeaponObjectTintIndex(_0x1f6c80.handle, _0x538ac8), _0xffba69.game.weapon.requestWeaponHighDetailModel(_0x1f6c80.handle));
          }
        });

        const _0x535e04 = (_0x3c041b, _0x437864, _0x486d2a) => {
          const a0_0x404007 = {
            _0x4776e5: 0xf08,
            _0x1bce70: 0x1d66,
            _0x410df9: 0x2379
          };

          try {
            if (!_0xffba69.players.exists(_0x3c041b) || !_0x3c041b.getVariable('id')) return;

            _0x3c041b.clearDecorations();

            const _0x409e30 = _0x31d25e.api.getEntitySync(_0x3c041b, 'gender', 'number'),
                  _0x86e580 = _0x409e30 ? 'Female' : 'Male';

            _0x437864.forEach(_0x59d443 => {
              const _0x3ae69a = _0x2f2c39.Z[_0x59d443];
              _0x3ae69a && _0x3ae69a['hashName' + _0x86e580] && _0x3c041b.setDecoration(_0xffba69.game.joaat(_0x3ae69a.collection), _0xffba69.game.joaat(_0x3ae69a['hashName' + _0x86e580]));
            });

            {
              const _0x21a028 = _0x2d88e7.Z[_0x409e30].find(_0x108b80 => _0x108b80.ID === _0x486d2a);

              _0x21a028 && _0x21a028.Collection && _0x21a028.Overlay && _0x3c041b.setFacialDecoration(_0xffba69.game.joaat(_0x21a028.Collection), _0xffba69.game.joaat(_0x21a028.Overlay));
            }
          } catch (_0x2390e3) {
            _0x31d25e.api.sendError(_0x2390e3);
          }
        },
              _0x2955c1 = (_0x1c1639, _0x3be1e8) => {
          try {
            if (!_0xffba69.players.exists(_0x1c1639) || !_0x1c1639.getVariable('id')) return;

            const _0x5f49f5 = _0x31d25e.api.getClothes(_0x1c1639);

            if (_0x31d25e.api.getPlayerSetting('lowQualityMode') && _0x1c1639 != _0xffba69.players.local) {
              const _0x175ff4 = _0x31d25e.api.getEntitySync(_0x1c1639, 'gender', 'number'),
                    _0x285aad = _0x31d25e.api.getEmptyClothesSlots(_0x175ff4),
                    _0x76705f = _0x25ab2f.Z[_0x175ff4],
                    _0x4d0b5a = _0x5f49f5.filter(_0x563e62 => _0x563e62.fraction),
                    _0xf9665e = _0x4d0b5a.map(_0x6151ea => _0x6151ea.component);

              for (const _0x324899 of [...Object.keys(_0x76705f), ..._0xf9665e]) {
                const _0x5336be = _0x285aad.findIndex(_0x589951 => 0x0 === _0x589951.isProp && _0x589951.component === parseInt(_0x324899));

                let _0x5e8c0d;

                _0x5e8c0d = _0xf9665e.includes(parseInt(_0x324899)) ? _0x4d0b5a.find(_0xcf1c00 => _0xcf1c00.component === parseInt(_0x324899)) : _0x76705f[_0x324899], _0x285aad[_0x5336be] = {
                  'isProp': _0x5e8c0d.isProp ?? 0x0,
                  'component': parseInt(_0x324899),
                  'drawable': _0x5e8c0d.drawable,
                  'texture': _0x5e8c0d.texture,
                  'gender': _0x175ff4,
                  'fraction': null,
                  'colors': null
                };
              }

              _0x3be1e8 = _0x285aad;
            } else _0x3be1e8 = _0x5f49f5;

            const _0x53f588 = _0x1c1639.sync?.['overrideClothes'] ?? [];

            _0x3be1e8.forEach(_0x41ef10 => {
              if (!_0x41ef10) return;
              let {
                isProp: _0x2f6d8e,
                component: _0x48c3e2,
                drawable: _0xbcfd,
                texture: _0x19d421
              } = _0x41ef10;
              if (null == _0x2f6d8e) return _0x31d25e.api.chatPush('prop error: ' + _0x1c1639.getVariable('id') + '. ' + _0x2f6d8e + '-' + _0x48c3e2 + '-' + _0xbcfd + '-' + _0x19d421);
              if (null == _0x48c3e2) return _0x31d25e.api.chatPush('component error: ' + _0x1c1639.getVariable('id') + '. ' + _0x2f6d8e + '-' + _0x48c3e2 + '-' + _0xbcfd + '-' + _0x19d421);
              if (null == _0xbcfd) return _0x31d25e.api.chatPush('drawable error: ' + _0x1c1639.getVariable('id') + '. ' + _0x2f6d8e + '-' + _0x48c3e2 + '-' + _0xbcfd + '-' + _0x19d421);
              null == _0x19d421 && (_0x19d421 = 0x0);

              const _0x21ae73 = _0x53f588.find(_0x27b9da => _0x27b9da.c === _0x48c3e2 && ('boolean' == typeof _0x27b9da.p && _0x27b9da.p) === !!_0x2f6d8e);

              _0x21ae73 && (_0xbcfd = _0x21ae73.d, _0x19d421 = _0x21ae73.t);

              try {
                if (_0x2f6d8e) -0x1 === _0xbcfd ? _0x1c1639.clearProp(_0x48c3e2) : (0x0, _0xed767d.pE)(_0x1c1639, _0x48c3e2, _0xbcfd, _0x19d421, true);else {
                  if ((0x0, _0xed767d.L6)(_0x1c1639, _0x48c3e2, _0xbcfd || 0x0, _0x19d421, 0x2), _0x41ef10.colors && _0x41ef10.colors.length && 0xb === _0x48c3e2 && !_0x21ae73) {
                    const _0xc0cd2f = _0x31d25e.api.getEntitySync(_0x1c1639, 'gender', 'number'),
                          _0x2b193b = _0x49c055[_0xc0cd2f ? 'female' : 'male'],
                          _0xd939f9 = _0x2b193b && _0x2b193b.tops && _0x2b193b.tops[_0xbcfd] && _0x2b193b.tops[_0xbcfd][_0x19d421];

                    if (_0xd939f9 && _0xd939f9.length) for (let _0x1c4fe3 = 0x0; _0x1c4fe3 < 0x3; _0x1c4fe3++) {
                      const _0x2aaf69 = _0xd939f9.indexOf(_0x1c4fe3);

                      if (-0x1 === _0x2aaf69) {
                        0x0 === _0x1c4fe3 ? (_0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x0), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x1)) : 0x1 === _0x1c4fe3 ? _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x2) : 0x2 === _0x1c4fe3 && _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x3);
                        continue;
                      }

                      const {
                        r: _0x440d46,
                        g: _0x1c007c,
                        b: _0x5249ec
                      } = _0x31d25e.api.hexColor2rgb('#' + _0x41ef10.colors[_0x2aaf69]);

                      0x0 === _0x1c4fe3 ? (_0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, _0x440d46, _0x1c007c, _0x5249ec, 0x0), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, _0x440d46, _0x1c007c, _0x5249ec, 0x1)) : 0x1 === _0x1c4fe3 ? _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, _0x440d46, _0x1c007c, _0x5249ec, 0x2) : 0x2 === _0x1c4fe3 && _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, _0x440d46, _0x1c007c, _0x5249ec, 0x3);
                    } else _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x0), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x1), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x2), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x3);
                  } else _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x0), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x1), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x2), _0xffba69.game.ped.setHeadBlendPaletteColor(_0x1c1639.handle, 0xff, 0xff, 0xff, 0x3);
                }
              } catch (_0x448069) {
                _0x31d25e.api.sendError(_0x448069);
              }
            });
          } catch (_0x489321) {
            _0x31d25e.api.sendError(_0x489321);
          }
        },
              _0x20452e = async (_0x40cd17, _0x72e827) => {
          try {
            if (!_0xffba69.players.exists(_0x40cd17) || !_0x40cd17.getVariable('id')) return;
            if (null == _0x72e827 || !Array.isArray(_0x72e827)) return _0xffba69.gui.chat.push('torso error: ' + _0x40cd17.getVariable('id'));

            if (_0x31d25e.api.getPlayerSetting('lowQualityMode') && _0x40cd17 != _0xffba69.players.local) {
              const _0x59e9b8 = _0x31d25e.api.getClothes(_0x40cd17).filter(_0x2d8e22 => _0x2d8e22.fraction).map(_0x90246a => _0x90246a.component);

              if (!_0x59e9b8.includes(0x8) && !_0x59e9b8.includes(0xb)) return;
            }

            let [_0xc8a7e, _0x2a9356] = _0x72e827;

            const _0x3d109d = (_0x40cd17.sync?.['overrideClothes'] ?? []).find(_0x31872b => 0x3 === _0x31872b.c && ('boolean' != typeof _0x31872b.p || _0x31872b.p));

            _0x3d109d && (_0xc8a7e = _0x3d109d.d, _0x2a9356 = _0x3d109d.t), (0x0, _0xed767d.L6)(_0x40cd17, 0x3, _0xc8a7e, _0x2a9356, 0x2);
          } catch (_0x53b5b3) {
            _0x31d25e.api.sendError(_0x53b5b3);
          }
        };

        _0xffba69.events.add('entityStreamIn', _0x11839a => {
          if (!_0x11839a) return;
          if ('player' !== _0x11839a.type) return;
          if (!_0xffba69.players.exists(_0x11839a)) return;
          if (0x0 === _0x11839a.handle) return;
          if (!_0x11839a.getVariable('id')) return;
          _0x2b012a.add(_0x11839a), _0x11839a.__attachments && _0xffba69.attachments.initFor(_0x11839a), isNaN(_0x31d25e.api.getLodDist('lodDistPlayer')) || _0x11839a.setLodDist(_0x31d25e.api.getPlayerSetting('lowQualityMode') ? _0x31d25e.api.getLodDist(0x0) : parseInt(_0x31d25e.api.getLodDist('lodDistPlayer')));

          const _0x26f754 = _0x31d25e.api.getEntitySync(_0x11839a, 'movementClipset', 'bool');

          if (_0x26f754 ? _0xffba69.events.call('api.setMovementClipset', _0x11839a, _0x26f754, 0x1) : _0xffba69.events.call('api.resetMovementClipset', _0x11839a), _0x11839a.hasVariable('playerInTrunk')) {
            const _0x40cd03 = _0x11839a.getVariable('playerInTrunk');

            _0x40cd03 && _0xffba69.game.sleep(0x190).then(() => {
              _0xffba69.players.exists(_0x11839a) && 0x0 !== _0x11839a.handle && _0xffba69.events.call('api.vehicle.trunk.attachPlayer', _0x11839a.remoteId, _0x40cd03, true);
            });
          }

          _0x31d25e.api.invokeNative('SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER', _0x11839a.handle, 0x1), _0x31d25e.api.invokeNative('SET_PLAYER_WEAPON_DAMAGE_MODIFIER', _0x11839a.handle, 0x1), null != _0x11839a.remoteId && (_0x351e5c[_0x11839a.remoteId] = _0x11839a.syncHash, _0x19da69()), null == _0x11839a.remoteId || null == _0x11839a.sync || _0x3f98aa || _0x537b52([{
            'id': _0x11839a.remoteId,
            'data': _0x11839a.sync
          }], true, ['anim']);
        }), _0xffba69.events.add('entityStreamOut', _0x1c22b1 => {
          if (_0xffba69.players.exists(_0x1c22b1) && 'player' === _0x1c22b1.type && _0x1c22b1.getVariable('id')) {
            if (_0x2b012a.delete(_0x1c22b1), _0x1c22b1.__attachmentObjects && _0xffba69.attachments.shutdownFor(_0x1c22b1), _0x1c22b1.isTalking && delete _0x1c22b1.isTalking, _0xffba69.objects.exists(_0x1c22b1.parachuteObject) && (_0x1c22b1.parachuteObject.destroy(), delete _0x1c22b1.parachuteObject), _0x110b50.AnimSounds3D.stop(_0x31d25e.api.getPlayerStatic(_0x1c22b1).toString(0x24)), _0x1c22b1.localAnimObjectList && _0x1c22b1.localAnimObjectList.length) {
              for (const _0x202c87 of _0x1c22b1.localAnimObjectList) _0x202c87.destroy();

              _0x1c22b1.localAnimObjectList = [];
            }

            null != _0x1c22b1.remoteId && delete _0x351e5c[_0x1c22b1.remoteId], delete _0x1c22b1.dimOut;
          }
        }),
        }), _0xffba69.events.add('player.sync.onDataRecieve', async (_0x56687b, _0x41a665) => {
          _0x3f98aa || _0x537b52(_0x56687b, undefined, undefined, _0x41a665);
        }), _0xffba69.events.add('player.sync.trigger', (_0x7737b0, _0x19b121, _0x5c8bee, _0x3b6d0b) => {
          _0xe51797(_0x7737b0, _0x19b121, _0x5c8bee, _0x3b6d0b);
        });

        const _0x537b52 = (_0x8dac35, _0x618fef = false, _0x9e31b8 = [], _0x27ba25) => {
          const _0x561583 = _0x8dac35 || [];

          for (const {
            id: _0x66d438,
            data: _0x5ea681
          } of _0x561583) {
            const _0x430c35 = _0xffba69.players.atRemoteId(_0x66d438);

            if (_0x430c35 && _0xffba69.players.exists(_0x430c35) && _0x430c35.handle) {
              _0x27ba25 ? (_0x430c35.sync = { ...(_0x430c35.sync ?? {}),
                ..._0x5ea681
              }, _0x430c35.syncHash = _0x31d25e.api.joaat(JSON.stringify(_0x430c35.sync))) : _0x618fef || (_0x430c35.sync = _0x5ea681, _0x430c35.syncHash = _0x31d25e.api.joaat(JSON.stringify(_0x430c35.sync)));

              for (const _0x47fd45 of Object.keys(_0x5ea681)) _0x9e31b8.includes(_0x47fd45) || _0xe51797(_0x430c35, _0x47fd45, _0x5ea681[_0x47fd45], true);
            }
          }
        },
              _0x1230db = _0x10c5d5 => {
          const _0x29cce2 = _0x10c5d5.model === _0xffba69.game.joaat('mp_m_freemode_01') ? 'male' : 'female',
                _0x36c781 = (0x0, _0xed767d.px)(_0x29cce2, 0x2, _0x10c5d5.sync.hair || 0x0);

          if (!_0x10c5d5.sync.hair) return _0x284286(_0x10c5d5, 0x2, -0x1), void _0x535e04(_0x10c5d5, _0x10c5d5.sync.tattoos, _0x36c781);
          _0x284286(_0x10c5d5, 0x2, _0x10c5d5.sync.hair), _0x535e04(_0x10c5d5, _0x10c5d5.sync.tattoos, _0x36c781);
        };

        let _0x5f1be2 = [];

        const _0xe51797 = (_0x5390ba, _0x547a5d, _0x145e44, _0x246326 = false) => {
          const a0_0x52aa0f = {
            _0x875931: 0x11f5,
            _0x19e3e3: 0x19d2,
            _0x2bff14: 0x535,
            _0x150df2: 0x1985,
            _0x1f653d: 0x655,
            _0x56b0be: 0x2530,
            _0x36b6e0: 0x1d66,
            _0x16df49: 0x1985,
            _0x5b8380: 0xffb,
            _0x54d033: 0x2379
          },
                a0_0x48b3e8 = {
            _0x2d257c: 0x235b,
            _0x4f82f1: 0x16c5,
            _0x404ec6: 0xc95
          },
                a0_0x206f6b = {
            _0x124d7a: 0x235b,
            _0x4ab117: 0x14d2,
            _0x26d922: 0x1a5,
            _0x1501b8: 0x1095,
            _0x2585ab: 0xae6,
            _0xe3fea0: 0x10b4
          },
                a0_0x47e9cc = {
            _0x449e32: 0x235b,
            _0x183d8e: 0xc95,
            _0x4ed95a: 0x14d2,
            _0x3d5364: 0x1096,
            _0x50b2f7: 0x535,
            _0x3188d4: 0x1063
          },
                a0_0x5af811 = {
            _0x2193dd: 0x235b,
            _0x4832ac: 0x16c5,
            _0x41c560: 0xc95,
            _0x4b5f3e: 0xdd6,
            _0x4c3cd7: 0x2606,
            _0x2228eb: 0x17f,
            _0x4c0fe2: 0x1d66,
            _0x134f53: 0x2379,
            _0x37efc9: 0x1d55,
            _0xde170a: 0xa26,
            _0x582c8e: 0x235b,
            _0x5e108f: 0x16c5
          },
                a0_0x5b6c36 = {
            _0x2a84a5: 0x235b,
            _0x354d43: 0x16c5,
            _0x197b69: 0xc95,
            _0x464819: 0x535,
            _0x42fed9: 0x1985,
            _0x54ab65: 0x2530
          },
                a0_0x2dde2e = {
            _0x355fe9: 0x235b,
            _0x28350e: 0xc95,
            _0x28f367: 0x535,
            _0x4b04fa: 0x1063
          };
          if (null == _0x5390ba) return;

          let _0x4eb91f;

          if (_0x4eb91f = 'number' == typeof _0x5390ba ? _0xffba69.players.atRemoteId(_0x5390ba) : _0x5390ba, _0x4eb91f && _0x4eb91f.handle) switch (_0x4eb91f.sync || (_0x4eb91f.sync = {}), _0x4eb91f.sync[_0x547a5d] = _0x145e44, _0x246326 || (_0x4eb91f.syncHash = _0x31d25e.api.joaat(JSON.stringify(_0x4eb91f.sync))), _0x547a5d) {
            case 'hair':
            case 'tattoos':
              _0x1230db(_0x4eb91f);

              break;

            case 'clothes':
            case 'overrideClothes':
              _0x2955c1(_0x4eb91f, _0x145e44);

              break;

            case 'torso':
              _0x20452e(_0x4eb91f, _0x145e44);

              break;

            case 'customization':
              ((_0x1a369b, _0xabd05b) => {
                try {
                  if (!_0xffba69.players.exists(_0x1a369b)) return;
                  if (!_0x1a369b.getVariable('id')) return;
                  if (!_0xabd05b || !_0xabd05b.length) ;
                } catch (_0x1d05fa) {
                  _0x31d25e.api.sendError(_0x1d05fa);
                }
              })(_0x4eb91f, _0x145e44);

              break;

            case 'facialAnim':
              ((_0x2e7489, _0x5b5406) => {
                try {
                  if (!_0xffba69.players.exists(_0x2e7489)) return;
                  if (!_0x2e7489.getVariable('id')) return;
                  if (!_0x5b5406) return _0x2e7489.clearFacialIdleAnimOverride();

                  _0x31d25e.api.invokeNative('SET_FACIAL_IDLE_ANIM_OVERRIDE', _0x2e7489.handle, _0x5b5406, 0x0);
                } catch (_0x32bd3e) {
                  _0x31d25e.api.sendError(_0x32bd3e);
                }
              })(_0x4eb91f, _0x145e44);

              break;

            case 'attachments':
              ((_0x26f680, _0x11598f) => {
                const a0_0x3e21c2 = {
                  _0x58e354: 0x22b2
                };

                try {
                  if (!_0xffba69.players.exists(_0x26f680)) return;
                  if (!_0x26f680.getVariable('id')) return;
                  const _0x297321 = {};

                  let _0x5efa25 = _0x11598f.length > 0x0 ? _0x11598f.split('|').map(_0x1b847f => {
                    const [_0x4304a0, ..._0x360746] = _0x1b847f.split('^'),
                          _0x7b7fde = parseInt(_0x4304a0, 0x24);

                    return _0x297321[_0x7b7fde] = _0x360746.map(_0xd29b9b => parseFloat(_0xd29b9b)), _0x7b7fde;
                  }) : [];

                  if (0x0 !== _0x26f680.handle) {
                    let _0x37da6f = _0x26f680.__attachments;
                    _0x37da6f || (_0x37da6f = [], _0x26f680.__attachmentObjects = {});

                    for (let _0x1b61d7 of _0x37da6f) -0x1 === _0x5efa25.indexOf(_0x1b61d7) && _0xffba69.attachments.removeFor(_0x26f680, _0x1b61d7);

                    for (let _0x1dd8ce of _0x5efa25) -0x1 === _0x37da6f.indexOf(_0x1dd8ce) && _0xffba69.attachments.addFor(_0x26f680, _0x1dd8ce, _0x297321[_0x1dd8ce]);
                  }

                  _0x26f680.__attachments = _0x5efa25;
                } catch (_0x11d049) {
                  _0x31d25e.api.sendError(_0x11d049);
                }
              })(_0x4eb91f, _0x145e44);

              break;

            case 'parachute':
              (async (_0x48689f, _0x57cd93) => {
                try {
                  if (!_0xffba69.players.exists(_0x48689f)) return;
                  if (!_0x48689f.getVariable('id')) return;
                  if (_0x48689f.handle === _0xffba69.players.local.handle) return;
                  -0x1 === _0x57cd93 ? _0xffba69.objects.exists(_0x48689f.parachuteObject) && (_0x48689f.parachuteObject.destroy(), delete _0x48689f.parachuteObject) : 0x0 === _0x57cd93 || 0x1 === _0x57cd93 && (_0xffba69.objects.exists(_0x48689f.parachuteObject) && (_0x48689f.parachuteObject.destroy(), delete _0x48689f.parachuteObject), _0x48689f.parachuteObject = await (0x0, _0x27816f.n)(_0xffba69.game.joaat('p_parachute1_mp_s'), _0x48689f.position, {
                    'rotation': new _0xffba69.Vector3(0x0, 0x0, 0x0),
                    'dimension': _0x48689f.dimension
                  }), _0xffba69.players.exists(_0x48689f) && _0x48689f.parachuteObject.attachTo(_0x48689f.handle, 0xe175, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, true, true, true, false, 0x0, true));
                } catch (_0x264968) {
                  _0x31d25e.api.sendError(_0x264968);
                }
              })(_0x4eb91f, _0x145e44);

              break;

            case 'currentWeaponComponents':
              ((_0x2e3d21, _0x38dff2) => {
                try {
                  if (!_0xffba69.players.exists(_0x2e3d21)) return;
                  if (!_0x2e3d21.getVariable('id')) return;

                  _0xffba69.events.call('weapon.components.sync', _0x2e3d21, _0x38dff2);
                } catch (_0x3bc341) {
                  _0x31d25e.api.sendError(_0x3bc341);
                }
              })(_0x4eb91f, _0x145e44);

              break;

            case 'anim':
              _0x246326 && ((_0x32e4bb, _0x57760b) => {
                _0xffba69.players.exists(_0x32e4bb) && _0x32e4bb.getVariable('id') && _0x57760b && _0xffba69.events.call('animations.client.sync', _0x32e4bb, _0x57760b.animDict, _0x57760b.animName, _0x57760b.flag, { ..._0x57760b
                });
              })(_0x4eb91f, _0x145e44);
              break;

            case 'carryng':
              ((_0x10fbaf, _0x35cea8) => {
                _0xffba69.players.exists(_0x10fbaf) && _0x10fbaf.getVariable('id') && _0xffba69.events.call('syncCarryng', _0x10fbaf, _0x35cea8);
              })(_0x4eb91f, _0x145e44);

              break;

            case 'isPushing':
              ((_0x200d0c, _0x454da9) => {
                _0xffba69.players.exists(_0x200d0c) && _0x200d0c.getVariable('id') && (null != _0x454da9 ? (0x0, _0x39e0fa.attachPlayerCarPush)(_0x200d0c, _0x454da9) : _0x200d0c.carPush && (0x0, _0x39e0fa.detachPlayerCarPush)(_0x200d0c));
              })(_0x4eb91f, _0x145e44);

              break;

            case 'weaponData':
              ((_0xa49fe7, _0x584e7c) => {
                const [_0x4a475e, _0x4c2b98, _0x45c18b] = _0x584e7c,
                      _0x2ddc80 = parseInt(_0x4a475e, 0x24) >> 0x0;

                'string' == typeof _0x45c18b && _0x45c18b.length ? _0x31d25e.api.invokeNative('GIVE_WEAPON_COMPONENT_TO_PED', _0xa49fe7.handle, _0xffba69.game.joaat(_0x506e0a.qB[_0x45c18b]) >> 0x0, _0xffba69.game.joaat(_0x45c18b) >> 0x0) : _0x31d25e.api.invokeNative('SET_PED_WEAPON_TINT_INDEX', _0xa49fe7.handle, _0x2ddc80 >> 0x0, _0x4c2b98), _0x5f1be2.push({
                  'player': _0xa49fe7,
                  'startTime': Date.now(),
                  'weaponHash': _0xffba69.game.joaat(_0x506e0a.qB[_0x45c18b]) >> 0x0,
                  'weaponTint': _0x4c2b98,
                  'skinComponent': _0x45c18b
                });
              })(_0x4eb91f, _0x145e44);

              break;

            case 'faceFeatureParams':
              ((_0x321e44, _0xed1d27) => {
                if (!_0xffba69.players.exists(_0x321e44) || 'player' !== _0x321e44.type || !_0xed1d27.length) return;

                const _0x3d9eca = _0xed1d27.split('^').map(_0x435325 => parseFloat(_0x435325));

                for (let _0x3991d3 = 0x0; _0x3991d3 < _0x3d9eca.length; _0x3991d3++) _0x321e44.setFaceFeature(_0x3991d3, _0x3d9eca[_0x3991d3]);
              })(_0x4eb91f, _0x145e44);

          }
        };

        _0xffba69.events.addDataHandler('vanish', (_0x351b79, _0x1cd7e4) => {
          'player' === _0x351b79.type && _0xffba69.players.local !== _0x351b79 && _0x351b79.handle && (_0x1cd7e4 ? (_0x351b79.setCollision(false, false), _0x351b79.freezePosition(true), _0xffba69.game.ped.setAoBlobRendering(_0x351b79.handle, false)) : (_0x351b79.freezePosition(false), _0x351b79.setCollision(true, true), _0xffba69.game.ped.setAoBlobRendering(_0x351b79.handle, true)));
        }), _0xffba69.events.addDataHandler('member', (_0x5df7bc, _0x562efc) => {
          'player' === _0x5df7bc.type && _0x5df7bc.handle === _0xffba69.players.local.handle && (_0x351df8.member = _0x562efc);
        }), _0xffba69.events.addDataHandler('family', (_0x53dce5, _0x90bf4c) => {
          'player' === _0x53dce5.type && _0x53dce5.handle === _0xffba69.players.local.handle && (_0x351df8.family = _0x90bf4c);
        }), _0xffba69.events.addDataHandler('godmode', (_0x1b4254, _0x443544) => {
          'player' === _0x1b4254.type && _0x1b4254.handle === _0xffba69.players.local.handle && (_0x351df8.godmode = _0x443544);
        }), _0xffba69.events.addDataHandler('id', (_0x2fe0df, _0x1f750c) => {
          'player' === _0x2fe0df.type && 'number' == typeof _0x1f750c && (_0x184bb6[_0x1f750c] = _0x2fe0df);
        }),

          delete _0x184bb6[_0x4e9e4a];
        }), _0xffba69.events.add('resetClothes', () => {
          _0x2955c1(_0x351df8), _0x1230db(_0x351df8);
        }), _0xffba69.events.add('removeClientClothes', () => {
          const a0_0x54f242 = {
            _0x17f8a0: 0x1fbe,
            _0x1481e2: 0x2538,
            _0x4c80cc: 0xb76,
            _0x1b0d05: 0xb76,
            _0x1e06ef: 0x831,
            _0x26b830: 0x831
          };
          _0x31d25e.api.getEmptyClothesSlots(_0x351df8.isMale() ? 0x0 : 0x1).forEach(_0x1dd32b => {
            _0x1dd32b.isProp ? -0x1 === _0x1dd32b.drawable ? _0x351df8.clearProp(_0x1dd32b.component) : (0x0, _0xed767d.pE)(_0x351df8, _0x1dd32b.component, _0x1dd32b.drawable, _0x1dd32b.texture, true) : (0x0, _0xed767d.L6)(_0x351df8, _0x1dd32b.component, _0x1dd32b.drawable || 0x0, _0x1dd32b.texture, 0x2);
          }), _0x12fcb4 = null, _0x13f74e = null;
        });

        const _0x284286 = (_0x2c1dcb, _0x3344ce, _0x175729, _0x3715b7, _0x143bdf = false) => {
          if (_0xffba69.players.exists(_0x2c1dcb)) {
            if (null == _0x3344ce) return _0x31d25e.api.chatPush('component error: ' + _0x2c1dcb.getVariable('id') + '. 0-' + _0x3344ce + '-' + _0x175729 + '-' + _0x3715b7);
            if (null == _0x175729) return _0x31d25e.api.chatPush('drawable error: ' + _0x2c1dcb.getVariable('id') + '. 0-' + _0x3344ce + '-' + _0x175729 + '-' + _0x3715b7);

            if (null == _0x3715b7 && (_0x3715b7 = 0x0), !_0x143bdf && (0x8 === _0x3344ce || 0xb === _0x3344ce)) {
              const _0x28311b = _0x2c1dcb.model === _0xffba69.game.joaat('mp_m_freemode_01') ? 'male' : 'female';

              0x8 === _0x3344ce ? _0x13f74e = (0x0, _0xed767d.wG)(_0x28311b, 0x8, _0x175729) : 0xb === _0x3344ce && (_0x12fcb4 = (0x0, _0xed767d.wG)(_0x28311b, 0xb, _0x175729)), _0x31d25e.api.getBestTorsoHandler(_0x2c1dcb, _0x2c1dcb.isMale() ? 0x0 : 0x1, _0x12fcb4, _0x13f74e);
            }

            (0x0, _0xed767d.L6)(_0x2c1dcb, _0x3344ce, _0x175729, _0x3715b7, 0x2);
          }
        };

        _0xffba69.events.add('setClothes', (_0x5bffdd, _0x363345, _0x266b58, _0x27888f) => {
          _0x284286(_0xffba69.players.local, _0x5bffdd, _0x363345, _0x266b58, _0x27888f);
        }), _0xffba69.events.add('setClothes.batch', _0x4ef1b8 => {
          if (!_0x4ef1b8 || !_0x4ef1b8.length) return;

          const _0x346995 = !!_0x4ef1b8.find(_0x5704c9 => 0x3 === _0x5704c9[0x0]);

          for (let _0x2bb148 = 0x0; _0x2bb148 < _0x4ef1b8.length; _0x2bb148++) {
            const _0xc87228 = _0x4ef1b8[_0x2bb148];

            _0xffba69.events.call('setClothes', _0xc87228[0x0], _0xc87228[0x1], _0xc87228[0x2], _0x346995);
          }
        }), _0xffba69.events.add('setProp', (_0xe2fc20, _0x1fc3ed, _0xda3f08) => null == _0xe2fc20 ? _0x31d25e.api.chatPush('component error: ' + _0x351df8.getVariable('id') + '. 1-' + _0xe2fc20 + '-' + _0x1fc3ed + '-' + _0xda3f08) : null == _0x1fc3ed ? _0x31d25e.api.chatPush('drawable error: ' + _0x351df8.getVariable('id') + '. 1-' + _0xe2fc20 + '-' + _0x1fc3ed + '-' + _0xda3f08) : (null == _0xda3f08 && (_0xda3f08 = 0x0), -0x1 === _0x1fc3ed ? _0x351df8.clearProp(_0xe2fc20) : (0x0, _0xed767d.pE)(_0x351df8, _0xe2fc20, _0x1fc3ed, _0xda3f08, true), void (0x0, _0xed767d.pE)(_0x351df8, _0xe2fc20, _0x1fc3ed, _0xda3f08, true))), _0xffba69.events.add('addFriend', _0x481837 => {
          _0x351df8.friends || (_0x351df8.friends = []), _0x351df8.friends.push(_0x481837);
        }), _0xffba69.events.add('removeFriend', _0x3aa819 => {
          _0x351df8.friends || (_0x351df8.friends = []), _0x351df8.friends = _0x351df8.friends.filter(_0x19efd7 => _0x19efd7 !== _0x3aa819);
        }), _0xffba69.events.add('setFriends', _0x116dec => {
          _0x351df8.friends = _0x116dec;
        }), _0xffba69.events.add('addSettings', (_0x258935, _0x4653ca) => {
          _0x351df8.settings || (_0x351df8.settings = {}), _0x351df8.settings[_0x258935] = _0x4653ca;
        }), _0xffba69.events.add('setSettings', _0x11d4e7 => {
          _0x351df8.settings = _0x11d4e7, delete _0x351df8.settings.language;
        }), _0xffba69.events.add('addSkill', (_0x5f2739, _0x26ca32, _0x12f87b) => {
          _0x351df8.skills || (_0x351df8.skills = {}), _0x351df8.skills[_0x5f2739] = _0x26ca32, _0x12f87b && (_0x3d3655.globalBrowser.emit('main_showJobRankInfo', {
            'key': _0x5f2739,
            'rank': _0x12f87b
          }), _0x31d25e.api.playSound('skill_up'));
        }), _0xffba69.events.add('setSkills', _0x5903c8 => {
          _0x351df8.skills = _0x5903c8, _0xffba69.events.call('setGTASkills', _0x5903c8);
        }), _0xffba69.events.add('inventory.sync.setItems', (_0x20f556, _0x3e2757 = 'inventory') => {
          'player' === _0x3e2757 && (_0x3e2757 = 'inventory'), _0x351df8[_0x3e2757] = [], _0x20f556.forEach(_0x408dfe => {
            (_0x408dfe = _0xffba69.inventory.fetchInventoryItem(_0x408dfe)).position = 'inventory' === _0x3e2757 ? 'player' : _0x3e2757, _0x351df8[_0x3e2757].push(_0x408dfe);
          });
        }), _0xffba69.events.add('inventory.sync.giveItem', (_0x48c432, _0x484bc8 = 'inventory') => {
          'player' === _0x484bc8 && (_0x484bc8 = 'inventory'), (_0x48c432 = _0xffba69.inventory.fetchInventoryItem(_0x48c432)).position = 'inventory' === _0x484bc8 ? 'player' : _0x484bc8, _0x351df8[_0x484bc8].push(_0x48c432);
        }), _0xffba69.events.add('inventory.sync.removeItem', (_0x561672, _0x197afb = 'inventory') => {
          'player' === _0x197afb && (_0x197afb = 'inventory'), _0x351df8[_0x197afb] = _0x351df8[_0x197afb].filter(_0x2816f5 => _0x2816f5.id !== _0x561672);
        }), _0xffba69.events.add('inventory.sync.removeItemByItemId', (_0x23080d, _0x185da8 = 'inventory') => {
          'player' === _0x185da8 && (_0x185da8 = 'inventory'), _0x351df8[_0x185da8] = _0x351df8[_0x185da8].filter(_0xe8a70a => _0xe8a70a.itemId !== _0x23080d);
        }), _0xffba69.events.add('inventory.sync.updateItem', (_0x9940a0, _0x19826a = 'inventory') => {
          if ('player' === _0x19826a && (_0x19826a = 'inventory'), !_0x351df8[_0x19826a]) return;
          _0x9940a0 = _0xffba69.inventory.fetchInventoryItem(_0x9940a0);

          const _0x42fc68 = _0x351df8[_0x19826a].findIndex(_0xd84428 => _0xd84428.id === _0x9940a0.id);

          -0x1 !== _0x42fc68 ? _0x351df8[_0x19826a][_0x42fc68] = _0x9940a0 : _0x351df8[_0x19826a].push(_0x9940a0);
        }), _0xffba69.events.add('setVehicles', _0xc71aa8 => {
          _0x351df8.hasVehicles = _0xc71aa8;
        }), _0xffba69.events.add('setBiz', _0x4577d1 => {
          _0x351df8.biz = _0x4577d1;
        }), _0xffba69.events.add('setAtm', _0x9ca66f => {
          _0x351df8.atm = _0x9ca66f;
        }), _0xffba69.events.add('setBillboard', _0x39f8b0 => {
          _0x351df8.billboard = _0x39f8b0;
        }), _0xffba69.events.add('setHouseId', _0x4bea06 => {
          _0x351df8.houseId = _0x4bea06;
        }), _0xffba69.events.add('setRentHouseId', _0x17fcb3 => {
          _0x351df8.rentHouseId = _0x17fcb3;
        }), _0xffba69.events.add('setApartmentId', _0x5a9e06 => {
          _0x351df8.apartmentId = _0x5a9e06;
        }), _0xffba69.events.add('setRentApartmentId', _0x257927 => {
          _0x351df8.rentApartmentId = _0x257927;
        }), _0xffba69.events.add('setOutcomingCall', _0x3d62a1 => {
          _0x351df8.phone_outcomingCall = _0x3d62a1;
        }), _0xffba69.events.add('setBank', _0x22039b => {
          _0x351df8.bank = _0x22039b, _0x3d3655.globalBrowser.emit('bank_updateBank', JSON.stringify(_0x22039b)), _0xeb927a('money', {
            'bank': Math.round(_0x22039b.amount / 0x64)
          });
        }), _0xffba69.events.add('setBankAmount', _0x4f10e5 => {
          _0x4f10e5 = parseInt(_0x4f10e5, 0x24), _0x351df8.bank.amount = _0x4f10e5, _0x3d3655.globalBrowser.emit('bank_updateAmount', _0x4f10e5), _0xeb927a('money', {
            'bank': Math.round(_0x4f10e5 / 0x64)
          });
        }), _0xffba69.events.add('setCash', _0x2efe8c => {
          _0x2efe8c = parseInt(_0x2efe8c, 0x24), _0x351df8.cash = _0x2efe8c, _0x3d3655.globalBrowser.emit('main_updateCashAmount', JSON.stringify(_0x2efe8c / 0x64)), _0xeb927a('money', {
            'cash': Math.round(_0x2efe8c / 0x64)
          });
        }), _0xffba69.events.add('setArmourId', _0x3bf776 => {
          _0x351df8.armourId = _0x3bf776, _0x3d3655.globalBrowser.emit('inventory_updateArmourId', _0x3bf776);
        }), _0xffba69.events.add('setFastSlots', _0x3068d4 => {
          _0x351df8.fastSlots = _0x3068d4, _0x3d3655.globalBrowser.emit('inventory_updateFastSlots', JSON.stringify(_0x3068d4));
        }), _0xffba69.events.add('setIndicators', (_0x2e8545, _0x4fdc5b) => {
          _0x3d3655.globalBrowser.emit('inventory_updateIndicators', {
            'hunger': _0x4fdc5b,
            'water': _0x2e8545,
            'health': _0x351df8.getHealth()
          });
        }), _0xffba69.events.add('setActiveItemId', (_0x1a26a4, _0x581878, _0x1ff8a4) => {
          _0x351df8.activeItemId = _0x581878, _0x351df8.activeItemSqlId = _0x1a26a4, _0x3d3655.globalBrowser.emit('inventory_setActiveItemId', {
            'id': _0x1a26a4,
            'itemId': _0x581878,
            'weaponTint': _0x1ff8a4
          });
        }), _0xffba69.events.add('setUserLogin', _0xbd411 => {
          _0x351df8.userLogin = _0xbd411;
        }), _0xffba69.events.add('setSocialClub', _0x55b4f9 => {
          _0x351df8.socialClub = _0x55b4f9, _0x3d3655.globalBrowser.emit('main_updateSocialClub', _0x55b4f9);
        }), _0xffba69.events.add('setEmail', _0x352198 => {
          _0x351df8.email = _0x352198;
        }), _0xffba69.events.add('sync.setImageKey', _0x4cf3ec => {
          _0x3d3655.globalBrowser.emit('main_updateKey', _0x4cf3ec, JSON.stringify(_0x4f161e.Ti));
        }), _0xffba69.events.add('setRulesAccepted', _0x49e932 => {
          _0x351df8.rulesAccepted = _0x49e932;
        }), _0xffba69.events.add('setGender', _0x3f0b36 => {
          _0x351df8.gender = _0x3f0b36, _0x3d3655.globalBrowser.emit('main_updateGender', _0x3f0b36);
        }), _0xffba69.events.add('setSpecials', _0x1c43b6 => {
          _0x351df8.specials = _0x1c43b6;
        }), _0xffba69.events.add('setIsAuthed', _0x16e6da => {
          _0x351df8.authed = _0x16e6da;
        }), _0xffba69.events.add('setDonate', _0x45bc56 => {
          _0x3d3655.globalBrowser.emit('panelMenu_donate_updateCoins', _0x45bc56);
        }), _0xffba69.events.add('setPhoneData', (_0x77ae83, _0x181b39) => {
          _0x3d3655.globalBrowser.emit('iphone_setPhoneData', {
            'number': _0x77ae83,
            'balance': _0x181b39
          }), _0x3d3655.globalBrowser.emit('main_updatePhoneNumber', _0x77ae83);
        }), _0xffba69.events.add('setGloves', _0x399c18 => {
          _0x351df8.gloves = _0x399c18;
        }), _0xffba69.events.add('playerDeathAnim', _0xbca683 => {
          const a0_0x41f656 = {
            _0x1ccc86: 0x1ec5,
            _0x457804: 0x1619,
            _0x5d4654: 0x965
          };
          _0x31d25e.api.getPlayerSetting('deathAnim') && _0xffba69.players.exists(_0xbca683) && 0x0 != _0xbca683.handle && _0x31d25e.api.requestAnimDict('dead', true).then(() => {
            _0xffba69.players.exists(_0xbca683) && 0x0 != _0xbca683.handle && _0x31d25e.api.getEntitySync(_0xbca683, 'isDead', 'boolean') && _0xbca683.taskPlayAnim('dead', 'dead_a', 0x8, 0x0, -0x1, 0x1, 0x0, false, false, false);
          });
        }), _0xffba69.events.add('time.every2Sec', () => {
          if (!_0x5f1be2.length) return;

          const _0x270f95 = new Set();

          for (const _0x7b7c31 of _0x5f1be2) {
            if (Date.now() - _0x7b7c31.startTime >= 0x7530) {
              _0x270f95.add(_0x7b7c31);

              continue;
            }

            if (!_0xffba69.players.exists(_0x7b7c31.player)) {
              _0x270f95.add(_0x7b7c31);

              continue;
            }

            _0x31d25e.api.invokeNative('GET_SELECTED_PED_WEAPON', _0x7b7c31.player.handle) >> 0x0 == _0x7b7c31.weaponHash >> 0x0 && (_0x270f95.add(_0x7b7c31), 'string' == typeof _0x7b7c31.skinComponent && _0x7b7c31.skinComponent.length ? _0x31d25e.api.invokeNative('GIVE_WEAPON_COMPONENT_TO_PED', _0x7b7c31.player.handle, _0x7b7c31.weaponHash >> 0x0, _0xffba69.game.joaat(_0x7b7c31.skinComponent) >> 0x0) : _0x31d25e.api.invokeNative('SET_PED_WEAPON_TINT_INDEX', _0x7b7c31.player.handle, _0x7b7c31.weaponHash >> 0x0, _0x7b7c31.weaponTint));
          }

          _0x5f1be2 = _0x5f1be2.filter(_0x1f7add => _0x270f95.has(_0x1f7add));
        }), _0xffba69.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x351df8.name = _0x31d25e.api.getName(_0x351df8) || 'No Name';

          const _0x967ac3 = _0xffba69.players.toArrayFast();

          for (const _0x21405d of _0x967ac3) {
            const _0x5157bb = _0x21405d.getVariable('id');

            'number' == typeof _0x5157bb && (_0x184bb6[_0x5157bb] = _0x21405d);
          }
        }), _0xffba69.events.add('browser.onVueLoaded', _0x5c2470 => {
          _0x5c2470 && (_0x31d25e.api.chunkArray(Object.keys(_0x29a154()).filter(_0x33e771 => _0x29a154()[_0x33e771].title), 0x78).forEach(_0x33c967 => {
            const a0_0x39bf8d = {
              _0x5f1631: 0x731
            },
                  _0x4fed30 = [];
            _0x33c967.forEach(_0x217a07 => {
              _0x4fed30.push({
                'model': _0x217a07,
                'title': _0x29a154()[_0x217a07].title,
                'capacity': _0x29a154()[_0x217a07].capacity
              });
            }), _0x3d3655.globalBrowser.emit('main_initVehicleNames', JSON.stringify(_0x4fed30));
          }), Object.keys(_0x2703f9()).forEach(_0x534008 => {
            const a0_0x2bc84a = {
              _0x12e92b: 0x145f
            },
                  _0x17fd63 = {};
            _0x2703f9()[_0x534008].sets.forEach(_0x4a3a91 => {
              _0x17fd63[_0x4a3a91.id] = _0x4a3a91.title;
            }), _0x3d3655.globalBrowser.emit('main_initVehicleModConfig', JSON.stringify({
              'model': _0x534008,
              'sets': _0x17fd63
            })), _0x3d3655.globalBrowser.emit('main_initVehicleModDetailsConfig', JSON.stringify({
              'model': _0x534008,
              'details': _0x2703f9()[_0x534008].details
            }));
          }), _0x3d3655.globalBrowser.emit('main_initWheelConfig', JSON.stringify({
            'config': _0x344405()
          })), _0x3d3655.globalBrowser.emit('main_initCasesConfig', JSON.stringify({
            'config': _0x11168a()
          })));
        }), _0xffba69.events.add('forceResyncClothes', () => {
          const a0_0x409b06 = {
            _0x52e4dc: 0xb3d,
            _0x1fa534: 0xb3d
          };

          _0xffba69.players.forEachInStreamRange(_0x2683a4 => {
            _0x2683a4.sync?.['clothes'] && _0x2955c1(_0x2683a4, _0x2683a4.sync.clothes), _0x2683a4.sync?.['torso'] && _0x20452e(_0x2683a4, _0x2683a4.sync.torso);
          });
        }), _0xffba69.events.add('playerCommand', async _0x3f9eb9 => {
          const _0x20ec47 = _0x3f9eb9.split(/[ ]+/),
                _0x43f23b = _0x20ec47[0x0];

          if (_0x20ec47.shift(), 'disableplayersync' === _0x43f23b) {
            if (!_0x31d25e.api.isAdmin()) return;
            _0x3f98aa = !_0x3f98aa;
          } else {
            if ('settattoo' === _0x43f23b.toLowerCase()) {
              if (!_0x31d25e.api.isAdmin()) return;
              _0x1230db(_0x351df8), _0x351df8.setDecoration(_0xffba69.game.joaat(_0x20ec47[0x0]), _0xffba69.game.joaat(_0x20ec47[0x1]));
            }
          }
        });

        for (const _0x9063ef of _0x352c9e.Z) _0xffba69.attachments.register(_0x9063ef.title, _0x9063ef.model, _0x9063ef.bone, _0x9063ef.offsetPos, _0x9063ef.offsetRot, _0x9063ef.fixedRot, _0x9063ef.isBoneId);
      },
      0x81f3: (_0x1df7c6, _0x32bb81, _0x15397f) => {
        'use strict';

        const a0_0x5df0c5 = {
          _0x35421: 0x1d56,
          _0x639804: 0x1870
        },
              a0_0x68a8d7 = {
          _0x18d304: 0x983,
          _0x1fd843: 0x192d,
          _0x6b8869: 0x535,
          _0x40fe86: 0xf05,
          _0x4d6e27: 0x2361,
          _0x30e3e4: 0x1da5,
          _0xc424f3: 0x164,
          _0x5702fc: 0x2488,
          _0x1ecb5e: 0x2063,
          _0x13b0c1: 0x1e82,
          _0x88bf65: 0xadd
        },
              a0_0xe81d92 = {
          _0x1deef8: 0x2488,
          _0x431fd3: 0x1a3,
          _0x4a206e: 0x983
        },
              a0_0x31a1aa = {
          _0x2d3a24: 0x192d,
          _0x564a99: 0x911,
          _0x63aeb7: 0x245d,
          _0x55f318: 0x24bc,
          _0x5b72f6: 0x1df9,
          _0x406fee: 0x2083,
          _0x3e371f: 0x2083,
          _0x4eb8e4: 0x983,
          _0x495283: 0x2083
        },
              a0_0x11f8c2 = {
          _0x3da6fa: 0x24bc,
          _0x49cb68: 0x869,
          _0x51fe24: 0x11f9,
          _0x6bd1aa: 0x879,
          _0xf31e8f: 0x879
        },
              a0_0x519100 = {
          _0x412007: 0xb08,
          _0x4edd49: 0x2001,
          _0x112404: 0x1d18,
          _0x41f8be: 0x1b31,
          _0x17159f: 0xbc2,
          _0xa042ea: 0x9b5,
          _0x1ddeee: 0x2063,
          _0x13962c: 0x1e82,
          _0x3f782d: 0x19c5,
          _0x345715: 0xdaa,
          _0x3b342a: 0x163d,
          _0x54077b: 0xacf
        },
              a0_0x21aede = {
          _0x3ed536: 0x1e27,
          _0x3bad80: 0x14d2,
          _0x2c3246: 0x1a07
        },
              a0_0x4bd282 = {
          _0x38d8ba: 0xb08,
          _0x38fb04: 0x1f30,
          _0x150e2f: 0x5e5,
          _0x3608c1: 0x9ad,
          _0x140266: 0x535,
          _0x496172: 0x6b7,
          _0x45c607: 0x163d,
          _0x216b71: 0x535,
          _0x1438a2: 0xacf,
          _0x1f349a: 0x1ad9,
          _0x3ca703: 0x1f93,
          _0x28a178: 0x1157,
          _0x5f0534: 0x535,
          _0x543596: 0x648,
          _0x2b8754: 0x9ad
        },
              a0_0x3662cb = {
          _0x8ea56a: 0x535,
          _0x4d8691: 0x1f30,
          _0x1e09e9: 0x1b31,
          _0x23e7d5: 0x19c5,
          _0xcc2252: 0x2530,
          _0x4830e6: 0x7ef,
          _0x384c1c: 0x2167,
          _0x165111: 0x20e,
          _0x17ab48: 0xd47,
          _0x29a781: 0x10e3,
          _0x33ce0d: 0x2128,
          _0x3bf212: 0x10e3,
          _0x4562fd: 0x1d77
        },
              a0_0x125ef3 = {
          _0xb6ff17: 0x2323,
          _0x382ed6: 0x2143,
          _0x1d0efc: 0x2001,
          _0x17a657: 0xadd
        },
              a0_0x370ad0 = {
          _0x7a5b11: 0xf96,
          _0x2f591b: 0x1edc,
          _0x17690a: 0xbd8,
          _0x22d62d: 0x8c4,
          _0x950d57: 0x82c,
          _0x5f28ea: 0x5db,
          _0x587862: 0x1d77
        },
              a0_0x37bcd2 = {
          _0x190913: 0xf96,
          _0x1930c3: 0x2212,
          _0x463fba: 0x15af,
          _0x3b02d1: 0xb08,
          _0x34c10b: 0x8c4,
          _0x1a63bf: 0x5db
        },
              a0_0x50a233 = {
          _0x43464d: 0x1c3c,
          _0x383b11: 0x14d2,
          _0x43f9da: 0x1da5,
          _0x245c91: 0x8c4
        };

        _0x15397f.r(_0x32bb81);

        var _0x51edc9 = _0x15397f(0x16a21),
            _0x1527cd = _0x15397f(0x16a7d),
            _0x13daf1 = _0x15397f(0x12a76),
            _0x31d40c = _0x15397f(0x1659b),
            _0x595282 = _0x15397f(0x161cd);

        const _0x34d124 = _0x595282.players.local,
              _0x41a237 = [0x4e, 0x12, 0x9],
              _0x103c92 = [0x4d],
              _0x53ea64 = [0x0, 0x14, 0x32, 0x64, 0xc8, 0x1f4, 0x3e8],
              _0xa75c93 = new class {
          constructor() {
            const a0_0x88dfa7 = {
              _0x5b8d8c: 0x82c,
              _0x59e00f: 0x1c3c,
              _0xd3091b: 0x112d
            };
            this.listeners = [], this.localMicrophoneKey = 0x0, this.radioMicrophoneKey = 0x0, this.radioPlayers = [], this.radioActived = true, this.currentRadioSpeakers = new Set(), this.lastActivateRadio = Date.now(), this.phoneCallTargetId = null, this.queueAddList = new Set(), this.queueRemoveList = new Set(), this.sendAddData = (0x0, _0x31d40c.D)(() => {
              this.queueAddList.size && (_0x595282.events.callRemote('894342037', JSON.stringify(Array.from(this.queueAddList))), this.queueAddList.clear());
            }, 0x12c), this.sendRemoveData = (0x0, _0x31d40c.D)(() => {
              this.queueRemoveList.size && (_0x595282.events.callRemote('249171537', JSON.stringify(Array.from(this.queueRemoveList))), this.queueRemoveList.clear());
            }, 0x12c);
          }

          ['getVoiceDelay']() {
            return _0x53ea64[_0x51edc9.api.getPlayerSetting('radioDelay') || 0x0];
          }

          ['add'](_0x2cff13) {
            this.listeners.includes(_0x2cff13) || this.listeners.push(_0x2cff13), _0x2cff13.voiceVolume = 0x0, _0x2cff13.voice3d = true, this.queueAddList.add(_0x2cff13.remoteId), this.queueRemoveList.delete(_0x2cff13.remoteId), this.sendAddData(), _0x2cff13.isListening = true;
          }

          ['remove'](_0x43f703, _0x10ea84) {
            const _0x1d24fc = this.listeners.indexOf(_0x43f703);

            -0x1 !== _0x1d24fc && this.listeners.splice(_0x1d24fc, 0x1), _0x43f703.isListening = false, _0x10ea84 && (this.queueRemoveList.add(_0x43f703.remoteId), this.queueAddList.delete(_0x43f703.remoteId), this.sendRemoveData());
          }

          ['updateCurrentRadioSpeakers']() {
            const _0x5c079f = [];

            for (const _0x3d34e1 of this.currentRadioSpeakers) {
              if (!_0x595282.players.exists(_0x3d34e1)) {
                this.currentRadioSpeakers.delete(_0x3d34e1);
                continue;
              }

              const _0x3cce5f = _0x51edc9.api.getDisplayName(_0x3d34e1);

              _0x5c079f.push({
                'login': -0x1 != _0x3cce5f.indexOf('#') ? '' : _0x3cce5f,
                'id': _0x51edc9.api.getPlayerStatic(_0x3d34e1) + ' [' + _0x3d34e1.remoteId + ']',
                'active': true
              });
            }

            _0x13daf1.globalBrowser.emit('main_setRadioTalkers', JSON.stringify(_0x5c079f));
          }

          ['processVoice']() {
            const _0x84a68a = _0x34d124.position;

            if (_0x595282.players.forEachInStreamRange(_0x3c835c => {
              _0x3c835c != _0x34d124 && !_0x3c835c.isListening && _0x3c835c.dimension === _0x34d124.dimension && _0x51edc9.api.vdist(_0x3c835c.position.x, _0x3c835c.position.y, _0x3c835c.position.z, _0x84a68a.x, _0x84a68a.y, _0x84a68a.z) <= 0xf && (_0x3c835c.radioTalk = false, this.add(_0x3c835c)), _0x3c835c.isVoiceSpeaking || 0x0 === _0x3c835c.handle || !_0x3c835c.isTalking && !_0x3c835c.isVoiceActive ? 0x0 === _0x3c835c.handle || _0x3c835c.isTalking || _0x3c835c.isVoiceActive || !_0x3c835c.isVoiceSpeaking || (_0x3c835c.isPlayingAnim('mood_normal_1', 'facials@gen_male@variations@normal', 0x3) || _0x3c835c.playFacialAnim('mood_normal_1', 'facials@gen_male@variations@normal'), _0x3c835c.isVoiceSpeaking = false) : (_0x3c835c.isPlayingAnim('mic_chatter', 'mp_facial', 0x3) || _0x3c835c.playFacialAnim('mic_chatter', 'mp_facial'), _0x3c835c.isVoiceSpeaking = true), null != _0x3c835c.isVoiceSpeaking || _0x3c835c.isListening || (_0x3c835c.isVoiceSpeaking = false);
            }), this.listeners.forEach(_0x3d1c97 => {
              if (_0x3d1c97.remoteId !== _0xa75c93.phoneCallTargetId && !_0x3d1c97.radioTalk) {
                if (0x0 !== _0x3d1c97.handle) {
                  const _0x5635b8 = _0x51edc9.api.vdist(_0x3d1c97.position.x, _0x3d1c97.position.y, _0x3d1c97.position.z, _0x84a68a.x, _0x84a68a.y, _0x84a68a.z);

                  if (_0x3d1c97.hasLosTo) {
                    if (_0x5635b8 > 0xf) this.remove(_0x3d1c97, true), _0x365bba(_0x3d1c97);else {
                      const _0x23d625 = _0x51edc9.api.isInInterior() ? 2.25 : 0x1;

                      _0x3d1c97.voiceVolume = _0x51edc9.api.roundNumber(_0x51edc9.api.getSoundVolume('voiceSoundVol', _0x51edc9.api.clamp(0x64 * (0x1 - _0x5635b8 / 0xf * _0x23d625), 0x0, 0x64)), 0x2);
                    }
                  } else {
                    if (_0x5635b8 > 0x4b || Math.abs(_0x3d1c97.position.z - _0x84a68a.z) > 0x3) this.remove(_0x3d1c97, true), _0x365bba(_0x3d1c97);else {
                      const _0x2a53b3 = 0x5 + (_0x51edc9.api.isInInterior() ? 2.25 : 0x1);

                      _0x3d1c97.voiceVolume = _0x51edc9.api.roundNumber(_0x51edc9.api.getSoundVolume('voiceSoundVol', _0x51edc9.api.clamp(0x64 * (0x1 - _0x5635b8 / 0xf * _0x2a53b3), 0x0, 0x64)), 0x2);
                    }
                  }
                } else this.remove(_0x3d1c97, true), _0x365bba(_0x3d1c97);
              }
            }), _0xa75c93.phoneCallTargetId) {
              const _0x2119de = _0x595282.players.atRemoteId(_0xa75c93.phoneCallTargetId);

              _0x2119de && !_0x2119de.isListening && (this.add(_0x2119de), _0x2119de.voice3d = false);
            }
          }

        }();

        _0x595282.events.add('time.every05Sec', () => {
          _0x51edc9.api.isAuthed() && _0xa75c93.processVoice();
        }), _0x595282.events.add('voice.syncRadioMembers', _0x2fe1a2 => {
          _0xa75c93.radioPlayers = _0x2fe1a2 || [];
        }), _0x595282.events.add('radio.client.setPower', _0x6e10db => {
          _0xa75c93.radioActived = !!_0x6e10db, _0x6e10db || (_0x2fa46f(false), _0xa75c93.currentRadioSpeakers.clear(), _0xa75c93.updateCurrentRadioSpeakers(), _0x13daf1.globalBrowser.emit('radio_setSpeaking', false));
        });

        const _0x365bba = _0x4e2dd9 => {
          if (_0x4e2dd9.isVoiceActive) {
            if (!_0xa75c93.radioPlayers.includes(_0x4e2dd9.remoteId)) return;
            _0x4e2dd9.radioTalk = true, _0x4e2dd9.voiceVolume = _0x51edc9.api.getSoundVolume('walkieSoundVol', 0x64), _0x4e2dd9.voice3d = false;
          } else _0x4e2dd9.voiceVolume = 0x0;
        };

        _0x595282.events.add('setPhoneTalking', _0x5910f4 => {
          _0xa75c93.phoneCallTargetId = _0x5910f4;
        });

            _0x63f186 >= 0x0 && _0xa75c93.radioPlayers.splice(_0x63f186, 0x1);
          }
        }), _0x595282.events.add('playerDeath2', _0x24bdbc => {
          _0x24bdbc === _0x34d124 && (_0x57aa02(), _0x2fa46f());
        }), _0x595282.events.add('keys.f7', () => {
          _0x595282.voiceChat.cleanupAndReload(true, false, false), _0x595282.events.call('voice.resetAllPlayers'), _0x51edc9.api.longNotifyTrans('user.voiceChatReloaded', 'success', 0x1388);
        }), _0x595282.events.add('voice.resetAllPlayers', () => {
          const a0_0x33d137 = {
            _0x1d2915: 0x9ad
          };

          _0xa75c93.listeners.forEach(_0x35a2e7 => {
            _0xa75c93.remove(_0x35a2e7, false);
          });
        }), _0x595282.events.add('playerStartTalking', _0x4a850f => {
          if (_0x4a850f.isTalking = true, _0xa75c93.phoneCallTargetId === _0x4a850f.remoteId || _0xa75c93.listeners.includes(_0x4a850f)) _0x4a850f.radioTalk = false;else {
            if (!_0xa75c93.radioPlayers.includes(_0x4a850f.remoteId)) return;
            _0x4a850f.resetRadioTalk && (_0x4a850f.resetRadioTalk.cancel(), _0x4a850f.resetRadioTalk = null), _0x4a850f.radioTalk || (_0x4a850f.radioTalk = true, _0x51edc9.api.playSound('walkieTalkie/walkie_start', {
              'volume': 0x1e
            }), _0xa75c93.currentRadioSpeakers.has(_0x4a850f) || (_0xa75c93.currentRadioSpeakers.add(_0x4a850f), _0xa75c93.updateCurrentRadioSpeakers())), _0x4a850f.voiceVolume = _0x51edc9.api.getSoundVolume('walkieSoundVol', 0x64), _0x4a850f.voice3d = false;
          }
        }), _0x595282.events.add('playerStopTalking', _0x2fd2e7 => {
          const a0_0x1a55bc = {
            _0x3604b4: 0x1b31,
            _0x5b687e: 0xbc2,
            _0x402f31: 0x1e82,
            _0x253eba: 0xadd
          };
          _0x2fd2e7.isTalking = false, _0x2fd2e7.radioTalk && (_0x2fd2e7.resetRadioTalk && (_0x2fd2e7.resetRadioTalk.cancel(), _0x2fd2e7.resetRadioTalk = null), _0x2fd2e7.resetRadioTalk = _0x595282.game.sleep(0x3e8).then(() => {
            _0x2fd2e7.radioTalk = false, _0x51edc9.api.playSound('walkieTalkie/walkie_stop', {
              'volume': 0x1e
            }), _0xa75c93.currentRadioSpeakers.has(_0x2fd2e7) && (_0xa75c93.currentRadioSpeakers.delete(_0x2fd2e7), _0xa75c93.updateCurrentRadioSpeakers());
          }));
        }), _0x595282.events.add('voice.local.forceDisable', () => {
          _0x57aa02(false);
        }), _0x595282.events.add('voice.radio.forceDisable', () => {
          _0x2fa46f(false);
        }), _0x595282.events.add('voice.setKey', _0x3f4f81 => {
          _0x595282.keys.unbind(_0x41a237[_0xa75c93.localMicrophoneKey], true, _0x370a01), _0x595282.keys.unbind(_0x41a237[_0xa75c93.localMicrophoneKey], false, _0x4ee3e5), _0xa75c93.localMicrophoneKey = _0x3f4f81, _0x595282.keys.bind(_0x41a237[_0xa75c93.localMicrophoneKey], true, _0x370a01), _0x595282.keys.bind(_0x41a237[_0xa75c93.localMicrophoneKey], false, _0x4ee3e5);
        }), _0x595282.events.add('voice.radio.setKey', _0x58c1cb => {
          _0x595282.keys.unbind(_0x103c92[_0xa75c93.radioMicrophoneKey], true, _0xfb0f84), _0x595282.keys.unbind(_0x103c92[_0xa75c93.radioMicrophoneKey], false, _0x145927), _0xa75c93.radioMicrophoneKey = _0x58c1cb, _0x2fa46f(false), _0x595282.keys.bind(_0x103c92[_0xa75c93.radioMicrophoneKey], true, _0xfb0f84), _0x595282.keys.bind(_0x103c92[_0xa75c93.radioMicrophoneKey], false, _0x145927);
        }), _0x595282.events.add('render2', () => {
          !_0x595282.voiceChat.muted && (_0x595282.keys.isUp(0x4e) && _0x595282.keys.isUp(_0x1527cd.t.ALT) && _0x595282.keys.isUp(_0x1527cd.t.TAB) || _0x595282.system && null != _0x595282.system.isFocused && !_0x595282.system.isFocused) ? _0x57aa02() : !_0x595282.voiceChat.muted && (_0x595282.keys.isUp(0x4d) || _0x595282.system && null != _0x595282.system.isFocused && !_0x595282.system.isFocused) && _0x2fa46f();
        });

        const _0x370a01 = () => {
          if (_0x51edc9.api.isAuthed() && !_0x15397f.g.interfaces.chat && !_0xa75c93.radioActive) {
            if (_0x34d124.getVariable('muted') > 0x0) return _0x51edc9.api.notifyTrans('user.muted', {
              'amount': _0x34d124.getVariable('muted')
            }, {
              'type': 'error'
            });
            if (_0x51edc9.api.getEntitySync(_0x34d124, 'isDead', 'boolean')) return _0x51edc9.api.notifyTrans('user.dead', {
              'type': 'error'
            });
            if (_0x34d124.getVariable('isGag')) return _0x51edc9.api.notifyTrans('user.gaged', {
              'type': 'error'
            });
            _0x34d124.isTalking = true, _0xa75c93.localActive = true, _0x595282.voiceChat.muted = false, _0xa75c93.disableLocalTimer && (_0xa75c93.disableLocalTimer.cancel(), _0xa75c93.disableLocalTimer = null), _0x13daf1.globalBrowser.emit('main_updateTalking', JSON.stringify(true));
          }
        },
              _0x57aa02 = (_0x28eeab = false) => {
          if (!_0xa75c93.localActive) return;

          const _0x5c0cd2 = () => {
            _0x13daf1.globalBrowser.emit('main_updateTalking', JSON.stringify(false)), _0x595282.voiceChat.muted = true, _0x34d124.isTalking = false, _0xa75c93.localActive = false;
          },
                _0x231cc4 = _0xa75c93.getVoiceDelay();

          _0x28eeab && _0x231cc4 > 0x0 ? _0xa75c93.disableLocalTimer = _0x595282.game.sleep(_0x231cc4).then(_0x5c0cd2) : _0x5c0cd2();
        },
              _0x4ee3e5 = () => {
          _0x57aa02(true);
        },
              _0xfb0f84 = () => {
          const _0x1f0d9e = Date.now();

          if (!(_0xa75c93.localActive || !_0xa75c93.radioActived || _0x51edc9.api.isCuffed(_0x34d124) || _0x51edc9.api.isTied(_0x34d124) || _0x51edc9.api.isTiedHands(_0x34d124) || !_0xa75c93.radioPlayers.includes(_0x34d124.remoteId) || !_0x51edc9.api.isAuthed() || _0x15397f.g.interfaces.chat || _0x1f0d9e - _0xa75c93.lastActivateRadio < 0x190 + _0xa75c93.getVoiceDelay())) {
            if (_0x34d124.getVariable('muted') > 0x0) return _0x51edc9.api.notifyTrans('user.muted', {
              'amount': _0x34d124.getVariable('muted')
            }, {
              'type': 'error'
            });
            if (_0x51edc9.api.getEntitySync(_0x34d124, 'isDead', 'boolean')) return _0x51edc9.api.notifyTrans('user.dead', {
              'type': 'error'
            });
            if (_0x34d124.getVariable('isGag')) return _0x51edc9.api.notifyTrans('user.gaged', {
              'type': 'error'
            });
            _0xa75c93.radioActive = true, _0x595282.voiceChat.muted = false, _0xa75c93.lastActivateRadio = _0x1f0d9e, _0x595282.events.callRemote('3632527869'), _0x13daf1.globalBrowser.emit('radio_setSpeaking', true), _0x51edc9.api.play3DSound('walkieTalkie/walkie_start', {
              'volume': 0x1e
            }), _0x34d124.isPlayingAnim('random@arrests', 'generic_radio_chatter', 0x3) || _0x51edc9.api.isUsingSystemAnim() || _0x51edc9.api.taskPlayAnim('random@arrests', 'generic_radio_chatter', 0x30, false, false, true, 'walkie_talkie'), _0xa75c93.currentRadioSpeakers.has(_0x34d124) || (_0xa75c93.currentRadioSpeakers.add(_0x34d124), _0xa75c93.updateCurrentRadioSpeakers()), _0xa75c93.disableRadioTimer && (_0xa75c93.disableRadioTimer.cancel(), _0xa75c93.disableRadioTimer = null);
          }
        },
              _0x2fa46f = (_0x564bf3 = false) => {
          if (!_0xa75c93.radioActive) return;

          const _0x38595d = () => {
            _0xa75c93.radioActive = false, _0x595282.voiceChat.muted = true, _0x51edc9.api.play3DSound('walkieTalkie/walkie_stop', {
              'volume': 0x1e
            }), _0x595282.events.callRemote('1595952977'), _0x13daf1.globalBrowser.emit('radio_setSpeaking', false), _0xa75c93.currentRadioSpeakers.has(_0x34d124) && (_0xa75c93.currentRadioSpeakers.delete(_0x34d124), _0xa75c93.updateCurrentRadioSpeakers());
          },
                _0x10cefc = _0xa75c93.getVoiceDelay();

          _0x564bf3 && _0x10cefc > 0x0 ? _0xa75c93.disableRadioTimer = _0x595282.game.sleep(_0x10cefc).then(_0x38595d) : _0x38595d();
        },
              _0x145927 = () => {
          _0x2fa46f(true);
        };

        _0x595282.keys.bind(_0x41a237[_0xa75c93.localMicrophoneKey], true, _0x370a01), _0x595282.keys.bind(_0x41a237[_0xa75c93.localMicrophoneKey], false, _0x4ee3e5), _0x595282.keys.bind(_0x103c92[_0xa75c93.radioMicrophoneKey], true, _0xfb0f84), _0x595282.keys.bind(_0x103c92[_0xa75c93.radioMicrophoneKey], false, _0x145927);
      },
      0x165e6: (_0x18f2b3, _0xae3584, _0x52875b) => {
        'use strict';

        const a0_0x4e7478 = {
          _0x41b203: 0x1d66,
          _0x5436b4: 0x2379,
          _0x536c75: 0x8c9,
          _0x4ae6fc: 0x1d66,
          _0x23afbd: 0x1a14,
          _0x1ccf7e: 0x139c,
          _0x1ba931: 0x1d66,
          _0x23e375: 0x10c5,
          _0x42a7aa: 0x1d66,
          _0x104ed6: 0xd16,
          _0xd4b3a3: 0x2379,
          _0x1193b6: 0x7d6,
          _0x131188: 0x1d66,
          _0x36ffdc: 0x118c,
          _0x3040b0: 0x231a,
          _0x42d9c6: 0x2379,
          _0x54636c: 0x2379,
          _0x4a8cff: 0x2379,
          _0x170f11: 0x14fe,
          _0x59ef4d: 0x1c98,
          _0x54051b: 0x2379,
          _0x5e9540: 0x605,
          _0x3c70db: 0xe35,
          _0x3d6034: 0x2379,
          _0x3f9300: 0x5eb,
          _0x4c8509: 0x1d66,
          _0xc048cd: 0x2379,
          _0x15cb03: 0x13f3,
          _0x8486fc: 0x17ca,
          _0x15cb32: 0x1d66,
          _0x4c9ddf: 0x1f8c,
          _0x12b653: 0x9f8,
          _0x1a04dc: 0x25b,
          _0x3a3911: 0x1d66,
          _0x10dbe8: 0x2379,
          _0x590391: 0x6b4,
          _0x406686: 0x1d66,
          _0x12d215: 0x2379,
          _0x378ba1: 0xbb0,
          _0x2bee36: 0x1d66,
          _0x2cfcdf: 0x2379,
          _0x530a13: 0x1d66,
          _0x4c279a: 0x1a77,
          _0xd2b207: 0x4e2,
          _0x15fa25: 0x152c,
          _0x416783: 0x1d66,
          _0x5d5fc1: 0x17b1,
          _0x4cf77a: 0x1d66,
          _0x11ad9f: 0x2379,
          _0xa0059c: 0xf30,
          _0x4e2fa0: 0x1d66,
          _0x53fc9a: 0x1c7,
          _0x5b0cce: 0x2379,
          _0x381746: 0x1df5,
          _0x356cff: 0x1d66,
          _0x4a9e72: 0x2379,
          _0x163c4b: 0x1bfd,
          _0x39571a: 0x2379,
          _0x19cfb8: 0x534,
          _0x4b14c7: 0xd32,
          _0x5c0b4f: 0x1dc5,
          _0x44ef30: 0x2379,
          _0x338a70: 0x33d,
          _0x13ac6e: 0x2379,
          _0x10e58e: 0x1100,
          _0x546c2a: 0x2379,
          _0x427d7e: 0x2379,
          _0xad53c6: 0xf68,
          _0x4736d2: 0x1d66,
          _0x505f06: 0xa43,
          _0x587b7e: 0x1d66,
          _0x5c1ebc: 0x2379,
          _0x290ceb: 0x399,
          _0x494c76: 0x253a,
          _0x45fadd: 0x12f5,
          _0x150c06: 0x34e,
          _0x32f36f: 0x2050,
          _0x29fe93: 0x2379,
          _0x2e2896: 0x1929,
          _0xd93f1b: 0x7eb,
          _0x742913: 0x2311,
          _0x1f0b5b: 0x1d66,
          _0x2d14b3: 0xa8a,
          _0x1b42d8: 0x2211,
          _0x43b862: 0x2379,
          _0x1aabd3: 0x1d66,
          _0x5f3d9f: 0x2379,
          _0x4fc78b: 0xde7,
          _0x14ced: 0x865,
          _0x54db36: 0x2379,
          _0x3d1b85: 0x15e8,
          _0x10fdcc: 0x834,
          _0x2fd53a: 0x1d66,
          _0x5a0ceb: 0x1d66,
          _0x7301f7: 0x1589,
          _0x4e0165: 0x231e,
          _0x5d77d8: 0x17af,
          _0x5cdc0a: 0xfe4,
          _0x1c9948: 0x2379,
          _0x2d02b2: 0x1f73,
          _0x31d3ac: 0x1d66,
          _0x3e2916: 0x2379,
          _0x4cbe7c: 0x22a8,
          _0x25bb4f: 0x1d66,
          _0x32b725: 0xc63,
          _0x274212: 0x114d,
          _0x336c56: 0x2379,
          _0x52c7d0: 0x2379,
          _0x8482ab: 0x2022,
          _0x237b5b: 0x1d66,
          _0x11fae2: 0x1d66,
          _0x425bb7: 0x9b0,
          _0x1f42ec: 0x2379,
          _0x593933: 0x1ad1,
          _0x42b41f: 0x1d66,
          _0x9d70a4: 0x2379,
          _0x1ee926: 0x12db,
          _0x25fb81: 0x7dd,
          _0xcbfadd: 0x1d66,
          _0xadc46a: 0x11b5,
          _0x257be6: 0xfbf,
          _0xb292a1: 0x1d66,
          _0x16d266: 0x2379,
          _0x34cded: 0x1e06,
          _0x49a17e: 0x2379,
          _0x21e1ba: 0x8a4,
          _0x12baec: 0x2379,
          _0x1c694c: 0x1369,
          _0x467eb6: 0x1415,
          _0xf614ea: 0x19a0,
          _0x51409e: 0x2379,
          _0x2d4a23: 0xbcc,
          _0x371667: 0x2379,
          _0xd52947: 0x1d66,
          _0x2f548a: 0x1c7f,
          _0x19ac1e: 0x2379,
          _0x176ccb: 0xee8,
          _0x2cf451: 0x73f,
          _0x1deb8d: 0x2379,
          _0x36dafe: 0x1822,
          _0x4397eb: 0x2379,
          _0x426557: 0xf78,
          _0x4eaddc: 0x2127,
          _0x5b2d9c: 0x1d66,
          _0x3e311f: 0x22e3,
          _0x26d551: 0x1d66,
          _0x1f6403: 0x2379,
          _0x21704d: 0x1e17,
          _0x3a7480: 0x1d66,
          _0x4d0c5d: 0x2379,
          _0x4f8019: 0x706,
          _0x26d4ec: 0x1d66,
          _0xe4e6c6: 0x2379,
          _0x3efc46: 0x395,
          _0x1e5b21: 0x1d66,
          _0x58a7c6: 0x461,
          _0x24cc4d: 0x5cb,
          _0x3a2968: 0x1d66,
          _0xb41736: 0x23db,
          _0x2d91fd: 0x2379,
          _0x2d97ce: 0x2379,
          _0x3798eb: 0x2468,
          _0xb9d00: 0x2379,
          _0x45ac6e: 0x3d8,
          _0xa65e05: 0x2379,
          _0x51f892: 0x2379,
          _0x3eb876: 0x1b52,
          _0x5120ff: 0x2593,
          _0x21fec9: 0x1d66,
          _0x327f2d: 0x2379,
          _0x39aef5: 0x2398,
          _0x363a67: 0x83a,
          _0x321e23: 0x1d66,
          _0xc38703: 0x2379,
          _0x540dfd: 0x1c22,
          _0x5d1338: 0xc64,
          _0x2641f3: 0x2379,
          _0x18ea96: 0x15dc,
          _0x3a8125: 0x2379,
          _0xd4bf80: 0xfca,
          _0x56c66a: 0x1d66,
          _0x30c35d: 0x2379,
          _0x69b454: 0x2379,
          _0x6c9fa5: 0x1d66,
          _0x400dea: 0x19b4,
          _0x4af6f1: 0x2379,
          _0x87369f: 0x1d66,
          _0x4c16a6: 0x2379,
          _0x918b9d: 0x1d66,
          _0x47c6c1: 0x2582,
          _0x521e41: 0x1d66,
          _0x35f64c: 0x2379,
          _0x5ef497: 0x243f,
          _0x327cdd: 0x1d66,
          _0x3b380b: 0x2379,
          _0x3b4fe5: 0xe47,
          _0x4d5882: 0x2379,
          _0x23cda1: 0x1d66,
          _0x33c850: 0x1ac8,
          _0x5db5e1: 0x1d66,
          _0x1d4c08: 0xa52,
          _0x59bf0a: 0x3ee,
          _0x541cb9: 0x1349,
          _0x59cca3: 0x535,
          _0x3474a6: 0x1349
        };

        _0x52875b.r(_0xae3584);

        var _0x47d07f = _0x52875b(0x16a21),
            _0x4b61a0 = _0x52875b(0x161cd);

        const _0x57228f = 'DeathFailMPIn',
              _0x460d44 = 0x2ee,
              _0x257a5e = 0x0,
              _0x23df53 = {
          'melee': ['wasted.deathMessages.melee.first', 'wasted.deathMessages.melee.second', 'wasted.deathMessages.melee.third', 'wasted.deathMessages.melee.fourth', 'wasted.deathMessages.melee.fifth'],
          'molotov': ['wasted.deathMessages.molotov.first', 'wasted.deathMessages.molotov.second', 'wasted.deathMessages.molotov.third'],
          'knife': ['wasted.deathMessages.knife.first', 'wasted.deathMessages.knife.second', 'wasted.deathMessages.knife.third'],
          'pistol': ['wasted.deathMessages.pistol.first', 'wasted.deathMessages.pistol.second'],
          'smg': ['wasted.deathMessages.smg.first', 'wasted.deathMessages.smg.second', 'wasted.deathMessages.smg.third'],
          'rifle': ['wasted.deathMessages.rifle.first', 'wasted.deathMessages.rifle.second', 'wasted.deathMessages.rifle.third', 'wasted.deathMessages.rifle.fourth'],
          'mg': ['wasted.deathMessages.mg.first', 'wasted.deathMessages.mg.second', 'wasted.deathMessages.mg.third'],
          'shotgun': ['wasted.deathMessages.shotgun.first', 'wasted.deathMessages.shotgun.second', 'wasted.deathMessages.shotgun.third'],
          'sniper': ['wasted.deathMessages.sniper.first', 'wasted.deathMessages.sniper.second', 'wasted.deathMessages.sniper.third'],
          'heavy': ['wasted.deathMessages.heavy.first', 'wasted.deathMessages.heavy.second'],
          'minigun': ['wasted.deathMessages.minigun.first', 'wasted.deathMessages.minigun.second', 'wasted.deathMessages.minigun.third', 'wasted.deathMessages.minigun.fourth'],
          'explosive': ['wasted.deathMessages.explosive.first', 'wasted.deathMessages.explosive.second'],
          'rotor': ['wasted.deathMessages.rotor.first'],
          'flatten': ['wasted.deathMessages.flatten.first']
        };

        let _0x38c3f6;

        _0x4b61a0.events.add('playerDeath2', async (_0x377104, _0x48b2f1, _0x88ca21) => {
          const a0_0xf1551f = {
            _0x30851d: 0x1349,
            _0x588ca5: 0x1d66,
            _0x285b2c: 0x84b,
            _0xa07185: 0x535,
            _0x5719fb: 0x402,
            _0x2905f2: 0x535,
            _0x564be0: 0x220a
          };
          _0x4b61a0.game.audio.playSoundFrontend(-0x1, 'MP_Flash', 'WastedSounds', true), _0x4b61a0.game.graphics.startScreenEffect(_0x57228f, 0x0, true), _0x4b61a0.game.cam.setCamEffect(_0x257a5e), _0x38c3f6 && (_0x38c3f6.cancel(), _0x38c3f6 = undefined), _0x38c3f6 = _0x4b61a0.game.sleep(parseInt(_0x460d44)).then(() => {
            const _0x398b8a = _0x47d07f.api.language.translatePlayer('wasted.title');

            _0x4b61a0.game.ui.messages.showShard('~r~' + _0x398b8a, _0x88ca21 ? (_0x88ca21.handle == _0x377104.handle ? _0x47d07f.api.language.translatePlayer('wasted.deathMessages.selfDeath') : _0x41a23a(_0x47d07f.api.getName(_0x88ca21) + ' #' + _0x47d07f.api.getPlayerStatic(_0x88ca21), _0x48b2f1)) + '\n                ' : _0x47d07f.api.language.translatePlayer('wasted.deathMessages.justDeath'), null, null, 0x9c4);
          });
        }), _0x4b61a0.events.add('playerSpawn', () => {
          _0x4b61a0.game.graphics.stopScreenEffect(_0x57228f), _0x4b61a0.game.cam.setCamEffect(0x0), _0x38c3f6 && (_0x38c3f6.cancel(), _0x38c3f6 = undefined);
        });

        const _0x41a23a = (_0x12d5db, _0xe20b5b) => {
          let _0x285840;

          switch (_0xe20b5b) {
            case _0x4b61a0.game.joaat('weapon_unarmed'):
            case _0x4b61a0.game.joaat('weapon_bat'):
            case _0x4b61a0.game.joaat('weapon_nightstick'):
            case _0x4b61a0.game.joaat('weapon_hammer'):
            case _0x4b61a0.game.joaat('weapon_crowbar'):
            case _0x4b61a0.game.joaat('weapon_golfclub'):
            case _0x4b61a0.game.joaat('weapon_knuckle'):
            case _0x4b61a0.game.joaat('weapon_hatchet'):
            case _0x4b61a0.game.joaat('weapon_poolcue'):
            case _0x4b61a0.game.joaat('weapon_wrench'):
            case _0x4b61a0.game.joaat('weapon_flashlight'):
            case _0x4b61a0.game.joaat('weapon_bottle'):
            case _0x4b61a0.game.joaat('weapon_battleaxe'):
            case _0x4b61a0.game.joaat('weapon_machete'):
              _0x285840 = 'melee';
              break;

            case _0x4b61a0.game.joaat('weapon_molotov'):
              _0x285840 = 'molotov';
              break;

            case _0x4b61a0.game.joaat('weapon_knife'):
            case _0x4b61a0.game.joaat('weapon_dagger'):
            case _0x4b61a0.game.joaat('weapon_switchblade'):
              _0x285840 = 'knife';
              break;

            case _0x4b61a0.game.joaat('weapon_pistol'):
            case _0x4b61a0.game.joaat('weapon_combatpistol'):
            case _0x4b61a0.game.joaat('weapon_appistol'):
            case _0x4b61a0.game.joaat('weapon_snspistol'):
            case _0x4b61a0.game.joaat('weapon_snspistol_mk2'):
            case _0x4b61a0.game.joaat('weapon_heavypistol'):
            case _0x4b61a0.game.joaat('weapon_vintagepistol'):
            case _0x4b61a0.game.joaat('weapon_marksmanpistol'):
            case _0x4b61a0.game.joaat('weapon_machinepistol'):
            case _0x4b61a0.game.joaat('weapon_revolver'):
            case _0x4b61a0.game.joaat('weapon_revolver_mk2'):
            case _0x4b61a0.game.joaat('weapon_pistol50'):
            case _0x4b61a0.game.joaat('weapon_pistol_mk2'):
            case _0x4b61a0.game.joaat('weapon_doubleaction'):
            case _0x4b61a0.game.joaat('weapon_glockp80'):
              _0x285840 = 'pistol';
              break;

            case _0x4b61a0.game.joaat('weapon_smg'):
            case _0x4b61a0.game.joaat('weapon_microsmg'):
            case _0x4b61a0.game.joaat('weapon_combatpdw'):
            case _0x4b61a0.game.joaat('weapon_minismg'):
            case _0x4b61a0.game.joaat('weapon_assaultsmg'):
            case _0x4b61a0.game.joaat('weapon_gusenberg'):
            case _0x4b61a0.game.joaat('weapon_smg_mk2'):
              _0x285840 = 'smg';
              break;

            case _0x4b61a0.game.joaat('weapon_assaultrifle'):
            case _0x4b61a0.game.joaat('weapon_carbinerifle'):
            case _0x4b61a0.game.joaat('weapon_carbinerifle_mk2'):
            case _0x4b61a0.game.joaat('weapon_advancedrifle'):
            case _0x4b61a0.game.joaat('weapon_assaultrifle_mk2'):
            case _0x4b61a0.game.joaat('weapon_specialcarbine'):
            case _0x4b61a0.game.joaat('weapon_specialcarbine_mk2'):
            case _0x4b61a0.game.joaat('weapon_bullpuprifle'):
            case _0x4b61a0.game.joaat('weapon_bullpuprifle_mk2'):
            case _0x4b61a0.game.joaat('weapon_musket'):
            case _0x4b61a0.game.joaat('weapon_compactrifle'):
            case _0x4b61a0.game.joaat('weapon_heavyrifle'):
              _0x285840 = 'rifle';
              break;

            case _0x4b61a0.game.joaat('weapon_mg'):
            case _0x4b61a0.game.joaat('weapon_combatmg'):
            case _0x4b61a0.game.joaat('weapon_combatmg_mk2'):
            case _0x4b61a0.game.joaat('vehicle_weapon_player_bullet'):
            case _0x4b61a0.game.joaat('vehicle_weapon_ruiner_bullet'):
            case _0x4b61a0.game.joaat('vehicle_weapon_cannon_blazer'):
            case _0x4b61a0.game.joaat('vehicle_weapon_oppressor_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_ardent_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_nightshark_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_microlight_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tula_nosemg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tula_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tula_dualmg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_deluxo_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_subcar_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_comet_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_revolter_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_savestra_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_viseris_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_caracara_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_bombushka_dualmg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_dogfighter_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_mogul_nose'):
            case _0x4b61a0.game.joaat('vehicle_weapon_mogul_dualnose'):
            case _0x4b61a0.game.joaat('vehicle_weapon_mogul_turret'):
            case _0x4b61a0.game.joaat('vehicle_weapon_mogul_dualturret'):
            case _0x4b61a0.game.joaat('vehicle_weapon_rogue_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_seabreeze_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_vigilante_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_dune_mg'):
              _0x285840 = 'mg';
              break;

            case _0x4b61a0.game.joaat('weapon_pumpshotgun'):
            case _0x4b61a0.game.joaat('weapon_pumpshotgun_mk2'):
            case _0x4b61a0.game.joaat('weapon_sawnoffshotgun'):
            case _0x4b61a0.game.joaat('weapon_assaultshotgun'):
            case _0x4b61a0.game.joaat('weapon_bullpupshotgun'):
            case _0x4b61a0.game.joaat('weapon_heavyshotgun'):
            case _0x4b61a0.game.joaat('weapon_dbshotgun'):
            case _0x4b61a0.game.joaat('weapon_autoshotgun'):
              _0x285840 = 'shotgun';
              break;

            case _0x4b61a0.game.joaat('weapon_heavysniper'):
            case _0x4b61a0.game.joaat('weapon_remotesniper'):
            case _0x4b61a0.game.joaat('weapon_sniperrifle'):
            case _0x4b61a0.game.joaat('weapon_marksmanrifle'):
            case _0x4b61a0.game.joaat('weapon_marksmanrifle_mk2'):
            case _0x4b61a0.game.joaat('weapon_heavysniper_mk2'):
              _0x285840 = 'sniper';
              break;

            case _0x4b61a0.game.joaat('weapon_explosion'):
            case _0x4b61a0.game.joaat('weapon_grenadelauncher'):
            case _0x4b61a0.game.joaat('weapon_flaregun'):
            case _0x4b61a0.game.joaat('weapon_rpg'):
            case _0x4b61a0.game.joaat('weapon_vehicle_rocket'):
            case _0x4b61a0.game.joaat('weapon_railgun'):
            case _0x4b61a0.game.joaat('weapon_firework'):
            case _0x4b61a0.game.joaat('weapon_hominglauncher'):
            case _0x4b61a0.game.joaat('weapon_compactlauncher'):
            case _0x4b61a0.game.joaat('weapon_airstrike_rocket'):
            case _0x4b61a0.game.joaat('vehicle_weapon_turret_technical'):
            case _0x4b61a0.game.joaat('vehicle_weapon_space_rocket'):
            case _0x4b61a0.game.joaat('vehicle_weapon_player_laser'):
            case _0x4b61a0.game.joaat('vehicle_weapon_player_buzzard'):
            case _0x4b61a0.game.joaat('weapon_passenger_rocket'):
            case _0x4b61a0.game.joaat('vehicle_weapon_plane_rocket'):
            case _0x4b61a0.game.joaat('vehicle_weapon_player_savage'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tank'):
            case _0x4b61a0.game.joaat('vehicle_weapon_ruiner_rocket'):
            case _0x4b61a0.game.joaat('vehicle_weapon_turret_boxville'):
            case _0x4b61a0.game.joaat('vehicle_weapon_turret_insurgent'):
            case _0x4b61a0.game.joaat('vehicle_weapon_player_lazer'):
            case _0x4b61a0.game.joaat('vehicle_weapon_oppressor_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tampa_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tampa_mortar'):
            case _0x4b61a0.game.joaat('vehicle_weapon_akula_turret_single'):
            case _0x4b61a0.game.joaat('vehicle_weapon_akula_turret_dual'):
            case _0x4b61a0.game.joaat('vehicle_weapon_akula_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_akula_barrage'):
            case _0x4b61a0.game.joaat('vehicle_weapon_avenger_cannon'):
            case _0x4b61a0.game.joaat('vehicle_weapon_barrage_top_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_barrage_rear_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_barrage_rear_gl'):
            case _0x4b61a0.game.joaat('vehicle_weapon_cherno_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_deluxo_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_khanjali_cannon'):
            case _0x4b61a0.game.joaat('vehicle_weapon_khanjali_cannon_heavy'):
            case _0x4b61a0.game.joaat('vehicle_weapon_khanjali_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_khanjali_gl'):
            case _0x4b61a0.game.joaat('vehicle_weapon_subcar_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_subcar_torpedo'):
            case _0x4b61a0.game.joaat('vehicle_weapon_thruster_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_bomb_standard_wide'):
            case _0x4b61a0.game.joaat('vehicle_weapon_volatol_dualmg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_bombushka_cannon'):
            case _0x4b61a0.game.joaat('vehicle_weapon_dogfighter_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_hunter_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_hunter_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_hunter_barrage'):
            case _0x4b61a0.game.joaat('vehicle_weapon_hunter_cannon'):
            case _0x4b61a0.game.joaat('vehicle_weapon_rogue_cannon'):
            case _0x4b61a0.game.joaat('vehicle_weapon_rogue_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_vigilante_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_nose_turret_valkyrie'):
            case _0x4b61a0.game.joaat('vehicle_weapon_dune_grenadelauncher'):
            case _0x4b61a0.game.joaat('vehicle_weapon_halftrack_dualmg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_halftrack_quadmg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_apc_cannon'):
            case _0x4b61a0.game.joaat('vehicle_weapon_apc_missile'):
            case _0x4b61a0.game.joaat('vehicle_weapon_apc_mg'):
              _0x285840 = 'heavy';
              break;

            case _0x4b61a0.game.joaat('weapon_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_turret_limo'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tampa_fixedminigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tampa_dualminigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_insurgent_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_technical_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_havok_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_tula_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_akula_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_barrage_top_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_barrage_rear_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_thruster_mg'):
            case _0x4b61a0.game.joaat('vehicle_weapon_caracara_minigun'):
            case _0x4b61a0.game.joaat('vehicle_weapon_turret_valkyrie'):
            case _0x4b61a0.game.joaat('vehicle_weapon_dune_minigun'):
              _0x285840 = 'minigun';
              break;

            case _0x4b61a0.game.joaat('weapon_stickybomb'):
            case _0x4b61a0.game.joaat('weapon_grenade'):
            case _0x4b61a0.game.joaat('weapon_proxmine'):
            case _0x4b61a0.game.joaat('weapon_pipebomb'):
              _0x285840 = 'explosive';
              break;

            case _0x4b61a0.game.joaat('vehicle_weapon_rotors'):
              _0x285840 = 'rotor';
              break;

            case _0x4b61a0.game.joaat('weapon_rammed_by_car'):
            case _0x4b61a0.game.joaat('weapon_run_over_by_car'):
              _0x285840 = 'flatten';
              break;

            default:
              _0x285840 = 'noidea';
          }

          return '<C>' + _0x12d5db + '</C> ' + (_0x23df53[_0x285840] ? _0x47d07f.api.language.translatePlayer(_0x23df53[_0x285840][Math.floor(Math.random() * _0x23df53[_0x285840].length)]) : _0x47d07f.api.language.translatePlayer('wasted.deathMessages.justKilled'));
        };
      },
      0xe723: (_0x1edc7e, _0x22ffec, _0x59c3a1) => {
        'use strict';

        const a0_0x4cbcc0 = {
          _0x46d353: 0x1fcf,
          _0x52fffc: 0xe6d,
          _0x43ae2c: 0x1fcf
        };

        _0x59c3a1.r(_0x22ffec);

        var _0x39bb91 = _0x59c3a1(0x35cd),
            _0x4daa92 = _0x59c3a1(0x169ea),
            _0x22fa02 = _0x59c3a1(0x15eb2),
            _0x2fcad3 = _0x59c3a1(0x161cd);

        const _0x844f84 = _0x2fcad3.players.local,
              _0x1fbab2 = {
          'bodyWeapons': {},
          'fastSlotsData': []
        };

        for (let _0x41c640 in _0x4daa92.Y) {
          const _0x2e3b08 = _0x2fcad3.game.joaat(_0x41c640);

          _0x22fa02.Z[_0x2e3b08] ? (_0x4daa92.Y[_0x41c640].AttachName = 'WDSP_' + _0x22fa02.Z[_0x2e3b08].HashKey, _0x4daa92.Y[_0x41c640].AttachModel = _0x22fa02.Z[_0x2e3b08].ModelHashKey) : console.log('[!] ' + _0x41c640 + ' not found in weapon data file and will cause issues, remove it from weaponAttachmentData.');
        }

        for (let _0x10850c in _0x4daa92.Y) _0x2fcad3.attachments.register(_0x4daa92.Y[_0x10850c].AttachName, _0x4daa92.Y[_0x10850c].AttachModel, _0x4daa92.Y[_0x10850c].AttachBone, _0x4daa92.Y[_0x10850c].AttachPosition, _0x4daa92.Y[_0x10850c].AttachRotation, true);

        _0x2fcad3.events.add('inventory.fastSlotTrigger', (_0x50216b, _0x26c12e) => {
          const a0_0x2a2b80 = {
            _0x3471f7: 0x1d7c,
            _0x1773f6: 0x1d66,
            _0x1c9857: 0x2379,
            _0x494fb9: 0x39d,
            _0x369084: 0x118b
          },
                a0_0x5d6b76 = {
            _0x44e021: 0x12e9,
            _0x1d9a7e: 0x12e9,
            _0x1d713f: 0xb4a,
            _0x38a0f6: 0x39d
          };
          if (!_0x50216b || !_0x844f84.inventory) return;
          const _0x44bd33 = _0x1fbab2.fastSlotsData;
          _0x50216b = (_0x1915a6 => _0x1915a6.map(_0x49d416 => {
            const [_0x598130, _0x4377c0, ..._0x503963] = _0x49d416.split('^'),
                  _0x5af65f = parseInt(_0x598130),
                  _0x1673a0 = {};

            if ('string' == typeof _0x4377c0 && _0x4377c0.length && 0x0 === parseInt(_0x4377c0)) {
              const [_0x387a87] = _0x503963;
              _0x1673a0.weaponTint = parseInt(_0x387a87);
            }

            return {
              'itemId': _0x5af65f,
              'data': _0x1673a0
            };
          }))(_0x50216b), _0x44bd33.forEach(({
            itemId: _0x1e2f22,
            data: _0x53a453
          }, _0x224575) => {
            const _0x5cd76c = _0x39bb91.Z[_0x1e2f22];

            if (_0x5cd76c && _0x5cd76c.hash && _0x5cd76c.caliber && (_0x50216b[_0x224575].itemId !== _0x1e2f22 && !_0x50216b.find(_0xa91fb4 => _0xa91fb4.itemId === _0x1e2f22) || _0x26c12e === _0x224575)) {
              const _0x3cb291 = _0x4daa92.Y[_0x5cd76c.hash];
              _0x3cb291 && _0x2fcad3.attachments.removeLocal(_0x2fcad3.game.joaat(_0x3cb291.AttachName));
            }
          }), _0x50216b.forEach(({
            itemId: _0x43b940,
            data: _0x284dc7
          }, _0x13498c) => {
            const _0x3bed48 = _0x39bb91.Z[_0x43b940];

            if (_0x3bed48 && _0x3bed48.hash && _0x3bed48.caliber && _0x26c12e !== _0x13498c) {
              const _0x4380f3 = _0x4daa92.Y[_0x3bed48.hash];
              _0x4380f3 && _0x2fcad3.attachments.addLocal(_0x2fcad3.game.joaat(_0x4380f3.AttachName), [0x0, _0x284dc7.weaponTint]);
            }
          }), _0x1fbab2.fastSlotsData = _0x50216b;
        });
      },
      0x14471: (_0x25bd88, _0xf1f5a5, _0x534d09) => {
        'use strict';

        const a0_0x51e04f = {
          _0x93d6dd: 0x19e6,
          _0x889fa1: 0x2530,
          _0x1de259: 0x7e1,
          _0x37ed0b: 0x7e1,
          _0x8d5945: 0x12dd,
          _0x4a8075: 0x12dd,
          _0x28d71c: 0x1edc,
          _0x2e496e: 0x1985,
          _0xb6f663: 0x2530
        },
              a0_0x3817e4 = {
          _0x2db5b0: 0x7e1,
          _0x4cbd68: 0x7e1,
          _0x5c1091: 0x7e1,
          _0x33ce8a: 0x1985,
          _0x20c321: 0x2530
        };

        _0x534d09.r(_0xf1f5a5);

        var _0x63c965 = _0x534d09(0x16a21),
            _0x340978 = _0x534d09(0x161cd);

        const _0x26fd0f = (_0x491b6c, _0x287c50, _0x33ebf4) => {
          _0x491b6c.__weaponComponentData || (_0x491b6c.__weaponComponentData = {}), _0x491b6c.__weaponComponentData[_0x287c50] || (_0x491b6c.__weaponComponentData[_0x287c50] = new Set()), _0x491b6c.__weaponComponentData[_0x287c50].add(_0x33ebf4), _0x63c965.api.invokeNative('GIVE_WEAPON_COMPONENT_TO_PED', _0x491b6c.handle, _0x287c50 >> 0x0, _0x33ebf4 >> 0x0);
        },
              _0x5b4570 = (_0x4051fb, _0x2be599, _0x37974e) => {
          _0x4051fb.__weaponComponentData || (_0x4051fb.__weaponComponentData = {}), _0x4051fb.__weaponComponentData[_0x2be599] || (_0x4051fb.__weaponComponentData[_0x2be599] = new Set()), _0x4051fb.__weaponComponentData[_0x2be599].delete(_0x37974e), _0x63c965.api.invokeNative('REMOVE_WEAPON_COMPONENT_FROM_PED', _0x4051fb.handle, _0x2be599 >> 0x0, _0x37974e >> 0x0);
        };

        _0x340978.events.add('updatePlayerWeaponComponent', (_0x140096, _0x13895a, _0x31cacc, _0x1cc522) => {
          _0x13895a = parseInt(_0x13895a, 0x24), _0x31cacc = parseInt(_0x31cacc, 0x24), _0x1cc522 ? _0x5b4570(_0x140096, _0x13895a, _0x31cacc) : _0x26fd0f(_0x140096, _0x13895a, _0x31cacc);
        }), _0x340978.events.add('resetPlayerWeaponComponents', (_0x8fce12, _0x4cc677) => {
          if (_0x8fce12.__weaponComponentData && _0x8fce12.__weaponComponentData[_0x4cc677]) {
            _0x4cc677 = parseInt(_0x4cc677, 0x24);

            for (let _0x1c84d2 of _0x8fce12.__weaponComponentData[_0x4cc677]) _0x63c965.api.invokeNative('REMOVE_WEAPON_COMPONENT_FROM_PED', _0x8fce12.handle, _0x4cc677 >> 0x0, _0x1c84d2 >> 0x0);

            _0x8fce12.__weaponComponentData[_0x4cc677].clear();
          }
        }), _0x340978.events.add('nukePlayerWeaponComponents', _0x124e81 => {
          if (_0x124e81.__weaponComponentData) {
            for (let _0x49ba87 in _0x124e81.__weaponComponentData) for (let _0x215946 of _0x124e81.__weaponComponentData[_0x49ba87]) _0x63c965.api.invokeNative('REMOVE_WEAPON_COMPONENT_FROM_PED', _0x124e81.handle, _0x49ba87 >> 0x0, _0x215946 >> 0x0);

            _0x124e81.__weaponComponentData = {};
          }
        }), _0x340978.events.add('entityStreamIn', _0x201ad2 => {
          if ('player' === _0x201ad2.type) {
            const _0x1b1885 = _0x63c965.api.getEntitySync(_0x201ad2, 'currentWeaponComponents', 'string');

            if (_0x1b1885) {
              let [_0x499a1a, _0x51f9bd] = _0x1b1885.split('.');

              _0x499a1a = parseInt(_0x499a1a, 0x24);

              let _0x5bec6e = _0x51f9bd && _0x51f9bd.length > 0x0 ? _0x51f9bd.split('|').map(_0x3ab880 => parseInt(_0x3ab880, 0x24)) : [];

              _0x201ad2.giveWeapon(_0x499a1a, -0x1, true);

              for (let _0xd11b2e of _0x5bec6e) _0x26fd0f(_0x201ad2, _0x499a1a, _0xd11b2e);

              _0x63c965.api.invokeNative('SET_CURRENT_PED_WEAPON', _0x201ad2.handle, _0x499a1a >> 0x0, true);
            }
          }
        }), _0x340978.events.add('entityStreamOut', _0x546cf8 => {
          'player' === _0x546cf8.type && _0x546cf8.__weaponComponentData && (_0x546cf8.__weaponComponentData = {});
        }), _0x340978.events.add('weapon.components.sync', (_0x352d06, _0x5f316d) => {
          if ('player' === _0x352d06.type && 0x0 !== _0x352d06.handle) {
            _0x352d06.__weaponComponentData || (_0x352d06.__weaponComponentData = {});

            let [_0x141e61, _0x35e09f] = _0x5f316d.split('.');

            _0x141e61 = parseInt(_0x141e61, 0x24), _0x352d06.__weaponComponentData[_0x141e61] || (_0x352d06.__weaponComponentData[_0x141e61] = new Set());

            let _0x31d534 = _0x352d06.__weaponComponentData[_0x141e61],
                _0x3bb9c3 = _0x35e09f && _0x35e09f.length > 0x0 ? _0x35e09f.split('|').map(_0x39c080 => parseInt(_0x39c080, 0x24)) : [];

            for (let _0x59522e of _0x31d534) _0x3bb9c3.includes(_0x59522e) || _0x5b4570(_0x352d06, _0x141e61, _0x59522e);

            for (let _0x354267 of _0x3bb9c3) _0x26fd0f(_0x352d06, _0x141e61, _0x354267);

            _0x63c965.api.invokeNative('SET_CURRENT_PED_WEAPON', _0x352d06.handle, _0x141e61 >> 0x0, true), _0x352d06.__weaponComponentData[_0x141e61] = new Set(_0x3bb9c3);
          }
        });
      },
      0x7d88: (_0x1fa28e, _0xc903ad, _0x446ef8) => {
        'use strict';

        const a0_0x18bd89 = {
          _0xd7befe: 0x180c,
          _0x58a234: 0xa26,
          _0x19208a: 0x156e,
          _0x54e55b: 0x68a,
          _0x29c3d1: 0x4b9,
          _0xa185ed: 0x2379,
          _0x18112a: 0x14d2,
          _0x188ec1: 0x1f3f,
          _0x2c838a: 0x535,
          _0x10dd49: 0x199f,
          _0x4e980f: 0x1d66,
          _0x1b07d0: 0x2488,
          _0x2c57c1: 0x1a3,
          _0x2bbc90: 0x7f3,
          _0x27dd50: 0x2288,
          _0x41116a: 0x199f,
          _0x10936f: 0xfcd,
          _0xafcb8c: 0x14d2,
          _0x4e4673: 0x1da5,
          _0x440b38: 0x199f
        },
              a0_0x1255e4 = {
          _0x5ba747: 0x1d66,
          _0x4b34ad: 0x1db5,
          _0x3f7d4f: 0xd4f,
          _0x5a8448: 0xd4f,
          _0x11064e: 0x6da,
          _0x1575c5: 0x1d66
        },
              a0_0x1cb36e = {
          _0x329d8f: 0x2377,
          _0x1ad321: 0x104f,
          _0x300b2f: 0x535,
          _0x5c0365: 0x166e,
          _0x520a99: 0x1934
        };
        _0x446ef8.r(_0xc903ad), _0x446ef8.d(_0xc903ad, {
          'givenWeapon': () => _0x297fcb,
          'isWeaponKicked': () => _0x85aabb
        });

        var _0x351761 = _0x446ef8(0x16a21),
            _0x28e00a = _0x446ef8(0x130f4),
            _0x1d132e = _0x446ef8(0x11e4d),
            _0x31de78 = _0x446ef8(0x117be),
            _0x5802a3 = _0x446ef8(0xa5d9),
            _0x5ed1a4 = _0x446ef8(0x12a76),
            _0x28fffb = _0x446ef8(0x16a7d),
            _0x2fc9ee = _0x446ef8(0xff89),
            _0x33b559 = _0x446ef8(0x161cd);

        const _0x5bdece = _0x33b559.players.local,
              _0x26635a = _0x28e00a.Z.map(_0x5c00fd => _0x5c00fd << 0x0);

        _0x1d132e.Z.map(_0x209918 => _0x209918 << 0x0);

        let _0x297fcb = -0x5d8e6d9d,
            _0x1a7d05 = 0x0,
            _0x49d9ad = 0x0,
            _0x36ff36 = false,
            _0x85aabb = false,
            _0x747f47 = 0x0,
            _0x3f724c = -0x2,
            _0x426643 = 0x0,
            _0x1f62d9 = Date.now(),
            _0x50ae95 = 0x0,
            _0x5dea84 = [];

        const _0x123305 = _0x117465 => () => {
          if (!(_0x36ff36 || !_0x351761.api.isAuthed() || -0x1 === _0x117465 && _0x50ae95 - Date.now() > 0x0 || _0x3f724c === _0x117465 && _0x5bdece.activeItemId && _0x33b559.inventory.isWeapon(_0x5bdece.activeItemId) && -0x1 != _0x117465 || _0x351761.api.ePress(_0x747f47, 0x546) || _0x446ef8.g.piano || _0x446ef8.g.playableInstrument || _0x446ef8.g.interfaces.chat || _0x33b559.gui.cursor.visible || _0x446ef8.g.currentInterface || _0x446ef8.g.isUsingSystemAnim || _0x5bdece.getVariable('fun.minigames.playing'))) {
            if (_0x747f47 = _0x351761.api.ePressUpdate(0x546), -0x1 === _0x117465) {
              if (!_0x5bdece.activeItemId) return;
              _0x36ff36 = true, _0x33b559.events.callRemote('1980034567');
            } else _0x36ff36 = true, _0x33b559.events.callRemote('3719274049', 0x1, _0x117465);

            _0x3f724c = _0x117465;
          }
        };

        _0x33b559.events.add('inventoryApi.afterPocket', () => {
          _0x36ff36 = false;
        }), _0x33b559.events.add('weapons.fastChangeResult', () => {
          _0x36ff36 = false;
        }), _0x33b559.keys.bind(_0x28fffb.t[0x0], true, _0x123305(-0x1)), _0x33b559.keys.bind(_0x28fffb.t[0x1], true, _0x123305(0x0)), _0x33b559.keys.bind(_0x28fffb.t[0x2], true, _0x123305(0x1)), _0x33b559.keys.bind(_0x28fffb.t[0x3], true, _0x123305(0x2)), _0x33b559.game.weapon.unequipEmptyWeapons = false, _0x33b559.events.add('weapons.give', function (_0x241a2c, _0xa7187b, _0x53325d, _0x79b05b, _0x1a5e61 = 0x0, _0x523403) {
          _0x241a2c = parseInt(_0x241a2c), _0x297fcb = _0x241a2c, _0xa7187b = (_0xa7187b = parseInt(_0xa7187b)) >= 0x270f ? 0x270f : _0xa7187b, _0x1a7d05 = _0xa7187b += _0x1a7d05;

          const _0x21f94b = _0x33b559.game.weapon.getWeaponClipSize(_0x241a2c);

          _0x49d9ad = _0x1a7d05 < _0x21f94b ? _0x1a7d05 : _0x21f94b, _0x5ed1a4.globalBrowser.emit('main_setAmmo', {
            'ammo': _0xa7187b,
            'clip': _0x49d9ad
          }), 'string' == typeof _0x523403 && _0x523403.length ? _0x351761.api.invokeNative('GIVE_WEAPON_COMPONENT_TO_PED', _0x5bdece.handle, _0x241a2c >> 0x0, _0x33b559.game.joaat(_0x523403) >> 0x0) : _0x351761.api.invokeNative('SET_PED_WEAPON_TINT_INDEX', _0x5bdece.handle, _0x241a2c >> 0x0, _0x1a5e61), _0x53325d && _0x351761.api.reloadWeapon(_0x5bdece);
        }), _0x33b559.events.add('weapons.take', _0x57dbb9 => {
          _0x57dbb9 = parseInt(_0x57dbb9), _0x426643 = Date.now(), _0x297fcb = -0x5d8e6d9d, _0x1a7d05 = 0x0, _0x5ed1a4.globalBrowser.emit('main_setAmmo', {
            'ammo': null,
            'clip': null
          });
        }), _0x33b559.events.add('weapons.serverTake', _0x4a7aed => {
          _0x4a7aed = parseInt(_0x4a7aed), _0x426643 = Date.now(), _0x297fcb = -0x5d8e6d9d, _0x1a7d05 = 0x0, _0x5ed1a4.globalBrowser.emit('main_setAmmo', {
            'ammo': null,
            'clip': null
          });
        }), _0x33b559.events.add('weapons.break', () => {
          _0x1a7d05 = 0x0, _0x5bdece.taskReloadWeapon(false), _0x5bdece.taskSwapWeapon(false), _0x351761.api.longNotifyTrans('inventory.weaponStuck', 'error');
        });
        const _0x1e453c = [-0x3e4c3c2f, -0x3469c6d1, -0x6815df48, -0x6e809374];
        _0x31de78.Z.forEach(_0x21f7a8 => {
          'forbid' === _0x21f7a8.type && null != _0x33b559.game.weapon.addWeaponModelBlacklist && _0x33b559.game.weapon.addWeaponModelBlacklist(_0x21f7a8.hash >> 0x0), _0x5dea84.push(_0x21f7a8.hash);
        }), _0x5802a3.Z.forEach(_0xefcafa => {
          null != _0x33b559.game.weapon.addWeaponModelBlacklist && _0x33b559.game.weapon.addWeaponModelBlacklist(('number' == typeof _0xefcafa ? _0xefcafa : _0x33b559.game.joaat(_0xefcafa)) >> 0x0);
        }), _0x33b559._events.add('playerWeaponShot', (_0x126a97, _0x243719) => {
          const a0_0x57d5af = {
            _0x3a1d76: 0x1db5,
            _0x579f35: 0x1ff3,
            _0x212545: 0x1a3
          };
          if (_0x85aabb) return true;

          const _0xd3c042 = _0x351761.api.getCurrentWeapon(_0x5bdece),
                _0x45fc89 = _0x5bdece.getVariable('fun.minigames.playing') && 0x0 !== _0x5bdece.dimension;

          if (_0x5dea84.includes(_0xd3c042) && !_0x45fc89 && !_0x351761.api.isAdmin(_0x5bdece)) return _0x33b559.events.callRemote('2498405069', 'shot', _0x297fcb, _0xd3c042), _0x85aabb = true, true;

          const _0x3346d1 = _0x351761.api.getCurrentWeaponAmmo(_0x5bdece, _0xd3c042);

          if (_0x5bdece.vehicle && _0x5bdece.vehicle.model === _0x33b559.game.joaat('rhinno')) return _0x33b559.events.callRemote('2498405069', 'shot3', _0x297fcb, _0xd3c042), _0x85aabb = true, true;

          if (-0x5d8e6d9d != _0xd3c042 && 0x3656c8c1 != _0xd3c042) {
            if (_0x1a7d05 > 0x0) _0x1a7d05--;else {
              if (_0x1a7d05 <= 0x0) return _0x1a7d05 = 0x0, _0x351761.api.setPlayerWeaponAmmo(_0x5bdece, _0x297fcb, 0x0), _0x297fcb = -0x5d8e6d9d, _0x351761.api.removePlayerWeapon(_0x5bdece, _0x297fcb), void _0x351761.api.removeAllWeapons(_0x5bdece);
            }
          }

          if (0x3656c8c1 == _0xd3c042) {
            if (Date.now() - _0x1f62d9 < 0x7d0) return _0x33b559.events.callRemote('2498405069', 'shot3', _0x297fcb, _0xd3c042), _0x85aabb = true, true;
            _0x1f62d9 = Date.now();
          }

          if (0x3656c8c1 != _0xd3c042 && (_0x3346d1 <= 0x0 && (_0x1a7d05 = 0x0, _0x49d9ad = 0x0, _0x5bdece.taskSwapWeapon(false)), _0x3346d1 <= 0x1 ? _0x49d9ad = 0x0 : 0x1 === _0x49d9ad && _0x3346d1 > 0x1 ? (_0x49d9ad = 0x0, _0x5bdece.vehicle && _0x33b559.game.sleep(0x4b0).then(() => {
            _0x49d9ad = _0x33b559.game.weapon.getWeaponClipSize(_0xd3c042), _0x1a7d05 < _0x49d9ad && (_0x49d9ad = _0x1a7d05), _0x5ed1a4.globalBrowser.emit('main_setAmmo', {
              'ammo': _0x1a7d05,
              'clip': _0x49d9ad
            });
          })) : _0x49d9ad--, _0x5ed1a4.globalBrowser.emit('main_setAmmo', {
            'ammo': _0x1a7d05,
            'clip': _0x49d9ad
          })), !_0x45fc89 && 0x3656c8c1 != _0xd3c042) {
            if (!_0x351761.api.isAdmin(_0x5bdece) && (!_0x5bdece.activeItemId || _0x5bdece.activeItemId && !_0x33b559.inventory.isWeapon(_0x5bdece.activeItemId))) return _0x33b559.events.callRemote('2498405069', 'shot2', _0x297fcb, _0xd3c042), _0x85aabb = true, true;

            _0x33b559.events.callRemoteUnreliable('288634938', _0xd3c042, _0x3346d1);
          }

          return _0x45fc89 && _0x33b559.players.exists(_0x243719) && !_0x243719.getVariable('fun.minigames.playing') ? (_0x33b559.events.callRemote('2498405069', 'shot4', _0x297fcb, _0xd3c042), _0x85aabb = true, true) : undefined;
        });
        let _0x5e002e = false;
        _0x33b559.events.add('render', () => {
          if (!_0x351761.api.isAuthed()) return;

          const _0x4dcda7 = _0x351761.api.getCurrentWeapon(_0x5bdece);

          _0x33b559.game.controls.disableControlAction(0x2, 0xc, true), _0x33b559.game.controls.disableControlAction(0x2, 0xd, true), _0x33b559.game.controls.disableControlAction(0x2, 0xe, true), _0x33b559.game.controls.disableControlAction(0x2, 0xf, true), _0x33b559.game.controls.disableControlAction(0x2, 0x10, true), _0x33b559.game.controls.disableControlAction(0x2, 0x11, true), _0x33b559.game.controls.disableControlAction(0x2, 0x25, true), _0x33b559.game.controls.disableControlAction(0x2, 0x63, true), _0x33b559.game.controls.disableControlAction(0x2, 0x64, true), _0x33b559.game.controls.disableControlAction(0x2, 0x9d, true), _0x33b559.game.controls.disableControlAction(0x2, 0x9e, true), _0x33b559.game.controls.disableControlAction(0x2, 0x9f, true), _0x33b559.game.controls.disableControlAction(0x2, 0xa0, true), _0x33b559.game.controls.disableControlAction(0x2, 0xa1, true), _0x33b559.game.controls.disableControlAction(0x2, 0xa2, true), _0x33b559.game.controls.disableControlAction(0x2, 0xa3, true), _0x33b559.game.controls.disableControlAction(0x2, 0xa4, true), _0x33b559.game.controls.disableControlAction(0x2, 0xa5, true), _0x33b559.game.controls.disableControlAction(0x2, 0x105, true), _0x33b559.game.controls.disableControlAction(0x2, 0x106, true), -0x5d8e6d9d != _0x4dcda7 && (_0x33b559.game.controls.disableControlAction(0x2, 0x8c, true), _0x33b559.game.controls.disableControlAction(0x2, 0x8d, true), _0x33b559.game.controls.disableControlAction(0x2, 0x8f, true), _0x33b559.game.controls.disableControlAction(0x2, 0x107, true)), _0x5bdece.vehicle && _0x1e453c.includes(_0x4dcda7) && _0x5bdece.vehicle.getPedInSeat(_0x351761.api.getVehSeat(-0x1)) === _0x5bdece.handle && (_0x33b559.game.controls.disableControlAction(0x0, 0x45, true), _0x33b559.game.controls.disableControlAction(0x0, 0x46, true), _0x33b559.game.controls.disableControlAction(0x0, 0x5c, true)), _0x33b559.game.player.setMeleeWeaponDamageModifier(0x1, true), _0x33b559.game.weapon.setDamageModifierThisFrame(_0x4dcda7, 0x1);
        }), _0x33b559.events.add('render2', () => {
          if (!_0x33b559.players.exists(_0x5bdece)) return _0x33b559.events.callRemote('2498405069', 'render2-expired'), void (_0x85aabb = true);

          const _0x3712f2 = _0x351761.api.getCurrentWeapon(_0x5bdece);

          if (!_0x85aabb && !_0x5bdece.getVariable('fun.minigames.playing') && !_0x351761.api.isAdmin(_0x5bdece) && Date.now() - _0x426643 > 0x3e8 && -0x5d8e6d9d != _0x3712f2 && 0x0 != _0x3712f2) {
            const _0x55d555 = _0x2fc9ee.B8[_0x3712f2 >> 0x0] << 0x0;

            _0x26635a.includes(_0x55d555) && _0x297fcb == _0x3712f2 || _0x26635a.includes(_0x55d555) || (_0x33b559.events.callRemote('2498405069', 'render2', _0x297fcb, _0x3712f2), _0x85aabb = true);
          }

          _0x5bdece.isReloading() ? _0x5e002e || (_0x5e002e = true) : _0x5e002e && (_0x49d9ad = _0x33b559.game.weapon.getWeaponClipSize(_0x3712f2), _0x1a7d05 < _0x49d9ad && (_0x49d9ad = _0x1a7d05), _0x5ed1a4.globalBrowser.emit('main_setAmmo', {
            'ammo': _0x1a7d05,
            'clip': _0x49d9ad
          }), _0x5e002e = false);
        }), _0x33b559.events.add('playerDamaged', () => {
          _0x5bdece.activeItemId && _0x33b559.inventory.isWeapon(_0x5bdece.activeItemId) && (_0x50ae95 = Date.now() + 0xbb8);
        });
      },
      0xfc70: (_0x42b540, _0x204126, _0x1ae0c4) => {
        'use strict';

        const a0_0x3879ee = {
          _0x23dadd: 0x2379,
          _0x546697: 0x142a,
          _0x58d65f: 0x1da5,
          _0x278a7e: 0x24ef
        },
              a0_0x22c3c8 = {
          _0x1a38f8: 0x1870
        },
              a0_0x58edc0 = {
          _0x264010: 0xc95,
          _0x4fc459: 0x1c20,
          _0x46fd4f: 0x2528,
          _0x22436b: 0x2528,
          _0x4bf45c: 0xaae,
          _0xaea98f: 0xbdc,
          _0x4105a4: 0x3b1,
          _0x5d6a67: 0x535,
          _0x255db6: 0x1f30,
          _0x170117: 0x9d0,
          _0x25371d: 0x12c4,
          _0xe99d1f: 0x15f7,
          _0x1ead3d: 0x1eb5,
          _0xb109eb: 0x19c5,
          _0x5ac7e6: 0x24ee,
          _0x50b81b: 0x1d55,
          _0x265ec9: 0xac7,
          _0x5443d1: 0x2689,
          _0x21cf4e: 0xf52,
          _0x303021: 0x1255,
          _0x303f58: 0x13e4,
          _0x211df0: 0x648,
          _0x4c8c87: 0x2121,
          _0x216e28: 0x535,
          _0x151321: 0x1985,
          _0x375215: 0xffb,
          _0x5488cb: 0x1d66,
          _0x360fcb: 0x1db5,
          _0x15a3bc: 0xf53,
          _0x525c97: 0x1ecc,
          _0x40287f: 0x82d,
          _0x2047b4: 0x19c5,
          _0x1b7f8d: 0x3b1,
          _0x57af73: 0x17a7,
          _0x214fa0: 0x1a50,
          _0x27dc05: 0x1f30,
          _0x381c62: 0x1f39,
          _0x3a3c86: 0x124e,
          _0x2184bd: 0x7e8,
          _0x449882: 0x1607,
          _0x41989e: 0x310,
          _0x5a8acb: 0x14d2,
          _0x567858: 0x23e2,
          _0x120cdc: 0x2001,
          _0x5d06e8: 0x124e,
          _0x2ded6a: 0xbdc,
          _0x2881d1: 0x1a50,
          _0x59f887: 0x1f30,
          _0x8133fb: 0x1f39,
          _0x50270a: 0x1d66,
          _0x39c8bd: 0xfcd
        },
              a0_0x267df5 = {
          _0x4a3596: 0xb03,
          _0x33631e: 0xb03,
          _0x2ced05: 0x431,
          _0x275580: 0x22b2
        },
              a0_0x1c9129 = {
          _0x118231: 0x24bc,
          _0x5b1bd1: 0x431
        },
              a0_0x4e705d = {
          _0x3b8829: 0xbdc,
          _0x7a5edf: 0x4b9,
          _0x15d3a2: 0x741,
          _0x59cc41: 0x265b
        },
              a0_0xe0cbd6 = {
          _0x432829: 0x431
        };

        _0x1ae0c4.r(_0x204126);

        var _0xf38a4d = _0x1ae0c4(0x16a21),
            _0xd5a9e4 = (_0x1ae0c4(0x172e), _0x1ae0c4(0x1d7e), _0x1ae0c4(0x9555)),
            _0x171d14 = (_0x1ae0c4(0x8aca), _0x1ae0c4(0x90b1), _0x1ae0c4(0x9c31)),
            _0x56ea5f = _0x1ae0c4.n(_0x171d14),
            _0x5b4f53 = _0x1ae0c4(0x77a9),
            _0x5b84ba = _0x1ae0c4(0x7d88),
            _0x389174 = _0x1ae0c4(0x161cd),
            _0x367ca7 = _0x1ae0c4(0xa327),
            _0xc0562 = _0x1ae0c4(0x10564),
            _0x33f5e1 = _0x1ae0c4(0x5d14),
            _0x3fea5f = _0x1ae0c4(0xff89),
            _0xd83d1 = _0x1ae0c4(0x161cd);

        const _0x4ee4b6 = {};

        for (const _0x43eb5e in _0x56ea5f()) {
          _0x4ee4b6[_0x43eb5e] = {};

          for (const _0x40873b in _0x56ea5f()[_0x43eb5e]) {
            const _0x54fba7 = _0xd83d1.game.joaat(_0x40873b);

            _0x4ee4b6[_0x43eb5e][_0x54fba7 >> 0x0] = _0x56ea5f()[_0x43eb5e][_0x40873b];
          }
        }

        const _0x3b775a = _0xd83d1.players.local,
              _0x33a77d = new class {
          constructor() {
            this.parts = {}, this.cachedParts;
          }

          ['getBoneDamageMultiplier'](_0x127bf1) {
            const _0x11d715 = this.parts[_0x127bf1];
            return _0x11d715 ? _0x11d715.damageMultiplier : 0x1;
          }

          ['calculateDamage'](_0x153f12, _0x230145, _0x1daf31, _0x2cfa43, _0x55434a) {
            const _0x48347d = _0x4ee4b6[_0x367ca7.serverRegion.toLowerCase()]?.[_0x1daf31 >> 0x0] ?? _0x4ee4b6.default[_0x1daf31 >> 0x0],
                  _0x3519a9 = _0x5b4f53.o[_0x55434a],
                  _0x4e4155 = _0x153f12.vehicle && !_0x230145.vehicle ? 0.5 : 0x1,
                  _0x3cd4ff = this.getBoneDamageMultiplier(_0x3519a9),
                  _0x58a71a = _0x48347d.shotCount;

            return _0xf38a4d.api.clamp(_0x48347d.damage / (_0x2cfa43 / 0x28), _0x48347d.damage / 0x2, _0x48347d.damage) * _0x3cd4ff / _0x58a71a * _0x4e4155;
          }

          ['addBone'](_0x26eb91, _0x2cd39c, _0x54d835, _0xcdfcb6 = false) {
            this.parts[_0x26eb91] = {
              'damageMultiplier': _0x2cd39c,
              'size': _0x54d835,
              'allowInCar': _0xcdfcb6
            }, this.cachedParts = Object.keys(this.parts).map(_0x4498b2 => parseInt(_0x4498b2));
          }

          get ['allParts']() {
            if (this.cachedParts) return this.cachedParts;
            return this.cachedParts = Object.keys(this.parts).map(_0x48fdf8 => parseInt(_0x48fdf8));
          }

        }();

        _0x33a77d.addBone(0x0, 0x1, 0.15, true), _0x33a77d.addBone(0x796e, 1.25, 0.25, true), _0x33a77d.addBone(0x866e, 1.25, 0.25, true), _0x33a77d.addBone(0x9995, 1.25, 0.25, true), _0x33a77d.addBone(0xfcd9, 0x1, 0.1), _0x33a77d.addBone(0x29d2, 0x1, 0.1), _0x33a77d.addBone(0x9d4d, 0x1, 0.1), _0x33a77d.addBone(0xb1c5, 0x1, 0.1), _0x33a77d.addBone(0x6e5c, 0x1, 0.1), _0x33a77d.addBone(0xeeeb, 0x1, 0.1), _0x33a77d.addBone(0xdead, 0x1, 0.1), _0x33a77d.addBone(0x49d9, 0x1, 0.1), _0x33a77d.addBone(0x60f0, 0x1, 0.1), _0x33a77d.addBone(0x60f2, 0x1, 0.1), _0x33a77d.addBone(0x2e28, 0x1, 0.1, true), _0x33a77d.addBone(0xca72, 0x1, 0.1), _0x33a77d.addBone(0xe39f, 0x1, 0.1), _0x33a77d.addBone(0x9000, 0x1, 0.1), _0x33a77d.addBone(0xf9bb, 0x1, 0.1), _0x33a77d.addBone(0xcc4d, 0x1, 0.1), _0x33a77d.addBone(0x3779, 0x1, 0.1), _0xd83d1.events.add('time.everySec', () => {
          _0xd83d1.game.player.setWeaponDamageModifier(-0xf423f), 0x64 === _0xf38a4d.api.getSkill('stamina') && _0xd83d1.game.player.resetStamina();
        });
        let _0xf49861 = 0x0;
        _0xd83d1._events.add('outgoingDamage', (_0x2cddf4, _0x54e5b0, _0x5b8051, _0x5f452e, _0xb5e2eb, _0x2545e6) => {
          if (_0x5f452e = _0x3fea5f.B8[_0x5f452e >> 0x0] >> 0x0, _0x2cddf4 === _0x3b775a && _0x54e5b0 && 'player' === _0x54e5b0.type) {
            if (_0x5b84ba.isWeaponKicked) return true;

            const _0x4a48c4 = _0x54e5b0.getVariable('minigames.team'),
                  _0x1a790b = _0x3b775a.getVariable('minigames.team');

            if (_0x4a48c4 && _0x1a790b && _0x4a48c4.team === _0x1a790b.team && !_0x4a48c4.friendlyFire && !_0x1a790b.friendlyFire) return true;

            const _0x37df54 = _0x5b4f53.o[_0xb5e2eb],
                  _0x1b86e3 = _0x4ee4b6[_0x367ca7.serverRegion.toLowerCase()]?.[_0x5f452e >> 0x0] ?? _0x4ee4b6.default[_0x5f452e >> 0x0],
                  _0x265cfe = _0xf38a4d.api.vdist2(_0x3b775a.position, _0x54e5b0.position, true),
                  _0x321765 = _0xf38a4d.api.lerp(0.20625000000000002, 0.275, 0x1 - _0x265cfe / 0xe1);

            let _0x1abb64 = 0x0;

            if (_0x1b86e3 && _0x1b86e3.distance >= _0x265cfe && (_0x1abb64 = _0x33a77d.calculateDamage(_0x5b8051, _0x54e5b0, _0x5f452e >> 0x0, _0x265cfe, _0xb5e2eb)), _0x1b86e3?.['shotCount'] > 0x1) {
              const _0x527e31 = _0x54e5b0.position.x + _0x33f5e1.u.floating({
                'min': -0.2,
                'max': 0.2,
                'fixed': 0x2
              }),
                    _0x149b4a = _0x54e5b0.position.y + _0x33f5e1.u.floating({
                'min': -0.2,
                'max': 0.2,
                'fixed': 0x2
              }),
                    _0x2214e6 = _0x54e5b0.position.z + _0x33f5e1.u.floating({
                'min': -0.1,
                'max': 0.1,
                'fixed': 0x2
              });

              _0xc0562.hitMarker.add(_0x1abb64.toFixed(0x0), new _0xd83d1.Vector3(_0x527e31, _0x149b4a, _0x2214e6), _0x321765);
            }

            if (!_0x1b86e3 || _0x1b86e3?.['isMelee'] && 0x1 === _0xf38a4d.api.getLocalVariable('level') && 0x0 === _0xf38a4d.api.getLocalVariable('exp')) return true;
            if (0x1 != _0x1b86e3?.['shotCount'] || _0x1b86e3?.['isMelee']) return false;

            if (_0x1b86e3?.['time'] > 0x0) {
              const _0x282df0 = _0xf38a4d.api.roundNumber(_0x1b86e3.time, 0x3) / 2.5;

              if (_0xf38a4d.api.roundNumber(_0xf38a4d.api.invokeNative('_GET_WEAPON_TIME_BETWEEN_SHOTS', _0x5f452e >> 0x0), 0x3) < _0x282df0 || Date.now() - _0xf49861 < 0x3e8 * _0x282df0) return _0xf49861 = Date.now(), true;
              _0xf49861 = Date.now();
            }

            return _0xd83d1.game.weapon.setCurrentDamageEventAmount(0x0), _0xd83d1.game.weapon.setCurrentDamageEventCritical(false), _0xd83d1.events.callRemoteUnreliable('360364667', _0x54e5b0.remoteId, _0x37df54, _0x5f452e.toString(0x24), _0x54e5b0.position.x, _0x54e5b0.position.y, _0x54e5b0.position.z, _0x1abb64), _0xc0562.hitMarker.add(_0x1abb64.toFixed(0x0), _0x54e5b0.position, _0x321765), true;
          }

          if (_0x2cddf4 !== _0x3b775a) {
            let _0x3d9693 = 0x0;

            const _0x49132e = _0x4ee4b6[_0x367ca7.serverRegion.toLowerCase()]?.[_0x5f452e >> 0x0] ?? _0x4ee4b6.default[_0x5f452e >> 0x0],
                  _0x1c005f = _0x2cddf4.getCoords(true),
                  _0x22a11e = _0xf38a4d.api.vdist2(_0x1c005f, _0x54e5b0.position, true),
                  _0x25af10 = _0x5b4f53.o[_0xb5e2eb];

            return _0x49132e && _0x49132e.distance >= _0x22a11e && (_0x3d9693 = _0x33a77d.calculateDamage(_0x2cddf4, _0x54e5b0, _0x5f452e >> 0x0, _0x22a11e, _0xb5e2eb)), void (_0x54e5b0 === _0x3b775a && _0x2cddf4 instanceof _0xd83d1.Ped && _0x2cddf4.isDynamic && _0x2cddf4.dynamicPed ? _0xd83d1.game.weapon.setCurrentDamageEventAmount(Math.round(_0x3d9693)) : _0x54e5b0 !== _0x3b775a && _0x2cddf4 instanceof _0xd83d1.Ped && _0x2cddf4.isDynamic && _0x2cddf4.dynamicPed ? _0xd83d1.events.callRemoteUnreliable('3593320232', _0x54e5b0.remoteId, _0x2cddf4.remoteId, _0x25af10, _0x5f452e.toString(0x24), _0x22a11e, _0x1c005f.x, _0x1c005f.y, _0x1c005f.z, _0x3d9693) : _0x54e5b0.applyDamageTo(Math.round(_0x3d9693), true));
          }

          if (_0x54e5b0 instanceof _0xd83d1.Ped && _0x54e5b0.isDynamic && _0x54e5b0.dynamicPed) {
            let _0x3926a1 = 0x0;

            const _0xb7379a = _0x4ee4b6[_0x367ca7.serverRegion.toLowerCase()]?.[_0x5f452e >> 0x0] ?? _0x4ee4b6.default[_0x5f452e >> 0x0],
                  _0x199c33 = _0x2cddf4.getCoords(true),
                  _0x328574 = _0xf38a4d.api.vdist2(_0x199c33, _0x54e5b0.position, true),
                  _0x5cf9cb = _0x5b4f53.o[_0xb5e2eb];

            return _0xb7379a && _0xb7379a.distance >= _0x328574 && (_0x3926a1 = _0x33a77d.calculateDamage(_0x2cddf4, _0x54e5b0, _0x5f452e >> 0x0, _0x328574, _0xb5e2eb)), _0xd83d1.game.weapon.setCurrentDamageEventAmount(0x0), _0xd83d1.game.weapon.setCurrentDamageEventCritical(false), void _0xd83d1.events.callRemoteUnreliable('2441282624', _0x54e5b0.remoteId, _0x5cf9cb, _0x5f452e.toString(0x24), _0x54e5b0.position.x, _0x54e5b0.position.y, _0x54e5b0.position.z, _0x3926a1);
          }
        }), _0xd83d1._events.add('incomingDamage', (_0x2afa28, _0x28868e, _0x3bb9af, _0x16c3fe, _0x416328, _0x5d0c60) => {
          if (_0x3bb9af === _0x3b775a) {
            if (_0xd83d1.players.exists(_0x28868e) && !_0x3b775a.godmode && !_0x3b775a.localGodMode && !_0x3b775a.getVariable('isSpectating')) {
              const _0x1fecf1 = _0xf38a4d.api.vdist2(_0x28868e.position, _0x3b775a.position, true);

              let _0x52cf2e = 0x0;

              const _0x27f937 = _0x4ee4b6[_0x367ca7.serverRegion.toLowerCase()]?.[_0x16c3fe >> 0x0] ?? _0x4ee4b6.default[_0x16c3fe >> 0x0];

              if (_0x27f937 && _0x27f937.distance >= _0x1fecf1) {
                const _0x1575f4 = _0x5b4f53.o[_0x416328],
                      _0x21443a = _0x28868e.vehicle && !_0x3b775a.vehicle ? 0.5 : 0x1,
                      _0xbb3043 = _0x33a77d.getBoneDamageMultiplier(_0x1575f4),
                      _0x267564 = _0x27f937.shotCount;

                _0x52cf2e = _0xf38a4d.api.clamp(_0x27f937.damage / (_0x1fecf1 / 0x28), _0x27f937.damage / 0x2, _0x27f937.damage) * _0xbb3043 / _0x267564 * _0x21443a;
              }

              if (!_0x27f937 || !_0xd5a9e4.greenZoneController.canBeDamagedByPlayer(_0x28868e) || !_0x27f937.isMelee && 0x1 == _0x27f937.shotCount) return true;

              _0xd83d1.game.weapon.setCurrentDamageEventAmount(Math.round(_0x52cf2e));
            }
          } else {
            if (_0x3bb9af instanceof _0xd83d1.Ped && _0x3bb9af.isDynamic) return _0xd83d1.game.weapon.setCurrentDamageEventAmount(0x0), _0xd83d1.game.weapon.setCurrentDamageEventCritical(false), true;
          }
        }), _0xd83d1.events.add('playerReady', () => {
          const a0_0x4906cf = {
            _0x14f460: 0x1db5,
            _0x1f7404: 0xe79
          };

          _0xd83d1.game.sleep(0x3e8).then(() => {
            _0xd83d1.game.weapon.setEnableLocalOutgoingDamage(true);
          });
        });
        let _0x46e332 = 0x0;

        const _0x3f0d02 = _0xd83d1.game.joaat('weapon_stungun') >> 0x0;

        _0xd83d1.events.add('weapons.client.giveDamage', (_0x6e35a5, _0x4e00c6, _0x1c7362, _0x5d6411, _0x9f6ea7, _0x57ddbe, _0xa572f7, _0xa4f545, _0x495531, _0x11f16b) => {
          if (_0x3b775a.godmode || _0x3b775a.localGodMode || _0x3b775a.getVariable('isSpectating')) return;

          const _0x3ed969 = parseInt(_0x495531, 0x24);

          if (_0x3ed969 === _0x3f0d02) {
            if (Date.now() - _0x46e332 < 0x5dc) return;
            _0x3b775a.setToRagdoll(0xfa0, 0xfa0, 0x0, false, false, false), _0x46e332 = Date.now();
          }

          if (!_0xd5a9e4.greenZoneController.canBeDamagedByPlayer(_0x11f16b)) return;
          _0x3b775a.getHealth() + _0x3b775a.getArmour() - _0x6e35a5 <= 0x0 && (_0x6e35a5 += 0x1), _0x3b775a.applyDamageTo(Math.round(_0x6e35a5), true), _0xd83d1.game.gameplay.shootSingleBulletBetweenCoords(_0x4e00c6, _0x1c7362, _0x5d6411, _0x9f6ea7, _0x57ddbe, _0xa572f7, 0x0, false, _0x3ed969, -0x1, true, false, 0x64);
        }), _0xd83d1.events.add('weapons.client.giveDamageFromPed', (_0x51a334, _0x1ef6d3) => {
          if (_0x3b775a.godmode || _0x3b775a.localGodMode || _0x3b775a.getVariable('isSpectating')) return;
          _0x3b775a.getHealth() + _0x3b775a.getArmour() - _0x51a334 <= 0x0 && (_0x51a334 += 0x1);

          const _0x2094a3 = _0xd83d1.peds.atRemoteId(_0x1ef6d3);

          _0x2094a3 && _0x2094a3.handle && _0x3b775a.applyDamageTo(Math.round(_0x51a334), true);
        }), _0xd83d1._events.add('projectile', (_0x4fe953, _0x57be2d, _0x203e8d, _0x4817a7, _0x47675d) => {
          return _0xd83d1.players.local === _0x4fe953 && (_0x57be2d === _0xd83d1.game.joaat('weapon_snowball') ? (_0x48e0c0 = 'throw_snowball', _0x46d740 = null, _0x161959 = 0x1, _0x389174.events.callRemote('103051750', _0x48e0c0, _0x46d740, _0x161959), false) : _0x5b84ba.givenWeapon >> 0x0 == _0x57be2d >> 0x0);

          var _0x48e0c0, _0x46d740, _0x161959;
        }), _0xd83d1._events.add('explosion', () => true);
      },
      0x8c8c: (_0x96ea2e, _0x55f375, _0x49359e) => {
        _0x49359e(0xb3fc);
      },
      0xb3fc: (_0x33dca3, _0x2525ce, _0x5665d9) => {
        'use strict';

        const a0_0x5aeaaf = {
          _0x1fb0b3: 0x11dd
        },
              a0_0xa20396 = {
          _0x3ef93e: 0x2660
        },
              a0_0x3f3e0f = {
          _0x5700ce: 0x1aef,
          _0x449568: 0x140d,
          _0x4509ab: 0x2660
        },
              a0_0xdaee29 = {
          _0x295c96: 0x1d48,
          _0x4dc1fe: 0x1f4c,
          _0x365119: 0x2456,
          _0x2d0c94: 0xad4,
          _0x5c5b93: 0x1584,
          _0x57f590: 0x1aef,
          _0x25c6ba: 0x22e4,
          _0xeaf3a: 0x235b,
          _0x4fc56f: 0x185e,
          _0x1a8777: 0x1f30,
          _0x1ea81c: 0x2660,
          _0x17d7d5: 0x8b0,
          _0x1d4c35: 0xffb,
          _0x271500: 0xad4,
          _0x31c8f8: 0x2456,
          _0x142b00: 0xad4,
          _0x6395b6: 0x2456,
          _0x48fbfe: 0x3cc,
          _0x201b1a: 0x2456,
          _0x354fac: 0x1da5,
          _0x1d7f75: 0x1f0a,
          _0x563666: 0x1f0a
        },
              a0_0x43cdd4 = {
          _0x2b05cf: 0x535,
          _0x376691: 0x185e,
          _0x12c888: 0x1d55,
          _0x203cc9: 0x1f0a,
          _0x51ff12: 0x6b0,
          _0x1134e2: 0x1af1,
          _0x173f4c: 0x19d2,
          _0x68026d: 0x1289,
          _0x1497ca: 0x185e
        },
              a0_0x318e9f = {
          _0x36d112: 0x1af1,
          _0x511b47: 0xef6,
          _0x3057ad: 0x9a8,
          _0x2f57cd: 0x17d,
          _0x43842f: 0x19d2,
          _0x3c6070: 0x535,
          _0x3c35d1: 0x235b,
          _0x765e7f: 0x535,
          _0x3b9a4f: 0x52f,
          _0x472fd9: 0x1a07,
          _0x42765b: 0x25e7,
          _0x129e9e: 0x6b0,
          _0x2abe5b: 0xbc2,
          _0xc65c32: 0x219b,
          _0x51c576: 0x535,
          _0x205170: 0x1a07,
          _0x3a505c: 0x21d0
        },
              a0_0x351b1b = {
          _0x261189: 0x1af1,
          _0xa3203: 0x25df,
          _0x8e1480: 0x17d,
          _0xde62b0: 0x19d2,
          _0x42b11a: 0x535,
          _0x55dd9f: 0x185e,
          _0x22376e: 0x1d55,
          _0x178d5c: 0xcee,
          _0x3f656d: 0x1d4a,
          _0x212696: 0x535,
          _0x1e497e: 0x1f1c,
          _0x2f92f9: 0x4a9,
          _0x59c0fd: 0xdf3,
          _0x410a35: 0x6de,
          _0x4df4dc: 0x23e3,
          _0x3a441d: 0x211a,
          _0x1eb888: 0x880
        },
              a0_0x4416bc = {
          _0x1f4862: 0x19d2,
          _0x3d0c0f: 0x6ba,
          _0x4a6e42: 0x16c5,
          _0x1611c7: 0xa8e,
          _0x36ea08: 0x17f,
          _0x4b8699: 0x1aab,
          _0x10c31a: 0x16c5,
          _0x10b0af: 0x25e1,
          _0x24ec99: 0x1b65
        },
              a0_0x175f00 = {
          _0x4d6ef2: 0x535,
          _0x3a75ee: 0x1d66,
          _0x2770b0: 0x59d
        },
              a0_0x14d949 = {
          _0x49daa8: 0x535,
          _0x519fb9: 0x4b9,
          _0x4b7bfb: 0x22b2,
          _0x1c674d: 0x1edc,
          _0x2b7cda: 0x235b,
          _0x293626: 0x185e,
          _0x13c5fb: 0x2288,
          _0x1f228d: 0x535,
          _0x130a7d: 0x1099,
          _0x194278: 0xf86,
          _0x344a4d: 0x112a
        },
              a0_0x405134 = {
          _0x27e92f: 0x1d66,
          _0x1e0da6: 0x59d,
          _0x347da5: 0xa8e,
          _0xac8027: 0x16c5,
          _0x1025f3: 0x25e1,
          _0x508cc1: 0x17f,
          _0x5d1026: 0x17f,
          _0x32e467: 0x1b65
        },
              a0_0x212653 = {
          _0x505275: 0x253d,
          _0x231284: 0x19d2,
          _0x128ce1: 0x235b,
          _0x4ee290: 0x185e,
          _0x5696b5: 0xf86,
          _0x26609d: 0x1099,
          _0x18d6ab: 0x535,
          _0x22a7cf: 0x14df
        },
              a0_0x187d94 = {
          _0x2e86aa: 0xa8e,
          _0x2b2f21: 0x16c5,
          _0x59b423: 0x25e1,
          _0x2efc5b: 0x25e1
        },
              a0_0x49672e = {
          _0x2038d7: 0x1d55,
          _0x10f73a: 0x535,
          _0x1e8f85: 0x1de9,
          _0x384639: 0x20b4,
          _0x2f7b35: 0x11de,
          _0x5c9719: 0x2488,
          _0x2d4f2a: 0x1da5,
          _0x85c6d: 0x2458
        },
              a0_0x9cb648 = {
          _0x47a81a: 0x1d66,
          _0x17376e: 0x59d
        },
              a0_0x68d20b = {
          _0x17a613: 0x2488,
          _0x24df3e: 0x1a3,
          _0x5777ec: 0x5c0,
          _0x33f31b: 0x1a3,
          _0x3c4d17: 0x1a3,
          _0x307757: 0x2645,
          _0x1a3c74: 0x1a3,
          _0x3d71e5: 0x99a,
          _0x4dedc0: 0x12a3
        },
              a0_0xb83d5f = {
          _0x14dca7: 0x535,
          _0x28c0cb: 0x74c,
          _0x2783c4: 0x1dda,
          _0x23d75b: 0x1cc7,
          _0x4c8f37: 0xbc2,
          _0x34b49f: 0x1c6a,
          _0x27a1e4: 0x1223,
          _0x506969: 0x25f9,
          _0x303d94: 0x21c0,
          _0x40490e: 0x1a07,
          _0x458c2f: 0x141e,
          _0x40f1a7: 0x1223,
          _0x164f0c: 0x1da5,
          _0x18c495: 0x2458
        },
              a0_0x338f7c = {
          _0x16fb69: 0x16c5,
          _0x8edd01: 0xa8e,
          _0x20015d: 0x1aab,
          _0x39b12d: 0x1c66,
          _0x41ed52: 0x242c,
          _0x5759b2: 0x21c0,
          _0x1c007a: 0x4a3
        },
              a0_0x295e5a = {
          _0x1cfc82: 0x535,
          _0x3299d1: 0x253d,
          _0x2385e1: 0x235b,
          _0x5559d1: 0x185e,
          _0x4a2a8f: 0x19d2,
          _0x42f615: 0x1edc,
          _0x19f39f: 0x235b,
          _0x573adf: 0xf86,
          _0x24aebc: 0x1099
        },
              a0_0x4bd7a7 = {
          _0x2e2d5b: 0x102e,
          _0x4cdc67: 0x1a07,
          _0x57b580: 0x1223
        },
              a0_0x327b2c = {
          _0xcf546b: 0x102e,
          _0x4778c3: 0x1a07,
          _0x6581b0: 0xa2e
        },
              a0_0x2a449d = {
          _0x35c3f9: 0xe6d,
          _0x13630e: 0x535,
          _0x46021b: 0x1b65,
          _0x27f174: 0x1d7c,
          _0x2bd378: 0xb4a,
          _0x31fdbe: 0x1c66,
          _0x864a0a: 0x2488,
          _0x51fbd5: 0x4a3,
          _0x1f6397: 0xdf3
        };

        _0x5665d9.r(_0x2525ce);

        var _0x366143 = _0x5665d9(0x16a21),
            _0x71c585 = _0x5665d9(0xa9b9),
            _0x15b107 = _0x5665d9(0x123b4),
            _0x486804 = _0x5665d9(0x3db3),
            _0x1631e7 = _0x5665d9(0x16e5f),
            _0x1b5be1 = _0x5665d9(0x12a76),
            _0xe56e5 = _0x5665d9(0x5d14),
            _0x3de127 = _0x5665d9(0x161cd);

        let _0x1a594b,
            _0x46eb86 = [],
            _0x5a4725 = false;

        const _0x5db803 = () => {
          const a0_0x1bf5d9 = {
            _0x3f91df: 0x16c5,
            _0x5cdab4: 0xa8e,
            _0x37cdd0: 0x1aab,
            _0x53200b: 0x25e1,
            _0x50536c: 0x17f
          };
          _0x46eb86.forEach(_0x47c9b5 => {
            _0x3de127.blips.exists(_0x47c9b5.blip) && _0x47c9b5.blip.destroy(), _0x3de127.colshapes.exists(_0x47c9b5.shape) && _0x47c9b5.shape.destroy();
          }), _0x46eb86 = [], _0x366143.api.stopAnim(), _0x3de127.attachments.removeLocal('broom'), _0x366143.api.usingSystemAnim(false), _0x5665d9.g.interfaces.prison && _0x1b5be1.globalBrowser.toggle('prison', {
            'value': false
          });
        };

        _0x3de127.events.add('prison.client.completeJobMinigame', _0x43189c => {
          'broom_clean' === _0x43189c && _0x5a4725 && (_0x5a4725 = false, _0xc69f36(), _0x366143.api.longNotifyTrans('prison.swipeFloorSuccess', 'success'));
        }), _0x3de127.events.add('prison.client.failJobMinigame', _0x44042e => {
          'broom_clean' === _0x44042e && _0x5a4725 && (_0x5a4725 = false, _0xc69f36(false), _0x366143.api.longNotifyTrans('prison.swipeFloorFail', 'success'));
        });

        const _0xc69f36 = async (_0x69abd7 = true) => {
          _0x1b5be1.globalBrowser.toggle('prison', {
            'value': false
          }), _0x366143.api.stopAnim(), _0x366143.api.stopAnim(), _0x3de127.attachments.removeLocal('broom'), _0x69abd7 && _0x3de127.events.callRemote('3862140416', 'broom_clean', 0x0 == _0x46eb86.length), _0x366143.api.usingSystemAnim(false);
        };

        _0x3de127.events.add('playerEnterColshape', _0x14dce5 => {
          if (!_0x366143.api.isAuthed() || _0x3de127.players.local.vehicle) return;
          if (!_0x46eb86.length) return;

          if (_0x46eb86.map(_0x1f5b14 => _0x1f5b14.shape).includes(_0x14dce5)) {
            if (_0x3de127.players.local.activeItemId) return _0x366143.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x1a594b = _0x14dce5, _0x366143.api.displayHelpStringTrans('displayHelpString.toSweepArea', false, true, 0x1388);
          }
        }), _0x3de127.events.add('playerExitColshape', _0x5e5c79 => {
          _0x366143.api.isAuthed() && _0x1a594b === _0x5e5c79 && (_0x1a594b = null, _0x3de127.game.ui.clearHelp(true));
        }), _0x3de127.events.add('keys.e', () => {
          const a0_0x4db1fc = {
            _0x18530d: 0x1c66,
            _0x4c2fbd: 0x535,
            _0x424832: 0x106b,
            _0x13b9cd: 0x1334,
            _0x1a4433: 0x2488,
            _0x8eb5e8: 0x4a3,
            _0x28218c: 0x2458
          };
          if (!_0x46eb86.length) return;

          const _0x94d347 = _0x46eb86.find(_0x1d31b7 => _0x1d31b7.shape === _0x1a594b);

          _0x94d347 && (_0x3de127.game.ui.clearHelp(true), _0x3de127.blips.exists(_0x94d347.blip) && _0x94d347.blip.destroy(), _0x3de127.colshapes.exists(_0x94d347.shape) && _0x94d347.shape.destroy(), _0x46eb86 = _0x46eb86.filter(_0x5bd924 => _0x5bd924.shape !== _0x1a594b), _0x1a594b = null, _0x366143.api.stopAnim(), (async () => {
            _0x366143.api.usingSystemAnim(true), await _0x366143.api.taskPlayAnim('missfbi_s4mop', 'idle_scrub', 0x1, true, false), _0x3de127.attachments.addLocal('broom'), _0x1b5be1.globalBrowser.toggle('prison', {
              'value': true,
              'type': 'broom_clean'
            }), _0x3de127.events.callRemote('2993620596'), _0x5a4725 = true;
          })());
        });

        var _0xe25a63 = _0x5665d9(0x161cd);

        const _0x18e41a = [{
          'trans': 'ceg.burger.ingredientsList.bun_up',
          'path': 'bun_up'
        }, {
          'trans': 'ceg.burger.ingredientsList.tomato',
          'path': 'tomato'
        }, {
          'trans': 'ceg.burger.ingredientsList.fish',
          'path': 'fish'
        }, {
          'trans': 'ceg.burger.ingredientsList.pickled_cucumbers',
          'path': 'pickled_cucumbers'
        }, {
          'trans': 'ceg.burger.ingredientsList.shrimp',
          'path': 'shrimp'
        }, {
          'trans': 'ceg.burger.ingredientsList.ham',
          'path': 'ham'
        }, {
          'trans': 'ceg.burger.ingredientsList.egg',
          'path': 'egg'
        }, {
          'trans': 'ceg.burger.ingredientsList.salad',
          'path': 'salad'
        }, {
          'trans': 'ceg.burger.ingredientsList.olives',
          'path': 'olives'
        }, {
          'trans': 'ceg.burger.ingredientsList.salad_2',
          'path': 'salad_2'
        }, {
          'trans': 'ceg.burger.ingredientsList.beef_cutlet',
          'path': 'beef_cutlet'
        }, {
          'trans': 'ceg.burger.ingredientsList.paprika',
          'path': 'paprika'
        }, {
          'trans': 'ceg.burger.ingredientsList.bacon',
          'path': 'bacon'
        }, {
          'trans': 'ceg.burger.ingredientsList.mushrooms',
          'path': 'mushrooms'
        }, {
          'trans': 'ceg.burger.ingredientsList.fried_potato',
          'path': 'fried_potato'
        }, {
          'trans': 'ceg.burger.ingredientsList.chicken_cutlet',
          'path': 'chicken_cutlet'
        }, {
          'trans': 'ceg.burger.ingredientsList.cucumbers',
          'path': 'cucumbers'
        }, {
          'trans': 'ceg.burger.ingredientsList.cheese',
          'path': 'cheese'
        }, {
          'trans': 'ceg.burger.ingredientsList.chilli',
          'path': 'chilli'
        }, {
          'trans': 'ceg.burger.ingredientsList.arugula',
          'path': 'arugula'
        }, {
          'trans': 'ceg.burger.ingredientsList.bun_down',
          'path': 'bun_down'
        }, {
          'trans': 'ceg.burger.ingredientsList.onion',
          'path': 'onion'
        }, {
          'trans': 'ceg.burger.ingredientsList.salami',
          'path': 'salami'
        }, {
          'trans': 'ceg.burger.ingredientsList.avocado',
          'path': 'avocado'
        }, {
          'trans': 'ceg.burger.ingredientsList.pineapple',
          'path': 'pineapple'
        }, {
          'trans': 'ceg.burger.ingredientsList.mustard',
          'path': 'mustard'
        }, {
          'trans': 'ceg.burger.ingredientsList.ketchup',
          'path': 'ketchup'
        }, {
          'trans': 'ceg.burger.ingredientsList.bbq',
          'path': 'b-b-q'
        }, {
          'trans': 'ceg.burger.ingredientsList.wasabi',
          'path': 'wasabi'
        }, {
          'trans': 'ceg.burger.ingredientsList.mayonnaise',
          'path': 'mayonnaise'
        }];

        let _0x4d91be,
            _0x3a41b5,
            _0x3d8939 = false,
            _0x14bc23 = 0x0,
            _0x2d896f = false,
            _0x4d828f = 0x0;

        const _0x1f2532 = () => {
          _0x4d91be && (_0xe25a63.blips.exists(_0x4d91be.blip) && _0x4d91be.blip.destroy(), _0xe25a63.colshapes.exists(_0x4d91be.shape) && _0x4d91be.shape.destroy()), _0x4d91be = null, _0x366143.api.stopAnim(), _0x366143.api.usingSystemAnim(false), _0x5665d9.g.interfaces.burger && _0x1b5be1.globalBrowser.toggle('burger', {
            'value': false
          });
        };

        _0xe25a63.events.add('job.burgershot.onSuccess', (_0x55ea94, _0x20e4ba) => {
          if (_0x3d8939 && _0x2d896f && _0x20e4ba && !_0x366143.api.ePress(_0x14bc23)) {
            if (_0x20e4ba = JSON.parse(_0x20e4ba), !_0x366143.api.arraysEqual(_0x20e4ba[0x0], _0x20e4ba[0x1])) return _0x366143.api.playSound('error');
            _0x55ea94 >= 0xa ? (_0x19d22e(true), _0x366143.api.longNotifyTrans('prison.cookBurgerAllSuccess', 'success')) : (_0xe25a63.events.callRemote('3862140416', 'burger', false), _0x194f02(false, 0x0, _0x4d828f++), _0x366143.api.longNotifyTrans('prison.cookBurgerSuccess', 'success'), _0xe25a63.events.callRemote('2993620596'));
          }
        }), _0xe25a63.events.add('job.burgershot.onFail', () => {
          _0x3d8939 && (_0x3d8939 = false, _0x19d22e(false), _0x366143.api.longNotifyTrans('prison.cookBurgerFail', 'success'));
        });

        const _0x19d22e = async (_0x473538 = true) => {
          _0x3d8939 = false, _0x1b5be1.globalBrowser.toggle('burger', {
            'value': false
          }), _0x366143.api.stopAnim(), _0xe25a63.attachments.removeLocal('scoop'), _0x473538 && _0xe25a63.events.callRemote('3862140416', 'burger', true), _0x366143.api.usingSystemAnim(false);
        },
              _0x194f02 = (_0x2ff68c = false, _0x51823e, _0xc8ac95) => {
          _0x2d896f = true, _0x1b5be1.globalBrowser.emit('burger_commitOrder', {
            'income': _0x51823e,
            'score': _0xc8ac95
          }), _0x1b5be1.globalBrowser.emit('burger_createRecipe', {
            'recipeIndexes': [0x14, ..._0x5ba842(), 0x0]
          }), _0x2ff68c && (_0x1b5be1.globalBrowser.emit('burger_changeCaptchaLevel', 0x0), _0x1b5be1.globalBrowser.emit('burger_shuffleIngredients')), _0x1b5be1.globalBrowser.emit('burger_startGame', _0x2ff68c), _0x14bc23 = _0x366143.api.ePressUpdate();
        },
              _0x5ba842 = () => {
          const _0xa40bc8 = _0xe56e5.u.integer({
            'min': 0x2,
            'max': 0x4
          }),
                _0x1ab1f3 = _0xe56e5.u.pickset(_0x18e41a.map((_0x16fb6b, _0x638cce) => _0x638cce), _0xa40bc8);

          return _0x1ab1f3.forEach((_0x19bbf0, _0x52bba4) => {
            0x0 != _0x19bbf0 && 0x14 != _0x19bbf0 || (_0x1ab1f3[_0x52bba4] = _0xe56e5.u.integer({
              'min': 0x1,
              'max': 0x13
            }));
          }), _0x1ab1f3;
        };

        _0xe25a63.events.add('playerEnterColshape', _0x4cb7f7 => {
          if (_0x366143.api.isAuthed() && !_0xe25a63.players.local.vehicle && _0x4d91be && _0x4d91be.shape == _0x4cb7f7) {
            if (_0xe25a63.players.local.activeItemId) return _0x366143.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x3a41b5 = _0x4cb7f7, _0x366143.api.displayHelpStringTrans('displayHelpString.toCookBurger', false, true, 0x1388);
          }
        }), _0xe25a63.events.add('playerExitColshape', _0x2c1775 => {
          _0x366143.api.isAuthed() && _0x3a41b5 === _0x2c1775 && (_0x3a41b5 = null, _0xe25a63.game.ui.clearHelp(true));
        }), _0xe25a63.events.add('keys.e', () => {
          if (!_0x4d91be) return;

          _0xe25a63.game.ui.clearHelp(true);

          const _0x67b477 = _0x4d91be.position;
          _0xe25a63.blips.exists(_0x4d91be.blip) && _0x4d91be.blip.destroy(), _0xe25a63.colshapes.exists(_0x4d91be.shape) && _0x4d91be.shape.destroy(), _0x4d91be = null, _0x3a41b5 = null, _0x366143.api.stopAnim(), (async _0x24fb9b => {
            _0x366143.api.usingSystemAnim(true), _0x366143.api.setPlayerPos(_0xe25a63.players.local, new _0xe25a63.Vector3(_0x24fb9b.x, _0x24fb9b.y, _0x24fb9b.z)), _0xe25a63.players.local.setHeading(_0x24fb9b.r), await _0x366143.api.taskPlayAnim('amb@prop_human_bbq@male@base', 'base', 0x1, true, false, false, 'scoop'), _0x2d896f = false, _0x1b5be1.globalBrowser.toggle('burger', {
              'value': true
            }), _0x194f02(true, 0x0, _0x4d828f), _0xe25a63.events.callRemote('2993620596'), _0x3d8939 = true;
          })(_0x67b477);
        });

        var _0x5f5166 = _0x5665d9(0x66f9),
            _0x55e354 = _0x5665d9(0x161cd);

        let _0x2f40d6,
            _0x4a5a8e,
            _0x3608d2 = [],
            _0x140265 = false;

        const _0x446fcb = () => {
          _0x3608d2.forEach(_0x1c4bbe => {
            _0x55e354.blips.exists(_0x1c4bbe.blip) && _0x1c4bbe.blip.destroy(), _0x55e354.colshapes.exists(_0x1c4bbe.shape) && _0x1c4bbe.shape.destroy();
          }), _0x3608d2 = [], _0x2f40d6 && (_0x2f40d6 = _0x2f40d6.destroy()), _0x55e354.players.local.resetMovementClipset(0x0), _0x55e354.players.local.resetWeaponMovementClipset(), _0x366143.api.stopAnim(), _0x55e354.attachments.removeLocal('mop'), _0x366143.api.usingSystemAnim(false), _0x5665d9.g.interfaces.prison && _0x1b5be1.globalBrowser.toggle('prison', {
            'value': false
          });
        };

        _0x55e354.events.add('prison.client.completeJobMinigame', _0x6a2607 => {
          'floor_wash' === _0x6a2607 && _0x140265 && (_0x140265 = false, _0x41fc4e(), _0x366143.api.longNotifyTrans('prison.washFloorSuccess', 'success'));
        });

        const _0x41fc4e = async () => {
          _0x1b5be1.globalBrowser.toggle('prison', {
            'value': false
          }), _0x366143.api.stopAnim(), _0x2f40d6 && (_0x2f40d6 = _0x2f40d6.destroy()), _0x55e354.attachments.addLocal('bucket');

          const _0x54f47f = await _0x366143.api.taskPlayAnim('missfbi_s4mop', 'pickup_bucket_0', 0x2, true, false);

          await _0x55e354.game.sleep(0x3e8 * _0x54f47f), _0x366143.api.stopAnim(), _0x55e354.attachments.removeLocal('bucket'), await _0x366143.api.taskPlayAnim('move_mop_arms', 'idle', 0x31, true, false), _0x55e354.events.callRemote('3862140416', 'floor_wash', 0x0 == _0x3608d2.length), 0x0 == _0x3608d2.length && _0x55e354.attachments.removeLocal('mop'), _0x366143.api.usingSystemAnim(false);
        };

        _0x55e354.events.add('playerEnterColshape', _0x39eb19 => {
          if (!_0x366143.api.isAuthed() || _0x55e354.players.local.vehicle) return;
          if (!_0x3608d2.length) return;

          if (_0x3608d2.map(_0x3f8543 => _0x3f8543.shape).includes(_0x39eb19)) {
            if (_0x55e354.players.local.activeItemId) return _0x366143.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x4a5a8e = _0x39eb19, _0x366143.api.displayHelpStringTrans('displayHelpString.toCleanFloor', false, true, 0x1388);
          }
        }), _0x55e354.events.add('playerExitColshape', _0x6feefa => {
          _0x366143.api.isAuthed() && _0x3608d2.includes(_0x6feefa) && (_0x4a5a8e = null, _0x55e354.game.ui.clearHelp(true));
        }), _0x55e354.events.add('keys.e', () => {
          const a0_0x26f877 = {
            _0x294edb: 0x535,
            _0x70f66f: 0x2229,
            _0x24aae2: 0x12e4,
            _0x4e4b87: 0x1d7c,
            _0x400445: 0x1ae5,
            _0x588dc9: 0x1d66,
            _0x13d942: 0x1870,
            _0x540415: 0xae2,
            _0x27288f: 0x185e,
            _0x139859: 0x11dc,
            _0x468086: 0x186b,
            _0x3ce69d: 0x2067,
            _0x57e873: 0x1d55,
            _0x94b5b3: 0x235b,
            _0x4619e3: 0x1334,
            _0x269d64: 0x9a8,
            _0x40a8d3: 0x17d,
            _0x4d57b5: 0x535,
            _0xb30162: 0x1de9,
            _0x18b223: 0x106b,
            _0x1b5759: 0x2488,
            _0x108dec: 0x14d2
          };
          if (!_0x3608d2.length) return;

          const _0x264e2d = _0x3608d2.find(_0x5d6623 => _0x5d6623.shape === _0x4a5a8e);

          _0x264e2d && (_0x55e354.game.ui.clearHelp(true), _0x55e354.blips.exists(_0x264e2d.blip) && _0x264e2d.blip.destroy(), _0x55e354.colshapes.exists(_0x264e2d.shape) && _0x264e2d.shape.destroy(), _0x3608d2 = _0x3608d2.filter(_0x319c1b => _0x319c1b.shape !== _0x4a5a8e), _0x4a5a8e = null, _0x2f40d6 && (_0x2f40d6 = _0x2f40d6.destroy()), _0x366143.api.stopAnim(), (async () => {
            _0x366143.api.usingSystemAnim(true);

            const _0x475828 = await _0x366143.api.taskPlayAnim('missfbi_s4mop', 'put_down_bucket', 0x2, true, false);

            _0x55e354.attachments.addLocal('bucket'), _0x55e354.attachments.addLocal('mop'), await _0x55e354.game.sleep(0x3e8 * _0x475828), _0x55e354.attachments.removeLocal('bucket');

            const _0x1a8529 = _0x55e354.players.local.position,
                  _0x161230 = new _0x55e354.Vector3(0.5, 0.5, 0x0),
                  _0x179553 = _0x55e354.players.local.getHeading(),
                  _0x16a1a3 = _0x55e354.game.object.getObjectOffsetFromCoords(_0x1a8529.x, _0x1a8529.y, _0x55e354.game.gameplay.getGroundZFor3dCoord(_0x1a8529.x, _0x1a8529.y, _0x1a8529.z, 0xf5, true), _0x179553, _0x161230.x, _0x161230.y, _0x161230.z);

            _0x2f40d6 = await (0x0, _0x5f5166.n)(_0x55e354.game.joaat('prop_cs_mopbucket_01'), new _0x55e354.Vector3(_0x16a1a3.x, _0x16a1a3.y, _0x16a1a3.z), {
              'rotation': new _0x55e354.Vector3(0x0, 0x0, _0x55e354.players.local.getHeading()),
              'alpha': 0xff,
              'dimension': 0x0
            });

            const _0x2cb7f8 = ['idle_scrub_small_player', 'idle_scrub'],
                  _0x4f9799 = _0x2cb7f8[Math.floor(Math.random() * _0x2cb7f8.length)];

            await _0x366143.api.taskPlayAnim('missfbi_s4mop', _0x4f9799, 0x1, true, false), _0x1b5be1.globalBrowser.toggle('prison', {
              'value': true,
              'type': 'floor_wash'
            }), _0x55e354.events.callRemote('2993620596'), _0x140265 = true;
          })());
        });

        var _0x1d3e77 = _0x5665d9(0x161cd);

        let _0x2f6d4f,
            _0x52e597 = [],
            _0x1f7bbc = false;

        const _0x386b6c = () => {
          const a0_0xbb79a9 = {
            _0x168fac: 0x16c5,
            _0x50446c: 0xa8e,
            _0x124246: 0x17f,
            _0x2d8f4e: 0x25e1
          };
          _0x52e597.forEach(_0x4b42c0 => {
            _0x1d3e77.blips.exists(_0x4b42c0.blip) && _0x4b42c0.blip.destroy(), _0x1d3e77.colshapes.exists(_0x4b42c0.shape) && _0x4b42c0.shape.destroy();
          }), _0x52e597 = [], _0x366143.api.stopAnim(), _0x1d3e77.attachments.removeLocal('plunger'), _0x366143.api.usingSystemAnim(false), _0x5665d9.g.interfaces.prison && _0x1b5be1.globalBrowser.toggle('prison', {
            'value': false
          });
        };

        _0x1d3e77.events.add('prison.client.completeJobMinigame', _0x59f331 => {
          'toilet_clean' === _0x59f331 && _0x1f7bbc && (_0x1f7bbc = false, _0x231873(), _0x366143.api.longNotifyTrans('prison.cleanToiletSuccess', 'success'));
        });

        const _0x231873 = async () => {
          _0x1b5be1.globalBrowser.toggle('prison', {
            'value': false
          }), _0x366143.api.stopAnim(), _0x366143.api.stopAnim(), _0x1d3e77.attachments.removeLocal('plunger'), _0x1d3e77.events.callRemote('3862140416', 'toilet_clean', 0x0 == _0x52e597.length), _0x366143.api.usingSystemAnim(false);
        };

        _0x1d3e77.events.add('playerEnterColshape', _0x186448 => {
          if (!_0x366143.api.isAuthed() || _0x1d3e77.players.local.vehicle) return;
          if (!_0x52e597.length) return;

          if (_0x52e597.map(_0x352b7e => _0x352b7e.shape).includes(_0x186448)) {
            if (_0x1d3e77.players.local.activeItemId) return _0x366143.api.displayHelpStringTrans('user.removeActiveItemFirst', false, true, 0xbb8);
            _0x2f6d4f = _0x186448, _0x366143.api.displayHelpStringTrans('displayHelpString.toCleanToilet', false, true, 0x1388);
          }
        }), _0x1d3e77.events.add('playerExitColshape', _0x5b8ab5 => {
          _0x366143.api.isAuthed() && _0x2f6d4f === _0x5b8ab5 && (_0x2f6d4f = null, _0x1d3e77.game.ui.clearHelp(true));
        }), _0x1d3e77.events.add('keys.e', () => {
          const a0_0x4fa668 = {
            _0x223b21: 0x535,
            _0x161218: 0x1c66,
            _0x3e5db5: 0x1f30,
            _0x17b41e: 0x235b,
            _0x39ef91: 0x185e,
            _0x3b9025: 0x10f6,
            _0x172ce3: 0x2422,
            _0x508f86: 0x1de9,
            _0x31bb9b: 0x188f,
            _0x3255c4: 0x1d7c,
            _0x59d76e: 0x12e4,
            _0x5d31d2: 0x2488,
            _0x3a1ee3: 0x4a3,
            _0x3b1f80: 0x1390,
            _0xa95b9a: 0x14d2,
            _0x35fd2b: 0x1da5
          };
          if (!_0x52e597.length) return;

          const _0x107bc6 = _0x52e597.find(_0x372d4d => _0x372d4d.shape === _0x2f6d4f);

          _0x107bc6 && (_0x1d3e77.game.ui.clearHelp(true), _0x1d3e77.blips.exists(_0x107bc6.blip) && _0x107bc6.blip.destroy(), _0x1d3e77.colshapes.exists(_0x107bc6.shape) && _0x107bc6.shape.destroy(), _0x52e597 = _0x52e597.filter(_0x1b0fca => _0x1b0fca.shape !== _0x2f6d4f), _0x2f6d4f = null, _0x366143.api.stopAnim(), (async () => {
            _0x366143.api.usingSystemAnim(true);

            const _0x19615b = _0x1d3e77.players.local.position,
                  _0x1142b2 = new _0x1d3e77.Vector3(0x0, 0.1, 0x0),
                  _0x1ab597 = _0x1d3e77.players.local.getHeading(),
                  _0x45b0cd = _0x1d3e77.game.object.getObjectOffsetFromCoords(_0x19615b.x, _0x19615b.y, _0x19615b.z, _0x1ab597, _0x1142b2.x, _0x1142b2.y, _0x1142b2.z);

            _0x366143.api.setPlayerPos(_0x1d3e77.players.local, _0x45b0cd, false, true), await _0x366143.api.taskPlayAnim('amb@code_human_in_car_mp_actions@fist_pump@low@base', 'idle_a', 0x1, true, false), _0x1d3e77.attachments.addLocal('plunger'), _0x1b5be1.globalBrowser.toggle('prison', {
              'value': true,
              'type': 'toilet_clean'
            }), _0x1d3e77.events.callRemote('2993620596'), _0x1f7bbc = true;
          })());
        });

        var _0x26ff98 = _0x5665d9(0x161cd);

        const _0xbb67a3 = {
          'enabled': false,
          'location': undefined,
          'state': 'closed',
          'currentJob': undefined,
          'botBlip': undefined,
          'escapeInfo': {
            'amount': 0x0,
            'lastTime': 0x0
          },
          'playingCrowd': false
        };
        _0x26ff98.events.add('prison.client.init', (_0x52ed88, _0x3307be, _0x46e44e = false) => {
          _0xbb67a3.location = _0x52ed88, _0xbb67a3.state = _0x3307be, _0x46e44e && (_0x366143.api.fadeOut(0x0), _0x366143.api.playSound('prison/busted', {
            'volume': 0x14
          }));

          const _0x6fc332 = _0x71c585.C_[_0x52ed88],
                _0x5c22bb = _0x6fc332[Math.floor(Math.random() * _0x6fc332.length)];

          switch (_0x366143.api.setPlayerPos(_0x26ff98.players.local, new _0x26ff98.Vector3(_0x5c22bb.x, _0x5c22bb.y, _0x5c22bb.z), false, true), _0x52ed88) {
            case 'federal_prison':
            case 'demorgan':
              _0x1ace23(), _0x3307be && _0x4ac235();
              break;

            default:
              _0x4ac235();

          }

          if (['federal_prison', 'demorgan'].includes(_0xbb67a3.location)) {
            switch ('closed') {
              case 'closed':
                _0x543d2a(false), _0x366143.api.longNotifyTrans('prison.closedDoors', 'warn', 0x3a98);
                break;

              case 'opened':
                _0x543d2a(true), _0x366143.api.longNotifyTrans('prison.openedDoors', 'warn', 0x3a98);
            }

            _0x1631e7.Z.play('prison'), _0xbb67a3.playingCrowd || (_0x366143.api.playAmbientMusic2('prison/background', 0x8, true), _0xbb67a3.playingCrowd = true);
          }

          _0xbb67a3.enabled = true, _0x46e44e && _0x366143.api.fadeIn(0x7d0);
        }), _0x26ff98.events.add('prison.client.deinit', _0x2b5bf7 => {
          _0xbb67a3.enabled = false, _0x3c6299(), _0x17f3ec(), _0x2d24e4(), _0x543d2a(false), _0x1631e7.Z.stop(), _0xbb67a3.playingCrowd && (_0x366143.api.stopAmbientMusic2(), _0xbb67a3.playingCrowd = false), _0x366143.api.setPlayerPos(_0x26ff98.players.local, _0x2b5bf7, false, true);
        }), _0x26ff98.events.add('prison.client.stateChange', _0x1e8dca => {
          if (_0xbb67a3.state = _0x1e8dca, _0xbb67a3.enabled && ['federal_prison', 'demorgan'].includes(_0xbb67a3.location)) {
            switch (_0x366143.api.fadeOut(0x0), _0x1e8dca) {
              case 'closed':
                {
                  _0x2d24e4(), _0x543d2a(false);

                  const _0x5cf89c = _0x71c585.C_[_0xbb67a3.location],
                        _0x4fd794 = _0x5cf89c[Math.floor(Math.random() * _0x5cf89c.length)];

                  _0x366143.api.setPlayerPos(_0x26ff98.players.local, new _0x26ff98.Vector3(_0x4fd794.x, _0x4fd794.y, _0x4fd794.z), false, true), _0x4ac235(), _0x366143.api.playSound('prison/door_close', {
                    'volume': 0x1e
                  }), _0x366143.api.longNotifyTrans('prison.closingDoors', 'error', 0x2710);
                  break;
                }

              case 'opened':
                _0x543d2a(true), _0x366143.api.playSound('prison/door_open', {
                  'volume': 0x1e
                }), _0x366143.api.playSound('prison/door_open_background', {
                  'volume': 0x8
                }), _0x366143.api.longNotifyTrans('prison.openingDoors', 'success', 0x2710);
            }

            _0x366143.api.fadeIn(0x3e8);
          }
        }), _0x26ff98.events.add('prison.client.initJob', (_0x21e751, _0x51f58d) => {
          const a0_0x3f7993 = {
            _0x112fd5: 0x2405,
            _0x53fd74: 0x6ba,
            _0x1eb2af: 0x1d4e,
            _0x357238: 0xb8c
          },
                a0_0x526fe5 = {
            _0xfc1e97: 0x102e,
            _0x30266a: 0xe6d
          },
                a0_0x40048d = {
            _0x21230d: 0x25e1,
            _0xb92d2f: 0x1aab,
            _0x412dd1: 0x6ba,
            _0x13b6d1: 0xf82,
            _0x35b899: 0x1d4e,
            _0x59ebbb: 0xa8e,
            _0x497382: 0x21d5,
            _0x17f0e6: 0x1d2
          };

          switch (_0x543d2a(false), _0x2d24e4(), _0xbb67a3.currentJob = _0x21e751, _0x21e751) {
            case 'floor_wash':
              ((_0x164821 = 0x0) => {
                _0x446fcb(), _0xe56e5.u.pickset(_0x71c585.aJ.floor_wash, _0x164821).forEach(_0x1a7528 => {
                  const _0x3f8128 = {};
                  _0x3f8128.shape = _0x55e354.colshapes.newSphere(_0x1a7528.x, _0x1a7528.y, _0x1a7528.z, 0x1, -0x1), _0x3f8128.blip = _0x55e354.blips.new(0x1, new _0x55e354.Vector3(_0x1a7528.x, _0x1a7528.y, _0x1a7528.z), {
                    'scale': 0.8,
                    'dimension': -0x1,
                    'color': 0x2
                  }), (0x0, _0x486804.markAsTranslatedBlip)(_0x3f8128.blip, 'blips.dirtyFloor'), _0x3608d2.push(_0x3f8128);
                });
              })(_0x51f58d);

              break;

            case 'toilet_clean':
              ((_0x474cf3 = 0x0) => {
                const a0_0x20b634 = {
                  _0x1408fd: 0x1aab,
                  _0x3b2037: 0x2405,
                  _0x4aa901: 0x6ba,
                  _0x4b3d9a: 0x1d4e,
                  _0x5bef59: 0xa8e,
                  _0x48f2fe: 0x171b
                };
                _0x386b6c(), _0xe56e5.u.pickset(_0x71c585.aJ.toilet_clean, _0x474cf3).forEach(_0x26d320 => {
                  const _0x43ca79 = {};
                  _0x43ca79.shape = _0x1d3e77.colshapes.newSphere(_0x26d320.x, _0x26d320.y, _0x26d320.z, 0x1, -0x1), _0x43ca79.blip = _0x1d3e77.blips.new(0x1, new _0x1d3e77.Vector3(_0x26d320.x, _0x26d320.y, _0x26d320.z), {
                    'scale': 0.8,
                    'dimension': -0x1,
                    'color': 0x2
                  }), (0x0, _0x486804.markAsTranslatedBlip)(_0x43ca79.blip, 'blips.dirtyToilet'), _0x52e597.push(_0x43ca79);
                });
              })(_0x51f58d);

              break;

            case 'broom_clean':
              ((_0x2da86b = 0x0) => {
                const a0_0x57c6c1 = {
                  _0x148285: 0x1aab,
                  _0x53f296: 0x6ba,
                  _0x3393c: 0x1d55,
                  _0x386c1d: 0x1d4e,
                  _0x3336e6: 0xd0f
                };
                _0x5db803(), _0xe56e5.u.pickset(_0x71c585.aJ.broom_clean, _0x2da86b).forEach(_0x490e68 => {
                  const _0x5316a4 = {};
                  _0x5316a4.shape = _0x3de127.colshapes.newSphere(_0x490e68.x, _0x490e68.y, _0x490e68.z, 0x2, -0x1), _0x5316a4.blip = _0x3de127.blips.new(0x1, new _0x3de127.Vector3(_0x490e68.x, _0x490e68.y, _0x490e68.z), {
                    'scale': 0.8,
                    'dimension': -0x1,
                    'color': 0x2
                  }), (0x0, _0x486804.markAsTranslatedBlip)(_0x5316a4.blip, 'blips.dustyArea'), _0x46eb86.push(_0x5316a4);
                });
              })(_0x51f58d);

              break;

            case 'burger':
              (() => {
                _0x1f2532();

                const _0x3c6ab2 = _0x71c585.aJ.burger;
                _0x4d91be = {}, _0x4d91be.position = _0x3c6ab2, _0x4d91be.shape = _0xe25a63.colshapes.newSphere(_0x3c6ab2.x, _0x3c6ab2.y, _0x3c6ab2.z, 0x2, -0x1), _0x4d91be.blip = _0xe25a63.blips.new(0x1, new _0xe25a63.Vector3(_0x3c6ab2.x, _0x3c6ab2.y, _0x3c6ab2.z), {
                  'scale': 0.8,
                  'dimension': -0x1,
                  'color': 0x2
                }), (0x0, _0x486804.markAsTranslatedBlip)(_0x4d91be.blip, 'blips.cookingZone');
              })();

          }
        }), _0x26ff98.events.add('prison.client.initZone', () => {
          _0x1ace23();
        }), _0x26ff98.events.add('prison.client.deinitZone', () => {
          _0x17f3ec();
        }), _0x26ff98.events.add('prison.client.toggleBotBlip', _0x29ce52 => {
          _0x543d2a(_0x29ce52);
        }), _0x26ff98.events.add('onPlayerExitZone', _0x3ab868 => {
          if (_0xbb67a3.enabled) switch (_0x3ab868) {
            case 'prison.zone':
              {
                const _0x3f3d7e = _0x71c585.C_[_0xbb67a3.location],
                      _0x48ae55 = _0x3f3d7e[Math.floor(Math.random() * _0x3f3d7e.length)];

                _0x366143.api.setPlayerPos(_0x26ff98.players.local, new _0x26ff98.Vector3(_0x48ae55.x, _0x48ae55.y, _0x48ae55.z), false, true);

                break;
              }

            case 'cells.zone':
              {
                if (['federal_prison', 'demorgan'].includes(_0xbb67a3.location) && false) break;

                const _0x8fd467 = _0x71c585.C_[_0xbb67a3.location],
                      _0x24b5a1 = _0x8fd467[Math.floor(Math.random() * _0x8fd467.length)];

                _0x366143.api.setPlayerPos(_0x26ff98.players.local, new _0x26ff98.Vector3(_0x24b5a1.x, _0x24b5a1.y, _0x24b5a1.z), false, true);

                break;
              }
          }
        }), _0x26ff98.events.add('render2', () => {
          _0xbb67a3.enabled && !_0x15b107.isCustomizationActive && (_0xbb67a3.escapeInfo.amount && Date.now() - _0xbb67a3.escapeInfo.lastTime > 0x7d0 && (_0xbb67a3.escapeInfo.amount = 0x0), _0x26ff98.zones.isZoneRegistered('prison.zone') && !_0x26ff98.zones.isPointInZone(_0x26ff98.players.local.position, 'prison.zone') && (_0x26ff98.zones.setForceCheck('prison.zone'), Date.now() - _0xbb67a3.escapeInfo.lastTime > 0x0 && (_0xbb67a3.escapeInfo.lastTime = Date.now() + 0x64, _0xbb67a3.escapeInfo.amount++), _0xbb67a3.escapeInfo.amount > 0x14 && !_0xbb67a3.escapeInfo.kicked && (_0xbb67a3.escapeInfo.kicked = true, _0x26ff98.events.callRemote('2693562767'))), _0x26ff98.zones.isZoneRegistered('cells.zone') && !_0x26ff98.zones.isPointInZone(_0x26ff98.players.local.position, 'cells.zone') && _0x26ff98.zones.setForceCheck('cells.zone'));
        });

        const _0x1ace23 = () => {
          _0x17f3ec();

          const _0x25cee0 = _0x71c585.GZ.map(_0x731e0e => ({
            'x': _0x731e0e.x,
            'y': _0x731e0e.y,
            'z': _0x731e0e.z - 0.98
          }));

          _0x26ff98.zones.registerZone(_0x25cee0, 0x64, 'prison.zone');
        },
              _0x17f3ec = () => {
          _0x26ff98.zones.unRegisterZone('prison.zone');
        },
              _0x4ac235 = () => {
          _0x3c6299();

          const _0x18ace0 = _0x71c585.KH[_0xbb67a3.location].map(_0x558f53 => ({
            'x': _0x558f53.x,
            'y': _0x558f53.y,
            'z': _0x558f53.z - 0.98
          }));

          _0x26ff98.zones.registerZone(_0x18ace0, 0x64, 'cells.zone');
        },
              _0x3c6299 = () => {
          _0x26ff98.zones.unRegisterZone('cells.zone');
        },
              _0x2d24e4 = () => {
          switch (_0xbb67a3.currentJob) {
            case 'floor_wash':
              _0x446fcb();

              break;

            case 'toilet_clean':
              _0x386b6c();

              break;

            case 'broom_clean':
              _0x5db803();

              break;

            case 'burger':
              _0x1f2532();

          }

          _0xbb67a3.currentJob = null;
        },
              _0x543d2a = _0x55e0e2 => {
          _0x26ff98.blips.exists(_0xbb67a3.botBlip) && (_0xbb67a3.botBlip.destroy(), delete _0xbb67a3.botBlip), _0x55e0e2 && (_0xbb67a3.botBlip = _0x26ff98.blips.new(0x1, new _0x26ff98.Vector3(1782.625, 2589.31, 45.798), {
            'color': 0x5,
            'shortRange': false
          }), (0x0, _0x486804.markAsTranslatedBlip)(_0xbb67a3.botBlip, 'blips.overseer'));
        };
      },
      0x5d96: (_0x4d3ed3, _0x5edab3, _0x217800) => {
        'use strict';

        const a0_0x25bdc5 = {
          _0x4b91a6: 0x12e5,
          _0x3b985d: 0xcb1,
          _0x571200: 0x1298,
          _0x39b1fc: 0x2606,
          _0x5bc6b0: 0xf82,
          _0x733fa5: 0x1d66,
          _0x1eb3f4: 0x16a0,
          _0x5287bd: 0x11dc,
          _0x91a78e: 0x11dc,
          _0xf15408: 0x2684,
          _0x79ed81: 0xcb1,
          _0x30b333: 0x1b28,
          _0x238718: 0x1f30,
          _0x52a97d: 0x1f30,
          _0x3dcbaa: 0x1e3d,
          _0x3d5af1: 0x1520,
          _0xeda28b: 0x1520,
          _0x2b6fa5: 0x8a0,
          _0x7a962: 0x1fd6,
          _0x3897f3: 0x1fe9,
          _0x902704: 0x2606,
          _0x40dd38: 0x1fe9,
          _0x1bb322: 0x2140,
          _0x2e8dd6: 0x2530,
          _0x2752fa: 0x1da5,
          _0x41c81b: 0x1107,
          _0x1dd5be: 0x112d,
          _0x37fd65: 0x1b28,
          _0x5e52d7: 0x14d2,
          _0x4c249e: 0x112d,
          _0x45146a: 0x1520,
          _0x5249b6: 0x47f
        },
              a0_0x5d8b30 = {
          _0x2678f6: 0x248,
          _0x150d55: 0x961,
          _0x291503: 0x248,
          _0x395703: 0x549
        },
              a0_0x198386 = {
          _0x1b4796: 0x1dda,
          _0x1cb83b: 0x1381,
          _0xb224d7: 0x1e3d,
          _0x2f3f38: 0x1f30,
          _0x3c2fc4: 0x1d55,
          _0x4531d7: 0x8a0,
          _0x1f0367: 0x535,
          _0x26dba6: 0x1985,
          _0x35995d: 0x1f30,
          _0xe0abdd: 0x1f30,
          _0x37d88a: 0x13f8,
          _0x2dfbbd: 0x2530,
          _0x1da521: 0x47f,
          _0x261ed6: 0x2606,
          _0x5870a5: 0x13b4,
          _0x497bb4: 0x82d,
          _0x3f54e1: 0x1816,
          _0x505bb7: 0x11dc,
          _0x5cda2c: 0x6b3
        },
              a0_0x15094b = {
          _0xdabe62: 0x535,
          _0x5497af: 0x1112,
          _0x569720: 0x1d55,
          _0x59e5ff: 0x213a,
          _0x3e413b: 0x19d6,
          _0x46b3ee: 0x1992,
          _0x366103: 0xc70,
          _0x415153: 0x1329,
          _0x4d8e2c: 0x7fe,
          _0x3be808: 0x124b,
          _0x95e9cf: 0x630,
          _0x9afaa5: 0x12d2,
          _0x482185: 0x2058,
          _0x183349: 0x1298,
          _0x48dcc5: 0x2fb,
          _0x16bf18: 0x42f,
          _0x2866dc: 0xcb1,
          _0x42d9eb: 0x535,
          _0x1ad6b4: 0x1a50,
          _0xf243ed: 0x1f30,
          _0x118e99: 0xf69,
          _0x5ebdd8: 0x11dc,
          _0x3ed2ff: 0x2606,
          _0x20ddce: 0x16c5,
          _0x29a641: 0x11dc,
          _0xb8ddea: 0x1520,
          _0x3069a9: 0x1d66,
          _0x1b58bb: 0x1fe9,
          _0x22d7a1: 0x11dc,
          _0x2fed47: 0x1b28,
          _0x257605: 0x1e35,
          _0x50689e: 0x1e35,
          _0x31a17b: 0x1b64,
          _0x48be03: 0x2120,
          _0x3abf82: 0x24ee,
          _0x3fe627: 0x600,
          _0x4543b5: 0x25fc,
          _0x587e7e: 0x47f,
          _0x3352d4: 0xc8d,
          _0x5b00b2: 0x1298
        },
              a0_0x32dcab = {
          _0x19e081: 0x1381,
          _0x1ee172: 0x1381,
          _0x5d1f51: 0x1381,
          _0x4c0eac: 0x1d55,
          _0x587cc2: 0x19b8,
          _0x50b43b: 0x535
        },
              a0_0x53e3e1 = {
          _0x465559: 0x248,
          _0x51f195: 0x1d52,
          _0x49392a: 0x502,
          _0x39c71a: 0x1329,
          _0x3be0f0: 0x1d66,
          _0x54d76d: 0x1972,
          _0x7efa07: 0x1992,
          _0x492159: 0x1d66,
          _0x3959f6: 0x1992,
          _0x391d00: 0x24bc,
          _0x547fb7: 0x137a,
          _0x4d638f: 0xa06,
          _0x241230: 0xa06,
          _0x2e3b1e: 0x24bc,
          _0x30e2a1: 0x137a,
          _0x27053e: 0x137a,
          _0x4fef0b: 0xa06,
          _0x177e84: 0x24bc,
          _0x2b96a3: 0x1e35,
          _0x1be14d: 0xe16,
          _0x344056: 0x248,
          _0x5e1544: 0xe48,
          _0x1c31ec: 0x1f41,
          _0x25d089: 0x1d66,
          _0x17b9f5: 0x2072,
          _0x46aceb: 0x2061
        },
              a0_0x21ec2a = {
          _0x4d7f81: 0x2292,
          _0xa39071: 0x1d48,
          _0x385f6f: 0x248,
          _0x14a905: 0x1f30,
          _0x28e54b: 0x549,
          _0x896c0c: 0x186b
        };

        _0x217800.r(_0x5edab3);

        var _0x531dbf = _0x217800(0x16a21),
            _0x4fbbc9 = _0x217800(0x17d19),
            _0x2f9936 = _0x217800(0x1d7e),
            _0x1d803d = _0x217800(0x161cd);

        const _0x32deac = 0x57,
              _0x3256d7 = 0x53,
              _0x59e3bb = 0x41,
              _0x3bfaa0 = 0x44,
              _0x109d47 = 0x45,
              _0x5c4295 = 0x51,
              _0x26e918 = 0x20,
              _0x1f5c08 = 0x11,
              _0x268bd5 = _0x1d803d.players.local,
              _0x437966 = {
          'enabled': false,
          'camera': _0x1d803d.cameras.new('default', new _0x1d803d.Vector3(0x0, 0x0, 0x0), new _0x1d803d.Vector3(0x0, 0x0, 0x0), 0x32),
          'movement_speed': 0x1,
          'mouse_movement_speed': 0x1,
          'skipFrame': true
        },
              _0x19c75b = _0xe58670 => {
          if (_0x437966.enabled = _0xe58670, _0x268bd5.freezePosition(_0x437966.enabled), _0x268bd5.setAlpha(_0x437966.enabled ? 0x0 : 0xff), _0x437966.enabled) {
            const _0x28969d = _0x2f9936.X,
                  _0x13f4b3 = _0x28969d.getCoord(),
                  _0x46b9ff = _0x28969d.getRot(0x2);

            _0x437966.camera.setCoord(_0x13f4b3.x, _0x13f4b3.y, _0x13f4b3.z), _0x437966.camera.setRot(_0x46b9ff.x, _0x46b9ff.y, _0x46b9ff.z, 0x2);
          } else {
            if (!_0x1d803d.keys.isDown(_0x26e918)) {
              const _0x7e84bf = _0x268bd5.position;

              _0x268bd5.setCoordsNoOffset(_0x7e84bf.x, _0x7e84bf.y, _0x1d803d.game.gameplay.getGroundZFor3dCoord(_0x7e84bf.x, _0x7e84bf.y, _0x7e84bf.z, _0x7e84bf.z, false), false, false, false);
            }
          }

          _0x437966.camera.setActive(_0x437966.enabled), _0x1d803d.game.cam.renderScriptCams(_0x437966.enabled, false, 0x0, false, false, 0x0);
        },
              _0x52dadd = _0x16cd8b => _0x437966.blockMovement = _0x16cd8b;

        _0x1d803d.events.add('render', () => {
          if (_0x437966.skipFrame) return void (_0x437966.skipFrame = false);
          if (!_0x437966.enabled) return false;

          const _0x2be818 = _0x437966.camera.getRot(0x2),
                _0x45d75b = _0x437966.camera.getCoord(),
                _0x4b9cc8 = _0x437966.camera.getDirection(),
                _0x35e160 = _0x1d803d.game.controls.getDisabledControlNormal(0x0, 0x1),
                _0x4754b4 = _0x1d803d.game.controls.getDisabledControlNormal(0x0, 0x2);

          if (!_0x437966.blockMovement) {
            const _0x39f2b1 = _0x1d803d.game.controls.getDisabledControlNormal(0x0, 0x8),
                  _0x63c47b = _0x1d803d.game.controls.getDisabledControlNormal(0x0, 0x9);

            if (_0x1d803d.keys.isDown(_0x3256d7) || _0x39f2b1 > 0x0) {
              const _0xf9105b = (_0x39f2b1 || 0x1) * _0x437966.movement_speed;

              _0x45d75b.x = _0x45d75b.x - _0x4b9cc8.x * _0xf9105b, _0x45d75b.y = _0x45d75b.y - _0x4b9cc8.y * _0xf9105b, _0x45d75b.z = _0x45d75b.z - _0x4b9cc8.z * _0xf9105b;
            }

            if (_0x1d803d.keys.isDown(_0x32deac) || _0x39f2b1 < 0x0) {
              const _0x3a40c4 = (-0x1 * _0x39f2b1 || 0x1) * _0x437966.movement_speed;

              _0x45d75b.x = _0x45d75b.x + _0x4b9cc8.x * _0x3a40c4, _0x45d75b.y = _0x45d75b.y + _0x4b9cc8.y * _0x3a40c4, _0x45d75b.z = _0x45d75b.z + _0x4b9cc8.z * _0x3a40c4;
            }

            if (_0x1d803d.keys.isDown(_0x59e3bb) || _0x63c47b < 0x0) {
              const _0x4d74b6 = (-0x1 * _0x63c47b || 0x1) * _0x437966.movement_speed;

              _0x45d75b.x = _0x45d75b.x + -_0x4b9cc8.y * _0x4d74b6, _0x45d75b.y = _0x45d75b.y + _0x4b9cc8.x * _0x4d74b6;
            }

            if (_0x1d803d.keys.isDown(_0x3bfaa0) || _0x63c47b > 0x0) {
              const _0x35a26b = (_0x63c47b || 0x1) * _0x437966.movement_speed;

              _0x45d75b.x = _0x45d75b.x - -_0x4b9cc8.y * _0x35a26b, _0x45d75b.y = _0x45d75b.y - _0x4b9cc8.x * _0x35a26b;
            }

            _0x1d803d.keys.isDown(_0x1f5c08) && (_0x45d75b.z = _0x45d75b.z - _0x437966.movement_speed), _0x1d803d.keys.isDown(_0x26e918) && (_0x45d75b.z = _0x45d75b.z + _0x437966.movement_speed), _0x1d803d.keys.isDown(_0x5c4295) && (_0x437966.movement_speed -= 0.01), _0x1d803d.keys.isDown(_0x109d47) && (_0x437966.movement_speed += 0.01), 0x0 !== _0x35e160 && (_0x2be818.z = _0x2be818.z + 0xa * -_0x35e160), 0x0 !== _0x4754b4 && (_0x2be818.x = _0x2be818.x + 0xa * -_0x4754b4);
          }

          _0x1d803d.game.graphics.drawText('Movement speed: ' + _0x437966.movement_speed.toFixed(0x1), [0.25, 0.9], {
            'font': 0x4,
            'scale': 0.4,
            'color': [0xff, 0xff, 0xff, 0xff],
            'outline': true,
            'align': 0x0
          }), _0x437966.camera.setCoord(_0x45d75b.x, _0x45d75b.y, _0x45d75b.z), _0x437966.camera.setRot(_0x2be818.x, 0x0, _0x2be818.z, 0x2), _0x268bd5.setHeading(_0x2be818.z), _0x1d803d.game.cam.setGameplayCamRelativeHeading(0x0), _0x268bd5.setCoordsNoOffset(_0x45d75b.x, _0x45d75b.y, _0x45d75b.z, false, false, false);
        });

        var _0x2e7bc8 = _0x217800(0x92e0),
            _0x10be4c = _0x217800(0x16a7d),
            _0x314269 = _0x217800(0x161cd);

        const _0x466056 = {
          'active': false,
          'heading': 0x0,
          'yaw': 0x0,
          'surface': 0x0,
          'editMode': 'surface',
          'editModes': ['yaw', 'heading', 'surface'],
          'object': null,
          'boards': [],
          'focusedBoard': null,
          'editBoard': null,
          'modelIndex': 0x0
        },
              _0x1e22ca = _0x314269.players.local,
              _0x3f9532 = new _0x4fbbc9.Z({
          'dataItems': null,
          'chunkSize': 0x32,
          'distance': 0x12c,
          'positionResolver': _0x161cbc => _0x161cbc.position,
          'streamDelay': 0x1f4,
          'isCheck3d': false,
          'type': 'point'
        });

        _0x314269.events.add('billboards.editor.load', (_0x3a31a3, _0x1c5832) => {
          const _0x811afd = JSON.parse(_0x3a31a3);

          if (_0x466056.boards = [..._0x466056.boards, ..._0x811afd], _0x1c5832) {
            for (const _0x47ff2f of _0x466056.boards) _0x47ff2f.rotation = new _0x314269.Vector3(_0x47ff2f.rotation.x, _0x47ff2f.rotation.y, -0x1 * _0x47ff2f.rotation.z);

            _0x3f9532.dataItems = _0x466056.boards, _0x531dbf.api.isAuthed() && _0x3f9532.__init();
          }
        }), _0x314269.events.add('render', () => {
          if (!_0x531dbf.api.isAuthed()) return;

          _0x3f9532.update();

          const _0x160833 = [..._0x3f9532.currentItems];

          if (_0x466056.active) {
            const _0x5d9b2c = _0x437966.enabled ? _0x437966.camera : _0x2f9936.X,
                  _0x3c4331 = _0x5d9b2c.getDirection(),
                  _0x170675 = _0x5d9b2c.getCoord(),
                  _0x3db8d5 = new _0x314269.Vector3(_0x170675.x + 0x14 * _0x3c4331.x, _0x170675.y + 0x14 * _0x3c4331.y, _0x170675.z + 0x14 * _0x3c4331.z);

            if (_0x314269.gui.cursor.visible) _0x52dadd(true);else {
              if (_0x314269.game.controls.enableControlAction(0x0, 0xee, true), _0x314269.game.controls.isControlPressed(0x0, 0xee)) {
                _0x52dadd(true);

                const _0x9c62bb = _0x314269.game.controls.getDisabledControlNormal(0x0, 0x1);

                _0x466056.surface += _0x9c62bb;
              } else _0x52dadd(false);
            }

            const _0x45ec4c = _0x314269.raycasting.testPointToPoint(_0x170675, _0x3db8d5, _0x1e22ca);

            let _0xb9db2a = _0x3db8d5,
                _0x4566e9 = new _0x314269.Vector3(0x0, 0x0, 0x0);

            undefined !== _0x45ec4c && (_0xb9db2a = new _0x314269.Vector3(_0x45ec4c.position.x + _0x45ec4c.surfaceNormal.x * _0x466056.surface, _0x45ec4c.position.y + _0x45ec4c.surfaceNormal.y * _0x466056.surface, _0x45ec4c.position.z + _0x45ec4c.surfaceNormal.z * _0x466056.surface), _0x4566e9 = _0x531dbf.api.setEulerFromRotationMatrix(_0x531dbf.api.matrixLookAt(_0x45ec4c.surfaceNormal.x, _0x45ec4c.surfaceNormal.z, _0x45ec4c.surfaceNormal.y)), _0x4566e9.y = _0x531dbf.api.normalizeAngle(_0x4566e9.y + _0x466056.yaw), _0x466056.heading = _0x531dbf.api.normalizeRotation(_0x4566e9.z + 0xb4)), _0x466056.position = _0xb9db2a, _0x466056.normalRotation = _0x4566e9;
            let _0x11a539 = null;

            for (const _0x58ff7f of _0x160833) if (_0x531dbf.api.vdist2(_0x58ff7f.position, _0xb9db2a) <= 0x1) {
              _0x11a539 = _0x58ff7f;
              break;
            }

            _0x466056.focusedBoard = _0x11a539, _0x466056.object && _0x314269.objects.exists(_0x466056.object) && (_0x466056.object.setCoordsNoOffset(_0xb9db2a.x, _0xb9db2a.y, _0xb9db2a.z, false, false, false), _0x466056.object.setRotation(_0x466056.normalRotation.x, _0x466056.normalRotation.y, -0x1 * _0x466056.heading, 0x2, true), _0x11a539 && !_0x466056.editBoard ? _0x314269.game.entity.setAlpha(_0x466056.object.handle, 0x0, 0x0) : _0x314269.game.entity.setAlpha(_0x466056.object.handle, 0xff, 0x0)), _0x11a539 && !_0x466056.editBoard && _0x314269.game.graphics.drawText('Отредактировать №' + _0x11a539.id + ' на кнопку ~y~L', [0.5, 0.7], {
              'font': 0x4,
              'color': [0xff, 0xff, 0xff, 0xff],
              'scale': [0.5, 0.5]
            }), _0x314269.game.graphics.drawText('x: ' + _0xb9db2a.x.toFixed(0x2) + ' y: ' + _0xb9db2a.y.toFixed(0x2) + ' z: ' + _0xb9db2a.z.toFixed(0x2) + '~n~heading: ' + _0x466056.heading.toFixed(0x2) + '~n~mode: surface~n~Model: ' + _0x466056.modelIndex + '~n~Surface: ' + _0x466056.surface, [0.5, 0.8], {
              'font': 0x4,
              'color': [0xff, 0xff, 0xff, 0xff],
              'scale': [0.5, 0.5]
            });
          }
        }), _0x314269.keys.bind(_0x10be4c.t.G, false, () => {
          if (!_0x466056.active) return false;

          const _0x1df6fb = _0x466056.editModes.indexOf('surface') + 0x1;

          _0x1df6fb + 0x1 > _0x466056.editModes.length ? _0x466056.editMode = _0x466056.editModes[0x0] : _0x466056.editMode = _0x466056.editModes[_0x1df6fb];
        });

        const _0x1443ed = _0xdecf9c => {
          let _0x84fad4 = _0x466056.modelIndex + _0xdecf9c;

          _0x84fad4 < 0x0 && (_0x84fad4 = 0x9), _0x84fad4 > 0x9 && (_0x84fad4 = 0x0), _0x11a54b(_0x84fad4);
        },
              _0x11a54b = _0x2ce11c => {
          _0x466056.modelIndex = _0x2ce11c, _0x466056.object.model = _0x314269.game.joaat('mj_billboard_' + _0x466056.modelIndex.toString().padStart(0x2, '0') + '_09');
        };

        _0x314269.keys.bind(_0x10be4c.t.ARROW_LEFT, false, () => {
          if (!_0x466056.active) return false;

          _0x1443ed(-0x1);
        }), _0x314269.keys.bind(_0x10be4c.t.ARROW_RIGHT, false, () => {
          if (!_0x466056.active) return false;

          _0x1443ed(0x1);
        }), _0x314269.keys.bind(_0x10be4c.t.L, false, () => {
          if (!_0x466056.active) return false;

          if (_0x466056.yaw = 0x0, _0x466056.surface = 0x0, !_0x466056.editBoard) {
            _0x466056.editBoard = _0x466056.focusedBoard;
            const _0x672805 = _0x2e7bc8.N[_0x466056.focusedBoard.id];
            return _0x672805 || _0x314269.game.entity.setAlpha(_0x466056.editBoard.object.handle, 0x0, 0x0), _0x11a54b((_0x672805 || _0x466056.editBoard).modelIndex), void (_0x672805 && _0x672805.instance && _0x672805.instance.currentObject && _0x314269.game.entity.setAlpha(_0x672805.instance.currentObject.handle, 0x0, 0x0));
          }

          const _0x179905 = _0x2e7bc8.N[_0x466056.editBoard.id];
          _0x179905 && _0x179905.instance && _0x179905.instance.currentObject && _0x314269.game.entity.setAlpha(_0x179905.instance.currentObject.handle, 0xff, 0x0), _0x179905 || _0x314269.game.entity.setAlpha(_0x466056.editBoard.object.handle, 0xff, 0x0);
        }), _0x314269.events.add('billboards.editor.updateItem', (_0x2e1feb, _0x2c4f81, _0x340fac, _0x4b3076) => {
          const _0x2eec22 = JSON.parse(_0x2c4f81),
                _0x21c20f = JSON.parse(_0x340fac),
                _0x5209e9 = _0x466056.boards.find(_0x195a94 => _0x195a94.id === _0x2e1feb);

          if (_0x5209e9.position = _0x2eec22, _0x5209e9.rotation = new _0x314269.Vector3(_0x21c20f.x, _0x21c20f.y, -0x1 * _0x21c20f.z), _0x5209e9.modelIndex = _0x4b3076, _0x2e7bc8.N[_0x2e1feb]) {
            const _0x582ef1 = _0x2e7bc8.N[_0x2e1feb];

            if (_0x582ef1.position = new _0x314269.Vector3(_0x2eec22.x, _0x2eec22.y, _0x2eec22.z), _0x582ef1.rotation = new _0x314269.Vector3(_0x21c20f.x, _0x21c20f.y, -0x1 * _0x21c20f.z), _0x582ef1.instance) {
              const _0x2b42de = _0x582ef1.instance.currentObject;
              _0x2b42de && (_0x531dbf.api.invokeNative('SET_ENTITY_COORDS_NO_OFFSET', _0x2b42de.handle, _0x582ef1.position.x + 0.000001, _0x582ef1.position.y + 0.000001, _0x582ef1.position.z + 0.000001, false, false, false), _0x531dbf.api.invokeNative('SET_ENTITY_ROTATION', _0x2b42de.handle, _0x582ef1.rotation.x + 0.000001, _0x582ef1.rotation.y + 0.000001, _0x582ef1.rotation.z + 0.000001, 0x2, true)), _0x582ef1.modelIndex = _0x4b3076, _0x582ef1.instance.setCurrentType(_0x582ef1.modelIndex);
            }
          } else _0x5209e9.object && _0x314269.objects.exists(_0x5209e9.object) && (_0x5209e9.object.model = _0x314269.game.joaat('mj_billboard_' + _0x4b3076.toString().padStart(0x2, '0') + '_09'), _0x5209e9.object.setCoordsNoOffset(_0x2eec22.x, _0x2eec22.y, _0x2eec22.z, false, false, false), _0x5209e9.object.setRotation(_0x21c20f.x, _0x21c20f.y, -0x1 * _0x21c20f.z, 0x2, true));
        }), _0x314269.events.add('billboards.editor.addNewItem', (_0x1be728, _0xb2e51d, _0x219fef, _0x50b8ce) => {
          const _0xdbe235 = JSON.parse(_0xb2e51d),
                _0x19eddf = JSON.parse(_0x219fef),
                _0x3fae6c = {
            'id': _0x1be728,
            'position': _0xdbe235,
            'rotation': new _0x314269.Vector3(_0x19eddf.x, _0x19eddf.y, -0x1 * _0x19eddf.z),
            'modelIndex': _0x50b8ce
          };

          _0x466056.boards.push(_0x3fae6c), _0x3f9532.addNewItem(_0x3fae6c);
        }), _0x3f9532.onEnter = _0x52d058 => {
          _0x2e7bc8.N[_0x52d058.id] || (_0x52d058.object = _0x314269.objects.new(_0x314269.game.joaat('mj_billboard_' + _0x52d058.modelIndex.toString().padStart(0x2, '0') + '_09'), _0x52d058.position, {
            'dimension': -0x1,
            'rotation': _0x52d058.rotation
          }));
        }, _0x3f9532.onExit = _0x1e242f => {
          _0x1e242f.object && _0x314269.objects.exists(_0x1e242f.object) && (_0x1e242f.object.destroy(), _0x1e242f.object = null);
        }, _0x314269.events.add('billboards.editor.setCoords', (_0x3db510, _0x131a1b, _0x184135) => {
          ((_0x5a0bcb, _0x442737, _0x137bd3) => {
            _0x437966.camera && (_0x437966.camera.setCoord(_0x5a0bcb, _0x442737, _0x137bd3), _0x268bd5.setCoordsNoOffset(_0x5a0bcb, _0x442737, _0x137bd3, false, false, false));
          })(_0x3db510, _0x131a1b, _0x184135);
        }), _0x314269.events.add('playerCommand', _0x53887f => {
          if (!_0x531dbf.api.isAdmin(_0x1e22ca)) return;

          const _0x282600 = _0x53887f.split(/[ ]+/),
                _0x151380 = _0x282600[0x0];

          if (_0x282600.shift(), 'startbe' === _0x151380) {
            if (_0x466056.active) return;
            _0x466056.yaw = 0x0, _0x466056.surface = 0x0, _0x466056.active = true, _0x19c75b(true), _0x466056.object = _0x314269.objects.new(_0x314269.game.joaat('mj_billboard_00_09'), _0x1e22ca.position, {
              'dimension': -0x1,
              'rotation': new _0x314269.Vector3(0x0, 0x0, 0x0)
            });
          } else {
            if ('stopbe' === _0x151380) {
              if (!_0x466056.active) return;
              _0x466056.active = false, _0x19c75b(false), _0x466056.object && _0x314269.objects.exists(_0x466056.object) && (_0x466056.object.destroy(), _0x466056.object = null);
            } else {
              if ('savebe' === _0x151380) {
                if (!_0x466056.active) return;

                if (_0x466056.yaw = 0x0, _0x466056.surface = 0x0, _0x466056.editBoard) {
                  const _0x4a17f9 = _0x2e7bc8.N[_0x466056.editBoard.id];

                  if (_0x4a17f9) {
                    if (_0x4a17f9.position = new _0x314269.Vector3(_0x466056.position.x, _0x466056.position.y, _0x466056.position.z), _0x4a17f9.rotation = new _0x314269.Vector3(_0x466056.normalRotation.x, _0x466056.normalRotation.y, -0x1 * _0x466056.heading), _0x4a17f9.instance) {
                      const _0x72669e = _0x4a17f9.instance.currentObject;
                      _0x72669e && _0x314269.game.entity.setAlpha(_0x72669e.handle, 0xff, 0x0);
                    }
                  } else _0x314269.objects.exists(_0x466056.editBoard.object) && _0x314269.game.entity.setAlpha(_0x466056.editBoard.object.handle, 0xff, 0x0);

                  return _0x314269.events.callRemote('2488905535', JSON.stringify(_0x466056.position), JSON.stringify({
                    'x': _0x466056.normalRotation.x,
                    'y': _0x466056.normalRotation.y,
                    'z': _0x466056.heading
                  }), _0x466056.modelIndex, _0x466056.editBoard.id), void (_0x466056.editBoard = null);
                }

                _0x314269.events.callRemote('2488905535', JSON.stringify(_0x466056.position), JSON.stringify(new _0x314269.Vector3(_0x466056.normalRotation.x, _0x466056.normalRotation.y, _0x466056.heading)), _0x466056.modelIndex), _0x11a54b(0x0);
              }
            }
          }
        });
      },
      0x92e0: (_0x5e0d1c, _0x15a5e6, _0x5c7181) => {
        'use strict';

        const a0_0x42482d = {
          _0x2eced3: 0x25e9,
          _0x3de624: 0x535,
          _0x3d1b78: 0xbb1,
          _0x5a7d9e: 0x145f,
          _0x25b12d: 0x19d2,
          _0xd1a9c1: 0x145f,
          _0x1494ca: 0x11f5,
          _0x5b4686: 0x1b61,
          _0x39bcab: 0x19d2,
          _0x19186e: 0x1b61,
          _0x1bfe67: 0x11f5,
          _0x3d852c: 0x981,
          _0x4def2c: 0x19d2,
          _0xa0d33d: 0xae7,
          _0x362208: 0x23ff,
          _0x427eb0: 0x922,
          _0x5f394c: 0x1dc0,
          _0x8eed6f: 0x1322,
          _0x31b923: 0x1322,
          _0x49f75a: 0x1dcf,
          _0x21ceaa: 0xd9e,
          _0x4ff7cc: 0x154f,
          _0x573964: 0x47f,
          _0x5f1480: 0x866
        },
              a0_0x506f12 = {
          _0x4955ce: 0x12dd,
          _0x2b6082: 0x535,
          _0x1eee3d: 0xf71,
          _0x3c2511: 0xd14,
          _0x4ff710: 0x145f,
          _0x13e845: 0x19d2,
          _0x28bb33: 0x145f,
          _0x172f3d: 0x535,
          _0x5bf07f: 0x11f5,
          _0x53caa8: 0x1b61,
          _0x264152: 0x1b61,
          _0xdbeffb: 0x210f,
          _0x2f6e70: 0x11f5,
          _0x3ab3fe: 0x981,
          _0x438438: 0x210f,
          _0x3b8b69: 0x981,
          _0x687269: 0x21e0,
          _0x761f5f: 0x18c1,
          _0x163e80: 0x76b,
          _0x329c8b: 0x8a0
        },
              a0_0x1fc7c5 = {
          _0x29b86d: 0x1858,
          _0x38e4f0: 0x14a8
        },
              a0_0x4e9064 = {
          _0x4d6b05: 0x21e0,
          _0xe2136b: 0x19d1
        },
              a0_0x12df1b = {
          _0x4234e8: 0x11f5,
          _0x42136a: 0x535,
          _0x9e8eaa: 0x12dd,
          _0x1f5f36: 0x22b2,
          _0x276720: 0x19d2,
          _0x5db336: 0x19d1,
          _0x2112c2: 0x1d2,
          _0x4b9365: 0x2488,
          _0x5b66ed: 0x1a3,
          _0x15cfdc: 0x17d0
        },
              a0_0x2530d6 = {
          _0x4a201a: 0x19e6,
          _0x25c5fd: 0x15ca
        },
              a0_0x233095 = {
          _0x2338ed: 0x82d,
          _0x27b521: 0x1816,
          _0x34c6b7: 0x1d66,
          _0x200ddf: 0x2379,
          _0x5f53ca: 0x513
        },
              a0_0x8f71ad = {
          _0x2c5bfe: 0xb0d,
          _0x3d424e: 0x11f5,
          _0x4432f3: 0xb0d,
          _0x2dde6d: 0x145f,
          _0x21e69f: 0x11f5,
          _0x527f25: 0x11f5,
          _0x48f3b9: 0x981
        };

        _0x5c7181.d(_0x15a5e6, {
          'N': () => _0x1a90f6
        });

        var _0x5e769a = _0x5c7181(0x1ff0),
            _0x4223ab = _0x5c7181(0x35c8),
            _0x457a75 = _0x5c7181.n(_0x4223ab),
            _0x27a755 = _0x5c7181(0x16a21),
            _0x2314f4 = _0x5c7181(0x161cd);

        const _0x2bf901 = class {
          constructor({
            id: _0x3df55a
          }) {
            this.id = _0x3df55a, this.header = '', this.title = '', this.description = '', this.footer = '', this.numericId = this.id.toString().padStart(0x2, '0'), this.currentType = 0x0, this.currentTypeNumeric = '00', this.model = _0x2314f4.game.joaat('mj_billboard_' + this.currentTypeNumeric + '_' + this.numericId), this.screenName = 'billboard_' + this.numericId, this.objectsHandle = {}, this.currentObject = null, this.textureLoaded = false, this.backgroundRgb = [0x0, 0x0, 0x0], this.backgroundColorActive = true, this.backgroundDict = 'mugshot_board_02', this.backgroundTexture = 'propboardbg', this.backgroundImageActive = false;
          }

          ['setMeta'](_0x4ae9a8) {
            this.header = 'string' == typeof _0x4ae9a8.header ? _0x4ae9a8.header : this.header, this.title = 'string' == typeof _0x4ae9a8.title ? _0x4ae9a8.title : this.title, this.description = 'string' == typeof _0x4ae9a8.description ? _0x4ae9a8.description : this.description, this.footer = 'string' == typeof _0x4ae9a8.footer ? _0x4ae9a8.footer : this.footer;
          }

          ['setBackgroundTexture'](_0x518b6c, _0xc09b53) {
            this.backgroundDict = _0x518b6c, this.backgroundTexture = _0xc09b53, this.textureLoaded = false;
          }

          ['toggleBackgroundTexture'](_0x3a91e7) {
            this.backgroundImageActive = _0x3a91e7;
          }

          ['setBackgroundColor'](_0x43a9df, _0x908eef, _0xc8db05) {
            this.backgroundRgb = [_0x43a9df, _0x908eef, _0xc8db05];
          }

          ['toggleBackgroundColor'](_0x444087) {
            this.backgroundColorActive = _0x444087;
          }

          ['setCurrentType'](_0x4a3c22) {
            this.currentTypeNumeric = _0x4a3c22.toString().padStart(0x2, '0'), this.model = _0x2314f4.game.joaat('mj_billboard_' + this.currentTypeNumeric + '_' + this.numericId), this.currentType = _0x4a3c22;
          }

          ['deleteObject']() {
            this.currentObject && _0x2314f4.objects.exists(this.currentObject) && (this.currentObject.destroy(), this.currentObject = null, this.skipFrame = true);
          }

          ['draw'](_0x5a8ed7 = this.position, _0x2aef9f = this.rotation, _0x44971f) {
            if (this.ready && (!this.backgroundImageActive || (this.textureLoaded || (_0x2314f4.game.graphics.requestStreamedTextureDict(this.backgroundDict, true), _0x2314f4.game.graphics.hasStreamedTextureDictLoaded(this.backgroundDict) && (this.textureLoaded = true)), this.textureLoaded))) {
              if (_0x2314f4.game.streaming.hasModelLoaded(this.model)) {
                if (this.skipFrame) this.skipFrame = false;else {
                  if (!this.currentObject) return this.currentObject = _0x2314f4.objects.new(this.model, _0x5a8ed7, {
                    'rotation': _0x2aef9f,
                    'dimension': -0x1
                  }), this.currentObject.setLodDist(0x3e8), void (this.skipFrame = true);
                  this.screenHandle || (this.screenHandle = _0x27a755.api.createNamedRenderTargetForModel(this.screenName, this.model)), _0x44971f && (_0x44971f.callFunction('SET_BOARD', this.header, this.description, this.footer, this.title, 0x2), _0x44971f.callFunction('CHANGE_BACKGROUND_COLOR', this.backgroundRgb[0x0], this.backgroundRgb[0x1], this.backgroundRgb[0x2]), _0x2314f4.game.ui.setTextRenderId(this.screenHandle), _0x2314f4.game.graphics.set2dLayer(0x4), _0x2314f4.game.graphics.setScriptGfxDrawBehindPausemenu(true), _0x2314f4.game.graphics.setScaleformFitRendertarget(_0x44971f.handle, true), _0x44971f.render2D(0.5, 0.5, 0x1, 0x1), _0x2314f4.game.ui.setTextRenderId(_0x2314f4.game.hud.getDefaultScriptRendertargetRenderId()));
                }
              } else _0x2314f4.game.streaming.requestModel(this.model);
            }
          }

        };

        var _0xbbd92e = _0x5c7181(0x1659b),
            _0x53d6cf = _0x5c7181(0x17d19),
            _0x57275f = _0x5c7181(0xd194),
            _0x3eb8ee = _0x5c7181(0x12a76),
            _0x4704e6 = _0x5c7181(0x161cd);

        _0x457a75().editorActive && _0x5c7181(0x5d96);

        const _0x171f54 = _0x4704e6.players.local,
              _0x4e484f = Date.now(),
              _0x8286c1 = new _0x53d6cf.Z({
          'dataItems': _0x5e769a,
          'chunkSize': 0x32,
          'distance': 0x15e,
          'positionResolver': _0x27b82b => _0x27b82b.position,
          'streamDelay': 0x1f4,
          'isCheck3d': false,
          'type': 'point'
        }),
              _0x1a90f6 = {};

        for (const _0x56afb0 of _0x5e769a) _0x1a90f6[_0x56afb0.id] = _0x56afb0;

        const _0x3d3126 = [];

        for (let _0x33549b = 0x0; _0x33549b < 0x10; _0x33549b++) {
          const _0x37b694 = new _0x57275f.Scaleform('mjbillboard_' + _0x33549b.toString().padStart(0x2, '0'));

          _0x37b694.callFunction('LOAD_IMAGE'), _0x37b694.callFunction('TOGGLE_BACKGROUND_COLOR', true), _0x3d3126.push(_0x37b694);
        }

        const _0x31d0ab = {
          'boardsInstances': [],
          'boards': new Map(),
          'queueBoards': [],
          'streamedBoards': new Set(),
          'newStreamedBoards': new Set(),
          'prevStreamedBoards': new Set(),
          'lastUpdateStream': _0x4e484f,
          'queueEnter': new Set(),
          'queueRequestHashes': new Set(),
          'browserLoaded': false,
          'boardsOnDisplayIds': [],
          'boardsOnDisplay': new Set()
        },
              _0x266fa9 = [{
          'backgroundDict': 'mugshot_board_02',
          'backgroundTexture': 'propboardbg',
          'backgroundRgb': [0x0, 0x0, 0x0],
          'backgroundColorActive': true,
          'backgroundTextureActive': false,
          'textColor': '#ffffff'
        }, {
          'backgroundDict': 'mugshot_board_02',
          'backgroundTexture': 'propboardbg',
          'backgroundRgb': [0xff, 0xff, 0xff],
          'backgroundColorActive': true,
          'backgroundTextureActive': false,
          'textColor': '#000000'
        }];

        _0x4704e6.events.add('vue.mounted', () => {
          _0x31d0ab.browserLoaded = true;
          const _0x4a9f6b = [];

          for (let _0x5e3b13 = 0x0; _0x5e3b13 < _0x266fa9.length; _0x5e3b13++) {
            const _0x4c8945 = _0x266fa9[_0x5e3b13],
                  _0x5e2594 = {
              'color': _0x4c8945.textColor
            };
            _0x4c8945.backgroundColorActive && (_0x5e2594.backgroundColor = 'rgb(' + _0x4c8945.backgroundRgb[0x0] + ', ' + _0x4c8945.backgroundRgb[0x1] + ', ' + _0x4c8945.backgroundRgb[0x2] + ')'), _0x4c8945.backgroundTextureActive && (_0x5e2594.backgroundImage = _0x4c8945.backgroundImage), _0x4a9f6b.push(_0x5e2594);
          }

          _0x3eb8ee.globalBrowser.emit('ipad_adv_loadStyles', _0x4a9f6b), _0x36b08d();
        });

        const _0x504f07 = _0x2c69ec => {
          const [_0x3ec4c0, _0x5713b0, _0x50e8f9, _0x885cf2, _0x4f0aa1] = _0x2c69ec.split('^'),
                _0x3cf85c = parseInt(_0x3ec4c0, 0x24),
                _0x156a9f = parseInt(_0x5713b0, 0x24),
                _0x4d8ad1 = parseInt(_0x50e8f9, 0x24),
                _0x4fc0e8 = parseInt(_0x4f0aa1, 0x24),
                [_0xb0fe47, _0x249d73, _0x102dc3] = _0x885cf2.split('*'),
                _0x57c900 = parseInt(_0xb0fe47, 0x24),
                _0x1bb298 = {
            'id': _0x3cf85c,
            'price': _0x156a9f,
            'dayCost': _0x4d8ad1,
            'state': _0x57c900,
            'updatedAt': _0x4fc0e8
          };

          return 0x0 === _0x57c900 ? _0x1bb298.type = 'free' : 0x1 === _0x57c900 ? (_0x1bb298.accountId = parseInt(_0x249d73, 0x24), _0x1bb298.owner = _0x102dc3, _0x171f54.getVariable('id') === _0x1bb298.accountId ? _0x1bb298.type = 'player-owner' : _0x1bb298.type = 'owner') : 0x2 === _0x57c900 && (_0x1bb298.type = 'auction'), _0x1bb298;
        },
              _0x567efa = _0x266649 => ({
          'id': _0x266649.id,
          'position': _0x266649.position,
          'type': _0x266649.info.type,
          'price': _0x266649.info.price,
          'dayCost': _0x266649.info.dayCost,
          'owner': _0x266649.info.owner,
          'accountId': _0x266649.info.accountId,
          'street': _0x27a755.api.escapeHtml(_0x27a755.api.getAddress(_0x266649.position.x, _0x266649.position.y, _0x266649.position.z))
        }),
              _0x36b08d = (_0x3ccd3e = _0x4704e6.world.data.boardsData) => {
          if (!_0x31d0ab.browserLoaded || 'string' != typeof _0x3ccd3e || !_0x3ccd3e.length || !_0x27a755.api.isAuthed()) return;

          const _0x27e544 = _0x3ccd3e.split('&').map(_0x4d8779 => _0x504f07(_0x4d8779)),
                _0x5e000a = [];

          for (let _0x2c0e1f = 0x0; _0x2c0e1f < _0x27e544.length; _0x2c0e1f++) {
            const _0x2588a8 = _0x27e544[_0x2c0e1f],
                  _0x3d8a87 = _0x5e769a.find(_0x1050b3 => _0x1050b3.id === _0x2588a8.id);

            _0x3d8a87.info = _0x2588a8, _0x5e000a.push(_0x567efa(_0x3d8a87));
          }

          _0x3eb8ee.globalBrowser.emit('ipad_adv_loadBillboards', _0x5e000a);
        };

        _0x4704e6.events.add('worldDataReady', () => {
          _0x36b08d();
        }), _0x4704e6.events.add('worldDataChanged', (_0x1a8339, _0x1068e6) => {
          'boardsData' === _0x1a8339 && _0x36b08d(_0x1068e6);
        }), _0x4704e6.events.add('setIsAuthed', () => {
          _0x36b08d();
        }), _0x4704e6.events.add('billboards.updateBoardInfo', (_0x4f1afa, _0x3add45) => {
          const _0x3bb741 = _0x504f07(_0x3add45),
                _0x4372dd = _0x5e769a.find(_0x2be6dd => _0x4f1afa === _0x2be6dd.id);

          _0x4372dd.info = _0x3bb741, _0x3eb8ee.globalBrowser.emit('ipad_adv_updateBoard', {
            'boardId': _0x4f1afa,
            'data': _0x567efa(_0x4372dd)
          });
        });

        for (let _0x32e3bd = 0x0; _0x32e3bd < 0x1e; _0x32e3bd++) {
          const _0x50b6da = new _0x2bf901({
            'id': _0x32e3bd
          });

          _0x31d0ab.boardsInstances.push(_0x50b6da);
        }

        for (const _0x45ce5f of _0x5e769a) _0x45ce5f.data = {}, _0x45ce5f.rotation = new _0x4704e6.Vector3(_0x45ce5f.rotation.x, _0x45ce5f.rotation.y, -0x1 * _0x45ce5f.rotation.z);

        const _0x2f619b = (0x0, _0xbbd92e.D)(() => {
          _0x31d0ab.queueRequestHashes.size && (_0x4704e6.events.callRemote('1990153291', [..._0x31d0ab.queueRequestHashes].join('&')), _0x31d0ab.queueRequestHashes.clear());
        }, 0x1f4);

        _0x4704e6.events.add('billboards.receiveData', _0x1ac213 => {
          const _0x533aa = _0x1ac213.split('&');

          for (let _0x5c7702 = 0x0; _0x5c7702 < _0x533aa.length; _0x5c7702++) {
            const _0x344cae = _0x533aa[_0x5c7702],
                  [_0x191958, _0xeac6cc, _0x58a483, _0x50bd49, _0x12395c, _0x4920c0] = _0x344cae.split('^'),
                  _0x45f672 = parseInt(_0x191958),
                  _0x4e8995 = {
              'title': _0xeac6cc,
              'description': _0x58a483,
              'footer': _0x50bd49,
              'tint': parseInt(_0x12395c),
              'tintStr': _0x12395c
            };

            _0x27a755.api.getPlayerSetting('streamerMode') && ('string' == typeof _0x4e8995.title && _0x4e8995.title.length && (_0x4e8995.title = _0x27a755.api.replaceTwitchWords(_0x4e8995.title)), 'string' == typeof _0x4e8995.description && _0x4e8995.description.length && (_0x4e8995.description = _0x27a755.api.replaceTwitchWords(_0x4e8995.description)), 'string' == typeof _0x4e8995.footer && _0x4e8995.footer.length && (_0x4e8995.footer = _0x27a755.api.replaceTwitchWords(_0x4e8995.footer)));

            const _0x10349a = _0x5e769a.find(_0xd1bdd9 => _0xd1bdd9.id === _0x45f672);

            _0x10349a && (_0x10349a.data = _0x4e8995, _0x10349a.dataHash = _0x4920c0, _0x10349a.instance && _0x3463be(_0x10349a.instance, false));
          }
        });

        const _0x236ae4 = _0x1a5da7 => {
          const _0x24f461 = [_0x1a5da7.id];
          return _0x1a5da7.dataHash && _0x24f461.push(_0x1a5da7.dataHash), _0x24f461.join('^');
        };

        (0x0, _0xbbd92e.D)(() => {
          const _0x58768f = _0x171f54.position,
                _0x422a2b = [..._0x8286c1.currentItems].map(_0x492a73 => ({
            'boardData': _0x492a73,
            'distance': _0x27a755.api.vdist2(_0x58768f, _0x492a73.position)
          })).sort((_0x5e23a4, _0x4d4ef7) => _0x5e23a4.distance - _0x4d4ef7.distance),
                _0x2ce7af = [];

          for (let _0x1cfcd0 = 0x0; _0x1cfcd0 < Math.min(_0x422a2b.length, 0x1e); _0x1cfcd0++) {
            const {
              boardData: _0x23f1d2
            } = _0x422a2b[_0x1cfcd0];
            _0x23f1d2.instance = _0x31d0ab.boardsInstances[_0x1cfcd0], _0x23f1d2.instance.boardData = _0x23f1d2, _0x3463be(_0x23f1d2.instance), _0x2ce7af.push(_0x23f1d2);
          }

          for (let _0x1eca13 = 0x0; _0x1eca13 < _0x31d0ab.boardsInstances.length; _0x1eca13++) {
            const _0x5ddce1 = _0x31d0ab.boardsInstances[_0x1eca13];
            _0x2ce7af.includes(_0x5ddce1.boardData) || (_0x5ddce1.boardData && (_0x5ddce1.boardData.instance = null), _0x5ddce1.boardData = null);
          }

          for (let _0xd97709 = 0x0; _0xd97709 < _0x422a2b.length; _0xd97709++) {
            const {
              boardData: _0x5ba601
            } = _0x422a2b[_0xd97709];
            _0x2ce7af.includes(_0x5ba601) || (_0x5ba601.instance && (_0x5ba601.instance.boardData = null), _0x5ba601.instance = null);
          }
        }, 0x1f4), (_0x8286c1.onEnter = _0x2cd756 => {
          const _0x4f989a = _0x236ae4(_0x2cd756);

          _0x31d0ab.queueRequestHashes.add(_0x4f989a), _0x2f619b();

          for (let _0x3084aa = 0x0; _0x3084aa < _0x31d0ab.boardsInstances.length; _0x3084aa++) {
            const _0x1e79d0 = _0x31d0ab.boardsInstances[_0x3084aa];

            if (!_0x1e79d0.boardData) {
              _0x1e79d0.boardData = _0x2cd756, _0x1e79d0.ready = false, _0x2cd756.instance = _0x1e79d0, _0x3463be(_0x1e79d0);
              break;
            }
          }
        }, _0x8286c1.onExit = _0x1ebf7f => {
          const _0x511867 = _0x236ae4(_0x1ebf7f);

          _0x31d0ab.queueRequestHashes.has(_0x511867) && _0x31d0ab.queueRequestHashes.delete(_0x511867), _0x1ebf7f.instance && (_0x1ebf7f.instance.deleteObject(), _0x1ebf7f.instance.boardData = null, _0x1ebf7f.instance = null);
        });

        const _0x3463be = (_0x3d7a34, _0x4bf170 = true) => {
          if (!_0x3d7a34.boardData) return;
          const _0x1e212a = _0x3d7a34.boardData,
                {
            data: _0xc1b5a7
          } = _0x1e212a,
                _0x5e99cc = {
            'header': _0x27a755.api.language.translatePlayer('property.billboards.boardId', {
              'id': _0x1e212a.id
            }),
            'title': '',
            'description': '',
            'footer': ''
          };
          'string' == typeof _0xc1b5a7.title && _0xc1b5a7.title.length && (_0x5e99cc.title = _0xc1b5a7.title), 'string' == typeof _0xc1b5a7.description && _0xc1b5a7.description.length && (_0x5e99cc.description = _0xc1b5a7.description), 'string' == typeof _0xc1b5a7.footer && _0xc1b5a7.footer.length && (_0x5e99cc.footer = _0xc1b5a7.footer);
          let _0x1c05e9 = 0x0;
          !isNaN(_0xc1b5a7.tint) && 'number' == typeof _0xc1b5a7.tint && _0x266fa9[_0xc1b5a7.tint] && (_0x1c05e9 = _0xc1b5a7.tint);
          const _0x508b7 = _0x266fa9[_0x1c05e9];

          if (_0x3d7a34.setBackgroundTexture(_0x508b7.backgroundDict, _0x508b7.backgroundTexture), _0x3d7a34.toggleBackgroundTexture(_0x508b7.backgroundTextureActive), _0x508b7.backgroundRgb && _0x3d7a34.setBackgroundColor(_0x508b7.backgroundRgb[0x0], _0x508b7.backgroundRgb[0x1], _0x508b7.backgroundRgb[0x2]), _0x3d7a34.toggleBackgroundColor(_0x508b7.backgroundColorActive), 'string' == typeof _0x508b7.textColor) {
            for (const _0x124614 in _0x5e99cc) _0x5e99cc[_0x124614] = '<font color="' + _0x508b7.textColor + '">' + _0x5e99cc[_0x124614] + '</font>';
          }

          _0x3d7a34.setMeta(_0x5e99cc), _0x3d7a34.setCurrentType(_0x1e212a.modelIndex), _0x3d7a34.ready = true;
        };

        _0x4704e6.events.add('render', () => {
          if (!_0x27a755.api.isAuthed()) return;

          _0x8286c1.update();

          const _0x4cd550 = new Set();

          for (const _0x54469f of _0x31d0ab.boardsInstances) _0x54469f.boardData && _0x4cd550.add(_0x54469f.boardData);

          if (!_0x8286c1.currentItems.size) return;
          const _0x4b0c2d = [],
                _0x1b80ac = _0x171f54.position;

          for (let _0x4823d8 = 0x0; _0x4823d8 < _0x31d0ab.boardsInstances.length; _0x4823d8++) {
            const _0x1dc727 = _0x31d0ab.boardsInstances[_0x4823d8];
            if (!_0x1dc727.boardData) continue;

            const _0x420fe6 = _0x1dc727.boardData,
                  _0x1e09e5 = _0x27a755.api.vdist2(_0x1b80ac, _0x420fe6.position);

            _0x4b0c2d.push([_0x1dc727, _0x1e09e5]);
          }

          _0x4b0c2d.sort((_0x16a1f7, _0x65d685) => _0x16a1f7[0x1] - _0x65d685[0x1]);

          for (let _0x16045a = 0x0; _0x16045a < Math.min(_0x4b0c2d.length, 0x10); _0x16045a++) {
            const [_0x2a1c1b] = _0x4b0c2d[_0x16045a],
                  _0x46fb29 = _0x3d3126[_0x16045a],
                  _0x3bc14b = _0x2a1c1b.boardData;

            _0x2a1c1b.draw(_0x3bc14b.position, _0x3bc14b.rotation, _0x46fb29);
          }
        });
      },
      0x91cb: (_0x3c5b26, _0x43773c, _0x1d3f0f) => {
        'use strict';

        const a0_0x463dbd = {
          _0x3757f8: 0x1eaa,
          _0x520bd7: 0xdc0,
          _0x4f3aed: 0x1aab,
          _0x13734e: 0x2405,
          _0x558ea6: 0x1ee9,
          _0x27697d: 0x1eaa,
          _0x5e586b: 0xdc0,
          _0xc25a6c: 0xe8f,
          _0x5cfe9b: 0x18a5,
          _0x238662: 0x85c,
          _0x2c4e6a: 0x1d55,
          _0xd8f30c: 0x17b9,
          _0x12a743: 0x5a0,
          _0x274899: 0x145f,
          _0x19cd8f: 0x22ba,
          _0x5430d1: 0x1d55,
          _0x213c25: 0x17b9,
          _0x586b8b: 0x1ee9
        };

        _0x1d3f0f.r(_0x43773c);

        var _0x1ad6ff = _0x1d3f0f(0x18388),
            _0x31fc9e = _0x1d3f0f(0xb274),
            _0x4b2c33 = _0x1d3f0f(0x161cd);

        _0x1d3f0f.g.ammo_shops = {}, _0x1d3f0f.g.propertyTypes.push('ammo_shops'), _0x1ad6ff.Z.forEach(_0x9b1e2f => {
          _0x1d3f0f.g.ammo_shops[_0x9b1e2f.id] = _0x9b1e2f, _0x1d3f0f.g.ammo_shops[_0x9b1e2f.id].propertyColshape = _0x4b2c33.colshapes.newSphere(parseFloat(_0x9b1e2f.posX), parseFloat(_0x9b1e2f.posY), parseFloat(_0x9b1e2f.posZ), 0x1, 0x0), _0x1d3f0f.g.ammo_shops[_0x9b1e2f.id].propertyColshape.key = _0x9b1e2f.id, _0x1d3f0f.g.ammo_shops[_0x9b1e2f.id].propertyColshape.tableName = 'ammo_shops', _0x1d3f0f.g.ammo_shops[_0x9b1e2f.id].label = _0x4b2c33.labels.new('labels.bizTitle', new _0x4b2c33.Vector3(parseFloat(_0x9b1e2f.posX), parseFloat(_0x9b1e2f.posY), parseFloat(_0x9b1e2f.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0x31fc9e.markAsTranslatedLabel)(_0x1d3f0f.g.ammo_shops[_0x9b1e2f.id].label, 'labels.bizTitle', {
            'title': _0x9b1e2f.title,
            'id': _0x9b1e2f.id
          }), _0x1d3f0f.g.ammo_shops[_0x9b1e2f.id].marker = _0x4b2c33.markers.new(0x1d, new _0x4b2c33.Vector3(parseFloat(_0x9b1e2f.posX), parseFloat(_0x9b1e2f.posY), parseFloat(_0x9b1e2f.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          });
        });
      },
      0x1767f: (_0x4f0336, _0x31327e, _0x341650) => {
        'use strict';

        const a0_0x171c0e = {
          _0x4aeaca: 0xe6d,
          _0x3b92b9: 0x1d66,
          _0x4a51f5: 0x15e0,
          _0x377d7f: 0x140a,
          _0x1e3e56: 0x1151,
          _0x1deba0: 0x1a7c,
          _0x117b31: 0x535,
          _0x5136eb: 0x1289
        },
              a0_0x7856f3 = {
          _0x440eb4: 0x1d66,
          _0x233261: 0x15e0,
          _0x44cc06: 0x140a,
          _0x2e672f: 0x815
        },
              a0_0x55de4b = {
          _0x1ad1e1: 0x15e0,
          _0x3fb9f5: 0x140a,
          _0x5d8b8e: 0x1d66
        };

        _0x341650.r(_0x31327e);

        var _0x4da9ce = _0x341650(0x16a21),
            _0x19f4dd = _0x341650(0x96d1),
            _0x26e302 = _0x341650.n(_0x19f4dd),
            _0x33c15 = _0x341650(0x5d14),
            _0x161ba6 = _0x341650(0x161cd);

        const _0xea7d8c = _0x161ba6.players.local,
              _0x32228f = ['apa_v_mp_h_01_b', 'apa_v_mp_h_02_b', 'apa_v_mp_h_03_b', 'apa_v_mp_h_04_b', 'apa_v_mp_h_05_b', 'apa_v_mp_h_06_b', 'apa_v_mp_h_07_b', 'apa_v_mp_h_08_b'];

        let _0x51ee98, _0x39a08b, _0x122793, _0x33acc2, _0x111bfd, _0x2ef904, _0x411f6b, _0x21ef71, _0x46d4f4, _0x4a2f32, _0x7c844, _0x315404, _0x296241;

        _0x341650.g.apartments = {}, _0x26e302() && Object.keys(_0x26e302()).forEach(_0x3b8852 => {
          const _0x408b2b = _0x26e302()[_0x3b8852];

          _0x341650.g.apartments[_0x3b8852] = _0x408b2b, _0x341650.g.apartments[_0x3b8852].colshape = _0x161ba6.colshapes.newCircle(_0x408b2b.shapeX, _0x408b2b.shapeY, 0x3, 0x0), _0x341650.g.apartments[_0x3b8852].colshape.pos = new _0x161ba6.Vector3(_0x408b2b.shapeX, _0x408b2b.shapeY, _0x408b2b.shapeZ), _0x341650.g.apartments[_0x3b8852].colshape.key = _0x3b8852, _0x341650.g.apartments[_0x3b8852].colshape.tableName = 'apartments', _0x341650.g.apartments[_0x3b8852].marker = _0x161ba6.markers.new(0x1, new _0x161ba6.Vector3(_0x408b2b.shapeX, _0x408b2b.shapeY, _0x408b2b.shapeZ - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': 0x0
          });
        }), _0x161ba6.events.add('apartments.init', async (_0x1f3b6c, _0x599d8c, _0x829517, _0x364983, _0x3612cd, _0x3f1a19, _0x35c2a1, _0x2bf0ad, _0x5bee34, _0x172bda, _0x38d0a0, _0x45bdbf, _0x33d3f7, _0x51c583, _0x184d86, _0x1315d8) => {
          null != _0x1315d8 && (_0x32228f.forEach(_0x48753c => {
            _0x161ba6.game.streaming.isIplActive(_0x48753c) && _0x161ba6.game.streaming.removeIpl(_0x48753c);
          }), _0x161ba6.game.streaming.isIplActive(_0x1315d8) || _0x161ba6.game.streaming.requestIpl(_0x1315d8)), _0x161ba6.colshapes.exists(_0x51ee98) && _0x51ee98.destroy(), _0x161ba6.markers.exists(_0x39a08b) && _0x39a08b.destroy(), _0x161ba6.colshapes.exists(_0x122793) && _0x122793.destroy(), _0x161ba6.markers.exists(_0x33acc2) && _0x33acc2.destroy(), _0x161ba6.colshapes.exists(_0x111bfd) && _0x111bfd.destroy(), _0x161ba6.markers.exists(_0x2ef904) && _0x2ef904.destroy(), _0x161ba6.colshapes.exists(_0x411f6b) && _0x411f6b.destroy(), _0x161ba6.markers.exists(_0x21ef71) && _0x21ef71.destroy(), _0x161ba6.objects.exists(_0x46d4f4) && _0x46d4f4.destroy(), _0x161ba6.objects.exists(_0x4a2f32) && _0x4a2f32.destroy(), _0x51ee98 = _0x161ba6.colshapes.newSphere(_0x1f3b6c, _0x599d8c, _0x829517, 0x1, -0x1), _0x39a08b = _0x161ba6.markers.new(0x1, new _0x161ba6.Vector3(_0x1f3b6c, _0x599d8c, _0x829517 - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          }), _0x122793 = _0x161ba6.colshapes.newSphere(_0x364983, _0x3612cd, _0x3f1a19, 0x1, -0x1), _0x33acc2 = _0x161ba6.markers.new(0x1, new _0x161ba6.Vector3(_0x364983, _0x3612cd, _0x3f1a19 - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          }), _0x111bfd = _0x161ba6.colshapes.newSphere(_0x35c2a1, _0x2bf0ad, _0x5bee34, 0x1, -0x1), _0x2ef904 = _0x161ba6.markers.new(0x1, new _0x161ba6.Vector3(_0x35c2a1, _0x2bf0ad, _0x5bee34 - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0xff],
            'dimension': -0x1
          });

          const _0x4087b6 = _0x161ba6.game.object.getObjectOffsetFromCoords(_0x172bda, _0x38d0a0, _0x45bdbf, _0x33d3f7, -0.2, -0.6, 0x0);

          _0x46d4f4 = _0x161ba6.objects.new(_0x161ba6.game.joaat('ch_prop_ch_arcade_safe_body'), new _0x161ba6.Vector3(_0x172bda, _0x38d0a0, _0x45bdbf), {
            'rotation': new _0x161ba6.Vector3(0x0, 0x0, _0x33d3f7),
            'dimension': -0x1
          }), _0x4a2f32 = _0x161ba6.objects.new(_0x161ba6.game.joaat('ch_prop_ch_arcade_safe_door'), new _0x161ba6.Vector3(_0x172bda, _0x38d0a0, _0x45bdbf), {
            'rotation': new _0x161ba6.Vector3(0x0, 0x0, _0x33d3f7),
            'dimension': -0x1
          }), _0x411f6b = _0x161ba6.colshapes.newSphere(_0x4087b6.x, _0x4087b6.y, _0x4087b6.z + 0.5, 0x1, -0x1), _0x21ef71 = _0x161ba6.markers.new(0x1, new _0x161ba6.Vector3(_0x4087b6.x, _0x4087b6.y, _0x4087b6.z), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x64],
            'dimension': -0x1
          }), _0x7c844 = _0x51c583, _0x315404 = _0x184d86, _0x161ba6.events.call('interiors.houses.enteredIn', 'apartments', _0x184d86);
        }), _0x161ba6.events.add('apartments.taskEnter', async (_0xdbb6e2, _0xb4141c, _0x284152, _0x2b8b35, _0x2de07b, _0x244a09) => {
          null != _0x2b8b35 && (_0x32228f.forEach(_0x540127 => {
            _0x161ba6.game.streaming.isIplActive(_0x540127) && _0x161ba6.game.streaming.removeIpl(_0x540127);
          }), _0x161ba6.game.streaming.isIplActive(_0x2b8b35) || _0x161ba6.game.streaming.requestIpl(_0x2b8b35));

          try {
            null != _0x2b8b35 && (await _0x4da9ce.api.waitForIpl(_0x2b8b35));
          } catch (_0x409b4f) {
            _0x4da9ce.api.sendError(_0x409b4f);
          }

          _0x4da9ce.api.setPlayerPos(_0xea7d8c, new _0x161ba6.Vector3(_0xdbb6e2, _0xb4141c, _0x284152)), null == _0x2de07b || isNaN(_0x244a09) || _0x161ba6.events.call('interiors.houses.setTv', _0x2de07b, _0x244a09);
        }), _0x161ba6.events.add('apartments.toggleSafeDoor', (_0x4bc0a7, _0x2fd2c4 = false, _0x5ca78c = 0x1) => {
          _0x161ba6.objects.exists(_0x4a2f32) && (_0x2fd2c4 ? (_0x4a2f32.rotation = new _0x161ba6.Vector3(0x0, 0x0, _0x4bc0a7 + 0x5a), _0x161ba6.events.call('api.play3DSoundEntity', _0x33c15.u.natural(), 'safe/safe_door_open' + _0x5ca78c, _0x4a2f32, {
            'volume': 0x64
          })) : (_0x4a2f32.rotation = new _0x161ba6.Vector3(0x0, 0x0, _0x4bc0a7), _0x161ba6.events.call('api.play3DSoundEntity', _0x33c15.u.natural(), 'safe/safe_door_close', _0x4a2f32, {
            'volume': 0x64
          })));
        }), _0x161ba6.events.add('playerEnterColshape', _0x139111 => {
          _0x4da9ce.api.isAuthed() && (_0x139111.pos && Math.abs(_0x139111.pos.z - _0xea7d8c.position.z) > 0x2 || (_0x139111 == _0x51ee98 ? (_0x296241 = _0x139111, _0x4da9ce.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : _0x139111 == _0x122793 ? (_0x296241 = _0x139111, _0x4da9ce.api.displayHelpStringTrans('displayHelpString.lookInWarehouse', false, true, 0x1388)) : _0x139111 == _0x111bfd ? (_0x296241 = _0x139111, _0x4da9ce.api.displayHelpStringTrans('displayHelpString.loonInFridge', false, true, 0x1388)) : _0x139111 == _0x411f6b && (_0x296241 = _0x139111, _0x4da9ce.api.displayHelpStringTrans('displayHelpString.toOpenSafe', false, true, 0x1388))));
        }), _0x161ba6.events.add('playerExitColshape', _0x21a1f4 => {
          _0x4da9ce.api.isAuthed() && _0x161ba6.colshapes.exists(_0x21a1f4) && (_0x21a1f4 == _0x51ee98 ? (_0x296241 = null, _0x161ba6.game.ui.clearHelp(true)) : _0x21a1f4 == _0x122793 ? (_0x296241 = null, _0x161ba6.game.ui.clearHelp(true), _0x161ba6.events.call('warehouse.close')) : _0x21a1f4 == _0x111bfd ? (_0x296241 = null, _0x161ba6.game.ui.clearHelp(true), _0x161ba6.events.call('inventoryApi.close')) : _0x21a1f4 == _0x411f6b && (_0x296241 = null, _0x161ba6.events.call('safe.close'), _0x161ba6.game.ui.clearHelp(true)));
        }), _0x161ba6.events.add('keys.e', async () => _0x296241 && _0x51ee98 && _0x296241.id == _0x51ee98.id ? (_0x161ba6.game.ui.clearHelp(true), _0x296241 = null, _0x4da9ce.api.setPlayerPos(_0xea7d8c, new _0x161ba6.Vector3(_0x26e302()[_0x7c844].shapeX, _0x26e302()[_0x7c844].shapeY, _0x26e302()[_0x7c844].shapeZ)), _0x161ba6.events.callRemote('3702382805', 0x0), _0x51ee98 = _0x51ee98.destroy(), _0x39a08b = _0x39a08b.destroy(), _0x161ba6.events.callRemote('3965461798'), _0x32228f.forEach(_0x144728 => {
          _0x161ba6.game.streaming.isIplActive(_0x144728) && _0x161ba6.game.streaming.removeIpl(_0x144728);
        }), void (_0x7c844 = null)) : _0x296241 && _0x122793 && _0x296241.id === _0x122793.id ? (_0x161ba6.game.ui.clearHelp(true), _0x161ba6.events.call('inventoryApi.init', null, parseInt(_0x315404)), void (_0x296241 = false)) : _0x296241 && _0x111bfd && _0x296241.id === _0x111bfd.id ? (_0x161ba6.game.ui.clearHelp(true), _0x161ba6.events.call('inventoryApi.init', null, parseInt(_0x315404), true), void (_0x296241 = false)) : _0x296241 && _0x411f6b && _0x296241.id === _0x411f6b.id ? (_0x161ba6.game.ui.clearHelp(true), _0x161ba6.events.call('safe.init', 'apartments', parseInt(_0x315404)), void (_0x296241 = false)) : undefined);
        const _0x4ed910 = {
          0x1: ['apa_ss1_11_flats', 'ss1_11_ss1_emissive_a', 'ss1_11_detail01b', 'ss1_11_Flats_LOD', 'SS1_LOD_01_02_08_09_10_11', 'SS1_02_SLOD1'],
          0x6: ['hei_dt1_20_build2', 'dt1_20_dt1_emissive_dt1_20'],
          0x3: ['sm_14_emissive', 'hei_sm_14_bld2'],
          0x2: ['hei_dt1_03_build1x', 'DT1_Emissive_DT1_03_b1', 'dt1_03_dt1_Emissive_b1'],
          0x4: ['hei_bh1_08_bld2', 'bh1_emissive_bh1_08', 'bh1_08_bld2_LOD', 'hei_bh1_08_bld2', 'bh1_08_em'],
          0x5: ['apa_ss1_02_building01', 'SS1_Emissive_SS1_02a_LOD', 'ss1_02_ss1_emissive_ss1_02']
        };

        _0x161ba6.events.add('render', () => {
          const a0_0x18caac = {
            _0x234082: 0x1d66
          };
          if (isNaN(_0x7c844)) return;
          const _0x5bf908 = _0x4ed910[_0x7c844];
          _0x5bf908 && (_0x4da9ce.api.invokeNative('N_0x4b5cfc83122df602'), _0x5bf908.forEach(_0x1cdd71 => {
            _0x161ba6.game.interior.hideMapObjectThisFrame(_0x161ba6.game.joaat(_0x1cdd71));
          }), _0x4da9ce.api.invokeNative('DISABLE_OCCLUSION_THIS_FRAME'));
        });
      },
      0xb83b: (_0x24c09c, _0x5f51e0, _0x4dab4a) => {
        'use strict';

        const a0_0x111dbf = {
          _0x1d6ef8: 0x535,
          _0xc08642: 0x253d,
          _0x304e6e: 0x265,
          _0x4025b0: 0x1edc,
          _0x4572b8: 0xf86
        },
              a0_0x54db12 = {
          _0x10d0a5: 0x11d9,
          _0x599314: 0x24bc,
          _0x51cd54: 0x265,
          _0x103c43: 0x1d66,
          _0x51760f: 0x1a60,
          _0x400bf0: 0x535,
          _0x356c96: 0x535,
          _0x53f080: 0xfba
        },
              a0_0x3bd2b8 = {
          _0xad5ca: 0x265,
          _0xdcda0b: 0xdc0,
          _0x194926: 0x11ba,
          _0x1d92c5: 0xec6,
          _0x14010d: 0x7ee,
          _0x10f983: 0xdc0,
          _0x8bb07d: 0x265,
          _0x2c4b0e: 0xf82,
          _0xc701: 0x1d55,
          _0x163857: 0x5a0,
          _0x11edbc: 0xe8f,
          _0x7aff25: 0x145f,
          _0x2344b1: 0xda6,
          _0x12e699: 0x1d55,
          _0x53caec: 0x11ba,
          _0x445870: 0x7c2,
          _0x493572: 0x2348,
          _0x36e67f: 0x1aab,
          _0x4a65e1: 0x2405,
          _0x574f44: 0x239e,
          _0x367152: 0xacd,
          _0x3fb261: 0x1a60,
          _0x4b9ad3: 0x265,
          _0x18c770: 0x1bee,
          _0x55551f: 0xda6,
          _0x21133d: 0xacd
        };

        _0x4dab4a.r(_0x5f51e0);

        var _0x531914 = _0x4dab4a(0x16a21),
            _0x14f4b8 = _0x4dab4a(0xccab),
            _0xd5e0c2 = _0x4dab4a(0xb274),
            _0x363ebd = _0x4dab4a(0x161cd);

        let _0x8dfc80 = false,
            _0x24f3dd = false;
        _0x4dab4a.g.auto_shops = {}, _0x4dab4a.g.propertyTypes.push('auto_shops'), _0x14f4b8.I9.forEach(_0x444bc5 => {
          _0x4dab4a.g.auto_shops[_0x444bc5.id] = _0x444bc5, _0x4dab4a.g.auto_shops[_0x444bc5.id].propertyColshape = _0x363ebd.colshapes.newSphere(parseFloat(_0x444bc5.bizPosX), parseFloat(_0x444bc5.bizPosY), parseFloat(_0x444bc5.bizPosZ), 0x1, 0x0), _0x4dab4a.g.auto_shops[_0x444bc5.id].propertyColshape.key = _0x444bc5.id, _0x4dab4a.g.auto_shops[_0x444bc5.id].propertyColshape.tableName = 'auto_shops', _0x4dab4a.g.auto_shops[_0x444bc5.id].label = _0x363ebd.labels.new('labels.bizTitle', new _0x363ebd.Vector3(parseFloat(_0x444bc5.bizPosX), parseFloat(_0x444bc5.bizPosY), parseFloat(_0x444bc5.bizPosZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0xd5e0c2.markAsTranslatedLabel)(_0x4dab4a.g.auto_shops[_0x444bc5.id].label, 'labels.bizTitle', {
            'title': _0x444bc5.title,
            'id': _0x444bc5.id
          }), _0x4dab4a.g.auto_shops[_0x444bc5.id].marker = _0x363ebd.markers.new(0x1d, new _0x363ebd.Vector3(parseFloat(_0x444bc5.bizPosX), parseFloat(_0x444bc5.bizPosY), parseFloat(_0x444bc5.bizPosZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          }), _0x444bc5.pickupX && (_0x4dab4a.g.auto_shops[_0x444bc5.id].colshape = _0x363ebd.colshapes.newSphere(parseFloat(_0x444bc5.pickupX), parseFloat(_0x444bc5.pickupY), parseFloat(_0x444bc5.pickupZ), 0x1, 0x0), _0x4dab4a.g.auto_shops[_0x444bc5.id].colshape.key = _0x444bc5.id, _0x4dab4a.g.auto_shops[_0x444bc5.id].colshape.tableName = 'auto_shops', _0x4dab4a.g.auto_shops[_0x444bc5.id].colshape.pickup = true, _0x4dab4a.g.auto_shops[_0x444bc5.id].enterMarker = _0x363ebd.markers.new(0x1, new _0x363ebd.Vector3(parseFloat(_0x444bc5.pickupX), parseFloat(_0x444bc5.pickupY), parseFloat(_0x444bc5.pickupZ) - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x64],
            'visible': true,
            'dimension': 0x0
          }));
        }), _0x363ebd.events.add('keys.e', () => {
          if (!(_0x24f3dd || _0x4dab4a.g.currentInterface || _0x531914.api.isUsingSystemAnim())) return Object.keys(_0x4dab4a.g.auto_shops).map(_0x240ff1 => _0x4dab4a.g.auto_shops[_0x240ff1].colshape).includes(_0x8dfc80) ? (_0x363ebd.game.ui.clearHelp(true), _0x363ebd.events.callRemote('3111325406', _0x8dfc80.key), _0x531914.api.playPedSpeech(_0x531914.api.getNearestPed().id), _0x8dfc80 = false, void (_0x24f3dd = true)) : undefined;
        }), _0x363ebd.events.add('autoshopAPI.show', () => {
          _0x24f3dd = false;
        }), _0x363ebd.events.add('playerEnterColshape', _0x51a683 => {
          _0x531914.api.isAuthed() && Object.keys(_0x4dab4a.g.auto_shops).map(_0x22214b => _0x4dab4a.g.auto_shops[_0x22214b].colshape).includes(_0x51a683) && (_0x8dfc80 = _0x51a683, _0x531914.api.displayHelpStringTrans('displayHelpString.toCheckVehicle', false, true, 0x1388));
        }), _0x363ebd.events.add('playerExitColshape', _0x2c6421 => {
          _0x531914.api.isAuthed() && Object.keys(_0x4dab4a.g.auto_shops).map(_0x526f7d => _0x4dab4a.g.auto_shops[_0x526f7d].colshape).includes(_0x2c6421) && (_0x8dfc80 = null, _0x24f3dd = false, _0x363ebd.game.ui.clearHelp(true));
        });
      },
      0x3012: (_0x3ba553, _0x46043f, _0x654c6e) => {
        'use strict';

        const a0_0x5ccbb2 = {
          _0x4a1718: 0x12a6,
          _0x12a631: 0x12a6,
          _0x55dfd8: 0x1aab,
          _0x1fcb39: 0x2405,
          _0x518b84: 0x17b9,
          _0x57660e: 0x1a60,
          _0x230a5b: 0xe4c,
          _0x206fca: 0x18a5,
          _0x533e71: 0x85c,
          _0x7a41c3: 0x5a0,
          _0x1293c4: 0xe8f,
          _0x2f2b29: 0x85c,
          _0x6c534e: 0x145f,
          _0x2b7018: 0x22ba,
          _0x588568: 0xda6,
          _0x1d5e44: 0x1d55,
          _0x5517e8: 0xbb9
        };

        _0x654c6e.r(_0x46043f);

        var _0x1fd442 = _0x654c6e(0x54f5),
            _0x802d8 = _0x654c6e(0xb274),
            _0x5976fe = _0x654c6e(0x161cd);

        _0x654c6e.g.barber_shops = {}, _0x654c6e.g.propertyTypes.push('barber_shops'), _0x1fd442.Z.forEach(_0x59c964 => {
          _0x654c6e.g.barber_shops[_0x59c964.id] = _0x59c964, _0x654c6e.g.barber_shops[_0x59c964.id].propertyColshape = _0x5976fe.colshapes.newSphere(parseFloat(_0x59c964.posX), parseFloat(_0x59c964.posY), parseFloat(_0x59c964.posZ), 0x1, 0x0), _0x654c6e.g.barber_shops[_0x59c964.id].propertyColshape.key = _0x59c964.id, _0x654c6e.g.barber_shops[_0x59c964.id].propertyColshape.tableName = 'barber_shops', _0x654c6e.g.barber_shops[_0x59c964.id].label = _0x5976fe.labels.new('labels.bizTitle', new _0x5976fe.Vector3(parseFloat(_0x59c964.posX), parseFloat(_0x59c964.posY), parseFloat(_0x59c964.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0x802d8.markAsTranslatedLabel)(_0x654c6e.g.barber_shops[_0x59c964.id].label, 'labels.bizTitle', {
            'title': _0x59c964.title,
            'id': _0x59c964.id
          }), _0x654c6e.g.barber_shops[_0x59c964.id].marker = _0x5976fe.markers.new(0x1d, new _0x5976fe.Vector3(parseFloat(_0x59c964.posX), parseFloat(_0x59c964.posY), parseFloat(_0x59c964.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          });
        });
      },
      0xe180: (_0xa7bd2d, _0x2874cc, _0x140ac5) => {
        'use strict';

        const a0_0x55b9e2 = {
          _0x1ae80d: 0x209a,
          _0xc6a363: 0x1aab,
          _0x4ed0e2: 0x2405,
          _0x5b6256: 0x17b9,
          _0x52a315: 0xbb9,
          _0x337a76: 0x1a60,
          _0x20ff60: 0xe4c,
          _0x56f5ac: 0x209a,
          _0x3a2e4f: 0xf82,
          _0x42d837: 0x85c,
          _0x3bb16b: 0x5a0,
          _0x305893: 0x209a,
          _0x3e1819: 0x22ba,
          _0xa3aa03: 0x1d55,
          _0x6d0ca9: 0x17b9,
          _0xad0943: 0x1ee9,
          _0x96d730: 0x2405,
          _0x2889ee: 0x7c2,
          _0x207f5a: 0x2348,
          _0x56c21b: 0x209a,
          _0xfb5427: 0x10ba,
          _0x502992: 0x1bee
        };

        _0x140ac5.r(_0x2874cc);

        var _0x1985e8 = _0x140ac5(0x7441),
            _0x1d591c = _0x140ac5(0xb274),
            _0x5c5958 = _0x140ac5(0x161cd);

        _0x140ac5.g.carwash_shops = {}, _0x140ac5.g.propertyTypes.push('carwash_shops'), _0x1985e8.Z.forEach(_0x27c853 => {
          _0x140ac5.g.carwash_shops[_0x27c853.id] = _0x27c853, _0x140ac5.g.carwash_shops[_0x27c853.id].propertyColshape = _0x5c5958.colshapes.newSphere(parseFloat(_0x27c853.posX), parseFloat(_0x27c853.posY), parseFloat(_0x27c853.posZ), 0x1, 0x0), _0x140ac5.g.carwash_shops[_0x27c853.id].propertyColshape.key = _0x27c853.id, _0x140ac5.g.carwash_shops[_0x27c853.id].propertyColshape.tableName = 'carwash_shops', _0x140ac5.g.carwash_shops[_0x27c853.id].label = _0x5c5958.labels.new('labels.bizTitle', new _0x5c5958.Vector3(parseFloat(_0x27c853.posX), parseFloat(_0x27c853.posY), parseFloat(_0x27c853.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0x1d591c.markAsTranslatedLabel)(_0x140ac5.g.carwash_shops[_0x27c853.id].label, 'labels.bizTitle', {
            'title': _0x27c853.title,
            'id': _0x27c853.id
          }), _0x140ac5.g.carwash_shops[_0x27c853.id].marker = _0x5c5958.markers.new(0x1d, new _0x5c5958.Vector3(parseFloat(_0x27c853.posX), parseFloat(_0x27c853.posY), parseFloat(_0x27c853.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          }), _0x27c853.pickupX && (_0x140ac5.g.carwash_shops[_0x27c853.id].colshape = _0x5c5958.colshapes.newSphere(parseFloat(_0x27c853.pickupX), parseFloat(_0x27c853.pickupY), parseFloat(_0x27c853.pickupZ), 0xa, 0x0), _0x140ac5.g.carwash_shops[_0x27c853.id].colshape.key = _0x27c853.id, _0x140ac5.g.carwash_shops[_0x27c853.id].colshape.tableName = 'carwash_shops', _0x140ac5.g.carwash_shops[_0x27c853.id].colshape.pickup = true, _0x140ac5.g.carwash_shops[_0x27c853.id].enterMarker = _0x5c5958.markers.new(0x1, new _0x5c5958.Vector3(parseFloat(_0x27c853.pickupX), parseFloat(_0x27c853.pickupY), parseFloat(_0x27c853.pickupZ) - 0x3), 0xa, {
            'color': [0x34, 0x98, 0xdb, 0x19],
            'visible': true,
            'dimension': 0x0
          }));
        });
      },
      0x36c7: (_0x2212e2, _0x36ee88, _0x235173) => {
        'use strict';

        _0x235173.r(_0x36ee88);

        var _0x4b2f74 = _0x235173(0x134a1),
            _0x5dbc95 = _0x235173(0xb274),
            _0x16a286 = _0x235173(0x161cd);

        _0x235173.g.clothes_shops = {}, _0x235173.g.propertyTypes.push('clothes_shops'), _0x4b2f74.Z.forEach(_0x16e5b5 => {
          _0x235173.g.clothes_shops[_0x16e5b5.id] = _0x16e5b5, _0x235173.g.clothes_shops[_0x16e5b5.id].propertyColshape = _0x16a286.colshapes.newSphere(parseFloat(_0x16e5b5.posX), parseFloat(_0x16e5b5.posY), parseFloat(_0x16e5b5.posZ), 0x1, 0x0), _0x235173.g.clothes_shops[_0x16e5b5.id].propertyColshape.key = _0x16e5b5.id, _0x235173.g.clothes_shops[_0x16e5b5.id].propertyColshape.tableName = 'clothes_shops', _0x235173.g.clothes_shops[_0x16e5b5.id].label = _0x16a286.labels.new('labels.bizTitle', new _0x16a286.Vector3(parseFloat(_0x16e5b5.posX), parseFloat(_0x16e5b5.posY), parseFloat(_0x16e5b5.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0x5dbc95.markAsTranslatedLabel)(_0x235173.g.clothes_shops[_0x16e5b5.id].label, 'labels.bizTitle', {
            'title': _0x16e5b5.title,
            'id': _0x16e5b5.id
          }), _0x235173.g.clothes_shops[_0x16e5b5.id].marker = _0x16a286.markers.new(0x1d, new _0x16a286.Vector3(parseFloat(_0x16e5b5.posX), parseFloat(_0x16e5b5.posY), parseFloat(_0x16e5b5.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          });
        });
      },
      0x16170: (_0x4c4ff2, _0x4a1d6d, _0x4f1c2c) => {
        'use strict';

        const a0_0x3b5c2c = {
          _0x2a28f9: 0x136c,
          _0x24ae55: 0x1dc6,
          _0x11199f: 0x1d55
        };

        _0x4f1c2c.r(_0x4a1d6d);

        var _0x3a0e47 = _0x4f1c2c(0x135ea),
            _0x589161 = _0x4f1c2c(0x16ba8),
            _0x4e4e27 = _0x4f1c2c.n(_0x589161),
            _0x4ccc5f = _0x4f1c2c(0xb274),
            _0x382567 = _0x4f1c2c(0x161cd);

        _0x4f1c2c.g.fuel_stations = {}, _0x4f1c2c.g.propertyTypes.push('fuel_stations'), _0x3a0e47.Z.forEach(_0x315822 => {
          _0x4f1c2c.g.fuel_stations[_0x315822.id] = _0x315822, _0x4f1c2c.g.fuel_stations[_0x315822.id].colshape = _0x382567.colshapes.newSphere(parseFloat(_0x315822.posX), parseFloat(_0x315822.posY), parseFloat(_0x315822.posZ), 0x1, 0x0), _0x4f1c2c.g.fuel_stations[_0x315822.id].colshape.key = _0x315822.id, _0x4f1c2c.g.fuel_stations[_0x315822.id].colshape.tableName = 'fuel_stations', _0x4f1c2c.g.fuel_stations[_0x315822.id].label = _0x382567.labels.new('labels.bizTitle', new _0x382567.Vector3(parseFloat(_0x315822.posX), parseFloat(_0x315822.posY), parseFloat(_0x315822.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0x4ccc5f.markAsTranslatedLabel)(_0x4f1c2c.g.fuel_stations[_0x315822.id].label, 'labels.bizTitle', {
            'title': _0x315822.title,
            'id': _0x315822.id
          }), _0x4f1c2c.g.fuel_stations[_0x315822.id].marker = _0x382567.markers.new(0x1d, new _0x382567.Vector3(parseFloat(_0x315822.posX), parseFloat(_0x315822.posY), parseFloat(_0x315822.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          });

          const _0x561957 = _0x4e4e27()[_0x315822.id - 0x1].pumps;

          _0x561957 && _0x561957.length && _0x561957.forEach(_0x46839c => {
            const _0x170e89 = _0x382567.colshapes.newCircle(parseFloat(_0x46839c.X), parseFloat(_0x46839c.Y), 4.5, 0x0);

            _0x170e89.pos = new _0x382567.Vector3(parseFloat(_0x46839c.X), parseFloat(_0x46839c.Y), parseFloat(_0x46839c.Z)), _0x170e89.fuelStation = _0x315822.id;
          });
        });
      },
      0xb8ca: (_0x5e4c47, _0x589733, _0x135748) => {
        'use strict';

        const a0_0x38ff2e = {
          _0xcba40: 0x2606,
          _0x504d5f: 0x16c5,
          _0x36737d: 0x1e3d,
          _0x44c95b: 0x14d2,
          _0x4d8d96: 0x1a5,
          _0x49b59a: 0x5fe,
          _0xf3a468: 0x1e3d,
          _0x5354df: 0x1d55,
          _0x2c7535: 0x1ab
        },
              a0_0x52032d = {
          _0x4bd32d: 0x6ba,
          _0xaa9561: 0x17f,
          _0x541f2d: 0xf82,
          _0x30ebbf: 0x1d4e,
          _0x32de37: 0x236c
        },
              a0_0x3b1862 = {
          _0x829771: 0x18ec,
          _0x1b2068: 0x18ec,
          _0x78bf2b: 0x2348,
          _0x47def4: 0x2348,
          _0xfb13a1: 0x18ec,
          _0x1044b4: 0x1a60,
          _0x18d914: 0x2348
        };

        _0x135748.r(_0x589733);

        var _0x5d6a3a = _0x135748(0x16a21),
            _0x3fd877 = _0x135748(0x91d),
            _0x12f685 = _0x135748(0x3db3),
            _0x3e9068 = _0x135748(0x5d14),
            _0x23354d = _0x135748(0x161cd);

        const _0x19d7c9 = _0x23354d.players.local;

        let _0x46629b, _0x2a9032, _0xc24eb, _0x4b0e2e, _0xcc982d, _0x3c5182, _0x55f527, _0x86831d, _0x5efcda, _0x517905, _0x39ae4e, _0x139f09, _0x3e0e36;

        _0x135748.g.houses = {}, _0x3fd877.Z && _0x3fd877.Z.forEach(_0x4f09a1 => {
          try {
            if (!_0x4f09a1) return;
            _0x135748.g.houses[_0x4f09a1.id] = _0x4f09a1, _0x135748.g.houses[_0x4f09a1.id].title = {
              'text': 'property.bizTitlesId.houses',
              'args': {
                'id': _0x4f09a1.id
              }
            }, _0x135748.g.houses[_0x4f09a1.id].colshape = _0x23354d.colshapes.newCircle(parseFloat(_0x4f09a1.posX), parseFloat(_0x4f09a1.posY), 0x1, 0x0), _0x135748.g.houses[_0x4f09a1.id].colshape.pos = new _0x23354d.Vector3(parseFloat(_0x4f09a1.posX), parseFloat(_0x4f09a1.posY), parseFloat(_0x4f09a1.posZ)), _0x135748.g.houses[_0x4f09a1.id].colshape.key = _0x4f09a1.id, _0x135748.g.houses[_0x4f09a1.id].colshape.tableName = 'houses';
          } catch (_0x350bcb) {
            _0x5d6a3a.api.sendError(_0x350bcb);
          }
        }), _0x23354d.events.add('house.addHouse', (_0x4967b1, _0x1114de, _0x3caf39, _0x4e05e5, _0x8033a8) => {
          _0x135748.g.houses[_0x4967b1] = {
            'id': _0x4967b1,
            'posX': _0x1114de,
            'posY': _0x3caf39,
            'posZ': _0x4e05e5,
            'posA': _0x8033a8
          }, _0x135748.g.houses[_0x4967b1].colshape = _0x23354d.colshapes.newCircle(_0x1114de, _0x3caf39, 0x1, 0x0), _0x135748.g.houses[_0x4967b1].colshape.pos = new _0x23354d.Vector3(_0x1114de, _0x3caf39, _0x4e05e5), _0x135748.g.houses[_0x4967b1].colshape.key = _0x4967b1, _0x135748.g.houses[_0x4967b1].colshape.tableName = 'houses';
        }), _0x23354d.events.add('house.addMyHouseBlip', (_0x4a13a4, _0x41b550, _0x4e7cb0) => {
          _0x23354d.blips.exists(_0x3e0e36) && (_0x3e0e36.destroy(), _0x3e0e36 = undefined), _0x3e0e36 = _0x23354d.blips.new(0x28, new _0x23354d.Vector3(parseFloat(_0x4a13a4), parseFloat(_0x41b550), parseFloat(_0x4e7cb0)), {
            'name': 'blips.myHouse',
            'color': 0x3,
            'scale': 0.9,
            'shortRange': true
          }), (0x0, _0x12f685.markAsTranslatedBlip)(_0x3e0e36, 'blips.myHouse');
        }), _0x23354d.events.add('house.removeMyHouseBlip', () => {
          _0x23354d.blips.exists(_0x3e0e36) && (_0x3e0e36.destroy(), _0x3e0e36 = undefined);
        }), _0x23354d.events.add('house.initHouse', (_0x30c8a0, _0x545c2d, _0x33280f, _0xdf5035, _0x533414, _0x20216b, _0x28c539, _0x127eec, _0x4b9f96, _0x39175c, _0x9dcb60, _0x4ec404, _0x1c2072, _0x39de33) => {
          _0x23354d.colshapes.exists(_0x46629b) && _0x46629b.destroy(), _0x23354d.markers.exists(_0x2a9032) && _0x2a9032.destroy(), _0x23354d.colshapes.exists(_0xc24eb) && _0xc24eb.destroy(), _0x23354d.markers.exists(_0x4b0e2e) && _0x4b0e2e.destroy(), _0x23354d.colshapes.exists(_0xcc982d) && _0xcc982d.destroy(), _0x23354d.markers.exists(_0x3c5182) && _0x3c5182.destroy(), _0x23354d.colshapes.exists(_0x55f527) && _0x55f527.destroy(), _0x23354d.markers.exists(_0x86831d) && _0x86831d.destroy(), _0x23354d.objects.exists(_0x5efcda) && _0x5efcda.destroy(), _0x23354d.objects.exists(_0x517905) && _0x517905.destroy(), _0x46629b = _0x23354d.colshapes.newSphere(_0x30c8a0, _0x545c2d, _0x33280f, 0x1, -0x1), _0x2a9032 = _0x23354d.markers.new(0x1, new _0x23354d.Vector3(_0x30c8a0, _0x545c2d, _0x33280f - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x64],
            'dimension': -0x1
          }), _0xc24eb = _0x23354d.colshapes.newSphere(_0xdf5035, _0x533414, _0x20216b, 0x1, -0x1), _0x4b0e2e = _0x23354d.markers.new(0x1, new _0x23354d.Vector3(_0xdf5035, _0x533414, _0x20216b - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x64],
            'dimension': -0x1
          }), _0xcc982d = _0x23354d.colshapes.newSphere(_0x28c539, _0x127eec, _0x4b9f96, 0x1, -0x1), _0x3c5182 = _0x23354d.markers.new(0x1, new _0x23354d.Vector3(_0x28c539, _0x127eec, _0x4b9f96 - 0x1), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x64],
            'dimension': -0x1
          });

          const _0x572f27 = _0x23354d.game.object.getObjectOffsetFromCoords(_0x39175c, _0x9dcb60, _0x4ec404, _0x1c2072, -0.2, -0.6, 0x0);

          _0x5efcda = _0x23354d.objects.new(_0x23354d.game.joaat('ch_prop_ch_arcade_safe_body'), new _0x23354d.Vector3(_0x39175c, _0x9dcb60, _0x4ec404), {
            'rotation': new _0x23354d.Vector3(0x0, 0x0, _0x1c2072),
            'dimension': -0x1
          }), _0x517905 = _0x23354d.objects.new(_0x23354d.game.joaat('ch_prop_ch_arcade_safe_door'), new _0x23354d.Vector3(_0x39175c, _0x9dcb60, _0x4ec404), {
            'rotation': new _0x23354d.Vector3(0x0, 0x0, _0x1c2072),
            'dimension': -0x1
          }), _0x55f527 = _0x23354d.colshapes.newSphere(_0x572f27.x, _0x572f27.y, _0x572f27.z + 0.5, 0x1, -0x1), _0x86831d = _0x23354d.markers.new(0x1, new _0x23354d.Vector3(_0x572f27.x, _0x572f27.y, _0x572f27.z), 0x1, {
            'color': [0x34, 0x98, 0xdb, 0x64],
            'dimension': -0x1
          }), _0x39ae4e = _0x39de33, _0x23354d.events.call('interiors.houses.enteredIn', 'houses', _0x39de33);
        }), _0x23354d.events.add('houses.toggleSafeDoor', (_0x571649, _0x54ce68 = false, _0xd87ec = 0x1) => {
          _0x23354d.objects.exists(_0x517905) && (_0x54ce68 ? (_0x517905.rotation = new _0x23354d.Vector3(0x0, 0x0, _0x571649 + 0x5a), _0x23354d.events.call('api.play3DSoundEntity', _0x3e9068.u.natural(), 'safe/safe_door_open' + _0xd87ec, _0x517905, {
            'volume': 0x64
          })) : (_0x517905.rotation = new _0x23354d.Vector3(0x0, 0x0, _0x571649), _0x23354d.events.call('api.play3DSoundEntity', _0x3e9068.u.natural(), 'safe/safe_door_close', _0x517905, {
            'volume': 0x64
          })));
        }), _0x23354d.events.add('playerEnterColshape', _0xfaecdd => {
          _0x5d6a3a.api.isAuthed() && (_0xfaecdd == _0x46629b ? (_0x139f09 = _0xfaecdd, _0x5d6a3a.api.displayHelpStringTrans('displayHelpString.toExit', false, true, 0x1388)) : _0xfaecdd == _0xc24eb ? (_0x139f09 = _0xfaecdd, _0x5d6a3a.api.displayHelpStringTrans('displayHelpString.lookInWarehouse', false, true, 0x1388)) : _0xfaecdd == _0xcc982d ? (_0x139f09 = _0xfaecdd, _0x5d6a3a.api.displayHelpStringTrans('displayHelpString.loonInFridge', false, true, 0x1388)) : _0xfaecdd == _0x55f527 && (_0x139f09 = _0xfaecdd, _0x5d6a3a.api.displayHelpStringTrans('displayHelpString.toOpenSafe', false, true, 0x1388)));
        }), _0x23354d.events.add('playerExitColshape', _0x5cba9b => {
          _0x5d6a3a.api.isAuthed() && _0x23354d.colshapes.exists(_0x5cba9b) && (_0x5cba9b == _0x46629b ? (_0x139f09 = null, _0x23354d.game.ui.clearHelp(true)) : _0x5cba9b == _0xc24eb ? (_0x139f09 = null, _0x23354d.game.ui.clearHelp(true), _0x23354d.events.call('warehouse.close')) : _0x5cba9b == _0xcc982d ? (_0x139f09 = null, _0x23354d.game.ui.clearHelp(true), _0x23354d.events.call('inventoryApi.close')) : _0x5cba9b == _0x55f527 && (_0x139f09 = null, _0x23354d.events.call('safe.close'), _0x23354d.game.ui.clearHelp(true)));
        }), _0x23354d.events.add('keys.e', async () => _0x139f09 && _0x46629b && _0x139f09.id == _0x46629b.id ? (_0x23354d.game.ui.clearHelp(true), _0x139f09 = null, _0x5d6a3a.api.setPlayerPos(_0x19d7c9, new _0x23354d.Vector3(parseFloat(_0x135748.g.houses[_0x39ae4e].posX), parseFloat(_0x135748.g.houses[_0x39ae4e].posY), parseFloat(_0x135748.g.houses[_0x39ae4e].posZ))), _0x23354d.events.callRemote('3702382805', 0x0), _0x46629b = _0x46629b.destroy(), _0x2a9032 = _0x2a9032.destroy(), _0x23354d.events.callRemote('3991422975', _0x39ae4e), void (_0x39ae4e = null)) : _0x139f09 && _0xc24eb && _0x139f09.id === _0xc24eb.id ? (_0x23354d.game.ui.clearHelp(true), _0x23354d.events.call('inventoryApi.init', parseInt(_0x39ae4e)), void (_0x139f09 = false)) : _0x139f09 && _0xcc982d && _0x139f09.id === _0xcc982d.id ? (_0x23354d.game.ui.clearHelp(true), _0x23354d.events.call('inventoryApi.init', parseInt(_0x39ae4e), null, true), void (_0x139f09 = false)) : _0x139f09 && _0x55f527 && _0x139f09.id === _0x55f527.id ? (_0x23354d.game.ui.clearHelp(true), _0x23354d.events.call('safe.init', 'houses', parseInt(_0x39ae4e)), void (_0x139f09 = false)) : undefined);
      },
      0x27d8: (_0x294e71, _0x16067f, _0x1ae927) => {
        _0x1ae927.g.propertyTypes = [], _0x1ae927(0x1767f), _0x1ae927(0xb8ca), _0x1ae927(0x16170), _0x1ae927(0x91cb), _0x1ae927(0xb83b), _0x1ae927(0x3012), _0x1ae927(0x36c7), _0x1ae927(0x655), _0x1ae927(0x1765a), _0x1ae927(0xa224), _0x1ae927(0xe180), _0x1ae927(0x8deb);
      },
      0x655: (_0x14a6d4, _0x1ef690, _0x548070) => {
        'use strict';

        const a0_0x11ad5b = {
          _0x196aa0: 0x1512,
          _0x5d5a4c: 0x1aab,
          _0x2b7467: 0x2405,
          _0x4d75e3: 0xbb9,
          _0x47d1ff: 0x1512,
          _0x1f4ea2: 0x1a60,
          _0x2eeee3: 0xf82,
          _0x5ab0b6: 0x17b9,
          _0x3df050: 0x1ee9,
          _0x463749: 0xbb9,
          _0x23dba4: 0xe8f,
          _0x55317c: 0x85c,
          _0x54ade1: 0x145f,
          _0x20730c: 0xda6,
          _0x1f914a: 0x1d55,
          _0x22381a: 0x17b9,
          _0x445a58: 0xbb9
        };

        _0x548070.r(_0x1ef690);

        var _0x2f014c = _0x548070(0xe250),
            _0x57e727 = _0x548070(0xb274),
            _0x306246 = _0x548070(0x161cd);

        _0x548070.g.item_shops = {}, _0x548070.g.propertyTypes.push('item_shops'), _0x2f014c.Z.forEach(_0x692f02 => {
          _0x548070.g.item_shops[_0x692f02.id] = _0x692f02, _0x548070.g.item_shops[_0x692f02.id].propertyColshape = _0x306246.colshapes.newSphere(parseFloat(_0x692f02.posX), parseFloat(_0x692f02.posY), parseFloat(_0x692f02.posZ), 0x1, 0x0), _0x548070.g.item_shops[_0x692f02.id].propertyColshape.key = _0x692f02.id, _0x548070.g.item_shops[_0x692f02.id].propertyColshape.tableName = 'item_shops', _0x548070.g.item_shops[_0x692f02.id].label = _0x306246.labels.new('labels.bizTitle', new _0x306246.Vector3(parseFloat(_0x692f02.posX), parseFloat(_0x692f02.posY), parseFloat(_0x692f02.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0x57e727.markAsTranslatedLabel)(_0x548070.g.item_shops[_0x692f02.id].label, 'labels.bizTitle', {
            'title': _0x692f02.title,
            'id': _0x692f02.id
          }), _0x548070.g.item_shops[_0x692f02.id].marker = _0x306246.markers.new(0x1d, new _0x306246.Vector3(parseFloat(_0x692f02.posX), parseFloat(_0x692f02.posY), parseFloat(_0x692f02.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          });
        });
      },
      0x8deb: (_0x11e126, _0x4c26b3, _0x16c063) => {
        'use strict';

        _0x16c063.r(_0x4c26b3);

        var _0x4f473b = _0x16c063(0x130f3),
            _0x5acdd5 = _0x16c063.n(_0x4f473b),
            _0x3f07f6 = _0x16c063(0x161cd);

        _0x3f07f6.players.local, (_0x16c063.g.offices = {}, Object.keys(_0x5acdd5()).forEach(_0x4e364a => {
          _0x16c063.g.offices[_0x4e364a] = _0x5acdd5()[_0x4e364a], _0x16c063.g.offices[_0x4e364a].colshape = _0x3f07f6.colshapes.newCircle(parseFloat(_0x16c063.g.offices[_0x4e364a].posX), parseFloat(_0x16c063.g.offices[_0x4e364a].posY), 0x1, 0x0), _0x16c063.g.offices[_0x4e364a].colshape.pos = new _0x3f07f6.Vector3(parseFloat(_0x16c063.g.offices[_0x4e364a].posX), parseFloat(_0x16c063.g.offices[_0x4e364a].posY), parseFloat(_0x16c063.g.offices[_0x4e364a].posZ)), _0x16c063.g.offices[_0x4e364a].colshape.key = _0x4e364a, _0x16c063.g.offices[_0x4e364a].colshape.tableName = 'offices';
        }));
      },
      0x1765a: (_0x57c45d, _0x54fd5e, _0x59aa2d) => {
        'use strict';

        _0x59aa2d.r(_0x54fd5e);

        var _0x41146d = _0x59aa2d(0x101dd),
            _0x3875dd = _0x59aa2d(0xb274),
            _0x4cd483 = _0x59aa2d(0x161cd);

        _0x59aa2d.g.tattoo_shops = {}, _0x59aa2d.g.propertyTypes.push('tattoo_shops'), _0x41146d.Z.forEach(_0x56b85b => {
          _0x59aa2d.g.tattoo_shops[_0x56b85b.id] = _0x56b85b, _0x59aa2d.g.tattoo_shops[_0x56b85b.id].propertyColshape = _0x4cd483.colshapes.newSphere(parseFloat(_0x56b85b.posX), parseFloat(_0x56b85b.posY), parseFloat(_0x56b85b.posZ), 0x1, 0x0), _0x59aa2d.g.tattoo_shops[_0x56b85b.id].propertyColshape.key = _0x56b85b.id, _0x59aa2d.g.tattoo_shops[_0x56b85b.id].propertyColshape.tableName = 'tattoo_shops', _0x59aa2d.g.tattoo_shops[_0x56b85b.id].label = _0x4cd483.labels.new('labels.bizTitle', new _0x4cd483.Vector3(parseFloat(_0x56b85b.posX), parseFloat(_0x56b85b.posY), parseFloat(_0x56b85b.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0x3875dd.markAsTranslatedLabel)(_0x59aa2d.g.tattoo_shops[_0x56b85b.id].label, 'labels.bizTitle', {
            'title': _0x56b85b.title,
            'id': _0x56b85b.id
          }), _0x59aa2d.g.tattoo_shops[_0x56b85b.id].marker = _0x4cd483.markers.new(0x1d, new _0x4cd483.Vector3(parseFloat(_0x56b85b.posX), parseFloat(_0x56b85b.posY), parseFloat(_0x56b85b.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          });
        });
      },
      0xa224: (_0x362fa4, _0x2b88f2, _0x2b217e) => {
        'use strict';

        _0x2b217e.r(_0x2b88f2);

        var _0x154d30 = _0x2b217e(0x90e5),
            _0xbcd955 = _0x2b217e(0xb274),
            _0x144630 = _0x2b217e(0x161cd);

        _0x2b217e.g.tuning_shops = {}, _0x2b217e.g.propertyTypes.push('tuning_shops'), _0x154d30.Z.forEach(_0x20d249 => {
          _0x2b217e.g.tuning_shops[_0x20d249.id] = _0x20d249, _0x2b217e.g.tuning_shops[_0x20d249.id].propertyColshape = _0x144630.colshapes.newSphere(parseFloat(_0x20d249.posX), parseFloat(_0x20d249.posY), parseFloat(_0x20d249.posZ), 0x1, 0x0), _0x2b217e.g.tuning_shops[_0x20d249.id].propertyColshape.key = _0x20d249.id, _0x2b217e.g.tuning_shops[_0x20d249.id].propertyColshape.tableName = 'tuning_shops', _0x2b217e.g.tuning_shops[_0x20d249.id].label = _0x144630.labels.new('labels.bizTitle', new _0x144630.Vector3(parseFloat(_0x20d249.posX), parseFloat(_0x20d249.posY), parseFloat(_0x20d249.posZ) + 0.5), {
            'color': [0xff, 0xff, 0xff, 0xc8],
            'los': true,
            'font': 0x0,
            'drawDistance': 0xa,
            'dimension': 0x0
          }), (0x0, _0xbcd955.markAsTranslatedLabel)(_0x2b217e.g.tuning_shops[_0x20d249.id].label, 'labels.bizTitle', {
            'title': _0x20d249.title,
            'id': _0x20d249.id
          }), _0x2b217e.g.tuning_shops[_0x20d249.id].marker = _0x144630.markers.new(0x1d, new _0x144630.Vector3(parseFloat(_0x20d249.posX), parseFloat(_0x20d249.posY), parseFloat(_0x20d249.posZ)), 0x1, {
            'color': [0xff, 0xff, 0xff, 0x64],
            'visible': true,
            'dimension': 0x0
          });
        });
      },
      0x45c6: (_0x4104e8, _0x237ae0, _0x12abec) => {
        _0x12abec(0xf9b5);
      },
      0xf9b5: (_0x1cd932, _0x13319d, _0x5eb56a) => {
        'use strict';

        const a0_0x9b7525 = {
          _0x4c0646: 0xa60,
          _0x246ac5: 0x1dda,
          _0x4369eb: 0x22b2,
          _0x17c6d2: 0x2488,
          _0x2a0d16: 0x1a3
        };
        _0x5eb56a.r(_0x13319d), _0x5eb56a(0x16a21);

        var _0xe7d114 = _0x5eb56a(0x12a76),
            _0x5be512 = _0x5eb56a(0x161cd);

        let _0x15d69b = {};
        _0x5be512.events.add('quests.worldQuests.init', async (_0x2bbc6b, _0x48ce6f, _0x59a8fc) => {
          if (_0x2bbc6b && _0x48ce6f && _0x59a8fc) {
            _0x5be512.events.call('dialog.close', true), await _0x5be512.game.sleep(0x1f4), _0x2bbc6b = JSON.parse(_0x2bbc6b), _0x48ce6f = JSON.parse(_0x48ce6f), _0x15d69b = JSON.parse(_0x59a8fc), _0x2bbc6b = _0x2bbc6b.map(_0x393c36 => ({ ..._0x393c36,
              'progress_local': { ..._0x393c36.progress_local,
                'value': _0x15d69b.quests[_0x393c36.questId]
              }
            }));

            for (const _0x3175b9 of Object.keys(_0x48ce6f)) _0x15d69b.leaders[_0x3175b9] && !_0x48ce6f[_0x3175b9].find(_0x5e9dc3 => _0x5e9dc3.accountId === _0x15d69b.leaders[_0x3175b9].accountId) && _0x48ce6f[_0x3175b9].push(_0x15d69b.leaders[_0x3175b9]);

            _0xe7d114.globalBrowser.toggle('weeklyQuests', {
              'value': true,
              'quests': _0x2bbc6b,
              'leaders': _0x48ce6f,
              'timeLeft': _0x15d69b.resetTime
            });
          }
        }), _0x5be512.events.add('quests.worldQuests.updateMainData', (_0x2211ab, _0x3d9b7c) => {
          if (_0x5eb56a.g.interfaces.weeklyQuests && _0x2211ab && _0x3d9b7c) {
            _0x2211ab = JSON.parse(_0x2211ab), _0x3d9b7c = JSON.parse(_0x3d9b7c), _0x2211ab = _0x2211ab.map(_0x5663e2 => ({ ..._0x5663e2,
              'progress_local': { ..._0x5663e2.progress_local,
                'value': _0x15d69b.quests[_0x5663e2.questId]
              }
            }));

            for (const _0x25f4e7 of Object.keys(_0x3d9b7c)) _0x15d69b.leaders[_0x25f4e7] && !_0x3d9b7c[_0x25f4e7].find(_0x14cefd => _0x14cefd.accountId === _0x15d69b.leaders[_0x25f4e7].accountId) && _0x3d9b7c[_0x25f4e7].push(_0x15d69b.leaders[_0x25f4e7]);

            _0xe7d114.globalBrowser.emit('weeklyQuests_updateMainData', {
              'quests': _0x2211ab,
              'leaders': _0x3d9b7c
            });
          }
        }), _0x5be512.events.add('weeklyQuests.close', () => {
          _0xe7d114.globalBrowser.toggle('weeklyQuests', {
            'value': false
          });
        });
      },
      0x7df9: (_0x1e8a2e, _0x2cff51, _0x1199f3) => {
        'use strict';

        const a0_0x2e247e = {
          _0xb55dcf: 0x82f,
          _0x41d911: 0xadd,
          _0x420aa1: 0x7cf
        };
        _0x1199f3.r(_0x2cff51), _0x1199f3.d(_0x2cff51, {
          'createTimeout': () => _0x4311c0,
          'removeTimeout': () => _0x590654
        });

        var _0x37b592 = _0x1199f3(0x12a76),
            _0x1657e7 = _0x1199f3(0x161cd);

        const _0x250443 = _0x4c1f4f => _0x4c1f4f ? (_0x4c1f4f ^ 0x10 * Math.random() >> _0x4c1f4f / 0x4).toString(0x10) : '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, _0x250443),
              _0x24beef = {
          'browser': _0x1657e7.browsers.new('http://package/cef/timeouts/index.html'),
          'timers': new Map()
        };

        (0x0, _0x37b592.patchBrowser)(_0x24beef.browser), _0x1657e7.events.add('timeouts.timeoutComplete', _0x250d24 => {
          const _0x3e1da5 = _0x24beef.timers.get(_0x250d24);

          if (_0x3e1da5) {
            _0x24beef.timers.delete(_0x250d24);

            try {
              _0x3e1da5.callback();
            } catch (_0x4c1445) {}
          }
        });

        const _0x4311c0 = (_0x3b1357, _0x27d7dc = 0x0) => {
          const _0x4a6992 = _0x250443() + '-' + Date.now().toString(0x24),
                _0x546a39 = {
            'cancel': () => _0x590654(_0x546a39),
            'id': _0x4a6992
          };

          return _0x24beef.timers.set(_0x4a6992, {
            'timerId': _0x4a6992,
            'callback': _0x3b1357,
            'delay': _0x27d7dc,
            'start': Date.now()
          }), _0x24beef.browser.emit('createTimeout', {
            'timerId': _0x4a6992,
            'delay': _0x27d7dc
          }), _0x546a39;
        },
              _0x590654 = _0x52109f => {
          _0x24beef.timers.has(_0x52109f.id) && (_0x24beef.timers.delete(_0x52109f.id), _0x24beef.browser.emit('deleteTimeout', _0x52109f.id));
        };
      },
      0x172e: (_0x120e8f, _0x2ea422, _0x577b3f) => {
        'use strict';

        const a0_0x1781c9 = {
          _0x5e1d1c: 0x1d66,
          _0x547fca: 0x1af2,
          _0x2ac2f9: 0x1af2,
          _0x139439: 0x1d66,
          _0x523d25: 0x8b3,
          _0x34d757: 0x894,
          _0x3a349a: 0x8b3,
          _0x1d213c: 0xf2f,
          _0x4b2b06: 0x1d66,
          _0x3c2365: 0xf2f,
          _0x27d031: 0x15d1,
          _0x5459d3: 0x1f5b
        },
              a0_0x54a41e = {
          _0x56eb1f: 0x2606,
          _0x3e9ebb: 0x16c5,
          _0x5af76e: 0x14d2,
          _0x4fe850: 0x1a5,
          _0x1e76f1: 0x12be
        },
              a0_0x5b1f73 = {
          _0x1e9672: 0x1d66,
          _0x2063a6: 0x1992
        },
              a0_0x39237a = {
          _0x207fdc: 0x1992,
          _0x49b52a: 0x24fe
        },
              a0_0xac8674 = {
          _0x1575e1: 0x23fe,
          _0x21321d: 0xffb,
          _0x3af31d: 0x385,
          _0x54dccc: 0x213a,
          _0x36bb7c: 0x830,
          _0x358309: 0x23fe,
          _0x5cf6ea: 0x23fe,
          _0x59b8e7: 0x385,
          _0x30a0bc: 0x213a
        },
              a0_0x17a722 = {
          _0xd8f3d0: 0xe74,
          _0x4a2cc6: 0x1d66,
          _0x5efade: 0xf2f,
          _0x2bb8c4: 0x1e56,
          _0x15c404: 0x23e4,
          _0x148478: 0x19d6,
          _0x491130: 0x1d66,
          _0x423cf9: 0xf2f,
          _0x6fb93: 0x169e,
          _0x5d80a7: 0x535,
          _0x1fc1f5: 0x242c,
          _0x3dbf6e: 0x2315,
          _0x4ab1d3: 0x535,
          _0x570c69: 0x623,
          _0x30c7fa: 0x3e4,
          _0x323d34: 0x2123,
          _0x12b4a3: 0x1d66,
          _0x44eb0e: 0x186b,
          _0x488415: 0x1d66,
          _0x4ab4df: 0x7fb,
          _0xdb173e: 0x1e43,
          _0xeed5fd: 0x186b,
          _0x30ae83: 0x1382,
          _0xa4423: 0x186b,
          _0x3709fe: 0xf52,
          _0x5a1640: 0x14e4,
          _0x43f3a4: 0x1657
        },
              a0_0x40547c = {
          _0x506991: 0x157d,
          _0x216380: 0x39f,
          _0x35cd06: 0x121e
        },
              a0_0x4c9407 = {
          _0x4d969c: 0x1d6e,
          _0x1debc4: 0x235b,
          _0x34f4a8: 0x185e,
          _0x380963: 0x235b,
          _0x103973: 0x4b9,
          _0x2a2144: 0x1f30,
          _0xeb2536: 0x185e,
          _0x54a3f4: 0x4b9,
          _0x2b7a85: 0x10f6,
          _0x584f26: 0x1b64,
          _0x1306d7: 0x535,
          _0x441ebb: 0x60d,
          _0x280aa7: 0x535,
          _0x222454: 0x190d,
          _0x577d84: 0x535,
          _0x55f94c: 0x4ad,
          _0x2873f1: 0x129c,
          _0x328540: 0x1a5a,
          _0x2beda2: 0x1a5a,
          _0x1fb487: 0xf01,
          _0x598eed: 0x1349,
          _0x38aba8: 0xbb1,
          _0x55c31f: 0x1bc,
          _0x4d5aaa: 0x45c,
          _0x5968f6: 0x1d66,
          _0x69395d: 0x2379,
          _0x45037e: 0x1d66,
          _0x48a6c5: 0x2379,
          _0x18b411: 0x1a5a,
          _0xc8b513: 0x1a5a,
          _0x41126d: 0xf01,
          _0x3b899c: 0xb31,
          _0x1c7b4e: 0x1a1d,
          _0x5d0e65: 0x1a5,
          _0x2df9c6: 0x1a1d,
          _0x65d6c7: 0x20ce,
          _0x7d4620: 0x1a5,
          _0x26fc71: 0x20ce,
          _0x29b7d4: 0x1686,
          _0x528370: 0x1a5a,
          _0x5de97c: 0x1686,
          _0x76733f: 0xfc1,
          _0x4327f3: 0x298,
          _0x5b0b8c: 0x14d2,
          _0x486ac6: 0x1da5,
          _0x283fb3: 0x12c6,
          _0x5edbce: 0x1cc,
          _0x3f8c70: 0x12c6,
          _0x1e36a9: 0x15e0,
          _0x40aac4: 0x2379,
          _0x4687df: 0x7a6,
          _0x57426f: 0x767,
          _0x26880f: 0x1d66,
          _0x5b6f81: 0x2530,
          _0x37a131: 0x1a5a,
          _0x48fe19: 0x535,
          _0x18ba93: 0x1bc,
          _0x3a6588: 0x1e93,
          _0x105232: 0x1a5a,
          _0x36897f: 0x1985,
          _0x587736: 0x1985,
          _0x1ce2d8: 0x1985,
          _0x21ea0e: 0x2235,
          _0x5665d1: 0x2072,
          _0x2d736c: 0x1273,
          _0x48001a: 0x1d66,
          _0x4fbb75: 0x1f43,
          _0x30a268: 0x1a52,
          _0x1704fa: 0x16dd,
          _0x45d9ea: 0x549,
          _0x58275a: 0x1870,
          _0xfa8a20: 0x18cd,
          _0x350d0d: 0xe70,
          _0x370cd1: 0x535,
          _0xc81c99: 0x235b,
          _0x3a13f9: 0x535,
          _0x3a099f: 0xf01,
          _0x3a3e6f: 0x106d,
          _0x1a1ac0: 0x185e,
          _0x5a4985: 0x259e,
          _0x53bc45: 0x1c92,
          _0x44b91a: 0x9fe,
          _0x312a85: 0x235b,
          _0x544ea1: 0x12da,
          _0x530865: 0x185e,
          _0x43bd7c: 0x259e,
          _0x54be1f: 0x1917,
          _0x3babd6: 0xd70,
          _0x4664a1: 0x1c92,
          _0x5b599c: 0x185e,
          _0x1a47fe: 0x39e,
          _0x521fd7: 0x535,
          _0x32819a: 0x1a5a,
          _0xb5c3fb: 0xbb1,
          _0x4d5dc4: 0x19ca,
          _0x2219e8: 0x1d66,
          _0x5722cf: 0xf2f,
          _0x163c0e: 0x1749,
          _0x31aa86: 0x25f5,
          _0x1eab9b: 0x1cf6,
          _0x56716a: 0x45c,
          _0x38c2fb: 0x14f4,
          _0xd0c8a0: 0x45c,
          _0x539fb0: 0x255d,
          _0x424854: 0x1a5a,
          _0x2b9e2a: 0xf01,
          _0x319ef3: 0x535,
          _0x11dcd2: 0xbb1,
          _0x75345: 0x12a8,
          _0x185db3: 0x535,
          _0x386295: 0x1bc,
          _0x1b2e7b: 0x535,
          _0xa64272: 0x1349,
          _0x13035f: 0x762,
          _0x335db5: 0x1f30,
          _0x7d7e04: 0x1f87,
          _0x5b7777: 0xc30,
          _0x34f6fb: 0x1a5a,
          _0x489bbe: 0x535,
          _0x155304: 0x1a5a,
          _0x1cb32c: 0x535,
          _0x1584d0: 0xbb1,
          _0x32303b: 0x23d2,
          _0x463c17: 0x535,
          _0x6d97c4: 0x535,
          _0x3ab96b: 0xf82,
          _0x33bf4c: 0x1d55,
          _0x1045ee: 0x2072,
          _0x463ba5: 0x205c,
          _0x338bc6: 0x1d66,
          _0x5bd59e: 0x2530,
          _0x51ead1: 0x17db,
          _0x901698: 0x2530,
          _0x56021c: 0x2530,
          _0x1795c1: 0x2072,
          _0x168ba7: 0xd79,
          _0x52ddb8: 0x2606,
          _0x2e1499: 0x16c5,
          _0x377612: 0x17f,
          _0x20fb51: 0x2530,
          _0x1c8d62: 0x1de9,
          _0x4df588: 0xf82,
          _0x11fc36: 0x1d66,
          _0x466961: 0x17d,
          _0x1a41c5: 0x225e,
          _0x211281: 0x1ea1,
          _0x32accb: 0xf2f,
          _0x2f347f: 0xc79,
          _0x475d99: 0x45c,
          _0x5f0908: 0x1d07,
          _0xfc752: 0x14d2,
          _0x20b9a6: 0x1d66,
          _0x29e107: 0x45c,
          _0x1d2b97: 0xf2f,
          _0x52be4c: 0xc79,
          _0xf82fc9: 0x1d66,
          _0x59c6d0: 0x45c,
          _0xfd09c9: 0xa4d,
          _0x2d7572: 0x1985,
          _0x8303b0: 0x2217,
          _0x55f524: 0x2379,
          _0x12ee0b: 0x72d,
          _0x38903b: 0x1d66,
          _0x5e6044: 0x1b90,
          _0x35dcf9: 0x198d,
          _0x5b020f: 0x1541,
          _0x3bd57f: 0x88a,
          _0xf70724: 0xdf7,
          _0x112dab: 0xa0b,
          _0x4a7f4f: 0x2530,
          _0x5cfca3: 0x235b,
          _0x364777: 0x185e,
          _0x462761: 0x14e1,
          _0x30232d: 0x1573,
          _0x4031f8: 0x2379,
          _0x50d44b: 0x229c,
          _0x2c85f3: 0x1f30,
          _0x5be763: 0x2530,
          _0x160d94: 0x1870,
          _0x5e9d76: 0x1573,
          _0x33f113: 0x535,
          _0x4a45df: 0x535,
          _0xf9ebe2: 0x535,
          _0xde3c90: 0xbb1,
          _0x90134: 0x1b37
        },
              a0_0x526dde = {
          _0x30d220: 0x220f
        },
              a0_0x40d84c = {
          _0x49b690: 0x1d66
        },
              a0_0x21e13b = {
          _0x145d0a: 0x1d66,
          _0xcf0dd8: 0x2072,
          _0x423d8a: 0x1d66,
          _0x374557: 0xd79,
          _0x3c967c: 0x1076
        };
        _0x577b3f.r(_0x2ea422), _0x577b3f.d(_0x2ea422, {
          'noDamageEnabled': () => _0x2d183f
        });

        var _0x1a53e3 = _0x577b3f(0x16a21),
            _0x1ca891 = _0x577b3f(0x12a76),
            _0x2944bd = _0x577b3f(0x176d8),
            _0x512dcf = (_0x577b3f(0x704e), _0x577b3f(0x1492d), _0x577b3f(0x1659b)),
            _0x17e626 = _0x577b3f(0x161cd);

        const _0x33b332 = _0x17e626.players.local,
              _0x316379 = Date.now();

        let _0x4a97c3,
            _0x7c5676,
            _0x989187 = 0x0;

        _0x17e626.events.add('cleartraffic', () => {
          _0x17e626.game.gameplay.clearArea(_0x33b332.position.x, _0x33b332.position.y, _0x33b332.position.z, 0x2710, true, false, true, false), _0x17e626.game.gameplay.clearAreaOfPeds(_0x33b332.position.x, _0x33b332.position.y, _0x33b332.position.z, 0x2710, 0x1);
        }), _0x17e626.events.add('playScenarioFor', (_0x2313af = 'WORLD_HUMAN_CONST_DRILL', _0x5d59bb = false) => {
          _0x33b332.taskStartScenarioInPlace(_0x2313af, 0x0, _0x5d59bb);
        }), _0x17e626.events.add('clearIntro', () => {
          _0x17e626.game.cam.doScreenFadeIn(0x3e8), _0x17e626.game.cam.renderScriptCams(false, false, 0x0, true, false, 0x0), _0x577b3f.g.skyCamera = false;
        });
        let _0xd18e01 = 0x0;
        _0x17e626.events.add('setTraffic', _0x4bfba3 => {
          _0xd18e01 = _0x4bfba3, _0x17e626.game.streaming.setPedPopulationBudget(_0xd18e01);
        }), _0x17e626.events.add('showDL', _0x595cb3 => {
          _0x4a97c3 = _0x595cb3;
        }), _0x17e626.events.add('showOBJDL', _0x1b5605 => {
          _0x7c5676 = _0x1b5605;
        }), _0x17e626.events.add('utils.setInvincible', _0x3b0aca => {
          _0x33b332.setInvincible(!!_0x3b0aca), _0x33b332.setProofs(!!_0x3b0aca, !!_0x3b0aca, !!_0x3b0aca, !!_0x3b0aca, !!_0x3b0aca, !!_0x3b0aca, !!_0x3b0aca, !!_0x3b0aca);
        }), _0x17e626.events.add('playerCommand', async _0x2fabb5 => {
          const _0x4c825d = _0x2fabb5.split(/[ ]+/),
                _0x1951b4 = _0x4c825d[0x0];

          if (_0x4c825d.shift(), 'savepos' === _0x1951b4) {
            let _0x1b66a0 = _0x17e626.players.local.position,
                _0x38dcab = _0x17e626.players.local.getHeading();

            _0x17e626.players.local.vehicle && (_0x1b66a0 = _0x17e626.players.local.vehicle.position, _0x38dcab = _0x17e626.players.local.vehicle.getHeading());

            const _0x233f13 = 'x: ' + _0x1a53e3.api.roundNumber(_0x1b66a0.x, 0x4) + ', y: ' + _0x1a53e3.api.roundNumber(_0x1b66a0.y, 0x4) + ', z: ' + _0x1a53e3.api.roundNumber(_0x1b66a0.z, 0x4) + ', r: ' + _0x1a53e3.api.roundNumber(_0x38dcab, 0x2);

            _0x1ca891.globalBrowser.emit('main_copyInfo', _0x233f13);
          } else {
            if ('clothtest' === _0x1951b4) {
              if (!_0x1a53e3.api.getAdmin(_0x33b332) && _0x1a53e3.api.getAdmin(_0x33b332) < 0x5) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

              const _0x80e8b8 = _0x17e626.game.invoke('0x341DE7ED1D2A1BFD', _0x17e626.game.joaat(_0x4c825d[0x0]), _0x17e626.game.joaat(_0x4c825d[0x1]), parseInt(_0x4c825d[0x2]));

              _0x1a53e3.api.chatPush('' + _0x80e8b8);
            } else {
              if ('strip_test' === _0x1951b4) {
                if (!_0x1a53e3.api.getAdmin(_0x33b332) && _0x1a53e3.api.getAdmin(_0x33b332) < 0x5) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

                _0x17e626.events.call('stripclub.initPrivateDance');
              } else {
                if ('v_reload' === _0x1951b4) _0x17e626.events.call('v_reload');else {
                  if ('v_reload2' === _0x1951b4) _0x17e626.events.call('v_reload2');else {
                    if ('v_reload3' === _0x1951b4) _0x17e626.events.call('v_reload3');else {
                      if ('veh' === _0x1951b4) {
                        if ((!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x4) && !_0x33b332.specials.veh) return _0x1a53e3.api.chatPush('Вы не администратор 4 ранга!');
                        if (!_0x4c825d[0x0]) return;
                        _0x17e626.game.streaming.isModelValid(_0x17e626.game.joaat(_0x4c825d[0x0])) ? _0x17e626.events.callRemote('2708114604', _0x4c825d[0x0], _0x4c825d[0x1], _0x4c825d[0x2]) : _0x1a53e3.api.chatPush('Такой модели в игре не существует!');
                      } else {
                        if ('givecar' === _0x1951b4) {
                          if (_0x1a53e3.api.getAdmin(_0x33b332) < 0x8 && !_0x33b332.specials.givecar) return;
                          _0x4c825d[0x1] && _0x4c825d[0x1].length && _0x17e626.game.streaming.isModelValid(_0x17e626.game.joaat(_0x4c825d[0x1])) ? _0x17e626.events.callRemote('2386225227', _0x4c825d[0x0], _0x4c825d[0x1], _0x4c825d[0x2] || 0x0, _0x4c825d[0x3] || 0x0) : _0x1a53e3.api.chatPush('Такой модели в игре не существует!');
                        } else {
                          if ('speech' === _0x1951b4) {
                            if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

                            _0x17e626.game.audio.playAmbientSpeechWithVoice(_0x33b332.handle, _0x4c825d[0x0], _0x4c825d[0x1], 'SPEECH_PARAMS_FORCE_SHOUTED', true);
                          } else {
                            if ('playmusicevent' === _0x1951b4) {
                              if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));
                              _0x17e626.game.audio.prepareMusicEvent(_0x4c825d[0x0]), await _0x17e626.game.sleep(0x3e8), _0x17e626.game.audio.triggerMusicEvent(_0x4c825d[0x0]);
                            } else {
                              if ('stopmusicevent' === _0x1951b4) {
                                if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

                                _0x17e626.game.audio.cancelMusicEvent(_0x4c825d[0x0]);
                              } else {
                                if ('mtp' === _0x1951b4) {
                                  if ((!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x2) && !_0x33b332.specials.mtp) return;

                                  if (_0x1a53e3.api.invokeNative('IS_WAYPOINT_ACTIVE')) {
                                    let _0x2fb85a = _0x1a53e3.api.invokeNative('_GET_BLIP_INFO_ID_ITERATOR'),
                                        _0x1a8369 = _0x1a53e3.api.invokeNative('GET_FIRST_BLIP_INFO_ID', _0x2fb85a),
                                        _0x3f31d0 = _0x1a53e3.api.invokeNative('GET_NEXT_BLIP_INFO_ID', _0x2fb85a);

                                    _0x17e626.game.cam.doScreenFadeOut(0x64), await _0x17e626.game.sleep(0x64);

                                    const _0x426b0f = _0x33b332.vehicle || _0x33b332;

                                    for (let _0x8449a5 = _0x1a8369; 0x0 != _0x1a53e3.api.invokeNative('DOES_BLIP_EXIST', _0x8449a5); _0x8449a5 = _0x3f31d0) if (0x4 == _0x1a53e3.api.invokeNative('GET_BLIP_INFO_ID_TYPE', _0x8449a5)) {
                                      let _0x5d276c = _0x17e626.game.ui.getBlipInfoIdCoord(_0x8449a5);

                                      _0x5d276c.z = _0x17e626.game.gameplay.getGroundZFor3dCoord(_0x5d276c.x, _0x5d276c.y, 0x3e8, 0x0, false);

                                      for (let _0x13bed7 = 0x0; _0x13bed7 < 0x3e8; _0x13bed7++) if (_0x426b0f.setCoordsNoOffset(_0x5d276c.x, _0x5d276c.y, _0x13bed7, false, false, false), await _0x17e626.game.sleep(0x0), _0x17e626.game.gameplay.getGroundZFor3dCoord(_0x5d276c.x, _0x5d276c.y, _0x13bed7, _0x5d276c.z, false)) {
                                        _0x5d276c.z = _0x13bed7;
                                        break;
                                      }

                                      _0x426b0f.setCoordsNoOffset(_0x5d276c.x, _0x5d276c.y, _0x5d276c.z, false, false, false), await _0x17e626.game.sleep(0x64), _0x17e626.game.cam.doScreenFadeIn(0x64);
                                    }
                                  }
                                } else {
                                  if ('getcurrentinterior' === _0x1951b4) {
                                    if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));
                                    const _0x493ce1 = _0x17e626.players.local.position;

                                    _0x1a53e3.api.chatPush('' + _0x17e626.game.interior.getInteriorAtCoords(_0x493ce1.x, _0x493ce1.y, _0x493ce1.z));
                                  } else {
                                    if ('secretautopilot' === _0x1951b4) {
                                      const _0x53da4b = _0x17e626.players.local.vehicle;
                                      if (!_0x53da4b) return;
                                      if (_0x17e626.players.local.autopilot) _0x1a53e3.api.notifyTrans('utils.autopilotDeactivated'), _0x17e626.players.local.clearTasks(), _0x17e626.players.local.autopilot = false;else {
                                        const _0x2d2a0c = _0x1a53e3.api.getWaypointPosition();

                                        if (!_0x2d2a0c) return;
                                        _0x17e626.players.local.taskVehicleDriveToCoordLongrange(_0x53da4b.handle, _0x2d2a0c.x, _0x2d2a0c.y, _0x2d2a0c.z + 0x2, 0x64, 0x400c0025, 0x32), _0x1a53e3.api.notifyTrans('utils.autopilotActivated'), _0x17e626.players.local.autopilot = true;
                                      }
                                    } else {
                                      if ('sethandling' === _0x1951b4) {
                                        if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));
                                        const _0x160c33 = _0x17e626.players.local.vehicle;
                                        if (!_0x160c33) return;

                                        _0x160c33.setHandling(_0x4c825d[0x0], isNaN(_0x4c825d[0x1]) ? _0x4c825d[0x1] : parseFloat(_0x4c825d[0x1]));
                                      } else 'hw' === _0x1951b4 ? (_0x17e626.game.audio.cancelMusicEvent(_0x577b3f.g.lastMusicEvent), _0x17e626.game.audio.prepareMusicEvent(_0x4c825d[0x0]), _0x17e626.game.audio.triggerMusicEvent(_0x4c825d[0x0]), _0x577b3f.g.lastMusicEvent = _0x4c825d[0x0]) : 'rtt' === _0x1951b4 ? _0x17e626.game.audio.setRadioTrack(_0x4c825d[0x0], _0x4c825d[0x1]) : 'rtt2' === _0x1951b4 ? _0x17e626.game.invoke('0x4E404A9361F75BB2', _0x4c825d[0x0], _0x4c825d[0x1], true) : 'rtt3' === _0x1951b4 && _0x17e626.game.invoke('0x2CB0075110BE1E56', _0x4c825d[0x0], _0x4c825d[0x1], parseInt(_0x4c825d[0x2]));
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }

          if ('loadipl' === _0x1951b4) {
            if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

            _0x17e626.game.streaming.requestIpl(_0x4c825d[0x0]);
          } else {
            if ('unloadipl' === _0x1951b4) {
              if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

              _0x17e626.game.streaming.removeIpl(_0x4c825d[0x0]);
            } else {
              if ('loadintprop' === _0x1951b4) {
                if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

                const _0x213ff5 = _0x17e626.game.interior.getInteriorAtCoords(_0x33b332.position.x, _0x33b332.position.y, _0x33b332.position.z);

                _0x17e626.game.interior.enableInteriorProp(_0x213ff5, _0x4c825d[0x0]), _0x17e626.game.interior.refreshInterior(_0x213ff5);
              } else {
                if ('unloadintprop' === _0x1951b4) {
                  if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

                  const _0x1579f0 = _0x17e626.game.interior.getInteriorAtCoords(_0x33b332.position.x, _0x33b332.position.y, _0x33b332.position.z);

                  _0x17e626.game.interior.disableInteriorProp(_0x1579f0, _0x4c825d[0x0]), _0x17e626.game.interior.refreshInterior(_0x1579f0);
                } else {
                  if ('walkstyle' === _0x1951b4) {
                    if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));
                    await _0x1a53e3.api.requestClipSet(_0x4c825d[0x0]), _0x1a53e3.api.setMovementClipset(_0x4c825d[0x0], 0x0);
                  } else {
                    if ('walkstyleweap' === _0x1951b4) {
                      if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));
                      await _0x1a53e3.api.requestClipSet(_0x4c825d[0x0]), _0x33b332.setWeaponMovementClipset(_0x4c825d[0x0]);
                    } else {
                      if ('splinetest' === _0x1951b4) {
                        if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));

                        const _0x400cde = _0x17e626.cameras.new('spline', _0x33b332.position, new _0x17e626.Vector3(0x0, 0x0, 0x0), 0x2d);

                        _0x17e626.game.cam.addCamSplineNode(_0x400cde.handle, 880.34, 43.2, 0x53, 0x0, 0x0, 131.05, 0x5, 0x0, 0x0), _0x17e626.game.cam.addCamSplineNode(_0x400cde.handle, 797.98, -57.68, 82.38, 0x0, 0x0, 53.62, 0x5, 0x0, 0x0), _0x17e626.game.cam.addCamSplineNode(_0x400cde.handle, 687.85, 10.95, 87.41, 0x0, 0x0, 53.62, 0x5, 0x0, 0x0), _0x17e626.game.cam.addCamSplineNode(_0x400cde.handle, 494.85, 37.8, 101.53, 0x0, 0x0, 148.92, 0x5, 0x0, 0x0), _0x17e626.game.cam.addCamSplineNode(_0x400cde.handle, 396.67, -131.49, 69.88, 0x0, 0x0, 66.94, 0x5, 0x0, 0x0), _0x17e626.game.cam.addCamSplineNode(_0x400cde.handle, 208.13, -59.58, 73.24, 0x0, 0x0, 4.64, 0x5, 0x64, 0x0), _0x17e626.game.cam.setCamSplineDuration(_0x400cde.handle, 0xbb8), _0x17e626.game.invoke('0xD1B0F412F109EA5D', _0x400cde.handle, 0x2), _0x17e626.game.invoke('0x7DCF7C708D292D55', _0x400cde.handle, 0xf, 0xf, 0xf), _0x400cde.setActive(true), _0x17e626.game.cam.renderScriptCams(true, false, 0x0, true, false, 0x0), await _0x17e626.game.sleep(0x2710), _0x400cde.destroy();
                      } else {
                        if ('objatttest' === _0x1951b4) _0x17e626.objects.exists(_0x577b3f.g.attTest) && _0x577b3f.g.attTest.destroy(), _0x577b3f.g.attTest = _0x17e626.objects.new(_0x17e626.game.joaat(_0x4c825d[0x0]), _0x33b332.position), _0x577b3f.g.attTest.attachTo(_0x33b332.handle, _0x33b332.getBoneIndex(parseInt(_0x4c825d[0x1])), parseFloat(_0x4c825d[0x2]), parseFloat(_0x4c825d[0x3]), parseFloat(_0x4c825d[0x4]), parseFloat(_0x4c825d[0x5]), parseFloat(_0x4c825d[0x6]), parseFloat(_0x4c825d[0x7]), false, false, false, false, 0x2, true), await _0x1a53e3.api.taskPlayAnim(_0x4c825d[0x8], _0x4c825d[0x9], 0x1, true);else {
                          if ('pedstest2' === _0x1951b4) {
                            for (let _0x130c54 = 0x0; _0x130c54 < parseInt(_0x4c825d[0x0]); _0x130c54++) _0x17e626.peds.new(_0x17e626.game.joaat('mp_f_freemode_01'), new _0x17e626.Vector3(0xa * Math.random() + _0x33b332.position.x, 0xa * Math.random() + _0x33b332.position.y, _0x33b332.position.z), 0x0, 0x0);
                          } else {
                            if ('radio2' === _0x1951b4) _0x17e626.events.callRemote('1984043797', 'radioid', _0x17e626.game.invoke('0xE8AF77C4C06ADC93')), _0x17e626.events.callRemote('1984043797', 'radioname', _0x17e626.game.audio.getRadioStationName(_0x17e626.game.invoke('0xE8AF77C4C06ADC93'))), _0x17e626.events.callRemote('1984043797', 'playback', _0x17e626.game.invoke('0x3E65CDE5215832C1', _0x17e626.game.audio.getRadioStationName(_0x17e626.game.invoke('0xE8AF77C4C06ADC93')))), _0x17e626.game.invoke('0x4E0AF9114608257C', _0x4c825d[0x0], _0x4c825d[0x1], parseInt(_0x4c825d[0x2]));else {
                              if ('weapanim' === _0x1951b4) _0x1a53e3.api.invokeNative('SET_WEAPON_ANIMATION_OVERRIDE', _0x17e626.players.local.handle, _0x17e626.game.joaat(_0x4c825d[0x0]));else {
                                if ('timecycle' === _0x1951b4) _0x17e626.game.graphics.setTimecycleModifier(_0x4c825d[0x0]);else {
                                  if ('snowlevel' === _0x1951b4) _0x17e626.game.invoke('0x7F06937B0CDCBC1A', parseFloat(_0x4c825d[0x0]));else {
                                    if ('getsnowlevel' === _0x1951b4) _0x17e626.console.logInfo('' + _0x17e626.game.invokeFloat('0xC5868A966E5BE3AE'));else {
                                      if ('tempaction' === _0x1951b4) _0x33b332.taskVehicleTempAction(_0x33b332.vehicle.handle, parseInt(_0x4c825d[0x0]), parseInt(_0x4c825d[0x1]));else {
                                        if ('steer' === _0x1951b4) _0x17e626.players.local.vehicle.setSteerBias(parseFloat(_0x4c825d[0x0]));else {
                                          if ('steertest' === _0x1951b4) _0x577b3f.g.steer = !_0x577b3f.g.steer, _0x577b3f.g.steerAngleCtrl = parseInt(_0x4c825d[0x0]), _0x577b3f.g.steerAngle = parseFloat(_0x4c825d[0x1]);else {
                                            if ('clod' === _0x1951b4) {
                                              for (_0x577b3f.g.pedclod = _0x17e626.peds.new(_0x17e626.game.joaat('mp_m_freemode_01'), _0x17e626.players.local.position, 0x0, 0x0); !_0x577b3f.g.pedclod.handle;) await _0x17e626.game.sleep(0x0);

                                              _0x577b3f.g.pedclod.setComponentVariation(parseInt(_0x4c825d[0x0]), parseInt(_0x4c825d[0x1]), parseInt(_0x4c825d[0x2]), 0x2);
                                            } else 'setlod' === _0x1951b4 && _0x577b3f.g.pedclod.setLodDist(parseInt(_0x4c825d[0x0]));
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }

          if ('localanimtest' === _0x1951b4) {
            if (!_0x1a53e3.api.getAdmin(_0x33b332) || _0x1a53e3.api.getAdmin(_0x33b332) < 0x9) return _0x1a53e3.api.chatPush(_0x1a53e3.api.language.translatePlayer('admin.notAdmin'));
            await _0x1a53e3.api.requestAnimDict(_0x4c825d[0x0]), _0x33b332.taskPlayAnim(_0x4c825d[0x0], _0x4c825d[0x1], parseInt(_0x4c825d[0x2]), parseInt(_0x4c825d[0x3]), -0x1, parseInt(_0x4c825d[0x4]), 0x0, false, false, false);
          }
        });
        let _0x4ab931 = false,
            _0xc67882 = [0x4b, 0x116, 0x117, 0x118, 0x119, 0x17, 0x3b, 0x3c, 0x47, 0x48, 0x4a, 0x51, 0x52, 0x53, 0x54, 0x55];

        _0x17e626.events.add('utils.disablePlayerExit', _0x299179 => {
          _0x4ab931 = !!_0x299179;
        });

        let _0x5c178c = false,
            _0x34454c = [0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x2c, 0x8c, 0x8d];

        _0x17e626.events.add('utils.disablePlayerMove', _0x544ae9 => {
          _0x5c178c = !!_0x544ae9;
        });

        let _0x4b525b = false;

        _0x17e626.events.add('utils.disablePlayerVehShoot', _0x519dab => {
          _0x4b525b = !!_0x519dab;
        });

        let _0x3a6c5d = false;

        _0x17e626.events.add('utils.disablePlayerSprint', _0x5bf6f => {
          _0x3a6c5d = !!_0x5bf6f;
        });

        let _0x497840 = false;

        _0x17e626.events.add('utils.disablePlayerJump', _0x13ac82 => {
          _0x497840 = !!_0x13ac82;
        });

        let _0x14e5ce = false,
            _0xe1d245 = [0x18, 0x19, 0x32, 0x44, 0x45, 0x46, 0x5b, 0x5c, 0x101];

        _0x17e626.events.add('utils.disablePlayerShoot', _0x49540a => {
          _0x14e5ce = !!_0x49540a;
        });

        let _0x2d183f = false;

        _0x17e626.events.add('utils.disablePlayerDamage', _0x32fc9f => {
          _0x32fc9f ? _0x2d183f = true : (_0x2d183f = false, _0x33b332.setProofs(false, false, false, false, false, false, false, false));
        });

        let _0x2e9c79,
            _0x478ec0,
            _0x1efe46 = 0x0;

        _0x17e626.events.add('utils.setRestartIn', (_0x5b3926 = 0x1f4) => {
          _0x1efe46 = _0x5b3926, _0x5b3926 ? _0x2e9c79 || (_0x2e9c79 = new _0x2944bd.TimerBar('system.restartIn'), _0x2e9c79.value = '60:00') : _0x2e9c79 && (_0x2e9c79.visible = false, _0x2e9c79 = undefined);
        }), _0x17e626.events.add('time.every05Sec', () => {
          if (_0x17e626.game.ui.isPauseMenuActive() && _0x17e626.gui.cursor.visible && (_0x17e626.gui.cursor.visible = false), _0x1a53e3.api.isAuthed()) {
            const _0x577385 = _0x33b332.isRagdoll();

            _0x577385 !== _0x4d05d7 && (_0x4d05d7 = _0x577385, _0x577385 ? (_0x17e626.events.call('playerRagdoll', true), _0x17e626.events.callRemoteUnreliable('1848477201', true)) : (_0x17e626.events.call('playerRagdoll', false), _0x17e626.events.callRemoteUnreliable('1848477201', false)));
          }
        }), _0x17e626.events.add('time.everySec', () => {
          if (_0x1efe46) {
            _0x1efe46--;

            const _0x295458 = parseInt(_0x1efe46 / 0x3c),
                  _0x290092 = parseInt(_0x1efe46 % 0x3c);

            _0x2e9c79 && (_0x2e9c79.value = ('0' + _0x295458).slice(-0x2) + ':' + ('0' + _0x290092).slice(-0x2), _0x1efe46 <= 0x0 ? (_0x17e626.game.audio.playSoundFrontend(-0x1, 'OTHER_TEXT', 'HUD_AWARDS', true), _0x2e9c79 && (_0x2e9c79.visible = false), _0x2e9c79 = undefined) : 0xa === _0x1efe46 && _0x17e626.game.audio.playSoundFrontend(-0x1, '10s', 'MP_MISSION_COUNTDOWN_SOUNDSET', true));
          }

          _0x1a53e3.api.isAuthed() && (_0x577b3f.g.interfaces.inventory && _0x1a53e3.api.getEntitySync(_0x33b332, 'isDead', 'boolean') && _0x17e626.events.call('inventoryApi.close'), _0x17e626.game.gameplay.ignoreNextRestart(true), _0x17e626.game.gameplay.disableAutomaticRespawn(true), _0x17e626.game.gameplay.setFadeInAfterDeathArrest(false), _0x17e626.game.gameplay.setFadeOutAfterDeath(false), _0x17e626.game.gameplay.setFadeInAfterLoad(false), _0x17e626.game.gameplay.setFadeOutAfterArrest(false), _0x1a53e3.api.getLocalVariable('handItem') && !_0x33b332.getConfigFlag(0x92, true) ? _0x33b332.setConfigFlag(0x92, true) : !_0x1a53e3.api.getLocalVariable('handItem') && _0x33b332.getConfigFlag(0x92, true) && _0x33b332.setConfigFlag(0x92, false));
        }), _0x17e626.events.add('time.every5Sec', () => {
          _0x1a53e3.api.isAuthed() && (_0x17e626.game.ped.getConfigFlag(_0x17e626.players.local.handle, 0x64, true) && !_0x17e626.players.local.vehicle && (0x2 == _0x577b3f.g.currentDrunkLevel ? _0x1a53e3.api.setMovementClipset('move_m@drunk@slightlydrunk') : 0x3 == _0x577b3f.g.currentDrunkLevel ? _0x1a53e3.api.setMovementClipset('move_m@drunk@moderatedrunk') : _0x577b3f.g.currentDrunkLevel > 0x3 && _0x1a53e3.api.setMovementClipset('move_m@drunk@verydrunk')), _0x17e626.game.cam.invalidateIdle(), _0x17e626.game.cam.invalidateVehicleIdle(), _0x17e626.game.network.setLocalPlayerSyncLookAt(true), _0x17e626.game.vehicle.displayDistantVehicles(false), _0x17e626.game.graphics.disableVehicleDistantlights(true));
        });

        let _0x2efb15,
            _0x4d05d7,
            _0x273462,
            _0x5b0dcf,
            _0x5b94cc,
            _0x14ba66 = 0x0,
            _0x3e95fe = 0x0,
            _0x3fb524 = 0x0,
            _0x54639e = -0x1,
            _0x5cb251 = Date.now();

        _0x577b3f.g.renderDisabled = false, _0x17e626.events.add('time.every05Sec', () => {
          Date.now() - _0x316379 < 0x1d4c || (!_0x577b3f.g.renderDisabled && Date.now() - _0x5cb251 > 0x3e8 ? (_0x577b3f.g.renderDisabled = true, _0x17e626.gui.cursor.show(true, true)) : _0x577b3f.g.renderDisabled && Date.now() - _0x5cb251 < 0x3e8 && (_0x577b3f.g.renderDisabled = false, _0x17e626.gui.cursor.show(false, false)));
        });

        const _0x2a6994 = (0x0, _0x512dcf.D)(() => {
          _0x17e626.events.callRemoteUnreliable('3654308261', _0x5b0dcf);
        }, 0x64);

        _0x17e626.events.add('render', () => {
          const a0_0x2af9f1 = {
            _0x293e5c: 0x1f30,
            _0x45b332: 0x2530,
            _0x18498c: 0x1d66,
            _0x5ce116: 0x135c,
            _0x334b2f: 0x2001,
            _0x528af9: 0x623,
            _0x4f3a4b: 0xc8b,
            _0x64186: 0x3e4,
            _0x36c032: 0x632,
            _0x3c69d8: 0x13b4,
            _0x37252c: 0xf79,
            _0x19dacc: 0x1040,
            _0x310a62: 0x8ad,
            _0xc9ce1d: 0x8aa,
            _0x1e2168: 0x1f30,
            _0x41161e: 0x24ee,
            _0x5e1241: 0x82d,
            _0x4e36b8: 0x1f30
          };
          if (_0x2d183f && _0x33b332.setProofs(true, true, true, true, true, true, true, true), (_0x33b332.godmode || _0x33b332.localGodMode) && (_0x33b332.setProofs(true, true, true, true, true, true, true, true), _0x33b332.setInvincible(true)), _0x17e626.game.ui.hideHudComponentThisFrame(0x2), _0x17e626.game.ui.hideHudComponentThisFrame(0x3), _0x17e626.game.ui.hideHudComponentThisFrame(0x4), _0x17e626.game.ui.hideHudComponentThisFrame(0x7), _0x17e626.game.ui.hideHudComponentThisFrame(0x9), _0x17e626.game.ui.hideHudComponentThisFrame(0xd), _0x17e626.game.ui.hideHudComponentThisFrame(0x11), _0x17e626.game.ui.hideHudComponentThisFrame(0x14), _0x1a53e3.api.isAuthed() && (_0x17e626.game.player.setLockonRangeOverride(0x0), _0x17e626.game.player.setHealthRechargeMultiplier(0x0), _0x17e626.game.controls.disableControlAction(0x1, 0x7, true), _0x17e626.game.ui.displayAmmoThisFrame(false), _0x17e626.game.controls.disableControlAction(0x2, 0xf3, true), _0x17e626.game.controls.disableControlAction(0x0, 0x8c, true), _0x17e626.game.controls.disableControlAction(0x0, 0x8d, true)), _0x4a97c3 && _0x17e626.vehicles.forEachInStreamRange(_0x617898 => {
            _0x1a53e3.api.vdist(_0x33b332.position.x, _0x33b332.position.y, _0x33b332.position.z, _0x617898.position.x, _0x617898.position.y, _0x617898.position.z) > 0x14 || _0x33b332.hasClearLosTo(_0x617898.handle, 0x11) && _0x17e626.game.graphics.drawText('ID: ' + _0x617898.remoteId + '. LOCK: ' + _0x1a53e3.api.getEntitySync(_0x617898, 'locked', 'boolean') + '. MODEL: ' + _0x17e626.game.vehicle.getDisplayNameFromVehicleModel(_0x617898.model) + '. CN: ' + (_0x617898.controller ? _0x617898.controller.name : 'F') + '. HP: ' + _0x617898.getEngineHealth() + '.\nX:' + _0x617898.position.x.toFixed(0x2).toString() + ' Y:' + _0x617898.position.y.toFixed(0x2).toString() + ' Z:' + _0x617898.position.z.toFixed(0x2).toString(), [_0x617898.position.x, _0x617898.position.y, _0x617898.position.z], {
              'font': 0x0,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [0.4, 0.4],
              'outline': false,
              'centre': true
            });
          }), _0x7c5676) for (const _0x5775d2 of _0x17e626.objects.streamed2()) {
            const _0x1471be = _0x1a53e3.api.getEntityCoords(_0x5775d2);

            _0x17e626.game.graphics.drawText('ID: ' + _0x5775d2.remoteId + '. SQLID: ' + _0x5775d2.getVariable('itemSqlId') + '. \nX:' + _0x1471be.x.toFixed(0x2).toString() + ' Y:' + _0x1471be.y.toFixed(0x2).toString() + ' Z:' + _0x1471be.z.toFixed(0x2).toString(), [_0x1471be.x, _0x1471be.y, _0x1471be.z], {
              'font': 0x0,
              'color': [0xff, 0xff, 0xff, 0xb9],
              'scale': [0.4, 0.4],
              'outline': false,
              'centre': true
            });
          }

          if (_0x5cb251 = Date.now(), _0x4ab931 && _0xc67882.forEach(_0x3f7f28 => {
            _0x17e626.game.controls.disableControlAction(0x0, _0x3f7f28, true);
          }), _0x5c178c && _0x34454c.forEach(_0x278100 => {
            _0x17e626.game.controls.disableControlAction(0x0, _0x278100, true);
          }), _0x4b525b && (_0x17e626.game.controls.disableControlAction(0x0, 0x45, true), _0x17e626.game.controls.disableControlAction(0x0, 0x46, true), _0x17e626.game.controls.disableControlAction(0x0, 0x5c, true)), _0x3a6c5d && _0x17e626.game.controls.disableControlAction(0x0, 0x15, true), _0x497840 && _0x17e626.game.controls.disableControlAction(0x0, 0x16, true), _0x14e5ce && _0xe1d245.forEach(_0x3c1368 => {
            _0x17e626.game.controls.disableControlAction(0x0, _0x3c1368, true);
          }), _0x1a53e3.api.isAuthed()) {
            const _0x1f7819 = _0x33b332.getArmour();

            _0x1f7819 !== _0x989187 && (_0x989187 = _0x1f7819, _0x17e626.events.callRemote('2959821776', _0x1f7819));

            const _0x3761b7 = _0x1a53e3.api.getCurrentInterior();

            if (_0x3761b7 !== _0x478ec0 && Date.now() - _0x14ba66 > 0xc8) {
              _0x14ba66 = Date.now();
              const _0x22a89d = _0x478ec0;
              _0x478ec0 = _0x3761b7, _0x33b332.interior = _0x3761b7, 0x0 !== _0x3761b7 ? (_0x17e626.events.call('playerEnterInterior', _0x3761b7), _0x17e626.events.callRemoteUnreliable('1890628890', _0x3761b7)) : (_0x17e626.events.call('playerExitInterior', _0x22a89d), _0x17e626.events.callRemoteUnreliable('2017476888', _0x22a89d));
            }

            const _0x169e26 = _0x1a53e3.api.getCurrentRoomInterior();

            _0x169e26 !== _0x2efb15 && Date.now() - _0x3e95fe > 0xc8 && (_0x3e95fe = Date.now(), _0x2efb15 = _0x169e26, _0x17e626.events.call('playerChangeRoomInterior', _0x169e26));

            const _0x418243 = _0x33b332.isJumping();

            _0x418243 !== _0x273462 && (_0x273462 = _0x418243, _0x418243 ? _0x17e626.events.call('playerJump', true) : _0x17e626.events.call('playerJump', false));

            const _0x5b59b8 = _0x33b332.isInWater();

            _0x5b59b8 !== _0x5b0dcf && (_0x5b0dcf = _0x5b59b8, _0x5b59b8 ? (_0x17e626.events.call('playerInWater', true), _0x2a6994()) : (_0x17e626.events.call('playerInWater', false), _0x2a6994()));

            const _0x587e5b = _0x33b332.getHealth();

            if (_0x587e5b !== _0x5b94cc) {
              const _0x48b328 = _0x5b94cc;
              _0x5b94cc = _0x587e5b, _0x587e5b && (_0x17e626.events.call('playerDamaged', _0x48b328 - _0x587e5b), _0x1a53e3.api.isAuthed() && _0x17e626.events.callRemoteUnreliable('2576543538', _0x48b328 - _0x587e5b));
            }

            const _0x24caef = _0x33b332.getParachuteState();

            _0x24caef !== _0x54639e && (_0x54639e = _0x24caef, _0x24caef >= -0x1 && _0x24caef <= 0x2 && (_0x17e626.events.call('onPlayerParachute', _0x24caef), _0x17e626.events.callRemoteUnreliable('236336865', _0x24caef)));
            const _0x1aef07 = _0x33b332.dimension;

            if (_0x1aef07 !== _0x3fb524) {
              const _0x4f2784 = _0x3fb524;
              _0x3fb524 = _0x1aef07, _0x17e626.events.call('onPlayerDimensionChange', _0x4f2784, _0x1aef07);
            }
          }

          _0xd18e01 > 0x0 && (_0x17e626.game.ped.setCreateRandomCops(false), _0x17e626.game.invoke('0x8A4986851C4EF6E7', false), _0x17e626.game.invoke('0x444CB7D7DBE6973D', false));
        }), _0x17e626.events.add('client.createBoombox', (_0x2ea9a6, _0x33aa4c = 0x1) => {
          const _0x339b8b = _0x17e626.objects.atRemoteId(_0x2ea9a6);

          _0x17e626.objects.exists(_0x339b8b) && (_0x17e626.events.call('api.placeStaticObject', _0x2ea9a6), _0x17e626.events.call('api.emittRadioFrom', _0x2ea9a6, _0x33aa4c));
        }), _0x17e626.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x17e626.game.audio.cancelCurrentPoliceReport(), _0x17e626.game.audio.clearAmbientZoneState('AZ_COUNTRYSIDE_PRISON_01_ANNOUNCER_GENERAL', true), _0x17e626.game.audio.clearAmbientZoneState('AZ_COUNTRYSIDE_PRISON_01_ANNOUNCER_WARNING', true), _0x17e626.game.audio.clearAmbientZoneState('AZ_COUNTRYSIDE_PRISON_01_ANNOUNCER_ALARM', true), _0x17e626.game.audio.setAmbientZoneListStatePersistent('AZ_DISTANT_SASQUATCH', false, false), _0x17e626.game.audio.setAmbientZoneListStatePersistent('AZ_DISTANT_VEHICLES_CITY_CENTRE', false, false), _0x17e626.game.audio.setAudioFlag('LoadMPData', true), _0x17e626.game.audio.setAudioFlag('DisableFlightMusic', true);
        });
      },
      0xda37: (_0xd18f54, _0x1b67ba, _0x591852) => {
        'use strict';

        const a0_0x2c57da = {
          _0xebe706: 0xadd
        },
              a0_0x3987fe = {
          _0x764546: 0x1d66,
          _0x41867f: 0x59d,
          _0x2884f6: 0x146a,
          _0x55b598: 0x146a
        },
              a0_0x464317 = {
          _0x55b9d6: 0x146a,
          _0x1f83b7: 0x12df,
          _0x14783b: 0x249d,
          _0x3ba261: 0x1e15,
          _0x4415c4: 0x5b4,
          _0x47393c: 0x1f30,
          _0xee7cbb: 0x1d55,
          _0x294353: 0xa26,
          _0xa3887c: 0xac9,
          _0x42b885: 0x1c50,
          _0x5179c7: 0x25e1,
          _0x359680: 0x136c,
          _0x4eef37: 0x25e1,
          _0x2290ec: 0x2fd
        };
        _0x591852.r(_0x1b67ba), _0x591852.d(_0x1b67ba, {
          'ActionColshape': () => _0x31d5a6
        });

        var _0x2dd04a = _0x591852(0x16a21),
            _0x4473c5 = _0x591852(0x161cd);

        const _0x2913dd = _0x4473c5.players.local,
              _0x5547cf = new Set();

        class _0x31d5a6 {
          constructor(_0x17fcfd = {}) {
            this._onTrigger = _0x17fcfd.onTrigger, this._onEnter = _0x17fcfd.onEnter, this._onLeave = _0x17fcfd.onLeave, this.canUse = true, this.position = _0x17fcfd.position || new _0x4473c5.Vector3(0x0, 0x0, 0x0), this.dimension = _0x17fcfd.dimension || 0x0, this.range = _0x17fcfd.range || 0x1, this.canUseInVehicle = null != _0x17fcfd.vehicle && _0x17fcfd.vehicle, this.notification = _0x17fcfd.text, this.notificationDuration = _0x17fcfd.textDuration || 0x1388, this.shape = _0x4473c5.colshapes.newCircle(this.position.x, this.position.y, this.range, this.dimension), this.shape.actioncolshape = this;
          }

          ['onTrigger']() {
            _0x4473c5.game.ui.clearHelp(true), this._onTrigger && this._onTrigger();
          }

          ['onEnter']() {
            this.notification && _0x2dd04a.api.displayHelpStringTrans(this.notification, false, true, this.notificationDuration), this._onEnter && this._onEnter();
          }

          ['onLeave']() {
            _0x4473c5.game.ui.clearHelp(true), this._onLeave && this._onLeave();
          }

        }

        _0x4473c5.events.add('playerEnterColshape', _0x4e4a3f => {
          if (null == _0x4e4a3f.actioncolshape) return;
          const _0x5c95b3 = _0x4e4a3f.actioncolshape;
          !_0x5c95b3.canUseInVehicle && _0x2913dd.vehicle || Math.abs(_0x5c95b3.position.z - _0x2913dd.position.z) > 0x2 || _0x5c95b3.onEnter && (_0x5547cf.add(_0x5c95b3), _0x5c95b3.onEnter());
        }), _0x4473c5.events.add('playerExitColshape', _0x34d0cd => {
          if (null == _0x34d0cd.actioncolshape) return;
          const _0x3e23d8 = _0x34d0cd.actioncolshape;
          _0x3e23d8 && (_0x5547cf.delete(_0x3e23d8), _0x3e23d8.onLeave());
        }), _0x4473c5.events.add('keys.e', () => {
          const _0x471039 = _0x5547cf.size;

          if (0x0 != _0x471039) {
            const _0x37fcca = Array.from(_0x5547cf)[_0x471039 - 0x1];

            _0x37fcca && (_0x37fcca.onTrigger(), _0x5547cf.clear());
          }
        });
      },
      0x16e5f: (_0x4b30e3, _0x577668, _0xb8cbbb) => {
        'use strict';

        const a0_0x107db4 = {
          _0x34e475: 0x535,
          _0x1cd5ca: 0x2028
        },
              a0_0x4b000a = {
          _0x7da19e: 0x1c26
        },
              a0_0x354b78 = {
          _0x5b4a34: 0x1863,
          _0x41ac37: 0x6da,
          _0x1535c4: 0x16e9,
          _0x310701: 0x1fc8
        },
              a0_0x50f469 = {
          _0x22b523: 0x2028,
          _0x4cab9f: 0x1985,
          _0x57f116: 0x1104,
          _0x3a1d6a: 0x2124,
          _0x30ae28: 0x10b8,
          _0x56cd0d: 0x1136,
          _0x142c10: 0x10b8,
          _0x466bba: 0x2471,
          _0x1eb2a3: 0x709,
          _0x4a4787: 0x19b1,
          _0x4c0c4e: 0x381,
          _0x5a421d: 0x1136,
          _0x461b8f: 0x1136,
          _0x537a9a: 0xbdb,
          _0x1bef92: 0x1a2c,
          _0x202652: 0x1c07,
          _0x334db8: 0x3a9,
          _0x164ae6: 0x1ec6,
          _0x907d1: 0x535,
          _0x5829b5: 0xacf,
          _0x42be76: 0x1cda,
          _0x4b27d: 0x1d2,
          _0x39766f: 0x5c6,
          _0x28fffe: 0x258c
        },
              a0_0x52ed0b = {
          _0x8742b3: 0x522,
          _0x28761f: 0x5c6
        },
              a0_0x2ac79f = {
          _0x5e835c: 0x11c6
        };

        _0xb8cbbb.d(_0x577668, {
          'Z': () => _0x192406
        });

        var _0x5e1e8e = _0xb8cbbb(0x16a21),
            _0x2771ee = _0xb8cbbb(0x3064),
            _0xa9143e = _0xb8cbbb(0xb2e6),
            _0x51900b = _0xb8cbbb(0x5d14),
            _0x126047 = _0xb8cbbb(0x161cd);

        const _0x1128f7 = {
          'market': {
            'christmas': ['ATinyLove', 'NeverComingBack', 'GenshinNight', 'LoneSojourner', 'GenshinImpact_106', 'GenshinImpact_29', 'HappyJourney', 'OHolyNight', 'SilentNight', 'AngelsWeHaveHeardOnHigh', 'OComeAllYeFaithful', 'InTheBleakMidwinter', 'FairestLodrJesus', 'OHolyNight', 'WindForest', 'ATownWithAnOceanView', 'MerryGoRoundOfLife', 'DayOfTheRiver'],
            'night': ['ATinyLove', 'NeverComingBack', 'MinstrelsLament', 'TheLongNight', 'GenshinNight', 'LoneSojourner', 'TheEdgeOfThePrairie', 'GenshinImpact_6', 'GenshinImpact_17', 'GenshinImpact_27', 'GenshinImpact_44', 'GenshinImpact_47', 'GenshinImpact_74', 'GenshinImpact_76', 'AkihiroManabe_KotokoandSaki', 'GenshinImpact_16_0_16', 'GenshinImpact_16_1_9', 'GenshinImpact_16_1_10', 'GenshinImpact_16_2_2', 'GenshinImpact_16_2_3', 'GenshinImpact_16_2_4', 'GenshinImpact_16_2_8'],
            'dusk': ['Sentiment', 'Harpy2', 'CastleJam', 'ASweetSmile', 'NothingElseMatters', 'GenshinDusk', 'GenshinImpact_28', 'GenshinImpact_36', 'GenshinImpact_41', 'GenshinImpact_111', 'FlowerBlossomingInItsPath', 'WhatLivesInTheEdgeOfJasper', 'GenshinImpact_16_1_1', 'GenshinImpact_16_2_9', 'GenshinImpact_16_3_14', 'TheGreenFields', 'FlyingJourney'],
            'day': ['TwoMandolins', 'InTheMarketplace', 'WithMyFriend', 'FirstTown', 'NomadicJourney', 'ShouninToOokamiTo', 'PureNagiNoAsukara', 'SmallStepOfLove', 'MatsuriNoUta', 'HappyJourney', 'GenshinImpact_29', 'GenshinImpact_106', 'GenshinImpact_108', 'AkihiroManabe_AManwhoSeestheFuture', 'AkihiroManabe_Ayakashi', 'AkihiroManabe_KotokoandAyakashi', 'AkihiroManabe_KotokoandKuro', 'WhereTheSunlightFlees', 'HikaruWadachi', 'BailandoEnElCielo', 'BirdsSong', 'GenshinImpact_16_3_1', 'LobsterPolska', 'SweatJito', 'QuaintCity']
          },
          'ucp': {
            'christmas': ['OHolyNight', 'SilentNight', 'AngelsWeHaveHeardOnHigh', 'OComeAllYeFaithful', 'InTheBleakMidwinter', 'FairestLodrJesus', 'OHolyNight', 'ZormaWinterTale', 'WindForest', 'ATownWithAnOceanView', 'MerryGoRoundOfLife', 'DayOfTheRiver'],
            'day': ['ASweetSmile', 'BeyondTheClouds', 'Bungeibu', 'DaftPunkOrchestra', 'HappyJourney', 'TheProdigyOrchestra', 'TheQueensHighSeas', 'TheSims', 'TravellingTango', 'GenshinDay', 'GenshinImpact_76', 'DarknessTheme', 'AkihiroManabe_DestinedEncounter', 'AkihiroManabe_InSpectre', 'LetsGoCrimsonKnight', 'MahoukaKoukouNichijou'],
            'dusk': ['ArukasLoad', 'CoffinDance', 'Departure', 'HiNoAtaruHeya', 'Imprint', 'TheEdgeOfThePrairie', 'VoiceOverSky', 'GenshinDusk', 'GenshinImpact_28', 'GenshinImpact_36', 'GenshinImpact_41', 'GenshinImpact_47', 'GenshinImpact_111', 'AkihiroManabe_KotokoandSaki'],
            'night': ['Analytics', 'ATinyLove', 'BloomingFlowers', 'EnAnnanTidEttAnnatLiv', 'LootJustinBell', 'NeverComingBack', 'Sentiment', 'TheVoiceInMyHeart', 'TraditionalHill', 'Sweden', 'GenshinNight', 'GenshinImpact_27', 'GenshinImpact_55', 'GenshinImpact_74']
          },
          'pausemenu': ['Sims3LetsAssimilate', 'Sims3UrbanTreats', 'Sims3WhereYouAre', 'Sims3ChasingTheStars', 'Sims3SimpleDirections', 'Sims3MapsSimbols'],
          'customization': ['AmazingFacsmile', 'FortissimoPersonality', 'Verisimilitude', 'IdentityCheck'],
          'church': ['GenshinImpact_105_wedding', 'GenshinImpact_111', 'GenshinImpact_41', 'LoneSojourner', 'Berceuse', 'AndanteCantabile', 'BeautyAndTheBeast', 'Lied'],
          'library': ['LivingDeath', 'SlughornsConfession', 'SalamanderEyes', 'SecretsOfTheCastle', 'AWindowToThePast', 'NewtAndLeta', 'TheFriends'],
          'prison': ['PrisonMusic1', 'PrisonMusic2', 'PrisonMusic3', 'PrisonMusic4', 'PrisonMusic5'],
          'autoshop': ['ViajeenDubDanaySuarez', 'KingsOfTheRollersGuitarTrack', 'TychoEasy', 'ToothandNailONEDUO', 'NGHTMREZHUMansFirstInhibition', 'BonoboLinked', 'TroyBoiSayYeah', 'EveReload'],
          'intro': {
            'forest': ['GreensleevesBasilWahn'],
            'island': ['beach_part1', 'beach_part2', 'beach_part3'],
            'autumn': ['Disambiguation'],
            'xmas1': ['ChristmasAccordion'],
            'xmas2': ['LilNasHolidayROOM'],
            'halloween': ['HauntedPlayhouse', 'HauntedMansions']
          }
        };

        _0x126047.events.add('sounds.trigger', (_0x5d0816, _0x410eca) => {
          'onAmbientMusicEnd' === _0x5d0816 && _0x192406.onSongFinish(_0x410eca);
        });

        const _0x192406 = new class {
          constructor() {
            this.active = false, this.isPlaying = false, this.volume = 0x64, this.currentCategory, this.currentList = [], this.songHistory = [], this.songInterval = undefined, this.waitTime = false;
          }

          ['play'](_0x124652, _0x4b14da = {}) {
            const _0x43d4aa = !!_0x4b14da.force;

            this.stop(true), this.reset(), this.volume = _0x4b14da.volume ? _0x4b14da.volume : 0x19, this.waitTime = !!_0x4b14da.waitTime && _0x4b14da.waitTime, this.startOffsetPercent = _0x4b14da.startOffsetPercent ? _0x4b14da.startOffsetPercent : 0x0, this.loop = !!_0x4b14da.looped, this.currentCategory = _0x124652, _0x43d4aa ? this.handleCategory() : this.createTimer(_0x51900b.u.integer({
              'min': 0xbb8,
              'max': 0x61a8
            }));
          }

          ['stop'](_0x858f10 = false) {
            this.isPlaying && (_0xa9143e.P.emit('stopAmbientMusic', {
              'force': _0x858f10,
              'soundId': this.currentSong
            }), this.isPlaying = false), this.currentSong = undefined, this.resetTimer();
          }

          ['handleCategory']() {
            if (!this.currentCategory) return;

            const _0x2857bb = _0x5e1e8e.api.invokeNative('GET_CLOCK_HOURS');

            switch (this.currentCategory) {
              case 'market':
                (0x0, _0x2771ee.isWinter)() ? this.currentList = this.categorySongs.christmas : this.currentList = _0x2857bb > 0x6 && _0x2857bb < 0x11 ? this.categorySongs.day : _0x2857bb >= 0x11 && _0x2857bb < 0x15 ? this.categorySongs.dusk : this.categorySongs.night;
                break;

              case 'ucp':
                (0x0, _0x2771ee.isWinter)() ? this.currentList = this.categorySongs.christmas : this.currentList = _0x2857bb > 0x6 && _0x2857bb < 0x12 ? this.categorySongs.day : _0x2857bb >= 0x12 && _0x2857bb < 0x16 ? this.categorySongs.dusk : this.categorySongs.night;
                break;

              default:
                this.currentList = this.categorySongs;
            }

            const _0x26e5e8 = this.currentList.length > 0x3 ? 0x3 : this.currentList.length;

            this.songHistory.length >= _0x26e5e8 && (this.songHistory = []);

            const _0xd7e8ab = this.currentList.filter(_0x5ba56c => !this.songHistory.includes(_0x5ba56c)),
                  _0x36e48a = _0x51900b.u.pickone(_0xd7e8ab),
                  _0x595a6c = 'music/' + _0x36e48a;

            _0xa9143e.P.emit('playAmbientMusic', {
              'sound': _0x595a6c,
              'soundId': _0x36e48a,
              'volume': _0x5e1e8e.api.getSoundVolume('ambientMusicVol', this.volume),
              'loop': this.loop,
              'fade': this.fade,
              'startOffsetPercent': this.startOffsetPercent
            }), this.songHistory.push(_0x36e48a), this.currentSong = _0x36e48a, this.isPlaying = true;
          }

          ['onSongFinish'](_0x4b2956) {
            this.isPlaying && (this.isPlaying = false, this.createTimer('number' == typeof this.waitTime ? parseInt(this.waitTime) : _0x51900b.u.integer({
              'min': 0x1d4c0,
              'max': 0x493e0
            })));
          }

          ['reset']() {
            this.active = false, this.isPlaying = false, this.waitTime = false, this.volume = 0x64, this.currentCategory, this.currentList = [], this.songHistory = [], this.resetTimer();
          }

          ['createTimer'](_0x195d45 = 0x3e8) {
            const a0_0x5b8208 = {
              _0x27863b: 0x1c26
            };
            this.resetTimer(), this.songTimer = setInterval(() => {
              clearInterval(this.songTimer), this.songTimer = undefined, this.handleCategory();
            }, _0x195d45);
          }

          ['resetTimer']() {
            this.songTimer && (clearInterval(this.songTimer), this.songTimer = undefined);
          }

          get ['categorySongs']() {
            return _0x5e1e8e.api.byString(_0x1128f7, this.currentCategory) || {};
          }

        }();
      },
      0x1249d: (_0x2fe1ec, _0xac316d, _0x10f04d) => {
        'use strict';

        const a0_0x472335 = {
          _0x2c6b31: 0x1fe9,
          _0x17e99f: 0x2606,
          _0x591271: 0x16c5,
          _0x24cfb1: 0x1fe9,
          _0x48538d: 0x535,
          _0x4cd9cd: 0x226e,
          _0x4cb371: 0x535,
          _0x32dfaa: 0xb0c,
          _0x379de9: 0x2143
        },
              a0_0x1108a8 = {
          _0x264a02: 0x1842,
          _0x270dbb: 0x1fe9,
          _0x18a9ed: 0xc81,
          _0x1e443c: 0x412,
          _0x167e14: 0x179a
        },
              a0_0x159939 = {
          _0x3733b6: 0x1fe9,
          _0x2e2688: 0x1fe9
        },
              a0_0x158bcc = {
          _0x4b44c1: 0x1fe9,
          _0x490a33: 0x1700,
          _0x3da4ba: 0x628,
          _0x47a9a4: 0x1ae2,
          _0x215924: 0x1ae2,
          _0x383774: 0x1fbf,
          _0x551795: 0x1ae2,
          _0x1c83f2: 0x1fbf
        };

        _0x10f04d.d(_0xac316d, {
          '$': () => _0x3ca5ca
        });

        var _0x3fe123 = _0x10f04d(0x16a21),
            _0x29560e = _0x10f04d(0x66f9),
            _0x10437 = _0x10f04d(0x161cd);

        const _0x2e3816 = {};

        class _0x3ca5ca {
          constructor(_0x24358e, _0x1f1c2e, _0xf6d79, _0x2dd5c1, _0x25614b = 0x0) {
            this.player = _0x24358e, this.objectModel = _0x1f1c2e, this.propAnimData = _0xf6d79, this.propAttachData = _0x2dd5c1, this.animOffset = _0x25614b, this.entity, this.isPlayingAnim = false, this._pendingObject = (0x0, _0x29560e.n)(_0x10437.game.joaat(_0x1f1c2e), this.player.position, {
              'alpha': 0x0,
              'dimension': -0x1
            }).then(_0xf452e2 => {
              this.entity = _0xf452e2, this.attach();
            }), this.pendingLoad, this.destroyed = false, Array.isArray(_0x2e3816[_0x3fe123.api.getPlayerStatic(this.player)]) || (_0x2e3816[_0x3fe123.api.getPlayerStatic(this.player)] = []), _0x2e3816[_0x3fe123.api.getPlayerStatic(this.player)].push(this);
          }

          ['attach']() {
            this.entity.handle && this.player.handle && (this.entity.setCollision(false, false), this.entity.attachTo(this.player.handle, this.player.getBoneIndex(this.propAttachData.bone), this.propAttachData.offsetPos.x, this.propAttachData.offsetPos.y, this.propAttachData.offsetPos.z, this.propAttachData.offsetRot.x, this.propAttachData.offsetRot.y, this.propAttachData.offsetRot.z, false, false, false, false, 0x2, true));
          }

          ['load']() {
            return this._pendingLoad || (this._pendingLoad = new Promise(async (_0x1920e5, _0x499c06) => (await this._pendingObject.then(_0x410814 => {
              this.entity || (this.entity = _0x410814);
            }), await Promise.all([this.propAnimData ? _0x3fe123.api.requestAnimDict(this.propAnimData[0x0]) : null, this._pendingObject]), _0x1920e5()))), this._pendingLoad;
          }

          ['play'](_0x4c24ca = false) {
            this.attach(), this.propAnimData && (this.entity.playAnim(this.propAnimData[0x1], this.propAnimData[0x0], 0x8, true, true, true, 0x0, 0x4000), this.entity.setAnimCurrentTime(this.propAnimData[0x0], this.propAnimData[0x1], this.animOffset)), this.entity.setAlpha(0xff), this.isPlayingAnim = true;
          }

          ['destroy']() {
            this.entity && _0x10437.objects.exists(this.entity) && this.entity.destroy(), this.destroyed = true;

            const _0x558bf2 = _0x2e3816[_0x3fe123.api.getPlayerStatic(this.player)]?.['findIndex'](_0x292f80 => _0x292f80 === this);

            undefined !== _0x558bf2 && -0x1 !== _0x558bf2 && _0x2e3816[_0x3fe123.api.getPlayerStatic(this.player)].splice(_0x558bf2, 0x1);
          }

        }

        _0x10437.events.add('animations.stopObjectAnimations', _0x3cf260 => {
          if (_0x10437.players.exists(_0x3cf260) && _0x3cf260.handle && _0x3cf260.localAnimObjectList && _0x3cf260.localAnimObjectList.length) {
            for (const _0x596836 of _0x3cf260.localAnimObjectList) _0x596836.destroy();

            _0x3cf260.localAnimObjectList = [];
          }
        }), _0x10437.events.add('time.every02Sec', () => {
          for (let _0x11e6bc in _0x2e3816) {
            const _0x29c244 = _0x2e3816[_0x11e6bc];

            for (const _0x2bf435 of _0x29c244) _0x10437.players.exists(_0x2bf435.player) && _0x10437.objects.exists(_0x2bf435.entity) && _0x2bf435.player.handle && _0x2bf435.entity.handle && !_0x2bf435.entity.isAttachedTo(_0x2bf435.player.handle) && _0x2bf435.play();
          }
        });
      },
      0x704e: (_0x171c19, _0x479aa0, _0x26d726) => {
        'use strict';

        const a0_0x2dd0cc = {
          _0x355aeb: 0x12fe,
          _0x6137c0: 0x44e
        },
              a0_0x1aa47b = {
          _0xa61eea: 0x1a3,
          _0x3bb719: 0x13ef,
          _0x277cea: 0x1087
        },
              a0_0x289993 = {
          _0x1bac43: 0x2219
        },
              a0_0x1979dd = {
          _0x2fb870: 0x1fe9,
          _0x1ee86d: 0x150a,
          _0x4c7d59: 0x192d,
          _0x231a42: 0x181b
        },
              a0_0x38b35f = {
          _0x31d056: 0x192d,
          _0x30b219: 0x1a6d,
          _0x20074b: 0x181b,
          _0x447e80: 0x18d6,
          _0x47c1f0: 0x1a3,
          _0xcfa58e: 0xb62
        },
              a0_0x575e16 = {
          _0x19f15c: 0x235b,
          _0x50caf3: 0x16c5,
          _0xcae63: 0x1b4b,
          _0x578944: 0x1b4b,
          _0x2de2d2: 0xb62,
          _0x18f79c: 0xb62,
          _0x3edcc3: 0x1cda,
          _0x45b600: 0x22bf,
          _0x12cd15: 0x1260,
          _0x50cba2: 0x44e,
          _0x36fe82: 0xa78,
          _0x294cb0: 0x12fe,
          _0x3245c9: 0x78a,
          _0x4c9223: 0x181b,
          _0x2418fc: 0x181b,
          _0x2adccc: 0x192d,
          _0x103e4a: 0x12b2,
          _0x40f05c: 0x8d2,
          _0x1268eb: 0x1f30,
          _0x132bae: 0x2219,
          _0x97c75c: 0x1cda,
          _0x10fc52: 0x1087
        },
              a0_0x5454c5 = {
          _0x58d41d: 0x1a3
        },
              a0_0x18b201 = {
          _0x180511: 0xacf,
          _0x541fd4: 0x15de
        },
              a0_0x46550e = {
          _0x537b50: 0xe10
        };
        _0x26d726.r(_0x479aa0), _0x26d726.d(_0x479aa0, {
          'AnimSounds2D': () => _0x416849,
          'AnimSounds3D': () => _0x143ec6,
          'animSoundBrowser': () => _0x1d8f78,
          'localAnimSound': () => _0x561c42
        });

        var _0x2746b7 = _0x26d726(0x16a21),
            _0x577ed9 = _0x26d726(0x1d7e),
            _0x2b7a0b = _0x26d726(0x12a76),
            _0x4216ee = (_0x26d726(0x5d14), _0x26d726(0x161cd));

        const _0x1d8f78 = _0x4216ee.browsers.new('https://cdn2.majestic-files.com/workers/animsounds/index.html?' + Date.now().toString(0x24));

        (0x0, _0x2b7a0b.patchBrowser)(_0x1d8f78), _0x4216ee.events.add('browserDomReady', _0x51f6c0 => {
          _0x51f6c0 === _0x1d8f78 && (_0x1d8f78.isReady = true);
        });
        let _0x561c42 = {
          '_entity': null,

          set 'entity'(_0x3fe0ea) {
            this._entity = _0x3fe0ea;
          },

          get 'entity'() {
            return this._entity;
          }

        };
        const _0x4917e2 = {
          'nearestSound': null,
          'soundPool': {}
        };

        class _0x416849 {
          constructor(_0x6925cb, _0x92ff5e) {
            this.sound = _0x6925cb, this.id = _0x92ff5e && null != _0x92ff5e.id ? _0x92ff5e.id : _0x2746b7.api.shortUUID_5(), this.loop = !(!_0x92ff5e || null == _0x92ff5e.loop) && _0x92ff5e.loop, this.isCDN = !(!_0x92ff5e || null == _0x92ff5e.isCDN) && _0x92ff5e.isCDN, this.volumeType = _0x92ff5e && null != _0x92ff5e.volumeType ? _0x92ff5e.volumeType : 'animMusicVol', this._volume = _0x92ff5e && null != _0x92ff5e.volume ? _0x92ff5e.volume : 0x64, this._pendingLoad, this._pendingLoadResolve, this._lastVolume = this.volume, this.isStopped = false, this.muted = false, _0x561c42.entity && (_0x561c42.entity?.['stop'](), _0x561c42.entity = null), _0x561c42.entity = this, _0x1d8f78.emit('playHudSound', {
              'sound': _0x6925cb,
              'id': this.id,
              'volume': this.volume,
              'loop': this.loop,
              'isCDN': this.isCDN
            });
          }

          ['mute'](_0x4a512b = true, _0xefd1e5 = 0x2ee) {
            if (this.muted == _0x4a512b) return;
            this.muted = !!_0x4a512b;
            const _0x2ed1f8 = {
              'id': this.id,
              'to': 0x0,
              'from': 0x0
            };
            _0x4a512b ? (_0x2ed1f8.from = this.volume, _0x2ed1f8.duration = _0xefd1e5) : (_0x2ed1f8.to = this.volume, _0x2ed1f8.duration = _0xefd1e5), _0x1d8f78.emit('fade', _0x2ed1f8);
          }

          ['forceMute'](_0x456e32 = true, _0x5bcd71 = false) {
            (_0x5bcd71 || this.muted != _0x456e32) && (this.muted = !!_0x456e32, _0x1d8f78.emit('volume', {
              'id': this.id,
              'volume': this.muted ? 0x0 : this.volume
            }));
          }

          get ['volume']() {
            return _0x2746b7.api.getSoundVolume(this.volumeType, this._volume);
          }

          ['updateVolume']() {
            if (this.muted) return;
            const _0x3cb74d = this.volume;
            _0x3cb74d !== this._lastVolume && (this._lastVolume = _0x3cb74d, _0x1d8f78.emit('volume', {
              'id': this.id,
              'volume': _0x3cb74d
            }));
          }

          ['play']() {
            _0x2746b7.api.getPlayerSetting('animMusic') || this.forceMute(true, true), _0x1d8f78.emit('play', {
              'id': this.id
            });
          }

          ['load']() {
            return this._pendingLoad ? this._pendingLoad : this._pendingLoad = new Promise((_0x4f24ee, _0x380d7) => {
              this._pendingLoadResolve = _0x4f24ee;
            });
          }

          ['onLoad']() {
            this._pendingLoadResolve && this._pendingLoadResolve(), this._pendingLoad = null, this._pendingLoadResolve = null;
          }

          static ['stop'](_0x81f7e7) {
            _0x561c42.entity && (_0x561c42.entity.isStopped = true), _0x561c42.entity = null, _0x1d8f78.emit('stopSound', _0x81f7e7);
          }

        }

        class _0x143ec6 {
          constructor(_0x4ee6cc, _0x317f3d, _0x43b93e, _0x3d4fc2 = {}) {
            if (!_0x4216ee.players.exists(_0x43b93e) && !_0x4216ee.vehicles.exists(_0x43b93e) && !_0x4216ee.objects.exists(_0x43b93e)) return;
            this.id = _0x4ee6cc, this.sound = _0x317f3d, this.entity = _0x43b93e, this.loop = !(!_0x3d4fc2 || null == _0x3d4fc2.loop) && _0x3d4fc2.loop, this.fade = _0x3d4fc2.fade, this.startOffsetPercent = _0x3d4fc2.startOffsetPercent, this.volumeType = _0x3d4fc2 && null != _0x3d4fc2.volumeType ? _0x3d4fc2.volumeType : 'animMusicVol', this.pannerAttr = {
              'maxDistance': 0xa,
              'rolloffFactor': 0x1,
              'refDistance': 0x1,
              ...(_0x3d4fc2.pannerAttr || {})
            }, this.losPannerAttr = {
              'maxDistance': 0x5,
              'rolloffFactor': 0x1,
              'refDistance': 0x1,
              ...(_0x3d4fc2.losPannerAttr || {})
            }, this.hasLos = true, this.lastHasLos = true, this._volume = _0x3d4fc2 && null != _0x3d4fc2.volume ? _0x3d4fc2.volume : 0x64, this.muted = false, this.startedTime = Date.now(), this._pendingLoad, this._pendingLoadResolve;
            const _0x5b9988 = _0x43b93e.position;
            this._pendingLoad = new Promise((_0x49e3ee, _0xd5e7fd) => this._pendingLoadResolve = _0x49e3ee), _0x1d8f78.emit('play3DSound', {
              'id': _0x4ee6cc,
              'sound': _0x317f3d,
              'volume': this.volume,
              'loop': this.loop,
              'startOffsetPercent': this.startOffsetPercent,
              'pannerAttr': this.pannerAttr,
              'fade': this.fade,
              'x': _0x5b9988.x,
              'y': _0x5b9988.y,
              'z': _0x5b9988.z
            }), _0x4917e2.soundPool[_0x4ee6cc] = this;
          }

          get ['volume']() {
            return _0x2746b7.api.getSoundVolume(this.volumeType, this._volume);
          }

          ['updateVolume']() {
            if (this.muted) return;
            const _0x599763 = this.volume;
            _0x599763 !== this._lastVolume && (this._lastVolume = _0x599763, _0x1d8f78.emit('volume', {
              'id': this.id,
              'volume': _0x599763
            }));
          }

          ['mute'](_0x49a948 = true, _0x591ea6 = 0x2ee) {
            if (this.muted == _0x49a948) return;
            this.muted = !!_0x49a948;
            const _0x3cce32 = {
              'id': this.id,
              'to': 0x0,
              'from': 0x0
            };
            _0x49a948 ? (_0x3cce32.from = this.volume, _0x3cce32.duration = _0x591ea6) : (_0x3cce32.to = this.volume, _0x3cce32.duration = _0x591ea6), _0x1d8f78.emit('fade', _0x3cce32);
          }

          ['forceMute'](_0x4c5e44 = true, _0xd0ca1 = false) {
            (_0xd0ca1 || this.muted != _0x4c5e44) && (this.muted = !!_0x4c5e44, _0x1d8f78.emit('volume', {
              'id': this.id,
              'volume': this.muted ? 0x0 : this.volume
            }));
          }

          ['updatePannerAttr'](_0x54c2ff = this.getPannerAttr()) {
            _0x1d8f78.emit('pannerAttr', {
              'id': this.id,
              'pannerAttr': _0x54c2ff
            });
          }

          ['play']() {
            const _0x2d766e = _0x39c12b();

            (_0x561c42.entity || _0x2d766e != this) && this.forceMute(true, true), this.checkLos(), _0x1d8f78.emit('play', {
              'id': this.id,
              'volume': this.muted ? 0x0 : this.volume
            });
          }

          ['load']() {
            return this._pendingLoad;
          }

          ['onLoad']() {
            this._pendingLoadResolve && this._pendingLoadResolve(), this._pendingLoad = null, this._pendingLoadResolve = null;
          }

          ['destroy'](_0x5d55ee = true) {
            _0x5d55ee && _0x1d8f78.emit('stopSound', this.id), delete _0x4917e2.soundPool[this.id];
          }

          ['getPannerAttr']() {
            return {
              'id': this.id,
              ...(this.hasLos ? this.pannerAttr : this.losPannerAttr)
            };
          }

          ['processChecks']() {
            const _0x2061a9 = this.entity;
            if (!_0x4216ee.players.exists(_0x2061a9) && !_0x4216ee.vehicles.exists(_0x2061a9) && !_0x4216ee.objects.exists(_0x2061a9)) return;

            const _0x825e75 = new _0x4216ee.Vector3(_0x2746b7.api.roundNumber(_0x2061a9.position.x), _0x2746b7.api.roundNumber(_0x2061a9.position.y), _0x2746b7.api.roundNumber(_0x2061a9.position.z));

            _0x1d8f78.emit('updateSoundPos', {
              'id': this.id,
              'x': _0x825e75.x,
              'y': _0x825e75.y,
              'z': _0x825e75.z
            }), this.checkLos();
          }

          ['checkLos'](_0x58e4bf = true) {
            const _0xb72505 = this.entity;
            if (!_0x4216ee.players.exists(_0xb72505) && !_0x4216ee.vehicles.exists(_0xb72505) && !_0x4216ee.objects.exists(_0xb72505)) return;
            let _0x2a6673 = true;
            _0x2a6673 = !(Math.abs(_0xb72505.position.z - _0x4216ee.players.local.position.z) > 0x3) && (_0xb72505 instanceof _0x4216ee.Player ? _0xb72505.hasLosTo : _0x4216ee.players.local.hasClearLosTo(_0xb72505.handle, 0x11)), _0x2a6673 != this.hasLos && (this.hasLos = _0x2a6673, _0x58e4bf && this.updatePannerAttr());
          }

          static ['stop'](_0x3700a8) {
            _0x1d8f78.emit('stopSound', _0x3700a8), _0x4917e2.soundPool[_0x3700a8] && _0x4917e2.soundPool[_0x3700a8].destroy(false);
          }

        }

        const _0x39c12b = () => {
          let _0x454149 = -0x1,
              _0x1d1aac = 0x64;

          for (const _0x3ad170 in _0x4917e2.soundPool) {
            const _0x401bc7 = _0x4917e2.soundPool[_0x3ad170];
            if (!_0x401bc7.entity || !_0x4216ee.players.exists(_0x401bc7.entity)) continue;

            const _0x2b6b8e = _0x2746b7.api.vdist2(_0x4216ee.players.local.position, _0x401bc7.entity.position, true);

            _0x2b6b8e < _0x1d1aac && (_0x454149 = _0x401bc7, _0x1d1aac = _0x2b6b8e);
          }

          return _0x4917e2.nearestSound = -0x1 === _0x454149 ? null : _0x454149, _0x4917e2.nearestSound;
        };

        _0x4216ee.events.add('time.every01Sec', () => {
          if (!_0x1d8f78 || !_0x1d8f78.isReady) return;

          const _0x421e0f = _0x4216ee.players.local.position,
                _0x405bb9 = (_0x577ed9.X.getCoord(), _0x577ed9.X.getRot(0x2)),
                _0x2e5a3c = _0x421e0f,
                {
            forward: _0x201c09,
            up: _0x119d47
          } = _0x2746b7.api.principalAxesToOrientation(_0x405bb9.x, _0x405bb9.y, _0x405bb9.z),
                _0x2ef492 = _0x2746b7.api.roundNumber(_0x2e5a3c.x),
                _0x52d6d2 = _0x2746b7.api.roundNumber(_0x2e5a3c.y),
                _0xe803a0 = _0x2746b7.api.roundNumber(_0x2e5a3c.z),
                _0x54b9e1 = _0x2746b7.api.roundNumber(_0x201c09.x),
                _0x35abb9 = _0x2746b7.api.roundNumber(_0x201c09.y),
                _0x1da965 = _0x2746b7.api.roundNumber(_0x201c09.z),
                _0x5af6ef = _0x2746b7.api.clamp(_0x2746b7.api.roundNumber(_0x119d47.x), -0x1, 0x1),
                _0x8da800 = _0x2746b7.api.clamp(_0x2746b7.api.roundNumber(_0x119d47.y), -0x1, 0x1),
                _0x1beae2 = _0x2746b7.api.clamp(_0x2746b7.api.roundNumber(_0x119d47.z), -0x1, 0x1);

          _0x1d8f78.emit('updatePlayerSoundPos', {
            'px': _0x2ef492,
            'py': _0x52d6d2,
            'pz': _0xe803a0,
            'ofx': _0x54b9e1,
            'ofy': _0x35abb9,
            'ofz': _0x1da965,
            'oux': _0x5af6ef,
            'ouy': _0x8da800,
            'ouz': _0x1beae2
          }), _0x39c12b(), !_0x561c42.entity || _0x2746b7.api.getPlayerSetting('animMusic') || _0x561c42.entity.muted ? _0x561c42.entity && _0x2746b7.api.getPlayerSetting('animMusic') && _0x561c42.entity.muted && _0x561c42.entity.mute(false, 0xfa) : _0x561c42.entity.mute(true, 0xfa), _0x561c42.entity && _0x561c42.entity.updateVolume();

          for (const _0x4c3daf in _0x4917e2.soundPool) {
            const _0x2e9fa6 = _0x4917e2.soundPool[_0x4c3daf];

            if (!_0x2e9fa6.loop && _0x2e9fa6.startedTime > 0x0 && Date.now() - _0x2e9fa6.startedTime > 0x36ee80) {
              _0x2e9fa6.destroy();

              continue;
            }

            _0x561c42.entity || _0x2e9fa6.muted || _0x4917e2.nearestSound == _0x2e9fa6 && _0x2746b7.api.getPlayerSetting('animMusic') ? !_0x561c42.entity && _0x2e9fa6.muted && _0x4917e2.nearestSound == _0x2e9fa6 ? _0x2e9fa6.mute(false) : _0x561c42.entity && !_0x2e9fa6.muted && _0x2e9fa6.mute(true) : _0x2e9fa6.mute(true), _0x2e9fa6.updateVolume();
            const _0x4feefa = _0x2e9fa6.entity;
            _0x4feefa && (_0x4216ee.players.exists(_0x4feefa) || _0x4216ee.vehicles.exists(_0x4feefa) || _0x4216ee.objects.exists(_0x4feefa) ? _0x2e9fa6.processChecks() : _0x2e9fa6.destroy());
          }
        }), _0x4216ee.events.add('animsounds.trigger', (_0x307db9, _0x3810a8) => {
          const _0x194c4d = _0x561c42.entity?.['id'] == _0x3810a8 ? _0x561c42.entity : _0x4917e2.soundPool[_0x3810a8];

          if (_0x194c4d) switch (_0x307db9) {
            case 'onLoad':
              _0x194c4d.onLoad();

              break;

            case 'onEnd':
              _0x194c4d.destroy(false);

          }
        }), _0x4216ee.events.add('animsounds.stopNetworkSound', _0x6098e => {
          _0x1d8f78.emit('stopSound', _0x6098e);
        });
      },
      0x5d14: (_0x1ccc48, _0x4e8c0e, _0x1309ef) => {
        'use strict';

        _0x1309ef.d(_0x4e8c0e, {
          'u': () => _0x3d3c5e
        });

        var _0x593293 = _0x1309ef(0x50ea);

        const _0x44b0e0 = new _0x593293.Chance(),
              _0x3d3c5e = {
          'd12': () => _0x44b0e0.d12(),
          'string': (..._0x4c0f11) => _0x44b0e0.string(..._0x4c0f11),
          'weighted': (_0x36b76b, _0xd98b60) => {
            if (_0x36b76b.length !== _0xd98b60.length) throw new RangeError('Chance: Length of array and weights must match');

            let _0x56938a,
                _0x32b04a = 0x0,
                _0x520683 = 0x0;

            for (_0x520683 = 0x0; _0x520683 < _0xd98b60.length; ++_0x520683) {
              if (_0x56938a = _0xd98b60[_0x520683], isNaN(_0x56938a)) throw new RangeError('Chance: All weights must be numbers');
              _0x56938a > 0x0 && (_0x32b04a += _0x56938a);
            }

            if (0x0 === _0x32b04a) throw new RangeError('Chance: No valid entries in array weights');

            const _0x3a8996 = Math.random() * _0x32b04a;

            let _0x17c1af,
                _0x19d257 = 0x0,
                _0x1e41b8 = -0x1;

            for (_0x520683 = 0x0; _0x520683 < _0xd98b60.length; ++_0x520683) {
              if (_0x56938a = _0xd98b60[_0x520683], _0x19d257 += _0x56938a, _0x56938a > 0x0) {
                if (_0x3a8996 <= _0x19d257) {
                  _0x17c1af = _0x520683;
                  break;
                }

                _0x1e41b8 = _0x520683;
              }

              _0x520683 === _0xd98b60.length - 0x1 && (_0x17c1af = _0x1e41b8);
            }

            return _0x36b76b[_0x17c1af];
          },
          'integer': _0x18685c => Math.floor(Math.random() * (_0x18685c.max - _0x18685c.min + 0x1) + _0x18685c.min),
          'bool': (_0x1a65fa = {}) => 0x64 * Math.random() < (null == _0x1a65fa.likelihood ? 0x32 : _0x1a65fa.likelihood),
          'natural': () => _0x3d3c5e.integer({
            'min': 0x0,
            'max': Number.MAX_SAFE_INTEGER
          }),
          'pickone': _0x1a8239 => _0x1a8239[Math.floor(Math.random() * _0x1a8239.length)],
          'pickset': (_0x14aa5a, _0x3e8a24) => {
            if (_0x3e8a24 === _0x14aa5a.length) return _0x14aa5a;

            const _0xead062 = new Array(_0x3e8a24);

            let _0x935f3e = 0x0;

            const _0x504c81 = _0x14aa5a.slice(0x0);

            for (; _0x935f3e < _0x3e8a24;) {
              var _0x5aa5b0 = _0x3d3c5e.integer({
                'min': 0x0,
                'max': _0x504c81.length - 0x1
              });

              _0xead062[_0x935f3e++] = _0x504c81[_0x5aa5b0], _0x504c81.splice(_0x5aa5b0, 0x1);
            }

            return _0xead062;
          },
          'shuffle': _0x151269 => {
            const _0x333eb0 = [];

            for (; _0x151269.length;) {
              const _0x270ab1 = Math.floor(Math.random() * _0x151269.length),
                    _0x1faaaa = _0x151269.splice(_0x270ab1, 0x1);

              _0x333eb0.push(_0x1faaaa[0x0]);
            }

            return _0x333eb0;
          },
          'floating': _0x3703ac => {
            let _0x44d298;

            const _0x554daa = Math.pow(0xa, _0x3703ac.fixed ?? 0x4);

            return _0x44d298 = _0x3d3c5e.integer({
              'min': _0x3703ac.min * _0x554daa,
              'max': _0x3703ac.max * _0x554daa
            }), parseFloat((_0x44d298 / _0x554daa).toFixed(_0x3703ac.fixed));
          }
        };
      },
      0x6611: (_0x467f9b, _0x49245e, _0x28c156) => {
        'use strict';

        const a0_0x13d814 = {
          _0x24bc70: 0x2491
        },
              a0_0x52e18c = {
          _0x7773d7: 0x362,
          _0x448b6a: 0x2359
        },
              a0_0x1fa9bf = {
          _0x577a45: 0x362,
          _0x26d271: 0xad8,
          _0x2627cd: 0x1e92,
          _0x42bd59: 0x6da,
          _0x32bc3a: 0x1dcd,
          _0x4bbc84: 0x6da,
          _0x3c14e3: 0x6da,
          _0x2849f3: 0x2359
        };

        _0x28c156.d(_0x49245e, {
          'DQ': () => _0x143442,
          'L6': () => _0x1f2e8b,
          'SZ': () => _0x234e0a,
          'aM': () => _0x462064,
          'pE': () => _0x246bee,
          'px': () => _0x9d71c8,
          'wG': () => _0x4825b4
        });

        var _0x4d77c7 = _0x28c156(0x6fbe),
            _0x218007 = _0x28c156(0x1790f);

        const _0x266797 = _0x28c156(0x161cd).game.joaat('mp_m_freemode_01'),
              _0x4c9e2a = (_0x146e6f, _0x1b50ce, _0x107edb, _0x1a3f86) => {
          const _0x37287a = _0x218007.Ti[_0x1b50ce][_0x146e6f];
          return _0x1a3f86 >= _0x218007.tN ? _0x1a3f86 - _0x218007.tN + _0x37287a[_0x107edb] + 0x1 : _0x1a3f86;
        },
              _0x9d71c8 = (_0x4ec74c, _0x4467ad, _0x346c82) => _0x4c9e2a('components', _0x4ec74c, _0x4467ad, _0x346c82),
              _0x1f2e8b = (_0x3cdfda, _0x5ec119, _0x30cc8b, _0x597515, _0x3a9a30 = 0x0, _0x5e5b6e = true) => {
          const _0x32685c = _0x3cdfda.model === _0x266797 ? 'male' : 'female';

          if (_0x30cc8b > _0x218007.Ti[_0x32685c].components[_0x5ec119] && _0x30cc8b < _0x218007.tN) return void _0x3cdfda.setComponentVariation(_0x5ec119, -0x1, -0x1, _0x3a9a30);

          const _0x4e7c73 = _0x9d71c8(_0x32685c, _0x5ec119, _0x30cc8b);

          _0x3cdfda.clothesStore || (_0x3cdfda.clothesStore = {}), _0x5e5b6e && (_0x3cdfda.clothesStore[_0x5ec119] = _0x4e7c73), _0x3cdfda.setComponentVariation(_0x5ec119, _0x4e7c73, _0x597515, _0x3a9a30), (_0x53dbca => {
            const _0x28b49d = _0x53dbca.model === _0x266797 ? 'male' : 'female',
                  _0x4acac6 = _0x53dbca.clothesStore && 'number' == typeof _0x53dbca.clothesStore[0x2] ? _0x53dbca.clothesStore[0x2] : _0x53dbca.getDrawableVariation(0x2),
                  _0x13df99 = _0x4d77c7[_0x28b49d][_0x4acac6];

            if (!_0x13df99) return;
            const _0x284acd = {};

            for (const _0xf04e45 in _0x13df99) {
              const _0x5606f6 = parseInt(_0xf04e45),
                    _0xb5231c = _0x13df99[_0x5606f6];

              if ('number' != typeof _0x284acd[_0x5606f6] && (_0x284acd[_0x5606f6] = _0x53dbca.clothesStore && 'number' == typeof _0x53dbca.clothesStore[_0x5606f6] ? _0x53dbca.clothesStore[_0x5606f6] : _0x53dbca.getDrawableVariation(_0x5606f6)), _0xb5231c.includes(_0x284acd[_0x5606f6])) return void _0x53dbca.setComponentVariation(0x2, 0x0, 0x0, 0x2);
            }

            _0x53dbca.setComponentVariation(0x2, _0x4acac6, 0x0, 0x2);
          })(_0x3cdfda);
        },
              _0x4825b4 = (_0xe53007, _0x3da860, _0x5b08c2) => {
          const _0x28ea6a = _0x218007.Ti[_0xe53007].components;
          return _0x5b08c2 > _0x28ea6a[_0x3da860] && _0x5b08c2 < _0x218007.tN ? _0x218007.tN + _0x5b08c2 - _0x28ea6a[_0x3da860] - 0x1 : _0x5b08c2;
        },
              _0x143442 = (_0x5f22c6, _0x4f44f6, _0xc1407f) => _0x4c9e2a('props', _0x5f22c6, _0x4f44f6, _0xc1407f),
              _0x246bee = (_0x429be1, _0x4f95f0, _0x52037e, _0x4e6e31, _0x6a2292) => {
          const _0x3e453a = _0x429be1.model === _0x266797 ? 'male' : 'female';

          _0x52037e > _0x218007.Ti[_0x3e453a].props[_0x4f95f0] && _0x52037e < _0x218007.tN ? _0x429be1.clearProp(_0x4f95f0) : _0x429be1.setPropIndex(_0x4f95f0, _0x143442(_0x3e453a, _0x4f95f0, _0x52037e), _0x4e6e31, _0x6a2292);
        },
              _0x462064 = (_0x31a5e3, _0x442fa0) => _0x31a5e3.getPropIndex(_0x442fa0),
              _0x234e0a = (_0x612673, _0x58c057, _0x4e6ac9) => {
          const _0x355e56 = _0x218007.Ti[_0x612673].props;
          return _0x4e6ac9 > _0x355e56[_0x58c057] && _0x4e6ac9 < _0x218007.tN ? _0x218007.tN + _0x4e6ac9 - _0x355e56[_0x58c057] - 0x1 : _0x4e6ac9;
        };
      },
      0x1659b: (_0x528fbf, _0xa6ef0, _0x2ad5a4) => {
        'use strict';

        _0x2ad5a4.d(_0xa6ef0, {
          'D': () => _0x275dd0
        });

        var _0x303e71 = _0x2ad5a4(0x7df9);

        function _0x275dd0(_0x5403d0, _0x41ceb0, _0x49f57f) {
          let _0x813791;

          return (..._0x5f0d79) => {
            _0x813791 && ((0x0, _0x303e71.removeTimeout)(_0x813791), _0x813791 = undefined), _0x813791 = (0x0, _0x303e71.createTimeout)(() => {
              _0x813791 = undefined, _0x49f57f || _0x5403d0.apply(this, _0x5f0d79);
            }, _0x41ceb0), _0x49f57f && !_0x813791 && _0x5403d0.apply(this, _0x5f0d79);
          };
        }
      },
      0x23df: (_0x45f2e3, _0x4b1fd3, _0x5c868b) => {
        'use strict';

        const a0_0x44f379 = {
          _0x3d461a: 0x422,
          _0x1f4fff: 0x19e6,
          _0x4afb8a: 0x2491,
          _0x52efd2: 0x19e6,
          _0x16899f: 0x1186,
          _0x31701f: 0x1461,
          _0x38bbe7: 0x1dcd,
          _0x41adb0: 0xc3b
        },
              a0_0x177e5e = {
          _0x341800: 0x636
        },
              a0_0x4b30cc = {
          _0x557fdf: 0x13b4,
          _0xcf7c94: 0x1d66,
          _0x2a7621: 0x2379,
          _0x160ed9: 0x229c,
          _0x38075b: 0xad8,
          _0x14d517: 0x422,
          _0x3d161d: 0x422,
          _0x579c76: 0x13bc,
          _0x287c34: 0x19e6,
          _0x452770: 0x1fc,
          _0x2d0d51: 0xc3b
        };

        _0x5c868b.r(_0x4b1fd3);

        var _0x3bfd84 = _0x5c868b(0x16a21),
            _0x5a88b8 = _0x5c868b(0x12a76),
            _0x4814a9 = _0x5c868b(0x6611),
            _0x4e9a6a = _0x5c868b(0x9eab),
            _0x30e8e0 = _0x5c868b(0x8aca),
            _0x5d324b = _0x5c868b(0x161cd);

        const _0x582085 = [0x1, 0x4, 0x6, 0x7, 0x8, 0xa, 0xb],
              _0x2409e0 = [0x0, 0x1, 0x2, 0x6, 0x7],
              _0x323304 = _0x5d324b.players.local,
              _0x231d21 = {
          'active': false,
          'type': 'components',
          'lastUpdateClothes': Date.now(),
          'prevData': {},
          'headOverlay': _0x4e9a6a[0x0]
        },
              _0xb4b605 = () => {
          const _0x30efbb = _0x323304.model === _0x5d324b.game.joaat('mp_m_freemode_01') ? 'male' : 'female',
                _0x90a62b = {
            'tattoos': true
          };

          for (const _0x597ad9 of _0x582085) {
            const _0xe0a729 = _0x323304.getDrawableVariation(_0x597ad9),
                  _0x35f3be = _0x323304.getTextureVariation(_0x597ad9);

            _0x90a62b[_0x597ad9] = [(0x0, _0x4814a9.wG)(_0x30efbb, _0x597ad9, _0xe0a729), _0x35f3be];
          }

          return _0x90a62b;
        };

        _0x5d324b.events.add('playerCommand', _0x5a93c2 => {
          if (_0x3bfd84.api.getAdmin(_0x323304) < 0x1) return;

          const _0x259346 = _0x5a93c2.split(/[ ]+/),
                _0x439ac5 = _0x259346[0x0].toLowerCase();

          if (_0x259346.shift(), 'debugicons' === _0x439ac5) {
            const _0x433369 = 'string' == typeof _0x259346[0x0] && _0x259346[0x0].length ? parseInt(_0x259346[0x0]) : 0x0;

            if (_0x231d21.active) return _0x231d21.active = false, void _0x5a88b8.globalBrowser.emit('main_toggleDebugIcons', {
              'active': false
            });

            const _0x4b9d04 = ['components', 'props', 'headOverlay', 'tattoos'][_0x433369] ?? 'components',
                  _0x4af2bf = _0x323304.model === _0x5d324b.game.joaat('mp_m_freemode_01') ? 'male' : 'female';

            _0x231d21.active = true, _0x231d21.type = _0x4b9d04, 'headOverlay' === _0x4b9d04 && (_0x231d21.headOverlay = _0x4e9a6a[0x0]);

            const _0x4f0d62 = _0xb4b605();

            _0x231d21.prevData = _0x4f0d62, _0x5a88b8.globalBrowser.emit('main_toggleDebugIcons', {
              'active': true,
              'type': _0x4b9d04,
              'gender': _0x4af2bf,
              'data': _0x4f0d62
            });
          } else {
            if ('changeheadoverlay' === _0x439ac5) {
              if (!_0x231d21.active || true) return;

              let _0x180cc8 = 'string' == typeof _0x259346[0x0] && _0x259346[0x0].length ? parseInt(_0x259346[0x0]) : 0x0;

              _0x180cc8 = _0x3bfd84.api.clamp(_0x180cc8, 0x0, _0x4e9a6a.length - 0x1), _0x231d21.headOverlay = _0x4e9a6a[_0x180cc8], _0x323304.clearFacialDecorations(), _0x323304.setFacialDecoration(_0x5d324b.game.joaat(_0x231d21.headOverlay[0x0]), _0x5d324b.game.joaat(_0x231d21.headOverlay[0x1])), _0x458e6f(), _0x5a88b8.globalBrowser.emit('main_copyToClipboard', _0x231d21.headOverlay.join(' - '));
            }
          }
        });

        const _0x458e6f = () => {
          const _0x273e2a = _0xb4b605();

          _0x231d21.prevData = _0x273e2a, _0x5a88b8.globalBrowser.emit('main_updateDebugIcons', _0x273e2a);
        };

        _0x5d324b.events.add('debugIcons.changeTexture', (_0x54ee02, _0x48ea68) => {
          if (['headOverlay', 'tattoos'].includes('components')) return;

          if (_0x54ee02 = parseInt(_0x54ee02), false) {
            const _0x779f86 = _0x323304.getPropIndex(_0x54ee02),
                  _0x2c9695 = _0x323304.getPropTextureIndex(_0x54ee02),
                  _0x339b88 = _0x323304.getNumberOfPropTextureVariations(_0x54ee02, _0x779f86);

            let _0x368ad6 = _0x2c9695 + _0x48ea68;

            return _0x368ad6 < 0x0 && (_0x368ad6 = _0x339b88 - 0x1), _0x368ad6 > _0x339b88 - 0x1 && (_0x368ad6 = 0x0), _0x323304.setPropIndex(_0x54ee02, _0x779f86, _0x368ad6, true), void _0x458e6f();
          }

          const _0x1d34f7 = _0x323304.getDrawableVariation(_0x54ee02),
                _0x5aa537 = _0x323304.getTextureVariation(_0x54ee02),
                _0x1be836 = _0x323304.getNumberOfTextureVariations(_0x54ee02, _0x1d34f7);

          let _0x38ea24 = _0x5aa537 + _0x48ea68;

          _0x38ea24 < 0x0 && (_0x38ea24 = _0x1be836 - 0x1), _0x38ea24 > _0x1be836 - 0x1 && (_0x38ea24 = 0x0), _0x323304.setComponentVariation(_0x54ee02, _0x1d34f7, _0x38ea24, 0x2), _0x458e6f();
        }), _0x5d324b.events.add('debugIcons.changeDrawable', (_0x4e6ee8, _0x545c0d) => {
          _0x4e6ee8 = parseInt(_0x4e6ee8);

          const _0x5e458a = _0x323304.getDrawableVariation(_0x4e6ee8),
                _0x2ab940 = _0x323304.getNumberOfDrawableVariations(_0x4e6ee8);

          let _0x286b5e = _0x5e458a + _0x545c0d;

          _0x286b5e < 0x0 && (_0x286b5e = _0x2ab940 - 0x1), _0x286b5e > _0x2ab940 - 0x1 && (_0x286b5e = 0x0), _0x323304.setComponentVariation(_0x4e6ee8, _0x286b5e, 0x0, 0x2), _0x458e6f();
        }), _0x5d324b.events.add('render', () => {
          if (!_0x231d21.active || ['headOverlay', 'tattoos'].includes('components')) return;

          const _0x3e5155 = Date.now();

          if (_0x3e5155 >= _0x231d21.lastUpdateClothes + 0x1f4) {
            _0x231d21.lastUpdateClothes = _0x3e5155;

            const _0x5bafce = _0xb4b605();

            JSON.stringify(_0x231d21.prevData) !== JSON.stringify(_0x5bafce) && (_0x231d21.prevData = _0x5bafce, _0x5a88b8.globalBrowser.emit('main_updateDebugIcons', _0x5bafce));
          }
        });
      },
      0x26a: (_0x538745, _0x4240f7, _0x27ba56) => {
        const a0_0x18d449 = {
          _0x333c42: 0x1d90,
          _0x153162: 0x14d2,
          _0x513632: 0x1a5,
          _0x4b1a73: 0x846,
          _0x45dc32: 0x1e74
        };

        var _0xadfb1a = _0x27ba56(0x161cd);

        _0xadfb1a.events.add('events.utils.batch', (_0x4075ac, ..._0x3af236) => {
          for (const {
            name: _0x1d787e,
            args: _0x548163
          } of _0x3af236) try {
            Array.isArray(_0x548163) ? _0xadfb1a.events.call(_0x1d787e, ..._0x548163) : _0xadfb1a.events.call(_0x1d787e);
          } catch (_0x587144) {
            _0xadfb1a.events.callRemote('1958599200', 'events.utils.batch (' + _0x4075ac + ') ' + _0x1d787e + ' ERR:', _0x587144.stack);
          }
        });
      },
      0x60e9: (_0x38afe6, _0x4e59f7, _0x5d9871) => {
        'use strict';

        const a0_0x5b23d5 = {
          _0x11936e: 0xffb,
          _0x39e076: 0x20de,
          _0x5168f5: 0x18c9,
          _0x4764c1: 0x788,
          _0x28166b: 0x12e5,
          _0xf1744c: 0x1d66,
          _0x24094e: 0x1969
        },
              a0_0x68565e = {
          _0xdd5ac: 0x12e5
        };
        _0x5d9871.r(_0x4e59f7), _0x5d9871.d(_0x4e59f7, {
          'currentFps': () => _0x1dbcb3
        });

        var _0x1a6c8b = _0x5d9871(0x161cd);

        let _0x1dbcb3 = 0x0;
        const _0x212121 = {
          'active': false,
          'newFps': 0x0,
          'swapTime': Date.now(),
          'currentTime': Date.now()
        };
        _0x1a6c8b.events.add('settings.fps.active', _0x46f257 => {
          _0x212121.active = _0x46f257;
        }), _0x1a6c8b.events.add('render', () => {
          const _0x3ce669 = Date.now();

          _0x212121.currentTime - _0x212121.swapTime <= 0x3e8 ? (_0x212121.newFps += 0x1, _0x212121.currentTime = _0x3ce669) : (_0x1dbcb3 = _0x212121.newFps, _0x212121.newFps = 0x0, _0x212121.swapTime = _0x3ce669), _0x212121.active && _0x1a6c8b.game.graphics.drawText('' + _0x1dbcb3, [0.01, 0.002], {
            'font': 0x4,
            'color': [0x2e, 0xcc, 0x71, 0xff],
            'scale': [0.35, 0.35],
            'outline': true,
            'align': 0x0
          });
        });
      },
      0x1d7e: (_0x2b9451, _0xf48ec5, _0x5b9d9e) => {
        'use strict';

        _0x5b9d9e.d(_0xf48ec5, {
          'X': () => _0x1fadac
        });

        const _0x1fadac = _0x5b9d9e(0x161cd).cameras.gameplay;
      },
      0x5337: (_0x4e7568, _0x24373a, _0x47f6a4) => {
        _0x47f6a4(0x15e39), _0x47f6a4(0x119f3), _0x47f6a4(0x23df), _0x47f6a4(0x26a), _0x47f6a4(0x60e9), _0x47f6a4(0x704e);
      },
      0x119f3: (_0x2b50c3, _0xf3cb5a, _0x223d62) => {
        'use strict';

        _0x223d62.r(_0xf3cb5a), _0x223d62.d(_0xf3cb5a, {
          'launchParams': () => _0x56a4ae
        });

        var _0x1e6ef0 = _0x223d62(0x161cd);

        let _0x56a4ae = {};
        const _0x4f8974 = _0x1e6ef0.storage.lauchParams;

        if (_0x4f8974) {
          const _0x4fbeef = JSON.parse(_0x4f8974);

          _0x4fbeef && (_0x56a4ae = { ..._0x4fbeef
          });
        }
      },
      0x17df3: (_0x10b7ba, _0x15af33, _0x2b8457) => {
        'use strict';

        _0x2b8457.d(_0x15af33, {
          'Z': () => _0x5a7845
        });

        const _0x5a7845 = {};
      },
      0x165f2: (_0x2351a4, _0x59ed05, _0x2a9dbf) => {
        'use strict';

        _0x2a9dbf.d(_0x59ed05, {
          'D': () => _0x3c8dcd
        });

        var _0x4ffab6 = _0x2a9dbf(0xfc97),
            _0x3be37f = _0x2a9dbf.n(_0x4ffab6),
            _0x3e338c = _0x2a9dbf(0x161cd);

        const _0x3c8dcd = {};

        for (const [_0x3d9200, _0x16d99d] of Object.entries(_0x3be37f())) _0x3c8dcd[_0x3e338c.game.joaat(_0x3d9200)] = _0x16d99d;
      },
      0x15e39: (_0x24139d, _0x3e848a, _0x4ebff1) => {
        'use strict';

        const a0_0x38cd4e = {
          _0x307f51: 0x1da5
        };

        _0x4ebff1.r(_0x3e848a);

        var _0x1dc62b = _0x4ebff1(0x16a21),
            _0x4710fc = (_0x4ebff1(0x14b31), _0x4ebff1(0x161cd));

        const _0x405d07 = _0x4710fc.players.local;

        let _0x3ca51b = false,
            _0x4ff4c9 = -0x1,
            _0xdae3a3 = -0x1;

        _0x4710fc.events.add('playerRuleTriggered', (_0x5061d4, _0x1ddf49) => {
          switch (_0x5061d4) {
            case 'packetLoss':
              _0xdae3a3 = _0x1ddf49;
              break;

            case 'ping':
              _0x4ff4c9 = _0x1ddf49;
          }
        }), _0x4710fc.events.add('render', () => {
          if (_0x3ca51b) {
            let _0x49d80a = 0x0,
                _0x4e6cab = 0x0,
                _0x35be1d = 0x0,
                _0x7524f8 = 0x0,
                _0x19b341 = _0x4ebff1.g.objectsStreamed.size;
            _0x4710fc.vehicles.forEachInStreamRange(_0x4466ba => _0x4e6cab++), _0x4710fc.players.forEachInStreamRange(_0x17c6f5 => _0x49d80a++), _0x4710fc.peds.forEachInStreamRange2(_0xdcc131 => _0x35be1d++), _0x4710fc.markers.forEachInStreamRange(_0x45617e => _0x7524f8++);

            const _0x1afad7 = '\n            PEDS: ' + (_0x49d80a + _0x35be1d) + '/255\n\n            VEHS: ' + _0x4e6cab + '\n\n            OBJS: ' + _0x19b341 + '\n\n            MRKS: ' + _0x7524f8 + '\n\n        ',
                  _0x4fd258 = '\n            X: ' + (_0x4ebff1.g.freeCamera?.['getCoord']()?.['x']?.['toFixed'](0x3) ?? _0x405d07.position.x.toFixed(0x3)) + '\n\n            Y: ' + (_0x4ebff1.g.freeCamera?.['getCoord']()?.['y']?.['toFixed'](0x3) ?? _0x405d07.position.y.toFixed(0x3)) + '\n\n            Z: ' + (_0x4ebff1.g.freeCamera?.['getCoord']()?.['z']?.['toFixed'](0x3) ?? _0x405d07.position.z.toFixed(0x3)) + '\n\n            R: ' + _0x405d07.getHeading().toFixed(0x2) + '\n\n        ',
                  _0x412419 = '\n            X: ' + (_0x4ebff1.g.freeCamera?.['getRot'](0x2)?.['x']?.['toFixed'](0x3) ?? _0x4710fc.cameras.gameplay.getRot(0x2).x.toFixed(0x3)) + '\n\n            Y: ' + (_0x4ebff1.g.freeCamera?.['getRot'](0x2)?.['y']?.['toFixed'](0x3) ?? _0x4710fc.cameras.gameplay.getRot(0x2).y.toFixed(0x3)) + '\n\n            Z: ' + (_0x4ebff1.g.freeCamera?.['getRot'](0x2)?.['z']?.['toFixed'](0x3) ?? _0x4710fc.cameras.gameplay.getRot(0x2).z.toFixed(0x3)) + '\n\n        ';

            _0x4710fc.game.graphics.drawText(_0x1afad7, [0.85, 0.35], {
              'font': 0x0,
              'color': [0xff, 0xff, 0xff, 0xc8],
              'scale': [0.3, 0.3],
              'centre': false,
              'outline': true
            }), _0x4710fc.game.graphics.drawText(_0x4fd258, [0.85, 0.55], {
              'font': 0x0,
              'color': [0xff, 0xff, 0xff, 0xc8],
              'scale': [0.3, 0.3],
              'centre': false,
              'outline': true
            }), _0x4710fc.game.graphics.drawText(_0x412419, [0.85, 0.75], {
              'font': 0x0,
              'color': [0xff, 0xff, 0xff, 0xc8],
              'scale': [0.3, 0.3],
              'centre': false,
              'outline': true
            }), _0x4710fc.game.graphics.drawText('PING: ' + _0x4ff4c9 + '. PKLS: ' + _0xdae3a3, [0.3, 0.95], {
              'font': 0x0,
              'color': [0xff, 0xff, 0xff, 0xc8],
              'scale': [0.25, 0.25],
              'centre': false,
              'outline': true
            });
          }
        }), _0x4710fc.events.add('playerCommand', async _0x26d919 => {
          const _0x4511cd = _0x26d919.split(/[ ]+/),
                _0xf0315c = _0x4511cd[0x0];

          if (_0x4511cd.shift(), 'netstat' === _0xf0315c) {
            if (!_0x1dc62b.api.isAuthed() || !_0x1dc62b.api.isAdmin()) return;
            _0x3ca51b = !_0x3ca51b;
          }
        }), _0x4710fc.events.add('pingCheck', () => {
          _0x4710fc.events.callRemote('524417422');
        });
      },
      0x14b31: (_0x52e8eb, _0x46bd1a, _0x5f3b49) => {
        'use strict';

        _0x5f3b49.d(_0x46bd1a, {
          'f': () => _0x4138c3
        });

        var _0x93fa4c = _0x5f3b49(0xbba6);

        const _0x4138c3 = _0x5f3b49.n(_0x93fa4c)();
      },
      0x1492d: (_0xbb7d7c, _0xe2facb, _0x37f1c6) => {
        'use strict';

        _0x37f1c6.d(_0xe2facb, {
          'L': () => _0x4290bf
        });

        var _0x4b397a = _0x37f1c6(0x161cd);

        let _0x4290bf = _0x4b397a.game.graphics.getScreenActiveResolution(0x0, 0x0);

        _0x4b397a.events.add('time.everySec', () => {
          _0x4290bf = _0x4b397a.game.graphics.getScreenActiveResolution(0x0, 0x0);
        });
      },
      0x8946: (_0x263e7b, _0x3f83cd, _0x27f94c) => {
        'use strict';

        _0x27f94c.r(_0x3f83cd), _0x27f94c.d(_0x3f83cd, {
          'getTravelDistance': () => _0x3705d8
        });

        const _0x3705d8 = (_0x12e3b1, _0x73fc12) => 0x0;
      },
      0x21f0: (_0x1069b8, _0x1cd286, _0x1c0559) => {
        'use strict';

        const a0_0xc4e826 = {
          _0x4a0b2e: 0x235b,
          _0x56288e: 0x185e,
          _0x1add64: 0x4b9,
          _0x1eb1b2: 0x535,
          _0x43b555: 0x623,
          _0x59f0d8: 0x235b,
          _0x2484fb: 0x4b9,
          _0xdbdb58: 0x2170,
          _0x5742df: 0x1a50,
          _0x528a7f: 0x1223,
          _0x1c7f31: 0xcdc,
          _0x4baa30: 0xcdc
        },
              a0_0x3bf6e7 = {
          _0x35a5a2: 0x1d48,
          _0x341695: 0x185e,
          _0x267eeb: 0x12da,
          _0x2a49e9: 0xa0b,
          _0x2ce9ba: 0x235b
        },
              a0_0x16359c = {
          _0x50701e: 0x1d48,
          _0x55f835: 0xcdc,
          _0x48113e: 0x1223,
          _0x273bbb: 0x235b,
          _0x3dca81: 0x185e,
          _0x5e50d8: 0x4b9,
          _0x39a022: 0x535,
          _0x1a74e5: 0x185e,
          _0xfc34f: 0x185e,
          _0x48463a: 0x2530,
          _0x4b4e86: 0x1a07
        },
              a0_0x3dd90d = {
          _0x5c9ebf: 0x1d48
        };
        _0x1c0559.r(_0x1cd286), _0x1c0559.d(_0x1cd286, {
          'autopilotController': () => _0x2fa404
        });

        var _0x5d04e2 = _0x1c0559(0x16a21),
            _0x4db014 = _0x1c0559(0x161cd);

        _0x4db014.events.add('time.everySec', () => {
          _0x2fa404 && _0x2fa404.check();
        });

        const _0x2fa404 = new class {
          constructor() {
            this.enabled = false, this.targetPosition = null;
          }

          ['enable']() {
            if (this.enabled) return this.disable(), void _0x5d04e2.api.longNotifyTrans('vehicle.autopilot.stopped', 'success');
            if (!_0x4db014.players.local.vehicle) return;

            const _0x7f2a68 = _0x5d04e2.api.getWaypointPosition();

            _0x7f2a68 ? (this.enabled = true, _0x4db014.players.local.taskVehicleDriveToCoordLongrange(_0x4db014.players.local.vehicle.handle, _0x7f2a68.x, _0x7f2a68.y, _0x7f2a68.z + 0x2, 0x32, 0x400c0025, 0x1e), this.targetPosition = _0x7f2a68, _0x5d04e2.api.longNotifyTrans('vehicle.autopilot.started', 'success')) : _0x5d04e2.api.longNotifyTrans('vehicle.autopilot.noWaypoint', 'error');
          }

          ['disable']() {
            this.enabled && (_0x4db014.players.local.clearTasks(), _0x4db014.players.local.vehicle && _0x4db014.players.local.taskVehicleTempAction(_0x4db014.players.local.vehicle.handle, 0x1b, 0x3e8), this.enabled = false);
          }

          ['check']() {
            if (this.enabled) {
              if (_0x4db014.players.local.vehicle && !_0x5d04e2.api.isDead() && _0x5d04e2.api.getEntitySync(_0x4db014.players.local.vehicle, 'engine', 'boolean')) return _0x5d04e2.api.vdist2(this.targetPosition, _0x4db014.players.local.position) < 0x5a ? (_0x5d04e2.api.longNotifyTrans('vehicle.autopilot.arrived', 'success'), void this.disable()) : undefined;
              this.disable();
            }
          }

        }();
      },
      0x12c22: (_0x47731c, _0xa0b47a, _0x18f902) => {
        'use strict';

        const a0_0x26b854 = {
          _0x8dc687: 0x16c5,
          _0x3c2788: 0xafd,
          _0x48e69b: 0x1c57
        },
              a0_0xa0ebb6 = {
          _0xc097ba: 0x1aab,
          _0x39b4cd: 0x14d2,
          _0x3e8ae8: 0x642
        };

        _0x18f902.r(_0xa0b47a);

        var _0x4ba36c = _0x18f902(0x16a21),
            _0x824a44 = _0x18f902(0x161cd);

        const _0xbaca5e = _0x824a44.players.local,
              _0x4ab407 = _0x824a44.colshapes.newSphere(-0x66b, -0x37f, 0x8, 0x50);

        _0x824a44.events.add('playerEnterColshape', _0x4ab35c => {
          _0x4ba36c.api.isAuthed(_0xbaca5e) && _0x824a44.colshapes.exists(_0x4ab35c) && _0x4ab407 == _0x4ab35c && (_0x824a44.events.callRemote('1376018370'), _0xbaca5e.insideCarMarket = true);
        }), _0x824a44.events.add('playerExitColshape', _0x5a15e8 => {
          _0x4ba36c.api.isAuthed(_0xbaca5e) && _0x824a44.colshapes.exists(_0x5a15e8) && _0x4ab407 == _0x5a15e8 && (_0x824a44.events.callRemote('1952675760'), _0xbaca5e.insideCarMarket = false);
        });
      },
      0x3054: (_0x295c5e, _0x7b2b50, _0xcc3bd) => {
        'use strict';

        const a0_0x27fa89 = {
          _0x3bd08d: 0x1e82,
          _0x230efb: 0x9c3,
          _0x74ba83: 0x2488,
          _0x8786af: 0x1a3,
          _0x6d15ce: 0x1e2c,
          _0x29a55d: 0x159b,
          _0x2b55c2: 0x9ad
        },
              a0_0x1680b3 = {
          _0x19e376: 0x2420,
          _0xf5bc99: 0x1d2,
          _0x28f771: 0x9c3,
          _0x25a5fc: 0x1d2,
          _0x333a86: 0xf03,
          _0xe88d18: 0x2488,
          _0xc4a58e: 0xfcb
        };

        _0xcc3bd.r(_0x7b2b50);

        var _0x37db70 = _0xcc3bd(0x16a21),
            _0x68be57 = _0xcc3bd(0x16a7d),
            _0x5a9668 = _0xcc3bd(0xd194),
            _0x28395b = _0xcc3bd(0x12a76),
            _0x837778 = _0xcc3bd(0x161cd);

        const _0x52ff6b = 0x2,
              _0x8c3813 = 0x4,
              _0x276eb3 = 0x8,
              _0x18ee6a = {
          'activeFlags': new _0x5a9668.Flags(),
          'startTime': null,
          'startTime100': null,
          'actions': {},
          'distance': 0x0,
          'lastUpdate': Date.now()
        },
              _0x4ff1b4 = ['0-60 km/h', '0-100 km/h', '1/8 mile', '1/4 mile', '100-200 km/h', '0-200 km/h'],
              _0x6f661f = _0x837778.players.local,
              _0x927949 = _0x3d4866 => {
          if (!_0x3d4866) return 'Empty';

          let _0x11bf4e = _0x37db70.api.getVehicleTitle(_0x3d4866.model);

          return 'number' == typeof _0x11bf4e && (_0x11bf4e = _0x837778.game.vehicle.getDisplayNameFromVehicleModel(_0x3d4866.model)), _0x11bf4e;
        },
              _0x1788ad = _0x5064c2 => {
          const _0x247d8e = _0x5064c2 / 0x3e8,
                _0x2dc1b7 = Math.floor(_0x247d8e % 0xe10 / 0x3c),
                _0x4068c5 = _0x247d8e % 0x3c;

          return _0x2dc1b7 > 0x0 ? _0x2dc1b7.toString().padStart(0x2, '0') + 'm ' + _0x4068c5.toFixed(0x2).padStart(0x2, '0') + 's' : _0x4068c5.toFixed(0x2).padStart(0x2, '0') + 's';
        },
              _0x3a7333 = _0x3d9357 => {
          _0x28395b.globalBrowser.emit('main_setActiveDragy', {
            'active': _0x3d9357,
            'vehicleTitle': _0x927949(_0x6f661f.vehicle)
          }), _0x3d9357 ? _0x18ee6a.activeFlags.add(_0x52ff6b) : _0x18ee6a.activeFlags.clear();
        };

        _0x837778.events.add('setActiveDragy', _0x3a7333), _0x837778.events.add('setActiveItemId', (_0x32f3eb, _0x60c9ef) => {
          'number' == typeof _0x60c9ef ? 0x250 === _0x60c9ef && _0x3a7333(true) : _0x3a7333(false);
        });

        const _0x519818 = () => {
          const _0x6deb0b = {
            'vehicleTitle': _0x927949(_0x6f661f.vehicle),
            'scores': []
          };

          for (const _0xab421d of _0x4ff1b4) _0x18ee6a.actions[_0xab421d] ? _0x6deb0b.scores.push({
            'title': _0xab421d,
            'time': _0x18ee6a.actions[_0xab421d]
          }) : _0x6deb0b.scores.push({
            'title': _0xab421d,
            'time': '0.0s'
          });

          _0x28395b.globalBrowser.emit('main_updateDragyScores', _0x6deb0b);
        };

        _0x837778.keys.bind(_0x68be57.t.Y, false, () => {
          if (!_0x18ee6a.activeFlags.has(_0x52ff6b)) return;
          const _0x23de85 = _0x6f661f.vehicle;
          if (_0x23de85 && 3.6 * _0x23de85.getSpeed() >= 0x2) return;

          const _0x2d50a5 = Date.now();

          _0x18ee6a.startTime = _0x2d50a5, _0x18ee6a.prevPosition = _0x23de85.position, _0x18ee6a.distance = 0x0, _0x18ee6a.actions = {}, _0x28395b.globalBrowser.emit('dragy.updateValue', 0x0), _0x519818(), _0x18ee6a.lastUpdate = _0x2d50a5, _0x18ee6a.activeFlags.remove(_0x8c3813), _0x18ee6a.activeFlags.remove(_0x276eb3);
        }), _0x837778.events.add('render', () => {
          if (!_0x18ee6a.activeFlags.has(_0x52ff6b)) return;

          const _0x487a5b = Date.now(),
                _0x455448 = _0x6f661f.vehicle;

          if (!_0x455448 && _0x18ee6a.activeFlags.has(_0x8c3813)) return _0x18ee6a.activeFlags.remove(_0x8c3813), void _0x18ee6a.activeFlags.remove(_0x276eb3);
          if (!_0x455448) return;

          const _0x510e67 = 3.6 * _0x455448.getSpeed();

          if (_0x510e67 >= 0x2 && (_0x18ee6a.activeFlags.has(_0x8c3813) || (_0x18ee6a.activeFlags.add(_0x8c3813), _0x18ee6a.activeFlags.remove(_0x276eb3), _0x18ee6a.startTime = _0x487a5b, _0x18ee6a.prevPosition = _0x455448.position, _0x18ee6a.distance = 0x0, _0x18ee6a.actions = {}, _0x28395b.globalBrowser.emit('dragy.updateValue', 0x0), _0x519818(), _0x18ee6a.lastUpdate = _0x487a5b)), !_0x18ee6a.activeFlags.has(_0x8c3813)) return;
          if (_0x18ee6a.activeFlags.has(_0x276eb3)) return;
          _0x18ee6a.distance += _0x37db70.api.vdist2(_0x18ee6a.prevPosition, _0x455448.position, false), _0x18ee6a.prevPosition = _0x455448.position;

          const _0x59e9bb = _0x487a5b - _0x18ee6a.startTime,
                _0x2561d9 = _0x1788ad(_0x59e9bb);

          _0x487a5b - _0x18ee6a.lastUpdate >= 0x64 && (_0x28395b.globalBrowser.emit('dragy.updateValue', _0x59e9bb), _0x18ee6a.lastUpdate = _0x487a5b);
          let _0x470f21 = false;
          _0x510e67 >= 0x3c && !_0x18ee6a.actions['0-60 km/h'] && (_0x18ee6a.actions['0-60 km/h'] = _0x2561d9, _0x470f21 = true), _0x510e67 >= 0x64 && !_0x18ee6a.actions['0-100 km/h'] && (_0x18ee6a.actions['0-100 km/h'] = _0x2561d9, _0x18ee6a.startTime100 = _0x487a5b, _0x470f21 = true), _0x510e67 >= 0xc8 && !_0x18ee6a.actions['0-200 km/h'] && (_0x18ee6a.actions['0-200 km/h'] = _0x2561d9, _0x18ee6a.actions['100-200 km/h'] = _0x1788ad(_0x487a5b - _0x18ee6a.startTime100), _0x470f21 = true), _0x18ee6a.distance >= 201.168 && !_0x18ee6a.actions['1/8 mile'] && (_0x18ee6a.actions['1/8 mile'] = _0x2561d9, _0x470f21 = true), _0x18ee6a.distance >= 402.336 && !_0x18ee6a.actions['1/4 mile'] && (_0x18ee6a.actions['1/4 mile'] = _0x2561d9, _0x470f21 = true), _0x18ee6a.actions['1/4 mile'] && _0x18ee6a.actions['1/8 mile'] && _0x18ee6a.actions['0-200 km/h'] && _0x18ee6a.actions['0-100 km/h'] && _0x18ee6a.actions['0-60 km/h'] && !_0x18ee6a.activeFlags.has(_0x276eb3) && (_0x18ee6a.activeFlags.add(_0x276eb3), _0x28395b.globalBrowser.emit('dragy.updateValue', _0x59e9bb)), _0x470f21 && _0x519818();
        });
      },
      0x16710: (_0x499f89, _0x5ecd4c, _0x20d46e) => {
        'use strict';

        const a0_0x4f305a = {
          _0x555049: 0x535,
          _0x475762: 0xf71,
          _0x254087: 0x1d48,
          _0x40f095: 0x4b9,
          _0x49576b: 0x4b9,
          _0x32a723: 0x1d66,
          _0x3e7c03: 0x1f1e,
          _0x477454: 0x13b4,
          _0x3e82a8: 0x2488,
          _0x410eb4: 0x7b0,
          _0x3c038d: 0x528,
          _0x554f70: 0x1760,
          _0x5902e9: 0x323
        },
              a0_0x25af6a = {
          _0x20ec74: 0x2ae,
          _0x17168c: 0x535,
          _0x56d8e3: 0x235b,
          _0x9f24c: 0x185e,
          _0x3d359c: 0x1f30,
          _0x140336: 0x1c05
        },
              a0_0x3301fd = {
          _0x4e5467: 0x2488,
          _0x587843: 0x1a3,
          _0x592415: 0x7b0
        },
              a0_0x6813bf = {
          _0x5abe40: 0x21d8,
          _0xb73aca: 0x310
        };

        _0x20d46e.r(_0x5ecd4c);

        var _0x5cc6c0 = _0x20d46e(0x16a21),
            _0x586650 = _0x20d46e(0x5cb3),
            _0x59e7fb = _0x20d46e(0x25e0),
            _0x38518f = _0x20d46e.n(_0x59e7fb),
            _0x501ead = _0x20d46e(0x12a76),
            _0x549f44 = _0x20d46e(0x161cd);

        const _0x507d5d = _0x549f44.players.local;
        let _0x2cf5ea = {
          'enabled': false,
          'startTime': 0x0,
          'isDrifting': false,
          'vehicleHealth': 0x3e8,
          'wrongAngleTime': 0x0,
          'score': 0x0
        };

        const _0x1a80fd = (_0x32d870, _0x31712f, _0x582172) => {
          if (_0x582172) {
            let _0x524b84 = (_0x32d870 - _0x586650.k.ANGLE_MIN) * _0x586650.k.ANGLE_MULTIPLY + (_0x31712f - _0x586650.k.MIN_SPEED) * _0x586650.k.SPEED_MULTIPLY;

            _0x2cf5ea.score += Math.round(_0x524b84);
          }
        },
              _0x985975 = (_0x3abfca, _0x3f80d3) => {
          const _0x491630 = Math.sqrt(_0x3abfca * _0x3abfca + _0x3f80d3 * _0x3f80d3);

          if (_0x491630 > 0.000001) {
            const _0x26509e = 0x1 / _0x491630;

            _0x3abfca *= _0x26509e, _0x3f80d3 *= _0x26509e;
          }

          return {
            'x': _0x3abfca,
            'y': _0x3f80d3
          };
        },
              _0x4596dd = () => {
          _0x501ead.globalBrowser.emit('main_toggleDriftCounter', {
            'value': false
          }), _0x2cf5ea.enabled = false;
        },
              _0x1259e6 = () => {
          let _0x58bda4 = 0x0;

          for (const [_0x1eb3e0, _0x47d580] of Object.entries(_0x38518f())) if (_0x5cc6c0.api.vdist2(_0x549f44.players.local.position, _0x47d580.position) <= _0x47d580.radius) {
            _0x58bda4 = _0x1eb3e0;
            break;
          }

          return parseInt(_0x58bda4);
        };

        _0x549f44.events.add('time.every01Sec', () => {
          const a0_0x19a2eb = {
            _0x539664: 0x4b9,
            _0x4f3822: 0xd94,
            _0x106feb: 0x1d20,
            _0x14bf5b: 0x2112,
            _0x609d53: 0x1a25,
            _0x30b096: 0x693,
            _0x1b115e: 0x310,
            _0x36acab: 0x1760,
            _0x2c741b: 0xffb,
            _0x311dda: 0x693,
            _0x5c4ed0: 0x528,
            _0x267054: 0xffb,
            _0x21f630: 0x693,
            _0x50312b: 0x1da5,
            _0x20e208: 0x1760
          },
                _0x56875c = _0x5cc6c0.api.getPlayerSetting('driftCounter');

          if (_0x56875c || !_0x2cf5ea.enabled) return _0x56875c && !_0x2cf5ea.enabled && _0x507d5d.vehicle && _0x5cc6c0.api.getEngine(_0x507d5d.vehicle) && _0x507d5d.vehicle.getPedInSeat(_0x5cc6c0.api.getVehSeat(-0x1)) == _0x549f44.players.local.handle && _0x549f44.game.vehicle.isThisModelACar(_0x507d5d.vehicle.model) ? (_0x501ead.globalBrowser.emit('main_toggleDriftCounter', {
            'value': true
          }), _0x2cf5ea.isDrifting = false, _0x2cf5ea.wrongAngleTime = 0x0, _0x2cf5ea.score = 0x0, _0x2cf5ea.startTime = 0x0, void (_0x2cf5ea.enabled = true)) : void (_0x2cf5ea.enabled && ((() => {
            const _0x32bd27 = _0x549f44.players.local.vehicle;

            if (_0x32bd27 && _0x5cc6c0.api.getEngine(_0x32bd27)) {
              const _0x5d86bd = 3.6 * _0x32bd27.getSpeed(),
                    _0x160469 = _0x32bd27.getBodyHealth(),
                    _0x31052a = _0x32bd27.getVelocity(),
                    _0x381848 = _0x32bd27.getForwardVector(),
                    _0x2ae547 = _0x985975(_0x381848.x, _0x381848.y),
                    _0x1c3bcc = _0x985975(_0x31052a.x, _0x31052a.y),
                    _0x53d542 = _0x549f44.game.gameplay.getAngleBetween2dVectors(_0x2ae547.x, _0x2ae547.y, _0x1c3bcc.x, _0x1c3bcc.y),
                    _0x472cc9 = _0x53d542 >= _0x586650.k.ANGLE_MIN && _0x53d542 <= _0x586650.k.ANGLE_MAX,
                    _0x111939 = _0x5d86bd >= _0x586650.k.MIN_SPEED,
                    _0x1d3719 = !_0x2cf5ea.isDrifting || Math.round(_0x160469) >= Math.round(_0x2cf5ea.vehicleHealth),
                    _0x366a89 = _0x472cc9 && _0x111939 && _0x1d3719;

              if (!_0x2cf5ea.isDrifting && _0x366a89) _0x2cf5ea.isDrifting = true, _0x2cf5ea.vehicleHealth = _0x160469, _0x2cf5ea.score = 0x0, _0x2cf5ea.startTime = Date.now();else {
                if (_0x2cf5ea.isDrifting && _0x366a89) _0x2cf5ea.wrongAngleTime = 0x0, _0x1a80fd(_0x53d542, _0x5d86bd, true);else {
                  let _0x2309c8 = true;
                  !_0x472cc9 && _0x111939 && _0x1d3719 && (0x0 === _0x2cf5ea.wrongAngleTime ? (_0x2cf5ea.wrongAngleTime = Date.now(), _0x2309c8 = false) : Date.now() - _0x2cf5ea.wrongAngleTime < 0x5dc && (_0x2309c8 = false)), _0x2309c8 && (_0x2cf5ea.isDrifting = false, _0x1d3719 && _0x2cf5ea.score >= 0x9c4 && _0x549f44.events.callRemote('3831506809', _0x2cf5ea.score, _0x1259e6()), _0x2cf5ea.score = 0x0);
                }
              }
            } else _0x4596dd();
          })(), _0x501ead.globalBrowser.emit('main_setDriftCounterPoints', _0x2cf5ea.score)));

          _0x4596dd();
        });
      },
      0x784f: (_0x33a4c4, _0x4c1cc7, _0x3d3a41) => {
        'use strict';

        const a0_0x3e62f7 = {
          _0x3419b: 0x4b9,
          _0x705de2: 0x1422,
          _0x289f86: 0x165f,
          _0x300b9e: 0x242d,
          _0x233871: 0x1992,
          _0x190759: 0x1dd9,
          _0x2cd918: 0x1d66,
          _0x12fc39: 0x1992,
          _0x343e08: 0x1d66,
          _0x74001f: 0x1992,
          _0x5b674: 0x1fb8,
          _0x2bf2ec: 0x1992,
          _0xa6b61c: 0x1992,
          _0x327c81: 0x2054,
          _0xf6a1c4: 0x2054,
          _0x572d8e: 0x2054,
          _0x5bf15f: 0x2480,
          _0x1676b5: 0x2054,
          _0x8269ad: 0x24c7,
          _0x2604c2: 0x1ebb
        },
              a0_0xc67504 = {
          _0xdf2046: 0x1820,
          _0x45fd5d: 0x16c5,
          _0x85a99c: 0x32e,
          _0x55a90d: 0x1422,
          _0x584257: 0xc95,
          _0x26308e: 0x535,
          _0x346088: 0x3b6,
          _0x55acaf: 0x1600
        },
              a0_0x1cd1e3 = {
          _0x348914: 0x14d2,
          _0x39ae41: 0x1da5,
          _0x2cf949: 0x535,
          _0x484cef: 0x1e35,
          _0x289bf4: 0x1a6f,
          _0x38227d: 0x8b8
        },
              a0_0xd35d31 = {
          _0x59a478: 0x14d2,
          _0x4716d6: 0x1da5
        };
        _0x3d3a41.r(_0x4c1cc7), _0x3d3a41.d(_0x4c1cc7, {
          'default': () => _0x2e0082,
          'enterDrone': () => _0x4fedb2,
          'exitDrone': () => _0x1d58ef,
          'isDrone': () => _0x537d3f
        });

        var _0x3bbfa0 = _0x3d3a41(0x16a21),
            _0x209796 = _0x3d3a41(0x161cd);

        let _0x5add06 = false;

        const _0x4fedb2 = () => {
          _0x5add06 = true, _0x209796.events.callRemote('3039201336');
        },
              _0x1d58ef = _0x466a47 => {
          _0x5add06 && _0x209796.events.callRemote('3225682901', _0x466a47), _0x5add06 = false, _0x58b3f0 = 0x0, _0x3bbfa0.api.invokeNative('ANIMPOSTFX_STOP_ALL'), _0x209796.game.graphics.setNightvision(false), _0x209796.game.graphics.setSeethrough(false);
        },
              _0x537d3f = () => _0x5add06;

        let _0x1e2bf1 = 0xd,
            _0x2e7b8d = 0x0,
            _0x32ad75 = 0x0,
            _0x58b3f0 = 0x0;
        _0x209796.events.add('keys.f', () => {
          _0x5add06 && _0x1d58ef();
        }), _0x209796.events.add('keys.e', () => {
          _0x5add06 && (_0x3bbfa0.api.isGroupMemberOf(_0x209796.players.local, 'police') || _0x3bbfa0.api.isGroupMemberOf(_0x209796.players.local, 'fib') || _0x3bbfa0.api.isGroupMemberOf(_0x209796.players.local, 'army')) && _0x5add06 && (0x0 === _0x58b3f0 ? (_0x209796.game.graphics.setNightvision(true), _0x58b3f0 = 0x1) : 0x1 === _0x58b3f0 ? (_0x209796.game.graphics.setNightvision(false), _0x209796.game.graphics.setSeethrough(true), _0x58b3f0 = 0x2) : (_0x209796.game.graphics.setNightvision(false), _0x209796.game.graphics.setSeethrough(false), _0x58b3f0 = 0x0), _0x209796.game.audio.playSoundFrontend(-0x1, 'SELECT', 'HUD_FRONTEND_DEFAULT_SOUNDSET', false));
        }), _0x209796.events.add('playerLeaveVehicle', () => {
          _0x5add06 && (_0x5add06 = false, _0x58b3f0 = 0x0, _0x1d58ef(), _0x3bbfa0.api.invokeNative('ANIMPOSTFX_STOP_ALL'));
        }), _0x209796.events.add('entityStreamIn', _0x37450f => {
          if ('vehicle' === _0x37450f.type) {
            if (!_0x209796.vehicles.exists(_0x37450f)) return;
            _0x37450f.hasVariable('isDrone') && _0x37450f.getVariable('isDrone') && (_0x37450f.setAlpha(0x0), _0x3bbfa0.api.playVehSound(_0x37450f.remoteId, 'drone', 'Flight_Loop', 'DLC_Arena_Drone_Sounds'), _0x37450f.setCanBeDamaged(true), _0x37450f.setInvincible(false));
          }
        }), _0x209796.events.add('render', () => {
          if (!_0x5add06) return;
          const _0x4693aa = _0x209796.players.local.vehicle;

          if (_0x4693aa && _0x4693aa.hasVariable('isDrone')) {
            if (_0x4693aa.getEngineHealth() < 0x1f4 || _0x4693aa.getBodyHealth() < 0x1f4) return void _0x1d58ef(true);
            _0x149207(), (_0x4693aa.getRoll(), _0x4693aa.getPitch());

            let _0x90299b = _0x209796.game.controls.isDisabledControlPressed(0x0, 0x20),
                _0x5af169 = _0x209796.game.controls.isDisabledControlPressed(0x0, 0x21),
                _0x592c37 = _0x209796.game.controls.isDisabledControlPressed(0x0, 0x22),
                _0x39d00c = _0x209796.game.controls.isDisabledControlPressed(0x0, 0x23),
                _0x1da9c3 = _0x90299b ? 0.4 : 0x0,
                _0x272981 = _0x5af169 ? -0.4 : 0x0,
                _0x59f83a = _0x592c37 ? 0.9 : 0x0,
                _0x50b573 = _0x39d00c ? -0.9 : 0x0,
                _0x48ee65 = _0x4693aa.hasCollidedWithAnything(),
                _0x50069f = 0x0,
                _0xc375e0 = 0x0,
                _0x5c339b = 0x0;

            _0x90299b && (_0xc375e0 = -0.6), _0x5af169 && (_0xc375e0 = 0.6), _0x592c37 && (_0x2e7b8d > 0x5 || _0x2e7b8d < -0x5) && (_0x5c339b = -0x2), _0x39d00c && (_0x2e7b8d > 0x5 || _0x2e7b8d < -0x5) && (_0x5c339b = 0x2);
            let _0x23bfc6 = 0x0,
                _0x58e48c = 0x0;
            _0x209796.game.controls.isDisabledControlPressed(0x0, 0x16) && (_0x23bfc6 = _0x48ee65 ? -0.01 : 0.004), _0x209796.game.controls.isDisabledControlPressed(0x0, 0x15) && (_0x23bfc6 = _0x48ee65 ? 0.01 : -0.004), _0x209796.game.controls.isDisabledControlPressed(0x0, 0x14) || _0x209796.game.controls.isDisabledControlPressed(0x0, 0x2c) || _0x48ee65 || (_0x32ad75 < -0.1 ? _0x58e48c = 0.004 : _0x32ad75 > 0.1 ? _0x58e48c = -0.004 : _0x32ad75 < 0x0 ? _0x58e48c = 0.001 : _0x32ad75 > 0x0 && (_0x58e48c = -0.001)), _0x592c37 || _0x39d00c || (_0x4693aa.getRotation(0x0).y < -0x1 ? _0x5c339b = 0x2 : _0x4693aa.getRotation(0x0).y > 0x1 ? _0x5c339b = -0x2 : _0x4693aa.getRotation(0x0).y < 0x0 ? _0x5c339b = 0.001 : _0x4693aa.getRotation(0x0).y > 0x0 && (_0x5c339b = -0.001)), _0x90299b || _0x5af169 || 0x0 === _0x2e7b8d || (_0x2e7b8d < -0x1 ? _0x50069f = 0.05 : _0x2e7b8d > 0x1 ? _0x50069f = -0.05 : _0x2e7b8d < 0x0 ? _0x50069f = 0.001 : _0x2e7b8d > 0x0 && (_0x50069f = -0.001), _0x4693aa.getRotation(0x0).x < -0x1 ? _0xc375e0 = 0.6 : _0x4693aa.getRotation(0x0).x > 0x1 ? _0xc375e0 = -0.6 : _0x4693aa.getRotation(0x0).x < 0x0 ? _0xc375e0 = 0.001 : _0x4693aa.getRotation(0x0).x > 0x0 && (_0xc375e0 = -0.001));

            let _0x2e39ab = _0x59f83a + _0x50b573;

            _0x2e7b8d += _0x1da9c3 + _0x272981 + _0x50069f, _0x4693aa.isInWater() && (_0x23bfc6 = 0.01);
            let _0x3358fb = 0x0;
            _0x2e7b8d > 0x1 && (_0x3358fb = _0x23bfc6 + _0x4693aa.getRotation(0x0).x / -0xc8), _0x2e7b8d < -0x1 && (_0x3358fb = _0x23bfc6 + _0x4693aa.getRotation(0x0).x / 0x190), _0x32ad75 += _0x23bfc6 + _0x58e48c, _0x32ad75 > 0.13 && (_0x32ad75 = 0.13), _0x32ad75 < -0.13 && (_0x32ad75 = -0.13), _0x1e2bf1 < _0x2e7b8d && (_0x2e7b8d = _0x1e2bf1), -6.5 > _0x2e7b8d && (_0x2e7b8d = -6.5), _0x48ee65 && _0x2e7b8d > 0x5 && (_0x2e7b8d = 0x5);

            let _0x5e4bfb = _0x4693aa.getOffsetFromInWorldCoords(0x0, _0x2e7b8d / 0x32, _0x32ad75 + _0x3358fb),
                _0x25b6e1 = _0x4693aa.getRotation(0x0).z;

            _0x4693aa.setVelocity(0x0, _0x2e7b8d / 0x1e, _0x32ad75 + _0x4693aa.getRotation(0x0).x / -0x64);

            let _0xfafd44 = _0xc375e0 + _0x4693aa.getRotation(0x0).x,
                _0x2badca = _0x5c339b + _0x4693aa.getRotation(0x0).y;

            _0xfafd44 > 0x19 && (_0xfafd44 = 0x19), _0xfafd44 < -0x19 && (_0xfafd44 = -0x19), _0x2badca > 0x32 && (_0x2badca = 0x32), _0x2badca < -0x32 && (_0x2badca = -0x32), _0x4693aa.setRotation(_0xfafd44, _0x2badca, _0x25b6e1 + _0x2e39ab, 0x0, false), _0x4693aa.setCoordsNoOffset(_0x5e4bfb.x, _0x5e4bfb.y, _0x5e4bfb.z, true, true, true);
          }
        });

        const _0x149207 = () => {
          _0x209796.game.controls.disableControlAction(0x0, 0x55, true), _0x209796.game.controls.disableControlAction(0x0, 0x4b, true), _0x209796.game.controls.disableControlAction(0x0, 0x8, true), _0x209796.game.controls.disableControlAction(0x0, 0x9, true), _0x209796.game.controls.disableControlAction(0x0, 0x1e, true), _0x209796.game.controls.disableControlAction(0x0, 0x1f, true), _0x209796.game.controls.disableControlAction(0x0, 0x20, true), _0x209796.game.controls.disableControlAction(0x0, 0x21, true), _0x209796.game.controls.disableControlAction(0x0, 0x22, true), _0x209796.game.controls.disableControlAction(0x0, 0x23, true), _0x209796.game.controls.disableControlAction(0x0, 0x24, true), _0x209796.game.controls.disableControlAction(0x0, 0x3f, true), _0x209796.game.controls.disableControlAction(0x0, 0x40, true), _0x209796.game.controls.disableControlAction(0x0, 0x47, true), _0x209796.game.controls.disableControlAction(0x0, 0x48, true), _0x209796.game.controls.disableControlAction(0x0, 0x4d, true), _0x209796.game.controls.disableControlAction(0x0, 0x4e, true), _0x209796.game.controls.disableControlAction(0x0, 0x4e, true), _0x209796.game.controls.disableControlAction(0x0, 0x57, true), _0x209796.game.controls.disableControlAction(0x0, 0x58, true), _0x209796.game.controls.disableControlAction(0x0, 0x59, true), _0x209796.game.controls.disableControlAction(0x0, 0x5a, true), _0x209796.game.controls.disableControlAction(0x0, 0x81, true), _0x209796.game.controls.disableControlAction(0x0, 0x82, true), _0x209796.game.controls.disableControlAction(0x0, 0x85, true), _0x209796.game.controls.disableControlAction(0x0, 0x86, true), _0x209796.game.controls.disableControlAction(0x0, 0x88, true), _0x209796.game.controls.disableControlAction(0x0, 0x8b, true), _0x209796.game.controls.disableControlAction(0x0, 0x92, true), _0x209796.game.controls.disableControlAction(0x0, 0x93, true), _0x209796.game.controls.disableControlAction(0x0, 0x94, true), _0x209796.game.controls.disableControlAction(0x0, 0x95, true), _0x209796.game.controls.disableControlAction(0x0, 0x96, true), _0x209796.game.controls.disableControlAction(0x0, 0x97, true), _0x209796.game.controls.disableControlAction(0x0, 0xe8, true), _0x209796.game.controls.disableControlAction(0x0, 0x10a, true), _0x209796.game.controls.disableControlAction(0x0, 0x10b, true), _0x209796.game.controls.disableControlAction(0x0, 0x10c, true), _0x209796.game.controls.disableControlAction(0x0, 0x10d, true), _0x209796.game.controls.disableControlAction(0x0, 0x116, true), _0x209796.game.controls.disableControlAction(0x0, 0x117, true), _0x209796.game.controls.disableControlAction(0x0, 0x152, true), _0x209796.game.controls.disableControlAction(0x0, 0x153, true), _0x209796.game.controls.disableControlAction(0x0, 0x2c, true), _0x209796.game.controls.disableControlAction(0x0, 0x14, true), _0x209796.game.controls.disableControlAction(0x0, 0x2f, true);
        };

        _0x209796.events.add('vehicles.drone.toggle', _0x81bd38 => {
          _0x5add06 = !!_0x81bd38, _0x3bbfa0.api.usingSystemAnim(!!_0x81bd38), _0x5add06 || _0x1d58ef();
        });

        const _0x2e0082 = {};
      },
      0x168d2: (_0x58c3af, _0x261d3e, _0x53cf58) => {
        'use strict';

        const a0_0x536235 = {
          _0x5bc5db: 0x1d66,
          _0x152684: 0x59d
        },
              a0_0x7cd617 = {
          _0x595799: 0x535,
          _0x31f09b: 0x253d,
          _0x278664: 0x16c5
        };

        _0x53cf58.r(_0x261d3e);

        var _0x282bec = _0x53cf58(0x16a21),
            _0x14ac60 = _0x53cf58(0x11ed5),
            _0x1ef89a = _0x53cf58(0xb274),
            _0xeabbb3 = _0x53cf58(0x161cd);

        const _0x2cb5c7 = _0xeabbb3.players.local,
              _0x24866a = [];

        let _0x3ac4e1;

        _0x14ac60.Z.forEach(_0x218f70 => {
          const _0x1ae9f3 = {};
          _0x1ae9f3.shape = _0xeabbb3.colshapes.newSphere(_0x218f70.x, _0x218f70.y, _0x218f70.z, 0x4, 0x0), _0x1ae9f3.shape.isCarDump = true, _0x1ae9f3.marker = _0xeabbb3.markers.new(0x1, new _0xeabbb3.Vector3(_0x218f70.x, _0x218f70.y, _0x218f70.z - 0x1), 0x4, {
            'direction': new _0xeabbb3.Vector3(_0x218f70.x, _0x218f70.y, _0x218f70.z - 0x1),
            'rotation': new _0xeabbb3.Vector3(0x0, 0x0, 0x0),
            'color': [0xe6, 0x4b, 0x3c, 0xc8],
            'visible': true,
            'dimension': 0x0
          }), _0x1ae9f3.label = _0xeabbb3.labels.new('labels.dump', _0x218f70, {
            'los': true,
            'font': 0x0,
            'drawDistance': 0x14,
            'color': [0xe6, 0x4b, 0x3c, 0xff],
            'dimension': 0x0
          }), _0x24866a.push(_0x1ae9f3.shape), (0x0, _0x1ef89a.markAsTranslatedLabel)(_0x1ae9f3.label, 'labels.dump');
        }), _0xeabbb3.events.add('playerEnterColshape', async _0x2ec4fa => {
          _0x282bec.api.isAuthed() && _0xeabbb3.colshapes.exists(_0x2ec4fa) && _0x24866a.includes(_0x2ec4fa) && (_0x3ac4e1 = _0x2ec4fa, _0x282bec.api.displayHelpStringTrans('displayHelpString.toDumpCar', false, true, 0x1388));
        }), _0xeabbb3.events.add('playerExitColshape', async _0x3de704 => {
          if (_0x282bec.api.isAuthed()) return _0x3ac4e1 === _0x3de704 ? (_0x3ac4e1 = null, void _0xeabbb3.game.ui.clearHelp(true)) : undefined;
        }), _0xeabbb3.events.add('keys.e', async () => {
          _0x3ac4e1 && _0x2cb5c7.vehicle && (_0xeabbb3.game.ui.clearHelp(true), _0x3ac4e1 = false, _0xeabbb3.events.callRemote('2111088640'));
        });
      },
      0x581b: (_0x37460a, _0x2845ae, _0x687eec) => {
        'use strict';

        _0x687eec.r(_0x2845ae);

        var _0x46ad4e = _0x687eec(0x16a21),
            _0x1d5c61 = _0x687eec(0x16a7d),
            _0x42ce68 = _0x687eec(0x161cd);

        const _0x527122 = _0x42ce68.players.local;
        let _0x1d0b4e = 0x0;
        _0x42ce68.keys.bind(_0x1d5c61.t.B, false, async () => {
          _0x42ce68.gui.cursor.visible || _0x42ce68.events.call('vehicle.toggleEngine');
        }), _0x42ce68.events.add('vehicle.toggleEngine', async () => {
          if (_0x46ad4e.api.ePress(_0x1d0b4e) || !_0x46ad4e.api.isAuthed() || _0x687eec.g.interfaces.chat || _0x687eec.g.interfaces.iphone || _0x46ad4e.api.isCuffed(_0x527122) || _0x527122.isDead()) return;
          _0x1d0b4e = _0x46ad4e.api.ePressUpdate();
          const _0x1ed512 = _0x527122.vehicle;

          if ((!_0x42ce68.vehicles.exists(_0x1ed512) || !_0x42ce68.game.vehicle.isThisModelABicycle(_0x1ed512.model)) && _0x1ed512 && _0x1ed512.getPedInSeat(_0x46ad4e.api.getVehSeat(-0x1)) == _0x527122.handle && !_0x46ad4e.api.isCuffed(_0x527122)) {
            if (true === _0x46ad4e.api.getEntitySync(_0x1ed512, 'engine', 'boolean')) _0x42ce68.events.callRemote('2973793146', false);else {
              if (!_0x46ad4e.api.vehicleAccess(_0x1ed512)) return _0x46ad4e.api.longNotifyTrans('vehicle.noKeys', 'error', 0x7d0, true);

              _0x42ce68.events.callRemote('2973793146', true);
            }
          }
        }), _0x42ce68.events.add('render2', () => {
          const _0x52116c = _0x527122.vehicle;

          if (_0x52116c && _0x42ce68.vehicles.exists(_0x52116c) && (false === _0x46ad4e.api.getEntitySync(_0x52116c, 'engine', 'boolean') && (_0x52116c.setEngineOn(false, true, true), _0x52116c.setUndriveable(true)), _0x52116c.hasVariable('isOnlyFraction') && true === _0x52116c.getVariable('isOnlyFraction'))) {
            if (_0x527122.getVariable('member') != _0x52116c.getVariable('fraction')) {
              _0x52116c.setUndriveable(true);

              for (let _0x24aa4f = 0x3b; _0x24aa4f <= 0x5a; _0x24aa4f++) {
                if (0x4b == _0x24aa4f) return;

                _0x42ce68.game.controls.disableControlAction(0x0, _0x24aa4f, true);
              }
            }
          }
        }), _0x42ce68.events.add('time.every2Sec', () => {
          _0x527122.setConfigFlag(0x1ad, true), _0x527122.setConfigFlag(0xf1, true);
        });
      },
      0xed6: (_0x4df970, _0x965a40, _0x46f997) => {
        'use strict';

        const a0_0x47ecb6 = {
          _0xee8738: 0x4b9,
          _0x40c694: 0x1917,
          _0x559255: 0x1da5,
          _0x5da51b: 0x112d
        };

        _0x46f997.r(_0x965a40);

        var _0x35c12c = _0x46f997(0x16a21),
            _0x40b81c = _0x46f997(0x16a7d),
            _0x174f3b = _0x46f997(0xa5d9),
            _0x5bd87b = _0x46f997(0x161cd);

        const _0x1cbe63 = _0x5bd87b.players.local,
              _0x14d961 = [0xd, 0xe, 0xf, 0x10, 0x15];
        let _0x1dd652 = 0x0,
            _0x10cc29 = 0x0;

        _0x5bd87b.keys.bind(_0x40b81c.t.ARROW_LEFT, false, () => {
          try {
            if (_0x35c12c.api.ePress(_0x10cc29) || _0x46f997.g.interfaces.iphone) return;
            if (_0x10cc29 = _0x35c12c.api.ePressUpdate(), _0x46f997.g.interfaces.chat) return;
            const _0x4152ee = _0x5bd87b.players.local.vehicle;
            _0x4152ee && _0x4152ee.getPedInSeat(_0x35c12c.api.getVehSeat(-0x1)) == _0x5bd87b.players.local.handle && -0x1 == _0x14d961.indexOf(_0x4152ee.getClass()) && _0x5bd87b.events.callRemote('1740360790', _0x4152ee, 0x1);
          } catch (_0x492ca3) {
            _0x35c12c.api.sendError(_0x492ca3);
          }
        });

        let _0x2aacab = 0x0;

        _0x5bd87b.keys.bind(_0x40b81c.t.ARROW_RIGHT, false, () => {
          try {
            if (_0x35c12c.api.ePress(_0x2aacab) || _0x46f997.g.interfaces.iphone || _0x46f997.g.interfaces.panelMenu) return;
            if (_0x2aacab = _0x35c12c.api.ePressUpdate(), _0x46f997.g.interfaces.chat) return;
            const _0x5917a4 = _0x5bd87b.players.local.vehicle;
            _0x5917a4 && _0x5917a4.getPedInSeat(_0x35c12c.api.getVehSeat(-0x1)) == _0x5bd87b.players.local.handle && -0x1 == _0x14d961.indexOf(_0x5917a4.getClass()) && _0x5bd87b.events.callRemote('1740360790', _0x5917a4, 0x0);
          } catch (_0x4ef617) {
            _0x35c12c.api.sendError(_0x4ef617);
          }
        });

        let _0x5cb295 = 0x0;
        _0x5bd87b.keys.bind(_0x40b81c.t.Y, false, () => {
          try {
            if (_0x35c12c.api.ePress(_0x5cb295) || _0x46f997.g.interfaces.iphone) return;
            if (_0x5cb295 = _0x35c12c.api.ePressUpdate(), _0x46f997.g.interfaces.chat) return;
            const _0x2423af = _0x5bd87b.players.local.vehicle;
            _0x2423af && _0x2423af.getPedInSeat(_0x35c12c.api.getVehSeat(-0x1)) == _0x5bd87b.players.local.handle && 0x12 === _0x2423af.getClass() && _0x5bd87b.events.callRemote('2595545396', _0x2423af);
          } catch (_0x4439a2) {
            _0x35c12c.api.sendError(_0x4439a2);
          }
        }), _0x5bd87b.events.add('toggleVehicleWindow', (_0x32bc63, _0x1691de) => {
          if (!_0x5bd87b.vehicles.exists(_0x32bc63)) return;

          _0x5bd87b.events.callRemote('2159042432', _0x32bc63, JSON.stringify({
            'index': _0x1691de,
            'value': _0x32bc63.isWindowIntact(_0x1691de) && -0x1 !== _0x32bc63.getBoneIndexByName(['window_rf', 'window_lf', 'window_rr', 'window_lr'][_0x1691de]) ? 0x1 : 0x0
          }));
        }), _0x5bd87b.events.add('setVehicleInteriorLight', _0x187262 => {
          _0x5bd87b.vehicles.exists(_0x187262) && _0x5bd87b.events.callRemote('3304031398', _0x187262, JSON.stringify({
            'doorsOpened': _0x35c12c.api.isVehicleDoorsOpened(_0x187262)
          }));
        }), _0x5bd87b.keys.bind(_0x40b81c.t.L, false, () => {
          try {
            if (_0x35c12c.api.ePress(_0x1dd652) || !_0x35c12c.api.isAuthed() || _0x46f997.g.interfaces.chat || _0x5bd87b.gui.cursor.visible || _0x46f997.g.interfaces.iphone || _0x35c12c.api.isCuffed(_0x1cbe63) || _0x1cbe63.isDead() || null != _0x1cbe63.getVariable('playerInTrunk')) return;
            _0x1dd652 = _0x35c12c.api.ePressUpdate(), _0x5bd87b.events.callRemote('2567057240');
          } catch (_0x44404f) {
            _0x35c12c.api.sendError(_0x44404f);
          }
        });

        let _0x54b700 = new _0x5bd87b.Vector3(0x0, 0x0, 0x0);

        _0x5bd87b.events.add('time.everySec', () => {
          if (!_0x1cbe63.vehicle) return;

          const _0x3f3fa6 = _0x35c12c.api.getWaypointPosition();

          _0x3f3fa6 && _0x3f3fa6.x !== _0x54b700.x && _0x3f3fa6.y !== _0x54b700.y && (_0x54b700 = _0x3f3fa6, _0x5bd87b.events.callRemote('2392321646', JSON.stringify(_0x3f3fa6)));
        }), _0x5bd87b.events.add('vehicle.syncWaypointToClient', _0x354629 => {
          _0x354629 && (_0x354629 = JSON.parse(_0x354629), _0x35c12c.api.getWaypointPosition() != _0x354629 && (_0x54b700 = _0x354629, _0x5bd87b.game.ui.setNewWaypoint(_0x354629.x, _0x354629.y)));
        });
        const _0xc79fd4 = [_0x5bd87b.game.joaat('rhino'), _0x5bd87b.game.joaat('apc'), _0x5bd87b.game.joaat('lazer'), _0x5bd87b.game.joaat('savage'), _0x5bd87b.game.joaat('scarab')];

        let _0x4c77e7;

        _0x5bd87b.events.add('onPlayerEnterVehicle', (_0x4a6a53, _0x25b615) => {
          const a0_0xaf92b8 = {
            _0x58a31c: 0x1d66,
            _0x44d925: 0x4b9,
            _0x22ddb4: 0x1f22,
            _0x56e490: 0x4b9,
            _0x3ac8b7: 0x2530,
            _0x41d9dc: 0x2530
          };
          _0x1cbe63.vehicle && _0xc79fd4.includes(_0x1cbe63.vehicle.getModel()) && (_0x5bd87b.events.call('utils.disablePlayerVehShoot', true), _0x174f3b.Z.forEach(_0x48a5fc => {
            _0x5bd87b.game.vehicle.disableVehicleWeapon(true, 'number' == typeof _0x48a5fc ? _0x48a5fc : _0x5bd87b.game.joaat(_0x48a5fc), _0x1cbe63.vehicle.handle, _0x1cbe63.handle);
          }));
        }), _0x5bd87b.events.add('onPlayerExitVehicle', (_0x6bcc0, _0x383273) => {
          _0x5bd87b.events.call('utils.disablePlayerVehShoot', false);
        });
        let _0x3cc690 = 0x0;

        _0x5bd87b.events.add('time.everySec', () => {
          if (!_0x1cbe63.vehicle) return;

          const _0xc6d83d = Date.now(),
                _0x451de9 = _0x1cbe63.driveAgainstTraffic = _0x35c12c.api.invokeNative('GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC');

          _0x1cbe63.driveAgainstPavement = _0x35c12c.api.invokeNative('GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT', _0x35c12c.api.invokeNative('PLAYER_ID')), (0x0 === _0x451de9 ? _0x4c77e7 || (_0x4c77e7 = _0xc6d83d) : _0x4c77e7 = null, !(_0x4c77e7 && _0x35c12c.api.ePress(_0x3cc690, 0x1388) && _0xc6d83d - _0x4c77e7 >= 0x1d4c && 3.6 * _0x1cbe63.vehicle.getSpeed() > 0x32) || _0x1cbe63.isInAnyHeli() || _0x1cbe63.isInAnyBoat() || _0x1cbe63.isInAnyPlane() || _0x1cbe63.isInAnyPoliceVehicle() || (_0x3cc690 = _0x35c12c.api.ePressUpdate(0x1388), _0x35c12c.api.notifyTrans('vehicle.drivingFast', {
            'title': 'vehicle.drivingFastTitle',
            'subtitle': 'Daniel Morales',
            'localIcon': 'DIA_DRIVER',
            'small': false
          }, {
            'duration': 0x1194
          })));
        });
      },
      0x31b9: (_0x4ffa74, _0x44a45e, _0x48b2f6) => {
        'use strict';

        const a0_0x1537ac = {
          _0x25b46a: 0x46e,
          _0x287b4b: 0x895,
          _0x8c8069: 0x895,
          _0x3c101f: 0x535,
          _0x478460: 0x23c8,
          _0x201458: 0xd94,
          _0x5cff59: 0x4b9,
          _0x87c85c: 0x1f7a,
          _0x250a5a: 0x1398,
          _0x1a01b0: 0xf3f,
          _0x4913e1: 0x1681,
          _0x4f98b6: 0x20ac,
          _0x5b798b: 0xecc
        },
              a0_0x7d01fc = {
          _0x181ec9: 0x4b9,
          _0x5e78a3: 0x2530
        },
              a0_0x1d1800 = {
          _0x85e08a: 0x4b9
        },
              a0_0x5e920c = {
          _0x46f9f4: 0x4b9,
          _0x433472: 0xffb,
          _0x23959a: 0xffb
        },
              a0_0x3d6548 = {
          _0x43bdcf: 0x4b9,
          _0x2f1562: 0x535,
          _0x4b23d9: 0x133c,
          _0x22741d: 0x2530,
          _0x3a2fe7: 0x163e,
          _0x30cab5: 0x535,
          _0x57c399: 0x13b4,
          _0x46c851: 0x13b4
        };

        _0x48b2f6.r(_0x44a45e);

        var _0x46d0a9 = _0x48b2f6(0x16a21),
            _0x353505 = _0x48b2f6(0x165f2),
            _0x24ea72 = _0x48b2f6(0x161cd);

        const _0x525a80 = _0x24ea72.players.local;

        let _0x283662;

        _0x24ea72.events.add('time.every05Sec', () => {
          const _0x2d075f = _0x525a80.vehicle;
          _0x283662 ? _0x283662 && (_0x2d075f && (!_0x2d075f || _0x2d075f.getPedInSeat(_0x46d0a9.api.getVehSeat(-0x1)) == _0x525a80.handle && _0x283662.vehicle.handle == _0x2d075f.handle) || (_0x283662 = null)) : _0x2d075f && _0x2d075f.getPedInSeat(_0x46d0a9.api.getVehSeat(-0x1)) == _0x525a80.handle && (_0x283662 = new _0xc966e2(_0x2d075f, parseFloat(_0x353505.D[_0x2d075f.model] ? _0x353505.D[_0x2d075f.model].fuelConsumption : 0x1) / 0x2));
        });

        let _0x593780 = Date.now();

        _0x24ea72.events.add('render2', () => {
          _0x283662 && _0x525a80.vehicle && Date.now() - _0x593780 >= 0xf && (_0x593780 = Date.now(), _0x283662.calcFuel());
        }), _0x24ea72.events.add('time.every5Sec', () => {
          _0x283662 && _0x525a80.vehicle && _0x283662.updateFuel();
        }), _0x24ea72.events.add('vehicles.fuel.onUpdate', (_0x5724de, _0x5874e8) => {
          _0x283662 && _0x525a80.vehicle && _0x283662.setLastFuel(_0x5724de, _0x5874e8);
        });

        class _0xc966e2 {
          constructor(_0x2237b1, _0x55ba18 = 0x1) {
            if (!_0x24ea72.vehicles.exists(_0x2237b1)) throw new Error('Vehicle Doesnt Exists!');
            this.vehicle = _0x2237b1, this.consumption = _0x55ba18 / 0x2, this.lastFuel = _0x46d0a9.api.getGas(this.vehicle) / 0x3e8, this.updatedFuel = this.lastFuel;
          }

          ['setLastFuel'](_0x55e6d8, _0x212f80) {
            _0x24ea72.vehicles.exists(_0x55e6d8) && this.vehicle.handle == _0x55e6d8.handle && (this.updatedFuel = parseInt(_0x212f80) / 0x3e8);
          }

          ['calcFuel']() {
            let _0x52eb3f = this.updatedFuel;
            if (isNaN(this.updatedFuel) || isNaN(this.lastFuel)) return this.lastFuel = _0x46d0a9.api.getGas(this.vehicle) / 0x3e8, void (this.updatedFuel = this.lastFuel);

            if (_0x52eb3f > 0x0 && _0x46d0a9.api.getEngine(this.vehicle)) {
              let _0x4f344c = 0x0;

              const _0x1254d9 = this.consumption,
                    _0x54cb6c = Math.pow(this.vehicle.rpm, 1.5),
                    _0x117d89 = this.vehicle.getMaxTraction() > 0x3 ? 0x3 : this.vehicle.getMaxTraction();

              _0x4f344c += 0.0006 * _0x54cb6c, _0x4f344c += 0.0003 * this.vehicle.getAcceleration(), _0x4f344c += 0.0002 * _0x117d89;

              const _0x18e666 = _0x46d0a9.api.getWear(this.vehicle, 'wearEngine') || 0x0,
                    _0x247502 = _0x46d0a9.api.getWear(this.vehicle, 'wearFuel') || 0x0;

              let _0x327254 = 0x1;
              _0x247502 > 0x17318 ? _0x327254 = 0x3 : _0x247502 > 0x124f8 ? _0x327254 = 0x2 : _0x247502 > 0xc350 && (_0x327254 = 1.5), _0x52eb3f -= _0x4f344c * _0x1254d9 * 1.2 * (_0x18e666 > 0xc350 ? 0x2 : 0x1) * _0x327254, _0x52eb3f = _0x52eb3f < 0x0 ? 0x0 : _0x52eb3f, this.updatedFuel = _0x52eb3f;
            }
          }

          ['updateFuel']() {
            isNaN(this.updatedFuel) || this.lastFuel != this.updatedFuel && _0x24ea72.vehicles.exists(this.vehicle) && (this.updatedFuel > 0x0 && _0x24ea72.events.callRemote('468125000', this.vehicle, this.updatedFuel), this.updatedFuel <= 0x0 && _0x46d0a9.api.getEngine(this.vehicle) && (_0x24ea72.events.callRemote('2973793146', false), _0x24ea72.events.callRemote('468125000', this.vehicle, 0x0)), this.lastFuel = this.updatedFuel);
          }

        }
      },
      0xe387: (_0x311f45, _0x6f82cf, _0x477cd2) => {
        'use strict';

        const a0_0x1cd425 = {
          _0xf019c6: 0x4b9,
          _0x26eac1: 0x19e6,
          _0x27b98c: 0x1c35
        },
              a0_0x51672c = {
          _0x4e4e19: 0x1c35
        };

        _0x477cd2.r(_0x6f82cf);

        var _0x333a31 = _0x477cd2(0x16a21),
            _0x266c53 = _0x477cd2(0x161cd);

        const _0x44eaa1 = _0x266c53.players.local;
        _0x266c53.events.add('playerEnterVehicle', (_0x1c6633, _0x4b8d12) => {
          _0x1c6633.controller === _0x44eaa1 && _0x3c481d(_0x1c6633, false);
        }), _0x266c53.events.add('playerLeaveVehicle', (_0x237763, _0x4cbb84) => {
          _0x237763 && (_0x237763.controller !== _0x44eaa1 || _0x333a31.api.hasAnyPassenger(_0x237763, [_0x4cbb84]) || _0x3c481d(_0x237763, true));
        }), _0x266c53.events.add('entityControllerChange', (_0x367826, _0x5e9fe5) => {
          'vehicle' === _0x367826.type && _0x5e9fe5 === _0x44eaa1 && _0x3c481d(_0x367826, !_0x333a31.api.hasAnyPassenger(_0x367826));
        });

        const _0x3c481d = (_0x1e34cf, _0x146687) => {
          _0x1e34cf.setProofs(!!_0x146687, !!_0x146687, !!_0x146687, !!_0x146687, !!_0x146687, !!_0x146687, !!_0x146687, !!_0x146687);
        };
      },
      0x105ab: (_0x41da4d, _0x3bdc59, _0x47c2b9) => {
        _0x47c2b9(0xed6), _0x47c2b9(0x4d1b), _0x47c2b9(0xcb55), _0x47c2b9(0x9c77), _0x47c2b9(0x1b34), _0x47c2b9(0x183ce), _0x47c2b9(0x31b9), _0x47c2b9(0x581b), _0x47c2b9(0xd698), _0x47c2b9(0x1b0b), _0x47c2b9(0xf9e2), _0x47c2b9(0x16710), _0x47c2b9(0xc296), _0x47c2b9(0x2ba9), _0x47c2b9(0x784f), _0x47c2b9(0xe387), _0x47c2b9(0x168d2), _0x47c2b9(0x12c22), _0x47c2b9(0x12679), _0x47c2b9(0x3054), _0x47c2b9(0x21f0);
      },
      0xf9e2: (_0x1fc158, _0x2cd419, _0x321b37) => {
        'use strict';

        const a0_0x24864e = {
          _0x3d745c: 0xc6c,
          _0xa00049: 0x24d7
        },
              a0_0x5c06e4 = {
          _0x130c3c: 0xc6c,
          _0x518fda: 0xc6c,
          _0x4aa1d4: 0x23a2
        },
              a0_0x243cb6 = {
          _0x3ca2ff: 0x2530,
          _0x342849: 0x4b9,
          _0x3d9847: 0xc6c,
          _0x336faf: 0x133c
        };

        _0x321b37.r(_0x2cd419);

        var _0x589fe9 = _0x321b37(0x16a21),
            _0x5b91cb = _0x321b37(0x161cd);

        const _0x8454fa = _0x5b91cb.players.local;
        _0x5b91cb.events.add('time.every05Sec', () => {
          const _0x356465 = _0x8454fa.vehicle;
          _0x8454fa.mileageClass ? _0x8454fa.mileageClass && (_0x356465 && (!_0x356465 || _0x356465.getPedInSeat(_0x589fe9.api.getVehSeat(-0x1)) == _0x8454fa.handle && _0x8454fa.mileageClass.vehicle.handle == _0x356465.handle) || (_0x8454fa.mileageClass = null)) : _0x356465 && _0x356465.getPedInSeat(_0x589fe9.api.getVehSeat(-0x1)) == _0x8454fa.handle && (_0x8454fa.mileageClass = new _0x1b6ce2(_0x356465));
        }), _0x5b91cb.events.add('time.everySec', () => {
          _0x8454fa.mileageClass && _0x8454fa.vehicle && _0x8454fa.mileageClass.calc();
        }), _0x5b91cb.events.add('time.everyMinute', () => {
          _0x8454fa.mileageClass && _0x8454fa.vehicle && _0x8454fa.mileageClass.update();
        }), _0x5b91cb.events.add('vehicles.mileage.onUpdate', _0x3edfd4 => {
          _0x8454fa.mileageClass && _0x8454fa.vehicle && _0x8454fa.mileageClass.reset(_0x3edfd4);
        });

        class _0x1b6ce2 {
          constructor(_0x564368) {
            this.vehicle = _0x564368, this.centimeters = 0x0;
          }

          ['calc']() {
            const _0x386208 = 3.6 * this.vehicle.getSpeed() * 0x3e8 / 0xe10 * 0x64;

            this.centimeters += parseInt(_0x386208);
          }

          ['update']() {
            this.centimeters >= 0x0 && _0x5b91cb.vehicles.exists(this.vehicle) && this.vehicle.remoteId && (_0x5b91cb.events.callRemote('3568402334', this.vehicle, this.centimeters), this.centimeters = 0x0);
          }

          ['reset'](_0x3171a2) {
            _0x5b91cb.vehicles.exists(_0x3171a2) && _0x3171a2.handle === this.vehicle.handle && (this.centimeters = 0x0);
          }

        }
      },
      0x12679: (_0x3d5eb9, _0x34a932, _0x3a314c) => {
        'use strict';

        const a0_0x1ff623 = {
          _0x19e875: 0x175a,
          _0x1d5339: 0x1820,
          _0x52d01b: 0x1c35,
          _0x4819f9: 0xc95,
          _0x3f7a67: 0x2530,
          _0x545dac: 0x1ec5,
          _0x5727b6: 0x1f30,
          _0x2f54fb: 0x1d66,
          _0x51a721: 0x1f30,
          _0x16d288: 0x1696,
          _0x1e46f1: 0x535,
          _0x3f582a: 0x1da7,
          _0x2a6fd4: 0x24fe,
          _0x1d4543: 0x1992,
          _0x2e4ca6: 0x32b,
          _0x4d2d7d: 0xc70,
          _0x1829f3: 0xa0b,
          _0x33e12f: 0x2530,
          _0x44189a: 0x1a35,
          _0x4be276: 0xb72
        },
              a0_0xda30a1 = {
          _0x7bd05b: 0x770
        },
              a0_0x2b9aa9 = {
          _0xc01bab: 0x1291,
          _0x10f1da: 0x310,
          _0x24cc38: 0x535,
          _0x1f1475: 0x25db,
          _0x3b1bf4: 0x1f30,
          _0x53f624: 0x310,
          _0x2d7944: 0x2080,
          _0x4ed357: 0x244d,
          _0x29c291: 0x1f30,
          _0x3d5a47: 0x2180,
          _0x4fea8a: 0x1e94,
          _0x274df0: 0x2530,
          _0x3cc9fa: 0x13f4,
          _0x300e38: 0x1c3c
        };
        _0x3a314c.r(_0x34a932), _0x3a314c.d(_0x34a932, {
          'attachPlayerCarPush': () => _0x2ceef8,
          'canPushVehicle': () => _0x36ef06,
          'detachPlayerCarPush': () => _0x3ac536,
          'isPlayerPushing': () => _0x514797,
          'taskPushVehicle': () => _0x368110
        });

        var _0x59fd56 = _0x3a314c(0x16a21),
            _0x22b08a = _0x3a314c(0x161cd);

        const _0x3a7c7c = _0x22b08a.players.local,
              _0x4563a5 = {
          'playerPushingStarted': false,
          'playerPushing': false,
          'currentVehicle': null
        };
        let _0x514797 = _0x4563a5.playerPushing;

        const _0x4ee3be = {
          'AllowVehicleClass': [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x9, 0x12],
          'MaxVehicleCubedSize': 0x19,
          'MaxVehicleDistance': 3.5,
          'PushEventName': false,
          'DebugPositions': false,
          'AllowVehicleSteering': true
        },
              _0x36ef06 = _0x267c75 => !!_0x22b08a.vehicles.exists(_0x267c75) && !_0x59fd56.api.isUsingSystemAnim() && !_0x4563a5.playerPushing && !_0x4563a5.playerPushingStarted && !_0x59fd56.api.getEntitySync(_0x267c75, 'locked', 'boolean') && !(_0x59fd56.api.vdist2(_0x3a7c7c.position, _0x267c75.position) > _0x4ee3be.MaxVehicleDistance) && !!_0x267c75.isOnAllWheels() && !_0x59fd56.api.getEntitySync(_0x267c75, 'isPushing', 'bool') && !_0x59fd56.api.hasAnyPassenger(_0x267c75) && null == _0x3a7c7c.getVariable('playerInTrunk') && !_0x267c75.hasCollidedWithAnything() && !!_0x4ee3be.AllowVehicleClass.includes(_0x267c75.getClass()),
              _0x368110 = async (_0x3c9547, _0x5ad5b6 = false) => {
          if (!_0x22b08a.vehicles.exists(_0x3c9547)) return;

          const _0x2ce037 = _0x1da32f(_0x3c9547),
                _0x1d6acc = Math.round(_0x59fd56.api.vdist(_0x2ce037.front.x, _0x2ce037.front.y, _0x3c9547.position.z, _0x3a7c7c.position.x, _0x3a7c7c.position.y, _0x3a7c7c.position.z) / 0x3),
                _0x22f5bd = Math.round(_0x59fd56.api.vdist(_0x2ce037.back.x, _0x2ce037.back.y, _0x3c9547.position.z, _0x3a7c7c.position.x, _0x3a7c7c.position.y, _0x3a7c7c.position.z) / 0x3),
                _0x3aa7e0 = _0x1d6acc < _0x22f5bd;

          _0x3c9547.isInFront = _0x3aa7e0, _0x4563a5.currentVehicle = _0x3c9547, _0x22b08a.events.callRemote('849495991', _0x3c9547.remoteId, true), (_0x1d6acc <= 0x2 || _0x22f5bd <= 0x2) && _0x2ce037.size.lengthY * _0x2ce037.size.lengthX <= _0x4ee3be.MaxVehicleCubedSize && (_0x4563a5.playerPushing || _0x4563a5.playerPushingStarted || _0x3a7c7c.isInAnyVehicle(false) || (_0x4563a5.playerPushing = true, await _0x59fd56.api.requestAnimDict('missfinale_c2ig_11'), _0x3aa7e0 ? _0x3a7c7c.attachTo(_0x3c9547.handle, 0x188e, 0x0, _0x2ce037.size.max.y + 0.35, _0x2ce037.size.z + 0.95, 0x0, 0x0, 0xb4, false, false, true, true, 0x0, true) : _0x3a7c7c.attachTo(_0x3c9547.handle, 0x188e, 0x0, _0x2ce037.size.min.y - 0.6, _0x2ce037.size.z + 0.95, 0x0, 0x0, 0x0, false, false, true, true, 0x0, true), await _0x59fd56.api.taskPlayAnim('missfinale_c2ig_11', 'pushcar_offcliff_m', 0x21, true, false, false, false), _0x59fd56.api.usingSystemAnim(true), _0x4563a5.playerPushingStarted = true));
        },
              _0x2ceef8 = (_0xed336f, _0x423c56) => {
          const _0x28cbef = _0x22b08a.vehicles.atRemoteId(_0x423c56);

          if (!_0x28cbef) return;

          const _0x38fb1 = _0x1da32f(_0x28cbef);

          Math.round(_0x59fd56.api.vdist(_0x38fb1.front.x, _0x38fb1.front.y, _0x28cbef.position.z, _0xed336f.position.x, _0xed336f.position.y, _0xed336f.position.z) / 0x3) < Math.round(_0x59fd56.api.vdist(_0x38fb1.back.x, _0x38fb1.back.y, _0x28cbef.position.z, _0xed336f.position.x, _0xed336f.position.y, _0xed336f.position.z) / 0x3) ? _0xed336f.attachTo(_0x28cbef.handle, 0x188e, 0x0, _0x38fb1.size.max.y + 0.35, _0x38fb1.size.z + 0.95, 0x0, 0x0, 0xb4, false, true, true, true, 0x0, true) : _0xed336f.attachTo(_0x28cbef.handle, 0x188e, 0x0, _0x38fb1.size.min.y - 0.6, _0x38fb1.size.z + 0.95, 0x0, 0x0, 0x0, false, true, true, true, 0x0, true), _0xed336f.carPush = _0x423c56;
        },
              _0x3ac536 = _0x325e16 => {
          _0x325e16.carPush && (_0x325e16.detach(true, false), delete _0x325e16.carPush);
        },
              _0x1da32f = _0x5ba39d => {
          const a0_0x2cefb7 = {
            _0x5aae3d: 0x2085
          },
                _0x204608 = _0x22b08a.game.gameplay.getModelDimensions(_0x5ba39d.model),
                _0x22230d = _0x5ba39d.getRotation(0x2),
                _0x1466e9 = 0x0 - _0x204608.min.x + _0x204608.max.x,
                _0xde4a9e = 0x0 - _0x204608.min.y + _0x204608.max.y,
                _0x4ab32e = ((_0x1f871a, _0x4b3541, _0x33229a, _0x520514, _0x3cfa61, _0x37553a, _0x29435f) => {
            const _0x4d70bc = Math.cos(_0x1f871a),
                  _0x542e8a = Math.sin(_0x1f871a);

            return [[(_0x520514 -= _0x4b3541) * _0x4d70bc - (_0x3cfa61 -= _0x33229a) * _0x542e8a + _0x4b3541, _0x520514 * _0x542e8a + _0x3cfa61 * _0x4d70bc + _0x33229a], [(_0x520514 + _0x37553a) * _0x4d70bc - _0x3cfa61 * _0x542e8a + _0x4b3541, (_0x520514 + _0x37553a) * _0x542e8a + _0x3cfa61 * _0x4d70bc + _0x33229a], [(_0x520514 + _0x37553a) * _0x4d70bc - (_0x3cfa61 + _0x29435f) * _0x542e8a + _0x4b3541, (_0x520514 + _0x37553a) * _0x542e8a + (_0x3cfa61 + _0x29435f) * _0x4d70bc + _0x33229a], [_0x520514 * _0x4d70bc - (_0x3cfa61 + _0x29435f) * _0x542e8a + _0x4b3541, _0x520514 * _0x542e8a + (_0x3cfa61 + _0x29435f) * _0x4d70bc + _0x33229a]];
          })((_0x22230d.z + 0xb4) * Math.PI / 0xb4, _0x5ba39d.position.x, _0x5ba39d.position.y, _0x5ba39d.position.x - _0x204608.max.x, _0x5ba39d.position.y - _0x204608.max.y, _0x1466e9, _0xde4a9e);

          return {
            'front': {
              'x': _0x4ab32e[0x0][0x0] + (_0x4ab32e[0x1][0x0] - _0x4ab32e[0x0][0x0]) / 0x2,
              'y': _0x4ab32e[0x0][0x1] + (_0x4ab32e[0x1][0x1] - _0x4ab32e[0x0][0x1]) / 0x2
            },
            'back': {
              'x': _0x4ab32e[0x2][0x0] + (_0x4ab32e[0x3][0x0] - _0x4ab32e[0x2][0x0]) / 0x2,
              'y': _0x4ab32e[0x2][0x1] + (_0x4ab32e[0x3][0x1] - _0x4ab32e[0x2][0x1]) / 0x2
            },
            'center': {
              'x': _0x5ba39d.position.x,
              'y': _0x5ba39d.position.y
            },
            'size': {
              'lengthX': _0x1466e9,
              'lengthY': _0xde4a9e,
              'min': {
                'x': _0x204608.min.x,
                'y': _0x204608.min.y
              },
              'max': {
                'x': _0x204608.max.x,
                'y': _0x204608.max.y
              },
              'z': _0x204608.min.z
            }
          };
        };

        _0x22b08a.events.add('render', () => {
          if (_0x4563a5.playerPushingStarted && _0x4563a5.currentVehicle) {
            const _0x5031f2 = _0x4563a5.currentVehicle;
            if (!_0x22b08a.vehicles.exists(_0x5031f2) || _0x59fd56.api.hasAnyPassenger(_0x5031f2) || null != _0x3a7c7c.getVariable('playerInTrunk') || !_0x5031f2.isOnAllWheels() || _0x5031f2.hasCollidedWithAnything() || !_0x3a7c7c.isAttachedTo(_0x5031f2.handle) || _0x3a7c7c.isDead() || Math.abs(_0x3a7c7c.position.z - _0x22b08a.game.gameplay.getGroundZFor3dCoord(_0x3a7c7c.position.x, _0x3a7c7c.position.y, _0x3a7c7c.position.z, 0x0, false)) > 0x2 || _0x59fd56.api.vdist2(_0x3a7c7c.position, _0x5031f2.position, true) > 0x5) return _0x2b239c();
            _0x3a7c7c.isPlayingAnim('missfinale_c2ig_11', 'pushcar_offcliff_m', 0x3) || _0x59fd56.api.taskPlayAnim('missfinale_c2ig_11', 'pushcar_offcliff_m', 0x21, true, false, false, false), _0x22b08a.game.controls.disableControlAction(0x0, 0x16, true), _0x22b08a.game.controls.disableControlAction(0x0, 0x18, true), _0x59fd56.api.displayHelpStringTrans('displayHelpString.toStopPusing', false, false, -0x1), _0x22b08a.game.controls.isControlPressed(0x0, 0x3f) && _0x4ee3be.AllowVehicleSteering && _0x3a7c7c.taskVehicleTempAction(_0x5031f2.handle, 0xb, 0x1f4), _0x22b08a.game.controls.isControlPressed(0x0, 0x40) && _0x4ee3be.AllowVehicleSteering && _0x3a7c7c.taskVehicleTempAction(_0x5031f2.handle, 0xa, 0x1f4), _0x5031f2.hasCollidedWithAnything() && _0x5031f2.setOnGroundProperly(), _0x5031f2.isInFront ? _0x5031f2.setForwardSpeed(-0x1) : _0x5031f2.setForwardSpeed(0x1);
          }
        });

        const _0x2b239c = () => {
          _0x4563a5.currentVehicle && _0x22b08a.events.callRemote('849495991', _0x4563a5.currentVehicle.remoteId, false), _0x4563a5.playerPushing = false, _0x4563a5.playerPushingStarted = false, _0x4563a5.currentVehicle = null, _0x3a7c7c.detach(true, false), _0x3a7c7c.stopAnimTask('missfinale_c2ig_11', 'pushcar_offcliff_m', 0x2), _0x3a7c7c.freezePosition(false), _0x59fd56.api.usingSystemAnim(false);
        };

        _0x22b08a.events.add('keys.e', () => {
          _0x4563a5.playerPushing && _0x4563a5.playerPushingStarted && _0x2b239c();
        });
      },
      0x9c77: (_0x481ec6, _0xdd16de, _0x13bc7d) => {
        'use strict';

        const a0_0x37f53c = {
          _0x1908fd: 0x235b
        },
              a0_0x41b866 = {
          _0x41c91a: 0x1a3
        },
              a0_0x13566f = {
          _0x438f0e: 0x4b9,
          _0x282ec2: 0x4b9,
          _0x2d6ac7: 0x535,
          _0x4aebfd: 0x1613,
          _0x453c88: 0x6da,
          _0x3158ec: 0xe0e,
          _0x4b1a4f: 0xc79,
          _0x34af7b: 0x163e,
          _0x2dcb13: 0x2001,
          _0x4a08cd: 0x1d66,
          _0x5b3ec4: 0x1d57,
          _0xeb7cfe: 0x2530,
          _0x35a9f4: 0x1d66,
          _0x41a0c2: 0x23b9,
          _0x201e22: 0x4b9,
          _0x2f8449: 0x2530,
          _0xb70942: 0xb55,
          _0x596263: 0x1667,
          _0x3f2a4b: 0x1667,
          _0x5ae9fa: 0x1d66,
          _0x2ac39f: 0xf2f,
          _0x5b77f8: 0x4b9
        };

        _0x13bc7d.r(_0xdd16de);

        var _0x496741 = _0x13bc7d(0x16a21),
            _0x37c42f = _0x13bc7d(0xb2e6),
            _0x25a11a = _0x13bc7d(0x161cd);

        const _0x25e59b = _0x25a11a.players.local;

        let _0x2f1fe1,
            _0x3ba846 = false,
            _0xa1045e = false;

        _0x25a11a.events.add('startRadioSyncCheck', () => {
          _0x2f1fe1 = true;
        }), _0x25a11a.events.add('stopRadioSyncCheck', () => {
          _0x2f1fe1 = false, _0x3ba846 = false, _0xa1045e = false;
        }), _0x25a11a.events.add('time.everySec', () => {
          _0x2f1fe1 && (() => {
            if (_0x25e59b.vehicle && _0x25a11a.vehicles.exists(_0x25e59b.vehicle)) {
              const _0x1ce1eb = _0x496741.api.getVehicleRadio(_0x25e59b.vehicle);

              let _0x8d5ccc = _0x496741.api.getEntitySync(_0x25e59b.vehicle, 'radio', 'number');

              _0x1ce1eb > 0x0 && (_0x8d5ccc = 0xff, _0x3ba846 = false), null == _0x8d5ccc && (_0x8d5ccc = 0xff), _0x3ba846 || (_0x22e8ae(_0x25e59b.vehicle, _0x8d5ccc), _0x3ba846 = !_0x3ba846);

              const _0x2de9ec = _0x25a11a.game.audio.getPlayerRadioStationIndex(),
                    _0x3a60d5 = _0x25a11a.game.audio.getRadioStationName(_0x2de9ec);

              _0x25e59b.vehicle.getPedInSeat(_0x496741.api.getVehSeat(-0x1)) === _0x25e59b.handle ? (_0xa1045e && (_0xa1045e = false), _0x8d5ccc != _0x2de9ec && (_0x25a11a.events.callRemote('2026464725', _0x25e59b.vehicle.remoteId, _0x2de9ec), _0x25a11a.game.audio.setVehRadioStation(_0x25e59b.vehicle.handle, _0x3a60d5), _0x25a11a.game.audio.setVehicleRadioLoud(_0x25e59b.vehicle.handle, 0xff !== _0x2de9ec))) : (_0xa1045e || (_0xa1045e = true), 0xff == _0x8d5ccc ? (_0x25a11a.game.audio.setRadioToStationName('OFF'), _0x25a11a.game.audio.setVehRadioStation(_0x25e59b.vehicle.handle, 'OFF'), _0x25a11a.game.audio.setVehicleRadioLoud(_0x25e59b.vehicle.handle, false)) : _0x8d5ccc != _0x2de9ec && _0x22e8ae(_0x25e59b.vehicle, _0x8d5ccc));
            }
          })(), _0x25e59b.currentCustomRadio && !_0x25e59b.vehicle && _0x31c991();
        });

        const _0x22e8ae = (_0x3e4161, _0x56b740) => {
          const _0x102148 = _0x25a11a.game.audio.getRadioStationName(_0x56b740);

          _0x25a11a.vehicles.exists(_0x3e4161) && _0x25e59b.vehicle && _0x3e4161.handle === _0x25e59b.vehicle.handle ? 0xff == _0x56b740 ? (_0x25a11a.game.audio.setRadioToStationName('OFF'), _0x25a11a.game.audio.setVehicleRadioLoud(_0x3e4161.handle, false)) : (_0x25a11a.game.audio.setFrontendRadioActive(true), _0x25a11a.game.audio.setRadioToStationIndex(_0x56b740), _0x25a11a.game.audio.setVehRadioStation(_0x3e4161.handle, _0x102148), _0x25a11a.game.audio.setVehicleRadioLoud(_0x3e4161.handle, true)) : (_0x25a11a.game.audio.setVehRadioStation(_0x3e4161.handle, _0x102148), _0x25a11a.game.audio.setVehicleRadioLoud(_0x3e4161.handle, 0xff !== _0x56b740));
        };

        _0x25a11a.events.add('setVehRadio', (_0x5d5775, _0x3459f0) => _0x22e8ae(_0x5d5775, _0x3459f0));

        const _0x17e4b8 = _0x412219 => {
          const _0x520d25 = _0x496741.api.getRadioURL(_0x412219);

          _0x520d25 && (_0x37c42f.P.emit('play2DRadio', {
            'url': _0x520d25,
            'volume': _0x496741.api.getSoundVolume('radioSoundVol', 0x32)
          }), _0x25e59b.currentCustomRadio = true);
        },
              _0x31c991 = () => {
          _0x37c42f.P.emit('stop2DRadio'), _0x25e59b.currentCustomRadio = false;
        };

        _0x25a11a.events.add('render', () => {
          _0xa1045e && (_0x25a11a.game.controls.disableControlAction(0x2, 0x51, true), _0x25a11a.game.controls.disableControlAction(0x2, 0x52, true), _0x25a11a.game.controls.disableControlAction(0x2, 0x55, true));
        }), _0x25a11a.events.add('onPlayerEnterVehicle', (_0x2eda58, _0xcb495f) => {
          if (!_0x25e59b.vehicle) return;

          const _0x2c4077 = _0x496741.api.getVehicleRadio(_0x25e59b.vehicle);

          _0x17e4b8(_0x2c4077);
        }), _0x25a11a.events.add('playerLeaveVehicle', _0x5ac867 => {
          _0x31c991();
        }), _0x25a11a.events.add('playerDeath2', _0x32f53f => {
          _0x32f53f === _0x25a11a.players.local && _0x31c991();
        }), _0x25a11a.events.add('setCustomRadio', (_0x4d2663, _0x56f60c) => {
          _0x25a11a.vehicles.exists(_0x4d2663) && 'vehicle' === _0x4d2663.type && _0x25e59b.vehicle && _0x4d2663 == _0x25e59b.vehicle && (_0x56f60c ? _0x17e4b8(_0x56f60c) : _0x31c991());
        });
      },
      0x183ce: (_0x4a9ffc, _0x156788, _0xcb14c6) => {
        'use strict';

        const a0_0x433c04 = {
          _0x48bc53: 0x2530,
          _0x66a42a: 0x4b9,
          _0x4f94d1: 0x1e4a,
          _0x254dc0: 0x2530,
          _0x429090: 0x2340,
          _0x189189: 0x126a,
          _0x47c798: 0x1cf5,
          _0x538db0: 0x12da
        };

        _0xcb14c6.r(_0x156788);

        var _0x1a06d4 = _0xcb14c6(0x16a21),
            _0x1c9f7f = _0xcb14c6(0x161cd);

        const _0x273038 = _0x1c9f7f.players.local,
              _0x5b1524 = [{
          'bone': 'seat_dside_f',
          'seat': -0x1
        }, {
          'bone': 'seat_pside_f',
          'seat': 0x0
        }, {
          'bone': 'seat_dside_r',
          'seat': 0x1
        }, {
          'bone': 'seat_pside_r',
          'seat': 0x2
        }, {
          'bone': 'seat_dside_r1',
          'seat': 0x3
        }, {
          'bone': 'seat_pside_r1',
          'seat': 0x4
        }, {
          'bone': 'seat_pside_r2',
          'seat': 0x5
        }, {
          'bone': 'seat_dside_r2',
          'seat': 0x6
        }, {
          'bone': 'seat_dside_r3',
          'seat': 0x7
        }, {
          'bone': 'seat_pside_r3',
          'seat': 0x8
        }, {
          'bone': 'seat_dside_r4',
          'seat': 0x9
        }, {
          'bone': 'seat_pside_r4',
          'seat': 0xa
        }, {
          'bone': 'seat_dside_r5',
          'seat': 0xb
        }, {
          'bone': 'seat_pside_r5',
          'seat': 0xc
        }, {
          'bone': 'seat_dside_r6',
          'seat': 0xd
        }, {
          'bone': 'seat_pside_r6',
          'seat': 0xe
        }, {
          'bone': 'seat_dside_r7',
          'seat': 0xf
        }, {
          'bone': 'seat_pside_r7',
          'seat': 0x10
        }];
        _0x1c9f7f.game.controls.useDefaultVehicleEntering = false;
        let _0x318b6c = false;
        _0x1c9f7f.events.add('playerEnterVehicle', () => {
          _0x318b6c = true;
        }), _0x1c9f7f.events.add('onPlayerEnterVehicle', () => {
          _0x318b6c = false;
        }), _0x1c9f7f.events.add('playerLeaveVehicle', (_0x1035bd, _0x5c0d9a) => {
          if (_0x318b6c = false, _0x1035bd && _0x1035bd.handle && _0x1c9f7f.game.vehicle.doesAllowRappel(_0x1035bd.handle) && _0x1035bd.getSpeed() < 0xa && _0x5c0d9a > 0x0) {
            const _0x25b8d9 = _0x273038.getScriptTaskStatus(-0x107294c0);

            if (0x0 === _0x25b8d9 || 0x1 === _0x25b8d9) return;

            const _0x554fb9 = _0x1035bd.getHeightAboveGround();

            if (_0x554fb9 < 0xf || _0x554fb9 > 0x2d) return;
            if (!_0x1035bd.isUpright(0xf) || _0x1035bd.isUpsidedown()) return;
            _0x273038.clearTasks(), _0x273038.taskRappelFromHeli(0xa);
          }
        }), _0x1c9f7f.events.add('render', async () => {
          if (_0x1c9f7f.game.controls.disableControlAction(0x0, 0x17, true), !(!_0x1a06d4.api.isAuthed() || _0xcb14c6.g.interfaces.chat || _0xcb14c6.g.interfaces.adminReport || _0xcb14c6.g.interfaces.panelMenu || _0xcb14c6.g.buttonPress || _0x1a06d4.api.isUsingSystemAnim() || _0xcb14c6.g.isUsingTABAnim || _0x1a06d4.api.getLocalVariable('handItem')) && (_0x1a06d4.api.isCuffed(_0x273038) && _0x1c9f7f.game.controls.disableControlAction(0x0, 0x4b, true), _0x1c9f7f.game.controls.isDisabledControlJustPressed(0x0, 0x17))) {
            if (_0x273038.vehicle || _0x273038.isDead() || _0x273038.getVariable('playerInTrunk') || _0x1a06d4.api.isCuffed(_0x273038) || _0x1a06d4.api.isTied(_0x273038) || _0x1a06d4.api.isTiedHands(_0x273038) || _0xcb14c6.g.isUsingMetro || _0x273038.isFalling()) return;
            if (0x7 !== _0x273038.getScriptTaskStatus(0x950b6492)) return _0x273038.clearTasks(), void (_0x318b6c = false);

            const _0x5a3c5e = _0x1a06d4.api.getClosestVehicle(0xa);

            if (!_0x1c9f7f.vehicles.exists(_0x5a3c5e)) return;
            if (_0x1a06d4.api.vdist2(_0x273038.position, _0x5a3c5e.position) > 2.5 && !_0x273038.hasClearLosTo(_0x5a3c5e.handle, 0x11)) return;

            let _0xf0d883 = _0x30d900(_0x5a3c5e);

            if (!_0x5a3c5e.isSeatFree(_0xf0d883)) {
              for (let _0x508020 = -0x1; _0x508020 <= 0x6; _0x508020++) _0x5a3c5e.isSeatFree(_0x508020) && (_0xf0d883 = _0x508020);
            }

            0x0 === _0xf0d883 && _0x5a3c5e.isSeatFree(-0x1) && (_0xf0d883 = -0x1), _0xf0d883 < 0x5 ? _0x273038.isRunning() ? _0x273038.taskEnterVehicle(_0x5a3c5e.handle, -0x1, _0xf0d883, 0x2, 0x1, 0x0) : _0x273038.taskEnterVehicle(_0x5a3c5e.handle, -0x1, _0xf0d883, 1.5, 0x1, 0x0) : _0x1a06d4.api.getEntitySync(_0x5a3c5e, 'locked', 'boolean') || _0x273038.taskWarpIntoVehicle(_0x5a3c5e.handle, _0xf0d883);
          }
        });

        const _0x30d900 = _0x1e30b7 => {
          let _0x4e7fc6 = '',
              _0x3a208f = 0x64;

          for (const {
            bone: _0x198a5e,
            seat: _0x23f883
          } of _0x5b1524) {
            if (-0x1 != _0x1e30b7.getBoneIndexByName(_0x198a5e)) {
              const _0x4bd3ee = _0x1c9f7f.game.vehicle.getEntryPositionOfDoor(_0x1e30b7.handle, _0x23f883 + 0x1),
                    _0x1e12f4 = _0x273038.position,
                    _0xb31cd8 = _0x1a06d4.api.vdist2(_0x4bd3ee, _0x1e12f4, true);

              _0xb31cd8 < _0x3a208f && (_0x3a208f = _0xb31cd8, _0x4e7fc6 = _0x23f883);
            }
          }

          return _0x3a208f <= 0xa ? _0x4e7fc6 : -0x1;
        };
      },
      0xd698: (_0x56c512, _0xe502f5, _0x336091) => {
        'use strict';

        const a0_0xdede0c = {
          _0x40c2a9: 0x13a5,
          _0x1de338: 0x535,
          _0x35ceef: 0xf71,
          _0x2d9850: 0x2c3,
          _0x338877: 0x1d66,
          _0x1b39a5: 0x1f1e,
          _0x24455f: 0x163e,
          _0x5d2067: 0x2530,
          _0x26a11a: 0x133c,
          _0x2b5a30: 0x2530
        },
              a0_0x46ce7c = {
          _0x1aa96b: 0x1a5
        },
              a0_0x39aa9e = {
          _0x5069df: 0x14d2,
          _0x38bde5: 0x535,
          _0x14742f: 0x1c92,
          _0x3a9ccc: 0x812,
          _0x2b1bb2: 0x1725,
          _0x1b6ddb: 0x14d2,
          _0x1a4f27: 0x4b9,
          _0x4412d7: 0x1c43,
          _0x232f1a: 0x13a5,
          _0x5aa8ed: 0x130b,
          _0x3d733e: 0x1223
        };

        _0x336091.r(_0xe502f5);

        var _0x298b70 = _0x336091(0x16a21),
            _0x46e4fb = (_0x336091(0x6fe0), _0x336091(0x161cd));

        const _0x86a058 = _0x46e4fb.players.local;
        _0x336091.g.isSeatbeltActive = false, _0x46e4fb.events.add('seatbelt.toggle', () => {
          _0x336091.g.isSeatbeltActive ? (_0x46e4fb.events.call('seatbelt.takeoff'), _0x298b70.api.notifyTrans('vehicle.seatbeltOff', {
            'type': 'seatbelt',
            'iconColor': 'error'
          }), _0x46e4fb.events.callRemote('3061348669', false)) : _0x86a058.vehicle && ![0x8, 0xd, 0xe, 0xf, 0x15].includes(_0x86a058.vehicle.getClass()) && (_0x86a058.setConfigFlag(0x20, false), _0x336091.g.isSeatbeltActive = true, _0x298b70.api.notifyTrans('vehicle.seatbeltOn', {
            'type': 'seatbelt',
            'iconColor': 'success'
          }), _0x46e4fb.events.callRemote('3061348669', true));
        }), _0x46e4fb.events.add('seatbelt.takeoff', () => {
          _0x86a058.setConfigFlag(0x20, true), _0x336091.g.isSeatbeltActive = false;
        }), _0x46e4fb.events.add('playerLeaveVehicle', () => {
          _0x46e4fb.events.call('seatbelt.takeoff');
        }), _0x46e4fb.events.add('keys.j', () => {
          !_0x86a058.vehicle || _0x336091.g.interfaces.chat || _0x336091.g.interfaces.adminReport || _0x336091.g.interfaces.iphone || _0x298b70.api.isCuffed(_0x86a058) || _0x86a058.isDead() || !_0x46e4fb.game.vehicle.isThisModelABicycle(_0x86a058.vehicle.model) && 3.6 * _0x86a058.vehicle.getSpeed() < 0x190 && !_0x46e4fb.game.vehicle.isThisModelABike(_0x86a058.vehicle.model) && _0x46e4fb.events.call('seatbelt.toggle');
        }), _0x46e4fb.events.add('time.everySec', () => {
          const _0x2e3ab4 = _0x86a058.vehicle;
          _0x2e3ab4 && _0x336091.g.isSeatbeltActive && 3.6 * _0x2e3ab4.getSpeed() > 0x15e && _0x86a058.setConfigFlag(0x20, true), _0x2e3ab4 && !_0x336091.g.isSeatbeltActive && _0x298b70.api.getPlayerSetting('seatbeltWarn') && _0x46e4fb.game.vehicle.isThisModelACar(_0x2e3ab4.model) && (_0x2e3ab4.getPedInSeat(_0x298b70.api.getVehSeat(-0x1)) == _0x86a058.handle || _0x2e3ab4.getPedInSeat(_0x298b70.api.getVehSeat(0x0)) == _0x86a058.handle) && 3.6 * _0x2e3ab4.getSpeed() > 0x3c && _0x298b70.api.playSound('seatbelt_warning', {
            'volume': 0xa
          });
        });
      },
      0xc296: (_0x466595, _0x28fd76, _0x10c503) => {
        'use strict';

        const a0_0x153cc8 = {
          _0xf3001f: 0x4b9
        },
              a0_0x22020a = {
          _0xea771d: 0x4b9,
          _0x1149c9: 0x4b9
        },
              a0_0x4072cd = {
          _0xcdea4c: 0x2379,
          _0x30a756: 0x1d66,
          _0x3c9bff: 0x4b9,
          _0x24ea18: 0xb72,
          _0x52152d: 0x1b9d,
          _0x2e7dc6: 0x96e,
          _0x2ea97d: 0x4b9,
          _0x247b39: 0x1d66,
          _0x32b38c: 0x2379,
          _0x3b9173: 0x4b9,
          _0x254dbe: 0x4b9,
          _0x26f713: 0x1d66,
          _0x34addc: 0x21f1,
          _0x380645: 0xc91,
          _0x19d692: 0x2379,
          _0x2818c4: 0xe3e,
          _0x4d5ab4: 0x2379,
          _0x3afdc6: 0x24b1,
          _0xba289a: 0x1d4f
        };

        _0x10c503.r(_0x28fd76);

        var _0x526a29 = _0x10c503(0x580a),
            _0x9dd034 = _0x10c503(0x9555),
            _0x149731 = _0x10c503(0x161cd);

        const _0x4b1a45 = _0x149731.players.local;
        let _0x1c2bf4 = false;
        _0x149731.events.add('time.every05Sec', () => {
          if (_0x4b1a45.vehicle) switch (_0x4b1a45.vehicle.model) {
            case _0x149731.game.joaat('boxville2'):
            case _0x149731.game.joaat('boxville4'):
              3.6 * _0x4b1a45.vehicle.getSpeed() > 0x73 && !_0x4b1a45.vehicle.isInAir() && _0x4b1a45.vehicle.setForwardSpeed(0x20);
              break;

            case _0x149731.game.joaat('stockade'):
              3.6 * _0x4b1a45.vehicle.getSpeed() > 0x87 && !_0x4b1a45.vehicle.isInAir() && _0x4b1a45.vehicle.setForwardSpeed(37.5);
              break;

            case _0x149731.game.joaat('trash'):
              3.6 * _0x4b1a45.vehicle.getSpeed() > 0x9b && !_0x4b1a45.vehicle.isInAir() && _0x4b1a45.vehicle.setForwardSpeed(0x2b);
              break;

            case _0x149731.game.joaat('bmx'):
            case _0x149731.game.joaat('cruiser'):
            case _0x149731.game.joaat('fixter'):
            case _0x149731.game.joaat('scorcher'):
            case _0x149731.game.joaat('tribike'):
            case _0x149731.game.joaat('tribike2'):
            case _0x149731.game.joaat('tribike3'):
              3.6 * _0x4b1a45.vehicle.getSpeed() > 0x32 ? _0x1c2bf4 = true : _0x1c2bf4 && (_0x1c2bf4 = false);
          } else _0x1c2bf4 && (_0x1c2bf4 = false);
        }), _0x149731.events.add('render', () => {
          _0x1c2bf4 && _0x149731.game.controls.disableControlAction(0x0, 0x66, true);
        }), _0x149731.events.add('onPlayerEnterVehicle', (_0x123129, _0x1b2014) => {
          if (!_0x1b2014) return;
          const _0x549086 = _0x4b1a45.vehicle;
          _0x549086 && _0x549086.remoteId == _0x123129 && _0x5a89fc(_0x549086);
        }), _0x149731.events.add('playerEnterVehicle', (_0x42e5e3, _0x4d374b) => {
          if (!_0x4d374b) return;
          const _0x2edbf6 = _0x4b1a45.vehicle;
          _0x2edbf6 && _0x2edbf6.remoteId == _0x42e5e3 && _0x5a89fc(_0x2edbf6);
        }), _0x149731.events.add('time.every5Sec', () => {
          _0x4b1a45.vehicle && _0x4b1a45.vehicle.remoteId && _0x5a89fc(_0x4b1a45.vehicle);
        }), _0x149731.events.add('speedlimiter.startProcess', () => {
          _0x5a89fc(_0x4b1a45.vehicle);
        });

        const _0x5a89fc = _0x82fbe3 => {
          if (!_0x149731.vehicles.exists(_0x82fbe3)) return;
          if (_0x9dd034.greenZoneController.zoneLimit > 0x0) return;

          const _0x2b473d = _0x526a29.Z.find(_0x33b653 => _0x33b653.model === _0x82fbe3.model);

          if (!_0x2b473d) return;
          let _0x9e717f = _0x2b473d.limit,
              _0x515213 = 0x0;

          switch (_0x82fbe3.getMod(0xb)) {
            case 0x0:
              _0x9e717f += 0x5, _0x515213 += 0x2;
              break;

            case 0x1:
              _0x9e717f += 0xa, _0x515213 += 0x3;
              break;

            case 0x2:
              _0x9e717f += 0xf, _0x515213 += 0x4;
              break;

            case 0x3:
              _0x9e717f += 0x14, _0x515213 += 0x5;
              break;

            case 0x4:
              _0x9e717f += 0x19, _0x515213 += 0x6;
              break;

            case 0x5:
              _0x9e717f += 0x1e, _0x515213 += 0x7;
              break;

            case 0x6:
              _0x9e717f += 0x23, _0x515213 += 0x8;
              break;

            case 0x7:
              _0x9e717f += 0x28, _0x515213 += 0x9;
          }

          switch (_0x82fbe3.getMod(0xd)) {
            case 0x0:
              _0x9e717f += 0x4, _0x515213 += 0x2;
              break;

            case 0x1:
              _0x9e717f += 0x8, _0x515213 += 0x3;
              break;

            case 0x2:
              _0x9e717f += 0xc, _0x515213 += 0x4;
              break;

            case 0x3:
              _0x9e717f += 0x10, _0x515213 += 0x4;
              break;

            case 0x4:
              _0x9e717f += 0x14, _0x515213 += 0x4;
              break;

            case 0x5:
              _0x9e717f += 0x18, _0x515213 += 0x4;
          }

          if (0x0 === _0x82fbe3.getMod(0x12)) _0x9e717f += 0x2, _0x515213 += 0x1;

          _0x82fbe3.setMaxSpeed(_0x9e717f / 3.6);
        };
      },
      0x4d1b: (_0x47ca1c, _0x24f605, _0x417da3) => {
        'use strict';

        const a0_0x351660 = {
          _0x1a3d32: 0x2ab,
          _0x2be3dd: 0x2ab,
          _0x260491: 0x12e0,
          _0x18456e: 0x2231
        },
              a0_0x34fd32 = {
          _0x10de1b: 0x1820
        },
              a0_0x360c47 = {
          _0xaa93aa: 0x16c5
        },
              a0_0x480854 = {
          _0x377604: 0xb3d,
          _0x432fc9: 0x2379
        },
              a0_0x53af90 = {
          _0x447928: 0x1820,
          _0x5070cb: 0x2530,
          _0x18833b: 0xb3d,
          _0x16ab97: 0x535,
          _0x2c60a9: 0x2379,
          _0x1f00d5: 0xb3d
        },
              a0_0x53eec4 = {
          _0x5cc76e: 0x2ab,
          _0xbbd3b8: 0x535,
          _0x4f768a: 0x1f30,
          _0x2db3f6: 0x1f30,
          _0xb024b0: 0xf82,
          _0x1329e7: 0x1d66,
          _0x1fc80b: 0x10f6,
          _0x59d267: 0x2530,
          _0x517895: 0x1870,
          _0x3fb593: 0x1820,
          _0x18fb64: 0x16c5,
          _0xae04a0: 0x17f,
          _0x2e4505: 0x2231,
          _0x52c3ca: 0x220f,
          _0xa8c990: 0x17f
        },
              a0_0x1189c4 = {
          _0x3d9ba9: 0x1820,
          _0x20afd2: 0x16c5,
          _0x3cdd81: 0xb3d,
          _0x53b3f0: 0x454,
          _0x505652: 0x14d2,
          _0x4b3a1f: 0x128c,
          _0x1faf2b: 0xb3d,
          _0x21f513: 0x1e12,
          _0x56bee9: 0x1da5,
          _0x2b9a6b: 0x2077,
          _0x1e8bbd: 0xb3d,
          _0xe12a40: 0x17b6,
          _0x28e4a6: 0x1eb0,
          _0x924602: 0x310,
          _0x3f982d: 0x535,
          _0x52c034: 0x1063
        },
              a0_0x5a8032 = {
          _0xe20783: 0x1820,
          _0x6428b9: 0x1d66,
          _0x5d52b2: 0x4b9,
          _0x3483c9: 0x13b4,
          _0x80c33d: 0x1d66,
          _0x4c3b75: 0x160e,
          _0x5a57eb: 0xb3d,
          _0x786be3: 0x160e,
          _0x533dac: 0x2038,
          _0x5cf477: 0x1608,
          _0x1335f6: 0x2e1,
          _0xe0fdf2: 0xe88,
          _0x371228: 0xb3d,
          _0x1b1c0f: 0x1e12,
          _0x208ab5: 0xe76,
          _0x4b6b75: 0x4f6,
          _0x2509c1: 0x1457,
          _0x1c7ec9: 0x17b6,
          _0x5a00f2: 0x529,
          _0x16103f: 0xb3d,
          _0x2e5a14: 0x1f93,
          _0x432ae2: 0xb3d,
          _0x2c8325: 0x18b9,
          _0x172fba: 0x21b7,
          _0x56cd08: 0x7a1,
          _0x4cfaca: 0x1935,
          _0x4d4d74: 0x22cf,
          _0x4be67d: 0x22cf,
          _0x27a082: 0x3fb,
          _0x2facbb: 0x3fb,
          _0x1898ba: 0x211c,
          _0x13045c: 0x119b,
          _0xdeb3ca: 0xb3d,
          _0x39d58f: 0x211c,
          _0x302fd3: 0x2170,
          _0x330422: 0xb5f,
          _0x512aec: 0x1a48,
          _0x5a9ddd: 0xb5f,
          _0x332246: 0x1a5,
          _0x409c52: 0x120c,
          _0x14a8e6: 0xb3d,
          _0x446f13: 0xbf3,
          _0x5de71b: 0x1b41,
          _0x360cea: 0x1a5,
          _0xb71aa5: 0x1b41,
          _0x594539: 0x1eb4,
          _0x224e19: 0x1016,
          _0x2b3e15: 0x535,
          _0x269271: 0x1985,
          _0x562027: 0x2530,
          _0x264bef: 0x19d9,
          _0x3209fa: 0x19d9,
          _0x4a1bfd: 0x1613,
          _0x1bdf47: 0x14d2,
          _0x5cd664: 0x1a5,
          _0xb615cd: 0x182d,
          _0x5aa79c: 0x14d2,
          _0x125c37: 0x1d7c,
          _0x4789f4: 0xb3d,
          _0xaef2a5: 0x1d7c,
          _0x16349d: 0xb13,
          _0x3ce4eb: 0x1450,
          _0x38f89c: 0x2b1,
          _0x22a1d4: 0x4b9,
          _0x4044b2: 0x2b1,
          _0x16717c: 0xb76,
          _0x43fa54: 0x1150,
          _0x25f53a: 0x1150,
          _0x30488a: 0x25b9,
          _0x451709: 0x2530,
          _0x528649: 0xb3d,
          _0x9b0ee8: 0xb3d,
          _0x267e12: 0xcbe,
          _0x4a3092: 0x1c5c,
          _0x54e47c: 0x255a,
          _0x497bcb: 0x3aa,
          _0x4885f1: 0x6da,
          _0x2b6cd6: 0x1e8e
        },
              a0_0x43bcfb = {
          _0x20dce2: 0x1820,
          _0x59b25f: 0x16c5,
          _0x3ab79f: 0x19d2,
          _0x54190b: 0x2530,
          _0x21adc1: 0x258d,
          _0x1408d8: 0x2400,
          _0x471f98: 0x2323,
          _0x2345dd: 0x14b4,
          _0x325582: 0x16cb,
          _0x5498b6: 0x535,
          _0x519690: 0x1063
        },
              a0_0x54e463 = {
          _0x3ce4ab: 0x1da5,
          _0x49786c: 0x19eb,
          _0x556811: 0x112d,
          _0x3a994b: 0x2ae
        },
              a0_0x3f504b = {
          _0x1e505c: 0x6cf,
          _0x8cf0b3: 0x1d55,
          _0x38658f: 0x1d55,
          _0x2e697b: 0x20d4,
          _0x3350bc: 0x136b,
          _0x5566f2: 0x1d55,
          _0x40b9fa: 0x1d55,
          _0x2aa1e9: 0x14b4,
          _0x194842: 0xe03,
          _0x353bec: 0x925,
          _0x33bc5d: 0x16a3,
          _0x314d8e: 0x1d55
        },
              a0_0x633482 = {
          _0x3ba91d: 0x1d66,
          _0xabb002: 0x185e,
          _0x429474: 0x258d,
          _0x5a47cb: 0x14d2,
          _0x60a00b: 0x1da5,
          _0x585077: 0x82d
        },
              a0_0xd299b9 = {
          _0x303f9e: 0x1d66,
          _0x429b4c: 0x2379,
          _0x33d220: 0x1d7c,
          _0x706245: 0x1d7c,
          _0x334d78: 0x535
        },
              a0_0x270d14 = {
          _0x50c995: 0x1820,
          _0x225789: 0x16c5,
          _0x2f860c: 0x258d,
          _0x570ae0: 0x16cb,
          _0x5ea3ea: 0x535,
          _0xebea33: 0x1063
        };

        _0x417da3.r(_0x24f605);

        var _0x16e6a0 = _0x417da3(0x16a21),
            _0x2cd77 = _0x417da3(0x1659b),
            _0x3ae036 = _0x417da3(0x66f9),
            _0x14ffc3 = _0x417da3(0x161cd);

        _0x14ffc3.vehicleAttachments = {
          'attachments': {},
          'addFor': async function (_0x4b17b5, _0x2c9696) {
            if (_0x14ffc3.vehicles.exists(_0x4b17b5) && this.attachments) try {
              if (_0x2c9696 in this.attachments) {
                if (_0x4b17b5.__attachmentObjects || (_0x4b17b5.__attachmentObjects = {}), !(_0x2c9696 in _0x4b17b5.__attachmentObjects)) {
                  let _0x5644c9,
                      _0x40996f = this.attachments[_0x2c9696],
                      _0x3ba2b3 = await (0x0, _0x3ae036.n)(_0x40996f.model, _0x4b17b5.position, {
                    'dimension': -0x1
                  });

                  _0x5644c9 = _0x40996f.isBoneId ? _0x40996f.boneName : 'string' == typeof _0x40996f.boneName ? _0x4b17b5.getBoneIndexByName(_0x40996f.boneName) : _0x4b17b5.getBoneIndex(_0x40996f.boneName), _0x3ba2b3.setCollision(false, false), _0x3ba2b3.attachTo(_0x4b17b5.handle, _0x5644c9, _0x40996f.offset.x, _0x40996f.offset.y, _0x40996f.offset.z, _0x40996f.rotation.x, _0x40996f.rotation.y, _0x40996f.rotation.z, false, false, false, false, 0x2, _0x40996f.fixedRot), _0x4b17b5.__attachmentObjects[_0x2c9696] = _0x3ba2b3;
                }
              } else _0x14ffc3.game.graphics.notify('Static Veh Attachments Error: ~r~Unknown Attachment Used: ~w~0x' + _0x2c9696.toString(0x10));
            } catch (_0x481efc) {
              _0x16e6a0.api.sendError(_0x481efc);
            }
          },
          'removeFor': function (_0x16af96, _0x5b4d01) {
            if (_0x14ffc3.vehicles.exists(_0x16af96)) try {
              if (_0x16af96.__attachmentObjects && _0x5b4d01 in _0x16af96.__attachmentObjects) {
                let _0x5a8fd1 = _0x16af96.__attachmentObjects[_0x5b4d01];
                delete _0x16af96.__attachmentObjects[_0x5b4d01], _0x14ffc3.objects.exists(_0x5a8fd1) ? _0x5a8fd1.destroy() : _0x5a8fd1 && _0x5a8fd1.handle && (_0x14ffc3.game.entity.detach(_0x5a8fd1.handle, true, true), _0x14ffc3.game.entity.setCoords(_0x5a8fd1.handle, 0x270f, 0x270f, 0x270f, false, false, false, true), _0x14ffc3.game.entity.setAlpha(_0x5a8fd1.handle, 0x0, 0x0));
              }

              _0x16af96.__attachmentObjects || (_0x16af96.__attachmentObjects = {});
            } catch (_0x4f549b) {
              _0x16e6a0.api.sendError(_0x4f549b);
            }
          },
          'initFor': function (_0x1ea541) {
            if (_0x14ffc3.vehicles.exists(_0x1ea541)) try {
              for (let _0x20cfbd of _0x1ea541.__attachments) _0x14ffc3.vehicleAttachments.addFor(_0x1ea541, _0x20cfbd);
            } catch (_0x631b55) {
              _0x16e6a0.api.sendError(_0x631b55);
            }
          },
          'shutdownFor': function (_0x472d93) {
            if (_0x14ffc3.vehicles.exists(_0x472d93)) try {
              for (let _0x1e2478 in _0x472d93.__attachmentObjects) _0x14ffc3.vehicleAttachments.removeFor(_0x472d93, _0x1e2478);
            } catch (_0x4d53df) {
              _0x16e6a0.api.sendError(_0x4d53df);
            }
          },
          'register': function (_0x196240, _0x3e2bb3, _0x5ed3bc, _0x47934b, _0x378d64, _0x10e657, _0x577b2e) {
            try {
              'string' == typeof _0x196240 && (_0x196240 = _0x14ffc3.game.joaat(_0x196240)), 'string' == typeof _0x3e2bb3 && (_0x3e2bb3 = _0x14ffc3.game.joaat(_0x3e2bb3)), _0x196240 in this.attachments ? _0x14ffc3.game.graphics.notify('Static Attachments Error: ~r~Duplicate Entry') : _0x14ffc3.game.streaming.isModelInCdimage(_0x3e2bb3) ? this.attachments[_0x196240] = {
                'id': _0x196240,
                'model': _0x3e2bb3,
                'offset': _0x47934b,
                'rotation': _0x378d64,
                'boneName': _0x5ed3bc,
                'fixedRot': !!_0x10e657,
                'isBoneId': _0x577b2e
              } : _0x14ffc3.game.graphics.notify('Static Attachments Error: ~r~Invalid Model (0x' + _0x3e2bb3.toString(0x10) + ')');
            } catch (_0x553491) {
              _0x16e6a0.api.sendError(_0x553491);
            }
          },
          'unregister': function (_0x5a752f) {
            try {
              'string' == typeof _0x5a752f && (_0x5a752f = _0x14ffc3.game.joaat(_0x5a752f)), _0x5a752f in this.attachments && (this.attachments[_0x5a752f] = undefined);
            } catch (_0x568e20) {
              _0x16e6a0.api.sendError(_0x568e20);
            }
          },
          'removeLocal': function (_0x258ae3) {
            try {
              'string' == typeof _0x258ae3 && (_0x258ae3 = _0x14ffc3.game.joaat(_0x258ae3));
              let _0x1af861 = _0x14ffc3.vehicles.local;
              _0x1af861.__attachments && -0x1 !== _0x1af861.__attachments.indexOf(_0x258ae3) && _0x14ffc3.events.callRemote('3180055361', _0x258ae3.toString(0x24));
            } catch (_0x475553) {
              _0x16e6a0.api.sendError(_0x475553);
            }
          },
          'getAttachments': function () {
            try {
              return Object.assign({}, this.attachments);
            } catch (_0x4d3345) {
              _0x16e6a0.api.sendError(_0x4d3345);
            }
          }
        }, !function () {
          try {
            _0x14ffc3.vehicleAttachments.register('drone1', 'ch_prop_casino_drone_02a', 'bodyshell', new _0x14ffc3.Vector3(0x0, 0x0, 0.03), new _0x14ffc3.Vector3(0x0, 0x0, 0xb4), true), _0x14ffc3.vehicleAttachments.register('drone2', 'xs_prop_arena_drone_02', 'bodyshell', new _0x14ffc3.Vector3(0x0, 0x0, 0.03), new _0x14ffc3.Vector3(0x0, 0x0, 0xb4), true), _0x14ffc3.vehicleAttachments.register('drone3', 'xs_prop_arena_drone_01', 'bodyshell', new _0x14ffc3.Vector3(0x0, 0x0, 0.03), new _0x14ffc3.Vector3(0x0, 0x0, 0xb4), true);
          } catch (_0x238b2f) {
            _0x16e6a0.api.sendError(_0x238b2f);
          }
        }();

        var _0x37a062 = _0x417da3(0x161cd);

        const _0x59e9b1 = _0x37a062.players.local;
        let _0x3c26bf = {};

        const _0x55fa0f = (0x0, _0x2cd77.D)(() => {
          Object.keys(_0x3c26bf).length && (_0x37a062.events.callRemote('3401340139', JSON.stringify(Object.entries(_0x3c26bf))), _0x3c26bf = {});
        }, 0x1f4),
              _0x44b806 = (_0x43eb6a, _0x842113) => {
          if (!_0x37a062.vehicles.exists(_0x43eb6a)) return;

          const _0x20bbb1 = _0x37a062.game.vehicle.isThisModelAPlane(_0x43eb6a.model),
                _0x1bc599 = _0x37a062.game.vehicle.isThisModelABoat(_0x43eb6a.model);

          try {
            if ('doors' === _0x842113 || !_0x842113) {
              const _0xf76541 = _0x43eb6a.sync && _0x43eb6a.sync.doors ? _0x43eb6a.sync.doors : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];

              for (let _0x58b99a = 0x0; _0x58b99a < 0x6; _0x58b99a++) switch (_0xf76541[_0x58b99a]) {
                case 0x0:
                  _0x43eb6a.getDoorAngleRatio(_0x58b99a) > 0.1 && _0x43eb6a.setDoorShut(_0x58b99a, false);
                  break;

                case 0x1:
                  _0x43eb6a.getDoorAngleRatio(_0x58b99a) <= 0.1 && _0x43eb6a.setDoorOpen(_0x58b99a, false, false);
                  break;

                case 0x2:
                  _0x43eb6a.isDoorDamaged(_0x58b99a) || _0x43eb6a.setDoorBroken(_0x58b99a, true);
              }
            }

            if (!(_0x20bbb1 || 'windows' !== _0x842113 && _0x842113)) {
              const _0x50d655 = _0x43eb6a.sync && _0x43eb6a.sync.windows ? _0x43eb6a.sync.windows : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];

              for (let _0x1fd2ec = 0x0; _0x1fd2ec < _0x16e6a0.api.getVehicleDoorsNumber(_0x43eb6a); _0x1fd2ec++) switch (_0x50d655[_0x1fd2ec]) {
                case 0x0:
                  _0x43eb6a.isWindowIntact(_0x1fd2ec) || _0x43eb6a.fixWindow(_0x1fd2ec), _0x43eb6a.rollUpWindow(_0x1fd2ec);
                  break;

                case 0x1:
                  _0x43eb6a.isWindowIntact(_0x1fd2ec) || _0x43eb6a.fixWindow(_0x1fd2ec), _0x43eb6a.rollDownWindow(_0x1fd2ec);
              }
            }

            if (_0x20bbb1 || 'dirt' !== _0x842113 && _0x842113 || _0x43eb6a.setDirtLevel(_0x43eb6a.sync && !isNaN(_0x43eb6a.sync.dirt) ? _0x16e6a0.api.clamp(0.1 * _0x43eb6a.sync.dirt, 0x0, 0xf) : 0x0), _0x20bbb1 || 'interiorLights' !== _0x842113 && _0x842113 || (_0x43eb6a.sync.interiorLights || _0x16e6a0.api.isVehicleDoorsOpened(_0x43eb6a) ? _0x43eb6a.setInteriorlight(true) : _0x43eb6a.setInteriorlight(false)), !(_0x20bbb1 || 'indicators' !== _0x842113 && _0x842113)) {
              for (let _0x2a5caa = 0x0; _0x2a5caa < 0x2; _0x2a5caa++) _0x43eb6a.sync.indicators && _0x43eb6a.sync.indicators[_0x2a5caa] ? _0x43eb6a.setIndicatorLights(_0x2a5caa, true) : _0x43eb6a.setIndicatorLights(_0x2a5caa, false);
            }

            if (_0x20bbb1 || 'siren' !== _0x842113 && _0x842113 || 0x12 == _0x43eb6a.getClass() && (_0x43eb6a.isSirenOn() && 0x0 == _0x43eb6a.sync.siren ? (_0x43eb6a.setSirenSound(true), _0x43eb6a.setSiren(false)) : _0x43eb6a.setSiren(!!_0x43eb6a.sync.siren)), _0x20bbb1 || 'muteSirenSound' !== _0x842113 && _0x842113 || 0x12 == _0x43eb6a.getClass() && _0x43eb6a.setSirenSound(!!_0x43eb6a.sync.muteSirenSound), 'engine' !== _0x842113 && _0x842113 || (_0x43eb6a.sync.engine ? (_0x43eb6a.setEngineOn(!!_0x43eb6a.sync.engine, true, true), _0x43eb6a.setUndriveable(false)) : (_0x43eb6a.setEngineOn(false, true, true), _0x43eb6a.setUndriveable(true))), 'locked' !== _0x842113 && _0x842113 || _0x43eb6a.setDoorsLocked(_0x43eb6a.sync.locked ? 0x2 : 0x1), 'gas' !== _0x842113 && _0x842113 || _0x37a062.events.call('vehicles.fuel.onUpdate', _0x43eb6a, _0x43eb6a.sync && _0x43eb6a.sync.gas ? _0x43eb6a.sync.gas : 0x0), 'mileage' !== _0x842113 && _0x842113 || _0x37a062.events.call('vehicles.mileage.onUpdate', _0x43eb6a, _0x43eb6a.sync && _0x43eb6a.sync.mileage ? _0x43eb6a.sync.mileage : 0x0), !_0x1bc599 || 'anchor' !== _0x842113 && _0x842113 || (_0x43eb6a.setBoatAnchor(!!_0x43eb6a.sync.anchor), _0x16e6a0.api.invokeNative('_SET_BOAT_FROZEN_WHEN_ANCHORED', _0x43eb6a.handle, true)), 'freeze' !== _0x842113 && _0x842113 || _0x43eb6a.freezePosition(!!_0x43eb6a.sync.freeze), 'radio' !== _0x842113 && _0x842113 || _0x37a062.events.call('setVehRadio', _0x43eb6a, _0x43eb6a.sync && _0x43eb6a.sync.radio ? _0x43eb6a.sync.radio : 0x0), 'radioCustom' !== _0x842113 && _0x842113 || _0x37a062.events.call('setCustomRadio', _0x43eb6a, !(!_0x43eb6a.sync || !_0x43eb6a.sync.radioCustom) && _0x43eb6a.sync.radioCustom), _0x20bbb1 || 'wearSuspension' !== _0x842113 && _0x842113 || _0x37a062.events.call('wear.setSuspensionDegrade', _0x43eb6a), _0x20bbb1 || 'wearWheels' !== _0x842113 && _0x842113 || _0x37a062.events.call('wear.setTyresBrake', _0x43eb6a), 'attachments' !== _0x842113 && _0x842113 || ((_0x5b136b, _0xc7a954) => {
              try {
                if (!_0x14ffc3.vehicles.exists(_0x5b136b)) return;
                if (!_0xc7a954) return;

                let _0x49cd3e = _0xc7a954.length > 0x0 ? _0xc7a954.split('|').map(_0x269f4d => parseInt(_0x269f4d, 0x24)) : [];

                if (0x0 !== _0x5b136b.handle) {
                  let _0x1726f4 = _0x5b136b.__attachments;
                  _0x1726f4 || (_0x1726f4 = [], _0x5b136b.__attachmentObjects = {});

                  for (let _0x157c49 of _0x1726f4) -0x1 === _0x49cd3e.indexOf(_0x157c49) && _0x14ffc3.vehicleAttachments.removeFor(_0x5b136b, _0x157c49);

                  for (let _0x1ba98e of _0x49cd3e) -0x1 === _0x1726f4.indexOf(_0x1ba98e) && _0x14ffc3.vehicleAttachments.addFor(_0x5b136b, _0x1ba98e);
                }

                _0x5b136b.__attachments = _0x49cd3e;
              } catch (_0x40cfdc) {
                _0x16e6a0.api.sendError(_0x40cfdc);
              }
            })(_0x43eb6a, _0x43eb6a.sync.attachments), 'wheel' === _0x842113 || !_0x842113) {
              const _0x1b050f = _0x43eb6a.sync.wheel;
              _0x1b050f && (_0x43eb6a.setWheelType(_0x1b050f.type || 0x0), _0x43eb6a.setMod(0x17, _0x1b050f.component || 0x0));
            }

            if ('wheel2' === _0x842113 || !_0x842113) {
              const _0x243b6a = _0x43eb6a.sync.wheel2;
              _0x243b6a && _0x37a062.game.vehicle.isThisModelABike(_0x43eb6a.model) && (_0x43eb6a.setWheelType(_0x243b6a.type || 0x0), _0x43eb6a.setMod(0x18, _0x243b6a.component || 0x0));
            }

            if (_0x20bbb1 || 'driftTyres' !== _0x842113 && _0x842113 || _0x16e6a0.api.invokeNative('_SET_DRIFT_TYRES_ENABLED', _0x43eb6a.handle, null != _0x43eb6a.sync.driftTyres && -0x1 != _0x43eb6a.sync.driftTyres), _0x20bbb1 || 'driftSuspension' !== _0x842113 && _0x842113 || _0x16e6a0.api.invokeNative('_SET_REDUCE_DRIFT_VEHICLE_SUSPENSION', _0x43eb6a.handle, null != _0x43eb6a.sync.driftSuspension && -0x1 != _0x43eb6a.sync.driftSuspension), 'customTrailer' !== _0x842113 && _0x842113 || _0x455aec(_0x43eb6a, _0x43eb6a.sync.customTrailer), _0x20bbb1 || 'bulletproofTyres' !== _0x842113 && _0x842113 || _0x43eb6a.setTyresCanBurst(!_0x43eb6a.sync.bulletproofTyres), !(_0x20bbb1 || 'roofState' !== _0x842113 && _0x842113)) {
              const _0x24437c = _0x43eb6a.sync.roofState;
              0x0 === _0x24437c ? _0x43eb6a.raiseConvertibleRoof(true) : 0x1 === _0x24437c ? _0x43eb6a.lowerConvertibleRoof(false) : 0x2 === _0x24437c ? _0x43eb6a.lowerConvertibleRoof(true) : 0x3 === _0x24437c && _0x43eb6a.raiseConvertibleRoof(false);
            }

            if ('livery' === _0x842113 || !_0x842113) {
              const _0x4befd4 = _0x43eb6a.sync.livery;
              'number' != typeof _0x4befd4 || isNaN(_0x4befd4) || _0x43eb6a.setLivery(_0x4befd4);
            }
          } catch (_0x4d9c9f) {
            _0x16e6a0.api.sendError(_0x4d9c9f);
          }
        },
              _0x556f64 = (_0x4cb3ff, _0x2de75d = false, _0x408459 = false) => {
          if (_0x37a062.vehicles.exists(_0x4cb3ff)) try {
            let _0x11e9ff = false,
                _0x108fdb = _0x4cb3ff.sync && _0x4cb3ff.sync.doors ? _0x4cb3ff.sync.doors : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];

            for (let _0xb61c06 = 0x0; _0xb61c06 < 0x6; _0xb61c06++) _0x4cb3ff.isDoorDamaged(_0xb61c06) ? 0x2 !== _0x108fdb[_0xb61c06] && (_0x108fdb[_0xb61c06] = 0x2, _0x11e9ff = true) : _0x4cb3ff.getDoorAngleRatio(_0xb61c06) > 0.1 ? _0xb61c06 >= 0x0 && _0xb61c06 <= 0x3 && _0x2de75d ? 0x0 !== _0x108fdb[_0xb61c06] && (_0x108fdb[_0xb61c06] = 0x0, _0x11e9ff = true) : 0x1 !== _0x108fdb[_0xb61c06] && (_0x108fdb[_0xb61c06] = 0x1, _0x11e9ff = true) : 0x0 !== _0x108fdb[_0xb61c06] && (_0x108fdb[_0xb61c06] = 0x0, _0x11e9ff = true);

            _0x11e9ff && _0x37a062.events.callRemote('4281794234', _0x4cb3ff, JSON.stringify(_0x108fdb));

            let _0x3a87cf = false,
                _0x183089 = _0x4cb3ff.sync && _0x4cb3ff.sync.windows ? _0x4cb3ff.sync.windows : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];

            for (let _0x1391a4 = 0x0; _0x1391a4 < 0x4; _0x1391a4++) _0x4cb3ff.isWindowIntact(_0x1391a4) ? 0x0 !== _0x183089[_0x1391a4] && (_0x183089[_0x1391a4] = 0x0, _0x3a87cf = true) : 0x1 !== _0x183089[_0x1391a4] && (_0x183089[_0x1391a4] = 0x1, _0x3a87cf = true);

            if (_0x3a87cf && _0x37a062.events.callRemote('2341102165', _0x4cb3ff, JSON.stringify(_0x183089)), _0x408459) {
              const _0x3e4079 = _0x4cb3ff.sync && !isNaN(_0x4cb3ff.sync.dirt) ? 0.1 * _0x4cb3ff.sync.dirt : 0x0,
                    _0x51f27a = _0x16e6a0.api.roundNumber(_0x4cb3ff.getDirtLevel(), 0x2);

              _0x51f27a > 0x0 && _0x51f27a !== _0x3e4079 && _0x37a062.events.callRemote('2792181304', _0x4cb3ff, Math.round(0xa * _0x51f27a));
            }
          } catch (_0x4db230) {
            _0x16e6a0.api.sendError(_0x4db230);
          }
        },
              _0x455aec = async (_0x4bef85, _0x30480c) => {
          if (null != _0x30480c) {
            _0x37a062.vehicles.exists(_0x4bef85.currentCustomTrailer) && (_0x4bef85.currentCustomTrailer.destroy(), delete _0x4bef85.currentCustomTrailer);

            const _0x361c4f = _0x16e6a0.api.getVehicleLength(_0x4bef85),
                  _0x259b26 = _0x37a062.game.object.getObjectOffsetFromCoords(_0x4bef85.position.x, _0x4bef85.position.y, _0x4bef85.position.z, _0x4bef85.getHeading(), 0x0, -_0x361c4f, 0x0),
                  _0x1da071 = _0x37a062.vehicles.new(_0x37a062.game.joaat(_0x30480c.model), _0x259b26, {
              'dimension': _0x4bef85.dimension,
              'heading': _0x4bef85.getHeading()
            });

            if (null != _0x1da071) {
              for (let _0x1b357d = 0x0; 0x0 === _0x1da071.handle && _0x1b357d < 0xf; ++_0x1b357d) await _0x37a062.game.sleep(0x64);

              if (!_0x37a062.vehicles.exists(_0x1da071)) return;
              if ((!_0x37a062.vehicles.exists(_0x4bef85) || !_0x4bef85.handle) && _0x37a062.vehicles.exists(_0x1da071)) return void _0x1da071.destroy();
              _0x4bef85.attachToTrailer(_0x1da071.handle, 0x1f4), _0x1da071.setInvincible(true), _0x4bef85.currentCustomTrailer = _0x1da071;
            }
          } else _0x37a062.vehicles.exists(_0x4bef85.currentCustomTrailer) && (_0x4bef85.currentCustomTrailer.destroy(), delete _0x4bef85.currentCustomTrailer);
        };

        _0x37a062.events.add('entityStreamIn', _0x3bcd7a => {
          if (_0x3bcd7a && 'vehicle' === _0x3bcd7a.type && _0x37a062.vehicles.exists(_0x3bcd7a) && 0x0 !== _0x3bcd7a.handle) {
            if (_0x3bcd7a.sync || (_0x3bcd7a.sync = {}), isNaN(_0x16e6a0.api.getLodDist('lodDistVeh')) || _0x3bcd7a.setLodDist(_0x16e6a0.api.getPlayerSetting('lowQualityMode') ? _0x16e6a0.api.getLodDist(0x0) : parseInt(_0x16e6a0.api.getLodDist('lodDistVeh'))), _0x3bcd7a.setDoorBreakable(0x5, false), _0x3bcd7a.setProofs(false, false, true, false, false, false, false, false), 0xe === _0x3bcd7a.getClass() && _0x16e6a0.api.invokeNative('_SET_BOAT_FROZEN_WHEN_ANCHORED', _0x3bcd7a.handle, true), _0x3bcd7a.hasVariable('boost')) {
              const _0x2e693a = _0x3bcd7a.getVariable('boost');

              _0x3bcd7a.setEnginePowerMultiplier(_0x2e693a), _0x3bcd7a.setEngineTorqueMultiplier(_0x2e693a);
            }

            _0x3bcd7a.__attachments && _0x37a062.vehicleAttachments.initFor(_0x3bcd7a), _0x3bcd7a.remoteId < 0xffff && null != _0x3bcd7a.sync && _0x2de114([{
              'id': _0x3bcd7a.remoteId,
              'data': _0x3bcd7a.sync
            }], true), _0x3bcd7a.remoteId < 0xffff && (_0x3c26bf[_0x3bcd7a.remoteId] = _0x3bcd7a.syncHash, _0x55fa0f());
          }
        }), _0x37a062.events.add('entityStreamOut', _0x403ee4 => {
          'vehicle' == _0x403ee4.type && (_0x403ee4.__attachmentObjects && _0x37a062.vehicleAttachments.shutdownFor(_0x403ee4), _0x403ee4.currentCustomTrailer && _0x455aec(_0x403ee4), _0x403ee4.remoteId < 0xffff && delete _0x3c26bf[_0x403ee4.remoteId]);
        }), _0x37a062.events.add('vehicle.sync.onDataRecieve', async _0x44a7b5 => {
          _0x2de114(_0x44a7b5);
        });

        const _0x2de114 = (_0x438ed7, _0x365083 = false) => {
          const _0xe94b58 = _0x438ed7 || [];

          for (const {
            id: _0x1a5c4d,
            data: _0x5ac392
          } of _0xe94b58) {
            const _0x139a09 = _0x37a062.vehicles.atRemoteId(_0x1a5c4d);

            _0x139a09 && _0x37a062.vehicles.exists(_0x139a09) && _0x139a09.handle && (_0x365083 || (_0x139a09.sync = _0x5ac392, _0x139a09.syncHash = _0x16e6a0.api.joaat(JSON.stringify(_0x139a09.sync))), _0x44b806(_0x139a09), _0x139a09.sync.READY = true);
          }
        };

        _0x37a062.events.add('vehicle.sync', (_0x12dae6, _0x1434e7, _0x36c4d3) => {
          if (null == _0x12dae6) return;

          const _0x258908 = _0x37a062.vehicles.atRemoteId(_0x12dae6);

          _0x258908 && (_0x258908.sync || (_0x258908.sync = {}), _0x258908.sync[_0x1434e7] = _0x36c4d3, _0x258908.syncHash = _0x16e6a0.api.joaat(JSON.stringify(_0x258908.sync)), _0x44b806(_0x258908, _0x1434e7), _0x258908.sync.READY || (_0x258908.sync.READY = true));
        }), (_0x37a062.events.add('vehicle.batch.sync', (_0x180b7d, _0x3b9b50) => {
          const a0_0x20c4c0 = {
            _0x5d637e: 0x12dd
          };
          if ('number' != typeof _0x180b7d) return;

          const _0x32460f = _0x37a062.vehicles.atRemoteId(_0x180b7d);

          if (!_0x32460f) return;
          _0x32460f.sync || (_0x32460f.sync = {});

          const _0x564f86 = (_0x117dae => 'string' == typeof _0x117dae && _0x117dae.length ? _0x117dae.split('^').map(_0xd15156 => {
            const [_0x4569c5, _0x4a6cbf, _0x43def9] = _0xd15156.split('&');

            let _0x48403c = _0x4a6cbf;

            const _0x59a1d0 = parseInt(_0x43def9);

            return 0x0 === _0x59a1d0 ? _0x48403c = JSON.parse(_0x4a6cbf) : 0x2 === _0x59a1d0 ? _0x48403c = parseFloat(_0x4a6cbf) : 0x3 === _0x59a1d0 && (_0x48403c = '1' === _0x4a6cbf), {
              'key': _0x4569c5,
              'value': _0x48403c
            };
          }) : [])(_0x3b9b50);

          for (const {
            key: _0x530746,
            value: _0x430cbc
          } of _0x564f86) _0x32460f.sync[_0x530746] = _0x430cbc;

          _0x32460f.syncHash = _0x16e6a0.api.joaat(JSON.stringify(_0x32460f.sync)), _0x44b806(_0x32460f), _0x32460f.sync.READY = true;
        }), _0x37a062.events.add('onPlayerEnterVehicle', (_0x4e6bc6, _0x28282a, _0x5cb86e) => {
          const _0x38ec26 = _0x37a062.vehicles.atRemoteId(_0x4e6bc6);

          _0x37a062.vehicles.exists(_0x38ec26) && _0x28282a && _0x556f64(_0x38ec26, true);
        }), _0x37a062.events.add('onPlayerExitVehicle', (_0x3171ad, _0x3eaf54) => {
          const _0xa3e684 = _0x37a062.vehicles.atRemoteId(_0x3171ad);

          _0x37a062.vehicles.exists(_0xa3e684) && _0x3eaf54 && _0x556f64(_0xa3e684, true, true);
        }), _0x37a062.events.add('time.every02Sec', () => {
          const _0x1d2b81 = _0x59e9b1.vehicle;

          if (_0x1d2b81 && _0x1d2b81.isAConvertible(false) && 0xffff !== _0x1d2b81.remoteId) {
            const _0x509647 = _0x1d2b81.getConvertibleRoofState();

            'number' != typeof _0x1d2b81.sync.roofState && (_0x1d2b81.sync.roofState = _0x509647), _0x1d2b81.sync.roofState !== _0x509647 && (_0x1d2b81.sync.roofState = _0x509647, _0x37a062.events.callRemote('1494755180', _0x1d2b81, _0x509647));
          }

          _0x16e6a0.api.isAuthed() && _0x37a062.vehicles.forEachInStreamRange(_0x9041a0 => {
            _0x9041a0.currentCustomTrailer && _0x37a062.vehicles.exists(_0x9041a0.currentCustomTrailer) && !_0x9041a0.isAttachedToTrailer() && (_0x9041a0.attachToTrailer(_0x9041a0.currentCustomTrailer.handle, 0x1f4), _0x9041a0.currentCustomTrailer.setInvincible(true));
          });
        }), _0x16e6a0.api.invokeNative('SET_ENABLE_VEHICLE_SLIPSTREAMING', true));
      },
      0x2ba9: (_0x2e426d, _0x185f2e, _0x55a338) => {
        'use strict';

        const a0_0x5093c4 = {
          _0x284323: 0x535,
          _0x4ddc68: 0x253d,
          _0x43c263: 0x2292,
          _0x3eeb9d: 0x1189,
          _0x46fc62: 0x10c9,
          _0x211e2d: 0x1e2c,
          _0x514003: 0x1e2c,
          _0x2b5b18: 0x1567,
          _0x2ab475: 0x1567,
          _0x1f40ee: 0x233f,
          _0x123526: 0x1f30,
          _0x1863c8: 0x2370,
          _0x218478: 0xcf9,
          _0x4263b4: 0x1fe9,
          _0x2e2436: 0x1149,
          _0x35817e: 0x1d66,
          _0x28c544: 0x1507,
          _0x2924f3: 0x18c1,
          _0x5289b0: 0x2585,
          _0x1410ec: 0x2585,
          _0x5a5da4: 0x6da,
          _0x24381c: 0x1567,
          _0x5e5174: 0x1189,
          _0x1ae03f: 0x4b9,
          _0x301ad1: 0x1fe9,
          _0x52b683: 0x1e18,
          _0x549ac4: 0x1d66
        },
              a0_0x361dc2 = {
          _0x330d8a: 0x1d55,
          _0x2f5ea4: 0xe41
        },
              a0_0x4ab449 = {
          _0x53eb1f: 0xc11,
          _0x2e7690: 0xc11,
          _0x314c48: 0xe41
        },
              a0_0x8eae53 = {
          _0x28be50: 0x19d2,
          _0x4edb86: 0x1d55
        },
              a0_0x1f0ad8 = {
          _0x968904: 0x19d2,
          _0x27db00: 0x19d2,
          _0x331d95: 0x535
        };

        _0x55a338.r(_0x185f2e);

        var _0x21aab7 = _0x55a338(0x16a21),
            _0x2397cd = _0x55a338(0xd194),
            _0x4f9bdf = _0x55a338(0x48c4),
            _0x26719d = _0x55a338(0x161cd);

        const _0x5e0d40 = ['freight', 'freightcar', 'freightgrain', 'freightcont1', 'freightcont2', 'tankercar', 's_m_m_lsmetro_01'],
              _0x222b8b = {
          'modelsReady': false,
          'dataReady': false,
          'trainStreamed': false,
          'train': null,
          'currentPoint': 0x0,
          'nextFrameUnfreeze': false
        },
              _0x2f2346 = _0x26719d.players.local,
              _0x3cf626 = 0xa,
              _0x30381f = _0x55a338.g.requireAsset('trainPositions');

        _0x30381f.push(_0x30381f[0x0]);

        const _0x5ae08d = [];

        (() => {
          let _0x3b332b = 0x0;

          for (let _0x247556 = 0x0; _0x247556 < _0x30381f.length; _0x247556++) {
            _0x5ae08d[_0x247556] = _0x3b332b;
            const _0x442a42 = _0x30381f[_0x247556],
                  _0x5df88d = _0x30381f[_0x247556 + 0x1];
            _0x247556 < _0x30381f.length - 0x1 && (_0x3b332b += _0x21aab7.api.vdist2(_0x442a42, _0x5df88d));
          }
        })();

        const _0x42c8a3 = _0x5ae08d[_0x5ae08d.length - 0x1],
              _0x7090cc = (_0x2bdb9b, _0xc5f051 = _0x30381f.length - 0x1) => {
          for (_0x2bdb9b <= 0x0 && (_0x2bdb9b += _0x5ae08d[_0x30381f.length - 0x1], _0xc5f051 = _0x30381f.length - 0x1); _0xc5f051 >= 0x0;) {
            if (_0x5ae08d[_0xc5f051] < _0x2bdb9b) return _0xc5f051;
            _0xc5f051 -= 0x1;
          }

          return 0x0;
        },
              _0x2bc099 = _0xd1cec7 => {
          let _0x5e635c = _0xd1cec7 + 0x1;

          return _0x5e635c >= _0x30381f.length && (_0x5e635c = 0x1), _0x5e635c;
        },
              _0x2ce0b7 = (_0x382ee1, _0x1df70b) => {
          let _0x31f4ca, _0x17f11e;

          _0x382ee1 <= 0x0 && (_0x382ee1 += _0x5ae08d[_0x5ae08d.length - 0x1]), _0x31f4ca = _0x1df70b, _0x17f11e = _0x2bc099(_0x1df70b);

          const _0x5c6922 = Math.abs(_0x5ae08d[_0x17f11e] - _0x5ae08d[_0x31f4ca]),
                _0x48f94b = _0x382ee1 - _0x5ae08d[_0x31f4ca],
                _0x5aae74 = Math.min(0x1, _0x48f94b / _0x5c6922),
                _0x54fbbc = new _0x26719d.Vector3(_0x30381f[_0x17f11e].x - _0x30381f[_0x31f4ca].x, _0x30381f[_0x17f11e].y - _0x30381f[_0x31f4ca].y, _0x30381f[_0x17f11e].z - _0x30381f[_0x31f4ca].z),
                _0x273972 = new _0x26719d.Vector3(_0x54fbbc.x * _0x5aae74, _0x54fbbc.y * _0x5aae74, _0x54fbbc.z * _0x5aae74);

          return new _0x26719d.Vector3(_0x30381f[_0x31f4ca].x + _0x273972.x, _0x30381f[_0x31f4ca].y + _0x273972.y, _0x30381f[_0x31f4ca].z + _0x273972.z);
        },
              _0x360d40 = (_0x27f034, _0x13d4e0) => {
          const a0_0x12903e = {
            _0x5e4afa: 0x19d2
          };

          let _0x573b7a = 0x0,
              _0x327e99 = new _0x2397cd.Quaternion(),
              _0x2d81f7 = new _0x2397cd.Quaternion();

          const _0x4de1b4 = (_0x2859a8 => {
            let _0x516e94 = _0x2859a8 - 0x1;

            return _0x516e94 < 0x0 && (_0x516e94 = _0x30381f.length - 0x2), _0x516e94;
          })(_0x27f034),
                _0x187367 = _0x27f034,
                _0x56079e = _0x2bc099(_0x27f034),
                _0x30ec60 = _0x2bc099(_0x56079e);

          _0x13d4e0 < 0x0 && (_0x13d4e0 += _0x5ae08d[_0x5ae08d.length - 0x1]);

          const _0x424f9c = (_0x13d4e0 - _0x5ae08d[_0x187367]) / (_0x5ae08d[_0x56079e] - _0x5ae08d[_0x187367]);

          return _0x424f9c < 0.5 ? (_0x573b7a = _0x424f9c + 0.5, _0x327e99 = _0x2397cd.Quaternion.fromEuler(_0x6b407e(_0x4de1b4, _0x187367), false), _0x2d81f7 = _0x2397cd.Quaternion.fromEuler(_0x6b407e(_0x187367, _0x56079e), false)) : (_0x573b7a = _0x424f9c - 0.5, _0x327e99 = _0x2397cd.Quaternion.fromEuler(_0x6b407e(_0x187367, _0x56079e), false), _0x2d81f7 = _0x2397cd.Quaternion.fromEuler(_0x6b407e(_0x56079e, _0x30ec60), false)), _0x2397cd.Quaternion.slerp(_0x327e99, _0x2d81f7, _0x573b7a);
        },
              _0x6b407e = (_0x10fe4f, _0x2878e3) => {
          const _0x4b0b46 = _0x41d58b(_0x30381f[_0x2878e3], _0x30381f[_0x10fe4f]),
                _0x1d42f0 = Math.atan2(_0x4b0b46.x, _0x4b0b46.y),
                _0x1eafbe = Math.atan2(_0x4b0b46.z, Math.sqrt(_0x4b0b46.x * _0x4b0b46.x + _0x4b0b46.y * _0x4b0b46.y));

          return new _0x26719d.Vector3(_0x1eafbe, 0x0, -_0x1d42f0);
        },
              _0x41d58b = (_0x1143b1, _0x2f952d) => {
          const _0x4fc631 = new _0x26719d.Vector3(_0x1143b1.x - _0x2f952d.x, _0x1143b1.y - _0x2f952d.y, _0x1143b1.z - _0x2f952d.z),
                _0x545818 = 0x1 / (Math.sqrt(_0x4fc631.x * _0x4fc631.x + _0x4fc631.y * _0x4fc631.y + _0x4fc631.z * _0x4fc631.z) || 0x1);

          return _0x4fc631.x *= _0x545818, _0x4fc631.y *= _0x545818, _0x4fc631.z *= _0x545818, _0x4fc631;
        };

        (async () => {
          await Promise.all(_0x5e0d40.map(_0x380ff6 => _0x21aab7.api.loadModel(_0x380ff6))), _0x222b8b.modelsReady = true, _0x4e5a1b();
        })();

        const _0x4e5a1b = (_0x218332 = _0x26719d.world.data.trainData) => {
          if ('string' != typeof _0x218332 || !_0x218332.length || !_0x222b8b.modelsReady) return;

          const _0x4191dc = (0x0, _0x4f9bdf.getServerTime)();

          _0x222b8b.lastUpdate = _0x4191dc;

          const _0x4073b8 = (_0x4191dc - parseInt(_0x218332, 0x24)) / 0x3e8;

          _0x222b8b.currentPoint = _0x3cf626 * _0x4073b8, _0x222b8b.currentPoint = _0x222b8b.currentPoint % _0x42c8a3, _0x222b8b.currentPoint < 0x0 && (_0x222b8b.currentPoint += _0x42c8a3), _0x222b8b.dataReady = true;
        };

        _0x26719d.events.add('worldDataReady', () => {
          _0x4e5a1b();
        }), _0x26719d.events.add('worldDataChanged', (_0xef2b9b, _0x6c3f18) => {
          'trainData' === _0xef2b9b && _0x4e5a1b(_0x6c3f18);
        }), _0x26719d.events.add('render', () => {
          const a0_0x296120 = {
            _0x41e61f: 0x17e1,
            _0xf534e8: 0x1d66,
            _0x11b4b0: 0x717,
            _0x581e2f: 0x1974,
            _0x19d2ff: 0x1e18,
            _0x417e09: 0x116c,
            _0x389f43: 0x1d66,
            _0x21c066: 0x120d,
            _0x376417: 0x1fe9,
            _0x55b2ae: 0x172f,
            _0x3f4c43: 0x6da,
            _0x5ee4e7: 0x18c1,
            _0x14de5e: 0x1d66,
            _0x19e553: 0x4b9,
            _0x6360d8: 0x1507,
            _0x31343b: 0x18c1,
            _0x58961b: 0x236b
          };

          if (_0x21aab7.api.isAuthed() && (_0x222b8b.nextFrameUnfreeze && (_0x2f2346.freezePosition(false)), _0x222b8b.dataReady && _0x222b8b.modelsReady)) {
            const _0x30236c = (0x0, _0x4f9bdf.getServerTime)(),
                  _0x376d9e = (_0x30236c - _0x222b8b.lastUpdate) / 0x3e8;

            _0x222b8b.lastUpdate = _0x30236c, _0x222b8b.currentPoint += _0x3cf626 * _0x376d9e, _0x222b8b.currentPoint = _0x222b8b.currentPoint % _0x42c8a3, _0x222b8b.currentPoint < 0x0 && (_0x222b8b.currentPoint += _0x42c8a3);
            let _0x20909f = null,
                _0x2aded3 = null;

            if (!_0x222b8b.lastUpdateStream || _0x30236c >= _0x222b8b.lastUpdateStream + 0x3e8) {
              _0x222b8b.lastUpdateStream = _0x30236c, _0x20909f = _0x7090cc(_0x222b8b.currentPoint), _0x2aded3 = _0x2ce0b7(_0x222b8b.currentPoint, _0x20909f);

              const _0x259bc1 = _0x21aab7.api.vdist2(_0x2f2346.position, _0x2aded3);

              !_0x222b8b.trainStreamed && _0x259bc1 <= 0x1f4 && 0x0 === _0x2f2346.dimension ? (_0x222b8b.trainStreamed = true, (_0x132072 => {
                _0x26719d.game.vehicle.deleteAllTrains();

                const _0x9af5a5 = _0x26719d.game.vehicle.createMissionTrain(0xe, _0x132072.x, _0x132072.y, _0x132072.z, true);

                _0x222b8b.train = _0x9af5a5, _0x26719d.game.vehicle.setMissionTrainCoords(_0x9af5a5, _0x132072.x, _0x132072.y, _0x132072.z), _0x26719d.game.vehicle.setTrainSpeed(_0x9af5a5, _0x3cf626 + 1e-9), _0x26719d.game.vehicle.setTrainCruiseSpeed(_0x9af5a5, _0x3cf626 + 1e-9), _0x26719d.game.vehicle.switchTrainTrack(0x0, true), _0x26719d.game.entity.setAsMissionEntity(_0x9af5a5, true, true), _0x26719d.game.entity.setInvincible(_0x9af5a5, true), 'number' == typeof _0x26719d.storage.data.currentTrainHash && _0x26719d.game.entity.doesExist(_0x26719d.storage.data.currentTrainHash) && _0x26719d.game.vehicle.deleteMissionTrain(_0x26719d.storage.data.currentTrainHash), _0x26719d.storage.data.currentTrainHash = _0x9af5a5;
              })(_0x2aded3)) : _0x222b8b.trainStreamed && _0x259bc1 > 0x1f4 && (_0x222b8b.trainStreamed = false, 'number' == typeof _0x222b8b.train && _0x26719d.game.entity.doesExist(_0x222b8b.train) && _0x26719d.game.vehicle.deleteMissionTrain(_0x222b8b.train), _0x222b8b.train = null, _0x26719d.storage.data.currentTrainHash = null);
            }

            if (_0x222b8b.trainStreamed && _0x222b8b.train && (!_0x222b8b.lastUpdatePos || _0x30236c >= _0x222b8b.lastUpdatePos + 0x3e8)) {
              _0x222b8b.lastUpdatePos = _0x30236c, 'number' != typeof _0x20909f && (_0x20909f = _0x7090cc(_0x222b8b.currentPoint), _0x2aded3 = _0x2ce0b7(_0x222b8b.currentPoint, _0x20909f));

              const _0xb67f58 = _0x360d40(_0x20909f, _0x222b8b.currentPoint);

              _0x2f2346.getConfigFlag(0x8a, true) && (_0x2f2346.freezePosition(true), _0x222b8b.nextFrameUnfreeze = true), _0x26719d.game.vehicle.setMissionTrainCoords(_0x222b8b.train, _0x2aded3.x, _0x2aded3.y, _0x2aded3.z), _0x26719d.game.entity.setQuaternion(_0x222b8b.train, _0xb67f58.x, _0xb67f58.y, _0xb67f58.z, _0xb67f58.w), _0x26719d.game.vehicle.setTrainSpeed(_0x222b8b.train, _0x3cf626 + 1e-9), _0x26719d.game.vehicle.setTrainCruiseSpeed(_0x222b8b.train, _0x3cf626 + 1e-9);
            }
          }
        });
      },
      0x1b34: (_0x3f2c30, _0x58296d, _0x6d85cd) => {
        'use strict';

        const a0_0x5a76c5 = {
          _0x494f13: 0xc95,
          _0x9f4ae6: 0xb5b,
          _0x3345e5: 0x1820,
          _0x180066: 0x2080,
          _0x29a826: 0x1f30,
          _0x33ec99: 0x1f30,
          _0x511600: 0x535,
          _0x394999: 0x41d,
          _0x3a14b3: 0x1934,
          _0x5a2351: 0x16c5,
          _0x3b46c0: 0x213c,
          _0x460eb6: 0x213c
        },
              a0_0xe0ea2 = {
          _0x754d0: 0xa94,
          _0x47ac40: 0x1d66,
          _0xd38238: 0x1992,
          _0x46a922: 0x1992,
          _0x41caa2: 0x1067
        };

        _0x6d85cd.r(_0x58296d);

        var _0x3f6a0c = _0x6d85cd(0x16a21),
            _0x3b24e9 = _0x6d85cd(0x161cd);

        const _0x31b1d1 = _0x3b24e9.players.local;
        let _0x8f14d0 = null;

        _0x3b24e9.events.addDataHandler('playerInTrunk', (_0x29aa6c, _0xc45a89) => {
          'player' == _0x29aa6c.type && _0x29aa6c.handle == _0x31b1d1.handle && undefined !== _0xc45a89 && (_0x8f14d0 = _0xc45a89);
        });

        let _0x3f535d = 0x0;
        _0x3b24e9.events.add('keys.e', () => {
          _0x3f6a0c.api.ePress(_0x3f535d) || (_0x3f535d = _0x3f6a0c.api.ePressUpdate(), _0x3b24e9.events.call('trunk.exitTrunk'));
        }), _0x3b24e9.events.add('render2', () => {
          null != _0x8f14d0 && (_0x3b24e9.game.controls.disableAllControlActions(0x0), _0x3b24e9.game.controls.disableAllControlActions(0x1), _0x3b24e9.game.controls.disableAllControlActions(0x2), _0x3b24e9.game.controls.enableControlAction(0x0, 0x0, true), _0x3b24e9.game.controls.enableControlAction(0x0, 0xf9, true), _0x3b24e9.game.controls.enableControlAction(0x2, 0x1, true), _0x3b24e9.game.controls.enableControlAction(0x2, 0x2, true), _0x3b24e9.game.controls.enableControlAction(0x0, 0xb1, true), _0x3b24e9.game.controls.enableControlAction(0x0, 0xc8, true));
        }), (_0x3b24e9.events.add('trunk.exitTrunk', (_0x4adce1 = false) => {
          const _0x4e2f81 = _0x31b1d1.getVariable('playerInTrunk');

          if (null == _0x4e2f81) return;

          const _0x937fff = _0x3b24e9.vehicles.atRemoteId(_0x4e2f81);

          let _0x3dfff1 = 0x3e8;
          if (_0x3b24e9.vehicles.exists(_0x937fff) && (_0x3dfff1 = _0x3f6a0c.api.vdist(_0x937fff.position.x, _0x937fff.position.y, _0x937fff.position.z, _0x31b1d1.position.x, _0x31b1d1.position.y, _0x31b1d1.position.z)), _0x3f6a0c.api.isTied(_0x31b1d1) && !_0x4adce1) return _0x3f6a0c.api.longNotifyTrans('user.cantLeaveTrunkTied', 'error');
          _0x4adce1 || _0x3b24e9.vehicles.exists(_0x937fff) && (_0x4cbed2 => !!(_0x4cbed2.getDoorAngleRatio(0x5) > 0.1))(_0x937fff) && _0x3dfff1 < 0x19 ? _0x3f6a0c.api.detachFromTrunk(_0x4e2f81) : _0x3b24e9.vehicles.exists(_0x937fff) ? _0x3b24e9.vehicles.exists(_0x937fff) && _0x3dfff1 > 0x19 && _0x3f6a0c.api.detachFromTrunk(_0x4e2f81) : _0x3f6a0c.api.detachFromTrunk(_0x4e2f81);
        }), _0x3b24e9.events.add('time.everySec', () => {
          _0x3f6a0c.api.isAuthed() && (null == _0x3b24e9.players.local.getVariable('playerInTrunk') || _0x3b24e9.players.local.isPlayingAnim('timetable@floyd@cryingonbed@base', 'base', 0x3) || _0x3f6a0c.api.taskPlayAnim('timetable@floyd@cryingonbed@base', 'base', 0x21, true));
        }));
      },
      0xcb55: (_0x459a09, _0x2a1958, _0x2c1eb1) => {
        'use strict';

        const a0_0x5bc5c1 = {
          _0x396200: 0x15b2,
          _0x4617c8: 0x13f4
        },
              a0_0x22c5e7 = {
          _0xf40c0a: 0x2292
        },
              a0_0x673aee = {
          _0x2295ff: 0x253d,
          _0x1027cd: 0x1edc,
          _0x44df4f: 0x59d,
          _0x15f840: 0x14d2,
          _0x2486f1: 0x1a5
        },
              a0_0x414fd0 = {
          _0x5e62df: 0x41c
        },
              a0_0x590fa5 = {
          _0x32552a: 0xe6d,
          _0x597095: 0x2488,
          _0x2bbed1: 0x1a3
        },
              a0_0x4c008c = {
          _0x437ce0: 0x1aab,
          _0xf1aa00: 0x2405,
          _0x5e3352: 0x145c,
          _0x2355cb: 0x145c,
          _0x128e89: 0x12ee,
          _0x4e94a1: 0x1d2
        };

        _0x2c1eb1.r(_0x2a1958);

        var _0x2500cc = _0x2c1eb1(0x16a21),
            _0x5e82d4 = _0x2c1eb1(0x168ed),
            _0x55d780 = _0x2c1eb1(0x12a76),
            _0x175ac8 = _0x2c1eb1(0x161cd);

        const _0x2eb732 = _0x175ac8.players.local;

        let _0x399a02,
            _0x275c1d,
            _0x4de9cd = [];

        _0x175ac8.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x5e82d4.oj.forEach(_0x55f847 => {
            const _0x53c6f8 = _0x175ac8.colshapes.newSphere(_0x55f847.inside.x, _0x55f847.inside.y, _0x55f847.inside.z, 0xa, 0x0);

            _0x53c6f8.customsId = _0x55f847.id, _0x4de9cd.push(_0x53c6f8);
          }), _0x55d780.globalBrowser.emit('tuning_initPriceConfig', JSON.stringify(_0x5e82d4.V6));
        }), _0x175ac8.events.add('playerEnterColshape', _0x594e87 => {
          _0x2500cc.api.isAuthed() && _0x2eb732.vehicle && _0x4de9cd.includes(_0x594e87) && (_0x2500cc.api.displayHelpStringTrans('displayHelpString.toEnterTuning', false, true, 0x1388), _0x399a02 = _0x594e87);
        }), _0x175ac8.events.add('playerExitColshape', _0x12f0c5 => {
          _0x2500cc.api.isAuthed() && _0x4de9cd.includes(_0x12f0c5) && (_0x399a02 = null, _0x175ac8.game.ui.clearHelp(true), _0x2c1eb1.g.interfaces.tuning && _0x175ac8.events.call('tuning.exit'));
        }), _0x175ac8.events.add('keys.e', () => {
          _0x399a02 && _0x4de9cd.includes(_0x399a02) && _0x2eb732.vehicle && (_0x175ac8.events.callRemote('2925794328', _0x399a02.customsId), _0x399a02 = null, _0x175ac8.game.ui.clearHelp(true));
        }), _0x175ac8.events.add('tuning.init', _0x571c40 => {
          if (!_0x2eb732.vehicle) return _0x175ac8.events.callRemote('2284957846');
          const _0x8b0cfd = _0x5e82d4.oj[_0x571c40 - 0x1];
          if (!_0x8b0cfd) return;

          const _0x4fdcd5 = _0x175ac8.vehicles.atRemoteId(_0x2eb732.vehicle.remoteId);

          _0x4fdcd5.position = new _0x175ac8.Vector3(_0x8b0cfd.inside.x, _0x8b0cfd.inside.y, _0x8b0cfd.inside.z), _0x4fdcd5.setHeading(_0x8b0cfd.inside.heading), _0x275c1d = _0x175ac8.cameras.new('default', new _0x175ac8.Vector3(_0x8b0cfd.camera.x, _0x8b0cfd.camera.y, _0x8b0cfd.camera.z), new _0x175ac8.Vector3(0x0, 0x0, 0x0), 0x3c), _0x275c1d.pointAtCoord(_0x4fdcd5.position.x, _0x4fdcd5.position.y, _0x4fdcd5.position.z), _0x275c1d.setActive(true), _0x175ac8.game.cam.renderScriptCams(true, false, 0x1f4, true, false, 0x0), _0x4fdcd5.setOnGroundProperly(), _0x4fdcd5.freezePosition(true), _0x4fdcd5.setInvincible(true), _0x4fdcd5.setInteriorlight(true), _0x175ac8.game.audio.setRadioToStationName('OFF'), _0x2500cc.api.cameraRotation.start(_0x275c1d, new _0x175ac8.Vector3(_0x4fdcd5.position.x, _0x4fdcd5.position.y, _0x4fdcd5.position.z), new _0x175ac8.Vector3(_0x4fdcd5.position.x, _0x4fdcd5.position.y, _0x4fdcd5.position.z), new _0x175ac8.Vector3(0x0, _0x1dd710(_0x4fdcd5.getModel()) / 1.1, 0x0), _0x4fdcd5.getHeading(), 0x28, true), _0x2500cc.api.cameraRotation.setXBoderMultiplier(0xb4, 0xb4), _0x2500cc.api.cameraRotation.setZBoderMultiplier(0.25, 0x3), _0x2500cc.api.cameraRotation.setZUpMultipler(0x2), _0x175ac8.events.call('utils.disablePlayerExit', true), _0x2500cc.api.setDiscordStatus('tuningshop');
        }), _0x175ac8.events.add('tuning.exit', () => {
          _0x175ac8.events.callRemote('2284957846'), _0x2500cc.api.cameraRotation.stop(), _0x175ac8.game.cam.renderScriptCams(false, false, 0x0, false, false, 0x0), _0x175ac8.cameras.exists(_0x275c1d) && (_0x275c1d = _0x275c1d.destroy());
          const _0x37fc88 = _0x2eb732.vehicle;
          _0x175ac8.vehicles.exists(_0x37fc88) && (_0x37fc88.freezePosition(false), _0x37fc88.setInvincible(false)), _0x175ac8.events.call('utils.disablePlayerExit', false), _0x2500cc.api.setDiscordStatus();
        }), _0x175ac8.events.add('tuning.unfreezeVehicle', () => {
          _0x2eb732.vehicle && (_0x2eb732.vehicle.freezePosition(false), _0x2eb732.vehicle.setInvincible(false));
        });

        const _0x1dd710 = _0x6eda10 => {
          const _0x14dd65 = _0x175ac8.game.gameplay.getModelDimensions(_0x6eda10);

          return _0x14dd65.max.y - _0x14dd65.min.y;
        };
      },
      0x1b0b: (_0x151788, _0x194d7e, _0x56cc88) => {
        'use strict';

        const a0_0x2a9f82 = {
          _0x334590: 0x1d66,
          _0x3b86e7: 0x24fe,
          _0x2010d0: 0x1992,
          _0x473792: 0xa9f
        },
              a0_0x1dfbb3 = {
          _0x1689a6: 0x4b9,
          _0x23d978: 0x13b4,
          _0x1af6a6: 0x535,
          _0x42b450: 0x623,
          _0x4034c: 0x1d97,
          _0x544446: 0x623,
          _0x28e705: 0x6da,
          _0x214aa6: 0x22c7,
          _0x285274: 0x6da,
          _0x5f27ac: 0x1373,
          _0x8a67aa: 0x8ad,
          _0x9842ee: 0x252b,
          _0x5e2a95: 0x535,
          _0x534427: 0x252b,
          _0x37c47a: 0x1db6
        };

        _0x56cc88.r(_0x194d7e);

        var _0x322151 = _0x56cc88(0x16a21),
            _0x609c4f = _0x56cc88(0x161cd);

        const _0x1adbea = _0x609c4f.players.local;
        let _0x2f586d = false,
            _0x5b0c7c = false,
            _0xfbe74c = 0x1;
        _0x609c4f.events.add('time.every5Sec', () => {
          const _0x29d816 = _0x1adbea.vehicle;
          if (!_0x29d816) return;
          if (_0x609c4f.game.vehicle.isThisModelABicycle(_0x29d816.model)) return;

          const _0x567c60 = _0x322151.api.getEntitySync(_0x29d816, 'wearCooling', 'number'),
                _0x2b09a4 = _0x322151.api.getEntitySync(_0x29d816, 'wearBrakes', 'number'),
                _0x3e9a67 = _0x322151.api.getEntitySync(_0x29d816, 'wearTransmission', 'number'),
                _0x572a54 = _0x322151.api.getEntitySync(_0x29d816, 'wearExhaust', 'number'),
                _0x1b7d72 = _0x322151.api.getEntitySync(_0x29d816, 'wearSuspension', 'number');

          _0x567c60 >= 0x17318 ? _0x29d816.setEngineCanDegrade(true) : _0x567c60 < 0x17318 && _0x29d816.getEngineHealth() > 0x190 && _0x29d816.setEngineCanDegrade(false), _0x572a54 >= 0x17318 && -0x32 != _0x322151.api.getVehicleCheatPowerIncrease(_0x29d816) ? _0x322151.api.setVehicleCheatPowerIncrease(-0x32) : _0x572a54 >= 0x124f8 && -0x19 != _0x322151.api.getVehicleCheatPowerIncrease(_0x29d816) ? _0x322151.api.setVehicleCheatPowerIncrease(-0x19) : _0x572a54 < 0x124f8 && 0x0 != _0x322151.api.getVehicleCheatPowerIncrease(_0x29d816) && _0x322151.api.setVehicleCheatPowerIncrease(0x0), _0x3e9a67 >= 0x17318 && !_0x5b0c7c ? (_0xfbe74c = 0.1, _0x5b0c7c = true) : _0x3e9a67 >= 0x124f8 && !_0x5b0c7c ? (_0xfbe74c = 0.3, _0x5b0c7c = true) : _0x5b0c7c && _0x3e9a67 < 0x124f8 && (_0xfbe74c = 0x1, _0x5b0c7c = false), _0x2b09a4 >= 0x17318 && !_0x2f586d ? _0x2f586d = true : _0x2f586d && _0x2b09a4 < 0x17318 && (_0x2f586d = false), null != _0x1b7d72 && _0x609c4f.events.call('wear.setSuspensionDegrade');
        }), _0x609c4f.events.add('render', () => {
          if (_0x2f586d && (_0x609c4f.game.controls.disableControlAction(0x0, 0x48, true), _0x609c4f.game.controls.disableControlAction(0x0, 0x4c, true)), _0x5b0c7c) {
            const _0xfccbb2 = _0x1adbea.vehicle;
            _0xfccbb2 && _0xfccbb2.setEngineTorqueMultiplier(_0xfbe74c);
          }
        }), _0x609c4f.events.add('wear.setSuspensionDegrade', _0x96d43c => {
          if (!_0x609c4f.vehicles.exists(_0x96d43c)) return;
          if (_0x4e4d46(_0x96d43c.model)) return;

          const _0xf30ebc = _0x322151.api.getEntitySync(_0x96d43c, 'wearSuspension', 'number');

          _0xf30ebc >= 0x17318 ? _0x96d43c.setHandling('FSUSPENSIONRAISE', _0x96d43c.getSuspensionHeight() / -0.15 || -0.15) : _0xf30ebc >= 0x124f8 ? _0x96d43c.setHandling('FSUSPENSIONRAISE', _0x96d43c.getSuspensionHeight() / -0.1 || -0.1) : _0x96d43c.setHandling('FSUSPENSIONRAISE', 0.002 * _0x96d43c.getMod(0xf));
        }), _0x609c4f.events.add('wear.setTyresBrake', _0x35f5a7 => {
          if (!_0x609c4f.vehicles.exists(_0x35f5a7)) return;
          _0x322151.api.getEntitySync(_0x35f5a7, 'wearWheels', 'number') >= 0x17318 && (_0x35f5a7.setTyreBurst(0x0, false, 0x3e8), _0x35f5a7.setTyreBurst(0x1, false, 0x3e8), _0x35f5a7.setTyreBurst(0x4, false, 0x3e8), _0x35f5a7.setTyreBurst(0x5, false, 0x3e8));
        });

        const _0x4e4d46 = _0x32be91 => _0x609c4f.game.vehicle.isThisModelABike(_0x32be91) || _0x609c4f.game.vehicle.isThisModelABicycle(_0x32be91) || _0x609c4f.game.vehicle.isThisModelAQuadbike(_0x32be91);
      },
      0x52b6: (_0x23548e, _0xe6d271, _0x59de1a) => {
        'use strict';

        const a0_0x13fa07 = {
          _0x10870e: 0x1edc
        },
              a0_0x17ddeb = {
          _0x31ccb5: 0x1edc,
          _0x1825c8: 0xf79
        };

        _0x59de1a.r(_0xe6d271);

        var _0x1b4db0 = _0x59de1a(0x16a21),
            _0x251b5b = _0x59de1a(0xd194),
            _0xad6352 = _0x59de1a(0x5d14),
            _0x10bcd9 = _0x59de1a(0x161cd);

        let _0x2dcbd7 = [];

        _0x10bcd9.game.audio.stopAllAlarms(true);

        const _0x575f32 = _0x2a7769 => 'island' === _0x2a7769 && [new _0x10bcd9.Vector3(0x1492, -0x1533, 0x8d)],
              _0x11eb52 = async (_0x17faf4 = _0x10bcd9.world.data.alarmData) => {
          const a0_0x5c13bf = {
            _0x27b52f: 0xe6d,
            _0x407681: 0x1d2
          },
                a0_0x4aeea5 = {
            _0x68fb29: 0xf2f,
            _0x18a7fc: 0x1a08
          },
                a0_0xb94ebd = {
            _0x571c59: 0xf79,
            _0x4fd71e: 0x1aa0,
            _0x30fa6: 0xe6d,
            _0x3c78e5: 0xf2f
          },
                a0_0x2313f4 = {
            _0x1ce4d3: 0x13ef
          };

          if (_0x1b4db0.api.isAuthed()) {
            if (_0x2dcbd7.length) {
              let _0x16d588 = [],
                  _0x3ec4fa = [];
              _0x2dcbd7.forEach(_0x194510 => {
                _0x17faf4 && _0x17faf4.includes(_0x194510.name) ? _0x3ec4fa.push(_0x194510) : _0x16d588.push(_0x194510);
              }), _0x2dcbd7 = _0x3ec4fa, _0x16d588.forEach(_0x1b7c92 => {
                _0x575f32(_0x1b7c92.name) ? _0x1b7c92.sounds && _0x1b7c92.sounds.forEach(_0x241105 => {
                  _0x1b4db0.api.stopSound(_0x241105);
                }) : _0x10bcd9.game.audio.stopAlarm(_0x1b7c92.name, true);
              });
            }

            if ('object' == typeof _0x17faf4) {
              let _0x263122 = [];
              _0x17faf4.forEach(_0x1dcc4a => {
                _0x2dcbd7.includes(_0x1dcc4a) || _0x263122.push(_0x1dcc4a);
              }), _0x263122.forEach(_0x3e17c3 => {
                const a0_0x21ff55 = {
                  _0x3fc4a9: 0x1ab,
                  _0x27aa1d: 0x1d2
                };

                if (_0x575f32(_0x3e17c3)) {
                  let _0x13f8f1 = [];
                  _0x575f32(_0x3e17c3).forEach(_0x537a0d => {
                    const _0x4ee070 = 'as' + _0xad6352.u.natural();

                    new _0x251b5b.Sounds3DPos(_0x4ee070, 'alarm', _0x537a0d, {
                      'maxDistance': 0x7d0,
                      'rolloffFactor': 0x1,
                      'refDistance': 0.5,
                      'loop': true,
                      'volume': 0x19
                    }), _0x13f8f1.push(_0x4ee070);
                  }), _0x2dcbd7.push({
                    'name': _0x3e17c3,
                    'sounds': _0x13f8f1
                  });
                } else (async () => {
                  const a0_0x1edcfd = {
                    _0x38f2c2: 0x1d66,
                    _0x4c1ea3: 0xf2f,
                    _0x1984bd: 0x2604,
                    _0xdf2151: 0x1fa7,
                    _0x70a492: 0x1d66
                  };
                  await (_0x478486 => new Promise(async (_0x48b768, _0xb68e1e) => {
                    if (_0x10bcd9.game.audio.prepareAlarm(_0x478486)) return _0x48b768(true);

                    for (let _0x4754ba = 0x0; !_0x10bcd9.game.audio.prepareAlarm(_0x478486) && _0x4754ba < 0x1f4; ++_0x4754ba) {
                      if (0x1f4 === _0x4754ba) return _0x48b768('Ошибка prepareAlarm. Dict: ' + _0x478486);
                      await _0x10bcd9.game.sleep(0xa);
                    }

                    return _0x48b768(true);
                  }))(_0x3e17c3), _0x10bcd9.game.audio.startAlarm(_0x3e17c3, true);
                })(), _0x2dcbd7.push({
                  'name': _0x3e17c3
                });
              });
            }
          }
        };

        _0x10bcd9.events.add('worldDataReady', () => {
          _0x11eb52();
        }), _0x10bcd9.events.add('worldDataRemoved', _0x269f0e => {
          'alarmData' == _0x269f0e && _0x11eb52();
        }), _0x10bcd9.events.add('worldDataChanged', (_0x2bb95f, _0x4ee2fe) => {
          'alarmData' == _0x2bb95f && _0x11eb52(_0x4ee2fe);
        });
      },
      0x78b: (_0x3ad1ee, _0x1e43ec, _0x88bba3) => {
        var _0x25458f = _0x88bba3(0x161cd);

        _0x25458f.game.blackout = {
          '_enabled': false,

          get 'enabled'() {
            return this._enabled;
          },

          set 'enabled'(_0x14560f) {
            this._enabled = _0x14560f;

            for (let _0x551657 = 0x0; _0x551657 <= 0x10; _0x551657++) _0x25458f.game.graphics.setLightsState(_0x551657, _0x14560f);
          }

        }, _0x25458f.events.add('SetBlackoutState', _0x1f1195 => {
          _0x25458f.game.blackout.enabled = _0x1f1195;
        });
      },
      0xa04a: (_0x16c1e5, _0x133b43, _0x58c6dd) => {
        'use strict';

        const a0_0x1731bf = {
          _0xc30159: 0x184d,
          _0x3b436c: 0x19b1
        },
              a0_0x3cb152 = {
          _0x4d6413: 0x2121,
          _0x5d99f8: 0x130a,
          _0x30d367: 0x1f9f,
          _0x42bc2f: 0xcb2
        },
              a0_0x69f779 = {
          _0xf55510: 0x54d,
          _0x485071: 0x1c2f,
          _0x46a7c8: 0x2230
        },
              a0_0x469aa9 = {
          _0x118b8e: 0x54d,
          _0x5a21d4: 0x1f9f,
          _0x1118b2: 0x23b6,
          _0x49f438: 0xcb2
        };
        _0x58c6dd.r(_0x133b43), _0x58c6dd.d(_0x133b43, {
          'clockController': () => _0x3f0f73
        });

        var _0x1eb528 = _0x58c6dd(0x16a21),
            _0x10e319 = _0x58c6dd(0x13888),
            _0x41b939 = _0x58c6dd.n(_0x10e319),
            _0x165c9e = _0x58c6dd(0x11ed7),
            _0x192148 = _0x58c6dd.n(_0x165c9e),
            _0x60967b = _0x58c6dd(0x48c4),
            _0xda24c1 = _0x58c6dd(0x161cd);

        const _0x6426b4 = _0x192148()(0x1, 0.1, 0.1, 0x1);

        _0xda24c1.events.add('clock.advanceTo', (_0x508e2a, _0x3fc132, _0xa66dea = {}) => {
          _0x3f0f73.transition(_0x508e2a, _0x3fc132, _0xa66dea);
        }), _0xda24c1.events.add('clock.freeze', _0x2e75fc => {
          _0xda24c1.world.data.currentTime || (_0x3f0f73.freezeTime = !!_0x2e75fc);
        }), _0xda24c1.events.add('render', () => {
          if (!_0x3f0f73._isTransitionActive) return;

          const _0x8e8e09 = Date.now(),
                _0x17b673 = Math.min(0x1, (_0x8e8e09 - _0x3f0f73._transitionStartTime) / _0x3f0f73._animationTime),
                _0x590df6 = _0x3f0f73._bezierEasing ? _0x3f0f73._bezierEasing(_0x17b673) : _0x6426b4(_0x17b673);

          if (_0x17b673 >= 0.999999) return _0x3f0f73._isTransitionActive = false, _0x3f0f73._transitionUnfreezeOnFinish && (_0x3f0f73.freezeTime = false), delete _0x3f0f73._bezierEasing, void _0xda24c1.events.call('clock.transitionFinished');

          let _0x2e5203 = _0x1eb528.api.lerp(_0x3f0f73._transitionSecondsFrom, _0x3f0f73._transitionSecondsTo, _0x590df6);

          _0x2e5203 %= 0x15180, _0x2e5203 < 0x0 && (_0x2e5203 += 0x15180);

          const _0x1c5c46 = Math.floor(_0x2e5203 / 0xe10),
                _0x1c0e2d = Math.floor(_0x2e5203 % 0xe10 / 0x3c),
                _0x574ad8 = Math.floor(_0x2e5203 % 0xe10 % 0x3c);

          _0xda24c1.game.time.setClockTime(_0x1c5c46, _0x1c0e2d, _0x574ad8);
        }), _0xda24c1.events.add('worldDataReady', () => {
          _0x219013();
        }), _0xda24c1.events.add('worldDataRemoved', _0x250153 => {
          'customTime' == _0x250153 && _0x219013(undefined, true);
        }), _0xda24c1.events.add('worldDataChanged', (_0x474ba9, _0x3d34f8, _0x4beb74) => {
          'customTime' == _0x474ba9 && _0x219013(_0x3d34f8);
        }), _0xda24c1.events.add('setTime', (_0x4f053b, _0x52b7d7, _0x44279b) => {
          _0x3f0f73.freezeTime = true, _0x3f0f73.setTime(_0x4f053b, _0x52b7d7, _0x44279b);
        });

        const _0x219013 = (_0x68e99b = _0xda24c1.world.data.customTime, _0x245535 = false) => {
          if (_0x68e99b) {
            const _0x516302 = JSON.parse(_0x68e99b);

            _0x3f0f73.freezeTime = true, _0x3f0f73.setTime(_0x516302.hours, _0x516302.minutes, _0x516302.seconds);
          }

          _0x245535 && (_0x3f0f73.freezeTime = false);
        };

        _0xda24c1.game.time.pauseClock(true);

        const _0x3f0f73 = new class {
          constructor() {
            this.freezeTime = false, this._isTransitionActive = false, this._animationTime = 0xbb8, this._transitionUnfreezeOnFinish = false, this._transitionSecondsFrom = 0x0, this._transitionSecondsTo = 0x0, this._transitionStartTime = 0x0, this._bezierEasing = null, this._time = {
              'hours': 0xc,
              'minute': 0x0,
              'second': 0x0
            }, setInterval(() => {
              this.syncTime();
            }, 0x32);
          }

          ['setTime'](_0x260a4c = 0x0, _0x49aeef = 0x0, _0x4893cf = 0x0) {
            isNaN(_0x260a4c) || isNaN(_0x49aeef) || isNaN(_0x4893cf) || (_0xda24c1.game.time.setClockTime(_0x260a4c, _0x49aeef, _0x4893cf), this._time.hours = _0x260a4c, this._time.minutes = _0x49aeef, this._time.seconds = _0x4893cf);
          }

          ['transition'](_0x192b03, _0x260393, _0x49e38b = {}) {
            this._animationTime = _0x49e38b.animationTime ? _0x49e38b.animationTime : 0xbb8, this._transitionUnfreezeOnFinish = !!_0x49e38b.unfreeze, this._bezierEasing = _0x49e38b.bezierEasing;

            const _0xe81036 = _0x1eb528.api.invokeNative('GET_CLOCK_HOURS'),
                  _0x2352cf = _0x1eb528.api.invokeNative('GET_CLOCK_MINUTES'),
                  _0x3ec4ab = _0x1eb528.api.invokeNative('GET_CLOCK_SECONDS');

            this._transitionSecondsFrom = _0x3ec4ab + 0xe10 * _0xe81036 + 0x3c * _0x2352cf, this._transitionSecondsTo = _0x3ec4ab + 0xe10 * _0x192b03 + 0x3c * (_0x260393 + (0x3c - _0x2352cf)), this._transitionStartTime = Date.now(), this._isTransitionActive = true;
          }

          ['syncTime']() {
            if (this.freezeTime || this._isTransitionActive) return;

            const _0x3aaed2 = _0x41b939()().tz((0x0, _0x60967b.getServerTimezone)()),
                  _0x40ceb3 = _0x3aaed2.format('HH:-:mm:-:ss'),
                  [_0x357c55, _0x422dae, _0x3ed063] = _0x40ceb3.split(':-:'),
                  _0x54d612 = parseInt(_0x357c55),
                  _0x18090f = parseInt(_0x422dae),
                  _0xe34fb5 = parseInt(_0x3ed063);

            this.setTime(_0x54d612, _0x18090f, _0xe34fb5), _0xda24c1.game.time.setClockDate(_0x3aaed2.date(), _0x3aaed2.month(), _0x3aaed2.year());
          }

          ['syncTimeWithTransition'](_0x509fac = 0xbb8) {
            const _0x552825 = _0x41b939()().tz((0x0, _0x60967b.getServerTimezone)()).format('HH:-:mm:-:ss'),
                  [_0xbb90ab, _0x364193, _0x403f46] = _0x552825.split(':-:'),
                  _0x3bb93d = parseInt(_0xbb90ab),
                  _0x30d7ef = parseInt(_0x364193);

            parseInt(_0x403f46), this.transition(_0x3bb93d, _0x30d7ef, {
              'animationTime': _0x509fac
            });
          }

          ['getDayType']() {
            let _0x437b8a = 'day';
            return (this._time.hours >= 0x14 || this._time.hours <= 0x6) && (_0x437b8a = 'night'), _0x437b8a;
          }

        }();
      },
      0x64b7: (_0x2c8ed1, _0x603ea6, _0xaead36) => {
        'use strict';

        const a0_0x56497c = {
          _0x42867c: 0x253d,
          _0x13cfb3: 0x93c,
          _0x45bf39: 0x23a2
        },
              a0_0x4f0f07 = {
          _0x149a8b: 0x1cdc,
          _0x22868a: 0x1a2c,
          _0x43c93b: 0xe6d
        },
              a0_0x3c4b19 = {
          _0x16d40c: 0x259f
        };

        _0xaead36.r(_0x603ea6);

        var _0x556a6c = _0xaead36(0x16a21),
            _0xfc6fb1 = _0xaead36(0xe7e4),
            _0x372262 = _0xaead36(0xd194),
            _0x4ca414 = _0xaead36(0x17d19),
            _0x110b2d = _0xaead36(0x5d14),
            _0x9d2d32 = _0xaead36(0x161cd);

        const _0x283b59 = new _0x4ca414.Z({
          'dataItems': _0xfc6fb1.E,
          'chunkSize': 0x64,
          'distance': 0x64,
          'positionResolver': _0x550dc5 => _0x550dc5.position,
          'streamDelay': 0xbb8,
          'isCheck3d': false,
          'type': 'point'
        }),
              _0x1e48c5 = {
          'emittersDataStates': []
        },
              _0xfbbd20 = _0x4d30be => {
          const _0x41de3e = _0x1e48c5.emittersDataStates,
                _0x9b7532 = ((_0x207b92 = _0x9d2d32.world.data.customEmitters) => 'string' == typeof _0x207b92 && _0x207b92.length ? _0x207b92.split('^').map(_0x5bb039 => parseInt(_0x5bb039, 0x24)) : [])(_0x4d30be),
                _0x70bdbb = _0x41de3e.filter(_0x487f21 => -0x1 === _0x9b7532.indexOf(_0x487f21)),
                _0x5bfc68 = _0x9b7532.filter(_0x50abb0 => -0x1 === _0x41de3e.indexOf(_0x50abb0));

          _0x1e48c5.emittersDataStates = _0x9b7532, _0x70bdbb.forEach((_0x5b8656, _0x455fb5) => {
            const _0x2e73fe = _0xfc6fb1.E[_0x455fb5];
            _0x2e73fe.source && (_0x2e73fe.source.destroy(), delete _0x2e73fe.source);
          }), _0x5bfc68.forEach((_0x245269, _0xda3c18) => {
            _0xfc6fb1.E[_0xda3c18].startTime = _0x245269;
          });
        };

        _0x9d2d32.events.add('worldDataReady', () => {
          _0xfbbd20();
        }), _0x9d2d32.events.add('worldDataChanged', (_0x520bab, _0x178ad4) => {
          'emittersData' === _0x520bab && _0xfbbd20(_0x178ad4);
        }), _0x283b59.onEnter = _0x1f899a => {
          _0x1f899a.source && (_0x1f899a.source.destroy(), delete _0x1f899a.source), _0x1f899a.source = new _0x372262.Sounds3DPos(_0x110b2d.u.natural(), _0x1f899a.sound, _0x1f899a.position, {
            'volume': _0x1f899a.volume,
            'maxDistance': _0x1f899a.maxDistance,
            'loop': _0x1f899a.looped,
            'syncAudio': _0x1f899a.startTime
          });
        }, _0x283b59.onExit = _0x20e510 => {
          _0x20e510.source && (_0x20e510.source.destroy(), delete _0x20e510.source);
        }, _0x9d2d32.events.add('render', () => {
          const _0x5f1022 = Date.now();

          !_0x1e48c5.streamerReady && _0x556a6c.api.isAuthed() && (_0x1e48c5.streamerReadyStartTime || (_0x1e48c5.streamerReadyStartTime = _0x5f1022), _0x5f1022 - _0x1e48c5.streamerReadyStartTime >= 0x4e2 && (_0x1e48c5.streamerReady = true)), _0x1e48c5.streamerReady && _0x283b59.update();
        });
      },
      0x10df8: (_0x27b682, _0x26b267, _0x16af51) => {
        'use strict';

        const a0_0x55812f = {
          _0x41e37f: 0xf82,
          _0x1960bb: 0x2379,
          _0x25bc13: 0x1d55,
          _0x5a8302: 0x2606,
          _0x13055f: 0x2379,
          _0x4b1b11: 0x1d55
        },
              a0_0x915836 = {
          _0x25f8fe: 0x1d66,
          _0x26c209: 0x11dc,
          _0x1cad3d: 0xc8b
        },
              a0_0x2c9a45 = {
          _0x11be5c: 0x13f0,
          _0x53bf57: 0x253d,
          _0x451af8: 0x93c,
          _0x5e755a: 0x93c,
          _0x19e3b1: 0x13f0,
          _0x3caf7c: 0x23a2
        },
              a0_0x19511c = {
          _0x29fd25: 0xb37,
          _0x48edcf: 0x1c87
        },
              a0_0x37e1c4 = {
          _0x3c7b20: 0x628,
          _0x32ec06: 0x185e,
          _0x4c4098: 0x1f30,
          _0x12a61e: 0x535,
          _0x324d26: 0x1a50,
          _0x11a8bf: 0x19d2,
          _0x5c62ba: 0xa27,
          _0x425e17: 0xec8
        },
              a0_0x1fb0e5 = {
          _0x116574: 0xd20,
          _0x508da0: 0x1a2c,
          _0x3a3381: 0x1c87,
          _0x4e1f29: 0x1d66,
          _0x4498e3: 0x11dc,
          _0x2725fd: 0xb37,
          _0x10861f: 0x11dc,
          _0x596c41: 0x1e5c,
          _0x2c4971: 0x216e,
          _0x5c8dd2: 0x1d66,
          _0x4971ab: 0x1d66,
          _0x5dc358: 0x11dc
        };

        _0x16af51.r(_0x26b267);

        var _0x422a8b = _0x16af51(0x16a21),
            _0x1d2c83 = _0x16af51(0xd52f),
            _0xf29ba = _0x16af51(0x17d19),
            _0x1cfc69 = _0x16af51(0x1694a),
            _0x498f99 = _0x16af51(0x161cd);

        const _0x39e6a4 = _0x498f99.players.local;
        let _0x286249 = [];

        for (const _0x5f8cec in _0x1d2c83) {
          const _0x4e32c1 = _0x1d2c83[_0x5f8cec],
                _0x173199 = _0x498f99.game.joaat('mj_door_' + _0x5f8cec);

          _0x4e32c1.id = parseInt(_0x5f8cec), _0x4e32c1.doorHash = _0x173199, _0x4e32c1.currentLock = !!_0x4e32c1.locked, _0x498f99.game.object.addDoorToSystem(_0x173199, _0x4e32c1.hash, _0x4e32c1.x, _0x4e32c1.y, _0x4e32c1.z, false, false, false), _0x286249.push(_0x4e32c1);
        }

        const _0x190806 = new _0xf29ba.Z({
          'dataItems': _0x286249,
          'chunkSize': 0x64,
          'distance': 0x64,
          'positionResolver': _0x31f6b5 => new _0x498f99.Vector3(_0x31f6b5.x, _0x31f6b5.y, _0x31f6b5.z),
          'streamDelay': 0xbb8,
          'isCheck3d': false,
          'type': 'point'
        }),
              _0x512e73 = {
          'doorsDataStates': []
        },
              _0x141893 = _0x4de07e => {
          const _0xf43f4d = _0x512e73.doorsDataStates,
                _0x25a02c = ((_0x558c16 = _0x498f99.world.data.doorsData) => 'string' == typeof _0x558c16 && _0x558c16.length ? _0x558c16.split('^').map(_0x366f50 => parseInt(_0x366f50)) : [])(_0x4de07e),
                _0x2b73de = _0xf43f4d.filter(_0x3f785e => -0x1 === _0x25a02c.indexOf(_0x3f785e)),
                _0x59a09a = _0x25a02c.filter(_0x578fd1 => -0x1 === _0xf43f4d.indexOf(_0x578fd1));

          _0x512e73.doorsDataStates = _0x25a02c;

          for (const _0x513998 of _0x2b73de) {
            const _0x1109d3 = _0x1d2c83[_0x513998];
            _0x1109d3.currentLock = _0x1109d3.locked, _0x190806.currentItems.has(_0x1109d3) && (_0x498f99.game.object.doorControl(_0x1109d3.hash, _0x1109d3.x, _0x1109d3.y, _0x1109d3.z, _0x1109d3.currentLock, 0x0, 0x0, 0x0), _0x1109d3.currentLock && _0x498f99.game.object.setDoorAjarAngle(_0x1109d3.doorHash, 0x0, false, true));
          }

          for (const _0x1a694b of _0x59a09a) {
            const _0x31bd64 = _0x1d2c83[_0x1a694b];
            _0x31bd64.currentLock = !_0x31bd64.locked, _0x190806.currentItems.has(_0x31bd64) && (_0x498f99.game.object.doorControl(_0x31bd64.hash, _0x31bd64.x, _0x31bd64.y, _0x31bd64.z, _0x31bd64.currentLock, 0x0, 0x0, 0x0), _0x31bd64.currentLock && _0x498f99.game.object.setDoorAjarAngle(_0x31bd64.doorHash, 0x0, false, true));
          }
        };

        _0x498f99.events.add('worldDataChanged', (_0x45ccbd, _0x4b7dd6) => {
          'doorsData' === _0x45ccbd && _0x141893(_0x4b7dd6);
        }), _0x498f99.events.add('keys.e', () => {
          if (_0x498f99.game.player.isFreeAiming() || _0x498f99.players.local.isDead() || _0x498f99.gui.cursor.visible || _0x498f99.players.local.vehicle || _0x16af51.g.currentInterface) return;
          let _0x3aef07 = [];
          const _0x2f4e0 = _0x39e6a4.position;

          for (const _0x4fc42f of _0x190806.currentItems) {
            const _0x5cec18 = _0x422a8b.api.vdist2(new _0x498f99.Vector3(_0x4fc42f.x, _0x4fc42f.y, _0x4fc42f.z), _0x2f4e0);

            _0x5cec18 <= 1.25 && _0x3aef07.push({
              'doorData': _0x4fc42f,
              'distance': _0x5cec18
            });
          }

          if (!_0x3aef07.length) return;

          _0x3aef07.sort((_0xa49348, _0x5ee973) => _0xa49348.distance - _0x5ee973.distance);

          const _0x57d2f2 = _0x3aef07[0x0].doorData;

          _0x498f99.events.callRemote('671556097', _0x57d2f2.id);
        }), _0x190806.onEnter = _0x2c7283 => {
          _0x498f99.game.object.doorControl(_0x2c7283.hash, _0x2c7283.x, _0x2c7283.y, _0x2c7283.z, _0x2c7283.currentLock, 0x0, 0x0, 0x0);
        }, _0x498f99.events.add('render', () => {
          const _0x556e51 = Date.now();

          !_0x512e73.streamerReady && _0x422a8b.api.isAuthed() && (_0x512e73.streamerReadyStartTime || (_0x512e73.streamerReadyStartTime = _0x556e51), _0x556e51 - _0x512e73.streamerReadyStartTime >= 0x5dc && (_0x512e73.streamerReady = true)), _0x512e73.streamerReady && _0x190806.update();
        }), _0x498f99.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x1cfc69.Z.forEach(_0x5b4205 => {
            _0x498f99.game.object.doorControl(_0x5b4205.hash, _0x5b4205.x, _0x5b4205.y, _0x5b4205.z, _0x5b4205.locked, 0x0, 0x0, 0x0);
          }), _0x498f99.objects.new(_0x498f99.game.joaat('v_ilev_fh_slidingdoor'), new _0x498f99.Vector3(-8.143847, 513.5021, 173.6281), {
            'rotation': new _0x498f99.Vector3(0x0, 0x0, 0x14a),
            'dimension': -0x1
          }), _0x498f99.objects.new(_0x498f99.game.joaat('v_ilev_fh_slidingdoor'), new _0x498f99.Vector3(0.858, 521.3, 169.65), {
            'rotation': new _0x498f99.Vector3(0x0, 0x0, 0x17),
            'dimension': -0x1
          }), _0x141893();
        });
      },
      0x5c6a: (_0x54f2d6, _0xd2cd1, _0x33094c) => {
        const a0_0x401dd5 = {
          _0x37ccea: 0x1d66,
          _0x24084c: 0xf9d,
          _0x4d432c: 0x1d66,
          _0x58dc71: 0xf2f,
          _0x37a471: 0xf9d,
          _0x489c7b: 0x1800,
          _0x247750: 0x1d66,
          _0x5013a7: 0x5a5,
          _0xd6f0db: 0x1d66,
          _0x314bbd: 0xf9d,
          _0x641c5d: 0x18db,
          _0x25a645: 0xc62,
          _0x4c9ec5: 0xeea,
          _0x5b65a5: 0x1d66,
          _0x5f3f07: 0xf2f,
          _0x44e88e: 0x1d66,
          _0x1429e1: 0xf9d,
          _0x238a59: 0x935,
          _0x23c0f6: 0x1d66,
          _0x496494: 0xf2f,
          _0x5e7d08: 0xf9d,
          _0x398d8a: 0x1d66,
          _0xf8d1a7: 0xf9d,
          _0x3f6401: 0x1f26
        };

        var _0x460a1f = _0x33094c(0x161cd);

        _0x460a1f.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x460a1f.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_01_STAGE', true), _0x460a1f.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM', true), _0x460a1f.game.audio.setStaticEmitterEnabled('LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM', true), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_DLC_Biker_Tequilala_Exterior_Emitter', false), _0x460a1f.game.audio.setStaticEmitterEnabled('collision_9qv4ecm', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_Bogs', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_Entry_Hall', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_Entry_Stairs', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_main_area_2', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_garage', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_main_area', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_office', false), _0x460a1f.game.audio.setStaticEmitterEnabled('SE_ba_dlc_int_01_rear_L_corridor', false), _0x460a1f.game.audio.setStaticEmitterEnabled('se_ba_int_02_ba_workshop_radio', false), _0x460a1f.game.audio.setStaticEmitterEnabled('se_ba_int_03_ba_hktrk_radio', false), _0x460a1f.game.audio.setStaticEmitterEnabled('se_ba_int_02_ba_workshop_radio', false), _0x460a1f.game.audio.setStaticEmitterEnabled('se_ba_int_03_ba_hktrk_radio', false), _0x460a1f.game.audio.setStaticEmitterEnabled('se_ba_int_02_ba_workshop_radio', false), _0x460a1f.game.audio.setStaticEmitterEnabled('collision_781bnha', false), _0x460a1f.game.audio.setStaticEmitterEnabled('collision_781bnhb', false), _0x460a1f.game.audio.setStaticEmitterEnabled('collision_781bnhc', false), _0x460a1f.game.audio.setEmitterRadioStation('dlc_h3_arcade_main_area_music_emitter', 'RADIO_23_DLC_XM19_RADIO');
        });
      },
      0x1569a: (_0x5f1a73, _0x30d1eb, _0x4642aa) => {
        'use strict';

        const a0_0x1fe706 = {
          _0x4a1acd: 0x535,
          _0x5c2e1e: 0x2682,
          _0x502795: 0x1da5,
          _0x5a6485: 0x1912
        },
              a0_0x163839 = {
          _0x1e752c: 0x385,
          _0x4069cd: 0x1912,
          _0x468a11: 0x1d66,
          _0x55a38b: 0x535,
          _0x1397c8: 0x1c66,
          _0x27ffa0: 0x14d2,
          _0x26aa07: 0x1da5,
          _0x4c3b99: 0x1f38
        },
              a0_0x1f2397 = {
          _0xef0163: 0xc15,
          _0x1d6e11: 0x59d
        },
              a0_0x3d3bd6 = {
          _0x315d6c: 0x253d,
          _0x35e4f9: 0xc15,
          _0x1a6486: 0x651
        };

        _0x4642aa.r(_0x30d1eb);

        var _0x449762 = _0x4642aa(0x16a21),
            _0x23899c = _0x4642aa(0x161cd);

        const _0x55a83b = _0x23899c.players.local;

        let _0x202029, _0x5327df;

        [{
          'x': -1200.1284,
          'y': -1570.9903,
          'z': 4.6115,
          'r': 0xd4
        }, {
          'x': -1204.7484,
          'y': -1564.3303,
          'z': 4.6115,
          'r': 0x20
        }, {
          'x': 1643.37,
          'y': 2527.72,
          'z': 45.56,
          'r': 47.78
        }, {
          'x': 1648.94,
          'y': 2529.78,
          'z': 45.56,
          'r': 228.59
        }, {
          'x': 1773.18,
          'y': 2596.72,
          'z': 45.79,
          'r': 266.79
        }, {
          'x': 1773.18,
          'y': 2594.95,
          'z': 45.79,
          'r': 268.01
        }, {
          'x': 2497.427,
          'y': -364.621,
          'z': 94.092,
          'r': 43.151
        }, {
          'x': -1202.98,
          'y': -1565.17,
          'z': 4.61,
          'r': 0xd4
        }, {
          'x': -1198.98,
          'y': -1574.63,
          'z': 4.6,
          'r': 0x20
        }, {
          'x': -1196.97,
          'y': -1572.97,
          'z': 4.61,
          'r': 0x20
        }, {
          'x': 2502.13,
          'y': -360.84,
          'z': 94.09,
          'r': 135.75
        }, {
          'x': 2500.63,
          'y': -365.83,
          'z': 94.09,
          'r': 347.92
        }, {
          'x': 1770.9,
          'y': 2598.52,
          'z': 45.79,
          'r': 181.89
        }, {
          'x': -1201.13,
          'y': -1562.4,
          'z': 4.1,
          'r': 122.89
        }, {
          'x': -1197.71,
          'y': -1568.14,
          'z': 4.1,
          'r': 309.68
        }, {
          'x': -1201.1,
          'y': -1575.34,
          'z': 4.1,
          'r': 216.31
        }, {
          'x': -1206.85,
          'y': -1561.23,
          'z': 4.1,
          'r': 213.39
        }, {
          'x': 1643.25,
          'y': 2535.15,
          'z': 44.95,
          'r': 233.65
        }, {
          'x': 1640.95,
          'y': 2532.5,
          'z': 44.95,
          'r': 226.75
        }, {
          'x': 1638.52,
          'y': 2529.4,
          'z': 44.95,
          'r': 227.82
        }, {
          'x': 1635.96,
          'y': 2526.52,
          'z': 44.95,
          'r': 225.33
        }, {
          'x': 1640.66,
          'y': 2522.16,
          'z': 44.95,
          'r': 233.86
        }, {
          'x': 1768.34,
          'y': 2598.55,
          'z': 45.31,
          'r': 177.1
        }, {
          'x': 1773.1,
          'y': 2598.47,
          'z': 45.31,
          'r': 180.33
        }].forEach((_0x26e770, _0x5dd0f7) => {
          _0x23899c.colshapes.newSphere(_0x26e770.x, _0x26e770.y, _0x26e770.z, 0x1, -0x1).gymId = _0x5dd0f7;
        }), _0x23899c.events.add('playerEnterColshape', _0x437e87 => {
          _0x449762.api.isAuthed() && undefined !== _0x437e87.gymId && null == _0x202029 && (_0x5327df = _0x437e87, _0x449762.api.displayHelpStringTrans('displayHelpString.toDoExercise', false, true, 0x1388));
        }), _0x23899c.events.add('playerExitColshape', _0x9aae96 => {
          _0x449762.api.isAuthed() && undefined !== _0x9aae96.gymId && (_0x5327df = null, _0x23899c.game.ui.clearHelp(true));
        }), _0x23899c.events.add('keys.e', async () => {
          if (!_0x55a83b.isDead() && !_0x23899c.gui.cursor.visible) {
            if (null != _0x202029) _0x23899c.events.callRemote('1370562814'), _0x23899c.game.ui.clearHelp(true), _0x202029 = null, _0x449762.api.usingSystemAnim(false);else {
              if (null == _0x5327df) return;
              _0x23899c.game.ui.clearHelp(true), _0x23899c.events.callRemote('3509852242', _0x5327df.gymId), _0x5327df = undefined;
            }
          }
        }), _0x23899c.events.add('world.gym.start', _0x569748 => {
          _0x202029 = _0x569748, _0x55a83b.freezePosition(true), _0x23899c.events.call('buttonPress.init', 'gym'), _0x449762.api.usingSystemAnim(true);
        }), _0x23899c.events.add('buttonPress.gym.stop', () => {
          _0x55a83b.freezePosition(false), _0x23899c.events.call('buttonPress.stop'), _0x449762.api.stopAnim(), _0x449762.api.usingSystemAnim(false), _0x202029 = undefined, _0x23899c.events.callRemote('1370562814', true);
        }), _0x23899c.events.add('playerDeath2', _0x3eaee0 => {
          _0x202029 && _0x3eaee0 === _0x55a83b && (_0x202029 = undefined, _0x449762.api.usingSystemAnim(false), _0x23899c.events.call('buttonPress.stop'), _0x23899c.events.callRemote('1370562814'));
        });
      },
      0x987: (_0x1ead0f, _0xd4da8b, _0x17bb13) => {
        _0x17bb13(0xc1e4), _0x17bb13(0x48c4), _0x17bb13(0xc11e), _0x17bb13(0x4f42), _0x17bb13(0xa04a), _0x17bb13(0x1569a), _0x17bb13(0x1f4a), _0x17bb13(0x78b), _0x17bb13(0x10df8), _0x17bb13(0x5c6a), _0x17bb13(0x64b7), _0x17bb13(0x3741), _0x17bb13(0xa327), _0x17bb13(0x52b6);
      },
      0xc11e: (_0x391055, _0x4952d2, _0x21a3de) => {
        'use strict';

        const a0_0x269240 = {
          _0x4917a6: 0xba6,
          _0x4e3f7a: 0xba6,
          _0x95a54d: 0x744
        },
              a0_0x13a277 = {
          _0x107eaa: 0x11dc,
          _0xd76c23: 0x6da,
          _0x3e369d: 0x5e2,
          _0x503b7b: 0x1d66,
          _0x52753f: 0x1f30,
          _0x308887: 0x1d66,
          _0x2dc874: 0x1fe9,
          _0xaebeb6: 0x549,
          _0x2b65e0: 0x1e3d
        },
              a0_0x5bb6d5 = {
          _0x2164a8: 0x19e6
        },
              a0_0x517e26 = {
          _0x51d866: 0xca4,
          _0x2da809: 0x1a2c,
          _0x1cd868: 0x1d2,
          _0x5dd302: 0x135a,
          _0x44f68d: 0x1a2c,
          _0x42d7c5: 0x135a,
          _0x2e504c: 0x19b6,
          _0x5a7bc9: 0x19b6,
          _0x32b29d: 0x1560,
          _0x3ab8c8: 0x19d2,
          _0x5ab54a: 0x235b,
          _0x245445: 0x1291,
          _0x2a035c: 0x235b,
          _0x4b4ffc: 0xba6,
          _0x1e8270: 0x2530,
          _0x21cab6: 0xba6,
          _0x2f7abd: 0xba6,
          _0x54463a: 0x2530
        },
              a0_0x2e6b5b = {
          _0x324472: 0x1d90,
          _0x41d17a: 0x19d2,
          _0x5796c7: 0x24a3
        };
        _0x21a3de.r(_0x4952d2), _0x21a3de.d(_0x4952d2, {
          'isPlayerOnChair': () => _0x1f0998
        });

        var _0x1b3029 = _0x21a3de(0x16a21),
            _0x456b45 = _0x21a3de(0x9c9),
            _0x1f3d6f = _0x21a3de(0x18183),
            _0x338e1f = _0x21a3de(0x17203),
            _0x360894 = _0x21a3de(0x17d19),
            _0x15d144 = _0x21a3de(0x161cd);

        const _0x45a4fa = _0x21a3de.g.requireAsset('seatsPositions');

        for (const _0x595361 of _0x338e1f.Z) _0x595361.modelData = {
          'name': _0x595361.model,
          'hash': _0x15d144.game.joaat(_0x595361.model)
        }, delete _0x595361.model, _0x595361.hash = _0x15d144.game.joaat(_0x595361.modelData.hash + '^' + _0x595361.position.x + '^' + _0x595361.position.y + '^' + _0x595361.position.z), _0x595361.custom = true;

        const _0x983555 = _0x456b45.Z.split('|').map(_0x24a698 => ({
          'name': _0x24a698,
          'hash': _0x15d144.game.joaat(_0x24a698)
        }));

        let _0x2872d5 = [];

        for (let _0x306dd9 = 0x0; _0x306dd9 < _0x45a4fa.length; _0x306dd9++) {
          const _0x1926aa = _0x45a4fa[_0x306dd9];

          _0x2872d5.push({
            'modelData': _0x983555[_0x1926aa.modelIndex],
            ..._0x1926aa
          });
        }

        _0x2872d5 = [..._0x2872d5, ..._0x338e1f.Z];

        for (let _0xd790f4 = 0x0; _0xd790f4 < _0x2872d5.length; _0xd790f4++) {
          const _0x3e2203 = _0x2872d5[_0xd790f4],
                _0x53520d = _0x1f3d6f.Z[_0x3e2203.modelData.name];
          _0x53520d && _0x53520d.offsetTrigger ? _0x3e2203.triggerPosition = _0x15d144.game.object.getObjectOffsetFromCoords(_0x3e2203.position.x, _0x3e2203.position.y, _0x3e2203.position.z, _0x3e2203.rotation.z + 0xb4, _0x53520d.offsetTrigger.x || 0x0, _0x53520d.offsetTrigger.y || 0x0, _0x53520d.offsetTrigger.z || 0x0) : _0x3e2203.triggerPosition = _0x3e2203.position;
        }

        const _0x7bbfde = new _0x360894.Z({
          'dataItems': _0x2872d5,
          'chunkSize': 0x64,
          'distance': 0x96,
          'positionResolver': _0x467157 => _0x467157.triggerPosition,
          'streamDelay': 0x9c4,
          'isCheck3d': false,
          'type': 'point'
        }),
              _0x3f7aef = Date.now(),
              _0x33937b = {
          'state': 0x0,
          'lastUpdateStream': _0x3f7aef,
          'lastUpdateSitKey': _0x3f7aef,
          'seatsData': [],
          'activeStreamer': false,
          'active': true
        },
              _0x269880 = _0x15d144.players.local;

        function _0x372878(_0x23c98c, _0x188ef9) {
          if (!Array.isArray(_0x23c98c) || !Array.isArray(_0x188ef9) || _0x23c98c.length !== _0x188ef9.length) return false;

          const _0x413c53 = _0x23c98c.concat().sort(),
                _0x50322b = _0x188ef9.concat().sort();

          for (let _0x389f6f = 0x0; _0x389f6f < _0x413c53.length; _0x389f6f++) if (_0x413c53[_0x389f6f] !== _0x50322b[_0x389f6f]) return false;

          return true;
        }

        const _0x24b6a4 = _0x516a6b => {
          const _0x27c1a6 = _0x516a6b.seatData;
          if (!_0x27c1a6) return;
          const _0x1d3cad = _0x2872d5[_0x27c1a6.seatId];

          let _0x537937 = new _0x15d144.Vector3(0x0, 0x0, 0.5),
              _0x2e6604 = new _0x15d144.Vector3(0x0, 0x0, 0x0),
              _0x145d77 = new _0x15d144.Vector3(0x0, 0.7, 0.5);

          const _0x58813a = _0x1f3d6f.Z[_0x1d3cad.modelData.name];
          let _0x32ec7a = 'PROP_HUMAN_SEAT_BENCH';

          if (_0x58813a) {
            const _0x102ec1 = _0x27c1a6.chairId || 0x0,
                  _0x5a240f = _0x58813a.chairOffset && _0x58813a.chairOffset[_0x102ec1];

            if ('string' == typeof _0x58813a.scenarioName && (_0x32ec7a = _0x58813a.scenarioName), undefined !== _0x58813a.exitOffset && (_0x145d77 = new _0x15d144.Vector3(_0x58813a.exitOffset.x || 0x0, _0x58813a.exitOffset.y || 0.7, _0x58813a.exitOffset.z || 0.5)), undefined === _0x5a240f) {
              const _0x4f23ad = _0x58813a.offset.x || 0x0;

              _0x58813a.offset && (_0x537937 = new _0x15d144.Vector3(_0x4f23ad + -0x1 * Math.abs(_0x58813a.seatStep || _0x4f23ad) * _0x102ec1, _0x58813a.offset.y || 0x0, 'number' == typeof _0x58813a.offset.z ? _0x58813a.offset.z : 0.5)), _0x58813a.rotationOffset && (_0x2e6604 = new _0x15d144.Vector3(_0x58813a.rotationOffset.x || 0x0, _0x58813a.rotationOffset.y || 0x0, _0x58813a.rotationOffset.z || 0x0));
            } else _0x5a240f.position && (_0x537937 = new _0x15d144.Vector3(_0x5a240f.position.x || 0x0, _0x5a240f.position.y || 0x0, 'number' == typeof _0x5a240f.position.z ? _0x5a240f.position.z : 0.5)), _0x2e6604 = new _0x15d144.Vector3(0x0, 0x0, _0x5a240f.rotation || 0x0);
          }

          const _0x453227 = _0x15d144.game.object.getObjectOffsetFromCoords(_0x1d3cad.position.x, _0x1d3cad.position.y, _0x1d3cad.position.z, _0x1d3cad.rotation.z + 0xb4 + _0x2e6604.z, _0x537937.x, _0x537937.y, _0x537937.z);

          _0x516a6b.taskStartScenarioAtPosition(_0x32ec7a, _0x453227 ? _0x453227.x : _0x1d3cad.position.x, _0x453227 ? _0x453227.y : _0x1d3cad.position.y, _0x453227 ? _0x453227.z : _0x1d3cad.position.z, _0x1d3cad.rotation.z + 0xb4 + _0x2e6604.z, -0x1, false, true), _0x516a6b.seatData.exitOffset = _0x145d77, _0x516a6b.seatData.scenarioName = _0x32ec7a, _0x516a6b.seatData.position = _0x453227, _0x516a6b.seatData.heading = _0x1d3cad.rotation.z + 0xb4 + _0x2e6604.z, _0x516a6b === _0x269880 && (_0x1b3029.api.usingSystemAnim(true));
        },
              _0x1b02e8 = (_0x366f76, _0x5303c0) => {
          if (!_0x15d144.players.exists(_0x366f76)) return;
          const _0x298841 = _0x366f76.position;

          _0x366f76.clearTasksImmediately();

          const _0x20f22f = _0x5303c0.exitOffset || new _0x15d144.Vector3(0x0, 0x0, 0x0),
                _0x3f5d2c = _0x15d144.game.object.getObjectOffsetFromCoords(_0x298841.x, _0x298841.y, _0x298841.z, _0x366f76.getHeading(), _0x20f22f.x, _0x20f22f.y, _0x20f22f.z);

          _0x366f76.setCoordsNoOffset(_0x3f5d2c ? _0x3f5d2c.x : _0x5303c0.position.x, _0x3f5d2c ? _0x3f5d2c.y : _0x5303c0.position.y, _0x3f5d2c ? _0x3f5d2c.z : _0x5303c0.position.z, true, false, false), _0x366f76 === _0x269880 && (_0x1b3029.api.usingSystemAnim(false), _0x33937b.active = false);
        },
              _0x467ffd = _0x4c1442 => {
          const a0_0x529a02 = {
            _0x2ad193: 0x12dd
          },
                _0x48f796 = ((_0x8fabe9 = _0x15d144.world.data.seatsData) => 'string' == typeof _0x8fabe9 && _0x8fabe9.length ? _0x8fabe9.split('^').map(_0x26a7f3 => {
            const a0_0x4d0732 = {
              _0x4756b8: 0x12dd
            },
                  [_0x9f9e93, ..._0x587964] = _0x26a7f3.split('&');

            return {
              'seatId': parseInt(_0x9f9e93),
              'chairs': _0x587964.map(_0x369e3a => {
                const [_0x2e3031, _0x2058c4] = _0x369e3a.split('|');

                return {
                  'playerId': parseInt(_0x2e3031),
                  'chairIndex': parseInt(_0x2058c4)
                };
              })
            };
          }) : [])(_0x4c1442);

          let _0x4f5e69 = _0x33937b.seatsData.filter(_0x508a42 => !_0x48f796.find(_0x28b549 => _0x28b549.seatId === _0x508a42.seatId && _0x372878(_0x28b549.chairs.map(_0x548b17 => _0x548b17.playerId), _0x508a42.chairs.map(_0x1461d7 => _0x1461d7.playerId)))),
              _0x52abe1 = _0x48f796.filter(_0x12b9f9 => !_0x33937b.seatsData.find(_0x2ebab7 => _0x12b9f9.seatId === _0x2ebab7.seatId && _0x372878(_0x12b9f9.chairs.map(_0x5167e1 => _0x5167e1.playerId), _0x2ebab7.chairs.map(_0x23f19d => _0x23f19d.playerId))));

          const _0x72649a = [];

          for (const _0xb38578 of _0x52abe1) {
            const _0x2861fc = _0x4f5e69.find(_0x4fdbed => _0x4fdbed.seatId === _0xb38578.seatId);

            _0x2861fc && (_0x4f5e69 = _0x4f5e69.filter(_0x3ab819 => _0x3ab819 !== _0x2861fc), _0x52abe1 = _0x52abe1.filter(_0x3616ad => _0x3616ad !== _0xb38578), _0x72649a.push({
              'seatId': _0xb38578.seatId,
              'oldChairs': _0x2861fc.chairs.filter(_0x372138 => !_0xb38578.chairs.find(_0x2b8233 => _0x2b8233.playerId === _0x372138.playerId)),
              'newChairs': _0xb38578.chairs.filter(_0x377a4b => !_0x2861fc.chairs.find(_0x49afdb => _0x49afdb.playerId === _0x377a4b.playerId))
            }));
          }

          _0x33937b.seatsData = _0x48f796;
          const _0x2507ce = {},
                _0x38cef5 = {};

          for (const _0x492ee6 of _0x52abe1) _0x2507ce[_0x492ee6.seatId] = _0x492ee6.chairs;

          for (const _0xb94bed of _0x4f5e69) _0x38cef5[_0xb94bed.seatId] = _0xb94bed.chairs;

          for (const _0x3b2a99 of _0x72649a) _0x2507ce[_0x3b2a99.seatId] = _0x3b2a99.newChairs, _0x38cef5[_0x3b2a99.seatId] = _0x3b2a99.oldChairs;

          for (const _0x598a66 in _0x2507ce) {
            const _0x2b9768 = _0x2507ce[_0x598a66];

            for (let _0x1afe81 = 0x0; _0x1afe81 < _0x2b9768.length; _0x1afe81++) {
              const {
                playerId: _0x48bada,
                chairIndex: _0x32ceb4
              } = _0x2b9768[_0x1afe81],
                    _0x34e654 = _0x15d144.players.atRemoteId(_0x48bada);

              _0x15d144.players.exists(_0x34e654) && (_0x34e654.seatData = {
                'seatId': _0x598a66,
                'chairId': _0x32ceb4
              }, _0x34e654.handle && _0x24b6a4(_0x34e654));
            }
          }

          for (const _0x16f33c in _0x38cef5) {
            const _0x739bb = _0x38cef5[_0x16f33c];

            for (let _0xe1fdfc = 0x0; _0xe1fdfc < _0x739bb.length; _0xe1fdfc++) {
              const {
                playerId: _0x4d4b54
              } = _0x739bb[_0xe1fdfc],
                    _0x5d515e = _0x15d144.players.atRemoteId(_0x4d4b54);

              if (!_0x15d144.players.exists(_0x5d515e)) continue;
              const _0x29333a = _0x5d515e.seatData;
              _0x5d515e.seatData = null, _0x5d515e.handle && _0x1b02e8(_0x5d515e, _0x29333a);
            }
          }
        };

        _0x15d144.events.add('worldDataReady', () => {
          _0x467ffd();
        }), _0x15d144.events.add('worldDataChanged', (_0x263ce9, _0x5c6d30) => {
          'seatsData' === _0x263ce9 && _0x467ffd(_0x5c6d30);
        }), _0x15d144.events.add('entityStreamIn', async _0x3f7e62 => {
          'player' === _0x3f7e62.type && _0x24b6a4(_0x3f7e62);
        });

          _0x154305 && (_0x154305.chairs = _0x154305.chairs.filter(_0xea54e4 => _0xea54e4.playerId !== _0x43bef4.remoteId), _0x154305.chairs.length || (_0x33937b.seatsData = _0x33937b.seatsData.filter(_0x510d5d => _0x510d5d !== _0x154305)));
        }), _0x15d144.events.add('keys.e', () => {
          if (_0x15d144.game.player.isFreeAiming() || _0x15d144.players.local.isDead() || _0x15d144.gui.cursor.visible || _0x15d144.players.local.getVariable('fun.minigames.playing') || _0x21a3de.g.playableInstrument || _0x15d144.players.local.vehicle || _0x21a3de.g.currentInterface || !_0x33937b.active && _0x15d144.players.local.activeItemId || !_0x33937b.active && true === _0x15d144.players.local.getVariable('isFollowing') || _0x15d144.players.local.getVariable('playerInTrunk')) return;

          const _0x33c097 = Date.now();

          if (_0x33c097 < _0x33937b.lastUpdateSitKey + 0x3e8) return;
          if (_0x33937b.lastUpdateSitKey = _0x33c097, _0x33937b.active) return void _0x15d144.events.callRemote('3141493525');
          let _0x40807c = [];
          const _0x447f36 = _0x269880.position;

          for (const _0x1da253 of _0x7bbfde.currentItems) {
            if (!_0x1da253.custom && 'number' != typeof _0x1da253.objectHandle) continue;

            const _0x423e5e = _0x1b3029.api.vdist2(_0x1da253.triggerPosition, _0x447f36);

            _0x423e5e <= 1.5 && _0x40807c.push({
              'seatData': _0x1da253,
              'distance': _0x423e5e
            });
          }

          if (!_0x40807c.length) return;

          _0x40807c.sort((_0x7baa54, _0x1ccc0f) => _0x7baa54.distance - _0x1ccc0f.distance);

          const _0x235f49 = _0x40807c[0x0].seatData;
          let _0xec6236 = 0x1;
          const _0x180569 = _0x1f3d6f.Z[_0x235f49.modelData.name];
          _0x180569 && (_0xec6236 = _0x180569.seats || 0x1);

          const _0x3f0eaa = _0x2872d5.indexOf(_0x235f49),
                _0x7f9453 = _0x33937b.seatsData.find(_0x1f6154 => _0x1f6154.seatId === _0x3f0eaa);

          _0x7f9453 && _0x7f9453.chairs.length >= _0xec6236 ? _0x1b3029.api.longNotifyTrans('world.seats.noSeats', 'error') : _0x15d144.events.callRemote('1786035486', _0x3f0eaa, _0xec6236);
        }), (_0x7bbfde.onEnter = _0x4eebdc => {
          if (!(_0x4eebdc.badModel || _0x4eebdc.object && 'number' == typeof _0x4eebdc.objectHandle)) {
            const _0x5f03fa = _0x15d144.game.object.getClosestObjectOfType(_0x4eebdc.position.x, _0x4eebdc.position.y, _0x4eebdc.position.z, 0.25, _0x4eebdc.modelData.hash >> 0x0, false, true, true);

            _0x5f03fa && (_0x4eebdc.objectHandle = _0x5f03fa, _0x15d144.game.entity.setCoordsNoOffset(_0x4eebdc.objectHandle, _0x4eebdc.position.x + 0.000001, _0x4eebdc.position.y + 0.000001, _0x4eebdc.position.z + 0.000001, false, false, false), _0x15d144.game.entity.setRotation(_0x4eebdc.objectHandle, _0x4eebdc.rotation.x + 0.000001, _0x4eebdc.rotation.y + 0.000001, _0x4eebdc.rotation.z + 0.000001, 0x0, true), _0x15d144.game.entity.freezePosition(_0x4eebdc.objectHandle, true));
          }
        }, _0x7bbfde.onExit = _0x3a8e92 => {
          _0x15d144.objects.exists(_0x3a8e92.object) && _0x3a8e92.object.destroy(), _0x3a8e92.object = null;
        }, _0x15d144.events.add('render', () => {
          const a0_0x4d9ee5 = {
            _0x56b233: 0x59d,
            _0x58ace9: 0x535,
            _0x512ca8: 0xf86,
            _0x38483d: 0x6a0,
            _0x2fbef7: 0x535,
            _0xddd118: 0xf86
          },
                _0x2cd3c8 = Date.now();

          if (!_0x33937b.streamerReady && _0x1b3029.api.isAuthed() && (_0x33937b.streamerReadyStartTime || (_0x33937b.streamerReadyStartTime = _0x2cd3c8), _0x2cd3c8 - _0x33937b.streamerReadyStartTime >= 0x3e8 && (_0x33937b.streamerReady = true)), !_0x33937b.streamerReady) return;

          _0x7bbfde.update();

          const _0x23772b = _0x269880.position;
          _0x2cd3c8 >= _0x33937b.lastUpdateStream + 0x9c4 && (_0x33937b.lastUpdateStream = _0x2cd3c8, _0x15d144.players.forEachInStreamRange(_0x2bd926 => {
            if (_0x2bd926.seatData && _0x2bd926.seatData.position && !_0x2bd926.isActiveInScenario()) {
              const {
                position: _0x1d19ff,
                heading: _0x3abd34,
                scenarioName: _0x19021d
              } = _0x2bd926.seatData;

              _0x2bd926.taskStartScenarioAtPosition(_0x19021d, _0x1d19ff.x, _0x1d19ff.y, _0x1d19ff.z, _0x3abd34, -0x1, false, true);
            }
          }));
          let _0x4a49f0 = 0x0;
          if (_0x33937b.active) _0x4a49f0 = 0x1;else for (const _0x2e3e4a of _0x7bbfde.currentItems) {
            if (!_0x2e3e4a.custom && 'number' != typeof _0x2e3e4a.objectHandle) continue;
            _0x1b3029.api.vdist2(_0x2e3e4a.triggerPosition, _0x23772b) <= 1.5 && (_0x4a49f0 = 0x2);
          }
          _0x33937b.state !== _0x4a49f0 && (_0x33937b.state = _0x4a49f0, (_0x4af804 => {
            0x0 === _0x4af804 ? _0x15d144.game.ui.clearHelp(true) : 0x1 === _0x4af804 ? _0x1b3029.api.displayHelpStringTrans('displayHelpString.toGetUp', false, true, 0x1388) : 0x2 === _0x4af804 && _0x1b3029.api.displayHelpStringTrans('displayHelpString.toSeat', false, true, 0x1388);
          })(_0x4a49f0));
        }));

        const _0x1f0998 = () => !!_0x33937b.active;
      },
      0xa327: (_0x41e0d0, _0x20e4b6, _0x95e329) => {
        'use strict';

        const a0_0x34db92 = {
          _0x3d298d: 0x2ae,
          _0x4af201: 0x610
        };
        _0x95e329.r(_0x20e4b6), _0x95e329.d(_0x20e4b6, {
          'serverLinks': () => _0x307243,
          'serverRegion': () => _0x96e479
        });

        var _0x338a4a = _0x95e329(0x12a76),
            _0x2748b9 = _0x95e329(0x161cd);

        let _0x96e479 = 'RU',
            _0x307243 = {
          'website': 'majestic-rp.ru',
          'discord': 'discord.gg/majestic',
          'vk': 'vk.com/majestic_gta5'
        };
        _0x2748b9.events.add('setServerRegion', _0x1ec822 => {
          _0x96e479 = _0x1ec822;
        }), _0x2748b9.events.add('setServerSocialLinks', _0x19019d => {
          _0x307243 = _0x19019d, _0x2889e1();
        }), _0x2748b9.events.add('vue.mounted', () => {
          _0x2889e1();
        });

        const _0x2889e1 = () => {
          const _0x55fb89 = [];

          for (const [_0x47119a, _0x35600] of Object.entries(_0x307243)) _0x55fb89.push({
            'src': _0x47119a,
            'link': _0x35600
          });

          _0x338a4a.globalBrowser.emit('main_setServerLinks', _0x55fb89);
        };
      },
      0x48c4: (_0x51b410, _0x2ba4bb, _0x4473fe) => {
        'use strict';

        const a0_0x39f00d = {
          _0x3604fc: 0x2488,
          _0x168151: 0x1a3,
          _0x41f87d: 0x578
        },
              a0_0x7d0414 = {
          _0x44eb58: 0x21ae,
          _0x2b76dc: 0x149d,
          _0xec0d06: 0x1a3,
          _0x2e63f6: 0xd01,
          _0x1583ce: 0x149d
        },
              a0_0xaf06fd = {
          _0x5ef5df: 0x24a
        };
        _0x4473fe.r(_0x2ba4bb), _0x4473fe.d(_0x2ba4bb, {
          'getServerTime': () => _0x1b8e03,
          'getServerTimezone': () => _0x439a24
        });

        var _0x53b100 = _0x4473fe(0x12a76),
            _0x1a71ac = _0x4473fe(0x161cd);

        const _0x275686 = {
          'requestTimeStart': 0x0,
          'offsetServerTime': 0x0,
          'timezone': 'Europe/Moscow'
        };
        _0x1a71ac.events.add('serverTime.setTimezone', _0x83c212 => {
          _0x275686.timezone = _0x83c212;
        }), _0x1a71ac.events.add('serverTime.response', _0x2c61e9 => {
          const _0x25a1b2 = parseInt(_0x2c61e9, 0x10),
                _0x106bff = Date.now(),
                _0x27ff37 = _0x106bff - _0x275686.requestTimeStart;

          _0x275686.offsetServerTime = _0x25a1b2 + _0x27ff37 - _0x106bff, _0x53b100.globalBrowser.emit('main_setServerTimeOffset', _0x275686.offsetServerTime);
        }), _0x1a71ac.events.add('vue.mounted', () => {
          _0x53b100.globalBrowser.emit('main_setServerTimeOffset', _0x275686.offsetServerTime);
        }), _0x1a71ac.events.add('auth.client.onPlayerAuthAccount', () => {
          _0x53b100.globalBrowser.emit('main_setServerTimezone', 'Europe/Moscow');
        });

        const _0x1b8e03 = () => Date.now() + _0x275686.offsetServerTime,
              _0x439a24 = () => 'Europe/Moscow';

        _0x1a71ac.events.add('time.every5Sec', () => {
          _0x275686.requestTimeStart = Date.now(), _0x1a71ac.events.callRemote('2552865942');
        });
      },
      0x3741: (_0x2573c7, _0x500bc1, _0x47df44) => {
        'use strict';

        const a0_0x1abbe3 = {
          _0x832516: 0x12f7,
          _0x543d2d: 0x1da5
        },
              a0_0x5320ff = {
          _0x30a189: 0x12f7
        };

        _0x47df44.r(_0x500bc1);

        var _0x30dd78 = _0x47df44(0x16a21),
            _0x2ff4fd = _0x47df44(0x161cd);

        const _0x4d5d9c = _0x2ff4fd.players.local;
        [{
          'x': 14.86,
          'y': -1093.41,
          'z': 29.79
        }, {
          'x': 821.31,
          'y': -2167.96,
          'z': 29.61
        }, {
          'x': 2479.96,
          'y': -391.13,
          'z': 82.69
        }].forEach(_0x55bc2d => {
          _0x2ff4fd.colshapes.newSphere(_0x55bc2d.x, _0x55bc2d.y, _0x55bc2d.z, 0x9).isShootingRange = true;
        }), _0x2ff4fd.events.add('playerEnterColshape', _0x40928e => {
          _0x2ff4fd.colshapes.exists(_0x40928e) && _0x30dd78.api.isAuthed(_0x4d5d9c) && _0x40928e.isShootingRange && (_0x4d5d9c.inShootingRange = true, _0x2ff4fd.events.callRemote('947410234'));
        }), _0x2ff4fd.events.add('playerExitColshape', _0x2129b7 => {
          _0x30dd78.api.isAuthed(_0x4d5d9c) && _0x2129b7.isShootingRange && (delete _0x4d5d9c.inShootingRange, _0x2ff4fd.events.callRemote('3591941722'));
        });
      },
      0x1f4a: (_0x14f576, _0x203d0c, _0x409eaa) => {
        'use strict';

        const a0_0x5f1997 = {
          _0x3c21b6: 0x103e,
          _0x259410: 0xfa6,
          _0x28e8d2: 0x1a07,
          _0xe5f31b: 0x1934,
          _0x5627c9: 0x1da5,
          _0x50db86: 0x2615,
          _0x5d048d: 0x4c2
        },
              a0_0x111d01 = {
          _0x2b353f: 0x1d66
        },
              a0_0x40e2ed = {
          _0x1e3663: 0x535,
          _0x1ecf17: 0x4b9,
          _0x5b74a4: 0x103e,
          _0x5cc7bc: 0x1157,
          _0x1259b7: 0x1dc6,
          _0xbec460: 0x1f30,
          _0x24d823: 0x2288,
          _0x220d47: 0x1a07,
          _0x470099: 0x1934,
          _0x45bfbb: 0xf86,
          _0x45acc4: 0x13ea,
          _0x254716: 0x24b8,
          _0x468361: 0x18a
        };

        _0x409eaa.r(_0x203d0c);

        var _0x325010 = _0x409eaa(0x16a21),
            _0x39b2e7 = _0x409eaa(0x155bc),
            _0x3a871b = _0x409eaa(0x161cd);

        const _0x20eace = _0x3a871b.players.local;

        let _0x4520af, _0x2a5033, _0x1abb5a;

        const _0x33b6fd = {
          'prop_vend_soda_01': {
            'name': 'eCola',
            'price': 0xfa
          },
          'prop_vend_soda_02': {
            'name': 'eCola',
            'price': 0xfa
          },
          'prop_vend_snak_01': {
            'name': 'Ego Chaser',
            'price': 0xfa
          }
        };
        _0x39b2e7.Z.forEach(_0x270780 => {
          const _0x4688ac = _0x3a871b.game.object.getObjectOffsetFromCoords(_0x270780.position.x, _0x270780.position.y, _0x270780.position.z, _0x270780.rotation, 0x0, -0.97, 0.05),
                _0xa728d6 = _0x3a871b.colshapes.newCircle(_0x4688ac.x, _0x4688ac.y, 0x1);

          _0xa728d6.pos = new _0x3a871b.Vector3(_0x4688ac.x, _0x4688ac.y, _0x4688ac.z), _0xa728d6.isVendingMachine = true, _0xa728d6.standAt = new _0x3a871b.Vector3(_0x4688ac.x, _0x4688ac.y, _0x4688ac.z), _0xa728d6.heading = _0x270780.rotation;
          const _0x11775e = _0x33b6fd[_0x270780.name];
          _0xa728d6.defObject = _0x270780.name, _0xa728d6.defName = _0x11775e.name, _0xa728d6.defPrice = _0x11775e.price;
        }), _0x3a871b.events.add('playerEnterColshape', _0x2bfb24 => {
          if (_0x325010.api.isAuthed() && !_0x20eace.vehicle && _0x2bfb24.isVendingMachine && !(Math.abs(_0x2bfb24.pos.z - _0x20eace.position.z) > 0x2)) {
            if (_0x20eace.activeItemId) return _0x325010.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
            _0x4520af = _0x2bfb24, _0x325010.api.displayHelpStringTrans('displayHelpString.toBuyVending', {
              'title': _0x2bfb24.defName,
              'amount': _0x2bfb24.defPrice
            }, false, true, 0x1388);
          }
        }), _0x3a871b.events.add('playerExitColshape', _0x554ca0 => {
          _0x4520af && _0x554ca0 === _0x4520af && (_0x3a871b.game.ui.clearHelp(true), _0x4520af = null);
        }), _0x3a871b.events.add('keys.e', () => {
          if (_0x4520af && _0x4520af.isVendingMachine && !_0x409eaa.g.isUsingSystemAnim && !_0x20eace.vehicle) {
            if (_0x20eace.activeItemId) return _0x325010.api.longNotifyTrans('user.removeActiveItemFirst', 'error');
            _0x2a5033 = _0x4520af.standAt, _0x1abb5a = _0x4520af.heading, _0x3a871b.events.callRemote('3727212451', _0x4520af.defObject), _0x4520af = null;
          }
        }), _0x3a871b.events.add('fun.vendingMachine.onBuySuccess', async (_0x47182c, _0x54e2c7) => {
          _0x325010.api.usingSystemAnim(true), _0x20eace.freezePosition(true), _0x325010.api.setDiscordStatus('vendingMachine'), _0x325010.api.setPlayerPos(_0x20eace, _0x2a5033), _0x20eace.setHeading(_0x1abb5a);
          const _0x3c8bec = 'MINI@SPRUNK@FIRST_PERSON';
          let _0x2b3bc1 = 0x0;
          _0x3a871b.game.audio.requestAmbientAudioBank('VENDING_MACHINE', false), _0x2b3bc1 = await _0x325010.api.taskPlayAnim(_0x3c8bec, 'PLYR_BUY_DRINK_PT1', 0x0, false), await _0x3a871b.game.sleep(0x2b5), _0x3a871b.attachments.addLocal(_0x3a871b.game.joaat(_0x47182c)), await _0x3a871b.game.sleep(6098.4), _0x2b3bc1 = await _0x325010.api.taskPlayAnim(_0x3c8bec, 'PLYR_BUY_DRINK_PT2', 0x0, false), await _0x3a871b.game.sleep(0x7a8), _0x2b3bc1 = await _0x325010.api.taskPlayAnim(_0x3c8bec, 'PLYR_BUY_DRINK_PT3', 0x0, false), await _0x3a871b.game.sleep(734.4000000000001), _0x3a871b.attachments.removeLocal(_0x3a871b.game.joaat(_0x47182c)), await _0x3a871b.game.sleep(1425.6), _0x20eace.freezePosition(false), _0x325010.api.usingSystemAnim(false), _0x325010.api.setDiscordStatus(), _0x3a871b.events.callRemote('2185259075', _0x54e2c7);
        });
      },
      0x4f42: (_0x55cefc, _0xecf6b5, _0x463e9b) => {
        'use strict';

        const a0_0x3f7317 = {
          _0x4b7c32: 0x2310,
          _0xac6af3: 0x1383
        },
              a0_0x17c533 = {
          _0x5c0eac: 0x1d66,
          _0x30f28a: 0x186b,
          _0x36c525: 0x23d5,
          _0x4f728b: 0x1d66,
          _0x33e92c: 0x186b,
          _0x3eb290: 0x2488,
          _0x297cd3: 0x1a3,
          _0x3c1b02: 0x1383,
          _0x53c202: 0x437
        },
              a0_0x5705c1 = {
          _0x271026: 0x186b,
          _0x572d11: 0x164f,
          _0x32671e: 0x23d5,
          _0x43d063: 0x1d66,
          _0xa7de5a: 0x2310,
          _0x408123: 0x147d,
          _0x25705b: 0x1a3,
          _0x1caf85: 0x125d,
          _0x26403f: 0x147d,
          _0x37577a: 0x1383,
          _0x399671: 0x437,
          _0x11d552: 0x1a38
        },
              a0_0x392ab9 = {
          _0x75b07c: 0x147d
        },
              a0_0x1ae31b = {
          _0x3615f9: 0x1331
        },
              a0_0x180f47 = {
          _0x6ac2be: 0x1dac
        };
        _0x463e9b.r(_0xecf6b5), _0x463e9b.d(_0xecf6b5, {
          'WeatherController': () => _0xacdd8
        });

        var _0x215262 = _0x463e9b(0x12a76),
            _0x4e34e4 = _0x463e9b(0xa04a),
            _0x2bea4b = _0x463e9b(0x161cd);

        _0x2bea4b.events.add('weather.setNew', (_0xd0a9a, _0xb42ca9 = 0x0, _0x376498 = 0x14) => {
          _0xacdd8.setNew(_0xd0a9a, _0xb42ca9, _0x376498);
        }), _0x2bea4b.events.add('weather.setLocal', (_0x4b1d41, _0x47f842 = 0x0) => {
          _0xacdd8.setLocal(_0x4b1d41, _0x47f842);
        }), _0x2bea4b.events.add('weather.restore', (_0x3ade5b, _0x221ada = 0x0) => {
          _0xacdd8.restore();
        }), _0x2bea4b.events.add('weather.setWind', (_0x6d9a37, _0x3d025a) => {
          _0xacdd8.setWind(_0x6d9a37, _0x3d025a);
        });

        const _0xacdd8 = new class {
          constructor() {
            this.currentWeather = 'EXTRASUNNY', this.temperature = 0x14;
          }

          ['setNew'](_0x30691d, _0x1c99f4 = 0xa, _0x5d7de4 = 0x14) {
            this.currentWeather = _0x30691d, this.temperature = _0x5d7de4, _0x1c99f4 > 0x0 ? (_0x2bea4b.game.gameplay.setWeatherTypeOverTime(_0x30691d, _0x1c99f4), _0x2bea4b.game.gameplay.setWeatherTypePersist(this.currentWeather)) : _0x2bea4b.game.gameplay.setWeatherTypeNowPersist(this.currentWeather), _0x215262.globalBrowser.emit('main_setWeather', {
              'weatherType': this.currentWeather,
              'dayType': _0x4e34e4.clockController.getDayType(),
              'temperature': this.temperature
            });
          }

          ['setLocal'](_0x3e41ba, _0x4b6f97 = 0xa) {
            _0x4b6f97 > 0x0 ? (_0x2bea4b.game.gameplay.setWeatherTypeOverTime(_0x3e41ba, _0x4b6f97), _0x2bea4b.game.gameplay.setWeatherTypePersist(_0x3e41ba)) : _0x2bea4b.game.gameplay.setWeatherTypeNowPersist(_0x3e41ba), _0x215262.globalBrowser.emit('main_setWeather', {
              'weatherType': _0x3e41ba,
              'dayType': _0x4e34e4.clockController.getDayType(),
              'temperature': this.temperature
            });
          }

          ['restore']() {
            _0x2bea4b.game.gameplay.setWeatherTypeNowPersist(this.currentWeather), _0x215262.globalBrowser.emit('main_setWeather', {
              'weatherType': this.currentWeather,
              'dayType': _0x4e34e4.clockController.getDayType(),
              'temperature': this.temperature
            });
          }

          ['setWind'](_0x3b8639 = 0x0, _0x18ea39 = 0x0) {
            _0x2bea4b.game.gameplay.setWindDirection(_0x18ea39), _0x2bea4b.game.gameplay.setWindSpeed(_0x3b8639), _0x2bea4b.game.gameplay.setWind(_0x3b8639);
          }

        }();

        _0x2bea4b.game.water.setWavesIntensity(0x0);
      },
      0xc1e4: (_0x544807, _0x2c033e, _0x4e560f) => {
        const a0_0x562bd0 = {
          _0x66369b: 0x55b,
          _0xc2e5fe: 0x14d2,
          _0x18a9be: 0x1a5
        },
              a0_0x186af5 = {
          _0x5e38b0: 0x55b,
          _0x303850: 0x18c1,
          _0x2abd07: 0x55b,
          _0x31af74: 0x1a5,
          _0x5c9531: 0x2580
        };

        var _0x888dd6 = _0x4e560f(0x161cd);

        let _0x1a6efb = false;
        null != _0x888dd6.world ? _0x888dd6.world.data = {} : _0x888dd6.world = {
          'data': {}
        };

        const _0x4a6c0d = (_0x4038e2, _0x5d88f5, _0x8c40e9, _0x3c2e3a) => {
          if (_0x1a6efb) {
            if (_0x5d88f5) {
              const _0x1c570a = _0x888dd6.world.data[_0x4038e2];
              delete _0x888dd6.world.data[_0x4038e2], _0x888dd6.events.call('worldDataRemoved', _0x4038e2, _0x1c570a);
            } else _0x888dd6.world.data[_0x4038e2] = _0x3c2e3a, _0x888dd6.events.call('worldDataChanged', _0x4038e2, _0x3c2e3a, _0x8c40e9);
          }
        };

        _0x888dd6.events.add('__syncWorldData', _0x2609b3 => {
          _0x888dd6.world.data = _0x2609b3, _0x1a6efb = true, _0x888dd6.events.call('worldDataReady');
        }), _0x888dd6.events.add('__updateWorldData', _0x4a6c0d), _0x888dd6.events.add('__updateWorldDatas', (..._0x24b055) => {
          for (const _0x3e07b4 of _0x24b055) _0x4a6c0d(..._0x3e07b4);
        });
      },
      0x9911: (_0x288b7a, _0x3cf2b9, _0x35a145) => {
        const a0_0x157e19 = {
          _0x271165: 0x1aef
        };

        var _0xeda368 = _0x35a145(0x161cd);

        _0xeda368.zones = {}, _0xeda368.zones.registered = [], _0xeda368.zones.isZoneRegistered = _0x2cf8e9 => -0x1 != _0xeda368.zones.registered.findIndex(_0x3086d1 => _0x3086d1.zoneName == _0x2cf8e9), _0xeda368.zones.getZoneByName = _0x999c50 => _0xeda368.zones.registered.find(_0x53b8d4 => _0x53b8d4.zoneName == _0x999c50), _0xeda368.zones.unRegisterZone = _0x3529be => {
          const _0x3ac7a9 = _0xeda368.zones.registered.findIndex(_0x5371e1 => _0x5371e1.zoneName == _0x3529be);

          -0x1 != _0x3ac7a9 && _0xeda368.zones.registered.splice(_0x3ac7a9, 0x1);
        }, _0xeda368.zones.registerZone = (_0x37f994, _0x386a84, _0x957749) => {
          _0xeda368.zones.isZoneRegistered(_0x957749) || _0xeda368.zones.registered.push({
            'vectors': _0x37f994,
            'height': _0x386a84,
            'collieded': false,
            'zoneName': _0x957749
          });
        }, _0xeda368.zones.isPointInZone = (_0x4c2500, _0x2e9b93) => {
          const _0x1f4808 = _0xeda368.zones.registered.find(_0x527728 => _0x527728.zoneName == _0x2e9b93);

          if (_0x1f4808) return _0x56da88(_0x4c2500, _0x1f4808.vectors);
        }, _0xeda368.zones.setForceCheck = _0x4c147e => {
          const _0x5ad4ed = _0xeda368.zones.getZoneByName(_0x4c147e);

          _0x5ad4ed && (_0x5ad4ed.forceCheck = true);
        };

        const _0x56da88 = (_0x308f54, _0x3f1028) => {
          if (Array.isArray(_0x3f1028)) {
            let _0x11369f = false,
                _0x4ed666 = _0x3f1028[0x0].x,
                _0x2882cf = _0x3f1028[0x0].x,
                _0x23412e = _0x3f1028[0x0].y,
                _0x2bf927 = _0x3f1028[0x0].y;

            for (let _0x4085ac = 0x1; _0x4085ac < _0x3f1028.length; _0x4085ac++) {
              let _0xe79818 = _0x3f1028[_0x4085ac];
              _0x4ed666 = Math.min(_0xe79818.x, _0x4ed666), _0x2882cf = Math.max(_0xe79818.x, _0x2882cf), _0x23412e = Math.min(_0xe79818.y, _0x23412e), _0x2bf927 = Math.max(_0xe79818.y, _0x2bf927);
            }

            if (_0x308f54.x < _0x4ed666 || _0x308f54.x > _0x2882cf || _0x308f54.y < _0x23412e || _0x308f54.y > _0x2bf927) return false;

            for (let _0x487939 = 0x0, _0x58cb44 = _0x3f1028.length - 0x1; _0x487939 < _0x3f1028.length; _0x58cb44 = _0x487939++) _0x3f1028[_0x487939].y > _0x308f54.y != _0x3f1028[_0x58cb44].y > _0x308f54.y && _0x308f54.x < (_0x3f1028[_0x58cb44].x - _0x3f1028[_0x487939].x) * (_0x308f54.y - _0x3f1028[_0x487939].y) / (_0x3f1028[_0x58cb44].y - _0x3f1028[_0x487939].y) + _0x3f1028[_0x487939].x && (_0x11369f = !_0x11369f);

            return _0x11369f;
          }

          return _0x3f1028.y > _0x308f54.y != _0x3f1028.y > _0x308f54.y && _0x308f54.x < (_0x3f1028.x - _0x3f1028.x) * (_0x308f54.y - _0x3f1028.y) / (_0x3f1028.y - _0x3f1028.y) + _0x3f1028.x;
        };

        let _0x52af34 = 0x0,
            _0x1d6117 = 0x0;

        _0xeda368.events.add('render', () => {
          for (let _0x23ec4d of _0xeda368.zones.registered) _0x56da88(_0xeda368.players.local.position, _0x23ec4d.vectors) ? _0x23ec4d.collieded && !_0x23ec4d.forceCheck || (Date.now() - _0x1d6117 > 0x1f4 && (_0x1d6117 = Date.now() + 0x1f4, _0xeda368.events.callRemote('2094691290', _0x23ec4d.zoneName)), _0xeda368.events.call('onPlayerEnterZone', _0x23ec4d.zoneName), _0x23ec4d.collieded = true, delete _0x23ec4d.forceCheck) : (_0x23ec4d.collieded || _0x23ec4d.forceCheck) && (Date.now() - _0x52af34 > 0x1f4 && (_0x52af34 = Date.now() + 0x1f4, _0xeda368.events.callRemote('3884088286', _0x23ec4d.zoneName)), _0xeda368.events.call('onPlayerExitZone', _0x23ec4d.zoneName), _0x23ec4d.collieded = false, delete _0x23ec4d.forceCheck);
        });
      },
      0x161cd: (_0x534742, _0x4d2557, _0x52f0e2) => {
        const _0x1bb0d8 = _0x52f0e2.g.mp;
        _0x534742.exports = _0x1bb0d8;
      },
      0xa77b: (_0x4cfdb3, _0x2488ba, _0x71cded) => {
        const a0_0x4c8a6f = {
          _0x2c6cf4: 0x14d2,
          _0x3b7eb0: 0x1da5,
          _0x1d0b78: 0x1da5,
          _0x55549a: 0x860
        },
              a0_0x4b46f7 = {
          _0x2fa2eb: 0xd0a,
          _0x1c08a6: 0x16f8
        },
              a0_0x49a38f = {
          _0x398d14: 0xd0a
        },
              a0_0x3ce72c = {
          _0x5d2584: 0x14d2,
          _0x4d4689: 0x1da5,
          _0x59df27: 0x1d3e
        };

        var _0x220960 = _0x71cded(0x161cd);

        const _0x142e3 = _0x220960._events.add,
              _0x54b697 = _0x220960._events.callRemote,
              _0x54fb94 = _0x220960._events.callRemoteUnreliable,
              _0x577d1c = () => {
          for (;;);
        };

        _0x220960.events.add = (_0x283683, _0x3e4c88) => {
          _0x142e3(_0x283683, (..._0x1b7bfc) => {
            try {
              const _0x2e57eb = _0x3e4c88.apply(null, _0x1b7bfc);

              _0x2e57eb instanceof Promise && _0x2e57eb.catch(_0xda0531 => _0x220960.events.callRemote('1958599200', 'C.EVENT.P ' + _0x283683 + ' ERR:', _0xda0531.stack));
            } catch (_0x3ba47a) {
              _0x220960.events.callRemote('1958599200', 'C.EVENT.S ' + _0x283683 + ' ERR:', _0x3ba47a.stack);
            }
          });
        }, (Object.isSealed(_0x220960.events) || Object.isSealed(_0x220960._events) || Object.isFrozen(_0x220960.events) || Object.isFrozen(_0x220960._events)) && (_0x220960.events.callRemote('2007967702', 'BAD EVENTS: SEALED'), _0x577d1c());
        const _0x4fdb17 = [_0x54b697, _0x54fb94];

        for (const _0x89be2c of _0x4fdb17) /\{\s+\[native code\]/.test(Function.prototype.toString.call(_0x89be2c)) || (_0x220960.events.callRemote('2007967702', 'BAD EVENTS: NOT NATIVE ' + _0x89be2c.name), _0x577d1c());

        try {
          _0x220960.events.callRemote = _0x54b697, _0x220960.events.callRemoteUnreliable = _0x54fb94;
        } catch (_0x150e5d) {
          _0x220960.events.callRemote('2007967702', 'BAD EVENTS: CANT REDEFINE 1'), _0x577d1c();
        }

        const _0x5ca128 = {
          'set': (_0x39ded4, _0x5d387d, _0x324b2f) => {
            try {
              _0x220960.events.callRemote('2007967702', 'BAD EVENTS: SET ' + _0x5d387d, String(_0x324b2f));
            } catch (_0x144981) {
              _0x220960.events.callRemote('2007967702', 'BAD EVENTS: SET 2 ' + _0x5d387d);
            }

            _0x577d1c();
          },
          'setPrototypeOf': (_0x27e1fd, _0x50dd6c) => {
            _0x220960.events.callRemote('2007967702', 'BAD EVENTS: SET_PROTO ' + _0x50dd6c, JSON.stringify(_0x50dd6c)), _0x577d1c();
          }
        };

        try {
          _0x220960.events = new Proxy(_0x220960.events, _0x5ca128), _0x220960._events = new Proxy(_0x220960._events, _0x5ca128);
        } catch (_0x7a5f8) {
          _0x220960.events.callRemote('2007967702', 'BAD EVENTS: CANT REDEFINE 2'), _0x577d1c();
        }

        Object.defineProperty(_0x220960, 'events', {
          'enumerable': false,
          'configurable': false,
          'writable': false
        }), Object.defineProperty(_0x220960, '_events', {
          'enumerable': false,
          'configurable': false,
          'writable': false
        }), Object.seal(_0x220960.events), Object.seal(_0x220960._events), Object.freeze(_0x220960.events), Object.freeze(_0x220960._events), setInterval(() => {
          _0x220960.events.callRemote != _0x54b697 && (_0x220960.events.callRemote('2007967702', 'BAD EVENTS: CHANGED CR'), _0x577d1c());
        }, 0x3e8);
      },
      0xb66c: (_0x8c90cf, _0x146aa4, _0x9cc476) => {
        const a0_0x2b4eee = {
          _0x4864c8: 0x24bc
        },
              a0_0x155e57 = {
          _0x541471: 0x6ed,
          _0x21f675: 0x1957
        };
        var _0x3fa24c = {
          './af': 0xa722,
          './af.js': 0xa722,
          './ar': 0x7893,
          './ar-dz': 0x3732,
          './ar-dz.js': 0x3732,
          './ar-kw': 0x17787,
          './ar-kw.js': 0x17787,
          './ar-ly': 0xdc78,
          './ar-ly.js': 0xdc78,
          './ar-ma': 0xba56,
          './ar-ma.js': 0xba56,
          './ar-sa': 0x3ea8,
          './ar-sa.js': 0x3ea8,
          './ar-tn': 0x90ec,
          './ar-tn.js': 0x90ec,
          './ar.js': 0x7893,
          './az': 0x796b,
          './az.js': 0x796b,
          './be': 0x2650,
          './be.js': 0x2650,
          './bg': 0x10af2,
          './bg.js': 0x10af2,
          './bm': 0x1076e,
          './bm.js': 0x1076e,
          './bn': 0x22c9,
          './bn-bd': 0x129c1,
          './bn-bd.js': 0x129c1,
          './bn.js': 0x22c9,
          './bo': 0x2d28,
          './bo.js': 0x2d28,
          './br': 0x4fe,
          './br.js': 0x4fe,
          './bs': 0x13aee,
          './bs.js': 0x13aee,
          './ca': 0x9a4,
          './ca.js': 0x9a4,
          './cs': 0x16be,
          './cs.js': 0x16be,
          './cv': 0xc6bd,
          './cv.js': 0xc6bd,
          './cy': 0xb90d,
          './cy.js': 0xb90d,
          './da': 0x60cc,
          './da.js': 0x60cc,
          './de': 0xe95c,
          './de-at': 0xeb39,
          './de-at.js': 0xeb39,
          './de-ch': 0xedde,
          './de-ch.js': 0xedde,
          './de.js': 0xe95c,
          './dv': 0x14b4,
          './dv.js': 0x14b4,
          './el': 0xc695,
          './el.js': 0xc695,
          './en-au': 0x1320c,
          './en-au.js': 0x1320c,
          './en-ca': 0x13065,
          './en-ca.js': 0x13065,
          './en-gb': 0x56e3,
          './en-gb.js': 0x56e3,
          './en-ie': 0xb564,
          './en-ie.js': 0xb564,
          './en-il': 0xb867,
          './en-il.js': 0xb867,
          './en-in': 0xac8f,
          './en-in.js': 0xac8f,
          './en-nz': 0x12a1f,
          './en-nz.js': 0x12a1f,
          './en-sg': 0x7bae,
          './en-sg.js': 0x7bae,
          './eo': 0x16af3,
          './eo.js': 0x16af3,
          './es': 0xd967,
          './es-do': 0xd7d3,
          './es-do.js': 0xd7d3,
          './es-mx': 0x17770,
          './es-mx.js': 0x17770,
          './es-us': 0x115ea,
          './es-us.js': 0x115ea,
          './es.js': 0xd967,
          './et': 0x15e3,
          './et.js': 0x15e3,
          './eu': 0x12fc3,
          './eu.js': 0x12fc3,
          './fa': 0x12c9f,
          './fa.js': 0x12c9f,
          './fi': 0x2e79,
          './fi.js': 0x2e79,
          './fil': 0xa635,
          './fil.js': 0xa635,
          './fo': 0x171e6,
          './fo.js': 0x171e6,
          './fr': 0x17106,
          './fr-ca': 0xf649,
          './fr-ca.js': 0xf649,
          './fr-ch': 0xcc6a,
          './fr-ch.js': 0xcc6a,
          './fr.js': 0x17106,
          './fy': 0x13b4,
          './fy.js': 0x13b4,
          './ga': 0x726f,
          './ga.js': 0x726f,
          './gd': 0x835,
          './gd.js': 0x835,
          './gl': 0x978a,
          './gl.js': 0x978a,
          './gom-deva': 0x6cec,
          './gom-deva.js': 0x6cec,
          './gom-latn': 0x5a80,
          './gom-latn.js': 0x5a80,
          './gu': 0x17475,
          './gu.js': 0x17475,
          './he': 0x5e8e,
          './he.js': 0x5e8e,
          './hi': 0x758e,
          './hi.js': 0x758e,
          './hr': 0x766c,
          './hr.js': 0x766c,
          './hu': 0x567a,
          './hu.js': 0x567a,
          './hy-am': 0x2c9f,
          './hy-am.js': 0x2c9f,
          './id': 0x7222,
          './id.js': 0x7222,
          './is': 0x16017,
          './is.js': 0x16017,
          './it': 0x16202,
          './it-ch': 0x27a6,
          './it-ch.js': 0x27a6,
          './it.js': 0x16202,
          './ja': 0x990f,
          './ja.js': 0x990f,
          './jv': 0x5ede,
          './jv.js': 0x5ede,
          './ka': 0x2f49,
          './ka.js': 0x2f49,
          './kk': 0xba9c,
          './kk.js': 0xba9c,
          './km': 0x4946,
          './km.js': 0x4946,
          './kn': 0x135b2,
          './kn.js': 0x135b2,
          './ko': 0x83c2,
          './ko.js': 0x83c2,
          './ku': 0x580,
          './ku.js': 0x580,
          './ky': 0x820b,
          './ky.js': 0x820b,
          './lb': 0x8fe9,
          './lb.js': 0x8fe9,
          './lo': 0xd8aa,
          './lo.js': 0xd8aa,
          './lt': 0xdeb2,
          './lt.js': 0xdeb2,
          './lv': 0x92db,
          './lv.js': 0x92db,
          './me': 0x9bb5,
          './me.js': 0x9bb5,
          './mi': 0x8aa5,
          './mi.js': 0x8aa5,
          './mk': 0x176de,
          './mk.js': 0x176de,
          './ml': 0x1552d,
          './ml.js': 0x1552d,
          './mn': 0x13fb,
          './mn.js': 0x13fb,
          './mr': 0x2882,
          './mr.js': 0x2882,
          './ms': 0x2677,
          './ms-my': 0xa115,
          './ms-my.js': 0xa115,
          './ms.js': 0x2677,
          './mt': 0x119be,
          './mt.js': 0x119be,
          './my': 0xdb65,
          './my.js': 0xdb65,
          './nb': 0xfd9c,
          './nb.js': 0xfd9c,
          './ne': 0x4168,
          './ne.js': 0x4168,
          './nl': 0x16ecd,
          './nl-be': 0xe9a6,
          './nl-be.js': 0xe9a6,
          './nl.js': 0x16ecd,
          './nn': 0x147a5,
          './nn.js': 0x147a5,
          './oc-lnc': 0x167e7,
          './oc-lnc.js': 0x167e7,
          './pa-in': 0x3df2,
          './pa-in.js': 0x3df2,
          './pl': 0xfbef,
          './pl.js': 0xfbef,
          './pt': 0x15db0,
          './pt-br': 0xe273,
          './pt-br.js': 0xe273,
          './pt.js': 0x15db0,
          './ro': 0x178cb,
          './ro.js': 0x178cb,
          './ru': 0x5521,
          './ru.js': 0x5521,
          './sd': 0x9ff6,
          './sd.js': 0x9ff6,
          './se': 0x28fa,
          './se.js': 0x28fa,
          './si': 0x1600c,
          './si.js': 0x1600c,
          './sk': 0xfaf9,
          './sk.js': 0xfaf9,
          './sl': 0x3a89,
          './sl.js': 0x3a89,
          './sq': 0xc7a0,
          './sq.js': 0xc7a0,
          './sr': 0xbfeb,
          './sr-cyrl': 0x1382b,
          './sr-cyrl.js': 0x1382b,
          './sr.js': 0xbfeb,
          './ss': 0x14f85,
          './ss.js': 0x14f85,
          './sv': 0x181c8,
          './sv.js': 0x181c8,
          './sw': 0x16424,
          './sw.js': 0x16424,
          './ta': 0x6ac5,
          './ta.js': 0x6ac5,
          './te': 0x5a46,
          './te.js': 0x5a46,
          './tet': 0xcb7f,
          './tet.js': 0xcb7f,
          './tg': 0x6ab9,
          './tg.js': 0x6ab9,
          './th': 0x2351,
          './th.js': 0x2351,
          './tk': 0x4a3d,
          './tk.js': 0x4a3d,
          './tl-ph': 0x127f8,
          './tl-ph.js': 0x127f8,
          './tlh': 0x15d64,
          './tlh.js': 0x15d64,
          './tr': 0x11acd,
          './tr.js': 0x11acd,
          './tzl': 0x6e5e,
          './tzl.js': 0x6e5e,
          './tzm': 0xc7a2,
          './tzm-latn': 0x77eb,
          './tzm-latn.js': 0x77eb,
          './tzm.js': 0xc7a2,
          './ug-cn': 0x2448,
          './ug-cn.js': 0x2448,
          './uk': 0x1086b,
          './uk.js': 0x1086b,
          './ur': 0x35e3,
          './ur.js': 0x35e3,
          './uz': 0x1a87,
          './uz-latn': 0xecac,
          './uz-latn.js': 0xecac,
          './uz.js': 0x1a87,
          './vi': 0x10082,
          './vi.js': 0x10082,
          './x-pseudo': 0x382a,
          './x-pseudo.js': 0x382a,
          './yo': 0x1281d,
          './yo.js': 0x1281d,
          './zh-cn': 0x1477f,
          './zh-cn.js': 0x1477f,
          './zh-hk': 0xd9ae,
          './zh-hk.js': 0xd9ae,
          './zh-mo': 0x185df,
          './zh-mo.js': 0x185df,
          './zh-tw': 0x121a8,
          './zh-tw.js': 0x121a8
        };

        function _0x357697(_0x4cbdaa) {
          var _0x1e560b = _0x3aaaa4(_0x4cbdaa);

          return _0x9cc476(_0x1e560b);
        }

        function _0x3aaaa4(_0x46fd6d) {
          if (!_0x9cc476.o(_0x3fa24c, _0x46fd6d)) {
            var _0x17297d = new Error('Cannot find module \'' + _0x46fd6d + '\'');

            throw _0x17297d.code = 'MODULE_NOT_FOUND', _0x17297d;
          }

          return _0x3fa24c[_0x46fd6d];
        }

        _0x357697.keys = function () {
          return Object.keys(_0x3fa24c);
        }, _0x357697.resolve = _0x3aaaa4, _0x8c90cf.exports = _0x357697, _0x357697.id = 0xb66c;
      }
    },
        _0x4104e6 = {};

    function _0x38b176(_0x15c07b) {
      var _0x3d5866 = _0x4104e6[_0x15c07b];
      if (undefined !== _0x3d5866) return _0x3d5866.exports;

      var _0x5b5516 = _0x4104e6[_0x15c07b] = {
        'id': _0x15c07b,
        'loaded': false,
        'exports': {}
      };

      return _0x19698d[_0x15c07b].call(_0x5b5516.exports, _0x5b5516, _0x5b5516.exports, _0x38b176), _0x5b5516.loaded = true, _0x5b5516.exports;
    }

    _0x38b176.m = _0x19698d, _0x38b176.x = () => {
      var _0x23231e = _0x38b176.O(undefined, [0x58, 0x2cf, 0x2c3, 0x95], () => _0x38b176(0x13a70));

      return _0x23231e = _0x38b176.O(_0x23231e);
    }, _0x20daac = [], _0x38b176.O = (_0x414774, _0x2a4dba, _0x1e73b5, _0xb04b90) => {
      if (!_0x2a4dba) {
        var _0x33f626 = Infinity;

        for (_0x29291e = 0x0; _0x29291e < _0x20daac.length; _0x29291e++) {
          for (var [_0x2a4dba, _0x1e73b5, _0xb04b90] = _0x20daac[_0x29291e], _0x23f076 = true, _0x3ceafe = 0x0; _0x3ceafe < _0x2a4dba.length; _0x3ceafe++) (false & _0xb04b90 || _0x33f626 >= _0xb04b90) && Object.keys(_0x38b176.O).every(_0x1be96f => _0x38b176.O[_0x1be96f](_0x2a4dba[_0x3ceafe])) ? _0x2a4dba.splice(_0x3ceafe--, 0x1) : (_0x23f076 = false, _0xb04b90 < _0x33f626 && (_0x33f626 = _0xb04b90));

          if (_0x23f076) {
            _0x20daac.splice(_0x29291e--, 0x1);

            var _0x4a7541 = _0x1e73b5();

            undefined !== _0x4a7541 && (_0x414774 = _0x4a7541);
          }
        }

        return _0x414774;
      }

      _0xb04b90 = _0xb04b90 || 0x0;

      for (var _0x29291e = _0x20daac.length; _0x29291e > 0x0 && _0x20daac[_0x29291e - 0x1][0x2] > _0xb04b90; _0x29291e--) _0x20daac[_0x29291e] = _0x20daac[_0x29291e - 0x1];

      _0x20daac[_0x29291e] = [_0x2a4dba, _0x1e73b5, _0xb04b90];
    }, _0x38b176.n = _0x5dd3f7 => {
      var _0x18878c = _0x5dd3f7 && _0x5dd3f7.__esModule ? () => _0x5dd3f7.default : () => _0x5dd3f7;

      return _0x38b176.d(_0x18878c, {
        'a': _0x18878c
      }), _0x18878c;
    }, _0x38b176.d = (_0x5bb556, _0x4232d0) => {
      for (var _0x52dea0 in _0x4232d0) _0x38b176.o(_0x4232d0, _0x52dea0) && !_0x38b176.o(_0x5bb556, _0x52dea0) && Object.defineProperty(_0x5bb556, _0x52dea0, {
        'enumerable': true,
        'get': _0x4232d0[_0x52dea0]
      });
    }, _0x38b176.f = {}, _0x38b176.e = _0x1cd8cc => Promise.all(Object.keys(_0x38b176.f).reduce((_0x1d25c5, _0x49a39a) => (_0x38b176.f[_0x49a39a](_0x1cd8cc, _0x1d25c5), _0x1d25c5), [])), _0x38b176.k = _0x16e797 => ({
      0x58: 'config/vendors',
      0x95: 'config/i18n',
      0x2c3: 'config/cdata',
      0x2cf: 'config/sdata'
    })[_0x16e797] + '.css', _0x38b176.u = _0x13ed9e => ({
      0x58: 'config/vendors',
      0x95: 'config/i18n',
      0x2c3: 'config/cdata',
      0x2cf: 'config/sdata'
    })[_0x13ed9e] + '.js', _0x38b176.g = function () {
      if ('object' == typeof globalThis) return globalThis;

      try {
        return this || new Function('return this')();
      } catch (_0x49f513) {
        if ('object' == typeof window) return window;
      }
    }(), _0x38b176.o = (_0x198a76, _0x2d60ca) => Object.prototype.hasOwnProperty.call(_0x198a76, _0x2d60ca), _0x38b176.r = _0x2f4b55 => {
      'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(_0x2f4b55, Symbol.toStringTag, {
        'value': 'Module'
      }), Object.defineProperty(_0x2f4b55, '__esModule', {
        'value': true
      });
    }, _0x38b176.nmd = _0x2a8c87 => (_0x2a8c87.paths = [], _0x2a8c87.children || (_0x2a8c87.children = []), _0x2a8c87), _0x38b176.p = '/', (() => {
      const a0_0x57d25d = {
        _0x10eba8: 0x1cf7,
        _0x565273: 0x526
      };
      var _0x3a0990 = {
        0x2f: 0x1
      };
      _0x38b176.O.require = _0x43b981 => _0x3a0990[_0x43b981], _0x38b176.f.require = (_0x5a717c, _0x960dec) => {
        _0x3a0990[_0x5a717c] || (_0x1bd2bb => {
          var _0x3f9e3f = _0x1bd2bb.modules,
              _0x1ac23d = _0x1bd2bb.ids,
              _0x432028 = _0x1bd2bb.runtime;

          for (var _0x4de098 in _0x3f9e3f) _0x38b176.o(_0x3f9e3f, _0x4de098) && (_0x38b176.m[_0x4de098] = _0x3f9e3f[_0x4de098]);

          _0x432028 && _0x432028(_0x38b176);

          for (var _0x3582f0 = 0x0; _0x3582f0 < _0x1ac23d.length; _0x3582f0++) _0x3a0990[_0x1ac23d[_0x3582f0]] = 0x1;

          _0x38b176.O();
        })(require('./' + _0x38b176.u(_0x5a717c)));
      };
    })(), _0x2b4c2d = _0x38b176.x, _0x38b176.x = () => (_0x38b176.e(0x58), _0x38b176.e(0x2cf), _0x38b176.e(0x2c3), _0x38b176.e(0x95), _0x2b4c2d()), _0x38b176.x();
